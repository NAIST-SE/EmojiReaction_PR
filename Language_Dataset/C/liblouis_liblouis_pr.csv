liblouis/liblouis,https://github.com/liblouis/liblouis,160,2016-03-09T05:16:00Z,2016-06-16T13:01:22Z,2016-06-16T13:01:22Z,MERGED,True,8,3,1,https://github.com/michaelDCurran,"Stop buffer overrun in lou_getProgramPath, and also free memory after…",1,[],https://github.com/liblouis/liblouis/pull/160,https://github.com/michaelDCurran,1,https://github.com/liblouis/liblouis/pull/160,"As compilation on Windows could  define ""UNICODE"", GetModuleFilename may provide a unicode path, yet,  further code in lou_getProgramPath expects it to be single-byte chars.
Therefore, explicitly use GetModuleFilenameA.
This has been the source of a long-standing crash in NVDA on first use of lou_translate.
Specifically in lou_getProgramPath:
As NVDA compiles on Windows with UNICODE defined, GetModuleFilename resolves to GetModuleFilenameW.
Therefore buffer ends up containing a unicode path after GetModuleFilename is called.
But then, the call to strdup only allocates and copies the first character as the second character would be a \0 (first part of a unicode character).
The code then continues to play with this path thinking it is longer than it is, but the fianl bad part is the call to strncpy, which copies up to length character from path to path. But, because only one byte was allocated, this causes a major buffer overrun. In NVDA's case, of about 36 bytes.","As compilation on Windows could  define ""UNICODE"", GetModuleFilename may provide a unicode path, yet,  further code in lou_getProgramPath expects it to be single-byte chars.
Therefore, explicitly use GetModuleFilenameA.
This has been the source of a long-standing crash in NVDA on first use of lou_translate.
Specifically in lou_getProgramPath:
As NVDA compiles on Windows with UNICODE defined, GetModuleFilename resolves to GetModuleFilenameW.
Therefore buffer ends up containing a unicode path after GetModuleFilename is called.
But then, the call to strdup only allocates and copies the first character as the second character would be a \0 (first part of a unicode character).
The code then continues to play with this path thinking it is longer than it is, but the fianl bad part is the call to strncpy, which copies up to length character from path to path. But, because only one byte was allocated, this causes a major buffer overrun. In NVDA's case, of about 36 bytes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,160,2016-03-09T05:16:00Z,2016-06-16T13:01:22Z,2016-06-16T13:01:22Z,MERGED,True,8,3,1,https://github.com/michaelDCurran,"Stop buffer overrun in lou_getProgramPath, and also free memory after…",1,[],https://github.com/liblouis/liblouis/pull/160,https://github.com/dkager,2,https://github.com/liblouis/liblouis/pull/160#issuecomment-194330296,"As compilation on Windows could  define ""UNICODE"", GetModuleFilename may provide a unicode path, yet,  further code in lou_getProgramPath expects it to be single-byte chars.
Therefore, explicitly use GetModuleFilenameA.
This has been the source of a long-standing crash in NVDA on first use of lou_translate.
Specifically in lou_getProgramPath:
As NVDA compiles on Windows with UNICODE defined, GetModuleFilename resolves to GetModuleFilenameW.
Therefore buffer ends up containing a unicode path after GetModuleFilename is called.
But then, the call to strdup only allocates and copies the first character as the second character would be a \0 (first part of a unicode character).
The code then continues to play with this path thinking it is longer than it is, but the fianl bad part is the call to strncpy, which copies up to length character from path to path. But, because only one byte was allocated, this causes a major buffer overrun. In NVDA's case, of about 36 bytes.","Ooh, good catch!
Note that compiling with MSVC using the /analyze switch reveals a slew of 'possibly null' warnings and such that may also cause issues.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,160,2016-03-09T05:16:00Z,2016-06-16T13:01:22Z,2016-06-16T13:01:22Z,MERGED,True,8,3,1,https://github.com/michaelDCurran,"Stop buffer overrun in lou_getProgramPath, and also free memory after…",1,[],https://github.com/liblouis/liblouis/pull/160,https://github.com/dkager,3,https://github.com/liblouis/liblouis/pull/160#issuecomment-222671888,"As compilation on Windows could  define ""UNICODE"", GetModuleFilename may provide a unicode path, yet,  further code in lou_getProgramPath expects it to be single-byte chars.
Therefore, explicitly use GetModuleFilenameA.
This has been the source of a long-standing crash in NVDA on first use of lou_translate.
Specifically in lou_getProgramPath:
As NVDA compiles on Windows with UNICODE defined, GetModuleFilename resolves to GetModuleFilenameW.
Therefore buffer ends up containing a unicode path after GetModuleFilename is called.
But then, the call to strdup only allocates and copies the first character as the second character would be a \0 (first part of a unicode character).
The code then continues to play with this path thinking it is longer than it is, but the fianl bad part is the call to strncpy, which copies up to length character from path to path. But, because only one byte was allocated, this causes a major buffer overrun. In NVDA's case, of about 36 bytes.",I feel we should incorporate this into the next release.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/161,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/dkager,2,https://github.com/liblouis/liblouis/pull/161#issuecomment-199151609,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","Any chance of a co-op on this today?
Van: Christian Egli [mailto:notifications@github.com]
Verzonden: vrijdag 18 maart 2016 16:11
Aan: liblouis/liblouis liblouis@noreply.github.com
CC: Davy Kager DavyKager@dedicon.nl
Onderwerp: [liblouis] Feature/merge mg changes (#161)
These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkagerhttps://github.com/dkager can you make sure I didn't screw anything up?
Thanks

You can view, comment on, or merge this pull request online at:
#161
Commit Summary

Updated capitalization to behave like other emphases
Fixed resolveWords to check if bit_symbol defined.
Fixed resolveResets to check for bit_symbol.
Updated pattern code with oring and grouping.
Fixed resolveEmphasisPassages to handle input ending with spaces.
Updated pattern code.
Added pattern_print.
Fixed seqafterexpression handling.
Fixed minor pattern bugs.
Added Appendix 1 test.
Cleaned up Appendix 1.
Fixed memory leak when pattern compiling.
Updated UEB 10.6 AND 10.9.
Added no contraction check for pattern opcode.
Pruned old UEB rules.
Added check emphasis change check for match opcode
Cleaned out old UEB rules.
Updated UEB 10.9.5.
UEB table cleanup.
Fixed empheses ordering
Fixed repeat _ .
Fixed partial word emphasis ordering.
Removed conflicting therefore <-> Child
Fixed trans_note_# at end of input.
Added no_contract.
Fixed emphesis indicator ordering.
Set computer_braille to pass input char to output directly.
Fixed computer_braille encoding
Update ar and gh UEB entries.
Fixed x00b4 in UEB table (again).

File Changes

M liblouis/Makefile.amhttps://github.com//pull/161/files#diff-0 (3)
M liblouis/compileTranslationTable.chttps://github.com//pull/161/files#diff-1 (262)
M liblouis/liblouis.h.inhttps://github.com//pull/161/files#diff-2 (2)
M liblouis/lou_translateString.chttps://github.com//pull/161/files#diff-3 (715)
M liblouis/louis.hhttps://github.com//pull/161/files#diff-4 (20)
A liblouis/pattern.chttps://github.com//pull/161/files#diff-5 (1706)
M tables/en-ueb-chardefs.utihttps://github.com//pull/161/files#diff-6 (18)
M tables/en-ueb-g1.ctbhttps://github.com//pull/161/files#diff-7 (46)
M tables/en-ueb-g2.ctbhttps://github.com//pull/161/files#diff-8 (2437)
M tests/capitalization.chttps://github.com//pull/161/files#diff-9 (2)
M tests/ueb_test_data/input-ueb-10-13-contractions.txthttps://github.com//pull/161/files#diff-10 (83)
M tests/yaml/en-ueb-02-stand_alone.yamlhttps://github.com//pull/161/files#diff-11 (1)
M tests/yaml/en-ueb-03-symbols.yamlhttps://github.com//pull/161/files#diff-12 (1)
M tests/yaml/en-ueb-05-grade_1_mode.yamlhttps://github.com//pull/161/files#diff-13 (2)
M tests/yaml/en-ueb-06-numeric_mode.yamlhttps://github.com//pull/161/files#diff-14 (2)
M tests/yaml/en-ueb-08-capitalization.yamlhttps://github.com//pull/161/files#diff-15 (1)
M tests/yaml/en-ueb-10-07-contractions.yamlhttps://github.com//pull/161/files#diff-16 (14)
M tests/yaml/en-ueb-10-13-contractions.yamlhttps://github.com//pull/161/files#diff-17 (51)
M tests/yaml/en-ueb-g1_harness.yamlhttps://github.com//pull/161/files#diff-18 (2)
M tests/yaml/en-ueb-g2-dictionary_harness.yamlhttps://github.com//pull/161/files#diff-19 (754)
M tools/lou_compare.chttps://github.com//pull/161/files#diff-20 (50)

Patch Links:

https://github.com/liblouis/liblouis/pull/161.patch
https://github.com/liblouis/liblouis/pull/161.diff

—
You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHubhttps://github.com//pull/161
DISCLAIMER:
De informatie verzonden met dit e-mail bericht is uitsluitend bestemd voor de geadresseerde. Indien u niet de beoogde geadresseerde bent, verzoeken wij u vriendelijk dit aan de afzender te melden (of via: info@dedicon.nlmailto:info@dedicon.nl) en het origineel en eventuele kopieën te verwijderen.
The information sent in this e-mail is solely intended for the individual or company to whom it is addressed. If you received this message in error, please notify the sender immediately (or mail to info@dedicon.nlmailto:info@dedicon.nl) and delete the original message and possible copies.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/161#issuecomment-199238031,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","On 03/21/2016 08:11 AM, Davy Kager wrote:

Any chance of a co-op on this today?

Sorry, I'm out of the office until 2:30, maybe 3. After that I could do it.

Christian Egli
Swiss Library for the Blind, Visually Impaired and Print Disabled
Grubenstrasse 12, CH-8045 Zürich, Switzerland

Das neue Katalog-Angebot ist ab sofort verfuegbar. Mehr zu unseren Katalogen erfahren Sie unter http://www.sbs.ch/kataloge.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/dkager,4,https://github.com/liblouis/liblouis/pull/161#issuecomment-199238299,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","Let’s try tomorrow/Thursday.
Van: Christian Egli [mailto:notifications@github.com]
Verzonden: maandag 21 maart 2016 12:48
Aan: liblouis/liblouis liblouis@noreply.github.com
CC: Davy Kager DavyKager@dedicon.nl
Onderwerp: Re: [liblouis] Feature/merge mg changes (#161)
On 03/21/2016 08:11 AM, Davy Kager wrote:

Any chance of a co-op on this today?

Sorry, I'm out of the office until 2:30, maybe 3. After that I could do it.

Christian Egli
Swiss Library for the Blind, Visually Impaired and Print Disabled
Grubenstrasse 12, CH-8045 Zürich, Switzerland

Das neue Katalog-Angebot ist ab sofort verfuegbar. Mehr zu unseren Katalogen erfahren Sie unter http://www.sbs.ch/kataloge.
—
You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHubhttps://github.com//pull/161#issuecomment-199238031
DISCLAIMER:
De informatie verzonden met dit e-mail bericht is uitsluitend bestemd voor de geadresseerde. Indien u niet de beoogde geadresseerde bent, verzoeken wij u vriendelijk dit aan de afzender te melden (of via: info@dedicon.nlmailto:info@dedicon.nl) en het origineel en eventuele kopieën te verwijderen.
The information sent in this e-mail is solely intended for the individual or company to whom it is addressed. If you received this message in error, please notify the sender immediately (or mail to info@dedicon.nlmailto:info@dedicon.nl) and delete the original message and possible copies.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/dkager,5,https://github.com/liblouis/liblouis/pull/161#issuecomment-199711653,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","I run into two problems on Windows:
pattern.c
..\liblouis\pattern.c(158): error C2143: syntax error: missing ')' before '('
..\liblouis\pattern.c(158): error C2059: syntax error: ')'
..\liblouis\pattern.c(158): error C2143: syntax error: missing ')' before ';'
..\liblouis\pattern.c(158): error C2091: function returns function
..\liblouis\pattern.c(1686): warning C4013: 'alloca' undefined; assuming extern returning int
..\liblouis\pattern.c(1686): warning C4047: '=': 'int *' differs in levels of indirection from 'int'

Not sure what the first one means. The second is an undefined function/keyword. Looking at MSDN I think one could use _alloca on MSVC, but in more general terms I feel this technique is very tricky. A standard malloc sounds much safer and more portable. What do you think Christian?
CC @MikeGray-APH",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/MikeGray-APH,6,https://github.com/liblouis/liblouis/pull/161#issuecomment-199836235,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","I don't have access to MSVC so I use MinGW.  malloc would be fine, just remember to free loop_cnts before returning from the function.
The equivalent on MSVC for  __attribute__((__packed__)) is something like #pragma pack(1).  You could probably just remove the  __attribute__((__packed__)).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/dkager,7,https://github.com/liblouis/liblouis/pull/161#issuecomment-199836782,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","Thanks, will look at it!
Van: MikeGray-APH [mailto:notifications@github.com]
Verzonden: dinsdag 22 maart 2016 15:21
Aan: liblouis/liblouis liblouis@noreply.github.com
CC: Davy Kager DavyKager@dedicon.nl
Onderwerp: Re: [liblouis] Feature/merge mg changes (#161)
I don't have access to MSVC so I use MinGW. malloc would be fine, just remember to free loop_cnts before returning from the function.
The equivalent on MSVC for attribute((packed)) is something like #pragma pack(1). You could probably just remove the attribute((packed)).
—
You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHubhttps://github.com//pull/161#issuecomment-199836235
DISCLAIMER:
De informatie verzonden met dit e-mail bericht is uitsluitend bestemd voor de geadresseerde. Indien u niet de beoogde geadresseerde bent, verzoeken wij u vriendelijk dit aan de afzender te melden (of via: info@dedicon.nlmailto:info@dedicon.nl) en het origineel en eventuele kopieën te verwijderen.
The information sent in this e-mail is solely intended for the individual or company to whom it is addressed. If you received this message in error, please notify the sender immediately (or mail to info@dedicon.nlmailto:info@dedicon.nl) and delete the original message and possible copies.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/161#issuecomment-200272295,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","Generally I'm not a fan of limiting ourselves to last century technology just in the interest of portability. I think the programmer should have a decent tool chest to pick from, so if alloca is better suited for the job we should be able to use it. And, here's the catch, let gnulib worry about on which obscure platform alloca needs to be reimplemented with some glue code.
So I think we should (at least in the long run) try to make gnulib work instead of working around deficiencies of target platforms.
But for the issue at hand, what I really care is to have the ueb changes integrated and the regressions fixed. Let's not get too hung up about stuff like alloca vs malloc. If need be just change it to malloc.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/dkager,9,https://github.com/liblouis/liblouis/pull/161#issuecomment-200705144,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","so if alloca is better suited for the job we should be able to use it.

Is it? This is the first time I see it in the wild.
Van: Christian Egli [mailto:notifications@github.com]
Verzonden: woensdag 23 maart 2016 10:48
Aan: liblouis/liblouis liblouis@noreply.github.com
CC: Davy Kager DavyKager@dedicon.nl
Onderwerp: Re: [liblouis] Feature/merge mg changes (#161)
Generally I'm not a fan of limiting ourselves to last century technology just in the interest of portability. I think the programmer should have a decent tool chest to pick from, so if alloca is better suited for the job we should be able to use it. And, here's the catch, let gnulibhttps://www.gnu.org/software/gnulib/ worry about on which obscure platform alloca needs to be reimplemented with some glue code.
So I think we should (at least in the long run) try to make gnulibhttps://www.gnu.org/software/gnulib/ work instead of working around deficiencies of target platforms.
But for the issue at hand, what I really care is to have the ueb changes integrated and the regressions fixed. Let's not get too hung up about stuff like alloca vs malloc. If need be just change it to malloc.
—
You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHubhttps://github.com//pull/161#issuecomment-200272295
DISCLAIMER:
De informatie verzonden met dit e-mail bericht is uitsluitend bestemd voor de geadresseerde. Indien u niet de beoogde geadresseerde bent, verzoeken wij u vriendelijk dit aan de afzender te melden (of via: info@dedicon.nlmailto:info@dedicon.nl) en het origineel en eventuele kopieën te verwijderen.
The information sent in this e-mail is solely intended for the individual or company to whom it is addressed. If you received this message in error, please notify the sender immediately (or mail to info@dedicon.nlmailto:info@dedicon.nl) and delete the original message and possible copies.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,161,2016-03-18T15:10:54Z,2016-03-24T08:48:21Z,2016-07-01T08:45:20Z,MERGED,True,4123,2063,23,https://github.com/egli,Feature/merge mg changes,34,[],https://github.com/liblouis/liblouis/pull/161,https://github.com/MikeGray-APH,10,https://github.com/liblouis/liblouis/pull/161#issuecomment-200974176,"These are most of the outstanding patches from Mike's branch at https://github.com/MikeGray-APH/liblouis/tree/mrg_ueb_update.
The merge was not entirely trivial as the code had grown apart. @dkager can you make sure I didn't screw anything up?
Thanks","If you all are interested, you can see my current progress at https://github.com/MikeGray-APH/liblouis/tree/feature/merge_mg_changes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,165,2016-04-27T09:28:50Z,2016-04-27T10:48:31Z,2016-04-27T10:48:31Z,MERGED,True,16,0,2,https://github.com/jukkae,Finnish symbol additions,2,[],https://github.com/liblouis/liblouis/pull/165,https://github.com/jukkae,1,https://github.com/liblouis/liblouis/pull/165,"Add some common missing symbols to tables.
Add rule for undefined characters.","Add some common missing symbols to tables.
Add rule for undefined characters.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,166,2016-04-27T10:18:04Z,2016-04-28T13:01:09Z,2016-04-28T13:01:09Z,MERGED,True,20,0,1,https://github.com/jukkae,Add tests for emphasis edge cases,1,[],https://github.com/liblouis/liblouis/pull/166,https://github.com/jukkae,1,https://github.com/liblouis/liblouis/pull/166,Add more tests for cases where only a part of a word is emphasized.,Add more tests for cases where only a part of a word is emphasized.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,167,2016-06-07T09:06:04Z,2016-06-16T12:41:11Z,2016-07-01T08:44:31Z,CLOSED,False,390,0,6,https://github.com/egli,Added new slovak table,1,[],https://github.com/liblouis/liblouis/pull/167,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/167,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,167,2016-06-07T09:06:04Z,2016-06-16T12:41:11Z,2016-07-01T08:44:31Z,CLOSED,False,390,0,6,https://github.com/egli,Added new slovak table,1,[],https://github.com/liblouis/liblouis/pull/167,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/167#issuecomment-224222793,,This fixes #163,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,167,2016-06-07T09:06:04Z,2016-06-16T12:41:11Z,2016-07-01T08:44:31Z,CLOSED,False,390,0,6,https://github.com/egli,Added new slovak table,1,[],https://github.com/liblouis/liblouis/pull/167,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/167#issuecomment-226473348,,Merged manually into master,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,168,2016-06-10T09:05:22Z,2016-06-13T12:51:15Z,2016-06-13T12:51:43Z,MERGED,True,95,89,20,https://github.com/egli,Feature/emphasis handling cleanup,5,[],https://github.com/liblouis/liblouis/pull/168,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/168,"Hi all
One of the last regressions we have on the ueb_update branch has to to with emphasis ending.
I'm trying to fix this but it occurs to me that I have some kind of misunderstanding how emphasis is handled.
I previously thought (as documented in the wiki) that a table defines either (I'm just making the dot patterns up):
begemph italic 46
endemph italic 46-3

and then has basic emphasis handling where all emphasis is handled the same way regardless of phrase length, etc
or the table defines rules such as
begemphword italic 46
endemphword italic 46-3
begemphprase italic 46-46
endemphphrase italic before 46-3
lenemphphrase italic 3

and then liblouis would use these indicators depending on whether the phrase is long enough. Within a word it would also use the indicator defined with begemphword and endemphword.
So in my understanding it did not make any sense to define both begemph and begemphword as they were addressing different use cases.
As it turns out on the ueb_update branch quite a few tables do this. This might be an oversight when porting them to the new opcode syntax. The en-ueb-g1.ctb table even defines different dot patterns for begemphword and begemph.
So, the question is: Is my understanding of how emphasis is going to handled correct?
I have a branch (feature/emphasis_handling_cleanup) where I tried to correct all tables to use the proper emphasis opcodes. I get one additional failure compared to the feature/ueb_update branch and it might be that it is the same problem end emphasis problem that shows up somewhere else.
Can you guys look at this and tell me if I'm going in the right direction?
Thanks
Christian","Hi all
One of the last regressions we have on the ueb_update branch has to to with emphasis ending.
I'm trying to fix this but it occurs to me that I have some kind of misunderstanding how emphasis is handled.
I previously thought (as documented in the wiki) that a table defines either (I'm just making the dot patterns up):
begemph italic 46
endemph italic 46-3

and then has basic emphasis handling where all emphasis is handled the same way regardless of phrase length, etc
or the table defines rules such as
begemphword italic 46
endemphword italic 46-3
begemphprase italic 46-46
endemphphrase italic before 46-3
lenemphphrase italic 3

and then liblouis would use these indicators depending on whether the phrase is long enough. Within a word it would also use the indicator defined with begemphword and endemphword.
So in my understanding it did not make any sense to define both begemph and begemphword as they were addressing different use cases.
As it turns out on the ueb_update branch quite a few tables do this. This might be an oversight when porting them to the new opcode syntax. The en-ueb-g1.ctb table even defines different dot patterns for begemphword and begemph.
So, the question is: Is my understanding of how emphasis is going to handled correct?
I have a branch (feature/emphasis_handling_cleanup) where I tried to correct all tables to use the proper emphasis opcodes. I get one additional failure compared to the feature/ueb_update branch and it might be that it is the same problem end emphasis problem that shows up somewhere else.
Can you guys look at this and tell me if I'm going in the right direction?
Thanks
Christian",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,168,2016-06-10T09:05:22Z,2016-06-13T12:51:15Z,2016-06-13T12:51:43Z,MERGED,True,95,89,20,https://github.com/egli,Feature/emphasis handling cleanup,5,[],https://github.com/liblouis/liblouis/pull/168,https://github.com/dkager,2,https://github.com/liblouis/liblouis/pull/168#issuecomment-225507706,"Hi all
One of the last regressions we have on the ueb_update branch has to to with emphasis ending.
I'm trying to fix this but it occurs to me that I have some kind of misunderstanding how emphasis is handled.
I previously thought (as documented in the wiki) that a table defines either (I'm just making the dot patterns up):
begemph italic 46
endemph italic 46-3

and then has basic emphasis handling where all emphasis is handled the same way regardless of phrase length, etc
or the table defines rules such as
begemphword italic 46
endemphword italic 46-3
begemphprase italic 46-46
endemphphrase italic before 46-3
lenemphphrase italic 3

and then liblouis would use these indicators depending on whether the phrase is long enough. Within a word it would also use the indicator defined with begemphword and endemphword.
So in my understanding it did not make any sense to define both begemph and begemphword as they were addressing different use cases.
As it turns out on the ueb_update branch quite a few tables do this. This might be an oversight when porting them to the new opcode syntax. The en-ueb-g1.ctb table even defines different dot patterns for begemphword and begemph.
So, the question is: Is my understanding of how emphasis is going to handled correct?
I have a branch (feature/emphasis_handling_cleanup) where I tried to correct all tables to use the proper emphasis opcodes. I get one additional failure compared to the feature/ueb_update branch and it might be that it is the same problem end emphasis problem that shows up somewhere else.
Can you guys look at this and tell me if I'm going in the right direction?
Thanks
Christian","The new failure appears to be en-us-g2-end-emphasis_harness.yaml.
A whitespace character or end of input ends a word according to the logic of endemphword, so in that sense the code is correct. Maybe Mike and colleagues can chime in as to whether this is correct UEB.
But we also discussed that the en-us table changes might be incorrect or incomplete. Depending on the outcome of that discussion we might end up reverting the changes and using the backup from master again. Both tables (current and backup) now have the same failure.
What worries me more is that not all tables that use emphasis opcodes have tests for it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,169,2016-06-15T13:18:27Z,2016-06-16T07:32:53Z,2016-06-21T15:16:12Z,MERGED,True,3239,11,22,https://github.com/egli,Feature/gnulib for utf8 support,5,[],https://github.com/liblouis/liblouis/pull/169,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/169,Add gnulib modules to be able to handle utf8 in tools such as lou_trace,Add gnulib modules to be able to handle utf8 in tools such as lou_trace,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,173,2016-06-20T12:28:05Z,2016-09-12T09:29:46Z,2017-01-13T13:45:06Z,CLOSED,False,1658,22,8,https://github.com/torchtrust,add LibLouis Visual Studio Project,15,[],https://github.com/liblouis/liblouis/pull/173,https://github.com/torchtrust,1,https://github.com/liblouis/liblouis/pull/173,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,173,2016-06-20T12:28:05Z,2016-09-12T09:29:46Z,2017-01-13T13:45:06Z,CLOSED,False,1658,22,8,https://github.com/torchtrust,add LibLouis Visual Studio Project,15,[],https://github.com/liblouis/liblouis/pull/173,https://github.com/dkager,2,https://github.com/liblouis/liblouis/pull/173#issuecomment-246288184,,Is this still relevant/current?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,173,2016-06-20T12:28:05Z,2016-09-12T09:29:46Z,2017-01-13T13:45:06Z,CLOSED,False,1658,22,8,https://github.com/torchtrust,add LibLouis Visual Studio Project,15,[],https://github.com/liblouis/liblouis/pull/173,https://github.com/torchtrust,3,https://github.com/liblouis/liblouis/pull/173#issuecomment-246292945,,"Hi Davy,
I appreciate that this is of little concern for non-windows programmers
and possibly those who are well versed in MSVC commands and C
programming, but there are a few of us 'windows guys', more at home in
the GUI, who have been trying to get Liblouis and LibLouisUTDML building
in Visual Studio. I have been contacted by I think three others and I
know a couple more who have struggled with this, so I spent a few weeks
in the summer cracking this problem and have got a solutions working. As
you probably know I'm not a great 'C' programmer, but having actually
cracked the issues, I hope that speaks for it's self. I do hope you can
give me some help though with your much superior experience in C
programming and you seem to know your way around windows as well. Can
you please check that what I have proposed is good programming technique
and won't break other ways of compiling LibLouis etc.? I believe there
is still a need to be able to easily use LibLouis in other Visual Studio
projects and as far as I know this requires building within MSVC with
all the dependencies built this way as well!
If there is anything I can help with please don't hesitate to ask me to
do them! Unfortunately I have also struggled with Github on windows, so
I'm not sure how well the pushes are setup. I have tweaked the settings
for LibLouis 3.0.0
I look forward to your opinion.
Paul",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,173,2016-06-20T12:28:05Z,2016-09-12T09:29:46Z,2017-01-13T13:45:06Z,CLOSED,False,1658,22,8,https://github.com/torchtrust,add LibLouis Visual Studio Project,15,[],https://github.com/liblouis/liblouis/pull/173,https://github.com/dkager,4,https://github.com/liblouis/liblouis/pull/173#issuecomment-246293887,,"Oops, miscommunication: I meant to ask if this is superseeded by #194 or if both are separate.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,173,2016-06-20T12:28:05Z,2016-09-12T09:29:46Z,2017-01-13T13:45:06Z,CLOSED,False,1658,22,8,https://github.com/torchtrust,add LibLouis Visual Studio Project,15,[],https://github.com/liblouis/liblouis/pull/173,https://github.com/torchtrust,5,https://github.com/liblouis/liblouis/pull/173#issuecomment-246294776,,"To be clear, it is superseeded by #194 as I understand this is my later
attempt using LibLouis 3.0.0 release.
Thanks
Paul
On 12/09/2016 10:23, Davy Kager wrote:

Oops, miscommunication: I meant to ask if this is superseeded by #194
#194 or if both are separate.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#173 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/ACUqUZcip4aeLihIT3gi4qAgpxrGXQNDks5qpRojgaJpZM4I5phm.


Paulw.torchtrust signature
Paul Wood, Chief Technical Officer
Torch Trust
Torch House, Torch Way,
Market Harborough, Leics. LE16 9HL, UK
Direct Line: +44(0)1858 438269
Tel: +44(0)1858 438260, Fax: +44(0)1858 438275
Email: paulw@torchtrust.org mailto:paulw@torchtrust.org
Website: www.torchtrust.org http://www.torchtrust.org/

Chief Executive: Dr Gordon Temple
Charity No. 1095904
Privileged/Confidential Information may be contained in this message.
If you are not the intended recipient please destroy this message
and kindly notify the sender by reply email. The computer from which
this mail originates is equipped with virus screening software.
However Torch Trust cannot guarantee that the mail and its attachments
are free from virus infection.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,173,2016-06-20T12:28:05Z,2016-09-12T09:29:46Z,2017-01-13T13:45:06Z,CLOSED,False,1658,22,8,https://github.com/torchtrust,add LibLouis Visual Studio Project,15,[],https://github.com/liblouis/liblouis/pull/173,https://github.com/dkager,6,https://github.com/liblouis/liblouis/pull/173#issuecomment-246295346,,Let's discuss further in #194.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,174,2016-06-21T09:34:57Z,2016-06-21T14:35:57Z,2016-06-24T13:11:52Z,MERGED,True,6,3,1,https://github.com/torchtrust,add new Beta APIs,1,[],https://github.com/liblouis/liblouis/pull/174,https://github.com/torchtrust,1,https://github.com/liblouis/liblouis/pull/174,These seem to be missing from the windows def file which was stopping windows building liblouis dll,These seem to be missing from the windows def file which was stopping windows building liblouis dll,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,174,2016-06-21T09:34:57Z,2016-06-21T14:35:57Z,2016-06-24T13:11:52Z,MERGED,True,6,3,1,https://github.com/torchtrust,add new Beta APIs,1,[],https://github.com/liblouis/liblouis/pull/174,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/174#issuecomment-227401390,These seem to be missing from the windows def file which was stopping windows building liblouis dll,@torchtrust is this still needed? Now that the def file is built with the cross compilation from mingw?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,174,2016-06-21T09:34:57Z,2016-06-21T14:35:57Z,2016-06-24T13:11:52Z,MERGED,True,6,3,1,https://github.com/torchtrust,add new Beta APIs,1,[],https://github.com/liblouis/liblouis/pull/174,https://github.com/torchtrust,3,https://github.com/liblouis/liblouis/pull/174#issuecomment-227403128,These seem to be missing from the windows def file which was stopping windows building liblouis dll,"I pulled the latest liblouis from master yesterday and in windows folder
the liblouis.def wasn't up-to-date. I have to use this for Visual Studio
builds as the other/prefered method that is used in liblouisutdml isn't
used. If the file has been recreated and updated from mingw that is
fine. But when I looked at the file just now it wasn't up-to-date.
Others and myself cannot get mingw to build and I have managed to do it
all in Visual Studio now, so would appreciate it if you could update
this so others don't have this issue when building using msvc. I had
issues building using the command line, but Visual Studio would build it
just didn't work. Immediately crashed with no error pointing to anything
like this. No error saying missing links, so it was just a thought last
night that prompted me to check there was no new external links in the
liblouis dll and that how I found the extras and now it builds!
Thanks
Paul
On 21/06/2016 11:28, Christian Egli wrote:

@torchtrust https://github.com/torchtrust is this still needed? Now
that the def file is built with the cross compilation from mingw?
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#174 (comment),
or mute the thread
https://github.com/notifications/unsubscribe/ACUqUeQIOaGJ4W8qmhQVI6AfD2ou6ryLks5qN7zlgaJpZM4I6iMC.


Paulw.torchtrust signature
Paul Wood, Chief Technical Officer
Torch Trust
Torch House, Torch Way,
Market Harborough, Leics. LE16 9HL, UK
Direct Line: +44(0)1858 438269
Tel: +44(0)1858 438260, Fax: +44(0)1858 438275
Email: paulw@torchtrust.org mailto:paulw@torchtrust.org
Website: www.torchtrust.org http://www.torchtrust.org/

Chief Executive: Dr Gordon Temple
Charity No. 1095904
Privileged/Confidential Information may be contained in this message.
If you are not the intended recipient please destroy this message
and kindly notify the sender by reply email. The computer from which
this mail originates is equipped with virus screening software.
However Torch Trust cannot guarantee that the mail and its attachments
are free from virus infection.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,174,2016-06-21T09:34:57Z,2016-06-21T14:35:57Z,2016-06-24T13:11:52Z,MERGED,True,6,3,1,https://github.com/torchtrust,add new Beta APIs,1,[],https://github.com/liblouis/liblouis/pull/174,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/174#issuecomment-227459260,These seem to be missing from the windows def file which was stopping windows building liblouis dll,"Ok, I will pull, but @torchtrust can you look at the attached def file that I built with mingw. There are many more symbols in there. Are they needed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,174,2016-06-21T09:34:57Z,2016-06-21T14:35:57Z,2016-06-24T13:11:52Z,MERGED,True,6,3,1,https://github.com/torchtrust,add new Beta APIs,1,[],https://github.com/liblouis/liblouis/pull/174,https://github.com/torchtrust,5,https://github.com/liblouis/liblouis/pull/174#issuecomment-227472522,These seem to be missing from the windows def file which was stopping windows building liblouis dll,"I don't believe so, but will let you know when I have everything working
fully!
As I said I can now successfully build liblouis.dll etc. and I didn't
have Jake's issue!?
Thanks
Paul
On 21/06/2016 15:34, Christian Egli wrote:

Ok, I will pull, but @torchtrust https://github.com/torchtrust can
you look at the attached def file
https://github.com/liblouis/liblouis/files/325831/liblouis-11.def.zip
that I built with mingw. There are many more symbols in there. Are
they needed?
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#174 (comment),
or mute the thread
https://github.com/notifications/unsubscribe/ACUqUT_UCyR_9Y_MKSYoCvXFxmj4y9mlks5qN_aOgaJpZM4I6iMC.


Paulw.torchtrust signature
Paul Wood, Chief Technical Officer
Torch Trust
Torch House, Torch Way,
Market Harborough, Leics. LE16 9HL, UK
Direct Line: +44(0)1858 438269
Tel: +44(0)1858 438260, Fax: +44(0)1858 438275
Email: paulw@torchtrust.org mailto:paulw@torchtrust.org
Website: www.torchtrust.org http://www.torchtrust.org/

Chief Executive: Dr Gordon Temple
Charity No. 1095904
Privileged/Confidential Information may be contained in this message.
If you are not the intended recipient please destroy this message
and kindly notify the sender by reply email. The computer from which
this mail originates is equipped with virus screening software.
However Torch Trust cannot guarantee that the mail and its attachments
are free from virus infection.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,174,2016-06-21T09:34:57Z,2016-06-21T14:35:57Z,2016-06-24T13:11:52Z,MERGED,True,6,3,1,https://github.com/torchtrust,add new Beta APIs,1,[],https://github.com/liblouis/liblouis/pull/174,https://github.com/torchtrust,6,https://github.com/liblouis/liblouis/pull/174#issuecomment-228341360,These seem to be missing from the windows def file which was stopping windows building liblouis dll,"Hi Christian,
Confession time! The three extra externals that I added to liblouis.def
are not in fact needed to build liblouis.dll for normal use! I have now
confirmed! So Sorry, but 'lou_findTable' and 'lou_indexTables' are
needed if findTable.c is required. I can't find any reference other than
in liblouis.h to 'lou_log' so I presume this has been depreciated. It
isn't in liblouis.h.in Again I think this is the windows files getting
out of sync with the other files.
Do you know where findTable and indexTables are used? i.e. where does
findTable.c come into the equation? I have successfully build
checkTable.exe and am proceeding with the other tools in Visual Studio.
Would you suggest I release MSVC versions of liblouis.dll,
liblouisutdml.dll and file2brl.exe ASAP or do you think the mingW
versions will be fine for testing the Alpha release etc. I'd appreciate
your wisdom to know what you feel would be most important to the outside
community.
Thanks, as ever!
Paul
On 21/06/2016 11:28, Christian Egli wrote:

@torchtrust https://github.com/torchtrust is this still needed? Now
that the def file is built with the cross compilation from mingw?
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#174 (comment),
or mute the thread
https://github.com/notifications/unsubscribe/ACUqUeQIOaGJ4W8qmhQVI6AfD2ou6ryLks5qN7zlgaJpZM4I6iMC.


Paulw.torchtrust signature
Paul Wood, Chief Technical Officer
Torch Trust
Torch House, Torch Way,
Market Harborough, Leics. LE16 9HL, UK
Direct Line: +44(0)1858 438269
Tel: +44(0)1858 438260, Fax: +44(0)1858 438275
Email: paulw@torchtrust.org mailto:paulw@torchtrust.org
Website: www.torchtrust.org http://www.torchtrust.org/

Chief Executive: Dr Gordon Temple
Charity No. 1095904
Privileged/Confidential Information may be contained in this message.
If you are not the intended recipient please destroy this message
and kindly notify the sender by reply email. The computer from which
this mail originates is equipped with virus screening software.
However Torch Trust cannot guarantee that the mail and its attachments
are free from virus infection.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,175,2016-06-21T16:07:32Z,2016-06-30T09:26:39Z,2016-06-30T09:26:44Z,MERGED,True,106,176,6,https://github.com/egli,Use gnulibs unistr.h to convert ucs to utf8 in the tools,1,[],https://github.com/liblouis/liblouis/pull/175,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/175,"All the tools should now be able to emit utf8. The home-made (aka copied
from stackoverflow) code to comvert to utf8 in brl_checks.c has also
been replaced with u32_to_u8 and u16_to_u8 from unistr.h","All the tools should now be able to emit utf8. The home-made (aka copied
from stackoverflow) code to comvert to utf8 in brl_checks.c has also
been replaced with u32_to_u8 and u16_to_u8 from unistr.h",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,177,2016-06-24T05:51:57Z,2016-06-24T08:04:27Z,2016-06-24T09:52:49Z,CLOSED,False,70,75,5,https://github.com/hammera,Hungarian braille tables related files: Use a standard license header,1,[],https://github.com/liblouis/liblouis/pull/177,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/177,"Hi Chris,
I doed required changes with hungarian braille tables related files to licensechecker shows right statement.
I copyed proper parts from standard Liblouis license header.
I actualized the copyright statements too.
Now hungarian braille table related files licensechecker shows following result after I committed this change my forked Liblouis repository, when I type licensecheck --copyright --check='.(ctb|utb|cti|uti|dis)'  --machine * -l 30 | sort -k2 command:
hu-hu-comp8.ctb LGPL (v2.1 or later)    1999-2011 by the BRLTTY Team / 2012 Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-hu-g1.ctb    LGPL (v2.1 or later)    2011-2016, Attila hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-backtranslate-correction.dis LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-chardefs.cti LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-exceptionwords.cti   LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
Please review these changes, and merge this commit with proper Liblouis branches if all changes good your openion.
Attila","Hi Chris,
I doed required changes with hungarian braille tables related files to licensechecker shows right statement.
I copyed proper parts from standard Liblouis license header.
I actualized the copyright statements too.
Now hungarian braille table related files licensechecker shows following result after I committed this change my forked Liblouis repository, when I type licensecheck --copyright --check='.(ctb|utb|cti|uti|dis)'  --machine * -l 30 | sort -k2 command:
hu-hu-comp8.ctb LGPL (v2.1 or later)    1999-2011 by the BRLTTY Team / 2012 Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-hu-g1.ctb    LGPL (v2.1 or later)    2011-2016, Attila hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-backtranslate-correction.dis LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-chardefs.cti LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-exceptionwords.cti   LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
Please review these changes, and merge this commit with proper Liblouis branches if all changes good your openion.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,177,2016-06-24T05:51:57Z,2016-06-24T08:04:27Z,2016-06-24T09:52:49Z,CLOSED,False,70,75,5,https://github.com/hammera,Hungarian braille tables related files: Use a standard license header,1,[],https://github.com/liblouis/liblouis/pull/177,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/177#issuecomment-228282644,"Hi Chris,
I doed required changes with hungarian braille tables related files to licensechecker shows right statement.
I copyed proper parts from standard Liblouis license header.
I actualized the copyright statements too.
Now hungarian braille table related files licensechecker shows following result after I committed this change my forked Liblouis repository, when I type licensecheck --copyright --check='.(ctb|utb|cti|uti|dis)'  --machine * -l 30 | sort -k2 command:
hu-hu-comp8.ctb LGPL (v2.1 or later)    1999-2011 by the BRLTTY Team / 2012 Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-hu-g1.ctb    LGPL (v2.1 or later)    2011-2016, Attila hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-backtranslate-correction.dis LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-chardefs.cti LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-exceptionwords.cti   LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
Please review these changes, and merge this commit with proper Liblouis branches if all changes good your openion.
Attila",I just fixed all the hu* license headers in a commit I just pushed. All should be well with the hu tables now. Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,177,2016-06-24T05:51:57Z,2016-06-24T08:04:27Z,2016-06-24T09:52:49Z,CLOSED,False,70,75,5,https://github.com/hammera,Hungarian braille tables related files: Use a standard license header,1,[],https://github.com/liblouis/liblouis/pull/177,https://github.com/hammera,3,https://github.com/liblouis/liblouis/pull/177#issuecomment-228301341,"Hi Chris,
I doed required changes with hungarian braille tables related files to licensechecker shows right statement.
I copyed proper parts from standard Liblouis license header.
I actualized the copyright statements too.
Now hungarian braille table related files licensechecker shows following result after I committed this change my forked Liblouis repository, when I type licensecheck --copyright --check='.(ctb|utb|cti|uti|dis)'  --machine * -l 30 | sort -k2 command:
hu-hu-comp8.ctb LGPL (v2.1 or later)    1999-2011 by the BRLTTY Team / 2012 Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-hu-g1.ctb    LGPL (v2.1 or later)    2011-2016, Attila hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-backtranslate-correction.dis LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-chardefs.cti LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-exceptionwords.cti   LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
Please review these changes, and merge this commit with proper Liblouis branches if all changes good your openion.
Attila","Hi Chris,
Thank you the merge operation and fixes my commit related.
I have got few questions with future work if need doing me modifications
with hungarian tables related:

If happening a year with modification from me, need increasing the
main copiright part the year part, similar with GNOME translation files?
Since the tables designing and creation related works from IT Foundation
for the Visually Impaired - Hungary always only I doing table
maintaining and modifications, the hu-hu-g1.ctb table and table related
files primary author is I.
This situation need doing anything the copyright part with future?
What the standard form in Liblouis now with copyright part related if a
table author working a nonprofit organization? Need putting only the
nonprofit organization name in copyright part, or need completing the
copyright part for example with following part:
Author name from nonprofit organization name

In 2015. and 2016. years I doed some table extending and maintaining,
but I not putting year increasing the copiryght part, simple forgot this.
Now all hungarian braille tables and table related files the copyright
part containing with 2011 - 2014 years, except the computer braille
table (hu-hu-comp8.ctb), with not happened any modification since 2012.
An example copyright part:
Copyright (C) 2011-2014 IT Foundation for the Visually Impaired -
Hungary. www.infoalap.hu
If the copyright part is full good now, me not matter if we not doing
any changes this part related.

What license header need inserting the hyph_hu_HU.dic table file?
Have a standard license header for hyphenation tables?
I copyed this table from Openoffice.org, similar with other languages
hyphenation tables and doed few extending and modifications only.

Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,177,2016-06-24T05:51:57Z,2016-06-24T08:04:27Z,2016-06-24T09:52:49Z,CLOSED,False,70,75,5,https://github.com/hammera,Hungarian braille tables related files: Use a standard license header,1,[],https://github.com/liblouis/liblouis/pull/177,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/177#issuecomment-228305466,"Hi Chris,
I doed required changes with hungarian braille tables related files to licensechecker shows right statement.
I copyed proper parts from standard Liblouis license header.
I actualized the copyright statements too.
Now hungarian braille table related files licensechecker shows following result after I committed this change my forked Liblouis repository, when I type licensecheck --copyright --check='.(ctb|utb|cti|uti|dis)'  --machine * -l 30 | sort -k2 command:
hu-hu-comp8.ctb LGPL (v2.1 or later)    1999-2011 by the BRLTTY Team / 2012 Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-hu-g1.ctb    LGPL (v2.1 or later)    2011-2016, Attila hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-backtranslate-correction.dis LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-chardefs.cti LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
hu-exceptionwords.cti   LGPL (v2.1 or later)    2011-2016, Attila Hammer from IT Foundation for the Visually Impaired - Hungary. Homepage: www.infoalap.hu
Please review these changes, and merge this commit with proper Liblouis branches if all changes good your openion.
Attila","Hi Attila
On 06/24/2016 11:31 AM, hammera wrote:

I have got few questions with future work if need doing me modifications
with hungarian tables related:

If happening a year with modification from me, need increasing the
main copiright part the year part, similar with GNOME translation files?


These files are from you. The contents is yours alone and you can
basically write in it whatever you like.
All I really want is for them to have a proper copyright statement and
an acceptable license which means LGPLv2.1+.

This situation need doing anything the copyright part with future?

Also I prefer if an organization has the copyright, as they tend to stay
around longer than individuals. But this is just a preference. If you
are the real copyright holder then please change the hu-* tables to
reflect that.

completing the copyright part for example with following part:
Author name from nonprofit organization name

that could work,yes

In 2015. and 2016. years I doed some table extending and maintaining,
but I not putting year increasing the copiryght part, simple forgot this.
Now all hungarian braille tables and table related files the copyright
part containing with 2011 - 2014 years, except the computer braille
table (hu-hu-comp8.ctb), with not happened any modification since 2012.
An example copyright part:
Copyright (C) 2011-2014 IT Foundation for the Visually Impaired -
Hungary. www.infoalap.hu
If the copyright part is full good now, me not matter if we not doing
any changes this part related.

Not sure if this is really that important. I guess it helps to figure
out when the copyright expires. You can fix it if you like.


What license header need inserting the hyph_hu_HU.dic table file?
Have a standard license header for hyphenation tables?
I copyed this table from Openoffice.org, similar with other languages
hyphenation tables and doed few extending and modifications only.


If the tables are from openoffice then we need to use their copyright
and their license. If it is not LGPLv2.1+ then we need to get their
permission to change.
Thanks
Christian

Christian Egli
Swiss Library for the Blind, Visually Impaired and Print Disabled
Grubenstrasse 12, CH-8045 Zürich, Switzerland

Tag der offenen Tuer: Es war einmal...
Die SBS laedt Sie herzlich ein: 25. Juni 2016 von 9 bis 16 Uhr.
Mehr Informationen erhalten Sie unter www.sbs.ch/offenetuer",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,178,2016-06-24T10:54:31Z,2016-06-24T12:05:40Z,2016-06-24T12:05:54Z,MERGED,True,5,5,5,https://github.com/hammera,Hungarian braille tables: completed and actualized the year column in copyright header,1,[],https://github.com/liblouis/liblouis/pull/178,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/178,"Hi Chris,
Based an another pull request consultation for you, I completed hungarian braille tables  the copyright header with following form:
Attila Hammer from IT Foundation for the Visually Impaired - Hungary.
I increased the second year column in copyright header with 2016,  except the hu-hu-comp8.ctb table, because this table doesn't happened modifications since 2012.
Please review this change, and if all looks good your openion, please merge this pull request into Liblouis proper branches.
If I need doing next years any modifications with hungarian braille tables and the included files (for example the hu-exceptionwords.cti included file), I will updating the second year column the actual year when the modification is happened.
Sorry to previous forgot this since 2014.
Attila","Hi Chris,
Based an another pull request consultation for you, I completed hungarian braille tables  the copyright header with following form:
Attila Hammer from IT Foundation for the Visually Impaired - Hungary.
I increased the second year column in copyright header with 2016,  except the hu-hu-comp8.ctb table, because this table doesn't happened modifications since 2012.
Please review this change, and if all looks good your openion, please merge this pull request into Liblouis proper branches.
If I need doing next years any modifications with hungarian braille tables and the included files (for example the hu-exceptionwords.cti included file), I will updating the second year column the actual year when the modification is happened.
Sorry to previous forgot this since 2014.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,183,2016-07-04T10:31:45Z,2016-07-04T10:39:05Z,2016-07-04T11:19:01Z,MERGED,True,5,1582,15,https://github.com/dkager,Remove Dutch grade 1 tables,2,[],https://github.com/liblouis/liblouis/pull/183,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/183,See #182.,See #182.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,189,2016-07-11T13:06:01Z,2017-11-29T10:19:05Z,2017-11-29T10:19:15Z,MERGED,True,137,0,1,https://github.com/egli,Add preliminary documentation for the match opcode,3,['documentation'],https://github.com/liblouis/liblouis/pull/189,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/189,"This is basically just taken from Mikes email and wrapped in some texinfo markup.
What needs to be done is to also the other opcodes that are refered to like all the sequence opcodes.
Fixes #188","This is basically just taken from Mikes email and wrapped in some texinfo markup.
What needs to be done is to also the other opcodes that are refered to like all the sequence opcodes.
Fixes #188",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,189,2016-07-11T13:06:01Z,2017-11-29T10:19:05Z,2017-11-29T10:19:15Z,MERGED,True,137,0,1,https://github.com/egli,Add preliminary documentation for the match opcode,3,['documentation'],https://github.com/liblouis/liblouis/pull/189,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/189#issuecomment-303032895,"This is basically just taken from Mikes email and wrapped in some texinfo markup.
What needs to be done is to also the other opcodes that are refered to like all the sequence opcodes.
Fixes #188",Maybe we could just mention the opcodes that are not documented as such.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,189,2016-07-11T13:06:01Z,2017-11-29T10:19:05Z,2017-11-29T10:19:15Z,MERGED,True,137,0,1,https://github.com/egli,Add preliminary documentation for the match opcode,3,['documentation'],https://github.com/liblouis/liblouis/pull/189,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/189#issuecomment-303033731,"This is basically just taken from Mikes email and wrapped in some texinfo markup.
What needs to be done is to also the other opcodes that are refered to like all the sequence opcodes.
Fixes #188",In particular the sequence delimiter is a concept that is not documented so far,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,189,2016-07-11T13:06:01Z,2017-11-29T10:19:05Z,2017-11-29T10:19:15Z,MERGED,True,137,0,1,https://github.com/egli,Add preliminary documentation for the match opcode,3,['documentation'],https://github.com/liblouis/liblouis/pull/189,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/189#issuecomment-303090508,"This is basically just taken from Mikes email and wrapped in some texinfo markup.
What needs to be done is to also the other opcodes that are refered to like all the sequence opcodes.
Fixes #188",The seqdelimiter opcode seems to be documented in wiki page for the new UEB opcodes,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,189,2016-07-11T13:06:01Z,2017-11-29T10:19:05Z,2017-11-29T10:19:15Z,MERGED,True,137,0,1,https://github.com/egli,Add preliminary documentation for the match opcode,3,['documentation'],https://github.com/liblouis/liblouis/pull/189,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/189#issuecomment-347572815,"This is basically just taken from Mikes email and wrapped in some texinfo markup.
What needs to be done is to also the other opcodes that are refered to like all the sequence opcodes.
Fixes #188","OK, the scope of this PR has been reduced. We will just document the match opcode and drop all references to undocumented stuff such as seqdelimiter, the attribute opcode and the user defined expression parts on the pre- or post-patterns.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,190,2016-07-12T08:45:59Z,2016-07-12T09:42:02Z,2016-07-12T09:42:31Z,MERGED,True,110,6,9,https://github.com/dkager,Add function lou_getTypeformForEmphClass,1,[],https://github.com/liblouis/liblouis/pull/190,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/190,"For example to find out if tables define commonly used class names such as transnote, prodnote, strikethrough, superscript, etc.","For example to find out if tables define commonly used class names such as transnote, prodnote, strikethrough, superscript, etc.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,190,2016-07-12T08:45:59Z,2016-07-12T09:42:02Z,2016-07-12T09:42:31Z,MERGED,True,110,6,9,https://github.com/dkager,Add function lou_getTypeformForEmphClass,1,[],https://github.com/liblouis/liblouis/pull/190,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/190#issuecomment-231982310,"For example to find out if tables define commonly used class names such as transnote, prodnote, strikethrough, superscript, etc.","Looks excellent: documentation, tests, the works",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,190,2016-07-12T08:45:59Z,2016-07-12T09:42:02Z,2016-07-12T09:42:31Z,MERGED,True,110,6,9,https://github.com/dkager,Add function lou_getTypeformForEmphClass,1,[],https://github.com/liblouis/liblouis/pull/190,https://github.com/dkager,3,https://github.com/liblouis/liblouis/pull/190#issuecomment-231983652,"For example to find out if tables define commonly used class names such as transnote, prodnote, strikethrough, superscript, etc.",You may have to reformat the entire docs to not go beyond 76 characters per line. I think that's easiest on Linux.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,190,2016-07-12T08:45:59Z,2016-07-12T09:42:02Z,2016-07-12T09:42:31Z,MERGED,True,110,6,9,https://github.com/dkager,Add function lou_getTypeformForEmphClass,1,[],https://github.com/liblouis/liblouis/pull/190,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/190#issuecomment-231987230,"For example to find out if tables define commonly used class names such as transnote, prodnote, strikethrough, superscript, etc.",Will do once you merge the PR,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,191,2016-07-14T14:24:18Z,2016-07-14T15:04:38Z,2016-07-14T15:04:44Z,MERGED,True,15526,1393,18,https://github.com/egli,Added Bue's new Danish tables,1,[],https://github.com/liblouis/liblouis/pull/191,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/191,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,192,2016-07-15T14:42:33Z,2016-07-18T07:26:29Z,2017-01-13T13:43:30Z,MERGED,True,1,1,1,https://github.com/torchtrust,update config.h to 3.0.0,1,[],https://github.com/liblouis/liblouis/pull/192,https://github.com/torchtrust,1,https://github.com/liblouis/liblouis/pull/192,version 3.0.0,version 3.0.0,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/torchtrust,1,https://github.com/liblouis/liblouis/pull/194,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/194#issuecomment-245335469,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul",@egli Anything happening with this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/torchtrust,3,https://github.com/liblouis/liblouis/pull/194#issuecomment-257937550,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","Hi christian,
libunistring.dll and lib are for string functions such as _u16_to_u8 in
lou_Debug for example.
OK I'll try and remember to untick the .gitignore
gettext.h is only used in the tools, so I understood from the windows
teleconference that that was ok. Is it ok?
I have added license info for my unistd.h is that ok?
Cheers
Paul",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/194#issuecomment-284444145,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","Sorry @torchtrust, I had so much other stuff on the plate that I didn't get to include this. Let's do this early in the 3.2 release cycle so we can be sure to include this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/dkager,5,https://github.com/liblouis/liblouis/pull/194#issuecomment-292784283,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","Hey @egli, mind if I pick this up for #304?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/194#issuecomment-292861052,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","@dkager No, in fact I'd be happy if someone more knowledgeable with the Windows platform could move this forward. My main comments/concerns with this patch are

 the changes to tools are afaik mostly cosmetics and are fine
 I don't have much to say about the Visual Studio Project files. As long as they do not hard code any paths they can probably go in.
 the Posix header files (strndup.[hc], getopt.[hc], etc): I always found it a bit hard to believe that you need to search the net to find these. I had hoped that gnulib would provide these implementations. I would wish that we could find a better solution than just include a bunch of code found on the internets.
 the def file: The problem with this is that it needs to change if the API of liblouis changes. I read somewhere that the Windows linker has three methods to find a symbol. One of them was the def file, but one was apparently just using the __stdcall annotation that we use. So is the def file really needed and if so could we not use the generated one from the mingw build?
 the libraries: Again this boils down to the gnulib question from above. Is gnulib not solving this problem?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/dkager,7,https://github.com/liblouis/liblouis/pull/194#issuecomment-292897700,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","IIRC gnulib was mostly a problem because they rely heavily on autotools. I'm also not too keen on grabbing code from the web, but the only alternatives are:

Code the relevant bits ourselves.
Add MSVC-specific code to findTable.c, as is also done in compileTranslationTable.c.
Don't compile findTable.c, as is currently also done in the NMake file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/194#issuecomment-292899608,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","Don't compile findTable.c, as is currently also done in the NMake file.

I think this is ridiculous. I didn't realize it was still the case, we need to change it ASAP. We're dropping an important part of the API for one simple function (strndup) that can be easily replaced.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/dkager,9,https://github.com/liblouis/liblouis/pull/194#issuecomment-292899945,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","Last time I checked dirent.h was the culprit, but that was with NMake. I'm not up to speed on the VS projects yet.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/194#issuecomment-292902586,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul",OK I thought it was strndup. dirent.h might be more problematic indeed. It is used to list all table files on the table path.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/dkager,11,https://github.com/liblouis/liblouis/pull/194#issuecomment-295199082,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul",@egli Since this isn't work-related for me anymore I'm going to do the MSVC stuff for liblouis.dll now and leave the tools for later. This is quite a big heap to put on one plate. I'd like to get the library building on AppVeyor and then take it from there.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/dkager,12,https://github.com/liblouis/liblouis/pull/194#issuecomment-295226729,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","the def file: The problem with this is that it needs to change if the API of liblouis changes.

This can be solved by using __declspec(dllexport). However, this comes before the function return type, not after it like EXPORT_CALL.
Suggestion:

Remove EXPORT_CALL and just build the entire library with __stdcall on Windows.
Introduce a new macro LIBLOUIS_API (or similar) that declares either dllexport or dllimport depending on who's calling.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/reiner-dolp,13,https://github.com/liblouis/liblouis/pull/194#issuecomment-295258109,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul",Edit: misread dkager's comment.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/dkager,14,https://github.com/liblouis/liblouis/pull/194#issuecomment-295775651,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","@bertfrees Could we replace usage of strndup in findTable.c, e.g. by strdup or malloc + strcpy?
That would remove one more dependency for the MSVC build. I also want to write a few lines of Windows-specific code to avoid including the entire dirent.h just to use two functions.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/194#issuecomment-295779406,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","Could we replace usage of strndup in findTable.c, e.g. by strdup or malloc + strcpy?

Sure. Here it is done with a simple memcpy.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/dkager,16,https://github.com/liblouis/liblouis/pull/194#issuecomment-296542537,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","My strategy is to get liblouis.dll building with NMake, then start adding stuff from this excellent PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/egli,17,https://github.com/liblouis/liblouis/pull/194#issuecomment-464783263,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","Hi Paul @torchtrust , neither I nor @bertfrees have enough expertise to move this PR forward. Is there anyone who can bring this back up to date? Otherwise I think it would only be fair to be honest and say that we will not incorporate this patch and close the PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/egli,18,https://github.com/liblouis/liblouis/pull/194#issuecomment-727886887,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul",Anyone have a problem if we close this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,194,2016-07-19T10:39:07Z,2020-11-17T09:45:32Z,2020-11-17T09:45:32Z,CLOSED,False,5691,10,52,https://github.com/torchtrust,Visual Studio projects for 3.0.0,20,"['build system', 'on hold', 'stale']",https://github.com/liblouis/liblouis/pull/194,https://github.com/torchtrust,19,https://github.com/liblouis/liblouis/pull/194#issuecomment-727936852,"I have updated the Visual Studio Projects for the release of 3.0.0
What is the next step?
Thanks
Paul","It's disappointing but I also don't have the time to pursue this and I am
very grateful Christian that you have managed to build a windows version of
liblouisutdml with all that is required!
So sadly please close this.
Many Thanks
Paul
…
On Mon, 16 Nov 2020 at 10:25, Christian Egli ***@***.***> wrote:
 Anyone have a problem if we close this?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#194 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AASSUUNYP52BJ6QG4WBWQ5TSQD42DANCNFSM4CJ6MENA>
 .


-- 

*Paul Wood*
Chief Technical Officer
*Torch Trust*
Torch House, Torch Way,
Market Harborough, Leics. LE16 9HL, UK
Direct Line: *+44(0)1858 438269*
Mobile: *+44(0)7521 514212*
Tel: *+44(0)1858 438260*
Email: PaulW@torchtrust.org
Websites: www.torchtrust.org www.sightlossfriendlychurch.org.uk
<http://www.sightlossfriendlychurch.org>


[image: Growing in faith and thriving in Christian community. Sight Loss
Friendly Church from Torch Trust.]
<https://www.sightlossfriendlychurch.org.uk/>

[image: Registered with the Fundraising Regulator]
<https://www.fundraisingregulator.org.uk/>

Charity No. 1095904

Privileged/Confidential Information may be contained in this message.
If you are not the intended recipient please destroy this message
and kindly notify the sender by reply email. The computer from which
this mail originates is equipped with virus screening software.
However Torch Trust cannot guarantee that the mail and its attachments
are free from virus infection.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/195,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/195#issuecomment-239766691,,"Just three comments:

 With this change we now depend on dos2unix (through tests/check_included_tables.sh). Nothing tremendously wrong with that, we just have to make sure the user knows this and the ci server has it installed. Come to think of it maybe it is better not to depend on it and make sure no table has dos line endings.
 Are the metadata tables included in Makefile.am? I don't see a change that does this.
 There is a shell script named maketablelist.sh that scans the tables directory for new tables and generates a new Makefile.am (using some very fancy sed artificial intelligence). That way I can compare the existing Makefile.am with the new one and make sure all tables are included. This shell script should probably be adapted to include the metadata tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/195#issuecomment-239768077,,"If we change the encoding of the following files we can get rid of dos2unix:

aw-in-g1.utb
br-in-g1.utb
eo-g1-x-system.ctb
ethio-g1.ctb
kh-in-g1.utb",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/195#issuecomment-239772212,,"OK, I'll take care of the encoding",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/195#issuecomment-239784102,,encoding should be ok now,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/195#issuecomment-243066073,,head --bytes doesn't seem to work on Mac,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/195#issuecomment-243073411,,"The following might work:
echo ""foo \"" | sed '$s/ \\$//'",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/195#issuecomment-243384950,,"@bertfrees is there a reason why the metadata tables have no extension? This makes it kind of hard on scripts like check_all_tables.pl to search for tables. I have to match for ^[^.]+$ and then exclude README, Makefile and the like. Would be much easier if there was an extension.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/195#issuecomment-243387019,,"Ideally I think all the included tables should have an extension "".cti"" or "".uti"", and all the top-level tables should have metadata and should never be included and should have an extension "".ctb"" or "".utb"".
Actually I would even suggest removing the c(ontracted)/u(ncontracted) distinction from the extensions.
My ultimate goal was of course to get the metadata into existing tables but that was not always possible without making changes to them so I decided to do it like this for now. And because they're temporary it didn't seem useful to invent an extension for them.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/195#issuecomment-243390119,,Why can't we add the metadata to the existing tables?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/195#issuecomment-243391400,,Because of what I said: in most cases I'm actually changing the behavior of tables and because I'm not the owner I don't know if I can. Also it's a bit more work to change existing tables as opposed to creating a bunch of new ones. I thought it could be a gradual process where table authors are involved too. They should be involved because the metadata has to be verified (see also the comment in each table).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/mwhapples,12,https://github.com/liblouis/liblouis/pull/195#issuecomment-243392642,,"I am not sure about the idea of top level .ctb files never being
included. Generally in grade2 tables it seems common to include the
grade1 table. In this way the grade2 table only needs the additional
rules for the differences between grade1 and grade2.Under this idea
would one need a grade1 include .cti file and then a grade1 top level
.ctb file which merely includes the grade1 include file and provide some
metadata?

I guess I just don't see the need for restricting including top level
tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/195#issuecomment-243395190,,"Under this idea would one need a grade1 include .cti file and then a grade1 top level .ctb file which merely includes the grade1 include file and provide some metadata?

Exactly. It's how several tables already do it and it's just a small sacrifice for keeping things simple and transparent. Currently no metadata is searched in included files so having it in there could cause confusion I think. Of course we could not ignore it but that would cause complications. One of the reasons for only looking at the header of the top-level file (apart for making it faster) was that having all metadata in a single file makes things simple to understand.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/195#issuecomment-245352123,,@egli Added the tables to the Makefile. Good to merge now?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/195#issuecomment-245888246,,"Because of the temporary nature of the tables I gave them no extension. Giving them the extension .ctb would have caused some name conflicts. I also could have put them in a separate directory but then people would just have forgotten about them.
Another option could be to come up with a completely new naming scheme, including new extensions, and to make the new tables the first ones to be named according to this new scheme. The scheme would be more or less what the biggest part of the tables are already using, but with a different extension. 6 different extensions, like we currently have, is just too much. 4 should be enough:

hyphenation patterns (not really a liblouis file)
display table (.dis)
top-level table
table intended to be included only

I don't see what is so special about ""contracted vs. uncontracted"" that it requires a letter in the extension.
However we name them, we should announce them as tables that should not be selected by file name. They have metadata so they are suited/intended to be discovered based on metadata through the API.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/dkager,16,https://github.com/liblouis/liblouis/pull/195#issuecomment-246285737,,"I don't see what is so special about ""contracted vs. uncontracted"" that it requires a letter in the extension.

While this distinction may not add very much, there is the situation of users disabling multi-pass processing. This may badly break braille translation. For example, NVDA uses pass1Only and the Dutch table performs significantly worse in that mode, especially where numbers are used. This is going off topic, but sounds like it's worth discussing somewhere.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/195#issuecomment-246293772,,Could you make a new issue?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/195#issuecomment-247290176,,We'll pick .tbl (and .tbi) as the new file extension.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,195,2016-07-24T20:58:45Z,2016-10-11T12:03:14Z,2016-10-11T12:04:07Z,MERGED,True,2007,488,91,https://github.com/bertfrees,Initial table metadata,9,[],https://github.com/liblouis/liblouis/pull/195,https://github.com/egli,19,https://github.com/liblouis/liblouis/pull/195#issuecomment-252898395,,Merged manually,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,196,2016-08-11T00:35:43Z,2016-08-11T13:52:09Z,2017-01-13T13:45:06Z,MERGED,True,10,0,1,https://github.com/MikeGray-APH,Added rules for unicode apostrophe handling.,1,[],https://github.com/liblouis/liblouis/pull/196,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/196,Someone who emailed APH noticed this.,Someone who emailed APH noticed this.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mattvenn,1,https://github.com/liblouis/liblouis/pull/198,"resolves this issue:
#197 (comment)","resolves this issue:
#197 (comment)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mwhapples,2,https://github.com/liblouis/liblouis/pull/198#issuecomment-240057366,"resolves this issue:
#197 (comment)","Possibly a more reliable way to check UCS2/UCS4 matching is to use
python's sys.maxunicode for Python's unicode size and LibLouis's
lou_charSize function (NOTE: This LibLouis function is not mapped in the
Python bindings yet, but would be trivial to do so).
Python's sys.maxunicode gives the value of the highest code point it can
support and would need converting into something to which could be
compared with the result from lou_charSize(). Here is a stackOverFlow
question regarding how to make use of the sys.maxunicode value
http://stackoverflow.com/questions/1446347/how-to-find-out-if-python-is-compiled-with-ucs-2-or-ucs-4.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mattvenn,3,https://github.com/liblouis/liblouis/pull/198#issuecomment-240079116,"resolves this issue:
#197 (comment)",added charSize binding and do a test against that,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/198#issuecomment-240079169,"resolves this issue:
#197 (comment)",I think that from a user perspective it would make more sense to test whether the liblouis and Python builds are compatible directly in the Python bindings where you would use the methods outlined by @mwhapples above to test if the two are compatible and bail out if they aren't.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mattvenn,5,https://github.com/liblouis/liblouis/pull/198#issuecomment-240079729,"resolves this issue:
#197 (comment)",not totally sure what you want. Do you want a runtime error if there is a difference in charSize rather than a test suite that fails?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/198#issuecomment-240080344,"resolves this issue:
#197 (comment)","@mattvenn yes, a run time error. That was basically my idea. I like explicit better than implicit. A simple test case seems kind of hidden away.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mattvenn,7,https://github.com/liblouis/liblouis/pull/198#issuecomment-240080394,"resolves this issue:
#197 (comment)","ok, I'm on it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mwhapples,8,https://github.com/liblouis/liblouis/pull/198#issuecomment-240080628,"resolves this issue:
#197 (comment)","I was thinking of either in the bindings where it could check and raise
a suitable exception if the two do not match or even for the
make/install process to perform the check.

Having it in the bindings would have the advantage of always checking
for every run so would handle the case of mixing up of Python bindings
and other LibLouis libraries which may be on the system (eg. on windows
LibLouis installed by another application) which may have been compiled
differently. This would be the route I would take.

In a way it is not really a code test as no change in the source can
lead to it succeeding or failing, it is a build/configuration sanity check.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mattvenn,9,https://github.com/liblouis/liblouis/pull/198#issuecomment-240082843,"resolves this issue:
#197 (comment)",I love github.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/198#issuecomment-240117051,"resolves this issue:
#197 (comment)","The change looks good, but wasn't there this lingering issue that sys.maxunicode != 1114111 or sys.maxunicode != 65535 doesn't work for Python > 3.3? I didn't quite understand this Stackoverflow comment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mattvenn,11,https://github.com/liblouis/liblouis/pull/198#issuecomment-240118041,"resolves this issue:
#197 (comment)","me neither, sorry.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,198,2016-08-16T08:41:43Z,2017-02-27T13:03:43Z,2017-02-27T13:03:43Z,MERGED,True,14,0,1,https://github.com/mattvenn,extremely limited test suite to help debug ucs2/4 mismatch error,4,[],https://github.com/liblouis/liblouis/pull/198,https://github.com/mwhapples,12,https://github.com/liblouis/liblouis/pull/198#issuecomment-240126931,"resolves this issue:
#197 (comment)","Someone seems to deal with the issue with this comment:
""deficient_unicode_b‌​uild = (sys.maxunicode < 0x10ffff) works on any
Python version (even if the flexible internal representation is used
where sys.maxunicode == 0x10ffff). The flexible representations allows
to get correct results like ucs4 did on previous versions while using
less memory than ucs4 in some cases. – J.F. Sebastian Mar 5 at 19:11""

My understanding is that by using:
ucs2_build = (sys.maxunicode < 0x10ffff)
ucs2_build == True when Python uses UCS2 and False otherwise, I think
this is due to the number of characters which can be represented.

Quite how the flexible representations affects CTypes and passing
unicode Strings about I am not sure.

One way we could be certain about this and avoid the mismatch issue
altogether would be to encode as UTF-16 or UTF32 when passing the string
to LibLouis and decode the result (like LibLouis-java and JLouis does).
However there is still my usual warning about UTF-16 and UCS2 not
actually being the same and the potential for issues when surrogate
pairs are present.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,199,2016-09-03T20:05:37Z,2016-09-05T14:26:37Z,2017-01-13T13:45:06Z,MERGED,True,4,0,1,https://github.com/reiner-dolp,implicit declaration of function 'pattern_check',1,[],https://github.com/liblouis/liblouis/pull/199,https://github.com/reiner-dolp,1,https://github.com/liblouis/liblouis/pull/199,"I am cross-compiling liblouis using clang to create javascript bindings for liblouis. While GCC only complains about the forward declaration, clang refuses to compile the code. This pull request adds ""pattern_check"" to the internal header file ""louis.h"".

Error messages for reference:
CLANG/LLVM:
lou_backTranslateString.c:809:10: error: implicit declaration of function 'pattern_check' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
                                        if(!pattern_check(currentInput, src - 1, -1, -1, pattern, table))

GCC:
lou_backTranslateString.c:809:6: warning: implicit declaration of function ‘pattern_check’ [-Wimplicit-function-declaration]
      if(!pattern_check(currentInput, src - 1, -1, -1, pattern, table))","I am cross-compiling liblouis using clang to create javascript bindings for liblouis. While GCC only complains about the forward declaration, clang refuses to compile the code. This pull request adds ""pattern_check"" to the internal header file ""louis.h"".

Error messages for reference:
CLANG/LLVM:
lou_backTranslateString.c:809:10: error: implicit declaration of function 'pattern_check' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
                                        if(!pattern_check(currentInput, src - 1, -1, -1, pattern, table))

GCC:
lou_backTranslateString.c:809:6: warning: implicit declaration of function ‘pattern_check’ [-Wimplicit-function-declaration]
      if(!pattern_check(currentInput, src - 1, -1, -1, pattern, table))",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,199,2016-09-03T20:05:37Z,2016-09-05T14:26:37Z,2017-01-13T13:45:06Z,MERGED,True,4,0,1,https://github.com/reiner-dolp,implicit declaration of function 'pattern_check',1,[],https://github.com/liblouis/liblouis/pull/199,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/199#issuecomment-244759363,"I am cross-compiling liblouis using clang to create javascript bindings for liblouis. While GCC only complains about the forward declaration, clang refuses to compile the code. This pull request adds ""pattern_check"" to the internal header file ""louis.h"".

Error messages for reference:
CLANG/LLVM:
lou_backTranslateString.c:809:10: error: implicit declaration of function 'pattern_check' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
                                        if(!pattern_check(currentInput, src - 1, -1, -1, pattern, table))

GCC:
lou_backTranslateString.c:809:6: warning: implicit declaration of function ‘pattern_check’ [-Wimplicit-function-declaration]
      if(!pattern_check(currentInput, src - 1, -1, -1, pattern, table))","Great report, thanks for the patch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,200,2016-09-06T13:33:34Z,2016-09-06T14:26:05Z,2017-01-13T13:45:06Z,MERGED,True,1804,1823,3,https://github.com/MikeGray-APH,Fixed apostrophe and back translation for UEB.,1,[],https://github.com/liblouis/liblouis/pull/200,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/200,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,201,2016-09-06T14:38:20Z,2016-09-09T11:46:40Z,2016-09-09T11:46:41Z,MERGED,True,19,1,1,https://github.com/reiner-dolp,Documentation for lou_charSize,1,[],https://github.com/liblouis/liblouis/pull/201,https://github.com/reiner-dolp,1,https://github.com/liblouis/liblouis/pull/201,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,204,2016-10-03T19:36:36Z,2016-10-05T14:53:19Z,2017-01-13T13:45:06Z,MERGED,True,1,3,2,https://github.com/vsmontalvao,Fix unresolved external symbol errors when building on windows,1,[],https://github.com/liblouis/liblouis/pull/204,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/204,"This commit removes 2 beta api symbols from the module definition file
(windows/liblouis.def) and allows liblouis to be built on windows by
using nmake.
Liblouis wasn't built on windows due to 2 unresolved external symbol
errors. These errors were caused by having a reference to beta-api
functions defined on findTable.c (lou_indexTables and lou_findTable),
which still have some platform-specific dependencies (dirent.h,
strndup.c).
The object file for findTable was already not being built on
Makefile.nmake, so this change simply makes it able to link against only
the supported objects and successfully produce liblouis binaries on
windows (liblouis.dll, liblouis.lib, liblouis.exp).","This commit removes 2 beta api symbols from the module definition file
(windows/liblouis.def) and allows liblouis to be built on windows by
using nmake.
Liblouis wasn't built on windows due to 2 unresolved external symbol
errors. These errors were caused by having a reference to beta-api
functions defined on findTable.c (lou_indexTables and lou_findTable),
which still have some platform-specific dependencies (dirent.h,
strndup.c).
The object file for findTable was already not being built on
Makefile.nmake, so this change simply makes it able to link against only
the supported objects and successfully produce liblouis binaries on
windows (liblouis.dll, liblouis.lib, liblouis.exp).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,205,2016-10-06T15:30:02Z,2016-10-07T09:32:41Z,2016-10-07T10:11:26Z,MERGED,True,152,138,94,https://github.com/egli,Use relative paths to tables in tests,3,[],https://github.com/liblouis/liblouis/pull/205,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/205,"This essentially ""namespaces"" the tables so you should always know which
table is really used for a test.
Related to #147","This essentially ""namespaces"" the tables so you should always know which
table is really used for a test.
Related to #147",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,205,2016-10-06T15:30:02Z,2016-10-07T09:32:41Z,2016-10-07T10:11:26Z,MERGED,True,152,138,94,https://github.com/egli,Use relative paths to tables in tests,3,[],https://github.com/liblouis/liblouis/pull/205,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/205#issuecomment-252006075,"This essentially ""namespaces"" the tables so you should always know which
table is really used for a test.
Related to #147",Well there is a problem with the (Python) doctests. I'll have to fix that first.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,205,2016-10-06T15:30:02Z,2016-10-07T09:32:41Z,2016-10-07T10:11:26Z,MERGED,True,152,138,94,https://github.com/egli,Use relative paths to tables in tests,3,[],https://github.com/liblouis/liblouis/pull/205,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/205#issuecomment-252006490,"This essentially ""namespaces"" the tables so you should always know which
table is really used for a test.
Related to #147",Isn't it about time we remove that? (Also in #147.),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,205,2016-10-06T15:30:02Z,2016-10-07T09:32:41Z,2016-10-07T10:11:26Z,MERGED,True,152,138,94,https://github.com/egli,Use relative paths to tables in tests,3,[],https://github.com/liblouis/liblouis/pull/205,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/205#issuecomment-252006935,"This essentially ""namespaces"" the tables so you should always know which
table is really used for a test.
Related to #147","I was thinking that too, but I'm still kinda attached to them. Let me sleep over it :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,205,2016-10-06T15:30:02Z,2016-10-07T09:32:41Z,2016-10-07T10:11:26Z,MERGED,True,152,138,94,https://github.com/egli,Use relative paths to tables in tests,3,[],https://github.com/liblouis/liblouis/pull/205,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/205#issuecomment-252190438,"This essentially ""namespaces"" the tables so you should always know which
table is really used for a test.
Related to #147",@bertfrees ok to merge?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,205,2016-10-06T15:30:02Z,2016-10-07T09:32:41Z,2016-10-07T10:11:26Z,MERGED,True,152,138,94,https://github.com/egli,Use relative paths to tables in tests,3,[],https://github.com/liblouis/liblouis/pull/205,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/205#issuecomment-252191507,"This essentially ""namespaces"" the tables so you should always know which
table is really used for a test.
Related to #147",LGTM,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,206,2016-10-10T12:11:48Z,2016-10-10T12:28:21Z,2016-10-12T12:03:13Z,MERGED,True,23,24,5,https://github.com/egli,Remove dependency on pkgconfig,4,[],https://github.com/liblouis/liblouis/pull/206,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/206,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,206,2016-10-10T12:11:48Z,2016-10-10T12:28:21Z,2016-10-12T12:03:13Z,MERGED,True,23,24,5,https://github.com/egli,Remove dependency on pkgconfig,4,[],https://github.com/liblouis/liblouis/pull/206,https://github.com/MikeGray-APH,2,https://github.com/liblouis/liblouis/pull/206#issuecomment-253194073,,This seems to have fixed our cross compile problem.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,206,2016-10-10T12:11:48Z,2016-10-10T12:28:21Z,2016-10-12T12:03:13Z,MERGED,True,23,24,5,https://github.com/egli,Remove dependency on pkgconfig,4,[],https://github.com/liblouis/liblouis/pull/206,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/206#issuecomment-253194931,,Good!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,207,2016-10-12T15:05:49Z,2016-10-13T08:43:39Z,2016-10-13T08:43:39Z,MERGED,True,947,652,6,https://github.com/MikeGray-APH,Aph branch,7,[],https://github.com/liblouis/liblouis/pull/207,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/207,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,207,2016-10-12T15:05:49Z,2016-10-13T08:43:39Z,2016-10-13T08:43:39Z,MERGED,True,947,652,6,https://github.com/MikeGray-APH,Aph branch,7,[],https://github.com/liblouis/liblouis/pull/207,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/207#issuecomment-253257879,,Looks good to me. What do you think @bertfrees ?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,207,2016-10-12T15:05:49Z,2016-10-13T08:43:39Z,2016-10-13T08:43:39Z,MERGED,True,947,652,6,https://github.com/MikeGray-APH,Aph branch,7,[],https://github.com/liblouis/liblouis/pull/207,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/207#issuecomment-253264526,,"Looks good, but what do I know about UEB?
Only thing to notice is that only one test changed. But there must be more because I guess Mike is basing his changes on some kind of test data.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,207,2016-10-12T15:05:49Z,2016-10-13T08:43:39Z,2016-10-13T08:43:39Z,MERGED,True,947,652,6,https://github.com/MikeGray-APH,Aph branch,7,[],https://github.com/liblouis/liblouis/pull/207,https://github.com/MikeGray-APH,4,https://github.com/liblouis/liblouis/pull/207#issuecomment-253297662,,That one test that was changed started working.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,207,2016-10-12T15:05:49Z,2016-10-13T08:43:39Z,2016-10-13T08:43:39Z,MERGED,True,947,652,6,https://github.com/MikeGray-APH,Aph branch,7,[],https://github.com/liblouis/liblouis/pull/207,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/207#issuecomment-253359754,,"Yes, I can see that. But I was wondering whether there was more. Just want to make sure we capture as much as possible of the available test data into unit tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/208,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,2,https://github.com/liblouis/liblouis/pull/208#issuecomment-253592339,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","I fixed the problems and updated the tables and yaml files. If any problem exists, Please tell me so I can fix it. Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/208#issuecomment-253818351,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","OK, thanks @mohammadrezarashad looks better now. We have 6 failures in fa-ir-comp8-harness.yaml:
Input:    'NVDA_URL]'
Expected: '⡝⡧⡙⡁⠸⡥⡗⡇⠴⠄' (length 10)
Received: '⡝⡧⡙⡁⠸⡥⡗⡇⢾' (length 9)
Diff: Expected '⠴' but received '⢾' in index 8
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:267: Failure
Input:    'بازبینی میشود'
Expected: '⠃⠁⠵⠃⠊⠝⠊⠀⠍⠊⠩⠺⠙' (length 13)
Received: '⠃⠁⠵⠃⠊⠝⠊ ⠍⠊⠩⠺⠙' (length 13)
Diff: Expected '⠀' but received ' ' in index 7
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:543: Failure
Input:    'بازبینی میشود،'
Expected: '⠃⠁⠵⠃⠊⠝⠊⠀⠍⠊⠩⠺⠙⡂' (length 14)
Received: '⠃⠁⠵⠃⠊⠝⠊ ⠍⠊⠩⠺⠙⡂' (length 14)
Diff: Expected '⠀' but received ' ' in index 7
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:544: Failure
Input:    'برجسته کردن'
Expected: '⠃⠗⠚⠎⠞⠓⠀⠅⠗⠙⠝' (length 11)
Received: '⠃⠗⠚⠎⠞⠓ ⠅⠗⠙⠝' (length 11)
Diff: Expected '⠀' but received ' ' in index 6
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:614: Failure
Input:    'بریل،'
Expected: '⠃⠗⠊⠇⠂' (length 5)
Received: '⠃⠗⠊⠇⡂' (length 5)
Diff: Expected '⠂' but received '⡂' in index 4
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:660: Failure
Input:    'بهره بگیرید،'
Expected: '⠃⠓⠗⠓⠀⠃⠛⠊⠗⠊⠙⡂' (length 12)
Received: '⠃⠓⠗⠓ ⠃⠛⠊⠗⠊⠙⡂' (length 12)
Diff: Expected '⠀' but received ' ' in index 4
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:762: Failure
FAILURE (2106 tests, 6 failures)
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

and 53 failures in fa-ir-g1-harness.yaml:
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄' (length 58)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄' (length 61)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
Input:    'NVDA+shift+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢎⢓⢊⢋⢞⠰⠖⢋⠼⠉' (length 16)
Received: '⡝⡧⡙⡁⠰⠖⢎⢓⢊⢋⢞⠰⠖⢋⠉' (length 15)
Diff: Expected '⠼' but received '⠉' in index 14
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:251: Failure
Input:    'shift+numpad1'
Expected: '⢎⢓⢊⢋⢞⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 15)
Received: '⢎⢓⢊⢋⢞⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 14)
Diff: Expected '⠼' but received '⠁' in index 13
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:308: Failure
Input:    'shift+numpad3'
Expected: '⢎⢓⢊⢋⢞⠰⠖⢝⢥⢍⢏⢁⢙⠼⠉' (length 15)
Received: '⢎⢓⢊⢋⢞⠰⠖⢝⢥⢍⢏⢁⢙⠉' (length 14)
Diff: Expected '⠼' but received '⠉' in index 13
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:309: Failure
Input:    'shift+numpad7'
Expected: '⢎⢓⢊⢋⢞⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 15)
Received: '⢎⢓⢊⢋⢞⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 14)
Diff: Expected '⠼' but received '⠛' in index 13
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:310: Failure
Input:    'shift+numpad9'
Expected: '⢎⢓⢊⢋⢞⠰⠖⢝⢥⢍⢏⢁⢙⠼⠊' (length 15)
Received: '⢎⢓⢊⢋⢞⠰⠖⢝⢥⢍⢏⢁⢙⠊' (length 14)
Diff: Expected '⠼' but received '⠊' in index 13
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:311: Failure
Input:    '../userGuide.t2tconf'
Expected: '⠲⠲⢌⢥⢎⢑⢗⡛⢥⢊⢙⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 21)
Received: '⠲⠲⢌⢥⢎⢑⢗⡛⢥⢊⢙⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 20)
Diff: Expected '⠼' but received '⠃' in index 14
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:355: Failure
Input:    'بازبینی میشود'
Expected: '⠃⠁⠵⠃⠊⠝⠊⠀⠍⠊⠩⠺⠙' (length 13)
Received: '⠃⠁⠵⠃⠊⠝⠊ ⠍⠊⠩⠺⠙' (length 13)
Diff: Expected '⠀' but received ' ' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:543: Failure
Input:    'بازبینی میشود،'
Expected: '⠃⠁⠵⠃⠊⠝⠊⠀⠍⠊⠩⠺⠙⠂' (length 14)
Received: '⠃⠁⠵⠃⠊⠝⠊ ⠍⠊⠩⠺⠙⠂' (length 14)
Diff: Expected '⠀' but received ' ' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:544: Failure
Input:    'برجسته کردن'
Expected: '⠃⠗⠚⠎⠞⠓⠀⠅⠗⠙⠝' (length 11)
Received: '⠃⠗⠚⠎⠞⠓ ⠅⠗⠙⠝' (length 11)
Diff: Expected '⠀' but received ' ' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:614: Failure
Input:    ''بزرگ''
Expected: '⡦⠃⠵⠗⠛⡴' (length 6)
Received: '⠄⠃⠵⠗⠛⠄' (length 6)
Diff: Expected '⡦' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:691: Failure
Input:    'بهره بگیرید،'
Expected: '⠃⠓⠗⠓⠀⠃⠛⠊⠗⠊⠙⠂' (length 12)
Received: '⠃⠓⠗⠓ ⠃⠛⠊⠗⠊⠙⠂' (length 12)
Diff: Expected '⠀' but received ' ' in index 4
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:762: Failure
FAILURE (2106 tests, 53 failures)
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

You can either fix them or mark them as known problems by adding the xfail attribute.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,4,https://github.com/liblouis/liblouis/pull/208#issuecomment-258507208,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","xcuse me because of my 3-week delay.

fa-ir-comp8.ctb
Failure 1: Input:    'NVDA_URL]'
Entry exists in line 164. I don't know where the problem is.
Failures 2, 3, 4, and 6: Diff: Expected '⠀' but received ' '
There is an entry in line 23: space \s 0 blank. Again, I don't know
where the problem is.
Failure 5: Input:    'بریل،'.
There was an error in the yaml file which corrected.
fa-ir-g1.utb
About the absence of number sign before numbers, the only solution I
found is moving the ""begnum"" opcode before the digit entries in
fa-ir-g1.utb.
About failure in line 691 of g1 yaml file, There are 2 lines in the
table (241 and 242) that I thought they could process that (691) line.
The problem is unknown for me.
About Failure ""Expected '⠀' but received ' '"",
like the ctb file, there is a line in fa-ir-g1.utb (line 25) which
says: space \s 0 blank.
About problem in line 114 of yaml file (...gpl-2.0.html), I don't know
why ⠄ added before 2 and 0.
Please check the tables and yaml files I sent.
Thanks in advance and excuse me again,
Mohammadreza Rashad",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/208#issuecomment-259209834,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.",@mohammadrezarashad Did you send new versions of the files? If so then I must have missed that. Can you send them again? Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,6,https://github.com/liblouis/liblouis/pull/208#issuecomment-259227943,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","Hello. Here is the file attached as ""fa-ir-new.zip.
     Thanks in advance
     Mohammadreza",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/208#issuecomment-261248952,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","Hi @mohammadrezarashad sorry I don't see any files. Can you just send them to the list via email?
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/208#issuecomment-261967021,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","@mohammadrezarashad I ""fixed"" the tests by marking them with xfail. So the tests pass now and as far as I'm concerned the tables can go in.
However from the end user perspective, i.e. the people using your table there are probably still problems. The two most prevalent problems are

There seems to be a problem with space handling. Quite a few tests expect an empty braille cell (0x2800) while the result of the translation is just a space. Maybe we just need to fix these tests. For an example see here.
The tests expect a number indicator before a number. This doesn't seem to be produced. For an example see here

Can you look at the lines marked with xfail and tell me if I need to fix anything?
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/208#issuecomment-261968174,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","There seems to be a problem with space handling. Quite a few tests expect an empty braille cell (0x2800) while the result of the translation is just a space. Maybe we just need to fix these tests.


Yes, as far as I understand all tables behave like this, you can't make a table output anything else than a space for a dot-0. The test needs to be fixed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/208#issuecomment-261972161,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.",Thanks @bertfrees I'll fix these tests then,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,11,https://github.com/liblouis/liblouis/pull/208#issuecomment-262933408,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","Excuse me because of my delay.
Thanks to dear Christian and dear Bert.
In the yaml file I saw the following lines, which contains Persian numeral figures, have no ""xfail"" tag.
22, 23, 25, 26, 28 through 35, 37, 38, 40, 42, and 43.
Does it mean they passed the test successfully and now have Number indicator befor them?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/208#issuecomment-262993278,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","In the yaml file I saw the following lines, which contains Persian numeral figures, have no ""xfail"" tag.
22, 23, 25, 26, 28 through 35, 37, 38, 40, 42, and 43.
Does it mean they passed the test successfully and now have Number indicator befor them?

I guess so, yes. I didn't know these were numbers. So all that is missing then is to make sure 0-9 is also indicated with a number sign.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,13,https://github.com/liblouis/liblouis/pull/208#issuecomment-263079675,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","I modified the fa-ir-g1.utb table. I removed the inclusion of litdigits6Dots.uti and added English numerals as ""digit""s. I think this fixes the problem of missing number signs before English (Latin) digits.
Please run the test using this table. I attached the table here. Thanks in advance.
fa-ir-g1.zip",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/208#issuecomment-263299080,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","Thanks for the fixed table. I applied the patch slightly differently. I just included the digits6Dots.uti table. Now there are only two xfails:
    114:  - ['http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]', ⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄, xfail: ""Number indicator seems to be missing""]
    691:  - ['''بزرگ''', ⡦⠃⠵⠗⠛⡴, xfail: true]

@mohammadrezarashad Did you want to fix these or can the table go in with these known deficiencies?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,15,https://github.com/liblouis/liblouis/pull/208#issuecomment-263387905,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","Thank you for including digits6Dots.uti. The xfail of line 691 is not
very important; but it is important for me that I can fix the problem
of line 114. Actually, I don't know how I should fix the problem of
line 114. Maybe the dash character (-) caused missing of number sign
before 2. But, we have letter l before dash. So, this dash cannot be a
midnum dash.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,16,https://github.com/liblouis/liblouis/pull/208#issuecomment-268948117,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","I solved the problem of line 114 of fa-ir-g1-harness.yaml by removing the compbrl opcode from fa-ir-g1.utb.
I also removed the test at line 691; because it is not used in Farsi Braille.
Now the yaml file has no errors.
I attached both mentioned files as fa-ir-g1.zip.
fa-ir-g1.zip",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,17,https://github.com/liblouis/liblouis/pull/208#issuecomment-269237447,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","I updated fa-ir-g1 and fa-ir-comp8 tables a bit. I changed the name of the language from ""Farsi"" to mor popular and common name, ""Persian"".
fa-ir.zip",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/egli,18,https://github.com/liblouis/liblouis/pull/208#issuecomment-271627378,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","@mohammadrezarashad with your last zip file all tests pass now. As far as I'm concerned the tables are good to go, i.e. can be merged.
There is one problem though: the license.
fa-ir-comp8.ctb is fine as it is LGPLv2.1+. fa-ir-g1.utb however is licensed under GPL. Can you change the license to  LGPLv2.1+ just like you did for fa-ir-comp8.ctb? Or can you give me permission to change the license then I will do it.
Also we need permission from Abdolamir Banisaeid as he seems to hold some copyrights on the original ar-fa.utb table. Do you know him? Can you ask him for permission?
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,19,https://github.com/liblouis/liblouis/pull/208#issuecomment-271694280,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","Thanks for your kind and helpful cooperations, You can change the
licence yourself. I forward this email to Mr Banisaeid and inform him
soon.
     Thanks again, and Happy New Year!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,208,2016-10-12T15:52:12Z,2017-01-11T12:57:44Z,2017-01-11T13:06:13Z,MERGED,True,4802,110,7,https://github.com/egli,Add fa-ir tables,10,[],https://github.com/liblouis/liblouis/pull/208,https://github.com/mohammadrezarashad,20,https://github.com/liblouis/liblouis/pull/208#issuecomment-271722644,"The tables come with YAML tests which is great. Unfortunately the tests do not pass at the moment. Here is a list of the problems:
FAIL: yaml/fa-ir-comp8-harness
==============================

Input:    '۷'
Expected: '⣛' (length 1)
Received: '⢄⢳⢭⣴⣖⢋⣶⢄' (length 8)
Diff: Expected '⣛' but received '⢄' in index 0
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:40: Failure
Input:    '%!includeconf:'
Expected: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⠒' (length 14)
Received: '⢩⠖⢊⢝⢉⢇⢥⢙⢑⢉⢕⢝⢋⢒' (length 14)
Diff: Expected '⠒' but received '⢒' in index 13
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:119: Failure
lou_checkyaml:./yaml/fa-ir-comp8-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-comp8-harness.yaml (exit status: 1)

FAIL: yaml/fa-ir-g1-harness
===========================

Input:    '...'
Expected: '⠄⠄⠄' (length 3)
Received: '⠲⠲⠲' (length 3)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:11: Failure
Input:    '...)'
Expected: '⠄⠄⠄⠶' (length 4)
Received: '⠲⠲⠲⠶' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:12: Failure
Input:    '...،'
Expected: '⠄⠄⠄⠂' (length 4)
Received: '⠲⠲⠲⠂' (length 4)
Diff: Expected '⠄' but received '⠲' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:13: Failure
Input:    '0'
Expected: '⠼⠚' (length 2)
Received: '⠚' (length 1)
Diff: Expected '⠼' but received '⠚' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:19: Failure
Input:    '1'
Expected: '⠼⠁' (length 2)
Received: '⠁' (length 1)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:20: Failure
Input:    '1)'
Expected: '⠼⠁⠶' (length 3)
Received: '⠁⠶' (length 2)
Diff: Expected '⠼' but received '⠁' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:21: Failure
Input:    '2)'
Expected: '⠼⠃⠶' (length 3)
Received: '⠃⠶' (length 2)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:24: Failure
Input:    '2003)'
Expected: '⠼⠃⠚⠚⠉⠶' (length 6)
Received: '⠃⠚⠚⠉⠶' (length 5)
Diff: Expected '⠼' but received '⠃' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:27: Failure
Input:    '6:'
Expected: '⠼⠋⠒' (length 3)
Received: '⠋⠒' (length 2)
Diff: Expected '⠼' but received '⠋' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:36: Failure
Input:    '(7'
Expected: '⠶⠼⠛' (length 3)
Received: '⠶⠛' (length 2)
Diff: Expected '⠼' but received '⠛' in index 1
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:39: Failure
Input:    '۷'
Expected: '⠼⠛' (length 2)
Received: '⠄⡳⠭⠴⠖⠋⠶⠄' (length 8)
Diff: Expected '⠼' but received '⠄' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:40: Failure
Input:    '8'
Expected: '⠼⠓' (length 2)
Received: '⠓' (length 1)
Diff: Expected '⠼' but received '⠓' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:41: Failure
Input:    '9'
Expected: '⠼⠊' (length 2)
Received: '⠊' (length 1)
Diff: Expected '⠼' but received '⠊' in index 0
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:44: Failure
Input:    'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠼⠃⠂⠚⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 60)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢛⢝⢥⠲⢕⢗⢛⢌⢇⢊⢉⢑⢝⢎⢑⢎⢌⢕⢇⢙⠤⢇⢊⢉⢑⢝⢎⢑⢎⢌⢛⢏⢇⠤⠄⠆⠄⠲⠄⠴⠄⠲⢓⢞⢍⢇⠴⠄⢸⢱' (length 63)
Diff: Expected '⠼' but received '⠄' in index 47
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:114: Failure
Input:    'http://www.nvaccess.org/]،'
Expected: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⢸⢱⠂' (length 31)
Received: '⢸⡬⢓⢞⢞⢏⠒⢌⢌⢺⢺⢺⠲⢝⢧⢁⢉⢉⢑⢎⢎⠲⢕⢗⢛⢌⠴⠄⠂⢸⢱' (length 31)
Diff: Expected '⢸' but received '⠂' in index 28
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:115: Failure
Input:    'IAccessible2'
Expected: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠼⠃' (length 13)
Received: '⡊⡁⢉⢉⢑⢎⢎⢊⢃⢇⢑⠃' (length 12)
Diff: Expected '⠼' but received '⠃' in index 11
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:118: Failure
Input:    'locale.t2tconf'
Expected: '⢇⢕⢉⢁⢇⢑⠲⢞⠼⠃⢞⢉⢕⢝⢋' (length 15)
Received: '⢇⢕⢉⢁⢇⢑⠲⢞⠃⢞⢉⢕⢝⢋' (length 14)
Diff: Expected '⠼' but received '⠃' in index 8
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:139: Failure
Input:    'numpad1'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠁' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:153: Failure
Input:    'numpad2'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠃' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:154: Failure
Input:    'numpad3'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠉' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:155: Failure
Input:    'numpad4'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠙' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:156: Failure
Input:    'numpad5'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠑' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠑' (length 7)
Diff: Expected '⠼' but received '⠑' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:157: Failure
Input:    'numpad6'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠋' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:158: Failure
Input:    'numpad7'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠛' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:159: Failure
Input:    'numpad8'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠓' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠓' (length 7)
Diff: Expected '⠼' but received '⠓' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:160: Failure
Input:    'numpad9'
Expected: '⢝⢥⢍⢏⢁⢙⠼⠊' (length 8)
Received: '⢝⢥⢍⢏⢁⢙⠊' (length 7)
Diff: Expected '⠼' but received '⠊' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:161: Failure
Input:    'NVDA+1'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠁' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠁' (length 7)
Diff: Expected '⠼' but received '⠁' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:172: Failure
Input:    'NVDA+2'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠃' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠃' (length 7)
Diff: Expected '⠼' but received '⠃' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:173: Failure
Input:    'NVDA+3'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠉' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠉' (length 7)
Diff: Expected '⠼' but received '⠉' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:174: Failure
Input:    'NVDA+4'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠙' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠙' (length 7)
Diff: Expected '⠼' but received '⠙' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:175: Failure
Input:    'NVDA+6'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠋' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠋' (length 7)
Diff: Expected '⠼' but received '⠋' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:176: Failure
Input:    'NVDA+7'
Expected: '⡝⡧⡙⡁⠰⠖⠼⠛' (length 8)
Received: '⡝⡧⡙⡁⠰⠖⠛' (length 7)
Diff: Expected '⠼' but received '⠛' in index 6
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:177: Failure
Input:    'NVDA+control+1-4'
Expected: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠼⠁⠤⠙' (length 19)
Received: '⡝⡧⡙⡁⠰⠖⢉⢕⢝⢞⢗⢕⢇⠰⠖⠁⠤⠙' (length 18)
Diff: Expected '⠼' but received '⠁' in index 15
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:188: Failure
Input:    'NVDA+f10'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠚' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠚' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:212: Failure
Input:    'NVDA+f12'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠁⠃' (length 10)
Received: '⡝⡧⡙⡁⠰⠖⢋⠁⠃' (length 9)
Diff: Expected '⠼' but received '⠁' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:213: Failure
Input:    'NVDA+f2'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠃' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠃' (length 8)
Diff: Expected '⠼' but received '⠃' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:214: Failure
Input:    'NVDA+f3'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠉' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠉' (length 8)
Diff: Expected '⠼' but received '⠉' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:215: Failure
Input:    'NVDA+f5'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠑' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠑' (length 8)
Diff: Expected '⠼' but received '⠑' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:216: Failure
Input:    'NVDA+f7'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠛' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠛' (length 8)
Diff: Expected '⠼' but received '⠛' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:217: Failure
Input:    'NVDA+f9'
Expected: '⡝⡧⡙⡁⠰⠖⢋⠼⠊' (length 9)
Received: '⡝⡧⡙⡁⠰⠖⢋⠊' (length 8)
Diff: Expected '⠼' but received '⠊' in index 7
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:218: Failure
Input:    'NVDA+numpad1'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠁' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠁' (length 13)
Diff: Expected '⠼' but received '⠁' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:224: Failure
Input:    'NVDA+numpad2'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠃' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠃' (length 13)
Diff: Expected '⠼' but received '⠃' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:225: Failure
Input:    'NVDA+numpad4'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠙' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠙' (length 13)
Diff: Expected '⠼' but received '⠙' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:226: Failure
Input:    'NVDA+numpad5'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠑' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠑' (length 13)
Diff: Expected '⠼' but received '⠑' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:227: Failure
Input:    'NVDA+numpad6'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠋' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠋' (length 13)
Diff: Expected '⠼' but received '⠋' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:228: Failure
Input:    'NVDA+numpad7'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠛' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠛' (length 13)
Diff: Expected '⠼' but received '⠛' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:229: Failure
Input:    'NVDA+numpad8'
Expected: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠼⠓' (length 14)
Received: '⡝⡧⡙⡁⠰⠖⢝⢥⢍⢏⢁⢙⠓' (length 13)
Diff: Expected '⠼' but received '⠓' in index 12
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:230: Failure
lou_checkyaml:./yaml/fa-ir-g1-harness.yaml:248: Translation expected
FAIL yaml/fa-ir-g1-harness.yaml (exit status: 1)

Mohammadreza Rashad can you please fix these problems? Thanks.","---------- Forwarded message ----------
From: Abdolamir Banisaeid <saedjan@gmail.com>
Date: Tue, 10 Jan 2017 23:19:27 +0100
Subject: Re: کسب اجازه برای تغییر مجوز جدول بریل فارسی
To: Mohammadreza Rashad <mohammadreza5712@gmail.com>

Hi


You have all permission you need to change the license to the new one.


Thank you and your colleagues for all jobs you do about braille tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/jcsteh,1,https://github.com/liblouis/liblouis/pull/211,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.","This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/211#issuecomment-253813520,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.","Looks fine to me but I use neither ueb nor backtranslation, so you might want to have a quick chat with @MikeGray-APH to see what they think.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/jcsteh,3,https://github.com/liblouis/liblouis/pull/211#issuecomment-254111377,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.","I've extended this PR to cover several other UEB back-translation issues, again because of the conflicts that would result if I did these separately. I've also added tests for all of these. See the updated PR description for the issues that are now fixed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/MikeGray-APH,4,https://github.com/liblouis/liblouis/pull/211#issuecomment-254505872,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.",This may run into an issue we are having about when a cell should be considered undefined.  I started the discussion on the mail list.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/MikeGray-APH,5,https://github.com/liblouis/liblouis/pull/211#issuecomment-255718012,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.","I will pull this into my branch at https://github.com/MikeGray-APH/liblouis before I do a pull request into master, unless anyone has any objections?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/211#issuecomment-263506004,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.",@MikeGray-APH I presume that you looked at this and that this could go in. Correct?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/211#issuecomment-282673342,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.",See discussion on ML: http://www.freelists.org/post/liblouis-liblouisxml/Undefined-Cells,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/211#issuecomment-282734819,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.","@jcsteh can you please have a look. I must have botched something up when merging. Two test fail now

FAIL: yaml/en-ueb-03-symbols
============================

Input:    '151° 12' 40"" E'
Expected: '#aea~j #ab' #dj,7 ;,e' (length 21)
Received: '#aea~j #ab' #dj"" ;,e' (length 20)
Diff: Expected ',' but received '""' in index 15
lou_checkyaml:./yaml/en-ueb-03-symbols.yaml:193: Failure
FAILURE (85 tests, 1 failure)
FAIL yaml/en-ueb-03-symbols.yaml (exit status: 1)

FAIL: yaml/en-ueb-g2_backward
=============================

Input:    '⠁⠖⠁'
Expected: 'affa' (length 4)
Received: 'a!a' (length 3)
Diff: Expected 'f' but received '!' in index 1
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:6: Failure
Input:    '⠦'
Expected: 'his' (length 3)
Received: '?' (length 1)
Diff: Expected 'h' but received '?' in index 0
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:7: Failure
Input:    '⠦⠁'
Expected: '""a' (length 2)
Received: '?a' (length 2)
Diff: Expected '""' but received '?' in index 0
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:9: Failure
Input:    '⠴'
Expected: 'was' (length 3)
Received: '""' (length 1)
Diff: Expected 'w' but received '""' in index 0
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:10: Failure
Input:    '⠦⠁⠴'
Expected: '""a""' (length 3)
Received: '?a""' (length 3)
Diff: Expected '""' but received '?' in index 0
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:12: Failure
Input:    '⠶'
Expected: 'were' (length 4)
Received: '′' (length 1)
Diff: Expected 'w' but received '′' in index 0
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:13: Failure
Input:    '⠁⠶⠁'
Expected: 'agga' (length 4)
Received: 'a′a' (length 3)
Diff: Expected 'g' but received '′' in index 1
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:14: Failure
Input:    '⠆'
Expected: 'be' (length 2)
Received: ';' (length 1)
Diff: Expected 'b' but received ';' in index 0
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:15: Failure
Input:    '⠆⠁'
Expected: 'bea' (length 3)
Received: ';a' (length 2)
Diff: Expected 'b' but received ';' in index 0
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:16: Failure
Input:    '⠁⠆⠁'
Expected: 'abba' (length 4)
Received: 'a;a' (length 3)
Diff: Expected 'b' but received ';' in index 1
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:17: Failure
Input:    '⠒⠁'
Expected: 'cona' (length 4)
Received: ':a' (length 2)
Diff: Expected 'c' but received ':' in index 0
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:20: Failure
Input:    '⠁⠒⠁'
Expected: 'acca' (length 4)
Received: 'a:a' (length 3)
Diff: Expected 'c' but received ':' in index 1
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:22: Failure
FAILURE (23 tests, 12 failures)
FAIL yaml/en-ueb-g2_backward.yaml (exit status: 1)

My merged stuff is in https://github.com/liblouis/liblouis/tree/nvaccess-nobackIndicators",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,211,2016-10-13T07:01:20Z,2017-03-27T15:23:55Z,2017-04-04T12:42:19Z,MERGED,True,68,9,6,https://github.com/jcsteh,Several fixes for UEB back-translation,2,[],https://github.com/liblouis/liblouis/pull/211,https://github.com/jcsteh,9,https://github.com/liblouis/liblouis/pull/211#issuecomment-286632151,"This includes the following:

Don't backtranslate the dot 4, dot 5 and dot 5 6 indicators as punctuation when not followed by another cell. These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard. See below for further explanation.
Exclamation mark at the end of a word no longer produces ""ff"".

Fixes #212.


Question mark at the end of a word no longer produces ""his"".
Open and close quotes no longer produce ""his"" and ""was"".
Colon at the end of a word no longer produces ""cc"".
Semi-colon at the end of a word no longer produces ""bb"".
The gg contraction in the middle of a word no longer produces ""were"".

Regarding the indicators:
These indicators prefix various contractions and symbols, but should not have any meaning by themselves. This is needed to improve cell by cell backtranslation of input from a braille keyboard.
See also #210, which is needed to make this change work as intended.
When doing uncontracted translation, NVDA sends characters to the system as soon as they are produced. So, for example, if you type dots 3 4 5 6 - 1, the 3 4 5 6 doesn't produce text, but when you press the dot 1, NVDA sends the character ""1"" to the system. If you then type dots 1 2, we send ""2"" to the system. However, this relies on liblouis not producing any text for cells which require an additional cell to be valid. This works for number sign, capital sign, etc. However, it fails for indicators which aren't specifically defined; i.e. those that prefix symbols or contractions. An example is dot 4 used to type the ""@"" symbol.
Similarly, when using contracted braille, we use a similar technique to report a ""guess"" to the user of the characters they're entering. Again, the number example works, but this breaks when trying to type ""name"" because the dot 5 produces the quote symbol (""). The ""tion"" contraction has a similar problem: when you type dots 5 6, liblouis produces a semi-colon (;).
Ideally, we'd do something similar for English U.S. and U.K. grade 1/2 (and probably many other uncontracted/contracted tables). However, it's a bit trickier for those cases because they use chardefs.cti and changing that has much wider implications. It could break tables where these aren't indicators and actually should backtranslate to punctuation. To solve this, we'd need either:

An alternative approach where we have a new opcode to define indicators as such in the relevant uncontracted/contracted tables; or
Separation of these symbols that could be used as indicators out of the character definition tables. This could get very messy, though.

See also this mailing list thread.",I merged this myself and pushed. All tests now pass.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,213,2016-10-14T03:15:37Z,2016-11-07T15:56:39Z,2017-04-04T12:42:47Z,MERGED,True,112,9,9,https://github.com/jcsteh,Add noUndefinedDots and partialTrans modes for back-translation of input being typed on a braille keyboard,3,[],https://github.com/liblouis/liblouis/pull/213,https://github.com/jcsteh,1,https://github.com/liblouis/liblouis/pull/213,"Add a noUndefinedDots mode to disable the output of dot numbers when back-translating undefined patterns.
When backtranslating input from a braille keyboard cell by cell, it is desirable to output characters as soon as they are produced. Similarly, when backtranslating contracted braille, it is desirable to provide a ""guess"" to the user of the characters they typed. To achieve this, liblouis needs to have the ability to produce no text when indicators (which don't produce a character by themselves) are not followed by another cell. This works already for indicators liblouis knows about such as capital sign, number sign, etc., but it does not work for indicators which are not (and cannot be) specifically defined as indicators. For example, in UEB, dots 4 5 6 alone produces the text ""\456/"". Setting the noUndefinedDots mode suppresses this dot number output.
Fixes #210.


Add a partialTrans mode to specify that back-translation input should be treated as an incomplete word.
If this mode is set, rules that apply only for complete words or at the end of a word will not take effect. This is intended to be used when translating input typed on a braille keyboard to provide a rough idea to the user of the characters they are typing before the word is complete. For example, in UEB g2, if a user types ""al"", a screen reader would want to speak ""a l"" as the user is typing, but not ""a l s o"", since it's possible this is just the beginning of, say, ""alive"".","Add a noUndefinedDots mode to disable the output of dot numbers when back-translating undefined patterns.
When backtranslating input from a braille keyboard cell by cell, it is desirable to output characters as soon as they are produced. Similarly, when backtranslating contracted braille, it is desirable to provide a ""guess"" to the user of the characters they typed. To achieve this, liblouis needs to have the ability to produce no text when indicators (which don't produce a character by themselves) are not followed by another cell. This works already for indicators liblouis knows about such as capital sign, number sign, etc., but it does not work for indicators which are not (and cannot be) specifically defined as indicators. For example, in UEB, dots 4 5 6 alone produces the text ""\456/"". Setting the noUndefinedDots mode suppresses this dot number output.
Fixes #210.


Add a partialTrans mode to specify that back-translation input should be treated as an incomplete word.
If this mode is set, rules that apply only for complete words or at the end of a word will not take effect. This is intended to be used when translating input typed on a braille keyboard to provide a rough idea to the user of the characters they are typing before the word is complete. For example, in UEB g2, if a user types ""al"", a screen reader would want to speak ""a l"" as the user is typing, but not ""a l s o"", since it's possible this is just the beginning of, say, ""alive"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,213,2016-10-14T03:15:37Z,2016-11-07T15:56:39Z,2017-04-04T12:42:47Z,MERGED,True,112,9,9,https://github.com/jcsteh,Add noUndefinedDots and partialTrans modes for back-translation of input being typed on a braille keyboard,3,[],https://github.com/liblouis/liblouis/pull/213,https://github.com/jcsteh,2,https://github.com/liblouis/liblouis/pull/213#issuecomment-253791310,"Add a noUndefinedDots mode to disable the output of dot numbers when back-translating undefined patterns.
When backtranslating input from a braille keyboard cell by cell, it is desirable to output characters as soon as they are produced. Similarly, when backtranslating contracted braille, it is desirable to provide a ""guess"" to the user of the characters they typed. To achieve this, liblouis needs to have the ability to produce no text when indicators (which don't produce a character by themselves) are not followed by another cell. This works already for indicators liblouis knows about such as capital sign, number sign, etc., but it does not work for indicators which are not (and cannot be) specifically defined as indicators. For example, in UEB, dots 4 5 6 alone produces the text ""\456/"". Setting the noUndefinedDots mode suppresses this dot number output.
Fixes #210.


Add a partialTrans mode to specify that back-translation input should be treated as an incomplete word.
If this mode is set, rules that apply only for complete words or at the end of a word will not take effect. This is intended to be used when translating input typed on a braille keyboard to provide a rough idea to the user of the characters they are typing before the word is complete. For example, in UEB g2, if a user types ""al"", a screen reader would want to speak ""a l"" as the user is typing, but not ""a l s o"", since it's possible this is just the beginning of, say, ""alive"".","I've amended this pull request to also add a partialTrans mode to specify that back-translation input should be treated as an incomplete word. If this mode is set, rules that apply only for complete words or at the end of a word will not take effect. This is intended to be used when translating input typed on a braille keyboard to provide a rough idea to the user of the characters they are typing before the word is complete. See the updated pull request description for an example.
I normally would have done this a separate pull request, but these would have conflicted when merging and they're related enough that I figured they made sense to combine them.
Some questions/concerns:

This does consume two new mode bits. We have quite a few left still, but perhaps this might concern someone. One possibility to mitigate this is to see if there are any forward translation modes which will never be used for back-translation. I think there might be; e.g. I'm not sure compbrlAtCursor makes sense for back-translation. If so, we could double up on those mode bits.
I have no idea how to make the partialTrans mode work with the match/backmatch opcode. @MikeGray-APH, I'd appreciate your thoughts on where to start.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,213,2016-10-14T03:15:37Z,2016-11-07T15:56:39Z,2017-04-04T12:42:47Z,MERGED,True,112,9,9,https://github.com/jcsteh,Add noUndefinedDots and partialTrans modes for back-translation of input being typed on a braille keyboard,3,[],https://github.com/liblouis/liblouis/pull/213,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/213#issuecomment-253813010,"Add a noUndefinedDots mode to disable the output of dot numbers when back-translating undefined patterns.
When backtranslating input from a braille keyboard cell by cell, it is desirable to output characters as soon as they are produced. Similarly, when backtranslating contracted braille, it is desirable to provide a ""guess"" to the user of the characters they typed. To achieve this, liblouis needs to have the ability to produce no text when indicators (which don't produce a character by themselves) are not followed by another cell. This works already for indicators liblouis knows about such as capital sign, number sign, etc., but it does not work for indicators which are not (and cannot be) specifically defined as indicators. For example, in UEB, dots 4 5 6 alone produces the text ""\456/"". Setting the noUndefinedDots mode suppresses this dot number output.
Fixes #210.


Add a partialTrans mode to specify that back-translation input should be treated as an incomplete word.
If this mode is set, rules that apply only for complete words or at the end of a word will not take effect. This is intended to be used when translating input typed on a braille keyboard to provide a rough idea to the user of the characters they are typing before the word is complete. For example, in UEB g2, if a user types ""al"", a screen reader would want to speak ""a l"" as the user is typing, but not ""a l s o"", since it's possible this is just the beginning of, say, ""alive"".","Generally looks good to me. Tests, doc and all is there, so I'm happy. As for questions for @MikeGray-APH I found it most effective to just have a quick voip (e.g. Skype) chat with them.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,213,2016-10-14T03:15:37Z,2016-11-07T15:56:39Z,2017-04-04T12:42:47Z,MERGED,True,112,9,9,https://github.com/jcsteh,Add noUndefinedDots and partialTrans modes for back-translation of input being typed on a braille keyboard,3,[],https://github.com/liblouis/liblouis/pull/213,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/213#issuecomment-258874870,"Add a noUndefinedDots mode to disable the output of dot numbers when back-translating undefined patterns.
When backtranslating input from a braille keyboard cell by cell, it is desirable to output characters as soon as they are produced. Similarly, when backtranslating contracted braille, it is desirable to provide a ""guess"" to the user of the characters they typed. To achieve this, liblouis needs to have the ability to produce no text when indicators (which don't produce a character by themselves) are not followed by another cell. This works already for indicators liblouis knows about such as capital sign, number sign, etc., but it does not work for indicators which are not (and cannot be) specifically defined as indicators. For example, in UEB, dots 4 5 6 alone produces the text ""\456/"". Setting the noUndefinedDots mode suppresses this dot number output.
Fixes #210.


Add a partialTrans mode to specify that back-translation input should be treated as an incomplete word.
If this mode is set, rules that apply only for complete words or at the end of a word will not take effect. This is intended to be used when translating input typed on a braille keyboard to provide a rough idea to the user of the characters they are typing before the word is complete. For example, in UEB g2, if a user types ""al"", a screen reader would want to speak ""a l"" as the user is typing, but not ""a l s o"", since it's possible this is just the beginning of, say, ""alive"".","Looks very good as far as I'm concerned: Documentation, tests, support for the yaml tests, it's all there. Great stuff!
Also @MikeGray-APH seems to agree with the changes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,215,2016-10-15T17:40:26Z,2016-12-01T09:41:25Z,2017-05-18T11:33:20Z,MERGED,True,291,0,1,https://github.com/leonardder,Unicode braille table for back translating to unicode braille output #214,1,[],https://github.com/liblouis/liblouis/pull/215,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/215,"As proposed in #214, added a new unicode braille table based on braille-patterns.cti. This adds the possibility to back translate braille input to unicode braille output. Implements #214","As proposed in #214, added a new unicode braille table based on braille-patterns.cti. This adds the possibility to back translate braille input to unicode braille output. Implements #214",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,215,2016-10-15T17:40:26Z,2016-12-01T09:41:25Z,2017-05-18T11:33:20Z,MERGED,True,291,0,1,https://github.com/leonardder,Unicode braille table for back translating to unicode braille output #214,1,[],https://github.com/liblouis/liblouis/pull/215,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/215#issuecomment-263505752,"As proposed in #214, added a new unicode braille table based on braille-patterns.cti. This adds the possibility to back translate braille input to unicode braille output. Implements #214","Sorry to only get back to you now. The table looks good and could go in. There is however the licensing issue (#26).

I thought the table was all new and created by you. Are you sure DocArch has copyrights on it?
Would you be willing to re-license the table under LGPLv2.1+?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,215,2016-10-15T17:40:26Z,2016-12-01T09:41:25Z,2017-05-18T11:33:20Z,MERGED,True,291,0,1,https://github.com/leonardder,Unicode braille table for back translating to unicode braille output #214,1,[],https://github.com/liblouis/liblouis/pull/215,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/215#issuecomment-263528395,"As proposed in #214, added a new unicode braille table based on braille-patterns.cti. This adds the possibility to back translate braille input to unicode braille output. Implements #214","I added DocArch to the copyright as this table is almost a complete copy
of braille-patterns.cti, containing their copyright. LGPLv2.1+ is not at
all a problem for me.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,215,2016-10-15T17:40:26Z,2016-12-01T09:41:25Z,2017-05-18T11:33:20Z,MERGED,True,291,0,1,https://github.com/leonardder,Unicode braille table for back translating to unicode braille output #214,1,[],https://github.com/liblouis/liblouis/pull/215,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/215#issuecomment-263530199,"As proposed in #214, added a new unicode braille table based on braille-patterns.cti. This adds the possibility to back translate braille input to unicode braille output. Implements #214","OK, thanks. AFAIK @bertfrees is in negotiations with DocArch about the license change.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,217,2016-10-26T13:02:19Z,2016-10-26T14:43:32Z,2017-01-13T13:41:06Z,MERGED,True,1,7,2,https://github.com/MikeGray-APH,Fix double quote back-translation issue.,1,[],https://github.com/liblouis/liblouis/pull/217,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/217,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/218,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/rimas-kudelis,2,https://github.com/liblouis/liblouis/pull/218#issuecomment-258112496,,"Glad you liked it. :)
Do you guys share your patches with brltty, or should I submit a pull request for them as well?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/rimas-kudelis,3,https://github.com/liblouis/liblouis/pull/218#issuecomment-258144968,,"Oh, by the way...
There also exists a Lithuanian hyphenation dictionary, but it is licensed under LaTeX Project Public Licence. Is it acceptable to include it in liblouis' repository?
On the other hand, does it even make sense for liblouis to host own copies of these files if you don't modify them?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/218#issuecomment-258164273,,"To my knowledge we do not share any patches with brltty. They might watch our repo, but to be safe I'd submit a PR to them as well",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/218#issuecomment-258168962,,"The hyphenation library is another question. Generally I think we'd like to stick to LGPL code and tables. As far as I know the existing hyphenation tables are either created specifically for liblouis, as is the case for the danish hyphenation table, or they originate from OpenOffice and are licensed under LGPL.
The licensing of the hyphenation tables is a bit murky, see the wiki page on table licensing. On the other hand according to the Free Software Foundation including hyphenation tables constitutes ""mere aggregation"", see #26 (comment), which means that we could legally include hyphenation tables with a different license as long as this license allows for redistribution.
So ideally we should extend liblouis to use standard hyphenation tables. Failing that I guess we could add the Lithuanian hyphenation dictionary.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/218#issuecomment-258170808,,"Note that Liblouis can't make use of LaTeX tables, only OpenOffice.org tables. (I assume you are talking about a LaTeX table because you mentioned their license). The two type of tables have a similar format, and OpenOffice.org tables can be generated from LaTeX tables, but Liblouis can't directly process the LaTeX format.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/rimas-kudelis,7,https://github.com/liblouis/liblouis/pull/218#issuecomment-258194209,,"@bertfrees:

...and OpenOffice.org tables can be generated from LaTeX tables...

That's exactly why the table I'm talking about is licensed like that. :)
This hyphenation table was generated from LPPL-licensed TeX pattern files more than 10 years ago, and had't been changed until the last year when it was re-converted from the same original source following newer instructions. I suppose that means it is nearly perfect. :)
This table (or its older version) is or was used by LibreOffice, Mozilla, OpenOffice.org and likely many other open-source projects. The project above (not LibO or AOO) is as close as it gets to being upstream source of this data, the only higher upstream being the original TeX patterns, which, it seems, haven't been changed since 2004 or perhaps even earlier either.
EDIT: i lied a little. Current upstream of our hyphenation table is http://tug.org/svn/texhyphen/trunk/hyph-utf8/tex/generic/hyph-utf8/patterns/txt/, from where it was taken and converted to OpenOffice.org/LibreOffice format. Interestingly, this source seems to quote a different, much more permissive license for the hyphenation data.
@egli:
I think that the less duplication of code (or data in this case), the better. If you can extend liblouis so that hyphenation tables don't have to be explicitly included in Braille conversion tables, I guess that would be the first step towards turning them into a completely external resource. In the long run, I think it would be best if these were treated by everybody just like ispell/aspell/myspell/hunspell dictionaries are – as data for libhyphen, not something every application or library should ship own copy of.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/rimas-kudelis,8,https://github.com/liblouis/liblouis/pull/218#issuecomment-258877022,,"By the way, when preparing my test, I discovered that during test runs liblouis does not translate empty cells to an appropriate Unicode character (U+2800 BRAILLE PATTERN BLANK), but instead uses U+0020 SPACE. @egli, is this an oversight?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/218#issuecomment-262770422,,@rimas-kudelis I don't know if this an oversight. Might be by design. I don't know the code well enough,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/218#issuecomment-262771948,,It is by design. (see also #208 (comment)),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/rimas-kudelis,11,https://github.com/liblouis/liblouis/pull/218#issuecomment-262774690,,"Well that confirms the status quo, but doesn't really explain the reasons behind the design decision, or even confirm that there was a decision at all.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,218,2016-11-03T06:54:40Z,2016-11-03T09:16:17Z,2016-11-24T14:15:16Z,MERGED,True,292,80,5,https://github.com/rimas-kudelis,"Updated Lithuanian 8-dots table, added a test for it.",1,[],https://github.com/liblouis/liblouis/pull/218,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/218#issuecomment-262774923,,I'm sorry I don't have an explanation for it. (I didn't design it).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,219,2016-11-03T19:41:16Z,2016-11-03T19:56:26Z,2017-01-13T13:41:06Z,CLOSED,False,17,4,1,https://github.com/vsmontalvao,Fix for stackoverflow crashes on applications with smaller stack size,1,[],https://github.com/liblouis/liblouis/pull/219,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/219,"This change moves the memory allocation for the patterns variable from the stack to the heap inside the compileRule function. The patterns variable was a widechar array with size 27720 which usually takes 54KB of memory (or 108KB if UCS=4). When there's not available memory on the stack this could lead to stackoverflow crashes or accessing unmapped memory. As this variable is declared in 2 places (with different scopes) inside the function, an executable could require at least 108KB (or 216KB if USC=4) of stack memory per compileRule call.
Similarly to other places, it also adds a check which calls outOfMemory in case of not having sufficient available memory on the heap.
The fix is especially important if we consider that some applications might have smaller stack size limits and requiring large ammounts of stack size (e.g. >100KB) for a single function call can cause such crashes.","This change moves the memory allocation for the patterns variable from the stack to the heap inside the compileRule function. The patterns variable was a widechar array with size 27720 which usually takes 54KB of memory (or 108KB if UCS=4). When there's not available memory on the stack this could lead to stackoverflow crashes or accessing unmapped memory. As this variable is declared in 2 places (with different scopes) inside the function, an executable could require at least 108KB (or 216KB if USC=4) of stack memory per compileRule call.
Similarly to other places, it also adds a check which calls outOfMemory in case of not having sufficient available memory on the heap.
The fix is especially important if we consider that some applications might have smaller stack size limits and requiring large ammounts of stack size (e.g. >100KB) for a single function call can cause such crashes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,219,2016-11-03T19:41:16Z,2016-11-03T19:56:26Z,2017-01-13T13:41:06Z,CLOSED,False,17,4,1,https://github.com/vsmontalvao,Fix for stackoverflow crashes on applications with smaller stack size,1,[],https://github.com/liblouis/liblouis/pull/219,https://github.com/vsmontalvao,2,https://github.com/liblouis/liblouis/pull/219#issuecomment-258256149,"This change moves the memory allocation for the patterns variable from the stack to the heap inside the compileRule function. The patterns variable was a widechar array with size 27720 which usually takes 54KB of memory (or 108KB if UCS=4). When there's not available memory on the stack this could lead to stackoverflow crashes or accessing unmapped memory. As this variable is declared in 2 places (with different scopes) inside the function, an executable could require at least 108KB (or 216KB if USC=4) of stack memory per compileRule call.
Similarly to other places, it also adds a check which calls outOfMemory in case of not having sufficient available memory on the heap.
The fix is especially important if we consider that some applications might have smaller stack size limits and requiring large ammounts of stack size (e.g. >100KB) for a single function call can cause such crashes.",Will send another one from a different branch soon.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,220,2016-11-03T20:05:52Z,2016-11-08T09:08:42Z,2017-01-13T13:41:06Z,MERGED,True,17,4,1,https://github.com/vsmontalvao,Fix for stackoverflow crashes on applications with smaller stack size,1,[],https://github.com/liblouis/liblouis/pull/220,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/220,"This change moves the memory allocation for the patterns variable from
the stack to the heap inside the compileRule function. The patterns
variable was a widechar array with size 27720 which usually takes 54KB
of memory (or 108KB if UCS=4). When there's not available memory on the
stack this could lead to stackoverflow crashes or accessing unmapped
memory. As this variable is declared in 2 places (with different scopes)
inside the function, an executable could require at least 108KB (or
216KB if USC=4) of stack memory per compileRule call.
Similarly to other places, it also adds a check which calls outOfMemory
in case of not having sufficient available memory on the heap.
The fix is especially important if we consider that some applications
might have smaller stack size limits and requiring large ammounts of
stack size (e.g. >100KB) for a single function call can cause such
crashes.","This change moves the memory allocation for the patterns variable from
the stack to the heap inside the compileRule function. The patterns
variable was a widechar array with size 27720 which usually takes 54KB
of memory (or 108KB if UCS=4). When there's not available memory on the
stack this could lead to stackoverflow crashes or accessing unmapped
memory. As this variable is declared in 2 places (with different scopes)
inside the function, an executable could require at least 108KB (or
216KB if USC=4) of stack memory per compileRule call.
Similarly to other places, it also adds a check which calls outOfMemory
in case of not having sufficient available memory on the heap.
The fix is especially important if we consider that some applications
might have smaller stack size limits and requiring large ammounts of
stack size (e.g. >100KB) for a single function call can cause such
crashes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,222,2016-11-11T16:13:08Z,2016-11-11T16:52:49Z,2017-01-13T13:41:06Z,CLOSED,False,700,668,7,https://github.com/MikeGray-APH,Aph branch,3,[],https://github.com/liblouis/liblouis/pull/222,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/222,Adds empmatchbefore and empmatchafter prefix opcodes and updates UEB tables to use them.  Also fixes emphasis word resolution when emphasis starts on space.,Adds empmatchbefore and empmatchafter prefix opcodes and updates UEB tables to use them.  Also fixes emphasis word resolution when emphasis starts on space.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,223,2016-11-11T18:33:01Z,2016-11-24T12:48:15Z,2016-11-24T12:48:15Z,MERGED,True,705,670,7,https://github.com/MikeGray-APH,Aph branch,5,[],https://github.com/liblouis/liblouis/pull/223,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/223,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/simait,1,https://github.com/liblouis/liblouis/pull/224,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/simait,2,https://github.com/liblouis/liblouis/pull/224#issuecomment-260276141,,"make check
============================================================================
Testsuite summary for Liblouis 3.0.0
============================================================================
# TOTAL: 97
# PASS:  36
# SKIP:  56
# XFAIL: 5
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================

make distcheck
Testsuite summary for Liblouis 3.0.0
============================================================================
# TOTAL: 96
# PASS:  35
# SKIP:  56
# XFAIL: 5
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/simait,3,https://github.com/liblouis/liblouis/pull/224#issuecomment-260933301,,"The .tbl file is based on tr.tbl and other grade2 files.
However, I noticed that there are no table-files that have the suffix '-g2', is this something that we wish to avoid, or?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/224#issuecomment-260933907,,"Great, thanks. No we definitely don't want to avoid ""-g2"". It's just that these .tbl we currently have come directly from my application, and I simply have only one table for each language. I use contracted braille whenever available.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/simait,5,https://github.com/liblouis/liblouis/pull/224#issuecomment-260936848,,"I'll try to get some test-data from the original author, otherwise any yaml-test I write will probably be less accurate than the table meta-data :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/simait,6,https://github.com/liblouis/liblouis/pull/224#issuecomment-260937019,,"Oh, and I'd just like to point out that the CI-test actually fail with ""The command ""sudo apt-get update -qq"" failed and exited with 100 during ."", in case anyone is wondering :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/224#issuecomment-282674901,,@simait We want to merge this now. Were you able to get some more info from the original author regarding the meta data and tests?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/224#issuecomment-283618452,,"Hi @simait I was just going to merge when I noticed that this comment in the file probably means that we cannot integrate this

Bu dosyanın içeriği, yanlızca izin verilen firma ya da şahıslar tarafından kullanılabilir; ücretli projelerde izinsiz kullanımı yasaktır.

According to Google Translate this means

The contents of this file may only be used by authorized parties, Unauthorized use of paid projects is prohibited.

This makes this table proprietary and we cannot include it.
Can you clarify with the original authors whether they would be willing to release this table under LGPLv2.1+?
Sorry to be so picky but as you know we've been burned in the past.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/224#issuecomment-283619267,,Good catch. It's probably a good idea to write all comment in English so that we don't need Google :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/224#issuecomment-283629249,,Sent a mail to the original author ugur.gurbuz39 [at] brailleteknik.com,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/224#issuecomment-283632436,,If he responds maybe we can ask him about the metadata.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/224#issuecomment-283636606,,"A message that you sent could not be delivered to one or more of its
recipients. This is a permanent error. The following address(es) failed:


ugur...@brailleteknik.com
No Such User Here

Trying an email off their website",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/simait,13,https://github.com/liblouis/liblouis/pull/224#issuecomment-284215649,,"@egli Haven't heard anything from the original author. I'm back at work on Monday so I'll apply some pressure from our side again. Also, being picky is a virtue, at least in my book ;)
Also, we're working on a draft for contributor guidelines for liblouis tables (for our distributors), I'll be sure to include a stringent requirement that comments should be in english.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/simait,14,https://github.com/liblouis/liblouis/pull/224#issuecomment-289454018,,"Just a status-update, we've gotten an informal OK on the license change, but we're still waiting on the files with the updated license headers (I prefer not modifying them myself).
However, I'm going on parental leave this Friday (31/3) so chances are I won't be getting the files before then... Anyway, this issue is progressing, albeit very slowly...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/egli,15,https://github.com/liblouis/liblouis/pull/224#issuecomment-289468531,,"Oh, @simait enjoy your parental leave. Does that mean you'll be away for a year?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/simait,16,https://github.com/liblouis/liblouis/pull/224#issuecomment-289987228,,"Thank you! And sadly no, only until the 18th of June.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/egli,17,https://github.com/liblouis/liblouis/pull/224#issuecomment-305524058,,"We are waiting for someone to deliver updated tables. The update is basically just a license change. Presumably the updates will never come. And most likely we should be capable of changing the license text ourselves since we seem to have permission.
@simait can you just send me a copy of the mail where you have the permission?
I'll take care of changing the license text",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,224,2016-11-14T08:23:07Z,2017-08-25T12:31:13Z,2017-08-25T12:31:13Z,MERGED,True,618,0,3,https://github.com/simait,Added table for Turkish grade 2.,5,['waiting'],https://github.com/liblouis/liblouis/pull/224,https://github.com/egli,18,https://github.com/liblouis/liblouis/pull/224#issuecomment-305524364,,"Oh, I see that you are on parental leave. Maybe this will have to wait.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,227,2016-11-18T10:19:39Z,2016-11-24T12:49:46Z,2016-11-24T12:49:54Z,MERGED,True,612,4,5,https://github.com/egli,Add Urdu Braille tables by Jake Kyle,4,[],https://github.com/liblouis/liblouis/pull/227,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/227,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,227,2016-11-18T10:19:39Z,2016-11-24T12:49:46Z,2016-11-24T12:49:54Z,MERGED,True,612,4,5,https://github.com/egli,Add Urdu Braille tables by Jake Kyle,4,[],https://github.com/liblouis/liblouis/pull/227,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/227#issuecomment-261522486,,"Jake, here's the error log from lou_checktable:
./tools/lou_checktable tables/ur-pk-g2.ctb 
tables/ur-pk-g2.ctb:33: error: Dot pattern \235/ is not defined.
tables/ur-pk-g2.ctb:35: error: Dot pattern \135/ is not defined.
tables/ur-pk-g2.ctb:37: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:38: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:52: error: Dot pattern \235/ is not defined.
tables/ur-pk-g2.ctb:53: error: Dot pattern \235/ is not defined.
tables/ur-pk-g2.ctb:56: error: Dot pattern \235/ is not defined.
tables/ur-pk-g2.ctb:57: error: Dot pattern \235/ is not defined.
tables/ur-pk-g2.ctb:57: error: Dot pattern \1236/ is not defined.
tables/ur-pk-g2.ctb:58: error: Dot pattern \235/ is not defined.
tables/ur-pk-g2.ctb:62: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:65: error: Dot pattern \135/ is not defined.
tables/ur-pk-g2.ctb:65: error: Dot pattern \13456/ is not defined.
tables/ur-pk-g2.ctb:68: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:69: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:72: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:73: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:74: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:74: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:75: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:76: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:79: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:80: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:81: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:82: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:83: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:94: error: Dot pattern \26/ is not defined.
tables/ur-pk-g2.ctb:95: error: Dot pattern \13456/ is not defined.
tables/ur-pk-g2.ctb:96: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:97: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:98: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:99: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:100: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:101: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:102: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:103: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:104: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:105: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:106: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:107: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:108: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:109: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:112: error: Dot pattern \25/ is not defined.
tables/ur-pk-g2.ctb:113: error: Dot pattern \35/ is not defined.
tables/ur-pk-g2.ctb:114: error: Dot pattern \1236/ is not defined.
tables/ur-pk-g2.ctb:115: error: Dot pattern \1236/ is not defined.
tables/ur-pk-g2.ctb:116: error: Dot pattern \135/ is not defined.
tables/ur-pk-g2.ctb:117: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:139: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:147: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:160: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:164: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:167: error: Dot pattern \13456/ is not defined.
tables/ur-pk-g2.ctb:168: error: Dot pattern \13456/ is not defined.
tables/ur-pk-g2.ctb:169: error: Dot pattern \13456/ is not defined.
tables/ur-pk-g2.ctb:170: error: Dot pattern \35/ is not defined.
tables/ur-pk-g2.ctb:171: error: Dot pattern \35/ is not defined.
tables/ur-pk-g2.ctb:172: error: Dot pattern \1236/ is not defined.
tables/ur-pk-g2.ctb:173: error: Dot pattern \36/ is not defined.
tables/ur-pk-g2.ctb:174: error: Dot pattern \36/ is not defined.
tables/ur-pk-g2.ctb:175: error: Dot pattern \25/ is not defined.
tables/ur-pk-g2.ctb:177: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:177: error: Dot pattern \4/ is not defined.
tables/ur-pk-g2.ctb:178: error: Dot pattern \4/ is not defined.
tables/ur-pk-g2.ctb:179: error: Dot pattern \235/ is not defined.
tables/ur-pk-g2.ctb:186: error: Dot pattern \135/ is not defined.
tables/ur-pk-g2.ctb:187: error: Dot pattern \135/ is not defined.
tables/ur-pk-g2.ctb:190: error: Dot pattern \26/ is not defined.
tables/ur-pk-g2.ctb:192: error: Dot pattern \36/ is not defined.
tables/ur-pk-g2.ctb:199: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:199: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:200: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:201: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:202: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:203: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:204: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:205: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:206: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:207: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:208: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:209: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:210: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:211: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:211: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:212: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:213: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:214: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:215: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:216: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:217: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:218: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:219: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:220: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:221: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:222: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:223: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:224: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:225: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:225: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:226: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:226: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:227: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:228: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:229: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:230: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:231: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:232: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:233: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:234: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:235: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:236: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:236: error: Dot pattern \135/ is not defined.
tables/ur-pk-g2.ctb:237: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:237: error: Dot pattern \16/ is not defined.
tables/ur-pk-g2.ctb:239: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:240: error: Dot pattern \5/ is not defined.
tables/ur-pk-g2.ctb:243: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:244: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:245: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:246: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:247: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:248: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:249: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:250: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:251: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:252: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:253: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:254: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:255: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:256: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:256: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:257: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:258: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:259: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:260: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:262: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:263: error: Dot pattern \45/ is not defined.
tables/ur-pk-g2.ctb:266: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:267: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:268: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:269: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:270: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:271: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:272: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:273: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:274: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:275: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:276: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:277: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:278: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:279: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:279: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:280: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:281: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:282: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:283: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:284: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:285: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:286: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:288: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:289: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:290: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:291: error: Dot pattern \456/ is not defined.
tables/ur-pk-g2.ctb:294: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:295: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:296: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:297: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:298: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:299: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:301: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:302: error: Dot pattern \3456/ is not defined.
tables/ur-pk-g2.ctb:311: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:312: error: Character '\x0626' is not defined
tables/ur-pk-g2.ctb:313: error: Dot pattern \13456/ is not defined.
tables/ur-pk-g2.ctb:334: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:335: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:336: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:337: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:338: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:339: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:340: error: Dot pattern \46/ is not defined.
tables/ur-pk-g2.ctb:364: error: Dot pattern \135/ is not defined.
tables/ur-pk-g2.ctb:413: error: Dot pattern \13456/ is not defined.
tables/ur-pk-g2.ctb:414: error: Dot pattern \13456/ is not defined.
tables/ur-pk-g2.ctb:415: error: Dot pattern \4/ is not defined.
tables/ur-pk-g2.ctb:416: error: Dot pattern \135/ is not defined.
tables/ur-pk-g2.ctb:419: error: Dot pattern \135/ is not defined.
187 errors found.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,227,2016-11-18T10:19:39Z,2016-11-24T12:49:46Z,2016-11-24T12:49:54Z,MERGED,True,612,4,5,https://github.com/egli,Add Urdu Braille tables by Jake Kyle,4,[],https://github.com/liblouis/liblouis/pull/227,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/227#issuecomment-261991479,,"Jake, thanks for the updated tables. All tests pass now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,228,2016-11-29T13:00:00Z,2016-11-29T13:02:43Z,2016-11-29T13:02:45Z,MERGED,True,363,102,4,https://github.com/egli,Add updated Italian 8 dot tables,1,[],https://github.com/liblouis/liblouis/pull/228,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/228,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,230,2016-12-01T11:42:45Z,2016-12-01T11:45:32Z,2016-12-01T11:45:36Z,MERGED,True,149,19,15,https://github.com/egli,Feature/add license headers2,3,[],https://github.com/liblouis/liblouis/pull/230,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/230,This is basically an updated version of #23,This is basically an updated version of #23,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,231,2016-12-01T13:56:20Z,2017-01-11T13:21:56Z,2017-01-11T13:22:06Z,MERGED,True,56,0,3,https://github.com/egli,Add new Turkish grade1 table,4,[],https://github.com/liblouis/liblouis/pull/231,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/231,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,232,2016-12-01T15:09:37Z,2017-01-11T13:36:27Z,2017-01-11T13:36:33Z,MERGED,True,176,8,2,https://github.com/egli,Added improvements to Chinese braille table,2,[],https://github.com/liblouis/liblouis/pull/232,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/232,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,234,2016-12-09T14:30:05Z,2016-12-09T14:46:58Z,2016-12-09T14:46:58Z,MERGED,True,52,1,1,https://github.com/garconvacher,Added Greek letters to french braille table (6 dots),1,[],https://github.com/liblouis/liblouis/pull/234,https://github.com/garconvacher,1,https://github.com/liblouis/liblouis/pull/234,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/garconvacher,1,https://github.com/liblouis/liblouis/pull/235,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/235#issuecomment-266403858,,"Hi @garconvacher, would you mind to license this table under LGPLv2.1+ instead of LGPLv3+?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/garconvacher,3,https://github.com/liblouis/liblouis/pull/235#issuecomment-266420827,,"OK, I read the wiki.
I will change to 2.1",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/235#issuecomment-268493325,,Why did you revert? From what I saw I liked it. Much cleaner :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/garconvacher,5,https://github.com/liblouis/liblouis/pull/235#issuecomment-268515326,,I remember some things to check and I did a github newbie mistake :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/surfer0627,6,https://github.com/liblouis/liblouis/pull/235#issuecomment-287009756,,"Hi,
In the following case, it seems that we have possible conflicts with some braille codes:
ipa.utb line 161:
sign \X0251 16          # ɑ - script a - open back unrounded vowel
unicode def:
0251: LATIN SMALL LETTER ALPHA
braille codes:
16 = open back unrounded vowel
46-1 = ALPHA
CC
@garconvacher
@egli",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/garconvacher,7,https://github.com/liblouis/liblouis/pull/235#issuecomment-287076688,,"Hi,
No possible conflicts here :
unicode 0251 is in the 'IPA Extensions' block of unicode. 'LATIN SMALL LETTER ALPHA' is the actual name, 'LATIN SMALL LETTER SCRIPT A' is the old name (see: http://www.fileformat.info/info/unicode/char/0251/index.htm).
In this table, I used the names given in the reference document ;)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/surfer0627,8,https://github.com/liblouis/liblouis/pull/235#issuecomment-287260129,,"Hi,
Thank you for the clafication (LATIN SMALL LETTER ALPHA' is the actual name, 'LATIN SMALL LETTER SCRIPT A' is the old name).
Confirmed, Liblouis allow two braille code for one Unicode hex?
Or, if this is a typo in locale braille code, should I need to change locale braille ALPHA = 46-1 to dot 16?
Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/garconvacher,9,https://github.com/liblouis/liblouis/pull/235#issuecomment-287287237,,"Hi,
Greek alpha is 03B1. No conflicts possible with 0251.
0251 is for phonetic only. Unicode range from 0250 to 02AF is 'IPA Extensions'.
Real conflict, for example, is greek beta 03B2, same code as 'voiced bilabial fricative' (line 92). In french braille, greek beta is 45-12, international phonetic beta is 46-12.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/garconvacher,10,https://github.com/liblouis/liblouis/pull/235#issuecomment-287291965,,"@surfer0627, thanks for your question. On this occasion, I found some mistakes from the reference document. Some typo codes are for greek letters but doesn't match unicode IPA extensions!
Example :
Greek letter: http://www.fileformat.info/info/unicode/char/3b5/index.htm
IPA: http://www.fileformat.info/info/unicode/char/025B/index.htm",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,235,2016-12-12T10:52:20Z,2017-01-13T13:50:31Z,2017-03-17T08:47:03Z,MERGED,True,273,0,1,https://github.com/garconvacher,This table contains braille codes for International Phonetic Alphabet,7,[],https://github.com/liblouis/liblouis/pull/235,https://github.com/garconvacher,11,https://github.com/liblouis/liblouis/pull/235#issuecomment-287298747,,"Errata: unicode in the reference document are OK, my mistake!
I uncomment some lines.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/240,lou_chartodots allows easy translating of input text into Unicode Braille dots.,lou_chartodots allows easy translating of input text into Unicode Braille dots.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/240#issuecomment-282675870,lou_chartodots allows easy translating of input text into Unicode Braille dots.,The PR looks ok. @rimas-kudelis what is the use case for this? Can you provide some minimal documentation?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/rimas-kudelis,3,https://github.com/liblouis/liblouis/pull/240#issuecomment-282704891,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"Regarding the use case: one may want to convert a bit of text into the
Unicode representation of Braille, without having it further acted upon,
even if just out of curiosity (as in my case), or if let's say you're
planning to order a bunch of metal signboards with directions for
navigating in a building, with Braille dots on them, and you want them
designed first. I suppose a converter like this might be helpful in such
case.

Initially I thought `lou_translate()` would be the tool to use in such
case, but it wasn't. :)

Regarding the documentation, i could add it myself if you point me to
where exactly I should do this, but I would strongly prefer if you could
just add it yourself, in a similar fashion as that of other tools. I'm
not a native English speaker, and I'm not even sure that I know the
right terminology to use.

The app itself was based on one of the other tools in the repo (probably
`lou_translate()`, but I don't really remember). I'm not too proficient
a C coder, so it's basically just a little hack. :)

That said, I hope you won't turn away this PR just based on this comment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/240#issuecomment-282712573,lou_chartodots allows easy translating of input text into Unicode Braille dots.,@rimas-kudelis why can't you use lou_translate?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/rimas-kudelis,5,https://github.com/liblouis/liblouis/pull/240#issuecomment-282714141,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"Obviously because I couldn't find a way to translate to dots with
`lou_translate`, it always translates text to text:

rq@inspiron:~$ lou_translate --help
Usage: lou_translate [OPTIONS] TABLE[,TABLE,...]
Translate whatever is on standard input and print it on standard
output. It is intended for large-scale testing of the accuracy of
Braille translation and back-translation.

  -h, --help          display this help and exit
  -v, --version       display version information and exit
  -f, --forward       forward translation using the given table
  -b, --backward      backward translation using the given table
                      If neither -f nor -b are specified forward translation
                      is assumed

Report bugs to liblouis-liblouisxml@freelists.org.
Liblouis home page: <http://www.liblouis.org>
rq@inspiron:~$ echo 'test' | lou_translate -f
~/Source_Code/src/liblouis/tables/lt.tbl
test
rq@inspiron:~$ echo 'test' | lou_translate -b
~/Source_Code/src/liblouis/tables/lt.tbl
test",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/240#issuecomment-282718286,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"@rimas-kudelis would the following work?
$ echo 'test' | lou_translate -f ~/Source_Code/src/liblouis/tables/unicode.dis,lt.tbl",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/rimas-kudelis,7,https://github.com/liblouis/liblouis/pull/240#issuecomment-282721837,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"2017.02.27 15:22, Christian Egli rašė:
 echo 'test' | lou_translate -f ~/Source_Code/src/liblouis/tables/unicode.dis,lt.tbl
That's better, although it converts to some sort of Unicode sequences,
and even putting this inside `echo -e` doesn't produce the expected
result. Meanwhile `lou_chartodots` converts directly to dots.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/240#issuecomment-284445248,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"Hi @rimas-kudelis
I understand that lou_translate doesn't seem to deliver the expected result. However I don't understand why it doesn't. At the moment I'm not quite sure whether we should try to make lou_translate work the way you want it or if we should really create a new tool. I think this needs further investigation. That's why I'm moving this to 3.2. Hope you're ok with that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/rimas-kudelis,9,https://github.com/liblouis/liblouis/pull/240#issuecomment-284489284,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"@egli: fine by me. I figured lou_translate mirrors lou_translate(), so I thought I would mirror lou_chartodots() with lou_chartodots. Whichever works best for you is fine by me, as I don't plan to maintain the tool myself.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/reiner-dolp,10,https://github.com/liblouis/liblouis/pull/240#issuecomment-284493426,lou_chartodots allows easy translating of input text into Unicode Braille dots.,I don't understand what this is trying to achieve. What are you currently receiving as output of lou_translate and what is the expected output?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/rimas-kudelis,11,https://github.com/liblouis/liblouis/pull/240#issuecomment-284515808,lou_chartodots allows easy translating of input text into Unicode Braille dots.,@reiner-dolp I've already answered these questions. Please read the discussion before asking.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/reiner-dolp,12,https://github.com/liblouis/liblouis/pull/240#issuecomment-284523253,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"I read the discussion. You did provide example output for an invocation without unicode.dis which yields the expected output as you did not instruct liblouis to convert the output to unicode braille patterns.
You did however, not provide example output for a correct invokation with unicode.dis. You mentioned that you tried to use echo -e to fix the issue, which suggests that you are recieving escape sequences (shown in the windows terminal on the right side) instead of the actual braille patterns (as shown in the left arch linux terminal).

If this is your issue (I am not sure) the following may help


Check if your terminal is configured to use UTF-8 (you can use echo $LANG which should output something similar to en_US.UTF-8)


checkout the latest version from source and compile it using ./autogen.sh && ./configure && make && make install.


These steps did resolve the issue on my windows machine:

I am trying to help... assuming I did not read the discussion before posting is harsh and kind of insulting.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/240#issuecomment-284524150,lou_chartodots allows easy translating of input text into Unicode Braille dots.,@reiner-dolp thanks for your help. Was writing an answer but you beat me to it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/rimas-kudelis,14,https://github.com/liblouis/liblouis/pull/240#issuecomment-284659439,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"@reiner-dolp: my apologies for the insult, but it really did seem like you hadn't read the discussion.
My locale is set to lt_LT.UTF-8. The terminal I'm using is xfce4-terminal (because I'm currently using Xubuntu). When I follow @egli's suggestion, I get this:
rq@inspiron:~/Projektai$  echo 'test' | lou_translate -f ~/Source_Code/src/liblouis/tables/unicode.dis,lt.tbl
\x281e\x2811\x280e\x281e

However, I'm using lou_translate from Ubuntu repositories, and these currently ship version 2.6.5. Maybe that's the culprit.
Either way, I don't feel like the command above is intuitive and easy enough to remember. Perhaps lou_translate could provide a separate option (e.g. -d, --dots) to achieve this result?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/240#issuecomment-284673796,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"However, I'm using lou_translate from Ubuntu repositories, and these currently ship version 2.6.5. Maybe that's the culprit.

Yes that is the problem.

Either way, I don't feel like the command above is intuitive and easy enough to remember. Perhaps lou_translate could provide a separate option (e.g. -d, --dots) to achieve this result?

We've thought of this before (see for example #46; Christian has wrongly closed this issue by the way), and it's still a possibility, however I'm less convinced than before that we need it. Now I kind of like the explicitness of passing the unicode.dis table. Display tables have historically been the way to control the encoding of braille patterns in Liblouis. I fear that being able to pass a foo.dis table as well as an option to set the encoding to U+28xx could make it even more confusing than it is now.
If we decide to add the option I think I'd prefer to call it ""unicode"" instead of ""dots"":
-u, --unicode    show braille output as unicode dot patterns (U+28xx)

Also, because Liblouis has the concept of ""virtual dots"", and because virtual dots can not be mapped to a unicode character in the range U+28xx, we need to handle that properly. I would like the tool to raise an error or a warning when the output has virtual dots, instead of silently cutting off the virtual dots like lou_charToDots currently does.",True,{'THUMBS_UP': ['https://github.com/reiner-dolp']}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/reiner-dolp,16,https://github.com/liblouis/liblouis/pull/240#issuecomment-284676123,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"a --text option as alternative to echo with pipes would be nice, too.

When I stumbled upon liblouis I had the exact same issue: I expected liblouis to produce braille patterns by default. So this may be a more common issue. Currently, readers of the official docs have to do the following to find out how to produce braille patterns:


read the section on Automated Testing of Translation Tables which hints at unicode.dis through an example:
# comments start with '#' anywhere on a line
# first define which tables will be used for your tests
table: [unicode.dis, en-ueb-g1.ctb]



go to the section on lou_translate for the information that a comma has to be used as separator and guess in which order the tables have to be specified.


Maybe this is just a documentation issue, that could be fixed by adding an example for unicode.dis to the section on lou_translate or the output of lou_translate -h.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/rimas-kudelis,17,https://github.com/liblouis/liblouis/pull/240#issuecomment-284680340,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"Whatever the option name, I really don't think users should be required to read through the manpages and associated documentation just to achieve something as simple as translating a string to Unicode Braille dots using a tool which is (supposedly) dedicated for that exact purpose.
As to being able to pass foo.dis and --foo in the same invocation, I think this could easily be checked. Or perhaps it could even remain ""confusing"", assuming that people who pass table1,table2 know what they're doing.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/240#issuecomment-284684843,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"Whatever the option name, I really don't think users should be required to read through the manpages and associated documentation just to achieve something as simple as translating a string to Unicode Braille dots using a tool which is (supposedly) dedicated for that exact purpose.

Well, first, the tool is not dedicated for that exact purpose. Liblouis just doesn't impose an output braille encoding. In fact it is much more common in the braille world to represent braille with ASCII than with Unicode dot patterns.
As for the documentation, I do think it's acceptable/logical that a user of a command line tool reads the man page. But I completely agree that the documentation could be improved. Any help is welcome.

As to being able to pass foo.dis and --foo in the same invocation, I think this could easily be checked.

This could be a way forward, yes. It is not that easy to check though. What I would really like is that a clear distinction is made between translation tables and display tables that they need to be specified separately. Currently display rules are allowed anywhere and are compiled in the same run as all other rules. So this would be a rather big change.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/KidA001,19,https://github.com/liblouis/liblouis/pull/240#issuecomment-286213120,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"When running either of these commands, lou_translate adds a newline in the return:
$ echo 'Text to translate' | lou_translate en-ueb-g2.ctb
$ printf 'Text to translate' | lou_translate en-ueb-g2.ctb
It'd be great if it didn't do this. I'm using this CLI in a application and have to strip the \n off of each return I get from lou_translate.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/KidA001,20,https://github.com/liblouis/liblouis/pull/240#issuecomment-286217603,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"@bertfrees as a new user to LibLouis, I did find it really difficult to find documentation on using the CLI. It didn't register that I should check the MAN page. Even an examples page would be helpful, it took me a lot longer than expected to find out how to translate a string to Grade 1 Braille in ASCII.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/240#issuecomment-287616554,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"When running either of these commands, lou_translate adds a newline in the return

OK, I've added a new issue: #299",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,240,2016-12-19T07:14:18Z,2017-04-03T09:55:17Z,2017-04-03T09:55:17Z,CLOSED,False,180,0,3,https://github.com/rimas-kudelis,Added a lou_chartodots executable,1,['documentation'],https://github.com/liblouis/liblouis/pull/240,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/240#issuecomment-291098677,lou_chartodots allows easy translating of input text into Unicode Braille dots.,"Added two more issues: #306 and #307.
Closing this one now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/243,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/243#issuecomment-271831644,,"Great. Looks good.
There are a couple of things we ask for every new table or table change:

 A test. Preferably in YAML format. This is mainly for documentation purposes, to make it clear to others why a change was made. Also for your own good, to safeguard the table. If other people come along that want to make changes to the table, we of course always contact the original author first, but if you are missing we will just accept new changes as long as they don't break any tests.
 A reference to the specification of the implemented braille code. Preferably some official document. If the document isn't available online we can put it in our braille-specs repo.
 Table metadata. We've started tagging our tables for discovery purposes. See https://github.com/liblouis/liblouis/blob/4bf05eb/doc/liblouis.texi#L1621 (not in HTML format yet).
 An entry in the NEWS file. (We'll do this.)
 Possibly update Makefiles. (We'll do this.)
 If it's a new table, see how it relates to existing tables and merge if appropriate. In this case there already exists a table for Greek (two actually but the other one is for biblical Greek which is a clear use case): gr-gr-g1.utb, by ViewPlus.
 Proper license header

Also:

 Update AUTHORS file. Dave is currently only listed under ""BRLTTY"". (We'll do this.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,3,https://github.com/liblouis/liblouis/pull/243#issuecomment-271835348,,"gr-bb isn't proper Greek braille. It uses the English braille way of
representing Greek letters. It'd be rather difficult for one used to real Greek
braille to read it. One examle is that it uses dot 6 for the capital sign
whereas actual Greek braille uses dot 6 as the Peripsomeni (circumflex) accent.
Antehr example is that it uses dots 2456 for Omega wehreas actual Greek braille
uses that for an Eta with a Ypogegrammeni (subscript Iota) accent. A quick look
at gr-gr-g1 shows that it doesn't deal with accents very well and has lots of
wrong signs.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/243#issuecomment-271838043,,"@egli What should we do with gr-gr-g1.utb?
Regarding table metadata: this is the metadata we currently have for gr-gr-g1.utb: https://github.com/liblouis/liblouis/blob/4bf05ebe25c3d28d99e988ef84dd133595b99aa1/tables/el.tbl.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/243#issuecomment-271838448,,Regarding the test: especially the mixed Greek/English deserves some attention.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/243#issuecomment-271839403,,"@bertfrees I don't know what to do with the old greek table. I see the following options

Just replace it with the new table and trust @DaveMielke that it really is better
Ask on the mailing list for some advice.
Keep the old one around under some other name.

Option 3 is what we have traditionally been doing, basically just avoiding the issue. Not a great solution. Option 2 will likely not yield any more trustworthy results than what we have now. So I tend to go with option 1.
I think we should try option 2 and wait a week then just do option 1.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,7,https://github.com/liblouis/liblouis/pull/243#issuecomment-271841324,,"- [ ] Update AUTHORS file. Dave is currently only listed under ""BRLTTY"".
Do you do that, or should I? If I should do it, in which section? Patches
provided by?

By the way: I'm also listed under table contributors, probably due to brltty.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/243#issuecomment-271842660,,"@DaveMielke I see. I didn't check it, just assumed. But you should be listed under ""patches"" too when your pull request #244 is merged. But don't worry about the AUTHORS file we take care of that.
@egli Yes option 3 is definitely to be avoided. We'll ask on the mailing list with the ViewPlus people in CC.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,9,https://github.com/liblouis/liblouis/pull/243#issuecomment-271901780,,"[quoted lines by Bert Frees on 2017/01/11 at 02:50 -0800]
this is the metadata we currently have for Greek:
https://github.com/liblouis/liblouis/blob/4bf05ebe25c3d28d99e988ef84dd133595b99aa1/tables/el.tbl.
What should be specified for a language that doesn't have grades of braille?
Greek braille, for example, does have eight single-cell braille symbols for the
common diphthongs, but there's no concept of a less contracted form that
doesn't use them.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/243#issuecomment-271904753,,"Hmm, I'm not sure. The only categories of contraction I've used so far is ""contraction:no"" (the default) and ""contraction:full"". The idea is to add more values such as ""partial"". We could add a value for your case too, but I don't know if it's common enough for a new category. I would say this belongs to ""contraction:no"", but a comment saying what you just said would be useful I think.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,11,https://github.com/liblouis/liblouis/pull/243#issuecomment-273323181,,"There's no more need to remove the metadata from the Greek common rules
subtable (el-common.cti) as I've changed #+ to #- in order to achieve that goal
without removing the data.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/243#issuecomment-273449372,,"Thanks. I wanted to do the exactly same (remove the plus signs but leave the metadata in). Until we have figured out what the tool for printing the metadata is gonna look like, it doesn't matter, so I just wanted to keep things like they are. But I'm taking your arguments for having metadata in all files into consideration!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,13,https://github.com/liblouis/liblouis/pull/243#issuecomment-273479258,,"Maybe add metadata to subtables using #- as a common convention so that it can
be easily reactivated when all those decisions have been made. Maybe leave it
as #-, even then, so that a special option can be used to also look for that
prefix.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/243#issuecomment-273480096,,"Hi @DaveMielke would it be possible to add license headers to these tables the same way the others specify the license? We've been burned in the past and now we want to be extra-safe. Something like https://github.com/liblouis/liblouis/blob/master/tables/Cz-Cz-g1.utb#L3-L21 for example? That way it would be the same as all the other tables and we can use an automated tool to scan for licenses.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/243#issuecomment-273480145,,"@DaveMielke Regarding the (temporary) convention: sure.
But making it permanent would exactly come down to what I had in mind initially, and what you were against! Right?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,16,https://github.com/liblouis/liblouis/pull/243#issuecomment-273483348,,"I'll add whatever kind of license header you'd like. I guess the #+license:LPGL
metadata isn't good enough.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,17,https://github.com/liblouis/liblouis/pull/243#issuecomment-273484092,,"I don't think I was against anything other than not having subtable metadata or
having it but not eventually being able to look it up. I just make suggestions.
I'm not even sure what the best thing to do is, but that doesn't stop me from
putting ideas on the table (pardon the pun).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/243#issuecomment-273485454,,"OK fine. I was just a bit surprised because from the previous discussions I had the impression that you didn't like the idea of having two different formats for metadata...
By the way I know it's only suggestions but it really helps me and I appreciate your input.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,19,https://github.com/liblouis/liblouis/pull/243#issuecomment-273492220,,"Doing it with #+ and #- isn't really two separate formats. It's more like the
same format with a flag.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/243#issuecomment-273493020,,"OK, yes, but anyway, this is what I've had in mind from the beginning. I should have been more clear about it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,21,https://github.com/liblouis/liblouis/pull/243#issuecomment-273495115,,"You were probably still getting used to me. I tend to speak very directly, and
that often catches new people a little by surprise.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/egli,22,https://github.com/liblouis/liblouis/pull/243#issuecomment-273502189,,"OK, license is perfect now. Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,23,https://github.com/liblouis/liblouis/pull/243#issuecomment-275387663,,"All that is left to do now is to ask ViewPlus whether we can replace their table.
@DaveMielke Have you thought about that reference to the specification of the implemented braille code? Is there something we can point to?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,24,https://github.com/liblouis/liblouis/pull/243#issuecomment-275411738,,"@DaveMielke Have you thought about that reference to the specification of the implemented braille code? Is there something we can point to?
It's right up at the top in all three files (lines 2 and 3).

# ελληνικό σύστημα μπράιγ [Greek Braille System]
# κέντρο εκπαίδευσης και αποκατάστασης τυφλών [Center for Education and Rehabilitation for the Blind]",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,25,https://github.com/liblouis/liblouis/pull/243#issuecomment-275414693,,"OK, I see. Is there some document we can put online? It can be in Greek. If there's nothing available it's fine.
I can find some documents, but I'm not sure which corresponds to what you implemented:

http://access.uoa.gr/Unit%20Instructions%20Files/Greek%20Braille%20System.pdf
http://access.uoa.gr/nemeth/NemethSources/Greek%20Braille%20System.pdf
http://fte.org.gr/docs/Greek%20Braille%20Code.pdf

I can also find the website of the organisation (http://keat.gr), but no documents there.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/DaveMielke,26,https://github.com/liblouis/liblouis/pull/243#issuecomment-275420326,,"It seems that Greece is being a little more informal about the whole thing.
There are documents online, but, at least the ones I've looked at, contain
errors. I was working with a very well-informed Greek lady in the US who's
well-connected to people in Greece. While chatting with her, she expressed to
me how unhappy Greek people were to have had such poor support in the past and
was clearly totally thrilled when she finally got to give this table a try.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,27,https://github.com/liblouis/liblouis/pull/243#issuecomment-282676458,,Moved to https://github.com/liblouis/liblouis/compare/dm/integration.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/egli,28,https://github.com/liblouis/liblouis/pull/243#issuecomment-283341073,,Merged manually from the https://github.com/liblouis/liblouis/compare/dm/integration branch,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/egli,29,https://github.com/liblouis/liblouis/pull/243#issuecomment-283378644,,"OK, I've asked on the ml what to do with the old table",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,243,2017-01-11T08:57:58Z,2017-03-01T13:35:48Z,2017-06-30T19:00:42Z,CLOSED,False,994,0,4,https://github.com/DaveMielke,New table for Greek braille,12,[],https://github.com/liblouis/liblouis/pull/243,https://github.com/bertfrees,30,https://github.com/liblouis/liblouis/pull/243#issuecomment-283381398,,"Thanks.
Maybe forward the email directly to someone of ViewPlus?
We've had complaints before because we changed file names. Of course sometimes that is unavoidable, but I think if it is possible to keep a file name that is preferable. So if the old Greek table can be removed it would be better to do it now as opposed to some time later because then we can use the old name. WDYT?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/244,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/244#issuecomment-271835636,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.",Thank you @DaveMielke! We'll look through it and if we have difficulties understanding it we'll get back to you.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/244#issuecomment-275380371,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","For the commits that actually change behavior or fix bugs, some tests would be nice. I could do it but I don't know what some commits do. 9acc143 and 0690c9e are pretty clear but I'm not sure about 92e9609 and 39c5698.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,4,https://github.com/liblouis/liblouis/pull/244#issuecomment-275405335,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","It looks like the variable `previousSrc` isn't used at all.
Indeed. I'll remove its declaration.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,5,https://github.com/liblouis/liblouis/pull/244#issuecomment-275407284,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","[quoted lines by Bert Frees on 2017/01/26 at 04:46 -0800]
I'm not sure about 92e9609

You'll see two tests in that code - one for the first character, and one for
the rest. The first character passes in the variable m (0 for corrections, 1
for non-corrections) and the other passes in a hard-coded 1 (non-correctionsw).
This commit makes both tests be the same so that all characters are treated the
same. The difference is whether or not the characters are matched as characters
or as dots.
and 39c5698.
If the second test failed, itsTrue wasn't being set to false (see the first
test). In other words, if the second or beyond character failed to match, the
test would still come back reporting a successful match.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/244#issuecomment-279738951,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.",Moved to https://github.com/liblouis/liblouis/compare/dm/integration.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/244#issuecomment-282672301,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","@DaveMielke I've been creating some tests myself to explain the various commits. I'm glad I did it because I discovered a mistake. Commit 39c5698 is wrong. See test below:
table: |
  include tables/chardefs.cti
  pass2 $l1-2 @123456
flags: {testmode: backward}
tests:
  - - f
    - = # after commit 39c5698 the actual output is 'f'",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,8,https://github.com/liblouis/liblouis/pull/244#issuecomment-282699687,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","[quoted lines by Bert Frees on 2017/02/27 at 01:41 -0800]

@DaveMielke I've been creating some tests myself to explain the various commits. I'm glad I did it because I discovered a mistake. Commit 39c5698 is wrong. See test below:

table: |
  include tables/chardefs.cti
  pass2 $l1-2 @123456

:-) You forgot noback.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/244#issuecomment-282702458,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","Didn't forget it, I inserted the test directly after your commit, whennoback wasn't required yet.
Anyway I just noticed that a few commits later (commit 5a3749a) you reverted this change yourself. I'm going to drop 39c5698 to avoid any confusion.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,10,https://github.com/liblouis/liblouis/pull/244#issuecomment-282710965,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","Yes, I learned along the way. It's another reminder that those test cases are
an incredibly good idea, but I may not have even known about them then. Now, I
always run make check before committing, and write a test case for what I've
modified (if one doesn't already exist) first. I'm learning (I hope), and am
sorry for early ignorance.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/244#issuecomment-282753896,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","Great!
Just wanted to check that I got it right, because I'm not 100% sure about the expected behavior either.
Yeah the tests really help to understand the commits. I personally try to always work like that, but you don't need to apologise for not knowing, it's not an official coding rule or something. But I'm glad you see the benefits too.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,12,https://github.com/liblouis/liblouis/pull/244#issuecomment-282761350,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","Hi:

I'm indeed glad I finally learned about them, and, yes, they're extremely
valuable.

I may also have what some may call a bad habit. In my own repositories (e.g.
brltty and the one for the braille tablet), I believe in committing often, even
if some given commit isn't perfect, simply to get the current changes to be
saved at an off-site location. To me, an imperfect non-final commit being saved
in a safe second place is better than the risk of losing the work and having to
reproduce it.

For my LibLouis changes, what I did was write test cases that cover everything
according to how things should work and then used them to fix flaws in my own
prior work. I'm fairly sure, therefore, that the final code is okay.

There are a few bits that still need testing, e.g. / (for search). I do still
intend to get back to that. As part of /, though, I'd like to do things like
unduplicate a lot of code (mroe for commonTranslationFunctions). Duplicating
code like that is a major way to have potential errors, and, if it's common,
then the regular test cases automatically start to cover it.

I also still want to change the function protypes that specify () to say (void)
instead in order to enforce no parameters.

I'll wait for the current release to be out, though, for these things as, at
this point, I don't want to do anything that might jeopardize it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/244#issuecomment-282768316,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","As part of /, though, I'd like to do things like unduplicate a lot of code (mroe for commonTranslationFunctions). Duplicating code like that is a major way to have potential errors, and, if it's common, then the regular test cases automatically start to cover it.

Great idea.

I also still want to change the function protypes that specify () to say (void)
instead in order to enforce no parameters.

I have a PR underway that removes most global variables, and as a consequence of that, a lot of functions that currently have no arguments, will have arguments afterwards. In other words, there are likely going to be a lot of conflicts.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/244#issuecomment-282769419,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","While writing some tests, I discovered this case that might be a bug, but I'm not sure. What do you think?
# these work
table: |
  include tables/chardefs.cti
  nofor correct $p ""=""
flags: {testmode: backward}
tests:
  - - f.
    - f=
table: |
  include tables/chardefs.cti
  nofor pass2 $p @123456
flags: {testmode: backward}
tests:
  - - f.
    - f=

# but this one doesn't
table: |
  include tables/chardefs.cti
  nofor context $p ""=""
flags: {testmode: backward}
tests:
  - - f.
    - f=
    - {xfail: true}",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,15,https://github.com/liblouis/liblouis/pull/244#issuecomment-282783064,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","So I won't do the (void) thing till you say it's a good time. Less global
variables is always a great idea as they, too, are a huge source of potential
errors.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,16,https://github.com/liblouis/liblouis/pull/244#issuecomment-282791548,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","[quoted lines by Bert Frees on 2017/02/27 at 08:23 -0800]
# but this one doesn't
table: |
  include tables/chardefs.cti
  nofor context $p ""=""
flags: {testmode: backward}
tests:
  - - f.
    - f=
    - {xfail: true}
It looks like it's a bug, but for a different reason. In the above table, the
input is characters whereas context, when back translating, is looking for
dots. I replaced f. with ⠋⠨ and it still doesn't work. In this case it returns
two spaces. I'll have a look into it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/244#issuecomment-282792303,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","The input is braille, it is just not formatted as dots (unicode braille). This is how I write tests most of the time, because I have a hard time reading the unicode braille.
The reason it returns spaces in your case is because unicode.dis is not included in the table under test.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/DaveMielke,18,https://github.com/liblouis/liblouis/pull/244#issuecomment-282844781,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.","[quoted lines by Bert Frees on 2017/02/27 at 08:23 -0800]
# but this one doesn't
table: |
  include tables/chardefs.cti
  nofor context $p ""=""
flags: {testmode: backward}
tests:
  - - f.
    - f=
    - {xfail: true}
Fixed (maybe, see next paragraph). Attributes context rules for back
translation wasn't yet done. Glad this was caught.

Now that these rules are working, one en-GB-g2_backward test casae is failing:

   Input:    '⠖⠮ ⠍⠕⠕⠝'
   Expected: 'to the moon' (length 11)
   Received: 'tothe moon' (length 10)
   Diff: Expected ' ' but received 't' in index 2

Whether or not this is an actual failure is questionable because the input is,
to my knowledge, invalid UEB. I don't believe that UEB supports the ""to"" (dots
235) contraction at all, so, unless I'm wrong, I think this is an entirely
bogus test case.

Did you notice my email to the list last week about unexpected UEB back
translation behaviour? I think a lot of bad back translationi rules exist in
that table, and am hoping that this'll all get cleaned up for this release
because we especially need a good UEB table - including back translation. If
they don't fix it then we'll need to be making our own copy. :-(

My guess: They did a lot of experimenting - that they didn't clean up - trying
to get the previously very broken back translation to work.
…
-- 
Dave Mielke           | 2213 Fox Crescent | The Bible is the very Word of God.
Phone: 1-613-726-0014 | Ottawa, Ontario   | http://Mielke.cc/bible/
EMail: Dave@Mielke.cc | Canada  K2A 1H7   | http://FamilyRadio.org/",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,244,2017-01-11T09:06:45Z,2017-03-01T13:38:28Z,2017-03-01T13:43:26Z,CLOSED,False,62,167,1,https://github.com/DaveMielke,Various back translation fixes.,10,[],https://github.com/liblouis/liblouis/pull/244,https://github.com/egli,19,https://github.com/liblouis/liblouis/pull/244#issuecomment-283341643,"Make the pass running code much more manageable.
_ mustn't be allowed to go below 0.
An attribute test at the start of a string was being incorrectly resolved.
The first character of an attribute was being tested inefficiently.
For all but the first character of an attribute test:

corrections were being tested as though they were a multipass test,
failure was tested for but not being returned.",Merged manually via the https://github.com/liblouis/liblouis/compare/dm/integration branch,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,245,2017-01-12T17:51:57Z,2017-01-13T12:32:44Z,2017-01-13T13:40:24Z,MERGED,True,2,2,1,https://github.com/DaveMielke,brltty was moved to brltty.com (from mielke.cc/brltty).,1,[],https://github.com/liblouis/liblouis/pull/245,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/245,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,248,2017-01-13T13:18:16Z,2017-01-13T13:35:57Z,2017-01-13T15:43:54Z,MERGED,True,1,1,1,https://github.com/dkager,Fix the \v escape character,1,[],https://github.com/liblouis/liblouis/pull/248,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/248,It points to U+0016 but the manual suggests it should be U+000B.,It points to U+0016 but the manual suggests it should be U+000B.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,248,2017-01-13T13:18:16Z,2017-01-13T13:35:57Z,2017-01-13T15:43:54Z,MERGED,True,1,1,1,https://github.com/dkager,Fix the \v escape character,1,[],https://github.com/liblouis/liblouis/pull/248,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/248#issuecomment-272444085,It points to U+0016 but the manual suggests it should be U+000B.,"Looks good, but just out of curiosity: Why would you actually use this escape sequence?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,248,2017-01-13T13:18:16Z,2017-01-13T13:35:57Z,2017-01-13T15:43:54Z,MERGED,True,1,1,1,https://github.com/dkager,Fix the \v escape character,1,[],https://github.com/liblouis/liblouis/pull/248,https://github.com/dkager,3,https://github.com/liblouis/liblouis/pull/248#issuecomment-272472740,It points to U+0016 but the manual suggests it should be U+000B.,"@egli I used \v in a computer braille table for symmetry with \n, \r, etc. I now switched to \x000B just to be safe.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,249,2017-01-13T15:12:56Z,2017-01-16T18:33:22Z,2017-01-16T18:33:26Z,MERGED,True,560,316,5,https://github.com/egli,Updated braille tables for french,5,[],https://github.com/liblouis/liblouis/pull/249,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/249,"Provided by Michel Such. New include table still uses LGPLv3+.

 get permission to re-license","Provided by Michel Such. New include table still uses LGPLv3+.

 get permission to re-license",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,249,2017-01-13T15:12:56Z,2017-01-16T18:33:22Z,2017-01-16T18:33:26Z,MERGED,True,560,316,5,https://github.com/egli,Updated braille tables for french,5,[],https://github.com/liblouis/liblouis/pull/249,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/249#issuecomment-272933199,"Provided by Michel Such. New include table still uses LGPLv3+.

 get permission to re-license","Apparently both Ludovic and André agree to re-license (see http://www.freelists.org/post/liblouis-liblouisxml/Updated-braille-tables-for-french,3)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,250,2017-01-14T06:55:32Z,2017-01-26T14:20:27Z,2017-01-26T14:20:27Z,CLOSED,False,8,12,1,https://github.com/DaveMielke,Simplify the adRule function (should be tested thoroughly).,1,[],https://github.com/liblouis/liblouis/pull/250,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/250,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,250,2017-01-14T06:55:32Z,2017-01-26T14:20:27Z,2017-01-26T14:20:27Z,CLOSED,False,8,12,1,https://github.com/DaveMielke,Simplify the adRule function (should be tested thoroughly).,1,[],https://github.com/liblouis/liblouis/pull/250,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/250#issuecomment-275399061,,"Looks good to me too.
I rebased it and merged with master manually.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,251,2017-01-14T08:06:56Z,2017-01-16T18:42:59Z,2017-01-16T18:50:23Z,MERGED,True,8,3,1,https://github.com/DaveMielke,lou_checkyaml.c fixes: (dm),2,[],https://github.com/liblouis/liblouis/pull/251,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/251,"Show an error, rather than crash, if the file can't be opened.
Include <unistd.h> for chdir().","Show an error, rather than crash, if the file can't be opened.
Include <unistd.h> for chdir().",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,251,2017-01-14T08:06:56Z,2017-01-16T18:42:59Z,2017-01-16T18:50:23Z,MERGED,True,8,3,1,https://github.com/DaveMielke,lou_checkyaml.c fixes: (dm),2,[],https://github.com/liblouis/liblouis/pull/251,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/251#issuecomment-272619773,"Show an error, rather than crash, if the file can't be opened.
Include <unistd.h> for chdir().",Looks OK to me,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,251,2017-01-14T08:06:56Z,2017-01-16T18:42:59Z,2017-01-16T18:50:23Z,MERGED,True,8,3,1,https://github.com/DaveMielke,lou_checkyaml.c fixes: (dm),2,[],https://github.com/liblouis/liblouis/pull/251,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/251#issuecomment-272937383,"Show an error, rather than crash, if the file can't be opened.
Include <unistd.h> for chdir().","@DaveMielke thank you very much for all those fixes. I merged some of them already. I just have one remark: Can you not add the ""(dm)"" to the commit messages. Thanks and keep those improvements coming.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,253,2017-01-16T11:05:24Z,2017-01-16T18:40:17Z,2017-01-16T18:40:17Z,MERGED,True,4,4,2,https://github.com/DaveMielke,Fix compile warnings.,1,[],https://github.com/liblouis/liblouis/pull/253,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/253,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,255,2017-01-17T09:26:29Z,2017-01-17T09:38:48Z,2017-01-17T09:39:18Z,MERGED,True,20,7,1,https://github.com/garconvacher,Some addons and little corrections,1,[],https://github.com/liblouis/liblouis/pull/255,https://github.com/garconvacher,1,https://github.com/liblouis/liblouis/pull/255,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/256,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/256#issuecomment-275381045,,This depends on #250 (or rather replaces it).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/256#issuecomment-275387270,,"Again, some tests that explain what has changed / what has been fixed would be really nice. Notably 483a89b, 45e0251 and c8a7be5 are not totally clear to me.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/DaveMielke,4,https://github.com/liblouis/liblouis/pull/256#issuecomment-275410685,,"[quoted lines by Bert Frees on 2017/01/26 at 05:25 -0800]
483a89b
This was fixing an omission in my previous commits on the branch. Context rules
that actually match characters need to be lumped in with the translation rules
because both need to be considered when looking for the longest possible match
at any given position. lou_trace helped me find it.
45e0251
The code used to use a static variable which was correct when the length was 0
but which wasn't correct when non-zero lengths were being passed to it. This
change uses the actual length from the actual rule rather than a hopefully
correct length in a global variable. I could've fixed teh global variable, but
why when it was easy to just make the code accurate by using the real value.
c8a7be5
Same answer as above but for back translation. Without these two fixes, the
array of test instructions was starting at the beginning of the characters to
be matched (0) rather than where they actually start (charslen). These, too,
were fixes to my change rather than fixes to original problems.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/DaveMielke,5,https://github.com/liblouis/liblouis/pull/256#issuecomment-275414988,,"This depends on #250.
Yes, I know. I hope that isn't a problem and assumed that it'd be okay if 250
were merged first. I did it that way in case you just wanted 250.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/256#issuecomment-275415502,,"No it's perfectly fine, just making it clear for Christian and myself.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/256#issuecomment-275422880,,"OK, all seems reasonable to me. I have the changes locally, rebased and added the comments to the commit messages. Tests pass. I just don't quite understand ec86b3b. Presumably it skips when we're at the beginning of a string. That was wrong?
Other than that @bertfrees can I merge?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/DaveMielke,8,https://github.com/liblouis/liblouis/pull/256#issuecomment-275427894,,"[quoted lines by Christian Egli on 2017/01/26 at 07:47 -0800]
I just don't quite understand ec86b3b.
Presumably it skips when we're at the beginning of a string. That was wrong?
I had rules that were simply failing when the characters were at the start.
Inserting a leading space fixed it. With this fix I've yet to see a problem. If
anything ever crops up I'll certainly look into it. Maybe there's a reason that
back translation shouldn't match properly at the start, but I couldn't think of
one. My guess was that it was some kind of perceived efficiency thing that
wasn't ultimately truly necessary so encountering failure cases, to me,
justified removing it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/DaveMielke,9,https://github.com/liblouis/liblouis/pull/256#issuecomment-275431234,,"[quoted lines by Dave Mielke on 2017/01/26 at 11:03 -0500]
>I just don't quite understand ec86b3b.
Also note that previousSrc was neither being initialized nor updated anywhere
within the code. This added to my suspicion that testing it simply made no
sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/256#issuecomment-275436504,,"OK, thanks, makes sense now. I added your notes to the commits and pushed it to https://github.com/liblouis/liblouis/tree/dm/simplify-passes",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/256#issuecomment-279738930,,Moved to https://github.com/liblouis/liblouis/compare/dm/integration.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,256,2017-01-18T13:50:56Z,2017-03-01T13:41:43Z,2017-03-01T13:41:43Z,CLOSED,False,118,112,4,https://github.com/DaveMielke,Untangle the multipass rules so that nofor/noback can be used with them.,6,[],https://github.com/liblouis/liblouis/pull/256,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/256#issuecomment-283342354,,Merged manually via the https://github.com/liblouis/liblouis/compare/dm/integration branch,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,258,2017-01-27T16:12:22Z,2017-02-27T10:06:17Z,2017-03-08T10:11:35Z,CLOSED,False,62,167,1,https://github.com/egli,Various back translation fixes (cleaned up),10,[],https://github.com/liblouis/liblouis/pull/258,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/258,"This is basically a cleaned up version of #244

Remove the (dm) from the commit messages
add more details to the commit messages to explain what the commit is about","This is basically a cleaned up version of #244

Remove the (dm) from the commit messages
add more details to the commit messages to explain what the commit is about",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,258,2017-01-27T16:12:22Z,2017-02-27T10:06:17Z,2017-03-08T10:11:35Z,CLOSED,False,62,167,1,https://github.com/egli,Various back translation fixes (cleaned up),10,[],https://github.com/liblouis/liblouis/pull/258,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/258#issuecomment-279738824,"This is basically a cleaned up version of #244

Remove the (dm) from the commit messages
add more details to the commit messages to explain what the commit is about",Moved to https://github.com/liblouis/liblouis/compare/dm/integration.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,259,2017-01-27T16:20:25Z,2017-02-27T10:05:40Z,2017-03-08T10:11:37Z,CLOSED,False,118,112,4,https://github.com/egli,Untangle the multipass rules so that nofor/noback can be used with them (cleaned up),6,[],https://github.com/liblouis/liblouis/pull/259,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/259,"Basically a cleaned up version of #256

Cleaned (dm) from commit messages and
added more explanation to the commit messages","Basically a cleaned up version of #256

Cleaned (dm) from commit messages and
added more explanation to the commit messages",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,259,2017-01-27T16:20:25Z,2017-02-27T10:05:40Z,2017-03-08T10:11:37Z,CLOSED,False,118,112,4,https://github.com/egli,Untangle the multipass rules so that nofor/noback can be used with them (cleaned up),6,[],https://github.com/liblouis/liblouis/pull/259,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/259#issuecomment-279738838,"Basically a cleaned up version of #256

Cleaned (dm) from commit messages and
added more explanation to the commit messages",Moved to https://github.com/liblouis/liblouis/compare/dm/integration.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,260,2017-01-31T16:27:45Z,2017-03-02T13:05:55Z,2017-03-02T13:05:55Z,MERGED,True,39,22,6,https://github.com/MikeGray-APH,Fixed bug with transNoteBuffer,15,[],https://github.com/liblouis/liblouis/pull/260,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/260,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,261,2017-02-02T16:47:02Z,2017-02-03T13:59:56Z,2017-02-03T18:20:34Z,MERGED,True,612,0,7,https://github.com/dkager,Add an extended 8-dot computer braille table for U.S. English,1,[],https://github.com/liblouis/liblouis/pull/261,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/261,"This table solves the problem that the en-us-comp8 table only covers the ASCII characters. It is based on the most popular screen readers for Windows. While it takes inspiration from these screen readers, the intend is not to copy a single product. Rather, I tried to create a table that is familiar to Windows users.
As mentioned above there isn't really an official standard. The table file documents the design decisions and describes what other tables do. Any and all feedback is much appreciated.
From that table file:
Goals

Complete coverage of the characters in Windows-1252.
Definitions for other common symbols.
Unambiguous backtranslation.
Easy to adopt by users of Windows screen readers.","This table solves the problem that the en-us-comp8 table only covers the ASCII characters. It is based on the most popular screen readers for Windows. While it takes inspiration from these screen readers, the intend is not to copy a single product. Rather, I tried to create a table that is familiar to Windows users.
As mentioned above there isn't really an official standard. The table file documents the design decisions and describes what other tables do. Any and all feedback is much appreciated.
From that table file:
Goals

Complete coverage of the characters in Windows-1252.
Definitions for other common symbols.
Unambiguous backtranslation.
Easy to adopt by users of Windows screen readers.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,264,2017-02-10T21:15:25Z,2017-02-27T15:47:41Z,2017-02-27T15:48:01Z,MERGED,True,324,360,68,https://github.com/bertfrees,Some checkyaml improvements,11,[],https://github.com/liblouis/liblouis/pull/264,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/264,"Fixes #262, #263 and #122.","Fixes #262, #263 and #122.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,264,2017-02-10T21:15:25Z,2017-02-27T15:47:41Z,2017-02-27T15:48:01Z,MERGED,True,324,360,68,https://github.com/bertfrees,Some checkyaml improvements,11,[],https://github.com/liblouis/liblouis/pull/264,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/264#issuecomment-279068097,"Fixes #262, #263 and #122.","make check fails because I changed ""tables"" to ""table"" but didn't adapt the existing tests yet.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,264,2017-02-10T21:15:25Z,2017-02-27T15:47:41Z,2017-02-27T15:48:01Z,MERGED,True,324,360,68,https://github.com/bertfrees,Some checkyaml improvements,11,[],https://github.com/liblouis/liblouis/pull/264,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/264#issuecomment-279088503,"Fixes #262, #263 and #122.","To do:

 update documentation",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,264,2017-02-10T21:15:25Z,2017-02-27T15:47:41Z,2017-02-27T15:48:01Z,MERGED,True,324,360,68,https://github.com/bertfrees,Some checkyaml improvements,11,[],https://github.com/liblouis/liblouis/pull/264,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/264#issuecomment-282684549,"Fixes #262, #263 and #122.",Moved to https://github.com/liblouis/liblouis/compare/dm/integration.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,264,2017-02-10T21:15:25Z,2017-02-27T15:47:41Z,2017-02-27T15:48:01Z,MERGED,True,324,360,68,https://github.com/bertfrees,Some checkyaml improvements,11,[],https://github.com/liblouis/liblouis/pull/264,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/264#issuecomment-282693525,"Fixes #262, #263 and #122.",@egli I've rebased on master together with Dave's fixes. You can merge this already.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,265,2017-02-15T04:04:43Z,2017-03-01T13:46:58Z,2017-03-01T13:46:58Z,MERGED,True,2,0,2,https://github.com/DaveMielke,Silence the infiniteTranslationLoop build warning.,2,[],https://github.com/liblouis/liblouis/pull/265,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/265,Added infiniteTranslationLoop to noinst_PROGRAMS in tests/Makefile.am,Added infiniteTranslationLoop to noinst_PROGRAMS in tests/Makefile.am,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,265,2017-02-15T04:04:43Z,2017-03-01T13:46:58Z,2017-03-01T13:46:58Z,MERGED,True,2,0,2,https://github.com/DaveMielke,Silence the infiniteTranslationLoop build warning.,2,[],https://github.com/liblouis/liblouis/pull/265,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/265#issuecomment-282685731,Added infiniteTranslationLoop to noinst_PROGRAMS in tests/Makefile.am,Might be interesting to see if this test actually passes now since iirc Davy fixed this issue,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,269,2017-02-19T20:41:08Z,2017-03-01T14:01:32Z,2017-03-01T14:01:32Z,CLOSED,False,3131,1779,122,https://github.com/DaveMielke,Several back and some forward translation fixes + multipass test cases.,87,[],https://github.com/liblouis/liblouis/pull/269,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/269,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,269,2017-02-19T20:41:08Z,2017-03-01T14:01:32Z,2017-03-01T14:01:32Z,CLOSED,False,3131,1779,122,https://github.com/DaveMielke,Several back and some forward translation fixes + multipass test cases.,87,[],https://github.com/liblouis/liblouis/pull/269,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/269#issuecomment-281307707,,"Brilliant stuff. Haven't looked at it in detail yet, but it looks like you discovered and fixed a lot of bugs and that you provide a lot of tests. We have to try to get this into the 3.1 milestone.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,269,2017-02-19T20:41:08Z,2017-03-01T14:01:32Z,2017-03-01T14:01:32Z,CLOSED,False,3131,1779,122,https://github.com/DaveMielke,Several back and some forward translation fixes + multipass test cases.,87,[],https://github.com/liblouis/liblouis/pull/269,https://github.com/DaveMielke,3,https://github.com/liblouis/liblouis/pull/269#issuecomment-281341878,,"The yaml test capability is itself truly cool! It helped me find some of the
problems, and, of course, then keeps helping ensure that they stay fixed.

I'd like to create a new source file for code that can be made common between
forward and backward translation. There are three conventions: long prefixed by
lou_ (e.g. lou_translateString.c), long not prefixed by lou_ (e.g.
compileTranslationTable.c), and short (e.g. logging.c, pattern.c). Which is
your preference?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,269,2017-02-19T20:41:08Z,2017-03-01T14:01:32Z,2017-03-01T14:01:32Z,CLOSED,False,3131,1779,122,https://github.com/DaveMielke,Several back and some forward translation fixes + multipass test cases.,87,[],https://github.com/liblouis/liblouis/pull/269,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/269#issuecomment-281343376,,"The ""lou_"" in ""lou_translateString.c"" is just there because it refers to the API function with the same name. Long or short doesn't matter as long as the name is clear. There used to be a a file called ""transcommon.ci"" which also contained code that was shared between lou_translateString.c and lou_backTranslateString.c, but the file was included in both files rather than linked. I'm not sure what exactly has happened with the file, but in any case it is gone now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,269,2017-02-19T20:41:08Z,2017-03-01T14:01:32Z,2017-03-01T14:01:32Z,CLOSED,False,3131,1779,122,https://github.com/DaveMielke,Several back and some forward translation fixes + multipass test cases.,87,[],https://github.com/liblouis/liblouis/pull/269,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/269#issuecomment-281343719,,OK apparently the file is now just integrated in lou_translateString.c. See commit 3f48112.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,269,2017-02-19T20:41:08Z,2017-03-01T14:01:32Z,2017-03-01T14:01:32Z,CLOSED,False,3131,1779,122,https://github.com/DaveMielke,Several back and some forward translation fixes + multipass test cases.,87,[],https://github.com/liblouis/liblouis/pull/269,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/269#issuecomment-282749776,,"@egli I've cleaned up this branch and added some more tests and push to branch dm/integration. Not all commits have tests, but I just don't have the time to check everything. I'm sure the PR is a very big improvement. Good to merge.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,269,2017-02-19T20:41:08Z,2017-03-01T14:01:32Z,2017-03-01T14:01:32Z,CLOSED,False,3131,1779,122,https://github.com/DaveMielke,Several back and some forward translation fixes + multipass test cases.,87,[],https://github.com/liblouis/liblouis/pull/269,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/269#issuecomment-283347320,,Merged manually via the dm/integration branch,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,270,2017-02-21T18:53:23Z,2017-03-02T13:12:23Z,2017-03-02T13:12:23Z,MERGED,True,15,6,1,https://github.com/DaveMielke,Define the emphclass bits in liblouis.h in a better way.,1,[],https://github.com/liblouis/liblouis/pull/270,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/270,"The enum contains the official emph_ names.
The original constants (bold, italic, underline) are now #defines so
that code can test for their presence.
The comp_emph_1-3 #defines are based on the corresponding emph_
constants so that they can be independently removed or retained.","The enum contains the official emph_ names.
The original constants (bold, italic, underline) are now #defines so
that code can test for their presence.
The comp_emph_1-3 #defines are based on the corresponding emph_
constants so that they can be independently removed or retained.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,270,2017-02-21T18:53:23Z,2017-03-02T13:12:23Z,2017-03-02T13:12:23Z,MERGED,True,15,6,1,https://github.com/DaveMielke,Define the emphclass bits in liblouis.h in a better way.,1,[],https://github.com/liblouis/liblouis/pull/270,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/270#issuecomment-282687429,"The enum contains the official emph_ names.
The original constants (bold, italic, underline) are now #defines so
that code can test for their presence.
The comp_emph_1-3 #defines are based on the corresponding emph_
constants so that they can be independently removed or retained.","@DaveMielke Are you planning to use EMPH_NAME_BOLD, EMPH_NAME_ITALIC and EMPH_NAME_UNDERLINE somewhere?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,270,2017-02-21T18:53:23Z,2017-03-02T13:12:23Z,2017-03-02T13:12:23Z,MERGED,True,15,6,1,https://github.com/DaveMielke,Define the emphclass bits in liblouis.h in a better way.,1,[],https://github.com/liblouis/liblouis/pull/270,https://github.com/DaveMielke,3,https://github.com/liblouis/liblouis/pull/270#issuecomment-282695541,"The enum contains the official emph_ names.
The original constants (bold, italic, underline) are now #defines so
that code can test for their presence.
The comp_emph_1-3 #defines are based on the corresponding emph_
constants so that they can be independently removed or retained.","[quoted lines by Bert Frees on 2017/02/27 at 02:48 -0800]

@DaveMielke Are you planning to use `EMPH_NAME_BOLD`, `EMPH_NAME_ITALIC` and `EMPH_NAME_UNDERLINE` somewhere?
Yes, that's my desire. I don't think it's good practice to use hard-coded
constants, and think it's better to define all of them in a central place. We
need to know which class to associate with which form of actual highlighting.
…
-- 
Dave Mielke           | 2213 Fox Crescent | The Bible is the very Word of God.
Phone: 1-613-726-0014 | Ottawa, Ontario   | http://Mielke.cc/bible/
EMail: Dave@Mielke.cc | Canada  K2A 1H7   | http://FamilyRadio.org/",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/272,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/272#issuecomment-281521814,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","Thanks! Just one thing. Can you give the function name a ""lou_"" prefix?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/DaveMielke,3,https://github.com/liblouis/liblouis/pull/272#issuecomment-281547539,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","Can you give the function name a ""lou_"" prefix?
Done.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/DaveMielke,4,https://github.com/liblouis/liblouis/pull/272#issuecomment-281555647,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","Does it also need the EXPORT_CALL thing?

On a different topic, what do you think about doing something about how
widechar is defined so that one needn't keep a copy of the whole liblouis.h? I
can think of two solutions. The first is for liblouis.h to #include another
very small (pehaps only one line) header, that'd also need to be distributed,
which contains the current line (typedef @WIDECHAR_TYPE@ widechar;). The other
is to allow something like -DLOU_WIDECHAR_TYPE as a compile option, with the
code in liblouis then looking like this:

```c
#ifdef LOU_WIDECHAR_TYPE
typedef LOU_WIDECHAR_TYPE widechar
#else
typedef @WIDECHAR_TYPE@ widechar;
#endif
```",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/272#issuecomment-281643522,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","Does it also need the EXPORT_CALL thing?
Yes (but I see you already did it).

Note that some tests fail now because of the rename.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/272#issuecomment-281644942,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","On a different topic, what do you think about doing something about how
widechar is defined so that one needn't keep a copy of the whole liblouis.h?

I think the idea of the very small header has been suggested before. I think it's a possibility, but I want @egli to decide this.
I don't understand the part about the compile option. We already have configure --enable-ucs4. Is that not sufficient?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/DaveMielke,7,https://github.com/liblouis/liblouis/pull/272#issuecomment-281646934,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","My particular issue is that I'm cross-compiling. I'm just pointing to the
liblouis source tree and compiling for Android. Really, it's compatibility with
what Java wants that counts, so it all works when widechar is uint16_t. What
I'm hopig for, though, is a ay to make it be a guarantee, i.e. by having that
small local file earlier in my #include search order. Being able to force it
with a -D (#defne) compile option would also work.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/DaveMielke,8,https://github.com/liblouis/liblouis/pull/272#issuecomment-281648795,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","[quoted lines by Bert Frees on 2017/02/22 at 03:27 -0800]
Note that some tests fail now because of the rename.
So there are C test cases too! Fixed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/272#issuecomment-281651160,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.",Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/272#issuecomment-282112412,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","It now points directly to the class names because const has been added to protect them.

Does that really write-protect the strings?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/DaveMielke,11,https://github.com/liblouis/liblouis/pull/272#issuecomment-282114614,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","[quoted lines by Bert Frees on 2017/02/23 at 12:33 -0800]
Does that really write-protect the strings?
As with anything else, one could, of course, type cast his way around it. In
other words, a programmer would really have to want to mess himself up
consciiusly. I personally think the greater problem is making him have to write
extra code to properly free all the strings. Of course, another approach could
be to pack the pointers and the strings into a single store block, but that's
probably complexity for no real gain.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/272#issuecomment-282763187,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","The issue with the very small C header file indeed came up in the past. We do have a copy of liblouis.h in the source tree under the windows directory. It is basically a one-to-one copy of liblouis.h. I don't remember all the details but the hope was that we could extract all the common stuff into one file and the other definitions (that are basically created by configure) would be put into the very small second header file. This would include stuff like version and charsize.
The idea seems speciously simple. What has been bugging me though is that we seem to be polluting the /usr/include name space with more header files to install. I don't really know which side should have more weight.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/DaveMielke,13,https://github.com/liblouis/liblouis/pull/272#issuecomment-282765725,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","To me, a public header should only contain system-dependent definitions if it
also contains the logic to figure them out (thus making it effectively
portable). Having a small extra file named something like liblouis-local.h, on
the other hand, would be revealing, by its very name, that it isn't portable.

So what I'm suggesting is either add the logic to liblouis.h to make it become
portable or have liblouis.h include all the portable stuff and #include the
small file with the local stuff.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,272,2017-02-21T21:44:42Z,2017-02-27T16:37:06Z,2017-02-27T16:37:06Z,MERGED,True,34,20,5,https://github.com/DaveMielke,Move getEmphClasses() to liblouis.h (from louis.h).,4,[],https://github.com/liblouis/liblouis/pull/272,https://github.com/DaveMielke,14,https://github.com/liblouis/liblouis/pull/272#issuecomment-282767826,"This allows it to be called by user applications.
It now points directly to the class names because const has been added
to protect them.","[quoted lines by Christian Egli on 2017/02/27 at 08:09 -0800]
Why is this loop gone? Don't you need to free the individual emph_classes?
No, not any more. The reason is that the strings now point to the actual class
names but that's okay because, from a compile perspective, const is now used to
protect them. I think it's far mroe error prone to expect the user to
deallocate all of those strings.

Another way to do it (which, if you'd like, I'll do) is to allocate a block
large enough to hold the pointers and the strings. That's more complex so one
must ask if the extra complexity is really worth it. If a user deliberately
violates the protection of the const qualifier then he knows what he's doing
and deserves what he gets.

The only risk, of course, is if the user tries to reference those strings after
lou_free() has been called. To that end, I've commented this in the header.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,273,2017-02-22T14:41:56Z,2017-04-20T13:28:48Z,2017-04-20T13:28:48Z,MERGED,True,150,47,6,https://github.com/dkager,Allow to test translations with cursorPos in brl_checks,4,[],https://github.com/liblouis/liblouis/pull/273,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/273,"Needs some more work, but I'm putting it up here to illustrate what I meant to do in #271.","Needs some more work, but I'm putting it up here to illustrate what I meant to do in #271.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,273,2017-02-22T14:41:56Z,2017-04-20T13:28:48Z,2017-04-20T13:28:48Z,MERGED,True,150,47,6,https://github.com/dkager,Allow to test translations with cursorPos in brl_checks,4,[],https://github.com/liblouis/liblouis/pull/273,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/273#issuecomment-282686706,"Needs some more work, but I'm putting it up here to illustrate what I meant to do in #271.",@dkager so what is the status on this? Is this just for illustrative purposes or should this actually go in?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,273,2017-02-22T14:41:56Z,2017-04-20T13:28:48Z,2017-04-20T13:28:48Z,MERGED,True,150,47,6,https://github.com/dkager,Allow to test translations with cursorPos in brl_checks,4,[],https://github.com/liblouis/liblouis/pull/273,https://github.com/dkager,3,https://github.com/liblouis/liblouis/pull/273#issuecomment-282709118,"Needs some more work, but I'm putting it up here to illustrate what I meant to do in #271.",It can go in if you have no problems with it. But then we should add the ability to pass the cursor position from lou_checkyaml (see the related issue for further comments). Also the test has to be marked as xfail because it demonstrates a bug in liblouis.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,273,2017-02-22T14:41:56Z,2017-04-20T13:28:48Z,2017-04-20T13:28:48Z,MERGED,True,150,47,6,https://github.com/dkager,Allow to test translations with cursorPos in brl_checks,4,[],https://github.com/liblouis/liblouis/pull/273,https://github.com/dkager,4,https://github.com/liblouis/liblouis/pull/273#issuecomment-283309959,"Needs some more work, but I'm putting it up here to illustrate what I meant to do in #271.","Rebased on master. This is ready to merge as far as I'm concerned.
It would be nice to add a flag for this to lou_checkyaml as discussed above, but I feel it's a bit too close to the release deadline to do that in 3.1. For now you can test with C, e.g. tests/compbrlAtCursor.c.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,273,2017-02-22T14:41:56Z,2017-04-20T13:28:48Z,2017-04-20T13:28:48Z,MERGED,True,150,47,6,https://github.com/dkager,Allow to test translations with cursorPos in brl_checks,4,[],https://github.com/liblouis/liblouis/pull/273,https://github.com/dkager,5,https://github.com/liblouis/liblouis/pull/273#issuecomment-286151930,"Needs some more work, but I'm putting it up here to illustrate what I meant to do in #271.",@egli This is good for review & merge. If you're OK with this new functionality I will open a separate issue for integration into lou_checkyaml at a later time.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,273,2017-02-22T14:41:56Z,2017-04-20T13:28:48Z,2017-04-20T13:28:48Z,MERGED,True,150,47,6,https://github.com/dkager,Allow to test translations with cursorPos in brl_checks,4,[],https://github.com/liblouis/liblouis/pull/273,https://github.com/dkager,6,https://github.com/liblouis/liblouis/pull/273#issuecomment-295608785,"Needs some more work, but I'm putting it up here to illustrate what I meant to do in #271.","Why is this line removed? Isn't it useful to see what was expected?

It is useful. Not sure what happened there. I think I meant to move it down, cut it but never uncut it below. Will fix tonight.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,273,2017-02-22T14:41:56Z,2017-04-20T13:28:48Z,2017-04-20T13:28:48Z,MERGED,True,150,47,6,https://github.com/dkager,Allow to test translations with cursorPos in brl_checks,4,[],https://github.com/liblouis/liblouis/pull/273,https://github.com/dkager,7,https://github.com/liblouis/liblouis/pull/273#issuecomment-295736214,"Needs some more work, but I'm putting it up here to illustrate what I meant to do in #271.","@egli Fixed, good to merge now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,274,2017-02-23T10:05:44Z,2017-03-02T14:12:12Z,2017-03-02T14:12:23Z,MERGED,True,12297,0,3,https://github.com/Roshanson,Add zh-chn tables for Chinese braille,3,[],https://github.com/liblouis/liblouis/pull/274,https://github.com/Roshanson,1,https://github.com/liblouis/liblouis/pull/274,Add zh-chn tables for Chinese braille,Add zh-chn tables for Chinese braille,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,274,2017-02-23T10:05:44Z,2017-03-02T14:12:12Z,2017-03-02T14:12:23Z,MERGED,True,12297,0,3,https://github.com/Roshanson,Add zh-chn tables for Chinese braille,3,[],https://github.com/liblouis/liblouis/pull/274,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/274#issuecomment-281972626,Add zh-chn tables for Chinese braille,"Dear @Roshanson,
Thank you very much for your contribution!
Could we get some more info about this table? How did you make it? How does it differ from the other Chinese tables?
Furthermore, there are a couple of things that we ask for every new table:

 A test. Preferably in YAML format. This is for your own good, to safeguard your table. If other people come along that want to make changes to the table, we of course always contact the original author first, but if you are missing we will just accept new changes as long as they don't break any tests.
 A reference to the specification of the implemented braille code. Preferably some official document. If the document isn't available online we can put it in our braille-specs repo.
 Table metadata. We've started tagging our tables for discovery purposes. See https://github.com/liblouis/liblouis/blob/master/doc/liblouis.texi#L1621 (not in HTML format yet).
 A license header.

Some things that we'll do:

 Update NEWS file.
 Update AUTHORS file.
 Update Makefiles.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,274,2017-02-23T10:05:44Z,2017-03-02T14:12:12Z,2017-03-02T14:12:23Z,MERGED,True,12297,0,3,https://github.com/Roshanson,Add zh-chn tables for Chinese braille,3,[],https://github.com/liblouis/liblouis/pull/274,https://github.com/Roshanson,3,https://github.com/liblouis/liblouis/pull/274#issuecomment-282192546,Add zh-chn tables for Chinese braille,"Thanks！
Until now, there exist only the Taiwan Braille table and Hong Kong Braille table in the liblouis on website. With the tables they could transform the language to the Braille directly with the INDEX Braille printer. But you know, in China, millions of blind persons who study the simplify-Chinese since childhood can not distinguish the traditional-Chinese Braille even with the different coded rules. Although we belong to the Rejoin Company, we conduct the programs without any benefit and we insist the blind belongs to the mainland of China having the equal to use the Braille printer instead of hand-written. That’s why we wanna write the table not referring to the Taiwan or Hong Kong’s.
We corresponded to Braille and the simplify Chinese characters referring to the rules of a book named  the website linking http://blog.chinaunix.net/uid-25544300-id-3281847.html. And first we looked up the Chinese character coding rules turning to the Unicode and download the library. Then what we need was the rules of Chinese pinyin text to Braille referring to the web link http://www.doc88.com/p-387479699152.html. In order to achieve the function we wrote the code with CPP
Ok，I will submit the required documents for new tables as soon as possible.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,274,2017-02-23T10:05:44Z,2017-03-02T14:12:12Z,2017-03-02T14:12:23Z,MERGED,True,12297,0,3,https://github.com/Roshanson,Add zh-chn tables for Chinese braille,3,[],https://github.com/liblouis/liblouis/pull/274,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/274#issuecomment-282688222,Add zh-chn tables for Chinese braille,@Roshanson do you really want to license this table with LGPLv3+ (as you did now)? We have moved most tables to LGPLv2.1+ now. It would be great if you do that as well or give me permission to re-license. Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,274,2017-02-23T10:05:44Z,2017-03-02T14:12:12Z,2017-03-02T14:12:23Z,MERGED,True,12297,0,3,https://github.com/Roshanson,Add zh-chn tables for Chinese braille,3,[],https://github.com/liblouis/liblouis/pull/274,https://github.com/Roshanson,5,https://github.com/liblouis/liblouis/pull/274#issuecomment-282695188,Add zh-chn tables for Chinese braille,"Sorry, i just don't know the difference of LGPLv3+ and LGPLv2.1+.  It's ok if you can help me to re-license to an appropriate  license.    Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,274,2017-02-23T10:05:44Z,2017-03-02T14:12:12Z,2017-03-02T14:12:23Z,MERGED,True,12297,0,3,https://github.com/Roshanson,Add zh-chn tables for Chinese braille,3,[],https://github.com/liblouis/liblouis/pull/274,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/274#issuecomment-282696253,Add zh-chn tables for Chinese braille,"Ok, re-licensing is easy. Just use the standard license header that is used in all tables now. Look at line 7-21 in Cz-Cz-g1.utb for an example (https://github.com/liblouis/liblouis/blob/master/tables/Cz-Cz-g1.utb#L7-L21)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,274,2017-02-23T10:05:44Z,2017-03-02T14:12:12Z,2017-03-02T14:12:23Z,MERGED,True,12297,0,3,https://github.com/Roshanson,Add zh-chn tables for Chinese braille,3,[],https://github.com/liblouis/liblouis/pull/274,https://github.com/Roshanson,7,https://github.com/liblouis/liblouis/pull/274#issuecomment-282700694,Add zh-chn tables for Chinese braille,"Ok , i  updated the license just now .",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,276,2017-02-27T18:49:26Z,2017-02-28T13:17:16Z,2017-02-28T18:56:15Z,MERGED,True,3,1,1,https://github.com/vsmontalvao,Fix for partialTrans and noUndefinedDots undeclared identifiers on wi…,1,[],https://github.com/liblouis/liblouis/pull/276,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/276,"…ndows builds
Commits 6b0ab9c and
56bb717 added noUndefinedDots and
partialTrans translation modes on liblouis/liblouis.h.in but did not
update windows/include/liblouis.h.
It currently causes the windows build to fail with compile error C2065
(undeclared identifiers for partialTrans and noUndefinedDots). This
commit fixes the issue.","…ndows builds
Commits 6b0ab9c and
56bb717 added noUndefinedDots and
partialTrans translation modes on liblouis/liblouis.h.in but did not
update windows/include/liblouis.h.
It currently causes the windows build to fail with compile error C2065
(undeclared identifiers for partialTrans and noUndefinedDots). This
commit fixes the issue.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,276,2017-02-27T18:49:26Z,2017-02-28T13:17:16Z,2017-02-28T18:56:15Z,MERGED,True,3,1,1,https://github.com/vsmontalvao,Fix for partialTrans and noUndefinedDots undeclared identifiers on wi…,1,[],https://github.com/liblouis/liblouis/pull/276,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/276#issuecomment-283036004,"…ndows builds
Commits 6b0ab9c and
56bb717 added noUndefinedDots and
partialTrans translation modes on liblouis/liblouis.h.in but did not
update windows/include/liblouis.h.
It currently causes the windows build to fail with compile error C2065
(undeclared identifiers for partialTrans and noUndefinedDots). This
commit fixes the issue.","Cool, thanks for the patch",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,278,2017-02-28T10:13:37Z,2017-02-28T10:37:52Z,2017-02-28T10:38:01Z,MERGED,True,8,8,8,https://github.com/egli,Relicense all tables owned by DocArch to LGPLv2.1+,1,[],https://github.com/liblouis/liblouis/pull/278,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/278,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,279,2017-03-01T00:06:07Z,2017-03-01T15:32:51Z,2017-03-01T18:07:02Z,MERGED,True,119,0,8,https://github.com/vsmontalvao,Fix for number back-translations on fr-fr-g1 and vi-g1 tables,1,[],https://github.com/liblouis/liblouis/pull/279,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/279,"This commit adds the litdigit definition for the french and vietnamese
grade 1 tables. These tables only included the digit definition from
digits6DotsPlusDot6.uti, which would provide the correct translations only for computer braille.
Previously, back-translations for a set of cells starting with the number sign
would behave differently from the forward translations, returning
space for 0 (3456-3456) or ignoring the number sign for other digits (e.g. a with
circumflex for 3456-16 instead of 1).","This commit adds the litdigit definition for the french and vietnamese
grade 1 tables. These tables only included the digit definition from
digits6DotsPlusDot6.uti, which would provide the correct translations only for computer braille.
Previously, back-translations for a set of cells starting with the number sign
would behave differently from the forward translations, returning
space for 0 (3456-3456) or ignoring the number sign for other digits (e.g. a with
circumflex for 3456-16 instead of 1).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,279,2017-03-01T00:06:07Z,2017-03-01T15:32:51Z,2017-03-01T18:07:02Z,MERGED,True,119,0,8,https://github.com/vsmontalvao,Fix for number back-translations on fr-fr-g1 and vi-g1 tables,1,[],https://github.com/liblouis/liblouis/pull/279,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/279#issuecomment-283348861,"This commit adds the litdigit definition for the french and vietnamese
grade 1 tables. These tables only included the digit definition from
digits6DotsPlusDot6.uti, which would provide the correct translations only for computer braille.
Previously, back-translations for a set of cells starting with the number sign
would behave differently from the forward translations, returning
space for 0 (3456-3456) or ignoring the number sign for other digits (e.g. a with
circumflex for 3456-16 instead of 1).",Looks good. The Makefile changes that invoke the YAML tests seem to be missing. I can take care of that.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/280,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/280#issuecomment-283614271,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","The use case seems plausible.
Is there a way to achieve this with less duplication, i.e. put the definition in say latinLetterDef6Dots.uti. I know strictly speaking Black Circle is not a latin character but the duplication seems a bit much.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/280#issuecomment-283614861,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.",OTOH it might be worth thinking about a common file where we could put definitions that go above and beyond the latin characters such as the one for Black Circle. This table could then be included by all other tables just like the latinLetterDef6Dots.uti. This would clearly mark it as common concern but separate it from the latin chars.,True,{'THUMBS_UP': ['https://github.com/reiner-dolp']}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/280#issuecomment-283615355,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.",But with that argument you can also put the asterisk in latinLetterDef6Dots.uti a common file?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/dkager,5,https://github.com/liblouis/liblouis/pull/280#issuecomment-283616071,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","Another category of common characters are invisible characters, e.g. LTR mark, and whitespace, e.g. NBSP.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/280#issuecomment-283617270,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","But my points is that an asterisk, a black circle, etc. are different for various languages. They are not common.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/dkager,7,https://github.com/liblouis/liblouis/pull/280#issuecomment-283618870,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","It seems safer to use a replace rule. But another problem is that literary tables may be used in conversion software to produce print braille. Obviously there are no password fields in that context, but there might be real black circles.
The concept Black Circle == Asterisk holds on Windows but is not universally valid.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/280#issuecomment-283619409,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.",What do you mean with a replace rule?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/280#issuecomment-283620046,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.",Btw I don't think that Victor needs the black circle to be equal to the asterisk. But there had to be something and the most obvious thing to do was to copy the asterisk rules.,True,{'THUMBS_UP': ['https://github.com/vsmontalvao']}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/dkager,10,https://github.com/liblouis/liblouis/pull/280#issuecomment-283620088,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.",Something like replace \x25CF * (I'm not too clear on the syntax).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/280#issuecomment-283620258,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","You mean a correct rule maybe? That would make more sense.
correct \x25CF *",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/280#issuecomment-283620666,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","This could indeed be put in a common file, perhaps with a comment about why it was created.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/vsmontalvao,13,https://github.com/liblouis/liblouis/pull/280#issuecomment-283679326,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","The intent is what Bert mentioned: this does not assume that black circle should be equal to an asterisk for all tables (many of them in fact had the black circle defined with \x25CF or ●), it just assumes that convention for those who didn't have a definition.
A replace/correct rule would probably be the best way to reduce duplication as it could account for different asterisk definitions and would be more explicit about the origin of the translation.
Will try a couple of alternatives and propose another commit later with the suggestions.
Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/vsmontalvao,14,https://github.com/liblouis/liblouis/pull/280#issuecomment-283841895,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","I tried the alternatives with correct and replace.
The correct opcode required a previous character-definition opcode (so it would need a previous sign definition anyway).
The replace opcode could be used but it ended up taking absolute priority over any other character-definition no matter if defined before or after the replace (with sign the first definition takes priority). This would cause trouble if any of these files needed to be included as there would be currently no way to allow a character-definition for the Black Circle character (with sign it would still have issues with inclusions but at least they wouldn't take priority if done after the custom definition).
The problem of having an extra file with the replace conventions would be that all of the conventions would need to be held true as long as we cannot override some of them. And making this file use sign would imply in defining a common translation for multiple tables with different asterisk definitions.
I think having this common file would make more sense for invisible characters though (LTR, NBSP, etc) but wouldn't reduce much more duplication for those which could have different translations, unless we have a way to disable some character replacements in case one table wants to define them differently but include the others.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/280#issuecomment-283943350,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","The correct opcode required a previous character-definition opcode (so it would need a previous sign definition anyway).

That's odd. It sounds like a bug to me actually.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/vsmontalvao,16,https://github.com/liblouis/liblouis/pull/280#issuecomment-283950418,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","On section 2.3 (http://liblouis.org/documentation/liblouis.html#Character_002dDefinition-Opcodes) it also says: ""liblouis has no built-in character definitions, but such definitions are essential to the operation of the context opcode (see context), the correct opcode (see correct), the multipass opcodes and the back-translator"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,280,2017-03-01T23:46:02Z,2017-03-06T10:43:24Z,2017-03-06T10:43:25Z,MERGED,True,54,11,42,https://github.com/vsmontalvao,Add Black Circle character definition to multiple tables,3,[],https://github.com/liblouis/liblouis/pull/280,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/280#issuecomment-283951246,"The Black Circle character is commonly used for displaying password
characters. The absence of its definition leads to users not being able
to know how many characters were typed in such fields.
Even though such characters are most of the times not covered by an official specification
document, conventionally they are usually replaced with an asterisk.
This commit adds the black circle definition for all tables that had
asterisk (*) defined but nothing for the black circle.
Tables that already had the black circle definition or which didn't have a
definition for asterisk were left untouched.","Yes, that's true in the general case, but in case of a simple conversion from a literal string to literal string it seems unnecessary to have the character definition.
Not really a bug maybe but something that could be improved.",True,{'THUMBS_UP': ['https://github.com/vsmontalvao']}
liblouis/liblouis,https://github.com/liblouis/liblouis,283,2017-03-06T09:42:39Z,2017-03-06T10:39:59Z,2017-03-08T10:10:08Z,MERGED,True,38,4,4,https://github.com/egli,Add a configure option to enable/disable yaml tests,2,[],https://github.com/liblouis/liblouis/pull/283,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/283,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,289,2017-03-06T15:23:56Z,2017-03-06T15:28:00Z,2017-03-08T10:10:03Z,MERGED,True,2,2,2,https://github.com/egli,Add EXPORT_CALL to lou_getEmphClasses,1,[],https://github.com/liblouis/liblouis/pull/289,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/289,"When cross-compiling 3.1.0 I get the following error:
-*- mode: compilation; default-directory: ""~/src/liblouis-mingw/"" -*-
Compilation started at Mon Mar  6 16:22:22

make LDFLAGS='-avoid-version -Xcompiler -static-libgcc'
Making all in gnulib
make[1]: Entering directory '/home/eglic/src/liblouis-mingw/gnulib'
make  all-recursive
make[2]: Entering directory '/home/eglic/src/liblouis-mingw/gnulib'
make[3]: Entering directory '/home/eglic/src/liblouis-mingw/gnulib'
make[3]: Nothing to be done for 'all-am'.
make[3]: Leaving directory '/home/eglic/src/liblouis-mingw/gnulib'
make[2]: Leaving directory '/home/eglic/src/liblouis-mingw/gnulib'
make[1]: Leaving directory '/home/eglic/src/liblouis-mingw/gnulib'
Making all in liblouis
make[1]: Entering directory '/home/eglic/src/liblouis-mingw/liblouis'
make  all-am
make[2]: Entering directory '/home/eglic/src/liblouis-mingw/liblouis'
/bin/bash ../libtool  --tag=CC   --mode=compile i686-w64-mingw32-gcc -DHAVE_CONFIG_H -I.  -DTABLESDIR=\""""/tmp/liblouis-mingw32/share""/liblouis/tables\"" -I../gnulib -I../gnulib   -g -O2 -Wl,--add-stdcall-alias -MT compileTranslationTable.lo -MD -MP -MF .deps/compileTranslationTable.Tpo -c -o compileTranslationTable.lo compileTranslationTable.c
libtool: compile:  i686-w64-mingw32-gcc -DHAVE_CONFIG_H -I. -DTABLESDIR=\""/tmp/liblouis-mingw32/share/liblouis/tables\"" -I../gnulib -I../gnulib -g -O2 -Wl,--add-stdcall-alias -MT compileTranslationTable.lo -MD -MP -MF .deps/compileTranslationTable.Tpo -c compileTranslationTable.c  -DDLL_EXPORT -DPIC -o .libs/compileTranslationTable.o
compileTranslationTable.c:5483:1: error: conflicting types for ‘lou_getEmphClasses’
 lou_getEmphClasses(const char* tableList)
 ^
In file included from louis.h:40:0,
                 from compileTranslationTable.c:42:
liblouis.h:218:26: note: previous declaration of ‘lou_getEmphClasses’ was here
 char const **EXPORT_CALL lou_getEmphClasses(const char *tableList);
                          ^
Makefile:1039: recipe for target 'compileTranslationTable.lo' failed
make[2]: *** [compileTranslationTable.lo] Error 1
make[2]: Leaving directory '/home/eglic/src/liblouis-mingw/liblouis'
Makefile:920: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/home/eglic/src/liblouis-mingw/liblouis'
Makefile:986: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1

Compilation exited abnormally with code 2 at Mon Mar  6 16:22:23

This patch should fix this","When cross-compiling 3.1.0 I get the following error:
-*- mode: compilation; default-directory: ""~/src/liblouis-mingw/"" -*-
Compilation started at Mon Mar  6 16:22:22

make LDFLAGS='-avoid-version -Xcompiler -static-libgcc'
Making all in gnulib
make[1]: Entering directory '/home/eglic/src/liblouis-mingw/gnulib'
make  all-recursive
make[2]: Entering directory '/home/eglic/src/liblouis-mingw/gnulib'
make[3]: Entering directory '/home/eglic/src/liblouis-mingw/gnulib'
make[3]: Nothing to be done for 'all-am'.
make[3]: Leaving directory '/home/eglic/src/liblouis-mingw/gnulib'
make[2]: Leaving directory '/home/eglic/src/liblouis-mingw/gnulib'
make[1]: Leaving directory '/home/eglic/src/liblouis-mingw/gnulib'
Making all in liblouis
make[1]: Entering directory '/home/eglic/src/liblouis-mingw/liblouis'
make  all-am
make[2]: Entering directory '/home/eglic/src/liblouis-mingw/liblouis'
/bin/bash ../libtool  --tag=CC   --mode=compile i686-w64-mingw32-gcc -DHAVE_CONFIG_H -I.  -DTABLESDIR=\""""/tmp/liblouis-mingw32/share""/liblouis/tables\"" -I../gnulib -I../gnulib   -g -O2 -Wl,--add-stdcall-alias -MT compileTranslationTable.lo -MD -MP -MF .deps/compileTranslationTable.Tpo -c -o compileTranslationTable.lo compileTranslationTable.c
libtool: compile:  i686-w64-mingw32-gcc -DHAVE_CONFIG_H -I. -DTABLESDIR=\""/tmp/liblouis-mingw32/share/liblouis/tables\"" -I../gnulib -I../gnulib -g -O2 -Wl,--add-stdcall-alias -MT compileTranslationTable.lo -MD -MP -MF .deps/compileTranslationTable.Tpo -c compileTranslationTable.c  -DDLL_EXPORT -DPIC -o .libs/compileTranslationTable.o
compileTranslationTable.c:5483:1: error: conflicting types for ‘lou_getEmphClasses’
 lou_getEmphClasses(const char* tableList)
 ^
In file included from louis.h:40:0,
                 from compileTranslationTable.c:42:
liblouis.h:218:26: note: previous declaration of ‘lou_getEmphClasses’ was here
 char const **EXPORT_CALL lou_getEmphClasses(const char *tableList);
                          ^
Makefile:1039: recipe for target 'compileTranslationTable.lo' failed
make[2]: *** [compileTranslationTable.lo] Error 1
make[2]: Leaving directory '/home/eglic/src/liblouis-mingw/liblouis'
Makefile:920: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/home/eglic/src/liblouis-mingw/liblouis'
Makefile:986: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1

Compilation exited abnormally with code 2 at Mon Mar  6 16:22:23

This patch should fix this",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,291,2017-03-09T20:49:32Z,2017-03-21T10:43:31Z,2017-03-21T10:43:31Z,MERGED,True,41,5,4,https://github.com/reiner-dolp,"Documenting logging api deprecation, removing last internal usages",1,['documentation'],https://github.com/liblouis/liblouis/pull/291,https://github.com/reiner-dolp,1,https://github.com/liblouis/liblouis/pull/291,"removes all calls to the deprecated lou_logPrint function.
marks lou_logFile and lou_logEnd as deprecated, because they only interact with lou_logPrint.
Adds a short section to the docs explaining the api change. I have no idea if this reflects your intentions or the truth at all. There have been a lot of changes over the last years, which made understanding git blames really hard.

Closes issue #233.","removes all calls to the deprecated lou_logPrint function.
marks lou_logFile and lou_logEnd as deprecated, because they only interact with lou_logPrint.
Adds a short section to the docs explaining the api change. I have no idea if this reflects your intentions or the truth at all. There have been a lot of changes over the last years, which made understanding git blames really hard.

Closes issue #233.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,297,2017-03-17T09:00:53Z,2017-03-17T09:41:37Z,2017-03-17T09:41:37Z,MERGED,True,6,7,1,https://github.com/garconvacher,'Fix' IPA table,1,[],https://github.com/liblouis/liblouis/pull/297,https://github.com/garconvacher,1,https://github.com/liblouis/liblouis/pull/297,uncomment some lines: some typos are from 'IPA extensions' unicode and not 'greek letters'.,uncomment some lines: some typos are from 'IPA extensions' unicode and not 'greek letters'.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,298,2017-03-17T14:10:05Z,2017-03-17T14:35:17Z,2017-03-17T14:35:17Z,MERGED,True,165,500,2,https://github.com/Roshanson,"update punctuation,digit and letters for zh-chn.ctb",3,[],https://github.com/liblouis/liblouis/pull/298,https://github.com/Roshanson,1,https://github.com/liblouis/liblouis/pull/298,"Hi , i updated punctuation,digit and letters for  table zh-chn.ctb.","Hi , i updated punctuation,digit and letters for  table zh-chn.ctb.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,300,2017-03-20T05:04:42Z,2017-03-27T15:21:42Z,2017-04-04T12:43:07Z,MERGED,True,3,1,1,https://github.com/jcsteh,Eliminate MSVC warning about different const qualifiers in compileTranslationTable.c,1,[],https://github.com/liblouis/liblouis/pull/300,https://github.com/jcsteh,1,https://github.com/liblouis/liblouis/pull/300,"In lou_getEmphClasses, the destination pointer past to memcpy is a const char**, meaning that the strings are constant but the array itself isn't. However, memcpy takes a void* and MSVC doesn't seem to consider the multiple levels of pointers in this case.
To get around this, just explicitly cast to a void* when passing the destination to memcpy.
This warning is currently breaking building liblouis for NVDA, since we treat all level 1 warnings as errors.","In lou_getEmphClasses, the destination pointer past to memcpy is a const char**, meaning that the strings are constant but the array itself isn't. However, memcpy takes a void* and MSVC doesn't seem to consider the multiple levels of pointers in this case.
To get around this, just explicitly cast to a void* when passing the destination to memcpy.
This warning is currently breaking building liblouis for NVDA, since we treat all level 1 warnings as errors.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,301,2017-03-22T07:58:38Z,2017-03-27T15:19:21Z,2017-03-27T15:19:41Z,MERGED,True,1285,1248,1,https://github.com/Roshanson,update the zh-chn.ctb table,1,[],https://github.com/liblouis/liblouis/pull/301,https://github.com/Roshanson,1,https://github.com/liblouis/liblouis/pull/301,update  the zh-chn.ctb table .,update  the zh-chn.ctb table .,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/302,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.","The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/302#issuecomment-288998314,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.","I guess this fixes #176.
@egli So, it's OK to merge?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/302#issuecomment-289024539,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.","Looks good to me. Go ahead and merge.
Regarding #176: I guess that issue entails building and also pushing the build artifact somewhere.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/302#issuecomment-289025128,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.",Merged in 67643d3.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/dkager,5,https://github.com/liblouis/liblouis/pull/302#issuecomment-289377002,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.","Can Travis build with MSVC, e.g. to catch Windows tooling warnings/errors before the release? re #300",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/302#issuecomment-289408745,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.","@dkager afaik travis can only build on linux or osx, so real support for building on MSVC (not using mingw) would have to come from another ci service.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/dkager,7,https://github.com/liblouis/liblouis/pull/302#issuecomment-289411523,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.",Once the Visual Studio project files are ready to go we could run those builds on AppVeyor. But that's a discussion for another day. :),True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/302#issuecomment-289439906,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.",@dkager can you maybe open a separate issue about implementing a ci service that supports msvc? Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,302,2017-03-24T11:22:47Z,2017-03-24T13:40:56Z,2017-06-06T10:59:01Z,CLOSED,False,46,13,2,https://github.com/bertfrees,Use Travis to build with mingw,3,['build system'],https://github.com/liblouis/liblouis/pull/302,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/302#issuecomment-289442794,"The main goal is to catch build errors.
Later we can easily add a after_success script to publish the built binaries to gh-pages.","Done, see #304",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,303,2017-03-24T11:28:29Z,2017-06-06T10:58:45Z,2017-06-06T10:58:58Z,CLOSED,False,40006,25152,304,https://github.com/bertfrees,Run test suite on MinGW binaries,228,[],https://github.com/liblouis/liblouis/pull/303,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/303,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,303,2017-03-24T11:28:29Z,2017-06-06T10:58:45Z,2017-06-06T10:58:58Z,CLOSED,False,40006,25152,304,https://github.com/bertfrees,Run test suite on MinGW binaries,228,[],https://github.com/liblouis/liblouis/pull/303,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/303#issuecomment-295279312,,Hi @bertfrees I added the setenv module and reverted your commit that worked around setenv not exiting on mingw. It compiles but I run into a problem with gnulib. They seem to have done a refactoring of getopt lately and now that doesn't compile on mingw. I asked on the mailing list and hopefully we can get a resolution for this soon. I pushed the code to a new branch mingw-make-check-with-gnulib-setenv,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,303,2017-03-24T11:28:29Z,2017-06-06T10:58:45Z,2017-06-06T10:58:58Z,CLOSED,False,40006,25152,304,https://github.com/bertfrees,Run test suite on MinGW binaries,228,[],https://github.com/liblouis/liblouis/pull/303,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/303#issuecomment-295622096,,"OK, looks like a bug in gnulib. Waiting for a fix before I upgrade it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,303,2017-03-24T11:28:29Z,2017-06-06T10:58:45Z,2017-06-06T10:58:58Z,CLOSED,False,40006,25152,304,https://github.com/bertfrees,Run test suite on MinGW binaries,228,[],https://github.com/liblouis/liblouis/pull/303,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/303#issuecomment-301096388,,They finally installed a workaround in gnulib. Updated gnulib and pushed to this branch. The setenv module should be included now,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,303,2017-03-24T11:28:29Z,2017-06-06T10:58:45Z,2017-06-06T10:58:58Z,CLOSED,False,40006,25152,304,https://github.com/bertfrees,Run test suite on MinGW binaries,228,[],https://github.com/liblouis/liblouis/pull/303,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/303#issuecomment-305765017,,"@bertfrees as far as I'm concerned this is ready to be merged. I can also do the merge, but how come this merges into travis-mingw",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,303,2017-03-24T11:28:29Z,2017-06-06T10:58:45Z,2017-06-06T10:58:58Z,CLOSED,False,40006,25152,304,https://github.com/bertfrees,Run test suite on MinGW binaries,228,[],https://github.com/liblouis/liblouis/pull/303,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/303#issuecomment-306139114,,I'll rebase it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,305,2017-03-29T10:18:58Z,2017-04-24T11:29:16Z,2017-04-24T11:29:16Z,CLOSED,False,216,33,11,https://github.com/reiner-dolp,Automate emscripten builds in travis ci,11,['build system'],https://github.com/liblouis/liblouis/pull/305,https://github.com/reiner-dolp,1,https://github.com/liblouis/liblouis/pull/305,"Additional material for review

Build output in Travis CI (gui, raw) where the build is on the master branch and not a pull request. (git push and publish to package manager registries commented out.)
Build output in Travis CI  (gui, raw) where the build is for a pull request.

Steps that must be performed before merge

replace encrypted github key in ./travis/secrets/deploy_key.enc. The encrypted key has to be bound to the official repository liblouis/liblouis instead of reiner-dolp/liblouis. The person generating the encrypted key needs access to liblouis/liblouis in travis, which I do not have.
squash commits into single commit.

Issues this pull request does not resolve

Does not automatically publish to npm. The npm registry entry liblouis is currently bound to my private account. Allowing Travis CI to publish to liblouis would expose my whole account. I would like to create an official liblouis-organisation account and transfer ownership of the package to this account first.","Additional material for review

Build output in Travis CI (gui, raw) where the build is on the master branch and not a pull request. (git push and publish to package manager registries commented out.)
Build output in Travis CI  (gui, raw) where the build is for a pull request.

Steps that must be performed before merge

replace encrypted github key in ./travis/secrets/deploy_key.enc. The encrypted key has to be bound to the official repository liblouis/liblouis instead of reiner-dolp/liblouis. The person generating the encrypted key needs access to liblouis/liblouis in travis, which I do not have.
squash commits into single commit.

Issues this pull request does not resolve

Does not automatically publish to npm. The npm registry entry liblouis is currently bound to my private account. Allowing Travis CI to publish to liblouis would expose my whole account. I would like to create an official liblouis-organisation account and transfer ownership of the package to this account first.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,305,2017-03-29T10:18:58Z,2017-04-24T11:29:16Z,2017-04-24T11:29:16Z,CLOSED,False,216,33,11,https://github.com/reiner-dolp,Automate emscripten builds in travis ci,11,['build system'],https://github.com/liblouis/liblouis/pull/305,https://github.com/reiner-dolp,2,https://github.com/liblouis/liblouis/pull/305#issuecomment-290429311,"Additional material for review

Build output in Travis CI (gui, raw) where the build is on the master branch and not a pull request. (git push and publish to package manager registries commented out.)
Build output in Travis CI  (gui, raw) where the build is for a pull request.

Steps that must be performed before merge

replace encrypted github key in ./travis/secrets/deploy_key.enc. The encrypted key has to be bound to the official repository liblouis/liblouis instead of reiner-dolp/liblouis. The person generating the encrypted key needs access to liblouis/liblouis in travis, which I do not have.
squash commits into single commit.

Issues this pull request does not resolve

Does not automatically publish to npm. The npm registry entry liblouis is currently bound to my private account. Allowing Travis CI to publish to liblouis would expose my whole account. I would like to create an official liblouis-organisation account and transfer ownership of the package to this account first.",@bertfrees @egli could you review the updated scripts?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,305,2017-03-29T10:18:58Z,2017-04-24T11:29:16Z,2017-04-24T11:29:16Z,CLOSED,False,216,33,11,https://github.com/reiner-dolp,Automate emscripten builds in travis ci,11,['build system'],https://github.com/liblouis/liblouis/pull/305,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/305#issuecomment-292341789,"Additional material for review

Build output in Travis CI (gui, raw) where the build is on the master branch and not a pull request. (git push and publish to package manager registries commented out.)
Build output in Travis CI  (gui, raw) where the build is for a pull request.

Steps that must be performed before merge

replace encrypted github key in ./travis/secrets/deploy_key.enc. The encrypted key has to be bound to the official repository liblouis/liblouis instead of reiner-dolp/liblouis. The person generating the encrypted key needs access to liblouis/liblouis in travis, which I do not have.
squash commits into single commit.

Issues this pull request does not resolve

Does not automatically publish to npm. The npm registry entry liblouis is currently bound to my private account. Allowing Travis CI to publish to liblouis would expose my whole account. I would like to create an official liblouis-organisation account and transfer ownership of the package to this account first.","Looks very nice! So how did you solve the ""No rule to make target 'liblouis-12.def"" error in the end? Has docker got to do with it? I'm not sure I like the use of docker, but if it is really needed to make it build I guess we have no choice.
I'll take care of the deploy keys. Is it OK if I move the publishing part of you script to the ""after_success"" phase? I think that's more common.
If you want to squash the commits you may do it but I don't mind having the history.
Is there anything I need to do with regard the this liblouis organisation you proposed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,305,2017-03-29T10:18:58Z,2017-04-24T11:29:16Z,2017-04-24T11:29:16Z,CLOSED,False,216,33,11,https://github.com/reiner-dolp,Automate emscripten builds in travis ci,11,['build system'],https://github.com/liblouis/liblouis/pull/305,https://github.com/reiner-dolp,4,https://github.com/liblouis/liblouis/pull/305#issuecomment-292454569,"Additional material for review

Build output in Travis CI (gui, raw) where the build is on the master branch and not a pull request. (git push and publish to package manager registries commented out.)
Build output in Travis CI  (gui, raw) where the build is for a pull request.

Steps that must be performed before merge

replace encrypted github key in ./travis/secrets/deploy_key.enc. The encrypted key has to be bound to the official repository liblouis/liblouis instead of reiner-dolp/liblouis. The person generating the encrypted key needs access to liblouis/liblouis in travis, which I do not have.
squash commits into single commit.

Issues this pull request does not resolve

Does not automatically publish to npm. The npm registry entry liblouis is currently bound to my private account. Allowing Travis CI to publish to liblouis would expose my whole account. I would like to create an official liblouis-organisation account and transfer ownership of the package to this account first.","I worked around the issue by disabling the creation of shared libraries (which disables def-file creation) and building using the staticly linked liblouis.a instead of liblouis.so.

The docker image  works around another issue: Usually you install emcc by using the emscripten sdk as follows:
# Fetch the latest registry of available tools.
./emsdk update
# Download and install the latest SDK tools.
./emsdk install latest
# Make the ""latest"" SDK ""active""
./emsdk activate latest

This will either fetch prebuilt binaries (or built from source). Currently, the prebuilt binaries do not work in travis ci. The maintainer of emscripten is having the same issue. The docker image we are using is based on asRIAs docker image. See discussion here.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,305,2017-03-29T10:18:58Z,2017-04-24T11:29:16Z,2017-04-24T11:29:16Z,CLOSED,False,216,33,11,https://github.com/reiner-dolp,Automate emscripten builds in travis ci,11,['build system'],https://github.com/liblouis/liblouis/pull/305,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/305#issuecomment-292476496,"Additional material for review

Build output in Travis CI (gui, raw) where the build is on the master branch and not a pull request. (git push and publish to package manager registries commented out.)
Build output in Travis CI  (gui, raw) where the build is for a pull request.

Steps that must be performed before merge

replace encrypted github key in ./travis/secrets/deploy_key.enc. The encrypted key has to be bound to the official repository liblouis/liblouis instead of reiner-dolp/liblouis. The person generating the encrypted key needs access to liblouis/liblouis in travis, which I do not have.
squash commits into single commit.

Issues this pull request does not resolve

Does not automatically publish to npm. The npm registry entry liblouis is currently bound to my private account. Allowing Travis CI to publish to liblouis would expose my whole account. I would like to create an official liblouis-organisation account and transfer ownership of the package to this account first.",OK thanks for the explanation.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,305,2017-03-29T10:18:58Z,2017-04-24T11:29:16Z,2017-04-24T11:29:16Z,CLOSED,False,216,33,11,https://github.com/reiner-dolp,Automate emscripten builds in travis ci,11,['build system'],https://github.com/liblouis/liblouis/pull/305,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/305#issuecomment-296622545,"Additional material for review

Build output in Travis CI (gui, raw) where the build is on the master branch and not a pull request. (git push and publish to package manager registries commented out.)
Build output in Travis CI  (gui, raw) where the build is for a pull request.

Steps that must be performed before merge

replace encrypted github key in ./travis/secrets/deploy_key.enc. The encrypted key has to be bound to the official repository liblouis/liblouis instead of reiner-dolp/liblouis. The person generating the encrypted key needs access to liblouis/liblouis in travis, which I do not have.
squash commits into single commit.

Issues this pull request does not resolve

Does not automatically publish to npm. The npm registry entry liblouis is currently bound to my private account. Allowing Travis CI to publish to liblouis would expose my whole account. I would like to create an official liblouis-organisation account and transfer ownership of the package to this account first.","Merged in 464cb13. Thank you very much @reiner-dolp.
PS: the merge resulted in this commit in js-builds: liblouis/js-build@049a191. Can you check if it is OK?
Actually it looks like the tables directory has some files that don't belong there: Makefile, Makefile.am, Makefile.in, maketablelist.sh.
Instead of copying all files in the tables directory:
cp -R ./tables/ ../js-build/tables/
you could perhaps use emmake make install to install the tables to some temporary location (configured with --prefix) and then copy the files from there.",True,{'HOORAY': ['https://github.com/reiner-dolp']}
liblouis/liblouis,https://github.com/liblouis/liblouis,305,2017-03-29T10:18:58Z,2017-04-24T11:29:16Z,2017-04-24T11:29:16Z,CLOSED,False,216,33,11,https://github.com/reiner-dolp,Automate emscripten builds in travis ci,11,['build system'],https://github.com/liblouis/liblouis/pull/305,https://github.com/reiner-dolp,7,https://github.com/liblouis/liblouis/pull/305#issuecomment-296627090,"Additional material for review

Build output in Travis CI (gui, raw) where the build is on the master branch and not a pull request. (git push and publish to package manager registries commented out.)
Build output in Travis CI  (gui, raw) where the build is for a pull request.

Steps that must be performed before merge

replace encrypted github key in ./travis/secrets/deploy_key.enc. The encrypted key has to be bound to the official repository liblouis/liblouis instead of reiner-dolp/liblouis. The person generating the encrypted key needs access to liblouis/liblouis in travis, which I do not have.
squash commits into single commit.

Issues this pull request does not resolve

Does not automatically publish to npm. The npm registry entry liblouis is currently bound to my private account. Allowing Travis CI to publish to liblouis would expose my whole account. I would like to create an official liblouis-organisation account and transfer ownership of the package to this account first.","Hooray! Thank you so much.
The builds seem to be ok. I will open a new pull request for the table folder problem you mentioned and some other minor issues.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,308,2017-04-03T17:34:12Z,2017-04-04T07:20:27Z,2017-04-04T14:52:44Z,MERGED,True,2422,0,9,https://github.com/BueVest,Dk yaml,13,[],https://github.com/liblouis/liblouis/pull/308,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/308,"Basic 8 dots yaml tests for grade 0, 1, and 2 to prevent code changes from degrading the Danish tables further. Please, integrate asap.","Basic 8 dots yaml tests for grade 0, 1, and 2 to prevent code changes from degrading the Danish tables further. Please, integrate asap.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,308,2017-04-03T17:34:12Z,2017-04-04T07:20:27Z,2017-04-04T14:52:44Z,MERGED,True,2422,0,9,https://github.com/BueVest,Dk yaml,13,[],https://github.com/liblouis/liblouis/pull/308,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/308#issuecomment-291227173,"Basic 8 dots yaml tests for grade 0, 1, and 2 to prevent code changes from degrading the Danish tables further. Please, integrate asap.","Very nice Bue! Thank you.
This looks good to merge. Could you maybe just add the YAML files to test/Makefile.am so that we can see that the tests pass on Travis?
Also first I'd like to make sure you are aware of the feature to run the same test data on several tables under test at once?  The feature is explained here. From what I can tell there is some duplication that you could eliminate this way. Just FYI. Whether you want to use it or not is up to you.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,308,2017-04-03T17:34:12Z,2017-04-04T07:20:27Z,2017-04-04T14:52:44Z,MERGED,True,2422,0,9,https://github.com/BueVest,Dk yaml,13,[],https://github.com/liblouis/liblouis/pull/308,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/308#issuecomment-291256624,"Basic 8 dots yaml tests for grade 0, 1, and 2 to prevent code changes from degrading the Danish tables further. Please, integrate asap.","Ok. Done.

Hope my modifications to Makefile.am work, but is there any way I can test it?

Yes, I am aware of the possibilities to combine tables and tests in one file. However, just now, I would like to keep a yaml file for each table. There are some duplicates, but then there are also differences in each table. I might be able to eliminate some files later.

Hope it is ok.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,308,2017-04-03T17:34:12Z,2017-04-04T07:20:27Z,2017-04-04T14:52:44Z,MERGED,True,2422,0,9,https://github.com/BueVest,Dk yaml,13,[],https://github.com/liblouis/liblouis/pull/308,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/308#issuecomment-291275821,"Basic 8 dots yaml tests for grade 0, 1, and 2 to prevent code changes from degrading the Danish tables further. Please, integrate asap.","Sure it's OK.
The added lines in the Makefile need a backslash at the end. Also the table paths in the YAML files need to start with ""tables/"" otherwise they are not found. For example:
table: [tables/unicode.dis, tables/da-dk-g08.ctb]
You can test it by running make check on Linux or by looking at the Travis logs: https://travis-ci.org/liblouis/liblouis",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,308,2017-04-03T17:34:12Z,2017-04-04T07:20:27Z,2017-04-04T14:52:44Z,MERGED,True,2422,0,9,https://github.com/BueVest,Dk yaml,13,[],https://github.com/liblouis/liblouis/pull/308,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/308#issuecomment-291524314,"Basic 8 dots yaml tests for grade 0, 1, and 2 to prevent code changes from degrading the Danish tables further. Please, integrate asap.","Fantastic, thank you",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,310,2017-04-04T12:41:48Z,2017-04-04T12:48:53Z,2017-04-04T12:56:10Z,MERGED,True,12,1,5,https://github.com/jcsteh,"en-ueb-g2.ctb: Fix back-translation of ""?"" to ""this"".",1,[],https://github.com/liblouis/liblouis/pull/310,https://github.com/jcsteh,1,https://github.com/liblouis/liblouis/pull/310,"""?"" was incorrectly being back-translated to ""his"". This occurred because the display opcode for ""?"" was after the punctuation opcode for ""?"".
Regression introduced in 5fff9d8 (#211).
Fixes #309.","""?"" was incorrectly being back-translated to ""his"". This occurred because the display opcode for ""?"" was after the punctuation opcode for ""?"".
Regression introduced in 5fff9d8 (#211).
Fixes #309.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,310,2017-04-04T12:41:48Z,2017-04-04T12:48:53Z,2017-04-04T12:56:10Z,MERGED,True,12,1,5,https://github.com/jcsteh,"en-ueb-g2.ctb: Fix back-translation of ""?"" to ""this"".",1,[],https://github.com/liblouis/liblouis/pull/310,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/310#issuecomment-291489159,"""?"" was incorrectly being back-translated to ""his"". This occurred because the display opcode for ""?"" was after the punctuation opcode for ""?"".
Regression introduced in 5fff9d8 (#211).
Fixes #309.",Excellent PR. Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,313,2017-04-11T23:10:45Z,2017-04-18T08:29:38Z,2017-04-18T08:29:38Z,MERGED,True,15,4,5,https://github.com/jcsteh,Fix incorrect back-translation for UEB grade 1 symbol indicator,4,[],https://github.com/liblouis/liblouis/pull/313,https://github.com/jcsteh,1,https://github.com/liblouis/liblouis/pull/313,"Fixes back-translation of ⠰ (the UEB grade 1 symbol indicator); e.g. ⠰⠃, ⠰⠠⠃, ⠰⠁⠃, ⠰⠠⠁⠃, ⠼⠁⠰⠁, ⠼⠁⠰⠠⠁.

Support the nocontractsign opcode for back-translation.
Allow nocontractsign as an operand for the multind opcode.
en-ueb-g2: Support back-translation of the multiple indicators 56-6; i.e. grade 1 symbol indicator followed by capital indicator.
Add tests for the UEB grade 1 symbol indicator.

Fixes #311.","Fixes back-translation of ⠰ (the UEB grade 1 symbol indicator); e.g. ⠰⠃, ⠰⠠⠃, ⠰⠁⠃, ⠰⠠⠁⠃, ⠼⠁⠰⠁, ⠼⠁⠰⠠⠁.

Support the nocontractsign opcode for back-translation.
Allow nocontractsign as an operand for the multind opcode.
en-ueb-g2: Support back-translation of the multiple indicators 56-6; i.e. grade 1 symbol indicator followed by capital indicator.
Add tests for the UEB grade 1 symbol indicator.

Fixes #311.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,320,2017-04-24T11:29:57Z,2017-04-24T11:41:41Z,2017-04-24T12:03:39Z,MERGED,True,34,0,2,https://github.com/torchtrust,Added more unicode fraction symbols and not equal,2,[],https://github.com/liblouis/liblouis/pull/320,https://github.com/torchtrust,1,https://github.com/liblouis/liblouis/pull/320,Additions supplied by James Bowden (RNIB),Additions supplied by James Bowden (RNIB),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,320,2017-04-24T11:29:57Z,2017-04-24T11:41:41Z,2017-04-24T12:03:39Z,MERGED,True,34,0,2,https://github.com/torchtrust,Added more unicode fraction symbols and not equal,2,[],https://github.com/liblouis/liblouis/pull/320,https://github.com/torchtrust,2,https://github.com/liblouis/liblouis/pull/320#issuecomment-296631581,Additions supplied by James Bowden (RNIB),"Many Thanks!

Could James be added as a table contributor?

Paul",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,320,2017-04-24T11:29:57Z,2017-04-24T11:41:41Z,2017-04-24T12:03:39Z,MERGED,True,34,0,2,https://github.com/torchtrust,Added more unicode fraction symbols and not equal,2,[],https://github.com/liblouis/liblouis/pull/320,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/320#issuecomment-296634496,Additions supplied by James Bowden (RNIB),"Sure, just send me his email",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,320,2017-04-24T11:29:57Z,2017-04-24T11:41:41Z,2017-04-24T12:03:39Z,MERGED,True,34,0,2,https://github.com/torchtrust,Added more unicode fraction symbols and not equal,2,[],https://github.com/liblouis/liblouis/pull/320,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/320#issuecomment-296637069,Additions supplied by James Bowden (RNIB),"OK, thanks I was thinking you could send it in private :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,320,2017-04-24T11:29:57Z,2017-04-24T11:41:41Z,2017-04-24T12:03:39Z,MERGED,True,34,0,2,https://github.com/torchtrust,Added more unicode fraction symbols and not equal,2,[],https://github.com/liblouis/liblouis/pull/320,https://github.com/torchtrust,5,https://github.com/liblouis/liblouis/pull/320#issuecomment-296637106,Additions supplied by James Bowden (RNIB),Sorry!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,324,2017-04-25T00:34:59Z,2017-04-25T13:42:50Z,2017-04-25T13:43:02Z,MERGED,True,1,0,1,https://github.com/CMB,tools/brl_checks.c: use correct wide char type.,1,[],https://github.com/liblouis/liblouis/pull/324,https://github.com/CMB,1,https://github.com/liblouis/liblouis/pull/324,"When built with --enable-ucs4, brl_checks.c was using the 16-bit
wide character functions instead of the 32-bit ones.","When built with --enable-ucs4, brl_checks.c was using the 16-bit
wide character functions instead of the 32-bit ones.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,324,2017-04-25T00:34:59Z,2017-04-25T13:42:50Z,2017-04-25T13:43:02Z,MERGED,True,1,0,1,https://github.com/CMB,tools/brl_checks.c: use correct wide char type.,1,[],https://github.com/liblouis/liblouis/pull/324,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/324#issuecomment-297026118,"When built with --enable-ucs4, brl_checks.c was using the 16-bit
wide character functions instead of the 32-bit ones.","Hi @CMB
I can see that including config.h probably makes sense. But in what way does it make it use the correct wide char type?
I thought configure creates a liblouis.h which typedefs the widechar type.
So if you include liblouis.h you're fine, aren't you?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,324,2017-04-25T00:34:59Z,2017-04-25T13:42:50Z,2017-04-25T13:43:02Z,MERGED,True,1,0,1,https://github.com/CMB,tools/brl_checks.c: use correct wide char type.,1,[],https://github.com/liblouis/liblouis/pull/324,https://github.com/CMB,3,https://github.com/liblouis/liblouis/pull/324#issuecomment-297030045,"When built with --enable-ucs4, brl_checks.c was using the 16-bit
wide character functions instead of the 32-bit ones.","This issue title was a little misleading; sorry for that.
But look at lines 48-52 in tools/brl_checks.c:
#ifdef WIDECHARS_ARE_UCS4
result_buf = u32_to_u8(buffer, length, NULL, &result_len);
#else
result_buf = u16_to_u8(buffer, length, NULL, &result_len);
#endif
There's a widechar typedef in liblouis.h, but WIDECHARS_ARE_UCS4
is defined in config.h, and this code tests for the presence
of WIDECHARS_ARE_UCS4 to decide which function to use.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,324,2017-04-25T00:34:59Z,2017-04-25T13:42:50Z,2017-04-25T13:43:02Z,MERGED,True,1,0,1,https://github.com/CMB,tools/brl_checks.c: use correct wide char type.,1,[],https://github.com/liblouis/liblouis/pull/324,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/324#issuecomment-297033831,"When built with --enable-ucs4, brl_checks.c was using the 16-bit
wide character functions instead of the 32-bit ones.","Ah, ok, makes total sense now. Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,325,2017-04-25T01:09:53Z,2017-04-25T10:16:58Z,2017-04-27T15:40:43Z,MERGED,True,2,2,2,https://github.com/CMB,Python bindings: fix crossbuild.,1,['build system'],https://github.com/liblouis/liblouis/pull/325,https://github.com/CMB,1,https://github.com/liblouis/liblouis/pull/325,"setup.py tries to import the louis module at build / install time.
However, this will fail if the package is being cross-built on
a host architecture other than the target architecture.
Instead, setup.py probably should be generated automatically by
autotools.","setup.py tries to import the louis module at build / install time.
However, this will fail if the package is being cross-built on
a host architecture other than the target architecture.
Instead, setup.py probably should be generated automatically by
autotools.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,325,2017-04-25T01:09:53Z,2017-04-25T10:16:58Z,2017-04-27T15:40:43Z,MERGED,True,2,2,2,https://github.com/CMB,Python bindings: fix crossbuild.,1,['build system'],https://github.com/liblouis/liblouis/pull/325,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/325#issuecomment-296986255,"setup.py tries to import the louis module at build / install time.
However, this will fail if the package is being cross-built on
a host architecture other than the target architecture.
Instead, setup.py probably should be generated automatically by
autotools.",Excellent catch and good patch. Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,325,2017-04-25T01:09:53Z,2017-04-25T10:16:58Z,2017-04-27T15:40:43Z,MERGED,True,2,2,2,https://github.com/CMB,Python bindings: fix crossbuild.,1,['build system'],https://github.com/liblouis/liblouis/pull/325,https://github.com/dkager,3,https://github.com/liblouis/liblouis/pull/325#issuecomment-297751408,"setup.py tries to import the louis module at build / install time.
However, this will fail if the package is being cross-built on
a host architecture other than the target architecture.
Instead, setup.py probably should be generated automatically by
autotools.",We probably want to add python/setup.py to .gitignore now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,325,2017-04-25T01:09:53Z,2017-04-25T10:16:58Z,2017-04-27T15:40:43Z,MERGED,True,2,2,2,https://github.com/CMB,Python bindings: fix crossbuild.,1,['build system'],https://github.com/liblouis/liblouis/pull/325,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/325#issuecomment-297752834,"setup.py tries to import the louis module at build / install time.
However, this will fail if the package is being cross-built on
a host architecture other than the target architecture.
Instead, setup.py probably should be generated automatically by
autotools.","Ah, yes another good catch",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,326,2017-04-25T08:37:51Z,2017-04-25T15:22:43Z,2017-04-25T15:22:43Z,MERGED,True,9,13,3,https://github.com/reiner-dolp,Disable tables embeded builds,3,[],https://github.com/liblouis/liblouis/pull/326,https://github.com/reiner-dolp,1,https://github.com/liblouis/liblouis/pull/326,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,326,2017-04-25T08:37:51Z,2017-04-25T15:22:43Z,2017-04-25T15:22:43Z,MERGED,True,9,13,3,https://github.com/reiner-dolp,Disable tables embeded builds,3,[],https://github.com/liblouis/liblouis/pull/326,https://github.com/reiner-dolp,2,https://github.com/liblouis/liblouis/pull/326#issuecomment-296966714,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,Should wait until liblouis/liblouis-js#31 is resolved.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,326,2017-04-25T08:37:51Z,2017-04-25T15:22:43Z,2017-04-25T15:22:43Z,MERGED,True,9,13,3,https://github.com/reiner-dolp,Disable tables embeded builds,3,[],https://github.com/liblouis/liblouis/pull/326,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/326#issuecomment-297046386,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,So what's the verdict here? The test suite fails but I assume that it will fix another problem we are currently having with our test suite,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,326,2017-04-25T08:37:51Z,2017-04-25T15:22:43Z,2017-04-25T15:22:43Z,MERGED,True,9,13,3,https://github.com/reiner-dolp,Disable tables embeded builds,3,[],https://github.com/liblouis/liblouis/pull/326,https://github.com/reiner-dolp,4,https://github.com/liblouis/liblouis/pull/326#issuecomment-297049133,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,"I am sorry. Travis is directly cloning from master in liblouis-js. I already updated liblouis-js to work with the changes in this pull request. The test suite in liblouis-js#master has to be called with another command now.
We should probably avoid this issue in the future. We could:

clone from the package manager or clone a explicit commit/version instead of master.
merge the js tests into liblouis/liblouis.
or keep it as is, I do not intend (and hopefully do not have to) to change the unit test framework every week...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,326,2017-04-25T08:37:51Z,2017-04-25T15:22:43Z,2017-04-25T15:22:43Z,MERGED,True,9,13,3,https://github.com/reiner-dolp,Disable tables embeded builds,3,[],https://github.com/liblouis/liblouis/pull/326,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/326#issuecomment-297049933,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,I don't understand. Can I merge this PR (despite the failure) or should I wait?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,326,2017-04-25T08:37:51Z,2017-04-25T15:22:43Z,2017-04-25T15:22:43Z,MERGED,True,9,13,3,https://github.com/reiner-dolp,Disable tables embeded builds,3,[],https://github.com/liblouis/liblouis/pull/326,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/326#issuecomment-297053245,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,"clone from the package manager or clone a explicit commit/version instead of master.
merge the js tests into liblouis/liblouis.
or keep it as is, I do not intend (and hopefully do not have to) to change the unit test framework every week...


All sound like valid solutions to me. Whatever you prefer.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,326,2017-04-25T08:37:51Z,2017-04-25T15:22:43Z,2017-04-25T15:22:43Z,MERGED,True,9,13,3,https://github.com/reiner-dolp,Disable tables embeded builds,3,[],https://github.com/liblouis/liblouis/pull/326,https://github.com/reiner-dolp,7,https://github.com/liblouis/liblouis/pull/326#issuecomment-297053739,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,@egli this is mergeable.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,326,2017-04-25T08:37:51Z,2017-04-25T15:22:43Z,2017-04-25T15:22:43Z,MERGED,True,9,13,3,https://github.com/reiner-dolp,Disable tables embeded builds,3,[],https://github.com/liblouis/liblouis/pull/326,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/326#issuecomment-297057506,Disables the 2x 25MB builds with all table files embeded. They became virtually useless through changes in the upcoming liblouis-js version.,"merge the js tests into liblouis/liblouis

If the js test runner does not depend on easy-api.js, this would be the preferable solution for me.
(EDIT: but as far as I can see it does depend on easy-api.js, so never mind.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,327,2017-04-25T08:53:44Z,2017-04-26T13:10:44Z,2017-04-26T13:10:44Z,CLOSED,False,35,7,4,https://github.com/reiner-dolp,Update emscripten build release handling,3,[],https://github.com/liblouis/liblouis/pull/327,https://github.com/reiner-dolp,1,https://github.com/liblouis/liblouis/pull/327,"only push to package managers if the build is an official release
only publish automatic builds as release candidates. Devs should confirm the build and update the version tag.
change the prefix of development versions to ""commit-"" instead of ""v0.0.0-"". (This is possible as we no longer publish development versions to package managers.)","only push to package managers if the build is an official release
only publish automatic builds as release candidates. Devs should confirm the build and update the version tag.
change the prefix of development versions to ""commit-"" instead of ""v0.0.0-"". (This is possible as we no longer publish development versions to package managers.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,327,2017-04-25T08:53:44Z,2017-04-26T13:10:44Z,2017-04-26T13:10:44Z,CLOSED,False,35,7,4,https://github.com/reiner-dolp,Update emscripten build release handling,3,[],https://github.com/liblouis/liblouis/pull/327,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/327#issuecomment-297156873,"only push to package managers if the build is an official release
only publish automatic builds as release candidates. Devs should confirm the build and update the version tag.
change the prefix of development versions to ""commit-"" instead of ""v0.0.0-"". (This is possible as we no longer publish development versions to package managers.)",OK. Shall I merge? (+ fix indentation),True,{'THUMBS_UP': ['https://github.com/reiner-dolp']}
liblouis/liblouis,https://github.com/liblouis/liblouis,327,2017-04-25T08:53:44Z,2017-04-26T13:10:44Z,2017-04-26T13:10:44Z,CLOSED,False,35,7,4,https://github.com/reiner-dolp,Update emscripten build release handling,3,[],https://github.com/liblouis/liblouis/pull/327,https://github.com/reiner-dolp,3,https://github.com/liblouis/liblouis/pull/327#issuecomment-297401019,"only push to package managers if the build is an official release
only publish automatic builds as release candidates. Devs should confirm the build and update the version tag.
change the prefix of development versions to ""commit-"" instead of ""v0.0.0-"". (This is possible as we no longer publish development versions to package managers.)",Yes.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/328,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/328#issuecomment-297411018,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,"Dave Mielke also proposed to do this but I told him to wait until I have finished the global variables refactoring (#257) because many functions that currently have no argument will have argument after that refactoring. But anyway, now that you have done the effort already we might as well include it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/328#issuecomment-297411666,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,Although it will make the merge afterwards a bit harder.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/dkager,4,https://github.com/liblouis/liblouis/pull/328#issuecomment-297421652,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,"I actually did this after I saw Dave's functions used it, figuring if anyone knows it's he. Another reason was to have a ""clean slate"" if/when we do the work proposed in #318. My integration/msvc branch was suffering from some textbook-style scope creep, so I split this off.
That said, it wasn't a very big effort.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/328#issuecomment-303034563,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,"@dkager Would it be much work to rebase this onto master (when I have merged the ""windows_improvements_rebased"" branch)?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/dkager,6,https://github.com/liblouis/liblouis/pull/328#issuecomment-303038239,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,I'll try to spare a moment for this and the Windows integration tonight.,True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/328#issuecomment-303043376,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/dkager,8,https://github.com/liblouis/liblouis/pull/328#issuecomment-304249701,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,@bertfrees Rebased on windows_improvements_rebased.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,328,2017-04-26T13:33:15Z,2017-05-29T09:48:57Z,2017-05-29T09:48:57Z,CLOSED,False,2975,2411,35,https://github.com/dkager,Consistent use of void for functions with zero parameters,32,['refactoring'],https://github.com/liblouis/liblouis/pull/328,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/328#issuecomment-304619565,Turns out void foo() and void foo(void) are not the same in C. So consistently use the proper one.,Merged in e5f9812,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,330,2017-04-27T21:08:31Z,2017-04-28T08:40:46Z,2017-04-28T08:40:50Z,MERGED,True,22,14,2,https://github.com/reiner-dolp,Hot Fix + Pin liblouis-js version,2,[],https://github.com/liblouis/liblouis/pull/330,https://github.com/reiner-dolp,1,https://github.com/liblouis/liblouis/pull/330,"Previous merged PR had 2 serious quality issues and should not have made it into the repo. I am sorry.
Also pins the version of liblouis-js to a specific commit instead of master. Avoids issues we previously had with both repos being out of sync.","Previous merged PR had 2 serious quality issues and should not have made it into the repo. I am sorry.
Also pins the version of liblouis-js to a specific commit instead of master. Avoids issues we previously had with both repos being out of sync.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,330,2017-04-27T21:08:31Z,2017-04-28T08:40:46Z,2017-04-28T08:40:50Z,MERGED,True,22,14,2,https://github.com/reiner-dolp,Hot Fix + Pin liblouis-js version,2,[],https://github.com/liblouis/liblouis/pull/330,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/330#issuecomment-297942361,"Previous merged PR had 2 serious quality issues and should not have made it into the repo. I am sorry.
Also pins the version of liblouis-js to a specific commit instead of master. Avoids issues we previously had with both repos being out of sync.",Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/331,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/331#issuecomment-298186454,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","Great job! Thanks Bue.
Your test is apparently failing on Travis because the includes can not be resolved, but we can fix that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/331#issuecomment-298193954,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","Thanks. Please, tell me what I did wrong, so that I can do it right the next time.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/331#issuecomment-298528336,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","Thanks. Please, tell me what I did wrong, so that I can do it right the next time.

See the commit message of my last commit",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/331#issuecomment-298528917,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).",@BueVest Did you get notified of the review comments that I made?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/331#issuecomment-298617241,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).",Sorry apparently I had to submit my review. Now you should be able to see my comments.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/331#issuecomment-299453821,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","Bert, it seems like you have already changed the table and the test while I was in Frankfurt. Thank you very much for that.

What else needs to be done before merge?

Do you by chance have a better name for the resolveSymbolsOnly function?

Bue",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/331#issuecomment-299459389,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","Just wanted to understand how you came up with that name. What is ""only""? I don't get it.
I think I would have renamed the existing ""resolveEmphasisSymbols"" to ""resolveEmphasisSingleSymbols"" and called the new function ""resolveEmphasisAllSymbols"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/331#issuecomment-299531668,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","That makes sense. I just thought that it would be a bit invasive to rename an old function, but I will do it that way.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/BueVest,10,https://github.com/liblouis/liblouis/pull/331#issuecomment-299534856,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","I need to test against typebuf, because markEmphasis() only marks the beginning and end of an area with no small letters. I guess this is for the tables that contain the capsphrase opcode, if it has been implemented.

However, I want to only mark actual capital letters, not spaces or punctuation characters within a CAPS_BEGIN / CAPS_END boundary. I do it this way to not disturb too much the concept of caps and emphasis sharing the same code. The resolveWord function does something similar in that it checks for word boundaries within the begin/end boundaries of the emphasis/caps area.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/331#issuecomment-299570702,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","OK, I see. CAPSEMPH is set based on checkAttr(currentInput[i], CTC_UpperCase, 0) (line 3663).
But what if this function would be used for other emphasis? If you mark everything wouldn't you be inserting indicators for spaces and punctuation? For spaces that doesn't make any sense, and for punctuation it's also not sure whether it would be desired.
In fact, making this a generic function just doesn't make much sense I think. Why would you ever need to mark single emphasized letters? What about making the function specific to caps (call it ""resolveEmphasisAllCapsSymbols""). In the unlikely event that we need to do the same for other emphasis it is very easy to generalize later. What do you think?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/331#issuecomment-299587065,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","I can do the changes, just say OK.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/BueVest,13,https://github.com/liblouis/liblouis/pull/331#issuecomment-299633096,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).",You are welcome to change it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/BueVest,14,https://github.com/liblouis/liblouis/pull/331#issuecomment-299633280,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).","Yes, you are right. I just wanted to keep in line with the current code, but the function could be generalized later if needed. Then we should probably either check that the function is called with caps_symbol, or just skip all the superfluous arguments.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,331,2017-04-29T16:19:55Z,2017-05-08T09:33:03Z,2017-05-08T09:33:03Z,CLOSED,False,109,9,4,https://github.com/BueVest,Bva improve caps,7,[],https://github.com/liblouis/liblouis/pull/331,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/331#issuecomment-299819397,"Fixed capsnocont.
Changed behaviour when capsnocont is defined, but no begcapsword indicator. In this case all capital letters are marked with capsletter symbol.
Added note about this to documentation under capsnocont.
Added yaml test and a corresponding table to test that it works.
Added relevant lines to relevant makefile.am files (I hope).",Merged in e8ed528,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,335,2017-05-02T19:19:55Z,2017-05-03T07:16:34Z,2017-05-03T08:37:00Z,MERGED,True,2,2,1,https://github.com/MikeGray-APH,Fixed missing 's's.,1,[],https://github.com/liblouis/liblouis/pull/335,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/335,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,335,2017-05-02T19:19:55Z,2017-05-03T07:16:34Z,2017-05-03T08:37:00Z,MERGED,True,2,2,1,https://github.com/MikeGray-APH,Fixed missing 's's.,1,[],https://github.com/liblouis/liblouis/pull/335,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/335#issuecomment-298852754,,"Great!
CC @DaveMielke",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,336,2017-05-07T19:09:58Z,2017-05-08T08:38:48Z,2017-05-08T08:39:07Z,MERGED,True,555,588,4,https://github.com/BueVest,Cleaned up Danish dictionary tests,2,[],https://github.com/liblouis/liblouis/pull/336,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/336,"Should actually be useful now. This removes about 2000 lines from test-suite.log, which might make it worth merging at this stage.","Should actually be useful now. This removes about 2000 lines from test-suite.log, which might make it worth merging at this stage.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,340,2017-05-14T11:35:07Z,2017-05-29T09:49:10Z,2017-05-29T09:49:10Z,CLOSED,False,893,1086,35,https://github.com/dkager,Various NMake and Mingw improvements for Windows,29,['waiting'],https://github.com/liblouis/liblouis/pull/340,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/340,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,340,2017-05-14T11:35:07Z,2017-05-29T09:49:10Z,2017-05-29T09:49:10Z,CLOSED,False,893,1086,35,https://github.com/dkager,Various NMake and Mingw improvements for Windows,29,['waiting'],https://github.com/liblouis/liblouis/pull/340,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/340#issuecomment-302945971,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,"I rebased your branch and merged it with my ""global-vars"" branch. I have pushed the result to ""windows_improvement_rebased"". Can you quickly check that haven't fucked up? Then AFAIAC this can go in.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,340,2017-05-14T11:35:07Z,2017-05-29T09:49:10Z,2017-05-29T09:49:10Z,CLOSED,False,893,1086,35,https://github.com/dkager,Various NMake and Mingw improvements for Windows,29,['waiting'],https://github.com/liblouis/liblouis/pull/340,https://github.com/dkager,3,https://github.com/liblouis/liblouis/pull/340#issuecomment-303185368,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,"@bertfrees Admittedly I didn't have a thorough look, but it seems to be OK. I fixed a few oversights on my original branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,340,2017-05-14T11:35:07Z,2017-05-29T09:49:10Z,2017-05-29T09:49:10Z,CLOSED,False,893,1086,35,https://github.com/dkager,Various NMake and Mingw improvements for Windows,29,['waiting'],https://github.com/liblouis/liblouis/pull/340,https://github.com/dkager,4,https://github.com/liblouis/liblouis/pull/340#issuecomment-303185615,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,"... Oops, ambiguous comment. I meant, I fixed some issues I hadn't noticed before and put them on the windows_improvements_rebased branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,340,2017-05-14T11:35:07Z,2017-05-29T09:49:10Z,2017-05-29T09:49:10Z,CLOSED,False,893,1086,35,https://github.com/dkager,Various NMake and Mingw improvements for Windows,29,['waiting'],https://github.com/liblouis/liblouis/pull/340,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/340#issuecomment-303245059,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,Did you test it on Windows?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,340,2017-05-14T11:35:07Z,2017-05-29T09:49:10Z,2017-05-29T09:49:10Z,CLOSED,False,893,1086,35,https://github.com/dkager,Various NMake and Mingw improvements for Windows,29,['waiting'],https://github.com/liblouis/liblouis/pull/340,https://github.com/dkager,6,https://github.com/liblouis/liblouis/pull/340#issuecomment-303298809,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,MinGW ran without problems. MSVC is a bit trickier because you can't build the tools. I want to test with the Python bindings but haven't had time yet.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,340,2017-05-14T11:35:07Z,2017-05-29T09:49:10Z,2017-05-29T09:49:10Z,CLOSED,False,893,1086,35,https://github.com/dkager,Various NMake and Mingw improvements for Windows,29,['waiting'],https://github.com/liblouis/liblouis/pull/340,https://github.com/dkager,7,https://github.com/liblouis/liblouis/pull/340#issuecomment-303987159,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,I've been using an MSVC build of this code with NVDA for half an hour and haven't had any issues. While this isn't the same as using the tools or running the tests I'm reasonably confident that all is well.,True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,340,2017-05-14T11:35:07Z,2017-05-29T09:49:10Z,2017-05-29T09:49:10Z,CLOSED,False,893,1086,35,https://github.com/dkager,Various NMake and Mingw improvements for Windows,29,['waiting'],https://github.com/liblouis/liblouis/pull/340,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/340#issuecomment-304619527,To be in time for the June release of v3.2 I'm putting this up now rather than going on to add MSVC projects. This should hopefully provide enough review time. I propose looking at MSVC projects for liblouis 3.3.,Merged in a94304a,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/341,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/341#issuecomment-301405929,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","@egli I think Bue is referring to regressions, not new features. Besides we added noback and nofor to all tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/341#issuecomment-301478160,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","No, I wasn’t refering to `nofor` and `noback` in conjunction with multipass. I participated in that discussion and fully agreed on the solution.

However, some code, which was added in the last release of 2016, broke my 8 dots grade 2 tables. I was probably tweaking Liblouis rather sharply to make capitalized contractions work in 8 dots, and since no proper yaml tests were in place, nobody detected that the new code broke the Danish tables before it was too late.

At that time, I only had the dictionary tests that Mesar made, and they did not contain any words with capital letters. Even names were tolowered in the original word base for some strange reason. However, now I have added tests to take care of these things and make sure that things won’t break again because of some arbitrary change of the code.

Hope it makes sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/341#issuecomment-301496309,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","OK, makes sense. Good to know that these things are covered by tests now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/341#issuecomment-301798165,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.",@BueVest are you going to add some comments to the pass2 rules?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/BueVest,6,https://github.com/liblouis/liblouis/pull/341#issuecomment-301921233,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","I will make comments asap.

I can also tell you that all those lines are temporary. They are highly repetitive, and should be made with one or two swap sets. But, alas, this technique seems currently to be broken. Guess that will be one of my assignments for the September release :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/341#issuecomment-302049789,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","@BueVest Just to be clear, the swapdd test that you would like to replace the temporary lines with: it has never worked has it? If it worked before it would be good to have a test so we can find when it was broken. In that case it might have been done for a good reason.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/BueVest,8,https://github.com/liblouis/liblouis/pull/341#issuecomment-302092480,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","As far as I remember, it is #239 from December last year. I don’t know when it appeared for the first time, but it is still valid.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/341#issuecomment-302093554,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","""Backslash at the end of a line voids the following line, even if in a comment""? Are you sure?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/BueVest,10,https://github.com/liblouis/liblouis/pull/341#issuecomment-302103389,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","Sorry, it must be the next one about the swapdd opcode.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,341,2017-05-14T17:33:24Z,2017-05-17T07:17:46Z,2017-05-17T14:20:22Z,MERGED,True,2348,2325,13,https://github.com/BueVest,Fixed caps in contracted 8 dots tablesBuevest dk tables,7,"['enhancement', 'tables']",https://github.com/liblouis/liblouis/pull/341,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/341#issuecomment-302105178,"This fixes the Danish tables that were broken due to code introduced in version 3.0. They should now be rock solid with working yaml tests.
I would really apreciate and be thankful for a quick merge, before some new code inadvertantly breaks the tables again.","OK, thanks. #238, that makes sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,343,2017-05-18T06:37:38Z,2017-05-18T11:35:14Z,2017-05-18T11:36:59Z,MERGED,True,252,0,4,https://github.com/egli,Add tables for Sinhala,2,['tables'],https://github.com/liblouis/liblouis/pull/343,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/343,"Before this can go in the license needs to change to LGPLv2.1+

 ask Ashoka Bandula Weerawardhana for a license change
 change the license","Before this can go in the license needs to change to LGPLv2.1+

 ask Ashoka Bandula Weerawardhana for a license change
 change the license",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,345,2017-05-22T07:56:25Z,2017-05-29T15:37:23Z,2017-05-29T16:01:30Z,MERGED,True,1169,6,8,https://github.com/hammera,tables/de-eurobrl6.dis: fix a type mismatch,4,[],https://github.com/liblouis/liblouis/pull/345,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/345,"In the tables/de-eurobrl6.dis file, all alphabetic letters defined with lowercase letters after display opcode,except the w character, this is possible a type mismatch.
So, I simple correct following line:
display W 2456
to:
display w 2456
Me lou_translate de-eurobrl6.dis,hu-hu-g1.ctb command give following right results after modifications:


When I type w character, I get right w eurobraille output.


When I type W character, I get right $w eurobraille output, because now need putting the 46 dots capital letter indicator.


If I typed WA characters, I get right $$wa eurobraille output, because now all original letters is a full uppercase word.


If this is possible, please commit this modification before the new Liblouis 3.2.0 release publication.","In the tables/de-eurobrl6.dis file, all alphabetic letters defined with lowercase letters after display opcode,except the w character, this is possible a type mismatch.
So, I simple correct following line:
display W 2456
to:
display w 2456
Me lou_translate de-eurobrl6.dis,hu-hu-g1.ctb command give following right results after modifications:


When I type w character, I get right w eurobraille output.


When I type W character, I get right $w eurobraille output, because now need putting the 46 dots capital letter indicator.


If I typed WA characters, I get right $$wa eurobraille output, because now all original letters is a full uppercase word.


If this is possible, please commit this modification before the new Liblouis 3.2.0 release publication.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,345,2017-05-22T07:56:25Z,2017-05-29T15:37:23Z,2017-05-29T16:01:30Z,MERGED,True,1169,6,8,https://github.com/hammera,tables/de-eurobrl6.dis: fix a type mismatch,4,[],https://github.com/liblouis/liblouis/pull/345,https://github.com/hammera,2,https://github.com/liblouis/liblouis/pull/345#issuecomment-304372085,"In the tables/de-eurobrl6.dis file, all alphabetic letters defined with lowercase letters after display opcode,except the w character, this is possible a type mismatch.
So, I simple correct following line:
display W 2456
to:
display w 2456
Me lou_translate de-eurobrl6.dis,hu-hu-g1.ctb command give following right results after modifications:


When I type w character, I get right w eurobraille output.


When I type W character, I get right $w eurobraille output, because now need putting the 46 dots capital letter indicator.


If I typed WA characters, I get right $$wa eurobraille output, because now all original letters is a full uppercase word.


If this is possible, please commit this modification before the new Liblouis 3.2.0 release publication.","Chris, With hungarian related table modifications I want previous doing with new pull request, but unfortunatelly Github merge all commits with the de-eurobrl6.dis table related pull request.
If this is possible, please merge the hungarian grade1 and new grade2 tables related commits into Liblouis 3.2.0 branch before publication.
With hu-hu-g1.ctb table I only add few rules.
The new hungarian Grade2 table is a complete new table with implementing hungarian grade2 contracted braille.
The table passed with following tests my local repository:


Installation test: passed, the hu-hu-g2.ctb and hu-hu-g2_exceptions.cti lands correct the prefix/share/tables directory.


Lou_checktable hu-hu-g2.ctb command: Of course this test passed, this utility doesn't show any error message.


Because my wife and me travelling tomorrow with two weeks a holiday, unfortunatelly Me not enough time to generate a yaml test file this new table related.
I promise you before next september release date I will create a Yaml test file this table too.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,345,2017-05-22T07:56:25Z,2017-05-29T15:37:23Z,2017-05-29T16:01:30Z,MERGED,True,1169,6,8,https://github.com/hammera,tables/de-eurobrl6.dis: fix a type mismatch,4,[],https://github.com/liblouis/liblouis/pull/345,https://github.com/reiner-dolp,3,https://github.com/liblouis/liblouis/pull/345#issuecomment-304692800,"In the tables/de-eurobrl6.dis file, all alphabetic letters defined with lowercase letters after display opcode,except the w character, this is possible a type mismatch.
So, I simple correct following line:
display W 2456
to:
display w 2456
Me lou_translate de-eurobrl6.dis,hu-hu-g1.ctb command give following right results after modifications:


When I type w character, I get right w eurobraille output.


When I type W character, I get right $w eurobraille output, because now need putting the 46 dots capital letter indicator.


If I typed WA characters, I get right $$wa eurobraille output, because now all original letters is a full uppercase word.


If this is possible, please commit this modification before the new Liblouis 3.2.0 release publication.",@hammera you can open a pull request for each branch in your forked repository. Simply create a branch for each feature and select it in the pull request dialog. See official github tutorial.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,347,2017-05-24T01:34:30Z,2017-05-24T12:43:00Z,2017-05-24T18:12:32Z,MERGED,True,17,1,3,https://github.com/vsmontalvao,Fix back-translation for contractions followed by punctuation,1,[],https://github.com/liblouis/liblouis/pull/347,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/347,"Back-translations were not detecting word contractions when followed by punctuation. Forward translations were already producing the expected result.
This commit adds a check for CTC_Punctuation together with CTC_Space when detecting contractions in lou_backTranslateString.c. Similar checks were already being done in other places such as in: master/liblouis/lou_translateString.c#L2225 (for forward translations).
Example: When using ""en-ueb-g2.ctb"", ""12-2"" would back-translate to ""b,"" instead of ""but,"".
The issue is particularly important for the usage of other conjunctions such as ""although"".
Tests which verify the back-translation behavior with and without contractions are also included.","Back-translations were not detecting word contractions when followed by punctuation. Forward translations were already producing the expected result.
This commit adds a check for CTC_Punctuation together with CTC_Space when detecting contractions in lou_backTranslateString.c. Similar checks were already being done in other places such as in: master/liblouis/lou_translateString.c#L2225 (for forward translations).
Example: When using ""en-ueb-g2.ctb"", ""12-2"" would back-translate to ""b,"" instead of ""but,"".
The issue is particularly important for the usage of other conjunctions such as ""although"".
Tests which verify the back-translation behavior with and without contractions are also included.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,348,2017-05-25T23:19:17Z,2017-05-29T15:30:31Z,2017-05-29T15:30:31Z,MERGED,True,79,23,2,https://github.com/vsmontalvao,Fix for several UEB symbols and failing tests on en-ueb-symbols_harness.yaml,7,[],https://github.com/liblouis/liblouis/pull/348,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/348,"These commits are intended to fix current and add new symbols specified mostly on the Appendix 3 (Symbols List) from the Rules of Unified English Braille Second Edition 2013 document (http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf).
It also includes several fixes to tests in en-ueb-symbols_harness.yaml, only leaving 3 cases currently failing (only for single and double directional quote representations, which may have different representations depending on the usage).
The specification for each of the characters is available at:
Section 3 (General Symbols and Indicators) page 19: ∶
Section 4.4 (Eng and schwa) page 47: Ŋŋ, Əə
Section 7 (Punctuation) page 69: ’ (closing single quotation mark)
Section 12 (Early Forms of English) page 181: Ȝȝ, Þþ, ..., Ææ, Œœ
Section 11.7 (Shape symbols) page 176: ■, ▧
Section 13.5 (Using UEB signs) page 190: ¡, ¿
Section 15.3 (Tone) page 214: ˦, ˧, ˨
Appendix 3 (Symbols List):

page 282: ╲
page 285: ∶
page 289: ∥
page 290: ╱
page 292: ¬
page 294: ┊
page 298: ⇌
page 299: ¡, ¿, │
page 308: ⦵
page 309: ς, ¦
page 310: ∪, ∩
page 311: ⫤
page 313: ∴
page 316: ║

PS: Also considered updating the representation for Em Dash (— U+2014) as it is represented in multiple places of the Rules as just 6-36 but decided to not submit this change considering multiple inconsistencies found in the documentation:

Em Dash represented as 6-36: Section 2.6.1 page 15,
Em Dash represented as 5-6-36: Section 7.1.1 page 71, Section 7.2 page 72
Considering Section 7.2 page 72 refers to 6-36 as Dash and 5-6-36 as long dash, I assume the first should refer to \x2013 and the second to \x2014. This can be seen across most usage examples but across definitions it may sometimes use \x2014 as the only dash available (e.g. Appendix 3 page 314 defines \x2014 as 6-36 but doesn't define \x2013 anywhere).","These commits are intended to fix current and add new symbols specified mostly on the Appendix 3 (Symbols List) from the Rules of Unified English Braille Second Edition 2013 document (http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf).
It also includes several fixes to tests in en-ueb-symbols_harness.yaml, only leaving 3 cases currently failing (only for single and double directional quote representations, which may have different representations depending on the usage).
The specification for each of the characters is available at:
Section 3 (General Symbols and Indicators) page 19: ∶
Section 4.4 (Eng and schwa) page 47: Ŋŋ, Əə
Section 7 (Punctuation) page 69: ’ (closing single quotation mark)
Section 12 (Early Forms of English) page 181: Ȝȝ, Þþ, ..., Ææ, Œœ
Section 11.7 (Shape symbols) page 176: ■, ▧
Section 13.5 (Using UEB signs) page 190: ¡, ¿
Section 15.3 (Tone) page 214: ˦, ˧, ˨
Appendix 3 (Symbols List):

page 282: ╲
page 285: ∶
page 289: ∥
page 290: ╱
page 292: ¬
page 294: ┊
page 298: ⇌
page 299: ¡, ¿, │
page 308: ⦵
page 309: ς, ¦
page 310: ∪, ∩
page 311: ⫤
page 313: ∴
page 316: ║

PS: Also considered updating the representation for Em Dash (— U+2014) as it is represented in multiple places of the Rules as just 6-36 but decided to not submit this change considering multiple inconsistencies found in the documentation:

Em Dash represented as 6-36: Section 2.6.1 page 15,
Em Dash represented as 5-6-36: Section 7.1.1 page 71, Section 7.2 page 72
Considering Section 7.2 page 72 refers to 6-36 as Dash and 5-6-36 as long dash, I assume the first should refer to \x2013 and the second to \x2014. This can be seen across most usage examples but across definitions it may sometimes use \x2014 as the only dash available (e.g. Appendix 3 page 314 defines \x2014 as 6-36 but doesn't define \x2013 anywhere).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,348,2017-05-25T23:19:17Z,2017-05-29T15:30:31Z,2017-05-29T15:30:31Z,MERGED,True,79,23,2,https://github.com/vsmontalvao,Fix for several UEB symbols and failing tests on en-ueb-symbols_harness.yaml,7,[],https://github.com/liblouis/liblouis/pull/348,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/348#issuecomment-304687320,"These commits are intended to fix current and add new symbols specified mostly on the Appendix 3 (Symbols List) from the Rules of Unified English Braille Second Edition 2013 document (http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf).
It also includes several fixes to tests in en-ueb-symbols_harness.yaml, only leaving 3 cases currently failing (only for single and double directional quote representations, which may have different representations depending on the usage).
The specification for each of the characters is available at:
Section 3 (General Symbols and Indicators) page 19: ∶
Section 4.4 (Eng and schwa) page 47: Ŋŋ, Əə
Section 7 (Punctuation) page 69: ’ (closing single quotation mark)
Section 12 (Early Forms of English) page 181: Ȝȝ, Þþ, ..., Ææ, Œœ
Section 11.7 (Shape symbols) page 176: ■, ▧
Section 13.5 (Using UEB signs) page 190: ¡, ¿
Section 15.3 (Tone) page 214: ˦, ˧, ˨
Appendix 3 (Symbols List):

page 282: ╲
page 285: ∶
page 289: ∥
page 290: ╱
page 292: ¬
page 294: ┊
page 298: ⇌
page 299: ¡, ¿, │
page 308: ⦵
page 309: ς, ¦
page 310: ∪, ∩
page 311: ⫤
page 313: ∴
page 316: ║

PS: Also considered updating the representation for Em Dash (— U+2014) as it is represented in multiple places of the Rules as just 6-36 but decided to not submit this change considering multiple inconsistencies found in the documentation:

Em Dash represented as 6-36: Section 2.6.1 page 15,
Em Dash represented as 5-6-36: Section 7.1.1 page 71, Section 7.2 page 72
Considering Section 7.2 page 72 refers to 6-36 as Dash and 5-6-36 as long dash, I assume the first should refer to \x2013 and the second to \x2014. This can be seen across most usage examples but across definitions it may sometimes use \x2014 as the only dash available (e.g. Appendix 3 page 314 defines \x2014 as 6-36 but doesn't define \x2013 anywhere).",I do not speak ueb but presumably this looks OK. Contains references to the spec that look convincing.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/349,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.","Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/349#issuecomment-305493713,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.","As far as I'm concerned the change looks fine.
@vsmontalvao What ""more elegant approach"" to solve this did you have in mind?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/349#issuecomment-305493986,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.",@vsmontalvao also would you mind resolving the conflicts in en-ueb-chardefs.uti? Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/349#issuecomment-305638179,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.","I find the conditions of (forward) matching of contraction and (backward) matching of nocontractsign a bit odd. Shouldn't they correspond?
contraction matches if:
if ((beforeAttributes & (CTC_Space | CTC_Punctuation))
    && (afterAttributes & (CTC_Space | CTC_Punctuation)))
nocontractsign matches if:
if (!(beforeAttributes & CTC_Letter) && (afterAttributes & CTC_Letter))
Wouldn't it make more sense if this was:
if ((beforeAttributes & (CTC_Space | CTC_Punctuation))
    && !(afterAttributes & (CTC_Space | CTC_Punctuation)))",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/349#issuecomment-305638521,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.",I'd also like to know @MikeGray-APH 's opinion.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/vsmontalvao,6,https://github.com/liblouis/liblouis/pull/349#issuecomment-305936458,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.","@egli Just resolved the conflict by rebasing this branch on top of master since the #348 was already merged. Thanks!
About the alternative approaches I think the problem here might be just semantic about using the nocontract/contraction names for the opcodes, since these shape symbols have a grade-1 indicator but we cannot call them ""contractions"". In practice this should not be a problem considering the behavior is very similar to the one where we want to represent abbreviations instead of contractions (http://liblouis.org/documentation/liblouis.html#index-contraction) and that these terms are good for representing the most common use case of the opcodes. But anyway, I just wanted to explicitly point that as I did not feel 100% comfortable while doing it in case someone else has other ideas.
@bertfrees For this case I believe the reason might be that for backward translations the grade-1 indicator usually precedes only letters (or signs if we considering this PR). For forward translations a word might come surrounded by space or punctuation.
I've tried just a few minor changes to the back-translation code, but I had experiences where mixing punctuation and contractions in the back-translation code can also produce unexpected results for some very common use cases (e.g. #350). I think the problem might be that when we have contractions it is easier to define the forward translations instead of the back-translations (since most of the times converts a bigger input to a smaller output). When back-translating, some single cells might represent a full word, and the next cell might represent another big word or even a punctuation sign (e.g. dot-2 might represent ',' or ""ea"" depending on the use case, and the current back-translation code detects the dot-2 as only punctuation).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/349#issuecomment-306159665,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.","OK, I tried to look for symmetry in the ""afterAttributes"" test where there was none. My comment still applies for the ""beforeAttributes"" test though:
if ((beforeAttributes & (CTC_Space | CTC_Punctuation))
    && (afterAttributes & CTC_Letter))
EDIT: I overlooked that a nocontractsign is also inserted before non-numeric characters when in numeric mode. Changing the test like this would break that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/349#issuecomment-306447881,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.","About the alternative approaches I think the problem here might be just semantic about using the nocontract/contraction names for the opcodes, since these shape symbols have a grade-1 indicator but we cannot call them ""contractions"". [...]

@vsmontalvao Not sure I understand. Are you saying shape symbols can not be confused with contractions? Then why do they need a grade-1 sign?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/349#issuecomment-306463118,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.","Merged in 81e86bb
@vsmontalvao I reverted your change to the ""beforeAttributes"" test because there is no reason to make it symmetric with the ""afterAttributes"" test.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,349,2017-05-26T02:26:09Z,2017-06-06T11:52:45Z,2017-06-06T17:08:58Z,CLOSED,False,27,2,3,https://github.com/vsmontalvao,Add support for ueb shape symbols with grade 1 indicator,1,[],https://github.com/liblouis/liblouis/pull/349,https://github.com/vsmontalvao,10,https://github.com/liblouis/liblouis/pull/349#issuecomment-306553439,"Based on the Section 3.22 (Shapes page 34) from http://www.iceb.org/Rules%20of%20Unified%20English%20Braille%202013.pdf, shape symbols when represented on ueb-g2 should require a grade 1 indicator before the symbol. This is also shown in the Examples section just below.
My goal here is to make signs also be available to take a grade 1 indicator in some way.
One alternative (in the code below) is to use a contraction opcode for forward translations and add CTC_Sign to be considered when checking a CTO_NoContractRule for back-translations.
That said, I do understand that semantically I just want to indicate that it should have a grade-1 sign and not that it is a contraction when using a grade-2 table.
I'd like to get some feedback on if that's acceptable or if we could find a more elegant approach based on what we have currently.","Not sure I understand. Are you saying shape symbols can not be confused with contractions? Then why do they need a grade-1 sign?

@bertfrees I see what the issue might be then. I might have confused the semantics of the contraction opcode in the sense that it is used to force the indicator to avoid confusion with a possibly existing contraction and not to say that a contraction was already defined (I thought for some time that it could indicate that the previous grade-1 definition would become contraction, which is never true).
It is very similar to the case where we do use it to represent abbreviations instead of contractions (http://liblouis.org/documentation/liblouis.html#index-contraction). All should be fine now.
Thanks for the merge!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,350,2017-05-26T19:52:31Z,2017-06-06T11:39:46Z,2017-06-06T11:40:08Z,CLOSED,False,1,17,3,https://github.com/vsmontalvao,"Revert ""Fix back-translation for contractions followed by punctuation""",1,[],https://github.com/liblouis/liblouis/pull/350,https://github.com/vsmontalvao,1,https://github.com/liblouis/liblouis/pull/350,"Reverts #347
I just noticed an unexpected interaction in relation to this merge. It affects particularly back-translations for ueb grade-2 words with ""ea"" after letters that have contractions associated, such as words like meat(134-2-2345), head(125-2-145) and others.
With this, back-translating meat would detect that 'm' is a CTO_Contraction and then consider that the dot-2 right after is a CTC_Punctuation and CTC_Sign (',') and then return right there with a contraction for 'm' (more) before checking that the following letter can also be back-translated to letters instead of punctuation. The end result for both of these cases would be ""moreeat"" and ""haveead"" instead of ""meat"" and ""head"".
I checked that adding sufword opcode for these words would fix the issue (e.g. sufword meat 134-2-2345) but I'm afraid the problem might be much more general that adding particular cases like that would not be enough.
We might consider reverting this merge for now until we find a more general solution.
Thanks,
Victor","Reverts #347
I just noticed an unexpected interaction in relation to this merge. It affects particularly back-translations for ueb grade-2 words with ""ea"" after letters that have contractions associated, such as words like meat(134-2-2345), head(125-2-145) and others.
With this, back-translating meat would detect that 'm' is a CTO_Contraction and then consider that the dot-2 right after is a CTC_Punctuation and CTC_Sign (',') and then return right there with a contraction for 'm' (more) before checking that the following letter can also be back-translated to letters instead of punctuation. The end result for both of these cases would be ""moreeat"" and ""haveead"" instead of ""meat"" and ""head"".
I checked that adding sufword opcode for these words would fix the issue (e.g. sufword meat 134-2-2345) but I'm afraid the problem might be much more general that adding particular cases like that would not be enough.
We might consider reverting this merge for now until we find a more general solution.
Thanks,
Victor",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,350,2017-05-26T19:52:31Z,2017-06-06T11:39:46Z,2017-06-06T11:40:08Z,CLOSED,False,1,17,3,https://github.com/vsmontalvao,"Revert ""Fix back-translation for contractions followed by punctuation""",1,[],https://github.com/liblouis/liblouis/pull/350,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/350#issuecomment-304694866,"Reverts #347
I just noticed an unexpected interaction in relation to this merge. It affects particularly back-translations for ueb grade-2 words with ""ea"" after letters that have contractions associated, such as words like meat(134-2-2345), head(125-2-145) and others.
With this, back-translating meat would detect that 'm' is a CTO_Contraction and then consider that the dot-2 right after is a CTC_Punctuation and CTC_Sign (',') and then return right there with a contraction for 'm' (more) before checking that the following letter can also be back-translated to letters instead of punctuation. The end result for both of these cases would be ""moreeat"" and ""haveead"" instead of ""meat"" and ""head"".
I checked that adding sufword opcode for these words would fix the issue (e.g. sufword meat 134-2-2345) but I'm afraid the problem might be much more general that adding particular cases like that would not be enough.
We might consider reverting this merge for now until we find a more general solution.
Thanks,
Victor",Merged in c2eb967 without removing the tests. The tests are now marked as xfail,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,350,2017-05-26T19:52:31Z,2017-06-06T11:39:46Z,2017-06-06T11:40:08Z,CLOSED,False,1,17,3,https://github.com/vsmontalvao,"Revert ""Fix back-translation for contractions followed by punctuation""",1,[],https://github.com/liblouis/liblouis/pull/350,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/350#issuecomment-306147754,"Reverts #347
I just noticed an unexpected interaction in relation to this merge. It affects particularly back-translations for ueb grade-2 words with ""ea"" after letters that have contractions associated, such as words like meat(134-2-2345), head(125-2-145) and others.
With this, back-translating meat would detect that 'm' is a CTO_Contraction and then consider that the dot-2 right after is a CTC_Punctuation and CTC_Sign (',') and then return right there with a contraction for 'm' (more) before checking that the following letter can also be back-translated to letters instead of punctuation. The end result for both of these cases would be ""moreeat"" and ""haveead"" instead of ""meat"" and ""head"".
I checked that adding sufword opcode for these words would fix the issue (e.g. sufword meat 134-2-2345) but I'm afraid the problem might be much more general that adding particular cases like that would not be enough.
We might consider reverting this merge for now until we find a more general solution.
Thanks,
Victor","To do:

 Add these examples to the test suite.
 Find a more general solution to the problem. Adding rules like sufword meat 134-2-2345 is indeed not the solution. Liblouis should be able to figure this out by itself.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,350,2017-05-26T19:52:31Z,2017-06-06T11:39:46Z,2017-06-06T11:40:08Z,CLOSED,False,1,17,3,https://github.com/vsmontalvao,"Revert ""Fix back-translation for contractions followed by punctuation""",1,[],https://github.com/liblouis/liblouis/pull/350,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/350#issuecomment-306149717,"Reverts #347
I just noticed an unexpected interaction in relation to this merge. It affects particularly back-translations for ueb grade-2 words with ""ea"" after letters that have contractions associated, such as words like meat(134-2-2345), head(125-2-145) and others.
With this, back-translating meat would detect that 'm' is a CTO_Contraction and then consider that the dot-2 right after is a CTC_Punctuation and CTC_Sign (',') and then return right there with a contraction for 'm' (more) before checking that the following letter can also be back-translated to letters instead of punctuation. The end result for both of these cases would be ""moreeat"" and ""haveead"" instead of ""meat"" and ""head"".
I checked that adding sufword opcode for these words would fix the issue (e.g. sufword meat 134-2-2345) but I'm afraid the problem might be much more general that adding particular cases like that would not be enough.
We might consider reverting this merge for now until we find a more general solution.
Thanks,
Victor","@vsmontalvao Maybe the solution is postpunc , 2?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,350,2017-05-26T19:52:31Z,2017-06-06T11:39:46Z,2017-06-06T11:40:08Z,CLOSED,False,1,17,3,https://github.com/vsmontalvao,"Revert ""Fix back-translation for contractions followed by punctuation""",1,[],https://github.com/liblouis/liblouis/pull/350,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/350#issuecomment-306157827,"Reverts #347
I just noticed an unexpected interaction in relation to this merge. It affects particularly back-translations for ueb grade-2 words with ""ea"" after letters that have contractions associated, such as words like meat(134-2-2345), head(125-2-145) and others.
With this, back-translating meat would detect that 'm' is a CTO_Contraction and then consider that the dot-2 right after is a CTC_Punctuation and CTC_Sign (',') and then return right there with a contraction for 'm' (more) before checking that the following letter can also be back-translated to letters instead of punctuation. The end result for both of these cases would be ""moreeat"" and ""haveead"" instead of ""meat"" and ""head"".
I checked that adding sufword opcode for these words would fix the issue (e.g. sufword meat 134-2-2345) but I'm afraid the problem might be much more general that adding particular cases like that would not be enough.
We might consider reverting this merge for now until we find a more general solution.
Thanks,
Victor","Actually, I don't understand why isEndWord doesn't return true right now? (when back translating ⠃⠂ -> but, e.g. )",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,350,2017-05-26T19:52:31Z,2017-06-06T11:39:46Z,2017-06-06T11:40:08Z,CLOSED,False,1,17,3,https://github.com/vsmontalvao,"Revert ""Fix back-translation for contractions followed by punctuation""",1,[],https://github.com/liblouis/liblouis/pull/350,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/350#issuecomment-306167878,"Reverts #347
I just noticed an unexpected interaction in relation to this merge. It affects particularly back-translations for ueb grade-2 words with ""ea"" after letters that have contractions associated, such as words like meat(134-2-2345), head(125-2-145) and others.
With this, back-translating meat would detect that 'm' is a CTO_Contraction and then consider that the dot-2 right after is a CTC_Punctuation and CTC_Sign (',') and then return right there with a contraction for 'm' (more) before checking that the following letter can also be back-translated to letters instead of punctuation. The end result for both of these cases would be ""moreeat"" and ""haveead"" instead of ""meat"" and ""head"".
I checked that adding sufword opcode for these words would fix the issue (e.g. sufword meat 134-2-2345) but I'm afraid the problem might be much more general that adding particular cases like that would not be enough.
We might consider reverting this merge for now until we find a more general solution.
Thanks,
Victor","I understand now. In isEndWord the ""ea"" rule is matched even though it is defined as midword. If we fix this your test cases will work (also without postpunc , 2).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,350,2017-05-26T19:52:31Z,2017-06-06T11:39:46Z,2017-06-06T11:40:08Z,CLOSED,False,1,17,3,https://github.com/vsmontalvao,"Revert ""Fix back-translation for contractions followed by punctuation""",1,[],https://github.com/liblouis/liblouis/pull/350,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/350#issuecomment-306460602,"Reverts #347
I just noticed an unexpected interaction in relation to this merge. It affects particularly back-translations for ueb grade-2 words with ""ea"" after letters that have contractions associated, such as words like meat(134-2-2345), head(125-2-145) and others.
With this, back-translating meat would detect that 'm' is a CTO_Contraction and then consider that the dot-2 right after is a CTC_Punctuation and CTC_Sign (',') and then return right there with a contraction for 'm' (more) before checking that the following letter can also be back-translated to letters instead of punctuation. The end result for both of these cases would be ""moreeat"" and ""haveead"" instead of ""meat"" and ""head"".
I checked that adding sufword opcode for these words would fix the issue (e.g. sufword meat 134-2-2345) but I'm afraid the problem might be much more general that adding particular cases like that would not be enough.
We might consider reverting this merge for now until we find a more general solution.
Thanks,
Victor",Replaced by #360,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,356,2017-06-01T10:24:36Z,2017-06-01T11:35:34Z,2017-06-01T11:46:58Z,MERGED,True,8,2,2,https://github.com/egli,Only install lou_checkyaml if libyaml is found,1,[],https://github.com/liblouis/liblouis/pull/356,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/356,Fixes #284,Fixes #284,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,357,2017-06-01T15:21:43Z,2017-08-25T12:31:12Z,2019-05-28T13:33:20Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,12,[],https://github.com/liblouis/liblouis/pull/357,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/357,This is basically the same as #224 with the license problems solved,This is basically the same as #224 with the license problems solved,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,357,2017-06-01T15:21:43Z,2017-08-25T12:31:12Z,2019-05-28T13:33:20Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,12,[],https://github.com/liblouis/liblouis/pull/357,https://github.com/simait,2,https://github.com/liblouis/liblouis/pull/357#issuecomment-324910079,This is basically the same as #224 with the license problems solved,Does this mean that you got a confirmation regarding the license change?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,357,2017-06-01T15:21:43Z,2017-08-25T12:31:12Z,2019-05-28T13:33:20Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,12,[],https://github.com/liblouis/liblouis/pull/357,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/357#issuecomment-324921719,This is basically the same as #224 with the license problems solved,"No, but I trust you have some confirmation",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,357,2017-06-01T15:21:43Z,2017-08-25T12:31:12Z,2019-05-28T13:33:20Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,12,[],https://github.com/liblouis/liblouis/pull/357,https://github.com/simait,4,https://github.com/liblouis/liblouis/pull/357#issuecomment-325260419,This is basically the same as #224 with the license problems solved,"I'll look into what we have (if it's enough), but they have repeatedly stated that they will fix it without any action. Unless we have a firm confirmation that we can use we'll be dropping the patches from our printers.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,357,2017-06-01T15:21:43Z,2017-08-25T12:31:12Z,2019-05-28T13:33:20Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,12,[],https://github.com/liblouis/liblouis/pull/357,https://github.com/simait,5,https://github.com/liblouis/liblouis/pull/357#issuecomment-325307792,This is basically the same as #224 with the license problems solved,"Ok, I've double-checked and we have yet to receive any solid confirmation regarding these patches and we will not be distributing them with our printers (as of the next firmware update).
The authors of the original patch have been informed that this will be the case and hopefully we can resolve the issue shortly, if not, I would recommend that this pull-request be reverted before the next liblouis release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,357,2017-06-01T15:21:43Z,2017-08-25T12:31:12Z,2019-05-28T13:33:20Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,12,[],https://github.com/liblouis/liblouis/pull/357,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/357#issuecomment-326603502,This is basically the same as #224 with the license problems solved,OK the merge was reverted. I'll try to reopen this pull request,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,358,2017-06-04T20:06:09Z,2017-06-06T09:52:51Z,2017-06-06T09:52:51Z,MERGED,True,21815,16174,30,https://github.com/BueVest,Improvements to the Danish tables,13,[],https://github.com/liblouis/liblouis/pull/358,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/358,"Suggested news entry (feel free to edit)
Improvements to Danish tables:

New literary tables for 6 dots, mainly for embossing (no back-translation)
improved back-translation in 6 dots tables, all grades.
New support for many unicode characters in all 6 dots tables
Strengthened internal tests to prevent breaking of tables due to changes in the code
Fixed 8 dots tables which were broken in the previous version.","Suggested news entry (feel free to edit)
Improvements to Danish tables:

New literary tables for 6 dots, mainly for embossing (no back-translation)
improved back-translation in 6 dots tables, all grades.
New support for many unicode characters in all 6 dots tables
Strengthened internal tests to prevent breaking of tables due to changes in the code
Fixed 8 dots tables which were broken in the previous version.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,362,2017-06-09T15:45:51Z,2017-06-16T07:28:09Z,2017-06-16T07:28:09Z,MERGED,True,42,0,3,https://github.com/BueVest,Added yaml test to demo inconsistency in handling of capsword.,1,[],https://github.com/liblouis/liblouis/pull/362,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/362,As requested by Christian.,As requested by Christian.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,364,2017-06-16T06:53:01Z,2017-06-16T07:27:08Z,2017-06-16T13:21:24Z,MERGED,True,17,2,2,https://github.com/jcsteh,UEB grade 2: Fix back-translation of whole word contractions followed by other contractions.,1,[],https://github.com/liblouis/liblouis/pull/364,https://github.com/jcsteh,1,https://github.com/liblouis/liblouis/pull/364,"For example, the dot pattern for ""thing"" (⠹⠬) was previously being back-translated as ""thising"".
This occurred because certain uplow opcodes included cells such as ⠬ in a multi-cell pattern and the table compiler was setting a space attribute for any cells in a multi-cell uplow opcode. I don't know why (and the code pre-dates version control), but I can't think of a good reason and removing this doesn't break any tests.","For example, the dot pattern for ""thing"" (⠹⠬) was previously being back-translated as ""thising"".
This occurred because certain uplow opcodes included cells such as ⠬ in a multi-cell pattern and the table compiler was setting a space attribute for any cells in a multi-cell uplow opcode. I don't know why (and the code pre-dates version control), but I can't think of a good reason and removing this doesn't break any tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,364,2017-06-16T06:53:01Z,2017-06-16T07:27:08Z,2017-06-16T13:21:24Z,MERGED,True,17,2,2,https://github.com/jcsteh,UEB grade 2: Fix back-translation of whole word contractions followed by other contractions.,1,[],https://github.com/liblouis/liblouis/pull/364,https://github.com/jcsteh,2,https://github.com/liblouis/liblouis/pull/364#issuecomment-309024670,"For example, the dot pattern for ""thing"" (⠹⠬) was previously being back-translated as ""thising"".
This occurred because certain uplow opcodes included cells such as ⠬ in a multi-cell pattern and the table compiler was setting a space attribute for any cells in a multi-cell uplow opcode. I don't know why (and the code pre-dates version control), but I can't think of a good reason and removing this doesn't break any tests.","For reference, this bug was a regression introduced in b74d281 and was thus present in v3.1.0 and v3.2.0.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,365,2017-06-19T03:23:58Z,2017-06-19T07:18:10Z,2017-06-20T07:45:38Z,MERGED,True,15,7,2,https://github.com/jcsteh,UEB g2: Fix back-translation for contractions followed by punctuation.,1,[],https://github.com/liblouis/liblouis/pull/365,https://github.com/jcsteh,1,https://github.com/liblouis/liblouis/pull/365,"When checking for the end of a word, exclude begword and midword rules from rules which are immediately treated as meaning this is not the end of a word, as we don't know whether they apply yet. Subsequent input will allow us to determine whether the word continues.
Fixes #360.","When checking for the end of a word, exclude begword and midword rules from rules which are immediately treated as meaning this is not the end of a word, as we don't know whether they apply yet. Subsequent input will allow us to determine whether the word continues.
Fixes #360.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,365,2017-06-19T03:23:58Z,2017-06-19T07:18:10Z,2017-06-20T07:45:38Z,MERGED,True,15,7,2,https://github.com/jcsteh,UEB g2: Fix back-translation for contractions followed by punctuation.,1,[],https://github.com/liblouis/liblouis/pull/365,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/365#issuecomment-309414209,"When checking for the end of a word, exclude begword and midword rules from rules which are immediately treated as meaning this is not the end of a word, as we don't know whether they apply yet. Subsequent input will allow us to determine whether the word continues.
Fixes #360.","@jcsteh Thanks for the patch. It looks like this indeed fixes the test cases from #350. So I'm sure this is an improvement. We have merged it already.
However there are two things on my mind:


I'm not sure that the change doesn't break other cases. I understand the reasoning behind skipping the midword and begword rules: you assume they don't match until the opposite is proven, namely when another letter or translation rule follows, which you know has to happen for the rules to match. However, by skipping them you may allow other rules to be matched mistakenly. I'm not saying this is necessarily a problem, but something to think about.
More important is that if you look at the isEndWord function it is clear that it is not a solid test. We've expanded it now to cover more cases, but there are probably more problems with it. A better solution (and the kind of solution I was thinking about when we created issue #360) would be to do an actual translation (i.e. actually use the backTranslateString function recursively) in order to perform the lookahead. This would definitely be a more radical change but it would make the code much more streamlined. An idea to keep in mind for the future.


I'm having second doubts about why this change would have an influence on the test cases in the first place. In these test cases, why should the contraction rule match, and why should  it matter for the translation whether it matches or not? Shouldn't the contraction rule only match when it is preceded by a noconstractsign? I would like to see a simpler test case (not based on en-ueb-g2.ctb) that shows exactly what your change does.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,365,2017-06-19T03:23:58Z,2017-06-19T07:18:10Z,2017-06-20T07:45:38Z,MERGED,True,15,7,2,https://github.com/jcsteh,UEB g2: Fix back-translation for contractions followed by punctuation.,1,[],https://github.com/liblouis/liblouis/pull/365,https://github.com/jcsteh,3,https://github.com/liblouis/liblouis/pull/365#issuecomment-309429819,"When checking for the end of a word, exclude begword and midword rules from rules which are immediately treated as meaning this is not the end of a word, as we don't know whether they apply yet. Subsequent input will allow us to determine whether the word continues.
Fixes #360.","@bertfrees commented on 19 Jun 2017, 21:34 GMT+10:


I'm not sure that the change doesn't break other cases.


I had a pretty solid think about this, but yeah, I'm not 100% certain it doesn't break other cases either. Unfortunately, I'm not sure there's any change we could make here that we could be entirely certain of. There are some fairly complex interactions going on here and this code is very old and undocumented.

A better solution (and the kind of solution I was thinking about when we created issue #360) would be to do an actual translation (i.e. actually use the backTranslateString function recursively) in order to perform the lookahead.

This makes sense in principle. However, there are a few really tricky problems:

It's not just a matter of a recursive call; there is state dependent on the stuff already translated. For example, consider ⠓⠂⠙ -> ""head"" in English grade 2 and you want to ask whether this is the end of the word at ⠓ (h). You'll recursively back-translate ⠂⠙. However, when you consider ⠂, you need to know that we're already within a word, so the midword rule should take precedence over the punctuation rule. So we'd have to know exactly what state is important.
It seems to me that this code is not well designed for isolated reuse. State would need to be isolated so the recursive call could run without messing with the state of the outer call.
Where do you stop the recursive call? You don't want to have it always back-translating the entire remainder of the input because that would be a serious performance killer. You can't stop at the end of a word because... that's exactly what we're trying to work out by doing this in the first place. :)



I'm having second doubts about why this change would have an influence on the test cases in the first place. In these test cases, why should the contraction rule match, and why should  it matter for the translation whether it matches or not?


The contraction rule isn't the issue here. This relates to the word, begword and midword rules. Let's consider what happened before this change with ⠃⠂ -> ""but,"".

We read ⠃ from the input.
We consider the word rule.
To work out whether it applies, we call isEndWord.
isEndWord reads ⠂ from the subsequent input.
We consider the midword rule.
It has a charslen > 1, so we consider it a candidate translation.
After considering all rules for ⠂, we see we found a candidate translation (and there was no postpunc rule), so we determine this isn't the end of the word and return early.

With the change, we don't consider midword because we can't be certain whether it applies until later in the input. If we don't end up returning 0 later in the input, it is the end of the word and therefore the midword rule could never have applied.

I would like to see a simpler test case (not based on en-ueb-g2.ctb) that shows exactly what your change does.

I'll see what I can come up with.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,365,2017-06-19T03:23:58Z,2017-06-19T07:18:10Z,2017-06-20T07:45:38Z,MERGED,True,15,7,2,https://github.com/jcsteh,UEB g2: Fix back-translation for contractions followed by punctuation.,1,[],https://github.com/liblouis/liblouis/pull/365,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/365#issuecomment-309439933,"When checking for the end of a word, exclude begword and midword rules from rules which are immediately treated as meaning this is not the end of a word, as we don't know whether they apply yet. Subsequent input will allow us to determine whether the word continues.
Fixes #360.","Thanks for your thoughts.
Yes, I realize my proposed solution is tricky and at the moment the code is not ready for this kind of stuff. I am currently doing a refactoring that removes as much global state as possible. When this is done, a change like the one I proposed might be doable I think.


Where to stop the recursive call?


I think that's less of a problem than it seems. You could for example ask the function to stop at the first space and record all the applied rules, then check if any of the applied rules were not punctuation.
Regarding performance, I was thinking we could try to figure out how to reuse the results of lookaheads for the actual translation.

The contraction rule isn't the issue here.

OK, I see. In that case it makes sense indeed. But still I can't explain why the change in #347 fixed those test cases.

I'll see what I can come up with.

Great. Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,365,2017-06-19T03:23:58Z,2017-06-19T07:18:10Z,2017-06-20T07:45:38Z,MERGED,True,15,7,2,https://github.com/jcsteh,UEB g2: Fix back-translation for contractions followed by punctuation.,1,[],https://github.com/liblouis/liblouis/pull/365,https://github.com/jcsteh,5,https://github.com/liblouis/liblouis/pull/365#issuecomment-309630146,"When checking for the end of a word, exclude begword and midword rules from rules which are immediately treated as meaning this is not the end of a word, as we don't know whether they apply yet. Subsequent input will allow us to determine whether the word continues.
Fixes #360.","@bertfrees commented on 19 Jun 2017, 23:30 GMT+10:

But still I can't explain why the change in #347 fixed those test cases.


The case for CTO_Contraction actually applies for CTO_WholeWord as well in most cases unless itsALetter or itsANumber got set earlier.
So again, we're dealing with the CTO_WholeWord rule.
The change in #347 checked for punctuation in afterAttributes. In the ⠃⠂ example, we're looking at the ⠂. That will have a punctuation attribute because it has a punctuation rule. (The fact that there is also a midword rule is irrelevant in afterAttributes.) With #347, we check for punctuation and return early if we find it.
The reason this broke ""head"", etc. (#350) is that we check for punctuation and return early; we never call isEndWord, which is where the midword rule would get checked.
The key point is that you can't trust punctuation in afterAttributes by itself; you don't have enough info yet, since a punctuation attribute might be overridden by a midword rule, etc.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,365,2017-06-19T03:23:58Z,2017-06-19T07:18:10Z,2017-06-20T07:45:38Z,MERGED,True,15,7,2,https://github.com/jcsteh,UEB g2: Fix back-translation for contractions followed by punctuation.,1,[],https://github.com/liblouis/liblouis/pull/365,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/365#issuecomment-309672155,"When checking for the end of a word, exclude begword and midword rules from rules which are immediately treated as meaning this is not the end of a word, as we don't know whether they apply yet. Subsequent input will allow us to determine whether the word continues.
Fixes #360.","The case for CTO_Contraction actually applies for CTO_WholeWord as well in most cases unless itsALetter or itsANumber got set earlier.

Bingo! That's it. I looked passed that.
Thank you.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,368,2017-06-20T03:40:08Z,2017-06-20T08:11:38Z,2017-06-20T11:25:15Z,MERGED,True,32,0,3,https://github.com/jcsteh,"Simpler, isolated tests for contractions followed by punctuation (#360).",2,[],https://github.com/liblouis/liblouis/pull/368,https://github.com/jcsteh,1,https://github.com/liblouis/liblouis/pull/368,"Use a very minimal table so the change is clear rather than having to delve into en-ueb-g2. I've left the UEB tests as is, though; no harm in ensuring this isn't broken in the UEB table.
Requested by @bertfrees in #365 (comment).","Use a very minimal table so the change is clear rather than having to delve into en-ueb-g2. I've left the UEB tests as is, though; no harm in ensuring this isn't broken in the UEB table.
Requested by @bertfrees in #365 (comment).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,368,2017-06-20T03:40:08Z,2017-06-20T08:11:38Z,2017-06-20T11:25:15Z,MERGED,True,32,0,3,https://github.com/jcsteh,"Simpler, isolated tests for contractions followed by punctuation (#360).",2,[],https://github.com/liblouis/liblouis/pull/368,https://github.com/jcsteh,2,https://github.com/liblouis/liblouis/pull/368#issuecomment-309637109,"Use a very minimal table so the change is clear rather than having to delve into en-ueb-g2. I've left the UEB tests as is, though; no harm in ensuring this isn't broken in the UEB table.
Requested by @bertfrees in #365 (comment).","All tests pass with #365.
Without #365, back_cont_then_punc.yaml fails as follows (thus demonstrating the bug that #365 fixes):

Input:    '⠃⠲'
Expected: 'but.' (length 4)
Received: 'b.' (length 2)
Diff:     Expected 'u' but received '.' in index 1
lou_checkyaml:./yaml/back_cont_then_punc.yaml:7: Failure
Input:    '⠃⠂'
Expected: 'but,' (length 4)
Received: 'b,' (length 2)
Diff:     Expected 'u' but received ',' in index 1
lou_checkyaml:./yaml/back_cont_then_punc.yaml:9: Failure
FAILURE (4 tests, 2 failures)
FAIL yaml/back_cont_then_punc.yaml (exit status: 1)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,368,2017-06-20T03:40:08Z,2017-06-20T08:11:38Z,2017-06-20T11:25:15Z,MERGED,True,32,0,3,https://github.com/jcsteh,"Simpler, isolated tests for contractions followed by punctuation (#360).",2,[],https://github.com/liblouis/liblouis/pull/368,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/368#issuecomment-309674796,"Use a very minimal table so the change is clear rather than having to delve into en-ueb-g2. I've left the UEB tests as is, though; no harm in ensuring this isn't broken in the UEB table.
Requested by @bertfrees in #365 (comment).","Brilliant. Thank you. I have added a commit to inline the table in the YAML file as this makes the test more readable, hope you don't mind.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,368,2017-06-20T03:40:08Z,2017-06-20T08:11:38Z,2017-06-20T11:25:15Z,MERGED,True,32,0,3,https://github.com/jcsteh,"Simpler, isolated tests for contractions followed by punctuation (#360).",2,[],https://github.com/liblouis/liblouis/pull/368,https://github.com/jcsteh,4,https://github.com/liblouis/liblouis/pull/368#issuecomment-309724165,"Use a very minimal table so the change is clear rather than having to delve into en-ueb-g2. I've left the UEB tests as is, though; no harm in ensuring this isn't broken in the UEB table.
Requested by @bertfrees in #365 (comment).","Thanks for the inline change; much nicer. I didn't know about the ability
to inline the table until I happened to be reading through the NEWS file
shortly before your change. :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,370,2017-06-21T17:01:08Z,2017-06-22T08:34:59Z,2017-06-22T09:24:22Z,MERGED,True,26,20,4,https://github.com/dkager,Add the windows/utils directory to the tarball,2,[],https://github.com/liblouis/liblouis/pull/370,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/370,This is required to build with MSVC but was missing from make dist.,This is required to build with MSVC but was missing from make dist.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,370,2017-06-21T17:01:08Z,2017-06-22T08:34:59Z,2017-06-22T09:24:22Z,MERGED,True,26,20,4,https://github.com/dkager,Add the windows/utils directory to the tarball,2,[],https://github.com/liblouis/liblouis/pull/370,https://github.com/dkager,2,https://github.com/liblouis/liblouis/pull/370#issuecomment-310326545,This is required to build with MSVC but was missing from make dist.,I tested with make dist.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,373,2017-06-27T06:55:37Z,2017-06-27T07:07:04Z,2017-06-27T07:22:01Z,MERGED,True,1,1,1,https://github.com/simait,"""¡..!"" should be translated as ""235 ... 235"".",1,[],https://github.com/liblouis/liblouis/pull/373,https://github.com/simait,1,https://github.com/liblouis/liblouis/pull/373,"Still waiting for feedback on this change from reporter.
Also queried the reporter if there is an official standard publicly available. At least this change is correct according to Wikipedia, but their sources seem a bit lacklustre.","Still waiting for feedback on this change from reporter.
Also queried the reporter if there is an official standard publicly available. At least this change is correct according to Wikipedia, but their sources seem a bit lacklustre.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,373,2017-06-27T06:55:37Z,2017-06-27T07:07:04Z,2017-06-27T07:22:01Z,MERGED,True,1,1,1,https://github.com/simait,"""¡..!"" should be translated as ""235 ... 235"".",1,[],https://github.com/liblouis/liblouis/pull/373,https://github.com/simait,2,https://github.com/liblouis/liblouis/pull/373#issuecomment-311271311,"Still waiting for feedback on this change from reporter.
Also queried the reporter if there is an official standard publicly available. At least this change is correct according to Wikipedia, but their sources seem a bit lacklustre.","Oh, got a really fast reply, they have a standard and it's publicly available here in addition to a lot of other technical documentation. However, it's only available in Spanish (the standard, some technical documents are available in English), but should be sufficient if anyone wants to double-check the patterns at least (which I did for this change!).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/374,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?","Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/374#issuecomment-312346721,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?","Questions answered here
The answer to the first question is not very satisfying. Maybe we should ask him whether the standard he based the table on matches https://github.com/liblouis/braille-specs/blob/master/croatian?
In addition we should ask for:

 a YAML test
 table metadata (http://liblouis.org/documentation/liblouis.html#Table-Metadata)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/374#issuecomment-312586969,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?","Zlatko Sobočan says

Existing file ""hr.ctb"" is official 8dots computer Braille table. Please rename it to ""hr-comp8.ctb"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/374#issuecomment-312603186,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?","OK, makes sense. Also it shouldn't be called ""ctb"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/374#issuecomment-315022132,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?","Arend:

Zlatko contacted me for testing the Croatian table with our TactileView program.
I made some suggestions for improvement, but in the end because of my limited experience with some of the subtleties of the LibLouis system, we gave up on these further improvements and Zlatko sent his version of the Croatian table to LibLouis (this was accidentally two times the same file).


I will try to keep it simple. Some answers were given by Zlatko in a private mail, which I forward on his request.


With regard to your questions:

Links to the specification?
Zlatko:

No. I create the table according to the Croatian Braille standard.

Why is there a chardefs table
Zlatko:

I tried to use chardefs tables of neighboring countries, but I encountered problems that I could not solve.  Creating the Croatian chardefs table I got the desired result.

Arend:

Unlike the name suggests, chardefs.cti is not a general file, but specific for en-us-g1.ctb (among others?). There are many specific versions, inluding en-ueb-chardefs.uti. The main reason to have a separate version is probably that the Croatian table uses a different capsletter character (46), where en-us-g1.ctb uses 6. Note. These are found in en-us-g1.ctb and hr-translation.cti, respectively. The different capsletter uses will influence many characters, including the basic punctuation characters. In addition many accented characters are defined in chardefs.cti, which interfere with the Croatian characters.

Why is there a digits table specific for Croatian
Zlatko:

In existing digits6DotsPlusDot6.uti table number 2 write as dots-126. In Croatian Braille number 2 write with dots-34. (Arend: dots 126 is used for ""Lj"")

What is the difference between this new table and the old one
Zlatko:

Old Croatian table hr.ctb is based on computer 8-dots Braille.

Arend:

hr.ctb is an older 8 bit table without presigns, where hr-g1.ctb is a grade 1 table with presigns. I suppose hr.ctb will become obsolete, but I leave it to Zlatko to come up with a definite answer.

Arend:

In addition we tried to provide for a solution for the letter combinations DŽ, LJ and NJ, that in braille is written as a single character (on a Croatian keyboard nowadays it is written as two characters, with three combinations of upper case and lower case). We did not come up with a good solution. A single character exists in the Unicode table (\x01c4-\x01c6, \x01c7-\xo1c9 and \x01ca-\x01cc) that could be used by using the ""correct"" opcode. This translates correctly, but gives a synchronization problem in our TactileView program. A similar case is the Dutch character IJ (ij upper case), which is normally also written as two characters, but should be treated as a single uppercase. I don't know at this moment whether that has been solved properly.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/374#issuecomment-325605194,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?",Just asked Arend and Zlatko for tests.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/374#issuecomment-325941247,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?",According to Arend they have no tests,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/374#issuecomment-326042326,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?",I wanted to add #+contraction: no but you were too fast with the merge.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/374#issuecomment-326042656,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?","ah, sorry",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,374,2017-06-30T09:17:49Z,2017-08-30T16:15:41Z,2019-05-28T13:31:10Z,MERGED,True,730,6,10,https://github.com/egli,Add new Croatian grade 1 table,5,[],https://github.com/liblouis/liblouis/pull/374,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/374#issuecomment-326044809,"Do you have any links to the specification?
 Why is there a chardefs table? Is it so much different from any other chardefs table?
 Why is there a digits table specific for Croatian?
 What is the difference between this new table and the old one (based on BRLTTY)?

Can we remove the old one?","By the way I don't like the split up into ""hr-chardefs"" and ""hr-translation"" (even though I once started with that myself, other people started copying it). I don't know why I did it back then. It just hasn't got a purpose. Splitting off all the character definitions in a separate file is possibly useful, but the separate ""hr-translation"" file is completely useless.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,375,2017-07-03T22:53:43Z,2017-07-04T13:33:37Z,2017-07-04T13:33:50Z,MERGED,True,1,1,1,https://github.com/bertfrees,lou_translate: don't print newline if input does not end with newline,1,[],https://github.com/liblouis/liblouis/pull/375,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/375,see issue #299,see issue #299,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,375,2017-07-03T22:53:43Z,2017-07-04T13:33:37Z,2017-07-04T13:33:50Z,MERGED,True,1,1,1,https://github.com/bertfrees,lou_translate: don't print newline if input does not end with newline,1,[],https://github.com/liblouis/liblouis/pull/375,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/375#issuecomment-312828660,see issue #299,No it's correct like this. I've tested it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,375,2017-07-03T22:53:43Z,2017-07-04T13:33:37Z,2017-07-04T13:33:50Z,MERGED,True,1,1,1,https://github.com/bertfrees,lou_translate: don't print newline if input does not end with newline,1,[],https://github.com/liblouis/liblouis/pull/375,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/375#issuecomment-312858585,see issue #299,"Ah, reading the source again I get it. If we have a EOF that means the input finished before we received a newline. So, OK, yes, your code looks correct.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,375,2017-07-03T22:53:43Z,2017-07-04T13:33:37Z,2017-07-04T13:33:50Z,MERGED,True,1,1,1,https://github.com/bertfrees,lou_translate: don't print newline if input does not end with newline,1,[],https://github.com/liblouis/liblouis/pull/375,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/375#issuecomment-312858844,see issue #299,Who merges?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,375,2017-07-03T22:53:43Z,2017-07-04T13:33:37Z,2017-07-04T13:33:50Z,MERGED,True,1,1,1,https://github.com/bertfrees,lou_translate: don't print newline if input does not end with newline,1,[],https://github.com/liblouis/liblouis/pull/375,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/375#issuecomment-312879564,see issue #299,I can do it,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/376,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation","API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/376#issuecomment-314385993,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",@egli Did you see this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/376#issuecomment-314389570,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation","no, not yet :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/376#issuecomment-325399291,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation","I have explained the active/inactive thing here: #287.
I don't free the allocated memory, that is the responsibility of the caller.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/376#issuecomment-325607326,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation","@bertfrees do you think we need to add this meta data stuff to the documentation somewhere? Afaik it's not documented.
Also why is this stuff not building?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/376#issuecomment-325612016,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",I see that #+ is documented.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/376#issuecomment-325612340,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",Yeah.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/376#issuecomment-325618705,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation","I thought we could keep this hidden for a while until we know for sure that we really need the distinction. The API can also be hidden for now.
The tool should indeed have a short mentioning on the website.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/376#issuecomment-325619253,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",It builds fine on my machine but not on Travis. Something about an implicit declaration of built-in function ‘exit’. I'll have a look.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/376#issuecomment-325622132,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",Now a lot of tests are failing. Looking into it...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/376#issuecomment-325626119,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",Added a fixup commit. Remember to rebase before merging.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/376#issuecomment-326282820,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation","Remember to rebase before merging

What exactly do you want me to rebase?
Make the fixup commit and the commit that it fixes disappear?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/376#issuecomment-326283580,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation","""Apply"" the fixup.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/376#issuecomment-326284223,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",Sorry to sound so stupid: Isn't it already applied? To the branch I mean.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/376#issuecomment-326287698,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation","Committed yes, but I say ""apply"" because a ""fixup"" commit is something special. It's git-rebase terminology: see https://git-scm.com/docs/git-rebase.
Edit: I should probably use the ""fixup! ..."" notation from now on so you can use --auto-squash. Didn't know about that feature yet.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,376,2017-07-03T23:01:07Z,2017-08-31T14:02:52Z,2017-08-31T14:11:33Z,CLOSED,False,297,99,11,https://github.com/bertfrees,Table metadata: additions to API and new tool,8,['enhancement'],https://github.com/liblouis/liblouis/pull/376,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/376#issuecomment-326305055,"API function and tool to read metadata from table (see issue #287)
API function to list available tables

To do:

 mention tool in documentation",Merged in da05514,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,377,2017-07-05T14:07:34Z,2017-07-06T15:34:21Z,2017-07-06T15:34:27Z,CLOSED,False,756,4,16,https://github.com/egli,Experimental lua bindings,2,[],https://github.com/liblouis/liblouis/pull/377,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/377,These bindings are more a proof-of-concept than anything else. They should probably also live in a separate repository. Just dumped here so others can have a look at it.,These bindings are more a proof-of-concept than anything else. They should probably also live in a separate repository. Just dumped here so others can have a look at it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,377,2017-07-05T14:07:34Z,2017-07-06T15:34:21Z,2017-07-06T15:34:27Z,CLOSED,False,756,4,16,https://github.com/egli,Experimental lua bindings,2,[],https://github.com/liblouis/liblouis/pull/377,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/377#issuecomment-313432628,These bindings are more a proof-of-concept than anything else. They should probably also live in a separate repository. Just dumped here so others can have a look at it.,Closing this PR as I moved the bindings to a separate repo.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,378,2017-07-07T10:15:30Z,2017-07-07T14:36:56Z,2017-07-07T14:40:40Z,MERGED,True,10,213,9,https://github.com/egli,Remove the otherTrans mode,1,[],https://github.com/liblouis/liblouis/pull/378,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/378,"This removes all of the supporting code for the otherTrans mode. As
outlined in #337 this code was basically just a stub implementation to
allow for external translators. But it was never finished and lingered
in the in the code and the documentation for years.
Fixes #337","This removes all of the supporting code for the otherTrans mode. As
outlined in #337 this code was basically just a stub implementation to
allow for external translators. But it was never finished and lingered
in the in the code and the documentation for years.
Fixes #337",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,378,2017-07-07T10:15:30Z,2017-07-07T14:36:56Z,2017-07-07T14:40:40Z,MERGED,True,10,213,9,https://github.com/egli,Remove the otherTrans mode,1,[],https://github.com/liblouis/liblouis/pull/378,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/378#issuecomment-313693936,"This removes all of the supporting code for the otherTrans mode. As
outlined in #337 this code was basically just a stub implementation to
allow for external translators. But it was never finished and lingered
in the in the code and the documentation for years.
Fixes #337",Looks OK to me,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,378,2017-07-07T10:15:30Z,2017-07-07T14:36:56Z,2017-07-07T14:40:40Z,MERGED,True,10,213,9,https://github.com/egli,Remove the otherTrans mode,1,[],https://github.com/liblouis/liblouis/pull/378,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/378#issuecomment-313700117,"This removes all of the supporting code for the otherTrans mode. As
outlined in #337 this code was basically just a stub implementation to
allow for external translators. But it was never finished and lingered
in the in the code and the documentation for years.
Fixes #337","OK, thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,380,2017-07-18T23:35:36Z,2017-08-25T11:48:57Z,2017-08-25T11:48:57Z,MERGED,True,1,0,1,https://github.com/MikeGray-APH,Added pre support in UEB tables.,3,[],https://github.com/liblouis/liblouis/pull/380,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/380,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,380,2017-07-18T23:35:36Z,2017-08-25T11:48:57Z,2017-08-25T11:48:57Z,MERGED,True,1,0,1,https://github.com/MikeGray-APH,Added pre support in UEB tables.,3,[],https://github.com/liblouis/liblouis/pull/380,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/380#issuecomment-316308641,,@MikeGray-APH thanks for the patch but you realize that this changes case a number of failures in en-ueb-10-07-contractions.yaml and en-ueb-g2-dictionary_harness.yaml. Could you look at these and either fix the tests or the table? Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/382,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/382#issuecomment-324915789,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","Yes, a one-file tool would be ideal but much more work. The original idea was to replace everything with a single Python script (see #381). I have chosen this solution because it was quick and it can be gradually improved.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/382#issuecomment-325677664,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","@bertfrees I tried to run the tool in order to understand its functionality better. I ran it with the following config file:
CONTRACTIONS_TABLE = new_table.ctb
PATTERNS_TABLE = new_table.dic
BASE_TABLE = tables/de-de-g0.utb
DICTIONARY = dictionary.sqlite
WORKING_FILE = temporary.ctb
Also I created temporary.ctb
It fails with
eglic@wharton:~/src/liblouis$ lou_maketable --config=./tools/lou_maketable.d/example_config.cfg 
Traceback (most recent call last):
  File ""/usr/local/bin/lou_maketable.d/export_chunked_words.py"", line 22, in <module>
    from utils import *
  File ""/usr/local/bin/lou_maketable.d/utils.py"", line 37, in <module>
    liblouis.isLetter.argtypes = (c_wchar,)
  File ""/usr/lib/python3.5/ctypes/__init__.py"", line 360, in __getattr__
    func = self.__getitem__(name)
  File ""/usr/lib/python3.5/ctypes/__init__.py"", line 365, in __getitem__
    func = self._FuncPtr((name_or_ordinal, self))
AttributeError: /usr/lib/x86_64-linux-gnu/liblouis.so.12: undefined symbol: isLetter
make-patterns.mk:8: recipe for target 'dictionary.0' failed
make: *** [dictionary.0] Error 1
Don't know what the problem really is here. Looks like it is picking up an old library. We might have to increase LIBLOUIS_CURRENT in configure.ac so that the version number of the shared library is increased",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/382#issuecomment-325678817,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404",Did you run it from the source or did you install it first?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/382#issuecomment-325679014,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404",I install it first,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/382#issuecomment-325681090,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","The problem here is that you have multiple versions of Liblouis installed I think. Not sure if there is something we can do about that. Maybe we could load the so from an absolute path? But that is not an option for Mac or Windows.
Related is also the item ""Verify that correct version of Python bindings are loaded"" in #381.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/382#issuecomment-325685838,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","I did forget to install the Python bindings, indeed. I did that now. Looking at the installed __init__.py it appears that it would load the correct version. But it still it cannot find the symbol. If I run nm on the so the symbol seems to be there.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/382#issuecomment-325687105,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404",Does the error message now refer to the newly installed so?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/382#issuecomment-325700181,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","Had to uninstall python3-louis, but now it claims
ERROR: the Liblouis python bindings must be installed to run this program

Ah, I need to configure with ucs4 and reinstall",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/382#issuecomment-325705039,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","Now I'm getting the following error:
eglic@wharton:~/src/liblouis$ python3
Python 3.5.3 (default, Jan 19 2017, 14:11:04) 
[GCC 6.3.0 20170118] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from louis import liblouis
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/usr/local/lib/python3.5/dist-packages/louis/__init__.py"", line 360, in <module>
    raise Exception(""mismatch in Unicode width: liblouis is 2 and python isn't"")
Exception: mismatch in Unicode width: liblouis is 2 and python isn't
Ah, I think #198 (comment) is biting us. Seems like the test in is not working in Python > 3.3",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/382#issuecomment-325705536,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404",I have Python 3.6.1.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/382#issuecomment-325708976,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","How was your python built? what do you get from
$ python3
>>> import sys
>>> sys.maxunicode
see also https://docs.python.org/3/library/sys.html#sys.maxunicode",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/382#issuecomment-325710103,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","That gives me 1114111.
I built it from source with https://github.com/Homebrew/homebrew-core/blob/master/Formula/python3.rb.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/382#issuecomment-325713020,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","I get
eglic@wharton:~/src/liblouis$ python
Python 2.7.13 (default, Jan 19 2017, 14:48:08) 
[GCC 6.3.0 20170118] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import sys
>>> sys.maxunicode
1114111
>>> 
eglic@wharton:~/src/liblouis$ python3
Python 3.5.3 (default, Jan 19 2017, 14:11:04) 
[GCC 6.3.0 20170118] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import sys
>>> sys.maxunicode
1114111
>>>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,15,https://github.com/liblouis/liblouis/pull/382#issuecomment-325715785,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","Hm, I reinstalled everything (sudo make uninstall and then starting from configure --enable-ucs4 again). But I still get
eglic@wharton:~/src/liblouis$ python3
Python 3.5.3 (default, Jan 19 2017, 14:11:04) 
[GCC 6.3.0 20170118] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from louis import liblouis
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/usr/local/lib/python3.5/dist-packages/louis/__init__.py"", line 360, in <module>
    raise Exception(""mismatch in Unicode width: liblouis is 2 and python isn't"")
Exception: mismatch in Unicode width: liblouis is 2 and python isn't
>>> import sys
>>> sys.maxunicode
1114111
>>> 
Maybe it is still picking up the wrong so?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/382#issuecomment-325724618,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404",Maybe,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,17,https://github.com/liblouis/liblouis/pull/382#issuecomment-325940746,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","Had to remove some libs that were lying around in /usr/local/lib/. Now it seems to work, i.e. it manages to import louis. It now fails later on when trying to read from the sqlite db which isn't set up properly.
@bertfrees how do you set up the database?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/382#issuecomment-325946477,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","That part was quite specific to SBS (see https://github.com/liblouis/liblouis/blob/sbs-table-dev/sbs-table-dev/README.org) so I left that up to the user. However we should probably document how the table should be named and which columns it should have.
CREATE TABLE dictionary (text TEXT PRIMARY KEY, braille TEXT, chunked_text TEXT, frequency INTEGER)
Explanation:

text: single words
braille: expected translation of text; may be ASCII or unicode braille, character set must correspond to the display table of BASE_TABLE
chunked_text: for internal use, do not populate yourself (note: we might eliminate this column if we compute the chunks on the fly when exporting)
frequency: frequency of occurrence of the word within some text corpus",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,19,https://github.com/liblouis/liblouis/pull/382#issuecomment-326610531,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","I'm running the tool as follows:
eglic@wharton:~/src/liblouis$ lou_maketable --config=./tools/lou_maketable.d/example_config.cfg
Cannot resolve table 'new_table.ctb'
1 errors found.
tables/de-de-g0.utb,new_table.ctb,new_table.dic could not be found
0 words correctly translated
0 words automatically chunked
Waiting for Emacs...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,20,https://github.com/liblouis/liblouis/pull/382#issuecomment-326611837,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","Ah, if you touch new_table.ctb it appears to work...
Now I just have to actually put some words into my dictionary table",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,21,https://github.com/liblouis/liblouis/pull/382#issuecomment-326949970,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","@bertfrees I still don't quite get the usage and I can't seem to find a description anywhere. I'm running
$ lou_maketable --config=example_config.cfg
Waiting for Emacs...
with the following example_config.cfg
CONTRACTIONS_TABLE = new_table.ctb
PATTERNS_TABLE = new_table.dic
BASE_TABLE = tables/de-de-g2.ctb
DICTIONARY = dictionary.sqlite
WORKING_FILE = temporary.ctb

I also filled a few translations into the table in dictionary.sqlite. Now Emacs pops up with the temporary.ctb buffer.
# -*- tab-width: 30; -*-
# >>>	kokonartiger	KOKON)T>7
# | wrong braille		kokon)t>7
# | applied rules
# | > lowercase	k	k
# | > lowercase	o	o
# | > lowercase	k	k
# | > lowercase	o	o
# | > lowercase	n	n
# | > begmidword	ar	)
# | > lowercase	t	t
# | > midendword	ig	>
# | > always	er	7
# | other relevant rules
# | > word	ge	ge
# | > always	ge	&
# |__
# word	kokonartiger	KOKON)T>7

# >>>	punzenbüchse	P/ZCB84SE
# | wrong braille		p/zcb84se
# | applied rules
# | > lowercase	p	p
# | > always	un	/
# | > lowercase	z	z
# | > always	en	c
# | > lowercase	b	b
# | > lowercase	ü	8
# | > always	ch	4
# | > lowercase	s	s
# | > lowercase	e	e
# | other relevant rules
# | > word	ch	'4
# | > word	un	un
# | > word	en	en
# |__
# word	punzenbüchse	P/ZCB84SE

# >>>	variantenreich	V)I+TCR34
# | wrong braille		v)i+tcr34
# | applied rules
# | > lowercase	v	v
# | > begmidword	ar	)
# | > lowercase	i	i
# | > begmidword	an	+
# | > always	ten	tc
# | > lowercase	r	r
# | > always	ei	3
# | > always	ch	4
# | other relevant rules
# | > word	ich	#
# | > always	en	c
# | > word	en	en
# | > word	ch	'4
# | > word	an	+
# | > word	ei	'3
# |__
# word	variantenreich	V)I+TCR34

# >>>	himmeltraurig	HIXYTR1R>
# | wrong braille		hixytr1r>
# | applied rules
# | > lowercase	h	h
# | > lowercase	i	i
# | > midendword	mm	x
# | > always	el	y
# | > lowercase	t	t
# | > lowercase	r	r
# | > always	au	1
# | > lowercase	r	r
# | > midendword	ig	>
# | other relevant rules
# | > word	el	el
# | > word	au	'1
# | > word	im	-
# |__
# word	himmeltraurig	HIXYTR1R>

# >>>	mantelartigem	M+TY)T>[
# | wrong braille		m+ty)t>{
# | applied rules
# | > always	mantel	m+ty
# | > begmidword	ar	)
# | > lowercase	t	t
# | > midendword	ig	>
# | > always	em	{
# | other relevant rules
# | > word	el	el
# | > word	ge	ge
# | > always	tel	ty
# | > word	man	m
# | > word	em	em
# | > always	ge	&
# | > word	an	+
# | > always	el	y
# |__
# word	mantelartigem	M+TY)T>[

# >>>	sitzenließ	,ICL0'^
# | wrong braille		,icl0'~
# | applied rules
# | > always	sitz	,i
# | > always	en	c
# | > lowercase	l	l
# | > midendword	ie	0
# | > always	ß	'~
# | other relevant rules
# | > word	en	en
# |__
# word	sitzenließ	,ICL0'^

# >>>	jungsteinzeitliche	J/G]6ZT_E
# | wrong braille		j/g}6zt_e
# | applied rules
# | > always	jung	j/g
# | > always	stein	}6
# | > always	zeit	zt
# | > midendword	lich	_
# | > lowercase	e	e
# | other relevant rules
# | > always	in	*
# | > always	st	}
# | > always	un	/
# | > word	st	st
# | > always	ei	3
# | > word	ste	ste
# | > word	un	un
# | > word	ei	'3
# | > always	ein	6
# |__
# word	jungsteinzeitliche	J/G]6ZT_E

# >>>	verkaufsberichte	-K1FS;,#E
# | wrong braille		-k1fs;,#e
# | applied rules
# | > sufword	verkaufs	-k1fs
# | > always	bericht	;,#
# | > lowercase	e	e
# | other relevant rules
# | > word	ich	#
# | > always	ber	b7
# | > always	er	7
# | > always	ericht	e,#
# | > always	kauf	k1f
# | > word	au	'1
# | > always	au	1
# | > word	be	be
# | > always	richt	,#
# | > word	ch	'4
# | > word	auf	1
# | > begword	ver	-
# | > always	auf	,1
# |__
# word	verkaufsberichte	-K1FS;,#E

# >>>	irisscanner	IRISS'C+N7
# | wrong braille		iri~'c+n7
# | applied rules
# | > lowercase	i	i
# | > lowercase	r	r
# | > lowercase	i	i
# | > midendword	ss	~
# | > always	c	'c
# | > begmidword	an	+
# | > lowercase	n	n
# | > always	er	7
# | other relevant rules
# | > word	an	+
# |__
# word	irisscanner	IRISS'C+N7

# >>>	zweiertischs	ZW37TI5S
# | wrong braille		zw37ti5s
# | applied rules
# | > lowercase	z	z
# | > lowercase	w	w
# | > always	ei	3
# | > always	er	7
# | > lowercase	t	t
# | > lowercase	i	i
# | > always	sch	5
# | > lowercase	s	s
# | other relevant rules
# | > word	sch	'5
# | > word	ei	'3
# | > word	ch	'4
# | > always	ch	4
# |__
# word	zweiertischs	ZW37TI5S

Presumably I will have to uncomment rules that I think are correct. Let's uncomment word	ge	ge and save. Now if I run lou_maketable I get an error.
eglic@wharton:~/src/liblouis$ lou_maketable --config=example_config.cfg
word ge 1245-15: rule can not be added because already in new_table.ctb
/usr/local/bin/lou_maketable.d/lou_maketable.mk:55: recipe for target 'new_table.ctb' failed
make: *** [new_table.ctb] Error 1
I thought this was an iterative process where I run lou_maketable until all translations are correct?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/382#issuecomment-326959232,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","The error message says it all. The rule that you uncommented is already defined in the table. It is listed under ""other relevant rules"". Like ""applied rules"", these are rules that are already defined. Unlike ""applied rules"", they are not actually applied in the translation of the word ""kokonartiger"". ""word ge ge"" is listed because ""ge"" is a part of the word.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/egli,23,https://github.com/liblouis/liblouis/pull/382#issuecomment-326968502,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","Hm, I think my question is more along the lines ""how do I use this tool?""
I reset temporary.ctb and new_table.ctb. Then I run the lou_maketable tool and uncomment all the word lines
eglic@wharton:~/src/liblouis$ lou_maketable --config=example_config.cfg
0 words correctly translated
0 words automatically chunked
Waiting for Emacs...
after that new_table.ctb is still empty and temporary.ctb looks as follows:
# -*- tab-width: 30; -*-
word	kokonartiger	KOKON)T>7
word	punzenbüchse	P/ZCB84SE
word	variantenreich	V)I+TCR34
word	himmeltraurig	HIXYTR1R>
word	mantelartigem	M+TY)T>[
word	sitzenließ	,ICL0'^
word	jungsteinzeitliche	J/G]6ZT_E
word	verkaufsberichte	-K1FS;,#E
word	irisscanner	IRISS'C+N7
word	zweiertischs	ZW37TI5S

If I now run lou_maketable again and again uncomment all word lines
eglic@wharton:~/src/liblouis$ lou_maketable --config=example_config.cfg
0 words correctly translated
0 words automatically chunked
Waiting for Emacs...
my temporary.ctb still looks the same as above and new_table.ctb now has some content:
##################################
# don't edit this file directly! #
##################################
word       himmeltraurig 125-24-1346-13456-2345-1235-16-1235-45 HIXYTR1R>
word       irisscanner 24-1235-24-234-234-6-14-235-1345-12456 IRISS'C+N7
word       jungsteinzeitliche 245-256-1245-0-1246-1356-2345-456-15 J/G]6ZT_E
word       kokonartiger 13-135-13-135-1345-356-2345-45-12456 KOKON)T>7
word       mantelartigem 134-235-2345-13456-356-2345-45-0 M+TY)T>[
word       punzenbüchse 1234-256-1356-14-12-1256-1456-234-15 P/ZCB84SE
word       sitzenließ 2-24-14-123-346-6-0            ,ICL0'^
word       variantenreich 1236-356-24-235-2345-14-1235-146-1456 V)I+TCR34
word       verkaufsberichte 36-13-16-124-234-23-2-3456-15  -K1FS;,#E
word       zweiertischs 1356-2456-146-12456-2345-24-156-234 ZW37TI5S

OK, progress! But now I run lou_maketable again and I tells me that
eglic@wharton:~/src/liblouis$ lou_maketable --config=example_config.cfg
word kokonartiger 13-135-13-135-1345-356-2345-45-12456: rule can not be added because already in new_table.ctb
/usr/local/bin/lou_maketable.d/lou_maketable.mk:55: recipe for target 'new_table.ctb' failed
make: *** [new_table.ctb] Error 1
I understand that the rule cannot be added because it is already in new_table.ctb but the user interface gives me no indication whether I'm done with running lou_maketable or not.
It told me that
0 words correctly translated
0 words automatically chunked

that makes me believe that it didn't actually do anything",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,382,2017-08-10T11:54:47Z,2017-09-04T13:57:53Z,2017-12-01T13:23:29Z,MERGED,True,1791,3,24,https://github.com/bertfrees,lou_maketable,25,['enhancement'],https://github.com/liblouis/liblouis/pull/382,https://github.com/bertfrees,24,https://github.com/liblouis/liblouis/pull/382#issuecomment-326995737,"This replaces #11. For possible further improvements see #381.
To do:

 License headers
 NEWS entry
 When filtering lou_maketable.in also inject mailing list and website
 Minimal documentation on website

is now tracked in #404","I reset temporary.ctb and new_table.ctb.

Maybe something went wrong here. The tool relies on new_table.ctb
not being modified manually. It looks like the makefile rule that
is supposed to run submit_rules.sh was not executed, because
the temporary.ctb file should never look like you showed. What
you showed is an internal state.
Does it help if you run the ""clean"" command?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,385,2017-08-25T09:52:24Z,2017-08-25T11:44:01Z,2017-08-25T11:44:01Z,MERGED,True,48,30,3,https://github.com/hammera,Hungarian grade tables: adapt new 2017 grade standard changes,1,[],https://github.com/liblouis/liblouis/pull/385,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/385,"Since jul of 2017, some dot combinations changed in hungarian grade1 and grade2 standard. This fix adapt these changes.
Before the 3.3 release publication please merge this change into Liblouis repository master branch.","Since jul of 2017, some dot combinations changed in hungarian grade1 and grade2 standard. This fix adapt these changes.
Before the 3.3 release publication please merge this change into Liblouis repository master branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,386,2017-08-25T10:15:25Z,2017-08-25T11:42:21Z,2017-08-25T11:42:27Z,MERGED,True,1,0,1,https://github.com/hammera,tables/nemethdefs.cti: add N-ARY PRODUCT,1,[],https://github.com/liblouis/liblouis/pull/386,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/386,"Please review this change.
Original nemethdefs.cti file doesn't contained this markup unicode simbol.
The dot combination looked Norbert Markus from Abraham Nemeth book.
If this dot combination is good, please merge this change in Liblouis repository master branch before the 3.3 release publication.
Of course the lou_checktable nemeth.ctb test command passed right without any error.","Please review this change.
Original nemethdefs.cti file doesn't contained this markup unicode simbol.
The dot combination looked Norbert Markus from Abraham Nemeth book.
If this dot combination is good, please merge this change in Liblouis repository master branch before the 3.3 release publication.
Of course the lou_checktable nemeth.ctb test command passed right without any error.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,387,2017-08-28T09:57:26Z,2017-08-30T15:07:40Z,2019-05-28T13:31:13Z,MERGED,True,0,625,3,https://github.com/egli,"Revert ""Tables/turkish grade 2""",1,[],https://github.com/liblouis/liblouis/pull/387,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/387,"Reverts #357
The licensing issue has not been resolved properly","Reverts #357
The licensing issue has not been resolved properly",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,389,2017-08-29T07:43:02Z,2017-08-29T08:35:25Z,2017-08-29T09:36:57Z,MERGED,True,4,4,1,https://github.com/simait,Bugfix/es g1.ctb,2,[],https://github.com/liblouis/liblouis/pull/389,https://github.com/simait,1,https://github.com/liblouis/liblouis/pull/389,"A few minor fixes, reviewed and approved by José Luis Lorente Barajas (ONCE-CIDAT).","A few minor fixes, reviewed and approved by José Luis Lorente Barajas (ONCE-CIDAT).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,390,2017-08-29T12:37:44Z,2017-08-29T14:43:45Z,2017-08-30T05:49:23Z,MERGED,True,92,1,4,https://github.com/simait,sk-g1: Added yaml-test.,2,[],https://github.com/liblouis/liblouis/pull/390,https://github.com/simait,1,https://github.com/liblouis/liblouis/pull/390,"This test-harness was originally supplied by Branislav Mamojka, so the modifications below should probably be verified by him.
In addition to adding a test harness for sk-g1, it also modifies the table slightly in order to pass the test. The changes are as follows:

elipsis (…)is added and translated as three dots (256-256-256).
euro sign is changed to x20ac, instead of x0080, since the former is the unicode code-point of the euro sign while the latter is some single-character encoding scheme (e.g., ISO8859-X, WINDOWS-12XX).
copyright (©) is added and translated as 236-6-14-356.

Neither elipsis, nor copyright is strictly required, but since they where included in the test-harness I thought I might as well add them...","This test-harness was originally supplied by Branislav Mamojka, so the modifications below should probably be verified by him.
In addition to adding a test harness for sk-g1, it also modifies the table slightly in order to pass the test. The changes are as follows:

elipsis (…)is added and translated as three dots (256-256-256).
euro sign is changed to x20ac, instead of x0080, since the former is the unicode code-point of the euro sign while the latter is some single-character encoding scheme (e.g., ISO8859-X, WINDOWS-12XX).
copyright (©) is added and translated as 236-6-14-356.

Neither elipsis, nor copyright is strictly required, but since they where included in the test-harness I thought I might as well add them...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,393,2017-08-30T21:43:10Z,2017-08-31T11:49:55Z,2017-08-31T11:49:55Z,MERGED,True,69,23,1,https://github.com/mgorse,Fix a few invalid writes,3,[],https://github.com/liblouis/liblouis/pull/393,https://github.com/mgorse,1,https://github.com/liblouis/liblouis/pull/393,There have been a few CVEs filed against liblouis. These patches fix most of them.,There have been a few CVEs filed against liblouis. These patches fix most of them.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,393,2017-08-30T21:43:10Z,2017-08-31T11:49:55Z,2017-08-31T11:49:55Z,MERGED,True,69,23,1,https://github.com/mgorse,Fix a few invalid writes,3,[],https://github.com/liblouis/liblouis/pull/393,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/393#issuecomment-326213152,There have been a few CVEs filed against liblouis. These patches fix most of them.,"See also the original bug reports at https://bugzilla.redhat.com/buglist.cgi?component=liblouis&product=Red%20Hat%20Enterprise%20Linux%207
And also the list of CVEs: http://www.cvedetails.com/vulnerability-list/vendor_id-16875/Liblouis.html",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,398,2017-09-01T13:23:24Z,2017-09-04T08:49:57Z,2017-09-04T08:51:20Z,MERGED,True,83,106,4,https://github.com/egli,Bugfix for CVE-2017-13743,9,[],https://github.com/liblouis/liblouis/pull/398,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/398,"I believe this fixes CVE-2017-13743 and a number of additional buffer overflows in _lou_showString, _lou_showDots and _lou_showAttributes.","I believe this fixes CVE-2017-13743 and a number of additional buffer overflows in _lou_showString, _lou_showDots and _lou_showAttributes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,398,2017-09-01T13:23:24Z,2017-09-04T08:49:57Z,2017-09-04T08:51:20Z,MERGED,True,83,106,4,https://github.com/egli,Bugfix for CVE-2017-13743,9,[],https://github.com/liblouis/liblouis/pull/398,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/398#issuecomment-326616200,"I believe this fixes CVE-2017-13743 and a number of additional buffer overflows in _lou_showString, _lou_showDots and _lou_showAttributes.","Hm @bertfrees can't find your ""other comment"" anymore. Maybe because it was attached to the line that you were criticizing and that I have now removed. Anyway I believe I fixed the issues your mentioned in my latest commit",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,398,2017-09-01T13:23:24Z,2017-09-04T08:49:57Z,2017-09-04T08:51:20Z,MERGED,True,83,106,4,https://github.com/egli,Bugfix for CVE-2017-13743,9,[],https://github.com/liblouis/liblouis/pull/398,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/398#issuecomment-326617394,"I believe this fixes CVE-2017-13743 and a number of additional buffer overflows in _lou_showString, _lou_showDots and _lou_showAttributes.","Yes, it's fine now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/399,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/399#issuecomment-345688543,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1",@simait any news on this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/simait,3,https://github.com/liblouis/liblouis/pull/399#issuecomment-345695478,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","@egli Yes, we received a file with a LGPv3 license attached. I directed them to this pull-request in the hope that they would post their approval here.
Anyway, if you want to include new LGPv3 content I could push that file here, but it doesn't really help the process of moving to LGPLv2...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/399#issuecomment-345700469,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Thanks, but to be honest I'd rather have LGPLv2.1+ Can you ask them for that? Once you have that pushing here would be great.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/simait,5,https://github.com/liblouis/liblouis/pull/399#issuecomment-345714979,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Yeah, that is what I was hoping for and have asked them for, was trying to make it easy for them to just login to github and approve the pull-request... Anyway, I'll bug them again and see if anything happens.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/399#issuecomment-368541365,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1",@simait any updates here?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/ugurgurbuz39,7,https://github.com/liblouis/liblouis/pull/399#issuecomment-428924095,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Hi,
Turkish table files were created by me.
But I made a new update for these files. I want to share new files with you. This and all the files I'm going to add here are free and can be used by everyone.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/399#issuecomment-440304775,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Hi @ugurgurbuz39 , you said you had updated the files. Could you send those updates so we can include them in the next release? Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/ugurgurbuz39,9,https://github.com/liblouis/liblouis/pull/399#issuecomment-440613154,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Hi Christian,
I am sending you the latest Turkish table files that I have prepared.
   If there's a problem getting files, can you get back to me?
   I would love to share with you the new updates for Turkish.
   Respects...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/ugurgurbuz39,10,https://github.com/liblouis/liblouis/pull/399#issuecomment-440615840,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1",Can you replace these files with the existing tr tables? these files are the most up-to-date and Braille system with the most compatible Braille method supports.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/399#issuecomment-440649464,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1",Hi @ugurgurbuz39 the files did not show up here in the github issue tracker. Can you send them to me directly or to the liblouis mailing list? Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/399#issuecomment-441019377,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Hi @ugurgurbuz39  it looks like you sent the files to the liblouis list but are not subscribed, so the mail bounced. Can you either subscribe and resend or send the files to me directly? Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/399#issuecomment-443255749,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","@ugurgurbuz39 sorry I never received the new tables, so I'm just going to merge the ones I have.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/399#issuecomment-443257949,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Oh and by the way, @ugurgurbuz39 can you tell me your real name so I can put it in the release announcement?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/ugurgurbuz39,15,https://github.com/liblouis/liblouis/pull/399#issuecomment-443349542,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Hi Egli
  My name is Uğur Gürbüz.
  What is your e-mail adress?
  i will sent to last Turkish table with mail.
you can sent to me emti mail. i will anser your mail.
ugur.gurbuz39@gmail.com
ugur.gurbuz@brailleteknik.com
Regards...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/ugurgurbuz39,16,https://github.com/liblouis/liblouis/pull/399#issuecomment-443350604,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1","Hi egli,
  You can download last Turkish tables this link:
http://brailleteknik.com/Araclar/liblouis_Turkish_Tables.zip",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,399,2017-09-01T16:02:09Z,2018-11-30T16:19:50Z,2018-12-03T12:42:19Z,MERGED,True,625,0,3,https://github.com/egli,Tables/turkish grade 2,1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/399,https://github.com/egli,17,https://github.com/liblouis/liblouis/pull/399#issuecomment-443697062,"This is basically the same PR as #357 just re-submitted as the original one was merged despite the unclear licensing.
We are waiting for permission to license under LGPLv2.1",Hi @ugurgurbuz39 I added the new tables to a new PR (#675). Please have a look at comment. Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,403,2017-09-05T17:13:20Z,2017-09-06T18:36:48Z,2017-09-07T07:40:03Z,CLOSED,False,618,105,1,https://github.com/surfer0627,[conflicts cant fix] Chinese braille table: Added some Nemeth and Kangxi radical characters to zh-tw.ctb,1,[],https://github.com/liblouis/liblouis/pull/403,https://github.com/surfer0627,1,https://github.com/liblouis/liblouis/pull/403,"Added some Nemeth and Kangxi radical characters to zh-tw.ctb. (Kangxi Radicals, 0x2F00-0x2FDF).
thanks to Bo-cheng Jhan and Coscell Kao.","Added some Nemeth and Kangxi radical characters to zh-tw.ctb. (Kangxi Radicals, 0x2F00-0x2FDF).
thanks to Bo-cheng Jhan and Coscell Kao.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,403,2017-09-05T17:13:20Z,2017-09-06T18:36:48Z,2017-09-07T07:40:03Z,CLOSED,False,618,105,1,https://github.com/surfer0627,[conflicts cant fix] Chinese braille table: Added some Nemeth and Kangxi radical characters to zh-tw.ctb,1,[],https://github.com/liblouis/liblouis/pull/403,https://github.com/surfer0627,2,https://github.com/liblouis/liblouis/pull/403#issuecomment-327356457,"Added some Nemeth and Kangxi radical characters to zh-tw.ctb. (Kangxi Radicals, 0x2F00-0x2FDF).
thanks to Bo-cheng Jhan and Coscell Kao.","Oops, this branch has conflicts. I forgot to do ""git pull"".
I'll do it later.
Only those with",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,403,2017-09-05T17:13:20Z,2017-09-06T18:36:48Z,2017-09-07T07:40:03Z,CLOSED,False,618,105,1,https://github.com/surfer0627,[conflicts cant fix] Chinese braille table: Added some Nemeth and Kangxi radical characters to zh-tw.ctb,1,[],https://github.com/liblouis/liblouis/pull/403,https://github.com/reiner-dolp,3,https://github.com/liblouis/liblouis/pull/403#issuecomment-327612109,"Added some Nemeth and Kangxi radical characters to zh-tw.ctb. (Kangxi Radicals, 0x2F00-0x2FDF).
thanks to Bo-cheng Jhan and Coscell Kao.",Superseded by #405,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,403,2017-09-05T17:13:20Z,2017-09-06T18:36:48Z,2017-09-07T07:40:03Z,CLOSED,False,618,105,1,https://github.com/surfer0627,[conflicts cant fix] Chinese braille table: Added some Nemeth and Kangxi radical characters to zh-tw.ctb,1,[],https://github.com/liblouis/liblouis/pull/403,https://github.com/surfer0627,4,https://github.com/liblouis/liblouis/pull/403#issuecomment-327715706,"Added some Nemeth and Kangxi radical characters to zh-tw.ctb. (Kangxi Radicals, 0x2F00-0x2FDF).
thanks to Bo-cheng Jhan and Coscell Kao.","Hi @reiner-dolp, sorry for confusing.
This PR has conflicts, which I do not know how to solve.
I just change title to distinguish it from a new one 405.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,405,2017-09-06T18:29:31Z,2017-09-07T06:46:47Z,2017-09-08T01:14:28Z,MERGED,True,432,114,1,https://github.com/surfer0627,Chinese braille table: Added some Nemeth and Kangxi radical characters to zh-tw.ctb,1,[],https://github.com/liblouis/liblouis/pull/405,https://github.com/surfer0627,1,https://github.com/liblouis/liblouis/pull/405,"Added some Nemeth and Kangxi radical characters to zh-tw.ctb. (Kangxi Radicals, 0x2F00-0x2FDF).
Thanks to Bo-cheng Jhan and Coscell Kao.","Added some Nemeth and Kangxi radical characters to zh-tw.ctb. (Kangxi Radicals, 0x2F00-0x2FDF).
Thanks to Bo-cheng Jhan and Coscell Kao.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,408,2017-09-13T07:42:57Z,2017-09-14T06:48:59Z,2017-09-14T06:58:45Z,MERGED,True,2,4,1,https://github.com/simait,Small fixes for es-g1.ctb,3,[],https://github.com/liblouis/liblouis/pull/408,https://github.com/simait,1,https://github.com/liblouis/liblouis/pull/408,More fixes proposed by José Luis Lorente Barajas.,More fixes proposed by José Luis Lorente Barajas.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/409,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.","As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/409#issuecomment-329310264,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.","Thank you very much!
We use xfail to make all the tests pass. We do this so that we notice when a commit introduces regressions. If the test suite would always fail, there would be no way to tell when something changes. It's true that a lot of tests are expected to fail and nothing is being done about it, but still it is very important to have these tests.
Note that there are two kinds of failures. One kind of failures are due to imperfect tables. Is is up to the table authors to fix these. The other kind of failures are due to bugs in the code. For this kind I like to have tests referencing special test tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/rimas-kudelis,3,https://github.com/liblouis/liblouis/pull/409#issuecomment-329374074,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.","So should I mark all the failing tests I've PR'ed yesterday as xfail? If so, is there a special format of marking tests failing due to code and not table bugs, or do I just set xfail:true and that's it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/409#issuecomment-329417639,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.","Yes. Or I can mark them. There's no special format. Basically it should be obvious from the test itself (and comment), and whether a real table is referenced or not.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/409#issuecomment-329457126,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.",@rimas-kudelis I wouldn't mind if you'd mark failing tests with xfail. Then I could just merge with a button-click :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/409#issuecomment-329458146,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.",@rimas-kudelis why is the test failing? Is it a problem with the table or with liblouis itself? If it is with liblouis itself is this a known bug that has been reported?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/409#issuecomment-329462544,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.",@egli I believe because of the #384 bug. That bug also has its own test: #411.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/rimas-kudelis,8,https://github.com/liblouis/liblouis/pull/409#issuecomment-329463069,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.","Yes, that's correct, it fails due to #384.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/409#issuecomment-329463869,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.","OK, excellent (well maybe not so much that it is failing). Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/rimas-kudelis,10,https://github.com/liblouis/liblouis/pull/409#issuecomment-329534828,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.",@egli I suggest to add a comment referencing #384 next to xfail though. ;),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,409,2017-09-13T18:48:41Z,2017-10-06T19:00:26Z,2017-10-06T20:27:11Z,CLOSED,False,23,7,5,https://github.com/rimas-kudelis,Tests and small fixes for the Latvian table,4,[],https://github.com/liblouis/liblouis/pull/409,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/409#issuecomment-334842096,"As asked for in #384, here's a rather minimalistic testcase file for the Latvian table, and some fixes for what looks like actual bugs in the table.
Note one of the tests is currently failing. I could have marked it as xfail, but there seems to be a huge amount of tests already marked this way, so marking it as failing would most certainly mean it would just get ignored.
As a sidenote, the table itself is quite a mess, with repeated/conflicting as well as seemingly random definitions pasted from who knows where. Hopefully, someone with better knowledge of Latvian Braille will clean it up one day.",Merged in 28c7220,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,410,2017-09-13T18:53:10Z,2017-10-06T19:00:45Z,2017-10-06T20:27:25Z,CLOSED,False,32,0,3,https://github.com/rimas-kudelis,Testcase for issue #401.,1,[],https://github.com/liblouis/liblouis/pull/410,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/410,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,410,2017-09-13T18:53:10Z,2017-10-06T19:00:45Z,2017-10-06T20:27:25Z,CLOSED,False,32,0,3,https://github.com/rimas-kudelis,Testcase for issue #401.,1,[],https://github.com/liblouis/liblouis/pull/410,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/410#issuecomment-334842231,,Merged in 2e36cdb,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,411,2017-09-13T19:16:23Z,2017-10-06T19:00:07Z,2017-10-06T20:27:35Z,CLOSED,False,61,0,3,https://github.com/rimas-kudelis,Added test for issue #384,1,[],https://github.com/liblouis/liblouis/pull/411,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/411,The second test is currently failing.,The second test is currently failing.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,411,2017-09-13T19:16:23Z,2017-10-06T19:00:07Z,2017-10-06T20:27:35Z,CLOSED,False,61,0,3,https://github.com/rimas-kudelis,Added test for issue #384,1,[],https://github.com/liblouis/liblouis/pull/411,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/411#issuecomment-334842000,The second test is currently failing.,Merged in 2e36cdb,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,414,2017-09-20T13:50:08Z,2017-09-20T14:12:00Z,2017-09-20T14:12:06Z,MERGED,True,19,23,1,https://github.com/egli,Update the Dockerfile according to best practices,1,[],https://github.com/liblouis/liblouis/pull/414,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/414,"see
https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/","see
https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,414,2017-09-20T13:50:08Z,2017-09-20T14:12:00Z,2017-09-20T14:12:06Z,MERGED,True,19,23,1,https://github.com/egli,Update the Dockerfile according to best practices,1,[],https://github.com/liblouis/liblouis/pull/414,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/414#issuecomment-330863397,"see
https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/",MAINTAINER is not valid anymore?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,414,2017-09-20T13:50:08Z,2017-09-20T14:12:00Z,2017-09-20T14:12:06Z,MERGED,True,19,23,1,https://github.com/egli,Update the Dockerfile according to best practices,1,[],https://github.com/liblouis/liblouis/pull/414,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/414#issuecomment-330863847,"see
https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/",https://docs.docker.com/engine/reference/builder/#maintainer-deprecated,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,416,2017-09-29T10:09:51Z,2017-09-29T12:40:45Z,2017-09-29T12:40:52Z,MERGED,True,6,9,1,https://github.com/dkager,Fix NMakefile for findTable rename and wrappers removal,1,['build system'],https://github.com/liblouis/liblouis/pull/416,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/416,Broken by 0350ec0 and c9e7460.,Broken by 0350ec0 and c9e7460.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,417,2017-10-01T08:56:43Z,2017-10-02T06:37:42Z,2017-10-02T06:38:30Z,MERGED,True,398,221,1,https://github.com/school510587,Improve zh-tw.ctb in KangXi redicals and math symbols,2,[],https://github.com/liblouis/liblouis/pull/417,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/417,"Fix format tweaks in KangXi redicals
Fix/Add braille translations conforming Nemeth rules.
Range:

Mathematical Operators
Geometric Shapes
Miscellaneous Symbols



Authors:

Bo-Cheng Jhan school510587@yahoo.com.tw
黃偉豪 hurt.nzsmr@gmail.com

Reviewed by:

Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Fix format tweaks in KangXi redicals
Fix/Add braille translations conforming Nemeth rules.
Range:

Mathematical Operators
Geometric Shapes
Miscellaneous Symbols



Authors:

Bo-Cheng Jhan school510587@yahoo.com.tw
黃偉豪 hurt.nzsmr@gmail.com

Reviewed by:

Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,418,2017-10-02T13:18:30Z,2017-10-02T13:29:15Z,2018-03-02T14:33:33Z,MERGED,True,1,1,1,https://github.com/school510587,Update zh-tw.ctb version information,1,[],https://github.com/liblouis/liblouis/pull/418,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/418,"Sorry, the previous PR does not update the version information.","Sorry, the previous PR does not update the version information.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,419,2017-10-03T08:47:18Z,2017-10-03T12:22:41Z,2017-10-03T12:23:03Z,MERGED,True,14259,16554,27,https://github.com/bertfrees,Apply a single coding style to whole code base,12,[],https://github.com/liblouis/liblouis/pull/419,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/419,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,419,2017-10-03T08:47:18Z,2017-10-03T12:22:41Z,2017-10-03T12:23:03Z,MERGED,True,14259,16554,27,https://github.com/bertfrees,Apply a single coding style to whole code base,12,[],https://github.com/liblouis/liblouis/pull/419,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/419#issuecomment-333791779,,"Looks good. Not that this is magically solve all of our problems, but at least they are nicer to look at now :-)
There is only one thing that I'd do differently. It's an automake thing. You can define your own Makefile targets and automake is going to take care of the recursion. I'll just push a change to the branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,420,2017-10-08T11:32:10Z,2017-10-11T14:33:32Z,2017-10-11T22:14:41Z,MERGED,True,2,1,1,https://github.com/rimas-kudelis,Added EN QUAD and EM QUAD codepoints as spaces.,1,[],https://github.com/liblouis/liblouis/pull/420,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/420,This adds two more Unicode whitespace characters into spaces.ctb.,This adds two more Unicode whitespace characters into spaces.ctb.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,420,2017-10-08T11:32:10Z,2017-10-11T14:33:32Z,2017-10-11T22:14:41Z,MERGED,True,2,1,1,https://github.com/rimas-kudelis,Added EN QUAD and EM QUAD codepoints as spaces.,1,[],https://github.com/liblouis/liblouis/pull/420,https://github.com/rimas-kudelis,2,https://github.com/liblouis/liblouis/pull/420#issuecomment-335000541,This adds two more Unicode whitespace characters into spaces.ctb.,"Note: I also thought about adding some line-break characters as whitespace, but now I began doubting whether or not this is desirable and makes sense, so I'd like a comment on whether or not I should add the following lines to this PR:
diff --git a/tables/spaces.ctb b/tables/spaces.ctb
index 28a59219..3c229963 100644
--- a/tables/spaces.ctb
+++ b/tables/spaces.ctb
@@ -21,6 +21,10 @@
 # braille cells.
 
 space \s 0             SPACE
+space \x000a 0         LINE FEED (LF)
+space \x000b 0         LINE TABULATION
+space \x000c 0         FORM FEED (FF)
+space \x000d 0         CARRIAGE RETURN (CR)
 space \x00a0 0         NO-BREAK SPACE
 space \x2000 0         EN QUAD
 space \x2001 0         EM QUAD
@@ -33,5 +37,7 @@ space \x2007 0                FIGURE SPACE
 space \x2008 0         PUNCTUATION SPACE
 space \x2009 0         THIN SPACE
 space \x200a 0         HAIR SPACE
+space \x2028 0         LINE SEPARATOR
+space \x2029 0         PARAGRAPH SEPARATOR
 space \x202f 0         NARROW NO-BREAK SPACE
 space \x205f 0         MEDIUM MATHEMATICAL SPACE",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,420,2017-10-08T11:32:10Z,2017-10-11T14:33:32Z,2017-10-11T22:14:41Z,MERGED,True,2,1,1,https://github.com/rimas-kudelis,Added EN QUAD and EM QUAD codepoints as spaces.,1,[],https://github.com/liblouis/liblouis/pull/420,https://github.com/rimas-kudelis,3,https://github.com/liblouis/liblouis/pull/420#issuecomment-335934434,This adds two more Unicode whitespace characters into spaces.ctb.,@egli would you have any comment for my question above?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,420,2017-10-08T11:32:10Z,2017-10-11T14:33:32Z,2017-10-11T22:14:41Z,MERGED,True,2,1,1,https://github.com/rimas-kudelis,Added EN QUAD and EM QUAD codepoints as spaces.,1,[],https://github.com/liblouis/liblouis/pull/420,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/420#issuecomment-335949799,This adds two more Unicode whitespace characters into spaces.ctb.,"\x000a and \x000d are already in many tables, so I'd say it makes sense to add to the ""spaces"" table.
Note that the following line has no effect because \x00a0 is hard-mapped to virtual dot a in the C code:
space \x00a0 0 NO-BREAK SPACE

So we should probably replace it with a comment to avoid confusion.
I also notice now that the file extension is "".ctb"" instead the more logical "".uti"".
I don't know why this table was initially created. It doesn't seem to have anything to do with Liblouisutdml. I'm using it in some "".tbl"" tables, but it existed before that. The only other table it is used in is ""hu-hu-comp8.ctb"" (since 2012). I've looked in the git history and it appears the file has existed since 2008 but was not actually used until ""hu-hu-comp8.ctb"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,420,2017-10-08T11:32:10Z,2017-10-11T14:33:32Z,2017-10-11T22:14:41Z,MERGED,True,2,1,1,https://github.com/rimas-kudelis,Added EN QUAD and EM QUAD codepoints as spaces.,1,[],https://github.com/liblouis/liblouis/pull/420,https://github.com/rimas-kudelis,5,https://github.com/liblouis/liblouis/pull/420#issuecomment-335950715,This adds two more Unicode whitespace characters into spaces.ctb.,"From the comment it seems that this table was simply part of the initial table import from BRLTTY.
Do you want me to rename the file to .uti?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,420,2017-10-08T11:32:10Z,2017-10-11T14:33:32Z,2017-10-11T22:14:41Z,MERGED,True,2,1,1,https://github.com/rimas-kudelis,Added EN QUAD and EM QUAD codepoints as spaces.,1,[],https://github.com/liblouis/liblouis/pull/420,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/420#issuecomment-335964458,This adds two more Unicode whitespace characters into spaces.ctb.,"No, it was just an observation. It has been like this from the beginning so it doesn't hurt if it stays like this for some more time. Sooner or later we are gonna have to do a massive file name clean up anyway.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,424,2017-10-12T14:50:32Z,2017-10-13T08:26:03Z,2017-10-13T14:04:33Z,MERGED,True,6,0,1,https://github.com/rimas-kudelis,Added a bunch of whitespace-like codepoints as spaces:,1,[],https://github.com/liblouis/liblouis/pull/424,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/424,"U+000A LINE FEED (LF)
U+000B LINE TABULATION
U+000C FORM FEED (FF)
U+000D CARRIAGE RETURN (CR)
U+2028 LINE SEPARATOR
U+2029 PARAGRAPH SEPARATOR","U+000A LINE FEED (LF)
U+000B LINE TABULATION
U+000C FORM FEED (FF)
U+000D CARRIAGE RETURN (CR)
U+2028 LINE SEPARATOR
U+2029 PARAGRAPH SEPARATOR",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/430,"When approved, I will make multi-pass tests for inpos and outpos","When approved, I will make multi-pass tests for inpos and outpos",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/430#issuecomment-338626081,"When approved, I will make multi-pass tests for inpos and outpos","I had a quick look and it looked alright. @egli maybe you can have a look too? Ideally I'd like to have a better syntax, but right now I don't want to get in the way of Bue who wants to actually write some tests. That is the most important thing right now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/430#issuecomment-338641735,"When approved, I will make multi-pass tests for inpos and outpos",Having only looked at it very briefly I can say that it looks good. There are maybe a few things that I would have done differently and there is a buffer overrun lurking. It could probably go in and I can clean it up afterwards. But what I'm really curious is: How does a inpos YAML test look like?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/430#issuecomment-338646087,"When approved, I will make multi-pass tests for inpos and outpos",You'll see when Bue has made some :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/430#issuecomment-338678672,"When approved, I will make multi-pass tests for inpos and outpos","Here is an example that I made to fail to check what it looks like:

['altid', '⠁⠞⠙', {inPos: [0,1,2], outPos: [0,1,2,3,4]}]

This produces the following result:
Inpos failure:
Expected 1, received 0 in index 1
Expected 2, received 0 in index 2
lou_checkyaml:da-dk-g28.yaml:262: Failure
Outpos failure:
Expected 1, received 0 in index 1
Expected 2, received 0 in index 2
Expected 3, received 0 in index 3
Expected 4, received 0 in index 4
lou_checkyaml:da-dk-g28.yaml:262: Failure
Note that ""altid"" (always) is a word contraction, so it is atomic. All positions should be 0.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/430#issuecomment-338909451,"When approved, I will make multi-pass tests for inpos and outpos","I'd just merge, we can fix things afterwards if needed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/430#issuecomment-338914478,"When approved, I will make multi-pass tests for inpos and outpos",@bertfrees are you talking to me?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/430#issuecomment-338916558,"When approved, I will make multi-pass tests for inpos and outpos",@egli you're the only one here.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/430#issuecomment-339058389,"When approved, I will make multi-pass tests for inpos and outpos","Please, wait a sec. I am editing just now. I would also like to add to the documentation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/430#issuecomment-339060466,"When approved, I will make multi-pass tests for inpos and outpos",OK.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,11,https://github.com/liblouis/liblouis/pull/430#issuecomment-339367518,"When approved, I will make multi-pass tests for inpos and outpos","How does the code look now?
The following tests are the same as those given as examples in the doc. They can be copied into a file, e.g. inpos_outpos_simple.yaml, to illustrate how it works. However, they depend on en-us-ctb, so, perhaps they should not be merged into the project
table: [tables/unicode.dis, tables/en-us-g2.ctb]
tests:
  -
    - went
    - ⠺⠢⠞
    - inputPos: [0,1,3]
  -
    - went
    - ⠺⠢⠞
    - outputPos: [0,1,1,2]
  -
    - went
    - ⠺⠑⠝⠞
    - cursorPos: [0,1,2,3]",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/430#issuecomment-339371341,"When approved, I will make multi-pass tests for inpos and outpos","Great. Looks very good!
The only thing I wouldn't have done are these checks:
if (val >= wrdlen)
    error_at_line(EXIT_FAILURE, 0, file_name, event.start_mark.line + 1,
        ""Input position too great: %d.\n"" +
        ""In this test, input position cannot be greater than %d."", val, wrdlen-1);
They are not needed to make the code safe. It is true that these conditions need to be met for the test to pass, however there are more conditions (e.g. the array must be monotonically non-decreasing) and these conditions are automatically checked by the test itself.
But don't worry about this now. We can tweak things later.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/430#issuecomment-339562615,"When approved, I will make multi-pass tests for inpos and outpos","@bertfrees well I think the test is usefull to give decent error messages.
@BueVest now the only problem is that because of that test (val >= wrdlen) existing tests fail, namely
lou_checkyaml:./yaml/en-GB-g2_harness.yaml:224: Cursor position too great: 9.
In this test, cursor position cannot be greater than 8.

lou_checkyaml:./yaml/hu-hu-g1_harness.yaml:1188: Cursor position too great: 17.
In this test, cursor position cannot be greater than 16.

Are these tests faulty or is there a problem with the (val >= wrdlen) test?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/430#issuecomment-339606686,"When approved, I will make multi-pass tests for inpos and outpos","I think the test is useful to give decent error messages

Ok but then I'd say implement the other conditions (such as monotonically non-decreasing) too.
Anyway, let's not put any more effort in it now. This PR was meant to implement a quick solution, not a perfect one.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,15,https://github.com/liblouis/liblouis/pull/430#issuecomment-339609725,"When approved, I will make multi-pass tests for inpos and outpos","Me too. But I didn’t know if it was intended or unintended. I also think that cursorPos should be one int, not a list, but, as Bert says, let’s do that later.

I would now like to make the tests that Bert originally asked for to show expected and actual behavior for multi-pass. Perhaps that should be in another PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/430#issuecomment-339610716,"When approved, I will make multi-pass tests for inpos and outpos","Well, I'm happy to merge. But I need the test suite to pass. We can either

Remove the (val >= wrdlen) test or
look at the failing tests and fix them",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/430#issuecomment-339612359,"When approved, I will make multi-pass tests for inpos and outpos",Just comment out those tests. They suck.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/430#issuecomment-339613805,"When approved, I will make multi-pass tests for inpos and outpos","Alternatively Bue could just base his new PR with the tests on this one. Then we have some time to fix the failing tests.
But honestly I would just wait with that until the cursorPos test feature is fixed (see #133 for what is wrong with it) and look at the original JSON tests for the expected output.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,19,https://github.com/liblouis/liblouis/pull/430#issuecomment-339749608,"When approved, I will make multi-pass tests for inpos and outpos","Excuse me. I can see why the harness test fails, but why the inpos test. I don’t think I changed anything about that one.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,20,https://github.com/liblouis/liblouis/pull/430#issuecomment-339800995,"When approved, I will make multi-pass tests for inpos and outpos","Sorry, I actually did modify the inpos test, but it was on another branch, which I didn’t commit, so I forgot about it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,21,https://github.com/liblouis/liblouis/pull/430#issuecomment-340164692,"When approved, I will make multi-pass tests for inpos and outpos","Just comment out those tests. They suck.
Do you mean that? I can easily do it, but I wouldn’t dare do it by myself.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/egli,22,https://github.com/liblouis/liblouis/pull/430#issuecomment-340211539,"When approved, I will make multi-pass tests for inpos and outpos","Well, looking at the comments around those tests makes me believe that those tests do kinda suck. But nevertheless I think there is some problem with the (val >= wrdlen) test. Either the wrdlen isn't calculated properly or the something else is fishy. I hope to find some time on Monday to look at this and merge.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,23,https://github.com/liblouis/liblouis/pull/430#issuecomment-340272546,"When approved, I will make multi-pass tests for inpos and outpos","I have removed the check now. I am just making some generic inputPos and outputPos tests to build on before I commit.

Did any of you see my suggestion for a default cursor position for multi-pass rules and a way to let the authors of tables change it? It could even be an integrated part of the action parameter in stead of an optional third parameter. In that way, it would be clearer what is happening when you make a rule specifically to manipulate the cursor position.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,24,https://github.com/liblouis/liblouis/pull/430#issuecomment-340569970,"When approved, I will make multi-pass tests for inpos and outpos","Can any of you tell me what in the world is happening in test no. 2 in this file? OutputPos seems to fail if outlen > inlen.
Later: It looks as if check_outpos checks the number of positions according to the inlen returned by lou_translate(), not the original inlen. In this case, it is one position too many. As far as I can see, check-outpos should only check the number of positions according to the original inlen and not worry about the internal calculations by Liblouis. Why does Liblouis modify inlen at all in this case?
inpos_outpos.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,25,https://github.com/liblouis/liblouis/pull/430#issuecomment-340599397,"When approved, I will make multi-pass tests for inpos and outpos","We all knew that outputPos was broken, right? Isn't that the whole point of these tests?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,26,https://github.com/liblouis/liblouis/pull/430#issuecomment-340730911,"When approved, I will make multi-pass tests for inpos and outpos","Yes, I was just surprised.

Apparently, Liblouis changes inlen when processing the correct opcode and passes the new inlen back to the caller. Is there any reason why Liblouis should do this?

Also, check_outpos() uses the returned inlen, not the original one. Can any of you think of a good reason to do that? As far as I can see, this will only result in too few or too many positions being checked. If you don’t have any better ideas, I think we should change this behavior to always use the original inlen.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,27,https://github.com/liblouis/liblouis/pull/430#issuecomment-340732230,"When approved, I will make multi-pass tests for inpos and outpos","Liblouis changes inlen when processing the correct opcode and passes the new inlen back to the caller. Is there any reason why Liblouis should do this?

I have no idea. That might be wrong.

Also, check_outpos() uses the returned inlen, not the original one.

The idea is that inlen contains the maximum input length when the function is called. When it returns inlen is set to the actual length used.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/egli,28,https://github.com/liblouis/liblouis/pull/430#issuecomment-340738452,"When approved, I will make multi-pass tests for inpos and outpos","Also, check_outpos() uses the returned inlen, not the original one

Aha, that might be the reason why (val >= wrdlen). I haven't had time to look into it more closely.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,29,https://github.com/liblouis/liblouis/pull/430#issuecomment-340796863,"When approved, I will make multi-pass tests for inpos and outpos","That was my thought.

Test no. 2 increases the number of chars by 1 in pass 0, and the returned len is increased accordingly.

Test no. 3 decreases the number of characters by 1 in pass 0, and the returned inlen is accordingly decreased.

So, the returned inlen apparently doesn’t reflect the len consumed by Liblouis, but the len consumed by pass 1. It should probably be the first pass that is actually run, most likely 0 or 1.

I have not been able to locate exactly where this happens, so perhaps one of you could see to it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,30,https://github.com/liblouis/liblouis/pull/430#issuecomment-340800407,"When approved, I will make multi-pass tests for inpos and outpos","Yes I'm gonna have a look at but I'd rather do it after we're done with the tests, unless this bug makes it impossible to write the tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,31,https://github.com/liblouis/liblouis/pull/430#issuecomment-341685483,"When approved, I will make multi-pass tests for inpos and outpos","What do you think now? I could have check_outpos() use its own inlen instead of the returned inlen, since the function already knows how many characters came in. But other programs are likely to use the returned inlen from Liblouis, so I think it is a good opportunity to test that Liblouis actually returns the number of characters consumed.
Perhaps, that should be fixed before we start changing the actual rules for inpos and outpos?
I think it is happening in lou_translateString at about lines 284-285 and 302, but the values are probably used later, so I don't dare to just change it. Bert, do you think you could have a look at this one?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,32,https://github.com/liblouis/liblouis/pull/430#issuecomment-341806941,"When approved, I will make multi-pass tests for inpos and outpos","OK I'll try to find some time this weekend. I don't think the specification of the requirements has to wait though. But I can try to fix it.
By the way I don't understand why you want to have tests that reflect the current behavior of outputPos. If that somehow makes it easier for you, okay, but in my opinion the current behavior is completely irrelevant. It's broken. I'm only interested in how we want Liblouis to behave in the future.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/egli,33,https://github.com/liblouis/liblouis/pull/430#issuecomment-342107713,"When approved, I will make multi-pass tests for inpos and outpos",@BueVest do I need to merge this into master or are you happy working on your branch. It sounds like you have more plans for change. Should I wait some more or do want this to go in soon?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,34,https://github.com/liblouis/liblouis/pull/430#issuecomment-342140441,"When approved, I will make multi-pass tests for inpos and outpos","We could continue to work on this branch if both of you agree, but I need your help get on.

I think the first thing that needs to be done is to fix the inlen problem, so that the returned inlen always reflects the number of characters that were actually read by Liblouis.

We also need to agree on the rules for inpos and outpos during the various passes. I have made a couple of suggestions, but am in doubt myself, which was why I made the tests to reflect the current behavior and, perhaps, get inspired. The more I think about it, the more I feel it would be difficult to make rules that suit all purposes for the various passes. So, the best thing would probably be to make the best continuity possible between the passes and then, now or later, make a mechanism to control the outpos from the tables, like I previously suggested. Perhaps, we should have a quick Skype session to find out what should be done, and who can do what. I would like to contribute as much as I can, and with a few hints, perhaps I can do more than I thought.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,35,https://github.com/liblouis/liblouis/pull/430#issuecomment-342152230,"When approved, I will make multi-pass tests for inpos and outpos","A bit of continuity makes sense but we shouldn't focus too much on that aspect. What's important is that Liblouis behaves like we want. That said, the current behavior of inputPos is probably already what we want. We just need to verify that it actually is fine, based on examples, and create documentation and regression tests.
Don't worry too much on outputPos. As I concluded in #133 (comment) we should consider it redundant information. We should of course still test it, but I don't think that has to be done in a YAML test. Just focus on the actual features, not the format. For the time being, the format for testing the input-output mapping is an inputPos array, but really it could be anything (see also the discussion in #133).
By the way, I'm sorry, I didn't have time this weekend to look at the inlen problem yet :(
I'm not so keen on introducing a mechanism to control the position mapping from the tables. Like I said in #133 (comment) I believe we have to avoid adding complexity unless we really need it. First thing we should do is list some use cases for different mappings. Then for each use case we'll try to create a table to match the desired behavior. Only if we can't manage than we should look at other options.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,36,https://github.com/liblouis/liblouis/pull/430#issuecomment-342904108,"When approved, I will make multi-pass tests for inpos and outpos",@BueVest I have fixed the inlen bug.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,37,https://github.com/liblouis/liblouis/pull/430#issuecomment-343690919,"When approved, I will make multi-pass tests for inpos and outpos","Now that we can test with the pass1Only flag, have a look at these tests.
The 4 tests that use the ""correct"" opcode not only fail as they should, but they seem to return a more or less random string in the received field. Perhaps there is something wrong with the logic behind the pass1Only flag?
pass1Only.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,38,https://github.com/liblouis/liblouis/pull/430#issuecomment-343696415,"When approved, I will make multi-pass tests for inpos and outpos","Now, the tests should pass including the 4 that still don't.
pass1Only.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,39,https://github.com/liblouis/liblouis/pull/430#issuecomment-343700920,"When approved, I will make multi-pass tests for inpos and outpos","I'll have a look.
It's easier if you just push files to the branch instead of uploading them here.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,40,https://github.com/liblouis/liblouis/pull/430#issuecomment-343725598,"When approved, I will make multi-pass tests for inpos and outpos","Ok, I can do that, but then the branch won’t pass the tests. So, I thought it would be better to attach the failing tests to a comment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,41,https://github.com/liblouis/liblouis/pull/430#issuecomment-343740935,"When approved, I will make multi-pass tests for inpos and outpos",Thanks. The tests only need to pass when the branch is going to be merged. It's also fine to add xfail flags to make them pass.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,42,https://github.com/liblouis/liblouis/pull/430#issuecomment-345089189,"When approved, I will make multi-pass tests for inpos and outpos","@BueVest I've made some changes to the expected inputPos and outputPos in inpos_outpos.yaml. Can you have a look and see if it makes sense? I made outputPos match inputPos everywhere, and in addition I made the expected behavior of the context ""o,""[]""o"" @36 rule match that of other ""insertion"" rules.
Some more tests wouldn't hurt I think. While the behavior is clear in most cases, it's good to have a decent amount of regression tests.
For starters, the braille indicators (numsign, letsign, nocontractsign, the caps and emphasis indicators) should be covered. Also some other opcodes deserve special mentioning, like there are:

replace (especially if the second operand is omitted)
repeated
repword
joinword

Finally, we could cover some more multipass features.
And what about backwards translation?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,43,https://github.com/liblouis/liblouis/pull/430#issuecomment-345227431,"When approved, I will make multi-pass tests for inpos and outpos","I will have a look at it.

I think this branch now contains quite a few things worth merging. So, perhaps we should do that and then go through all the particulars of inpos and outpos on a new branch. I have a feeling that we will be spending some time, at least with back-translation.

On second thought, perhaps we should remove the p1o flag, if you still agree on that, and then merge this branch.

What do you think?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/BueVest,44,https://github.com/liblouis/liblouis/pull/430#issuecomment-348197514,"When approved, I will make multi-pass tests for inpos and outpos","Yes, now the context rules would act like the rest of the multi-pass rules, i.e. move the cursor to the first position after the inserted content. This is in accordance with the manual, and it may be fine when you are inserting something, e.g. a Braille indicator, but it fails when you do a replacement like in the tests where “-“ (@36) is replaced with “,-“ (@6-36) depending on the pass. In these cases, when the input cursor is on a “-“, the output cursor will be on the next letter, e.g. “o”, because “-“ is being replaced with “,-“.

Admittedly, I could have avoided this in the test by not replacing “-“ but simply inserting “,”, but in many real life situations, you have to do a replacement, not just an insertion. Da-dk-g28.ctb contains quite a few examples of this.

Currently, the context rules act more like the other pass 1 rules, i.e. placing the cursor on the first cell of the replacement string. It would be a possibility to do that also with the other multi-pass rules. That may be fine for replacement rules, but then, in the case of just inserting a Braille indicator, the cursor would be placed on the indicator and not on the following cell like with the normal Braille indicators supported directly by Liblouis.

I hope you can see the dilemma here. This is why I landed on a solution where the table author can specify the cursor position relative to the start of the replacement string. This may of course be some work to implement. So, until we can do that, perhaps the best solution would be to have all multi-pass rules act like the normal pass 1 rules, i.e. for each rule, let the first character/cell of the “string to be replaced” correspond with the first character/cell of the “replacement string”. If the string to be replaced is empty ([]), the following position in the input should be used, which should take care of some of the rules to insert extra indicators.

Like I wrote, this may not create a perfect result in all cases, but the logic will be consistent through all passes, and later, we can compensate by letting the table authors specify another cursor position relationship for each rule.

I hope this all makes sense.

Anyhow, I think we should merge, like we agreed last week. Then I will add a new test file with extensive pass 1 inpos and outpos tests to keep it separate from the multi-pass issues.

What do you think?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,45,https://github.com/liblouis/liblouis/pull/430#issuecomment-348952052,"When approved, I will make multi-pass tests for inpos and outpos","@egli Travis doesn't build this branch anymore. It says ""GitHub payload is missing a merge commit (mergeable_state: ""unknown"", merged: false)"". What should I do?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,46,https://github.com/liblouis/liblouis/pull/430#issuecomment-348952814,"When approved, I will make multi-pass tests for inpos and outpos","I pushed it to a new branch, now it's building.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,47,https://github.com/liblouis/liblouis/pull/430#issuecomment-348952880,"When approved, I will make multi-pass tests for inpos and outpos","If it passes I'll merge, ok?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/egli,48,https://github.com/liblouis/liblouis/pull/430#issuecomment-348956000,"When approved, I will make multi-pass tests for inpos and outpos","Sure feel free to merge, just be careful with merging liblouis.texi",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,49,https://github.com/liblouis/liblouis/pull/430#issuecomment-348958480,"When approved, I will make multi-pass tests for inpos and outpos","Ah yes there's one conflict. It looks like commit 420b50b was also included in #444, so I'll drop it from this PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,430,2017-10-23T10:17:01Z,2017-12-04T13:28:20Z,2017-12-04T13:28:38Z,CLOSED,False,1514,1362,15,https://github.com/BueVest,Implemented inpos and outpos in lou_checkyaml.c.,22,[],https://github.com/liblouis/liblouis/pull/430,https://github.com/bertfrees,50,https://github.com/liblouis/liblouis/pull/430#issuecomment-348961955,"When approved, I will make multi-pass tests for inpos and outpos",Merged in ac59139,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,432,2017-11-01T10:23:00Z,2017-11-01T10:31:43Z,2017-11-01T10:31:48Z,MERGED,True,3,0,3,https://github.com/sthibaul,Add missing \x2019 to french tables,1,[],https://github.com/liblouis/liblouis/pull/432,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/432,Fixes #431,Fixes #431,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,432,2017-11-01T10:23:00Z,2017-11-01T10:31:43Z,2017-11-01T10:31:48Z,MERGED,True,3,0,3,https://github.com/sthibaul,Add missing \x2019 to french tables,1,[],https://github.com/liblouis/liblouis/pull/432,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/432#issuecomment-341067906,Fixes #431,"Fantastic, thank you very much @sthibaul",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,433,2017-11-01T13:20:01Z,2018-08-30T09:34:48Z,2018-08-30T10:05:34Z,MERGED,True,34,19,4,https://github.com/MikeGray-APH,UEB fixes,11,[],https://github.com/liblouis/liblouis/pull/433,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/433,"UEB stopgaps for:
BLT, BLVD, and LLC
number sign placement
final-letter groupsign usage","UEB stopgaps for:
BLT, BLVD, and LLC
number sign placement
final-letter groupsign usage",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,433,2017-11-01T13:20:01Z,2018-08-30T09:34:48Z,2018-08-30T10:05:34Z,MERGED,True,34,19,4,https://github.com/MikeGray-APH,UEB fixes,11,[],https://github.com/liblouis/liblouis/pull/433,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/433#issuecomment-341367502,"UEB stopgaps for:
BLT, BLVD, and LLC
number sign placement
final-letter groupsign usage","Hi @MikeGray-APH thanks for the fixes. I see that some YAML test fail. I fixed most of them in #435 (some unexpected passes), but there is a regression in that four tests that worked previously now fail
FAIL: yaml/en-ueb-g2_backward
=============================

Input:    '⠁⠰⠝'
Expected: 'ation' (length 5)
Received: 'a\56/n' (length 6)
Diff:     Expected 't' but received '\' in index 1
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:28: Failure
Input:    '⠙⠨⠑'
Expected: 'dance' (length 5)
Received: 'dε' (length 2)
Diff:     Expected 'a' but received 'ε' in index 1
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:63: Failure
Input:    '⠋⠰⠑'
Expected: 'fence' (length 5)
Received: 'f\56/e' (length 6)
Diff:     Expected 'e' but received '\' in index 1
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:64: Failure
Input:    '⠎⠰⠛'
Expected: 'song' (length 4)
Received: 's\56/g' (length 6)
Diff:     Expected 'o' but received '\' in index 1
lou_checkyaml:./yaml/en-ueb-g2_backward.yaml:71: Failure
FAILURE (52 tests, 4 failures)
FAIL yaml/en-ueb-g2_backward.yaml (exit status: 1)

Your changes seem to adversely affect the backwards translation",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,433,2017-11-01T13:20:01Z,2018-08-30T09:34:48Z,2018-08-30T10:05:34Z,MERGED,True,34,19,4,https://github.com/MikeGray-APH,UEB fixes,11,[],https://github.com/liblouis/liblouis/pull/433,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/433#issuecomment-368541159,"UEB stopgaps for:
BLT, BLVD, and LLC
number sign placement
final-letter groupsign usage",@MikeGray-APH Can you tell me what to do about the regressions above? Your patches fix two forward translations but break 4 backwards translations. Should it go in (3.5) nonetheless?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,433,2017-11-01T13:20:01Z,2018-08-30T09:34:48Z,2018-08-30T10:05:34Z,MERGED,True,34,19,4,https://github.com/MikeGray-APH,UEB fixes,11,[],https://github.com/liblouis/liblouis/pull/433,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/433#issuecomment-415366875,"UEB stopgaps for:
BLT, BLVD, and LLC
number sign placement
final-letter groupsign usage",@MikeGray-APH what's the status on this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,433,2017-11-01T13:20:01Z,2018-08-30T09:34:48Z,2018-08-30T10:05:34Z,MERGED,True,34,19,4,https://github.com/MikeGray-APH,UEB fixes,11,[],https://github.com/liblouis/liblouis/pull/433,https://github.com/MikeGray-APH,5,https://github.com/liblouis/liblouis/pull/433#issuecomment-417010760,"UEB stopgaps for:
BLT, BLVD, and LLC
number sign placement
final-letter groupsign usage",Sent new pull request,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,435,2017-11-02T09:37:16Z,2018-01-25T08:17:58Z,2018-01-25T08:17:58Z,CLOSED,False,33,16,5,https://github.com/egli,UEB fixes by Mike Gray,4,['waiting'],https://github.com/liblouis/liblouis/pull/435,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/435,this is basically #433 with some fixes in the YAML tests,this is basically #433 with some fixes in the YAML tests,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,435,2017-11-02T09:37:16Z,2018-01-25T08:17:58Z,2018-01-25T08:17:58Z,CLOSED,False,33,16,5,https://github.com/egli,UEB fixes by Mike Gray,4,['waiting'],https://github.com/liblouis/liblouis/pull/435,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/435#issuecomment-345690367,this is basically #433 with some fixes in the YAML tests,"@MikeGray-APH You submitted a Pull Request to fix some UEB problems a while ago (#433). It didn't pass the test suite (mostly tests that failed before now pass), so I fixed that in this PR but there seem to be some regressions. I'd like to include this in the upcoming release. Can you have a look at the problems and fix them? Please see the error log.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,435,2017-11-02T09:37:16Z,2018-01-25T08:17:58Z,2018-01-25T08:17:58Z,CLOSED,False,33,16,5,https://github.com/egli,UEB fixes by Mike Gray,4,['waiting'],https://github.com/liblouis/liblouis/pull/435,https://github.com/MikeGray-APH,3,https://github.com/liblouis/liblouis/pull/435#issuecomment-355031865,this is basically #433 with some fixes in the YAML tests,I can't fix these because the yaml tests are being skipped.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,435,2017-11-02T09:37:16Z,2018-01-25T08:17:58Z,2018-01-25T08:17:58Z,CLOSED,False,33,16,5,https://github.com/egli,UEB fixes by Mike Gray,4,['waiting'],https://github.com/liblouis/liblouis/pull/435,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/435#issuecomment-355936302,this is basically #433 with some fixes in the YAML tests,"Hi @MikeGray-APH  do you have libyaml installed? If configure cannot find libyaml then make check will skip the YAML tests. On Debian you will have to install libyaml-dev.
Or are you building on Windows?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,436,2017-11-03T20:39:13Z,2017-11-06T11:35:03Z,2017-11-07T07:43:01Z,MERGED,True,43,19,1,https://github.com/BueVest,Misc additions and updates to documentation,3,['documentation'],https://github.com/liblouis/liblouis/pull/436,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/436,This should solve #415. More to come.,This should solve #415. More to come.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,436,2017-11-03T20:39:13Z,2017-11-06T11:35:03Z,2017-11-07T07:43:01Z,MERGED,True,43,19,1,https://github.com/BueVest,Misc additions and updates to documentation,3,['documentation'],https://github.com/liblouis/liblouis/pull/436,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/436#issuecomment-342131815,This should solve #415. More to come.,"Thank you.

Is it ok to continue making more updates to the docs on this branch, and then you could merge again?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,436,2017-11-03T20:39:13Z,2017-11-06T11:35:03Z,2017-11-07T07:43:01Z,MERGED,True,43,19,1,https://github.com/BueVest,Misc additions and updates to documentation,3,['documentation'],https://github.com/liblouis/liblouis/pull/436,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/436#issuecomment-342136721,This should solve #415. More to come.,"Thank you.

My pleasure. Thanks for the patch.

Is it ok to continue making more updates to the docs on this branch, and then you could merge again?

I'm happy to merge again, but it might be better to start a new branch based of master, as I did some spell checking and white-space fixes to the documentation. Otherwise we'll probably have merge conflicts.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,436,2017-11-03T20:39:13Z,2017-11-06T11:35:03Z,2017-11-07T07:43:01Z,MERGED,True,43,19,1,https://github.com/BueVest,Misc additions and updates to documentation,3,['documentation'],https://github.com/liblouis/liblouis/pull/436,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/436#issuecomment-342210125,This should solve #415. More to come.,"I have merged back from master now, so that should be ok.

What do you use to spell check a texy file?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,436,2017-11-03T20:39:13Z,2017-11-06T11:35:03Z,2017-11-07T07:43:01Z,MERGED,True,43,19,1,https://github.com/BueVest,Misc additions and updates to documentation,3,['documentation'],https://github.com/liblouis/liblouis/pull/436,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/436#issuecomment-342400766,This should solve #415. More to come.,"What do you use to spell check a texy file?

I just use ispell from within Emacs",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/437,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/437#issuecomment-342448351,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","Thanks for the feedback!


Too many changes in one PR. IMHO they should be in separate PRs

split the yaml tests
support for finding tables based on meta data
some hyphenation extension




Ideally yes (although I think my division was better). But is it really worth the trouble? I already split up everything nicely in commits which is the main thing (some people wouldn't even bother with that). Splitting it up in branches and PRs can slightly improve the readability of the git tree and the issue history on Github, but I felt lazy. You just gain so little with it.


While the meta data based YAML tests are nice they also add an indirection which makes it hard to find out which table is actually tested now


I think we have to get used to identifying tables in terms of metadata instead of file names. That's the whole purpose of this. I have hesitated a bit but in the end decided to leave the # table: [...]comments in the tests, just as a transitional measure. The idea is to remove them eventually. Would you feel better if we ensure somehow in the test that the table actually used matches an expected value?


The split of the yaml test suite. I'd prefer if we could find a way to have only one test run. Maybe we could define an additional log compiler that would handle the braille_spec tests slightly differently from the other yaml tests.


I first thought about creating a special environment variable that lou_checkyaml would use to index the tables. But that just seemed wrong.
The real problem is that different tests in the same directory can not have a different set of environment variables. Unless you set the environment variables in the log compiler. Maybe that is what you are suggesting? But can this be done without changing the file extensions?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/437#issuecomment-342467518,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","Too many changes in one PR. IMHO they should be in separate PRs




Ideally yes (although I think my division was better). But is it really worth the trouble?

It's just that some things are no-brainers. They could go in. Others maybe need more discussion. But I guess we could cherry pick, so it's not such a big deal.


While the meta data based YAML tests are nice they also add an indirection which makes it hard to find out which table is actually tested now

I think we have to get used to identifying tables in terms of metadata instead of file names. That's the whole purpose of this. I have hesitated a bit but in the end decided to leave the # table: [...] comments in the tests, just as a transitional measure. The idea is to remove them eventually. Would you feel better if we ensure somehow in the test that the table actually used matches an expected value?

The # table: [...] comment is what made me stumble at the beginning. It feels like it should be removed. I don't know what would make me feel better :-), but I guess making sure there is an actual matching table is a first step

The real problem is that different tests in the same directory can not have a different set of environment variables. Unless you set the environment variables in the log compiler. Maybe that is what you are suggesting? But can this be done without changing the file extensions?

I had something like that in mind, but I'm not sure if it goes far enough. Maybe it really is a simple match between extension and ""compiler"". Yes, that is how it is, I just read up on it.
One option that I could see is to create a wrapper script that invokes the tests with a different environment depending on whether they are braille_spec tests or not. Not sure if that really simplifies things",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/437#issuecomment-342469811,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","making sure there is an actual matching table is a first step

What should that look like in YAML?

One option that I could see is to create a wrapper script that invokes the tests with a different environment depending on whether they are braille_spec tests or not.

Yeah that would work. I'll try it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/437#issuecomment-342511688,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","making sure there is an actual matching table is a first step

What should that look like in YAML?

I thought you could just error out if you didn't find exactly one matching table for the query. Or you could just error out if you didn't find at least one matching table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/437#issuecomment-342521239,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","With the current query API there can be at most one match. If there is no match, the test errors out.
Actually I'm thinking about extending this idea to multiple matches. Then you can for example create a set of tests that should be satisfied for all German tables regardless of grade. You can do that already but you need to list all the combinations explicitly.
Example:
table:
  locale: de
  grade: 2
table:
  locale: de
  grade: 1
table:
  locale: de
  grade: 0

By supporting multiple matches this would become:
table:
  locale: de",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/437#issuecomment-342920862,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata",@egli I've combined all the tests into a single run again.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/437#issuecomment-347142191,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata",I have some more metadata changes coming up so maybe we can wait for that before merging. But are the current changes approved now?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/437#issuecomment-347516639,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","Oh, I had in my notes that this could go in but you're telling me to wait, no problem.

But are the current changes approved now?

I don't like the metadata that is not a key-value tuple, but aside from that I think I'm fine with this change",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/437#issuecomment-347524216,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","OK thanks.
I don't think we need to solve the key-value now. It is currently allowed so why not use it. The idea for it was to support attaching a list of tags to a table, which can be used for discovery. Compare it with keywords metadata in HTML used for search engine optimization, keywords in a paper abstract, etc.
If you'd like to remove this feature or implement it differently we can discuss it of course.
Anyway, because we don't have a standardized field for metadata like ""ueb"" and ""bfu"" I decided to just use simple tags for it for now. I have been thinking about creating an official field for it. It could be named ""code"" or ""system"", and the meaning could be: ""a general identifier of the braille code, which does not identify variants such as grades"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/437#issuecomment-366554117,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","@egli

I've removed the metadata fields without a value, which you didn't like. They have been replaced with e.g. #+system: ueb.
I added a (temporary) feature to assert that the table that is actually tested is your expected table. The # table: [...] comments are gone. Still eventually we should move to true metadata based tests, but the check is nice to have for now. It works like this:
table:
  locale: de
  __match: de-de-g2.ctb

And I did some other changes to metadata.

I did a forced push.
I have two more commits for which I will make a new PR when this one is merged. One adds #-name fields and the other adds #-display-name fields. The display-name fields are a short English description of the tables and are generated automatically based on metadata.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/437#issuecomment-366647924,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata","To do:

 documentation (table query syntax in YAML + LOUIS_TABLEPATH)
 rename __match to __assert-match
 make hyphenation test work with --disable-ucs4",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/437#issuecomment-369171680,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata",Two commits were already cherry-picked so I'm cutting them out of this branch: f6b19b3 and 43bdfc1.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,437,2017-11-03T21:52:47Z,2018-02-28T12:35:27Z,2018-02-28T22:18:10Z,MERGED,True,1715,464,162,https://github.com/bertfrees,Specify table via query in tests and various other changes related to metadata and tests,19,[],https://github.com/liblouis/liblouis/pull/437,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/437#issuecomment-369200714,"Specify table via query in tests: see #413
Fix hyphenation tests
Support ""."" in metadata: fixes #359
Various changes to table metadata",Merged latest master. @egli if you can approve I push to master.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,444,2017-11-14T19:39:44Z,2017-11-22T10:26:00Z,2017-11-22T10:26:48Z,MERGED,True,248,172,1,https://github.com/BueVest,More updates to documentationBuevest docs,4,['documentation'],https://github.com/liblouis/liblouis/pull/444,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/444,Solves #402 and #440 + removes some warnings.,Solves #402 and #440 + removes some warnings.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,444,2017-11-14T19:39:44Z,2017-11-22T10:26:00Z,2017-11-22T10:26:48Z,MERGED,True,248,172,1,https://github.com/BueVest,More updates to documentationBuevest docs,4,['documentation'],https://github.com/liblouis/liblouis/pull/444,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/444#issuecomment-344565347,Solves #402 and #440 + removes some warnings.,"The documentation is great, but looking at the patch I'm a bit worried that you started with an older version of the documentation. Your patch seems to undo some changes (spelling, white-space) in ddd8053 and 85970af that I did a few days ago. I'm not sure if this is intentional or not. @bertfrees is there a way to rebase these changes so that my stuff is not undone?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,444,2017-11-14T19:39:44Z,2017-11-22T10:26:00Z,2017-11-22T10:26:48Z,MERGED,True,248,172,1,https://github.com/BueVest,More updates to documentationBuevest docs,4,['documentation'],https://github.com/liblouis/liblouis/pull/444,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/444#issuecomment-344589681,Solves #402 and #440 + removes some warnings.,"Sorry. It was definitely not my intension to revert your changes. I pulled the newest master and merged it locally to buevest_docs. So, I thought it would be ok. I hope we can rebase, so that the new updates can fit into the current master.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,444,2017-11-14T19:39:44Z,2017-11-22T10:26:00Z,2017-11-22T10:26:48Z,MERGED,True,248,172,1,https://github.com/BueVest,More updates to documentationBuevest docs,4,['documentation'],https://github.com/liblouis/liblouis/pull/444,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/444#issuecomment-344703592,Solves #402 and #440 + removes some warnings.,"I don't know what happened. Bue mentions a merge but I don't see one. It seems indeed that some spelling and white space changes were lost.
Since there is no trace of what happened in Git, you can't just rebase. I think the easiest way to solve this is to re-apply the changes (do the spelling and white space fixes again) either at each of the 4 commits by Bue, or only at the end. I can do it if you tell me how you did the changes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,444,2017-11-14T19:39:44Z,2017-11-22T10:26:00Z,2017-11-22T10:26:48Z,MERGED,True,248,172,1,https://github.com/BueVest,More updates to documentationBuevest docs,4,['documentation'],https://github.com/liblouis/liblouis/pull/444,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/444#issuecomment-346125389,Solves #402 and #440 + removes some warnings.,"Well, apparently, this is all a consequence of me merging the master branch back on top of buevest_doc. I don’t know, perhaps the master hadn’t been updated when I pulled it.

Definitely, something went wrong. If we are going to have a skype call anyway, let’s find out what we can do about it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,444,2017-11-14T19:39:44Z,2017-11-22T10:26:00Z,2017-11-22T10:26:48Z,MERGED,True,248,172,1,https://github.com/BueVest,More updates to documentationBuevest docs,4,['documentation'],https://github.com/liblouis/liblouis/pull/444,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/444#issuecomment-346308451,Solves #402 and #440 + removes some warnings.,"Ok, I merged",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,446,2017-11-14T22:24:36Z,2017-11-16T18:11:32Z,2017-11-16T18:11:32Z,CLOSED,False,356,0,1,https://github.com/Sergiy-Moskalets,Create uk-ua-g1.utb,1,[],https://github.com/liblouis/liblouis/pull/446,https://github.com/Sergiy-Moskalets,1,https://github.com/liblouis/liblouis/pull/446,Add newline character at the end of files from the previous commit,Add newline character at the end of files from the previous commit,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,447,2017-11-14T22:28:20Z,2017-11-16T18:11:32Z,2017-11-16T18:11:32Z,CLOSED,False,15,0,1,https://github.com/Sergiy-Moskalets,Create uk.tbl,1,[],https://github.com/liblouis/liblouis/pull/447,https://github.com/Sergiy-Moskalets,1,https://github.com/liblouis/liblouis/pull/447,Rename new tables to .tbl,Rename new tables to .tbl,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,448,2017-11-14T22:30:09Z,2017-11-16T18:11:32Z,2017-11-16T18:11:32Z,CLOSED,False,62,0,1,https://github.com/Sergiy-Moskalets,Create uk-chardefs.cti,1,[],https://github.com/liblouis/liblouis/pull/448,https://github.com/Sergiy-Moskalets,1,https://github.com/liblouis/liblouis/pull/448,Add ukrainian tables,Add ukrainian tables,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,449,2017-11-14T22:32:31Z,2017-11-16T18:11:32Z,2017-11-16T18:11:32Z,CLOSED,False,102,0,1,https://github.com/Sergiy-Moskalets,Create uk-compbrl.ctb,1,[],https://github.com/liblouis/liblouis/pull/449,https://github.com/Sergiy-Moskalets,1,https://github.com/liblouis/liblouis/pull/449,"Add noback to unqualified correct, context, and pass rules.","Add noback to unqualified correct, context, and pass rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,450,2017-11-14T22:33:18Z,2017-11-16T18:11:32Z,2017-11-16T18:11:32Z,CLOSED,False,134,0,1,https://github.com/Sergiy-Moskalets,Create uk-litbrl.ctb,1,[],https://github.com/liblouis/liblouis/pull/450,https://github.com/Sergiy-Moskalets,1,https://github.com/liblouis/liblouis/pull/450,"Add noback to unqualified correct, context, and pass rules.","Add noback to unqualified correct, context, and pass rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,451,2017-11-14T22:34:47Z,2017-11-16T18:11:32Z,2017-11-16T18:11:32Z,CLOSED,False,231,0,1,https://github.com/Sergiy-Moskalets,Create uk-ua.dis,1,[],https://github.com/liblouis/liblouis/pull/451,https://github.com/Sergiy-Moskalets,1,https://github.com/liblouis/liblouis/pull/451,Update copyrights and add a license,Update copyrights and add a license,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,452,2017-11-14T22:36:43Z,2017-11-16T18:11:32Z,2017-11-16T18:11:32Z,CLOSED,False,283,0,1,https://github.com/Sergiy-Moskalets,Create uk.ctb,1,[],https://github.com/liblouis/liblouis/pull/452,https://github.com/Sergiy-Moskalets,1,https://github.com/liblouis/liblouis/pull/452,Use a standard license header,Use a standard license header,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,1,https://github.com/liblouis/liblouis/pull/453,Add ukrainian tables,Add ukrainian tables,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/453#issuecomment-344562646,Add ukrainian tables,"Hey @Sergiy-Moskalets thanks for your PRs. I would love to merge, as far as I know we do not have any Ukranian tables so far.
It would really help the process if you could do the following:

 Put all files you want to include into one Pull Request. Then the tests would presumably pass since all the include files are there
 Change the license of all files to LGPLv2+. Some files already do have that license, some still say ""...either version 3 of the...""
 Can you use the ISO 3166-2 code ua for you tables? So for example ua-letters.dis or ua-g1.utb No actually use the ISO 639-1 language code as you did.
 What would really be great if you had some tests in the form of YAML tests
 And what I would also appreciate is if you had a reference to some braille standard that you comply with

Thanks
Looking forward to integrate your tables",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/453#issuecomment-344590500,Add ukrainian tables,"First of all thanks for wanting to contribute to Liblouis.
I agree with all of Christians comments, except what he said about the ISO 3166-2 code. Tables are named primarily according to the language, not the region, basically exactly like you did. However region codes should not be present unless there can be an ambiguity. So the ""ua"" should preferably be removed from the file names. Also the ""locale"" metadata field should contain the language code: locale: uk and not locale: ua.
But there is one important additional problem I have with your tables. They are clearly just copied from the Russian tables with a few small modifications. The first problem with this is that it is not OK to put your name at the top of the files and simply remove other people's names. Note that you can also not just change the license like Christian requested.
The second problem is that I don't like this way of working. Ideally the starting point of a table should always be a braille specification. By starting from a copy of another table, you get a lot of stuff that possibly isn't checked for correctness and there's no way to find out where it came from. Especially if you remove all traces of the original authors. A good example to illustrate that this way of working is problematic is that because there were too many Russian tables (two for computer braille and two for literary braille) and you copied all of them there are now also too many Ukrainian tables, which possibly contradict each other in some areas.
I took a diff between the Ukrainian and Russian tables in order to understand what's going on:

uk-letters.dis vs. ru-letters.dis: identical
uk-ua-g1.utb vs. ru-ru-g1.utb: 4 letters added
uk-ua.dis vs. ru-ru.dis: 1 entry changed, 1 entry added
uk-chardefs.cti vs. ru-chardefs.cti: 4 letters added
uk-litbrl.ctb vs. ru-litbrl.ctb: 4 letters added to cyrillic, uppercyrillic and lowercyrillic classes
uk-compbrl.ctb vs. ru-compbrl.ctb: 4 letters added to cyrillic, uppercyrillic and lowercyrillic classes
uk.ctb vs. ru.ctb: added 1 punctuation rule, added 4 letters, also changed a letter description in a comment
uk.tbl vs. ru.tbl: changed locale field

(By the way I also saw some encoding errors in uk-ua-g1.utb and tables/uk.ctb.)
Obviously the Ukrainian and Russian braille codes are related and have a lot in common. Maybe they are even identical? That should be reflected in the tables with include rules. The Ukrainian tables should either include the Russian tables, or they should both include common tables, e.g. for Cyrillic script, or there should maybe even be a single table for both languages.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/453#issuecomment-344600916,Add ukrainian tables,"Ah, yes, @bertfrees is right. Use the ISO 639-1 language code for the table. I'll edit my comment above accordingly",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,5,https://github.com/liblouis/liblouis/pull/453#issuecomment-344669927,Add ukrainian tables,"Dear Bert!
Thank you for your comments. I will try to answer.

I understood the comments on the file names. It is necessary to remove the UA from the name and contents of the files, so as not to create confusion.
I have a goal that printers can print Ukrainian letters without preliminary processing. I turned to Index Braille and offered my help, although I am not an expert, but I know Brail and is able to understand some of the sciences.
I was offered to put the tables in the Libloid. I looked at the tables and approximately figured out what to do. But I decided to ask for help from Igor Boretsky, who ruled some of the tables in Russian. Igor does not have free time and suggested that I do it myself, and take as a basis tables of Russian letters. I put the name at the top of the table, since this is the responsibility of the tables and I could not leave the old authors. I do not need my name on the table if someone is willing to take responsibility and help with this.
I added Ukrainian symbols to Table 4, but I did not remove 4 Russian symbols from the tables that are not included in the Ukrainian alphabet. This is necessary in order to work comfortably with both languages.
Add Ukrainian characters to the Russian table will be incorrect. Today we have similar rules of writing, and tomorrow will be different and the priority of Ukraine's rules will need to be specified. Igor Boretsky also spoke in favor of individual tables. But I took the responsibility not to remove Russian letters for the convenience of Ukrainian users.

Dear Christians!
I do not have experience of such work and I have to figure out how to cope with all the comments.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/453#issuecomment-344688445,Add ukrainian tables,"Yes. But you don't have to worry too much about the file names. It's not that important. I mainly just wanted to correct what Christian said before in order not to give you wrong advise.


OK. That's fine. We don't need experts. We're already happy that someone is concerned about Ukrainian in Liblouis. And we're here to help you with the technical aspect. It would be nice though, as Christian already mentioned, to have a reference to an official braille standard that you comply with, if possible. This way we have something to fall back to if there is a dispute about the table later.


I understand you didn't want to make the original authors of the Russian table responsible for maintaining the Ukrainian table. However there is a difference between authors and maintainers. It's perfectly fine to put your name in the table, but you should always give credit to the real authors. By the way I think it's a shame that Igor Boretsky didn't want to help you with the table, and I also think the advise he gave you, namely starting from a copy of the Russian tables, was not so great.


OK, if both you and Igor say that a single table for both languages is not the best solution, I accept that, but still it should be possible to either have the Ukrainian table include the Russian table and add some rules specific to Ukrainian, or to have both tables include a table with common rules.


What would really be helpful is if you could provide us with a set of examples that show exactly how Ukrainian braille differs from Russian. Examples of Ukrainian text that wouldn't be translated correctly when the Russian table is used. This is what Christian meant earlier with ""tests"". We have a special format for writing these tests (YAML) but you don't have to worry about the format. If the requirements are sorted out, we don't even need you to refactor the table, then we can take it from there alone, based on the requirements.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,7,https://github.com/liblouis/liblouis/pull/453#issuecomment-344708443,Add ukrainian tables,"Official braille standard for Ukraine is missing or I do not know about it.


I ask you to correct this in accordance with project rules and ethical standards.


In the Ukrainian alphabet there are letters ""Іі"", ""Єє"", ""Її"" ""Ґґ"". In the Russian alphabet there are none.
In the Russian alphabet, there are the letters ""Ёё"", ""Ээ"", ""Ыы"", ""Ъъ"", which are not in the Ukrainian alphabet, but they should be left to allow printers and displays to perceive them.
In Ukrainian there is a symbol ""'"". The character is written inside the word and is not separated by spaces.
And in Russian, and in the Ukrainian language after the punctuation "","" there is no space. Ie the comma is not separated by spaces on either side, or on the other.
I do not know any more writing features. All punctuation marks and mathematical formulas and actions are written analogously to the Russian rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/453#issuecomment-345024584,Add ukrainian tables,"Could you give me some actual examples? Some text input and the corresponding braille translation, that demonstrate what you just explained in words.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,9,https://github.com/liblouis/liblouis/pull/453#issuecomment-345059657,Add ukrainian tables,"Вона мріє про зів’яле листя на ґанку, але її мрії не збува-
ються.
Этот подъём был круче, тяжелее прежнего.
123,5+46=169,5
1, 3, 5, 7, 11, 13, 17, 19,
23
½",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,10,https://github.com/liblouis/liblouis/pull/453#issuecomment-345060550,Add ukrainian tables,"I am sorry. I was looking for ways, but did not find how to place the text here in Braille. The characters were not displayed correctly. Then I had to place a picture.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/reiner-dolp,11,https://github.com/liblouis/liblouis/pull/453#issuecomment-345221629,Add ukrainian tables,"The characters were not displayed correctly.

Try installing a font containing braille characters on your computer, e.g. Deja Vu.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,12,https://github.com/liblouis/liblouis/pull/453#issuecomment-345303821,Add ukrainian tables,I have 6 braille fonts installed. But they do not support the Cyrillic. Especially it concerns specific letters of the Ukrainian alphabet.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,13,https://github.com/liblouis/liblouis/pull/453#issuecomment-345773094,Add ukrainian tables,"Good day!
I can not copy here Ukrainian letters in Braille. Only a picture.
What can I do to solve the problem?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/453#issuecomment-345773573,Add ukrainian tables,"Github also allows you to attach files to issues. Maybe that is a solution? Or, you can of course also just commit a file to this branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,15,https://github.com/liblouis/liblouis/pull/453#issuecomment-345781882,Add ukrainian tables,"I can get Braille with Cyrillic letters only in the DBT program. When copying to any other program, the characters are displayed incorrectly.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/453#issuecomment-345787891,Add ukrainian tables,"OK I get it, it's a more general problem with fonts.
So are you saying that there is no way you can type a Braille text and get Unicode braille symbols as output?
How do you usually send braille files to other people?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,17,https://github.com/liblouis/liblouis/pull/453#issuecomment-345796783,Add ukrainian tables,"I never sent such files.  And I do not know those people that are sent. What for?
The Braille format is used only in the DBT program as a blank for printing books.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/453#issuecomment-345805119,Add ukrainian tables,"But you are using DBT... Doesn't DBT have some kind of export function or something? Just give me anything. I don't care about the format, as long as it is not a picture.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,19,https://github.com/liblouis/liblouis/pull/453#issuecomment-345822337,Add ukrainian tables,"Вона мріє про зів’яле листя на ґанку, але її мрії не збува-
ються.
Этот подъём был круче, тяжелее прежнего.
123,5+46=169,5
1, 3, 5, 7, 11, 13, 17, 19, 23
½
⠺⠕⠝⠁ ⠍⠗⠽⠜ ⠏⠗⠕ ⠵⠽⠺⠄⠫⠇⠑ ⠇⠊⠎⠞⠫ ⠝⠁ ⠻⠁⠝⠅⠥⠂⠁⠇⠑ ⠹⠹ ⠍⠗⠽⠹ ⠝⠑ ⠵⠃⠥⠺⠁⠤
⠳⠞⠾⠎⠫⠲
⠪⠞⠕⠞ ⠏⠕⠙⠷⠡⠍ ⠃⠮⠇ ⠅⠗⠥⠟⠑⠂⠞⠫⠚⠑⠇⠑⠑ ⠏⠗⠑⠚⠝⠑⠛⠕⠲
⠼⠁⠃⠉⠂⠑ ⠖⠼⠙⠋ ⠶⠼⠁⠋⠊⠂⠑
⠼⠁⠂⠼⠉⠂⠼⠑⠂⠼⠛⠂⠼⠁⠁⠂⠼⠁⠉⠂⠼⠁⠛⠂⠼⠁⠊⠂⠼⠃⠉
⠼⠁⠆",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,20,https://github.com/liblouis/liblouis/pull/453#issuecomment-345822697,Add ukrainian tables,"1.txt
2.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/453#issuecomment-345827842,Add ukrainian tables,Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,22,https://github.com/liblouis/liblouis/pull/453#issuecomment-362916972,Add ukrainian tables,"Dear bertfrees, egli!
I ask you to tell, can the printer manufacturer use this table or something else you need to accomplish?
Thank you!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,23,https://github.com/liblouis/liblouis/pull/453#issuecomment-364901386,Add ukrainian tables,"@Sergiy-Moskalets No, it hasn't been implemented yet in the current version of Liblouis. We target the next release (5 March).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,24,https://github.com/liblouis/liblouis/pull/453#issuecomment-364906692,Add ukrainian tables,Thank you! This is great news!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/egli,25,https://github.com/liblouis/liblouis/pull/453#issuecomment-370450236,Add ukrainian tables,Superseded by #536,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/Sergiy-Moskalets,26,https://github.com/liblouis/liblouis/pull/453#issuecomment-435192486,Add ukrainian tables,"Dear Sirs! I ask for help to understand. In the announcement of the liblouis-3.5.0 version there is a mention of a new table for the Ukrainian language.
_
New table for Ukrainian thanks to Sergiy Moskalets.
_
But I do not see this table in liblouis 3.5, 3.6, 3.7. and so far we cannot use direct printing for text. Why?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,453,2017-11-14T23:04:52Z,2018-03-05T15:12:29Z,2018-11-01T22:11:57Z,CLOSED,False,119,0,1,https://github.com/Sergiy-Moskalets,Create uk-letters.dis,1,['tables'],https://github.com/liblouis/liblouis/pull/453,https://github.com/bertfrees,27,https://github.com/liblouis/liblouis/pull/453#issuecomment-435204716,Add ukrainian tables,The table is there alright. The file name is uk.utb.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,454,2017-11-17T07:52:56Z,2017-11-20T12:12:48Z,2017-11-20T12:12:48Z,MERGED,True,31,2,4,https://github.com/hammera,Added some new rules with hungarian grade 1 and grade 2 tables,2,[],https://github.com/liblouis/liblouis/pull/454,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/454,"Hi Chris,
I doed few modifications with hungarian grade 1 and grade 2 tables.
Before Liblouis 3.4.0 release publication please merge these changes with Liblouis master branch source tree.
The usual lou_checktable hu-hu-g1.ctb and lou_checktable hu-hu-g2.ctb commands passed right without errors.
Attila","Hi Chris,
I doed few modifications with hungarian grade 1 and grade 2 tables.
Before Liblouis 3.4.0 release publication please merge these changes with Liblouis master branch source tree.
The usual lou_checktable hu-hu-g1.ctb and lou_checktable hu-hu-g2.ctb commands passed right without errors.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,454,2017-11-17T07:52:56Z,2017-11-20T12:12:48Z,2017-11-20T12:12:48Z,MERGED,True,31,2,4,https://github.com/hammera,Added some new rules with hungarian grade 1 and grade 2 tables,2,[],https://github.com/liblouis/liblouis/pull/454,https://github.com/hammera,2,https://github.com/liblouis/liblouis/pull/454#issuecomment-345186021,"Hi Chris,
I doed few modifications with hungarian grade 1 and grade 2 tables.
Before Liblouis 3.4.0 release publication please merge these changes with Liblouis master branch source tree.
The usual lou_checktable hu-hu-g1.ctb and lou_checktable hu-hu-g2.ctb commands passed right without errors.
Attila","Ok, the Travis build now passed right after quotation characters order change.
In the tests directory all hungarian harness Yaml file passed right when I ran make check command.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,456,2017-11-20T17:16:39Z,2017-11-21T12:23:58Z,2017-11-21T12:24:09Z,MERGED,True,254,232,11,https://github.com/bertfrees,Maketable fixes,11,[],https://github.com/liblouis/liblouis/pull/456,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/456,see issue #455,see issue #455,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,456,2017-11-20T17:16:39Z,2017-11-21T12:23:58Z,2017-11-21T12:24:09Z,MERGED,True,254,232,11,https://github.com/bertfrees,Maketable fixes,11,[],https://github.com/liblouis/liblouis/pull/456,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/456#issuecomment-345992930,see issue #455,Go ahead.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/457,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/457#issuecomment-346115708,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).",I'm not so sure about accepting the hyphenation table. See #334.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/457#issuecomment-346118292,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","What do you mean with ""it (midnum) used to work previously""?
midnum should indeed work like you described and as far as I know it isn't broken.
I made this little test just to be sure:
# see http://snaekobbi.github.io/liblouis-table-spec/#midnum
table: |
  digit 0 245
  punctuation . 256
  punctuation , 6
  sign # 3456
  numsign 3456
  midnum , 256
tests:
  - - ""0,0""
    - ""#0.0""
  - - ""0.0""
    - ""#0.#0""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/457#issuecomment-346119234,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","@rimas-kudelis Could you maybe explain in lt-6dot_harness.yaml what exactly you want to achieve with the numericmodechars ,:. rule?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/rimas-kudelis,5,https://github.com/liblouis/liblouis/pull/457#issuecomment-346125918,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","@bertfrees thanks for looking into this!
I can push the table without hyphenation if that's the desired direction. I'm all for using libhyphen and its own dictionaries instead of having their copies here (and even code, hehe, sorry @BueVest). However, assuming that libhyphen isn't being used currently, and there is no ETA for adding its support, I'm also kinda tempted to leave that table be here. Cuz well, you just never know...
Regarding midnum and numericmodechars ,:., what I want to achieve is for these three characters to neither start, nor cancel numeric mode. But with the current numericmodechars rule, here's what happens:
$ echo '123,:.123 abc,:.123 abc,:.abc' | ../tools/lou_translate -f lt-6dot.utb 
⠼abc,:.abc abc⠼,:.abc abc,:.abc

Notice how the numbers indicator jumped in front of ,:. in the second string.
Whereas if I replace this rule with three midnum rules, I get this:
$ echo '123,:.123 abc,:.123 abc,:.abc' | ../tools/lou_translate -f lt-6dot.utb 
⠼abc,:.⠼abc abc,:.⠼abc abc,:.abc

Note how the first string has two number indicators instead of just one now. Also, same happens when there's only a comma or a full stop, or a colon there.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/457#issuecomment-346129060,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","OK so just to be clear what is the expected output? Then I can maybe help you find a solution.
Like this?
⠼abc,:.abc abc,:.⠼abc abc,:.abc",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/rimas-kudelis,7,https://github.com/liblouis/liblouis/pull/457#issuecomment-346129741,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","Yes, exactly this. Do you want me to add the failing test? :)",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/rimas-kudelis,8,https://github.com/liblouis/liblouis/pull/457#issuecomment-346140130,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).",Done.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/rimas-kudelis,9,https://github.com/liblouis/liblouis/pull/457#issuecomment-346409055,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","OK... So apparently, numericnocontchars is the offender: if this opcode is present, midnum does not work. @bertfrees can you confirm?
What's the best way for me to work this around in the short term?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/rimas-kudelis,10,https://github.com/liblouis/liblouis/pull/457#issuecomment-346440386,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","With a bit of hackery, I managed to work around all issues, even liblouis bugs. Will send the table to Tadas for testing immediately. If his tests succeed as well, I think we're ready for inclusion.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/457#issuecomment-346466407,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).",I can confirm it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/457#issuecomment-347179673,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).",@rimas-kudelis Do you intend to use this table with liblouisutdml yourself?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/rimas-kudelis,13,https://github.com/liblouis/liblouis/pull/457#issuecomment-347192679,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","No, not myself.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/457#issuecomment-348932461,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).",As agreed with Rimas on IRC I will drop the hyphenation table and put it in a liblouisutdml PR.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/egli,15,https://github.com/liblouis/liblouis/pull/457#issuecomment-348946665,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","OK... So apparently, numericnocontchars is the offender: if this opcode is present, midnum does not work.

@rimas-kudelis is there an issue for this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,457,2017-11-20T20:21:10Z,2017-12-04T12:20:05Z,2017-12-04T16:47:55Z,MERGED,True,323,0,6,https://github.com/rimas-kudelis,Added Lithuanian 6-dot table,6,['tables'],https://github.com/liblouis/liblouis/pull/457,https://github.com/rimas-kudelis,16,https://github.com/liblouis/liblouis/pull/457#issuecomment-349023249,"This adds a Lithuanian 6-dot table.
There are a few rough edges around it, which are all related to indicators, but in general, I think I want the table in, especially since the the next release is approaching really fast now.
Already reported issues that affect this table are:

 #439. Somehow the Danish table doesn't exhibit this bug. I'm not sure if it's related to my use of numericmodechars which is still not documented, but I tried to achieve same using midnum, and it just didn't work: with midnum . 256, text 123.123 when translated, would have a number indicator after the dot as well. It used to work previously, and still works for the Danish table, so I'm kinda lost, and am not sure what I'm missing here. Any hints would be appreciated.
 #400. Happens during back-translation only, so I suppose users will just have to learn to cancel numeric mode explicitly when typing. Although I would definitely prefer to avoid it.
 #401. I've worked around this one by reversing the order of definitions (both definitions seem to work if numsign goes first).
 #384. Avoided it for now by excluding part of the planned functionality (automatic treatment of all foreign accented letters as base latin ones).","@egli I filed this as #479.
My impression was that midnum might be deprecated in the near future, that's perhaps why I hesitated.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,458,2017-11-20T20:44:31Z,2017-11-21T15:56:52Z,2017-11-21T16:09:44Z,MERGED,True,34,0,1,https://github.com/rimas-kudelis,Updated test for issue #401,1,[],https://github.com/liblouis/liblouis/pull/458,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/458,"Apparently, order of the two rules involved matters.","Apparently, order of the two rules involved matters.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,458,2017-11-20T20:44:31Z,2017-11-21T15:56:52Z,2017-11-21T16:09:44Z,MERGED,True,34,0,1,https://github.com/rimas-kudelis,Updated test for issue #401,1,[],https://github.com/liblouis/liblouis/pull/458,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/458#issuecomment-345828206,"Apparently, order of the two rules involved matters.",Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/tsengeltech,1,https://github.com/liblouis/liblouis/pull/459,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.","The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/459#issuecomment-345993307,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.",The tests are failing because they need to be updated.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/tsengeltech,3,https://github.com/liblouis/liblouis/pull/459#issuecomment-346002937,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.",Thank you so much for replying. Which version of UEB is the latest version that I have to include in our table? Can I include ueb grade 1 table in the liblouis master 3.3 zip?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/tsengeltech,4,https://github.com/liblouis/liblouis/pull/459#issuecomment-346009601,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.","Also, I don't get what exactly I have to update. Should I make completely new table from scratch? Or i'm missing something... hope I don't bother you... :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/459#issuecomment-346010007,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.","Which version of UEB is the latest version that I have to include in our table? Can I include ueb grade 1 table in the liblouis master 3.3 zip?

As far as I can tell you should just be able to say the following in your table:
include en-ueb-g1.ctb

This should work in version 3.3
As for the test that is failing: You need to fix the expected string in the YAML test. Presumably since you changed the capsletter the expected braille is now slightly different.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/459#issuecomment-346010814,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.","Also, I don't get what exactly I have to update. Should I make completely new table from scratch?

No no, your table is fine

Or i'm missing something...

It is the YAML test file that needs to be updated. You can do this in the same branch as you did the table change. Then you can just push the change and it will be attached to this pull request.

hope I don't bother you... :)

No, absolutely no problem. Thank you for submitting your improvements.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/tsengeltech,7,https://github.com/liblouis/liblouis/pull/459#issuecomment-346030038,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.",It is changed to pending 1 check from failure. now that is a success :P.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/459#issuecomment-346050353,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.","Well, you changed the wrong thing :-). I added some comments to the test file to make it clear what all the things mean (more explanation can be found in the documentation:
table: [tables/unicode.dis, tables/mn-MN.utb] # this line defines which tables are used for the test
tests: # everything after this are the tests
  - # Hello world # this is a comment for the following test
    - Сайн байна уу дэлхий # the text to convert to braille
    - ⠘⠎⠁⠯⠝ ⠃⠁⠯⠝⠁ ⠥⠥ ⠙⠪⠇⠓⠊⠯ # the braille that is expected for above text
So essentially all you have to do is to change the braille in the last line to conform to the new caps letter rule.
Hope that helps",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/tsengeltech,9,https://github.com/liblouis/liblouis/pull/459#issuecomment-346218662,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.","Dear Christian, thank you so much. Finally I understood what I had to change. Also I think I will add something in the license before we finish this time around. In the next update, We have a lot to change. Before that I have a lot to learn too. If I got it correctly that next update would be held in march, after this 3.4 that is. Anyway I hope that it is no problem to add something again  in few hours at most. :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/459#issuecomment-346340438,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.",Thanks @tsengeltech will be in the 3.4 release,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,459,2017-11-21T01:36:00Z,2017-11-22T12:47:11Z,2017-11-24T08:13:42Z,MERGED,True,3,3,2,https://github.com/tsengeltech,Cap sign change,3,[],https://github.com/liblouis/liblouis/pull/459,https://github.com/tsengeltech,11,https://github.com/liblouis/liblouis/pull/459#issuecomment-346759736,"The Mongolian standard capp letter sign was changed to dot 6 following the changes of ueb English. Therefore, I have changed the former cap letter sign which was dots 45, I changed it to dot 6 as same as English UEB braille.","Dear Christian

I am Tsengel and
Thanks so much you and I am glad to your support for cap sign replacement!
So how can we rename Mongolian table to Mongolian 6 dot grade one braille include next 3.4 version
And we need to create Mongolian 6 dot grade two braille table and Mongolian 8 dot braille table.
How can we start process it?

Sincerely
M. Tsengel",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,461,2017-11-21T12:45:52Z,2018-12-03T10:25:50Z,2019-05-28T13:31:03Z,MERGED,True,53016,12507,27,https://github.com/egli,Upstream the SBS German tables,25,['tables'],https://github.com/liblouis/liblouis/pull/461,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/461,"The German tables from SBS have been kept in a separate repo. We would like to move them upstream.
At the moment the branch only contains the tests that were extracted and migrated from an older test suite. The tables will follow.","The German tables from SBS have been kept in a separate repo. We would like to move them upstream.
At the moment the branch only contains the tests that were extracted and migrated from an older test suite. The tables will follow.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,461,2017-11-21T12:45:52Z,2018-12-03T10:25:50Z,2019-05-28T13:31:03Z,MERGED,True,53016,12507,27,https://github.com/egli,Upstream the SBS German tables,25,['tables'],https://github.com/liblouis/liblouis/pull/461,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/461#issuecomment-346017268,"The German tables from SBS have been kept in a separate repo. We would like to move them upstream.
At the moment the branch only contains the tests that were extracted and migrated from an older test suite. The tables will follow.",So if I understand correctly you took 1% of the total corpus and made it into a YAML test?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,461,2017-11-21T12:45:52Z,2018-12-03T10:25:50Z,2019-05-28T13:31:03Z,MERGED,True,53016,12507,27,https://github.com/egli,Upstream the SBS German tables,25,['tables'],https://github.com/liblouis/liblouis/pull/461,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/461#issuecomment-346017604,"The German tables from SBS have been kept in a separate repo. We would like to move them upstream.
At the moment the branch only contains the tests that were extracted and migrated from an older test suite. The tables will follow.",I took randomly 10k words for grade1 and randomly 10k words for grade 2 and made them into a YAML test yes.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,461,2017-11-21T12:45:52Z,2018-12-03T10:25:50Z,2019-05-28T13:31:03Z,MERGED,True,53016,12507,27,https://github.com/egli,Upstream the SBS German tables,25,['tables'],https://github.com/liblouis/liblouis/pull/461,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/461#issuecomment-346017716,"The German tables from SBS have been kept in a separate repo. We would like to move them upstream.
At the moment the branch only contains the tests that were extracted and migrated from an older test suite. The tables will follow.",OK cool.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,461,2017-11-21T12:45:52Z,2018-12-03T10:25:50Z,2019-05-28T13:31:03Z,MERGED,True,53016,12507,27,https://github.com/egli,Upstream the SBS German tables,25,['tables'],https://github.com/liblouis/liblouis/pull/461,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/461#issuecomment-442381470,"The German tables from SBS have been kept in a separate repo. We would like to move them upstream.
At the moment the branch only contains the tests that were extracted and migrated from an older test suite. The tables will follow.","One more comment: are you sure you want the new file names (de-g0.utb, de-g1.ctb, de-g2.ctb)? You could also just keep using de-de-g0.utb, etc. We should avoid renames if not really necessary.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,461,2017-11-21T12:45:52Z,2018-12-03T10:25:50Z,2019-05-28T13:31:03Z,MERGED,True,53016,12507,27,https://github.com/egli,Upstream the SBS German tables,25,['tables'],https://github.com/liblouis/liblouis/pull/461,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/461#issuecomment-442388985,"The German tables from SBS have been kept in a separate repo. We would like to move them upstream.
At the moment the branch only contains the tests that were extracted and migrated from an older test suite. The tables will follow.","I see where you are coming from and the name change is also the reason for the build failure (the tests in liblouis-js hard code some table names).
However apparently before we had different tables for German German and for Swiss German. Now there is just one set, hence the name change.
If we were to keep the name then we'd keep de-de-g* and delete de-ch-*. As the PR is now we remove de-de-* and de-ch-* and add de-*.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,461,2017-11-21T12:45:52Z,2018-12-03T10:25:50Z,2019-05-28T13:31:03Z,MERGED,True,53016,12507,27,https://github.com/egli,Upstream the SBS German tables,25,['tables'],https://github.com/liblouis/liblouis/pull/461,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/461#issuecomment-442389755,"The German tables from SBS have been kept in a separate repo. We would like to move them upstream.
At the moment the branch only contains the tests that were extracted and migrated from an older test suite. The tables will follow.",Yes I know that. Still I think it would be fine to just delete the Swiss.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,463,2017-11-23T08:59:21Z,2017-11-27T11:09:46Z,2017-11-27T11:09:51Z,MERGED,True,277,199,4,https://github.com/egli,Updates to SEB British Braille Table,2,['tables'],https://github.com/liblouis/liblouis/pull/463,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/463,"This is an attempt to salvage the updates from #29. I ported the tables to the new syntax used since version 3.0 of liblouis.
The test still fail because ukchardefs.cti now defines punctuation ( 2356 as opposed to punctuation ( 12356 as it was previously. That is not  a problem in itself. The problem is that UEBC-g2.ctb still uses the dot pattern 12356 in several places:
tables/UEBC-g2.ctb:289: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:430: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:490: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:491: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:492: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:493: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:688: error: Dot pattern \23456/ is not defined.

An example of this is the following:
sufword geoff 1245-15-12356-124 Geoffrey

@torchtrust can you fix these problems in UEBC-g2.ctb and send me a new version of the file? Please use the version of UEBC-g2.ctb that is attached to this pull request, not an old version that you might have lying around.
Thanks","This is an attempt to salvage the updates from #29. I ported the tables to the new syntax used since version 3.0 of liblouis.
The test still fail because ukchardefs.cti now defines punctuation ( 2356 as opposed to punctuation ( 12356 as it was previously. That is not  a problem in itself. The problem is that UEBC-g2.ctb still uses the dot pattern 12356 in several places:
tables/UEBC-g2.ctb:289: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:430: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:490: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:491: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:492: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:493: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:688: error: Dot pattern \23456/ is not defined.

An example of this is the following:
sufword geoff 1245-15-12356-124 Geoffrey

@torchtrust can you fix these problems in UEBC-g2.ctb and send me a new version of the file? Please use the version of UEBC-g2.ctb that is attached to this pull request, not an old version that you might have lying around.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,463,2017-11-23T08:59:21Z,2017-11-27T11:09:46Z,2017-11-27T11:09:51Z,MERGED,True,277,199,4,https://github.com/egli,Updates to SEB British Braille Table,2,['tables'],https://github.com/liblouis/liblouis/pull/463,https://github.com/torchtrust,2,https://github.com/liblouis/liblouis/pull/463#issuecomment-346563388,"This is an attempt to salvage the updates from #29. I ported the tables to the new syntax used since version 3.0 of liblouis.
The test still fail because ukchardefs.cti now defines punctuation ( 2356 as opposed to punctuation ( 12356 as it was previously. That is not  a problem in itself. The problem is that UEBC-g2.ctb still uses the dot pattern 12356 in several places:
tables/UEBC-g2.ctb:289: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:430: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:490: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:491: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:492: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:493: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:688: error: Dot pattern \23456/ is not defined.

An example of this is the following:
sufword geoff 1245-15-12356-124 Geoffrey

@torchtrust can you fix these problems in UEBC-g2.ctb and send me a new version of the file? Please use the version of UEBC-g2.ctb that is attached to this pull request, not an old version that you might have lying around.
Thanks","Hi Christian,

Stupid question but what is `UEBC-g2.ctb` table? It is not the UEB tables I am using! Looks to me like legacy tables that should be removed.

Cheers
Paul",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,463,2017-11-23T08:59:21Z,2017-11-27T11:09:46Z,2017-11-27T11:09:51Z,MERGED,True,277,199,4,https://github.com/egli,Updates to SEB British Braille Table,2,['tables'],https://github.com/liblouis/liblouis/pull/463,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/463#issuecomment-346575394,"This is an attempt to salvage the updates from #29. I ported the tables to the new syntax used since version 3.0 of liblouis.
The test still fail because ukchardefs.cti now defines punctuation ( 2356 as opposed to punctuation ( 12356 as it was previously. That is not  a problem in itself. The problem is that UEBC-g2.ctb still uses the dot pattern 12356 in several places:
tables/UEBC-g2.ctb:289: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:430: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:490: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:491: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:492: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:493: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:688: error: Dot pattern \23456/ is not defined.

An example of this is the following:
sufword geoff 1245-15-12356-124 Geoffrey

@torchtrust can you fix these problems in UEBC-g2.ctb and send me a new version of the file? Please use the version of UEBC-g2.ctb that is attached to this pull request, not an old version that you might have lying around.
Thanks","Aha, now I'm starting to understand. You changed ukchardefs.cti and that had some effects on another table (UEBC-g2.ctb) which you aren't even using. I have no idea what this table is and whether it is still used. It seems to be a very old table. Maybe it is an old UEB table used in the UK? Do you know anything about it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,463,2017-11-23T08:59:21Z,2017-11-27T11:09:46Z,2017-11-27T11:09:51Z,MERGED,True,277,199,4,https://github.com/egli,Updates to SEB British Braille Table,2,['tables'],https://github.com/liblouis/liblouis/pull/463,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/463#issuecomment-346577690,"This is an attempt to salvage the updates from #29. I ported the tables to the new syntax used since version 3.0 of liblouis.
The test still fail because ukchardefs.cti now defines punctuation ( 2356 as opposed to punctuation ( 12356 as it was previously. That is not  a problem in itself. The problem is that UEBC-g2.ctb still uses the dot pattern 12356 in several places:
tables/UEBC-g2.ctb:289: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:430: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:490: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:491: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:492: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:493: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:688: error: Dot pattern \23456/ is not defined.

An example of this is the following:
sufword geoff 1245-15-12356-124 Geoffrey

@torchtrust can you fix these problems in UEBC-g2.ctb and send me a new version of the file? Please use the version of UEBC-g2.ctb that is attached to this pull request, not an old version that you might have lying around.
Thanks","Yeah it's a very old table. For some reason I thought it was still marginally relevant because somebody had made changes to it when the new UEB table already existed, but now I checked and it seems it was last modified in 2009. In other words it should be safe to remove.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,463,2017-11-23T08:59:21Z,2017-11-27T11:09:46Z,2017-11-27T11:09:51Z,MERGED,True,277,199,4,https://github.com/egli,Updates to SEB British Braille Table,2,['tables'],https://github.com/liblouis/liblouis/pull/463,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/463#issuecomment-346589425,"This is an attempt to salvage the updates from #29. I ported the tables to the new syntax used since version 3.0 of liblouis.
The test still fail because ukchardefs.cti now defines punctuation ( 2356 as opposed to punctuation ( 12356 as it was previously. That is not  a problem in itself. The problem is that UEBC-g2.ctb still uses the dot pattern 12356 in several places:
tables/UEBC-g2.ctb:289: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:430: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:490: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:491: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:492: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:493: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:688: error: Dot pattern \23456/ is not defined.

An example of this is the following:
sufword geoff 1245-15-12356-124 Geoffrey

@torchtrust can you fix these problems in UEBC-g2.ctb and send me a new version of the file? Please use the version of UEBC-g2.ctb that is attached to this pull request, not an old version that you might have lying around.
Thanks","I probably got confused by this other UEB branch (by Mesar, Joseph and Ken) we have and for which I once did a merge effort (f2a40c6). That was quite a bit of work by the way and it's too bad this was never integrated.
I did the merge a few months after Mike Gray came a long and did a lot of changes to UEB, but at that time Mike was still working on his own branch so I basically only merged two of the three branches existing at that time.
Run gitk master origin/tables/ueb -- tables/en-ueb-g* and gitk origin/tables/ueb ^master  to see what happened.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,463,2017-11-23T08:59:21Z,2017-11-27T11:09:46Z,2017-11-27T11:09:51Z,MERGED,True,277,199,4,https://github.com/egli,Updates to SEB British Braille Table,2,['tables'],https://github.com/liblouis/liblouis/pull/463,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/463#issuecomment-346608935,"This is an attempt to salvage the updates from #29. I ported the tables to the new syntax used since version 3.0 of liblouis.
The test still fail because ukchardefs.cti now defines punctuation ( 2356 as opposed to punctuation ( 12356 as it was previously. That is not  a problem in itself. The problem is that UEBC-g2.ctb still uses the dot pattern 12356 in several places:
tables/UEBC-g2.ctb:289: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:430: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:490: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:491: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:492: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:493: error: Dot pattern \12356/ is not defined.
tables/UEBC-g2.ctb:688: error: Dot pattern \23456/ is not defined.

An example of this is the following:
sufword geoff 1245-15-12356-124 Geoffrey

@torchtrust can you fix these problems in UEBC-g2.ctb and send me a new version of the file? Please use the version of UEBC-g2.ctb that is attached to this pull request, not an old version that you might have lying around.
Thanks","Call it a hack if you will, but I simply redefined the punctuation ( 12356 in UEBC-g2.ctb",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/465,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/465#issuecomment-347110643,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,"Generally I'm very happy that you added YAML tests. What I'm not so happy about is that the tests fail now :-)
If I understand correctly there are two YAML tests now. fr-bfu-g2.yaml and fr-bfu-comp6.yaml. As far as I can tell the first one hasn't been properly integrated in the build process. You need to add the YAML file to the appropriate section in tests/Makefile.am and tests/yaml/Makefile.am. Then run ./autogen.sh && ./configure again. Then it will also pick up the tests from fr-bfu-g2.yaml when running make check.
If you want this to be in the upcoming release then all tests have to pass. If you want to leave some know bugs in the release then mark the failing tests with xfail.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/aaclause,3,https://github.com/liblouis/liblouis/pull/465#issuecomment-347127009,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,"@egli thank you for your explanations! I am a newbie, sorry.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/465#issuecomment-347144640,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,"@Andre9642 don't worry, you're doing a great job, thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/465#issuecomment-347196085,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,"Finally we have some decent tests for French now, awesome!
@Andre9642 I was wondering if you could help us with the metadata for the French tables. The following is what I could gather from looking at the file. But this should be verified by an expert (i.e. you or Michel).
fr-bfu-comp6.utb
#+locale:fr
#+type:literary
#+contraction:no
#+dots:6

fr-bfu-comp8.utb
#+locale:fr
#+type:computer
#+dots:8

fr-bfu-g2.ctb
#+locale:fr
#+type:literary
#+contraction:full
#+grade:2

Do you see something that is wrong or could be added? For instance, I'm not sure about type: computer for fr-bfu-comp8.utb because it includes fr-bfu-comp68.uti which has multi-cell pattern which is not common for computer braille as far as I know.
The meaning of the metadata fields are explained in https://github.com/liblouis/liblouis/wiki/Table-discovery-based-on-table-metadata#standard-metadata-tags.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/465#issuecomment-347316220,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,"@Andre9642 Thank you for adding the metadata! Instead of the sections that you just removed, you can add the following:
#-display-name: Unified French 6 dots
#-author: Michel Such <michel.such@free.fr>
#-author: André-Abush CLAUSE <dev@andreabc.net>
#-author: Ludovic Oger <oger.ludovic@gmail.com>
#-author: Nicolas Pitre <nico@cam.org>
#-author: The BRLTTY Team <http://brltty.com/>
#-license: LGPL
#-updated: 2017-11-27

Note the #- format, the fact that I didn't enclose anything in quotes, that I used some other key names, that I put more than one ""author"" field, and that I used hyphens instead of camel case.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/465#issuecomment-347316918,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,Don't worry about the remaining build failure. I will fix that. (I'll cherry-pick 16d0481 and f702c14.),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/aaclause,8,https://github.com/liblouis/liblouis/pull/465#issuecomment-347326595,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,@bertfrees Thanks you! It seems that there are still errors. Nevertheless lou_checktable does not report any.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/465#issuecomment-347451012,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,"No, it's check_included_tables.sh that fails. But don't worry about that, I'll take care of it before merging.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/aaclause,10,https://github.com/liblouis/liblouis/pull/465#issuecomment-347475112,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,@bertfrees OK. :) What is the deadline for merging? There are still some tricky problems with french grade 2 table... :/,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/465#issuecomment-347479593,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,"What is the deadline for merging?

Well I don't like to give a hard date for that. The fact is that I will cut the release on Monday December 4th. Stuff that is absolutely ready by then will go in, everything else will have to wait. On Monday I just do not have time to run after people or wait for things.
If you have more fixes to go in either make sure that they are ready the latest by Sunday or if you do not get done by Sunday there is always the next release on March 5 2018. In other words you can also just submit what is working now and add more fixes to the next release.
If you need any feedback or something is not totally kosher then I'd try to get your stuff ready before the end of this week, so we have time to iron things out.
Hope that helps",True,{'THUMBS_UP': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/465#issuecomment-348983047,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,I believe I merged everything including b311b98. I cherry picked the commits you mentioned @bertfrees and now the tests pass.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,465,2017-11-24T13:12:33Z,2017-12-04T14:47:13Z,2017-12-04T15:04:52Z,CLOSED,False,3247,523,8,https://github.com/aaclause,French tables updated,44,['tables'],https://github.com/liblouis/liblouis/pull/465,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/465#issuecomment-348988499,Here are french tables updated for better (back)translation. The biggest work was done by @MichelSuch with fr-bfu-g2 french grade 2 table.,But if I happen to forget anything just ping me. Thanks for all your work @Andre9642 !,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,466,2017-11-26T16:11:51Z,2017-11-27T11:09:21Z,2017-11-27T11:35:26Z,MERGED,True,113,47,2,https://github.com/rimas-kudelis,Updated tests for #400 and #401,2,[],https://github.com/liblouis/liblouis/pull/466,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/466,"This simplifies the strings and cases being tested, and adds a few new testcases for #400, to test cancellation of capitals as well as numbers.","This simplifies the strings and cases being tested, and adds a few new testcases for #400, to test cancellation of capitals as well as numbers.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/467,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/467#issuecomment-347218001,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","@school510587 Thanks for the update!
I was wondering if you could help me with something? I'm trying to figure out what the differences are between all the Chinese tables that Liblouis contains. They are currently labelled as:

zh-tw
zh-hk (Chinese Hong Kong Cantonese braille Translation Table)
zh-chn (Simplified-Chinese Braille Translation Table)

These names suggest that the first is applicable in Taiwan, the second in Hong Kong and the third in PRC. But I wonder if another subdivision would be better. Do any of these tables really need a region code? Of course, some languages and/or scripts are mainly used in specific regions, but if the braille rules for a specific language do not differ between regions, there is no reason to limit a table's use to a region.
So maybe zh-tw should just be called ""cmn"" (Mandarin), and zh-hk ""yue"" (Cantonese)?
On the other hand, if the braille rules apply to a specific region and are the same regardless of language used, labeling the braille table with a region tab is appropriate of course.
Braille rules could even be the same for all Chinese variants and for all regions? If that is the case there should be only one table.
zh-chn, which is a table for simplified Chinese, should maybe be called ""zh-Hans""? Wikipedia tells me that in general mainland China uses simplified characters exclusively, while Hong Kong and Taiwan use traditional characters exclusively. But could someone in Taiwan translate a Mandarin text in simplified form to braille with the zh-chn table?
Another thing that confuses me is that the zh-chn table mentions Pinyin, which if I understand correctly is a romanization of Chinese.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/school510587,3,https://github.com/liblouis/liblouis/pull/467#issuecomment-347265097,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Hi @bertfrees,

It is true that people in Taiwan, Hong Kong, and mainland learn different braille rules for the same Chinese. All of the tables are based on pronunciation, and they have nothing to do with how people write characters, i.e. traditional vs. simplified Chinese.

People in Taiwan mainly use ㄅㄆㄇㄈ (zhuyin, 注音), because students in elementary schools learn it. However, there is also a set of pinyin rules to express characters in Latin alphabets. Students are not necessary to learn these rules. I think it is mainly for communication with people whose native language is not Chinese. I am not familiar to the pinyin rules, either.

I do not know details about representation system of pronunciation used in mainland, but I am sure that students there should learn to express every word in Latin alphabets. However, zh-tw.ctb and zh-chn.ctb have several differences. First, they use different dot patterns for the same pronunciation symbol. Second, they have quite different rules in displaying tonal marks. Our zh-tw.ctb requires a tonal mark at the last cell of each Chinese word, but zh-chn.ctb does not. These reasons make the two tables incompatible with each other.

Thus, the conclusion is that different braille rules are designed separately for different ways of denoting pronunciation. I really do not know why this phenomenon exists among people using the same language called Chinese. Due to this incompatibility, documents encoded in braille cannot be exchanged between Taiwan and mainland. We can only get the plaintext in Chinese characters and convert it into braille via a proper table according to what we have learned. Of course, a Taiwanese user may convert any Chinese characters using zh-chn.ctb, for special purposes such as teaching.

May the above answer help.

By the way, this also form an obstacle for Taiwanese users to read braille output of iPhones, because there is only rules used in PRC installed. However, many of my visually impaired friends use iPhones through their healthy ears. I am totally blind with poor hearing ability, so I have no chance to enjoy expensive iPhones. :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/school510587,4,https://github.com/liblouis/liblouis/pull/467#issuecomment-347420014,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Hi @bertfrees,

Please read these 3 pages:
1. https://en.wikipedia.org/wiki/Taiwanese_Braille
2. https://en.wikipedia.org/wiki/Mainland_Chinese_Braille
3. https://en.wikipedia.org/wiki/Two-cell_Chinese_Braille

The first page is the set of rules that zh-tw.ctb follows.
The second page is the set of rules that zh-chn.ctb follows.
The third page is another set of rules used in mainland called two-cell braille, currently not implemented in any table of liblouis.
Further questions are welcome.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/467#issuecomment-347490368,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Thanks so much for the clarification. That already helped me a lot.
So let me just get things straight. The following things are clear I think:

Braille rules are based on region.
Braille transcription is based entirely on pronunciation.
Language is based more or less on region, however these regions are not exact states. PRC and Taiwan do not exclusively speak Mandarin, and Hong Kong does not exclusively speak Cantonese.
To use different writing systems (traditional vs. simplified) you need different unicode characters but also different fonts because some characters map to the same code points.

The following is not totally clear yet, but important to understand how a braille table works, since the transcription is based on pronunciation.

How does pronunciation relate to language and writing system (traditional characters, simplified characters, pinyin, zhuyin)?

In the end, what I'm interested in is which Chinese tables can be used for which combinations of region, language and writing system.
According to the Wikipedia pages, mainland Chinese braille is used in PRC for standard Mandarin. In PRC, standard Mandarin is called Putonghua and is written in simplified form. But could mainland Chinese braille also be used for other Chinese languages and dialects like for instance Cantonese or Wu? Could a braille table convert from other scripts (traditional characters or zhuyin)? What does the braille table in Liblouis currently support?
Similarly, Wikipedia says Taiwanese braille is used in Taiwan for Taiwanese Mandarin (Guoyu), which is generally written in traditional characters. But could Taiwanese braille also be used for other Chinese languages, or could a table convert from simplified characters or from zhuyin? What does the braille table in Liblouis support?
The same questions apply for Cantonese braille and two-cell Chinese braille.
Could a braille table in theory convert pinyin to braille?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/school510587,6,https://github.com/liblouis/liblouis/pull/467#issuecomment-347559510,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Hi @bertfrees,

Now there are several writing, pronunciation, and braille systems used among Taiwan, Hong Kong and PRC.

Writing system (main)
Taiwan - traditional words
PRC - simplified words

Phonics System (main)
Taiwan - zhuyin
PRC - pinyin

Braille System
Taiwan - Taiwanese Braille (based on zuyin)
PRC - Mainland/Two-cell Braille (based on pinyin)

* How does pronunciation relate to language and writing system (traditional characters, simplified characters, pinyin, zhuyin)?
Here, languages are basically distinguished by pronunciation. Mandarin and Cantonese share exactly the same character set of all Chinese words and largely different rules of pronunciation. That is, selection of writing system is independent of selection of language.

* What does the braille table in Liblouis currently support?
The key point is that the two writing systems are conceptually the same. That is, some traditional characters were ""simplified"" to construct a new writing system called simplified Chinese, but meaning of characters was unchanged. As a modern Chinese user, we should be ready to read both traditional and simplified Chinese everyday. zh-tw.ctb includes all of traditional and simplified characters. However, a user also cannot distinguish simplified characters from a mixture of both types of characters. This is also unimportant for Taiwanese users, because the semantic components are identical. When this is necessary, we can use character descriptions (eg. NVDA) or even the internal hexadecimal code of characters. The same principle also holds for zh-chn.ctb, zh-hk.ctb, and NVDA character descriptions of zh_CN, zh_HK and zh_TW. All of characterDescriptions.dic files of the three regions contain descriptions for both traditional and simplified Chinese characters.

After all, the conclusion is that the braille patterns have nothing to do with the writing systems. The same string written in ""Chinese"" can be always properly converted into Taiwanese braille, Hong Kong braille, or other two brailling rules (zh-chn.ctb and two-cell braille).

If this is not clear enough, further questions are welcome.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/467#issuecomment-347618928,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","OK, I think I'm starting to get the picture. Thanks :)
So the pronunciation, and therefore also the braille transcription, is independent from the writing system. This means that for a Liblouis table it does not matter which writing system is being used, however in order to support both, it must contain the Unicode characters of both traditional and simplified sets (which overlap to some extend but not completely). zh-tw.ctb supports both, zh-chn.ctb presumably not, and zh-hk.ctb probably also supports both but this needs to be double checked. Correct?
Mandarin and Cantonese have the same words but the pronunciation is different. Because braille transcription is based on pronunciation, this must mean that a Liblouis table for a certain braille system can only be used for the language it was designed for. So which braille system would a Cantonese-speaking user in mainland China learn (and which Liblouis table should be selected for that user)?
What about a braille table to convert from pinyin script? Would that make sense?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/school510587,8,https://github.com/liblouis/liblouis/pull/467#issuecomment-347650765,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Hi @bertfrees,

Yes, zh-chn.ctb and zh-hk.ctb should contain both traditional and simplified characters for completeness of access to all Chinese documents. However, it is an alternative that text is processed by a traditional-to-simplified conversion program, but I think it is not the case. I don't know the actual set of characters they support, so it needs to be double checked.

I think a Cantonese-speaking user in mainland China may decide the table mainly based on his/her experience. Assume that this user was born in Hong Kong, so he/she learned to speak Cantonese before education. However, he/she was placed into an elementary school in mainland China where teachers used Mandarin brailling rules (zh-chn.ctb). Then, Mandarin brailling rules may be the most impressive for him/her, and he/she can speak both languages. Therefore, I think the process of selecting tables is also weakly related to which language a user learned. Of course, you must get more precise answers from real users in mainland China.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/467#issuecomment-347669182,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","OK, the Cantonese-speaking user in China was just an example. Maybe it was a bad one, but I certainly was not talking about immigrants. I thought Cantonese is not only spoken in Hong Kong, and Macau, but is also the language spoken in the whole province of Guangdong which is a huge area. I'm just getting this information from Wikipedia. I hope I'm not being ignorant!
What I'm trying to say is: in general, there are groups of people, in CHN, TW, HK or whatever, that don't speak the main language of their country.
Maybe in your country this is less the case, although this website lists no less than 25 languages for Taiwan. The second most common language is apparently Taiwanese (Hokkien, Min Nan) that is spoken natively by about 70% of the population and is the de facto language of national identity. Maybe this is a somewhat controversial and geopolitical thing.
Anyway, what I'm basically trying to figure out is which braille systems these people that don't speak the official language of their country, use.
Thanks for all your time!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/school510587,10,https://github.com/liblouis/liblouis/pull/467#issuecomment-347884696,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Hi @bertfrees,

There does exist some users in Taiwan can speak Hokkien only. However, they must either learn Mandarin and zhuyin (Taiwanese braille) or abandon braille functionalities of their screen readers. For young users, they will forced to learn Mandarin, the official language. For elder users, they usually abandon the braille.
It is definite that each way of pronunciation must have its dedicated brailling rules. I think the same case applies to other dialects spoken in Chinese world.

In fact, government in Taiwan has ever released some brailling rules for Hokkien. However, it is no popular, and users think it is too hard. In Taiwan, there is still no unified pronunciation representation for Hokkien. Complaint from users to the brailling rules therefore becomes an expectable result.

Do I hit the key point of your questions?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/467#issuecomment-347891965,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Yes, you answered my question. Thanks!
So, my conclusion from all this is that the Liblouis tables should be labelled as follows:

cmn-TW,
cmn-CN or cmn-Hans-CN,
yue-HK

The language tag ""zh"" should not be used because it represents a collection of several languages that all have different pronunciations and therefore must have dedicated braille systems.
Thanks for the discussion, I thought it was very interesting.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/school510587,12,https://github.com/liblouis/liblouis/pull/467#issuecomment-347917277,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Hi @bertfrees,

You are welcome.

I think renaming zh tables is a great conclusion. After this, the table for two-cell braille of mainland China will be named properly. However, please notice that both current zh-chn.ctb and two-cell braille target Mandarin. That is, they are two different sets of rules for one pronunciation representation. Of course, you may treat two-cell braille as an improvement of the old rules currently listed in zh-chn.ctb. Their relationship is like that between UEB and the traditional grade-2 English braille. So, I think much more things should be considered before decision of new zh table labels.

There is another potential problems of data duplication. A ctb contains not only brailling rules of main character set used but also some symbols such as math operators. These symbols may be brailled the same in all variants of braille rules. In the future, you may receive requests that there should be an independent file to contain common rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,467,2017-11-26T18:50:51Z,2017-11-27T11:08:56Z,2017-12-02T13:39:34Z,MERGED,True,41,28,1,https://github.com/school510587,Update zh-tw.ctb to version 2017-11,1,['tables'],https://github.com/liblouis/liblouis/pull/467,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/467#issuecomment-347929558,"Summary of changes:

Add \x2060. This looks like one space character.
Add missing subscript translations (\x2095 to \x209C).
Add \xF0B7. It is privately used for list item sign somewhere (such as
   Microsoft Word).
Add -46 into \x2488-\x249B to indicate a full stop.
Assign the same dot pattern as ""st"" to both \xFB05 and \xFB06. Also add
   \x017F as 234 (lowercase s).
Fix some Chinese words and Nemeth symbols brailled incorrectly.

Reviewed by:
    Coscell Kao <coscell@gmail.com>
    嘯傲俠羽 <crazy@mail.batol.net>","Yes, you're right. If we add a table for two-cell braille we'll need additional tags to distinguish the two ""cmn-CN"" tables, just like with UEB vs. EBAE. I'm planning to do that with a metadata field that will probably be called ""system"" and will contain a unique identifier of the implemented braille system. E.g.:
#+locale: cmn-CN
#+system: 2cell

But the locale is the most important piece of metadata today.
About the common rules: great, such changes are welcome.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,469,2017-11-27T20:15:24Z,2017-12-04T14:02:05Z,2017-12-04T16:49:40Z,MERGED,True,4,1,1,https://github.com/rimas-kudelis,Added undefined rule to lt.ctb.,1,[],https://github.com/liblouis/liblouis/pull/469,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/469,Nobody wants these escape sequences. :),Nobody wants these escape sequences. :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,470,2017-11-28T20:30:56Z,2017-11-29T10:03:12Z,2017-11-29T10:03:12Z,MERGED,True,6,7,2,https://github.com/BueVest,documented deprecation of p1o flag and corrected a single typo.,1,[],https://github.com/liblouis/liblouis/pull/470,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/470,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,470,2017-11-28T20:30:56Z,2017-11-29T10:03:12Z,2017-11-29T10:03:12Z,MERGED,True,6,7,2,https://github.com/BueVest,documented deprecation of p1o flag and corrected a single typo.,1,[],https://github.com/liblouis/liblouis/pull/470,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/470#issuecomment-347811248,,"@BueVest Great job, thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/tsengeltech,1,https://github.com/liblouis/liblouis/pull/471,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/471#issuecomment-347808035,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,"Regarding the renaming, see #423: I'd like to avoid that unless really needed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/tsengeltech,3,https://github.com/liblouis/liblouis/pull/471#issuecomment-347824242,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,"Got it, thank you. I'll change it back to as what it was right away.
I wanted to add another table named as g2, so I wanted to make an
understandable distinction between these two. But I can wait.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/471#issuecomment-347824728,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,If you want to add a g2 table it's reasonable to change the name of the other table.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/tsengeltech,5,https://github.com/liblouis/liblouis/pull/471#issuecomment-347827129,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,So is this failing stats due to my error in table? or it is just naming thingy. What I have changed is the inclusion of uebc-g1 to en-ueb-g1.ctb. Along with few licencing information.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/471#issuecomment-349342103,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,Hi @tsengeltech can you have a look at my changes and see if that fits what you had in mind? Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/471#issuecomment-366643905,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,Send @tsengeltech an email and ask him again,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/471#issuecomment-368007752,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,Just sent a mail to @tsengeltech,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/tsengeltech,9,https://github.com/liblouis/liblouis/pull/471#issuecomment-368200536,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,"Hello there Christian and Bert.
I'm dearly sorry for not responding as long as I did. the life has been hecktick these last months and other bigger projects kept my attention away from what is most needed to be done.
Indeed  that is exactly what I had in mind, although I imagined it  would've been done in different way. That is irrelivent, what is most important is that it works. Once again thank you guys so much for helping to add Mn braille table in your marvelous community.
Best regards:",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/471#issuecomment-368442728,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,Still needs some NEWS changes I think?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/471#issuecomment-368481424,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,"Yes, indeed. I'll do that once this is merged.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/tsengeltech,12,https://github.com/liblouis/liblouis/pull/471#issuecomment-369294262,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,"Dear bertfrees and all,

We would like to rename tables following names
To rename g1 table Mongolian UEB 6 dot grade 1
And g2 table to rename Mongolian UEB 6 dot Grade 2
Is it possible that before the release

Thanks
Tsengel",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/471#issuecomment-369593042,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,@tsengeltech What exactly do you mean? You can always create an additional PR. There is still some time. The release will be next Monday.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,471,2017-11-29T02:02:43Z,2018-02-26T12:33:44Z,2018-03-02T15:21:35Z,MERGED,True,74,10,5,https://github.com/tsengeltech,Changed old ueb to new en-ueb-g1.ctb. added few things in  licence information.,13,[],https://github.com/liblouis/liblouis/pull/471,https://github.com/tsengeltech,14,https://github.com/liblouis/liblouis/pull/471#issuecomment-369950272,Renamed mn-MN.utb to mn-MN-g1.utb. Changed include UEBC.g1.utb to en-ueb-g1.ctb. Changed licencing information,"hi all,
yes making enouncement new release
would you please write about mongolian tables  for rlease news
i want mng1 to call Mongolian 6 dot ueb grade 1 mng2 mongolian 6 dot ueb grade 2 in the release news enouncement
thank you very much for all great works
all the best
tsengel",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,477,2017-12-03T20:27:54Z,2017-12-04T13:19:33Z,2017-12-04T13:19:33Z,MERGED,True,2,1,1,https://github.com/sukiletxe,Fix #406 - Corrected Spanish ó (lower o acute) definition,1,[],https://github.com/liblouis/liblouis/pull/477,https://github.com/sukiletxe,1,https://github.com/liblouis/liblouis/pull/477,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,478,2017-12-04T11:12:59Z,2018-02-19T11:21:01Z,2018-02-19T11:21:01Z,CLOSED,False,33,30,2,https://github.com/bertfrees,Reject PRs that are not formatted according to .clang-format,6,[],https://github.com/liblouis/liblouis/pull/478,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/478,see #438,see #438,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,478,2017-12-04T11:12:59Z,2018-02-19T11:21:01Z,2018-02-19T11:21:01Z,CLOSED,False,33,30,2,https://github.com/bertfrees,Reject PRs that are not formatted according to .clang-format,6,[],https://github.com/liblouis/liblouis/pull/478,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/478#issuecomment-348932181,see #438,"Don't merge yet, I'm testing if this works.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,478,2017-12-04T11:12:59Z,2018-02-19T11:21:01Z,2018-02-19T11:21:01Z,CLOSED,False,33,30,2,https://github.com/bertfrees,Reject PRs that are not formatted according to .clang-format,6,[],https://github.com/liblouis/liblouis/pull/478,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/478#issuecomment-366660595,see #438,This has been merged in d1c139f,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,480,2017-12-04T16:48:18Z,2017-12-21T10:59:32Z,2017-12-21T11:07:42Z,MERGED,True,20,0,3,https://github.com/rimas-kudelis,Added a test for issue #479.,1,[],https://github.com/liblouis/liblouis/pull/480,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/480,Adds a test for #479,Adds a test for #479,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/481,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/vgjh2005,2,https://github.com/liblouis/liblouis/pull/481#issuecomment-349513465,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","Hi:
for zh-cn.ctb:# liblouis: Chinese (mainland China, mandarin braille)
for zh-chnb.ctb: # liblouis: Chinese (mainland China, mandarin braille)
# Copyright (C) 2017 by 宇宙，空谷幽灵 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


we are replacing an existing table. Why is your table better?

Because the braille tables are made manually. Fix uncorrect output; Add necessary phrase; Add tone for unnormal phrase etc.

have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?

Yes. I have talked to him. He agree with merging action.

also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

Why don't I see any log? I don't know how to do test workflow. Please let me know. Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/481#issuecomment-366976993,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","Hi @vgjh2005
I added the license to the tables now. Now I just need the following:

 an email address in the license header for the copyright holder. Presumably that would be your email.
 if possible a link to a document describing the braille standard
 we should look at the problem in the YAML test. The relevant log is below (this time for real :-)). Can you tell me whether this is a problem in the test or in the table.

FAIL: yaml/zh-chn
=================

Input:    '兞'
Expected: '⠍⠖' (length 2)
Received: '⠄⡳⠭⠢⠂⠢⠑⠄' (length 8)
Diff:     Expected '⠍' but received '⠄' in index 0
lou_checkyaml:./yaml/zh-chn.yaml:10: Failure
FAILURE (10 tests, 1 failure)
FAIL yaml/zh-chn.yaml (exit status: 1)

I hope that we can include this in the upcoming 3.5 release",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/481#issuecomment-366983753,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.",I would also like a text at the top of each table explaining what the table implements and how it was made. I still haven't understood the difference between zh-chn.ctb and zh-chnb.ctb (or how they relate to the tables that were committed originally in #155: zh-cn-1.ctb and zh-cn-3.ctb).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/vgjh2005,5,https://github.com/liblouis/liblouis/pull/481#issuecomment-368507614,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","Hi:
I am so sorry. I cannot see your reply and I make a misstake.
for zh-cn.ctb:# liblouis: Chinese (mainland China, mandarin braille)
for zh-chnb.ctb: # liblouis: Chinese (mainland China, mandarin braille with tune).
braille standard document:https://en.wikipedia.org/wiki/Mainland_Chinese_Braille
Please use my E-mail to post the file. But the copyright owner isn't me.
In the other hands, I cannot show the log's special characters. How can I do?
I am sorry for trouble to you.
Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/481#issuecomment-368510148,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","for zh-chnb.ctb: # liblouis: Chinese (mainland China, mandarin braille with tune)

You mean ""tone"", right? OK, that already takes away a big part of my confusion. Still, it would be nice to have a slightly longer description in the table comments (more than just the one-line summary).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/481#issuecomment-368514197,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","HI @vgjh2005
Thanks for your feedback.

Please use my E-mail to post the file. But the copyright owner isn't me.

Who is the copyright holder? Don't they have an email?

I cannot show the log's special characters. How can I do?

The log just says that when you translate '兞' (Unicode x515e) you expect '⠍⠖' (I believe 134-235) (length 2) but in reality you get '⠄⡳⠭⠢⠂⠢⠑⠄' (3-12567-1346-26-2-26-15-3) (length 8)
Does that help?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/vgjh2005,8,https://github.com/liblouis/liblouis/pull/481#issuecomment-368741930,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","Hi:
 Who is the copyright holder? Don't they have an email?
They have e-mail. But they cannot post material. So However, all updates is posted by me.
 The log just says that when you translate '兞' (Unicode x515e) you expect '⠍⠖' (I believe 134-235) (length 2)
Please use your reply answer.
 You mean ""tone"", right? OK, that already takes away a big part of my confusion. Still, it would be nice to have a slightly longer description in the table comments (more than just the one-line.
OK. In mandrian Chinese braille, all characters are made by two source character called pinyin. Use this way, we can realize how to pronounce it. But all pronounciation have four tune. So ,sometime, we need to sign a tune to let it more understandable. So there are two braille tables. Have I let you know?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/481#issuecomment-368782729,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","Hi @vgjh2005
I used your email as the contact address for the copyright holder
If I understand your answer correctly you are saying that I should change the test case above so that it expects the value that is actually returned now. I will change the test case accordingly.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/481#issuecomment-368802432,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","Unfortunately the test seems to fails because the character '兞' (Unicode x515e) is no longer defined. It was in the old table.
I will contact the author of the old table and ask for his judgment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/vgjh2005,11,https://github.com/liblouis/liblouis/pull/481#issuecomment-368873805,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.",OK!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/vgjh2005,12,https://github.com/liblouis/liblouis/pull/481#issuecomment-368874652,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","HI:
I want to sure what you say for old table? If it is needed, I can
contact them. Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/481#issuecomment-368904595,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","I sent Kaifang Bao the following mail:

Hi Kaifang Bao


@vgjh2005 (I don't know his/her real name unfortunately) provided some new liblouis Braille tables for Chinese Braille. The new tables seem much more extensive than the ones you provided. They define about 20000 signs where as yours only provides around 10000. But they do break the test suite because they do not define a dot pattern for 兞 (unicode x515e). I have no way of telling whether these tables are better than the ones from you. Could you please have a look at them and tell me if they should go into liblouis?


Please have a look at #481


Thanks
Christian",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/vgjh2005,14,https://github.com/liblouis/liblouis/pull/481#issuecomment-369863397,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.",OK,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/leonardder,15,https://github.com/liblouis/liblouis/pull/481#issuecomment-418141989,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","It looks like this is superseded by #612 and can be closed, is that correct?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,481,2017-12-05T13:58:42Z,2018-09-03T15:26:53Z,2018-09-03T15:27:03Z,CLOSED,False,90081,11974,3,https://github.com/egli,Added new Chinese tables by vgjh2005,4,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/481,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/481#issuecomment-418145320,"@vgjh2005 I put the tables that you provided in a zip into this pull request replacing the #159. Now I would love to add this to the next release but I need some more information:

 I need a standard license header for these files. For an example have a look at the following

# liblouis: Chinese (China, mandarin braille)

# Copyright (C) 2015 by vgjh2005 <????>

# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this file; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# liblouis comes with ABSOLUTELY NO WARRANTY.


 I would like a link or a reference to some braille standard that these tables conform to
 we are replacing an existing table. Why is your table better?
 have you talked to the author of the existing zh-chn.ctb table. His name is Kaifang Bao (baokaifang@gmail.com) from RejoinTech. Is he happy with your changes?
 also the new tables fail one test in the YAML test file. I'll put the log below. We'll have to fix this.

I hope we can get these things sorted out. This PR is way overdue.","@leonardder yes, the way I read the conversation in #612 (comment) I believe that #612 indeed replaces the tables in this PR",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,482,2017-12-06T12:10:05Z,2017-12-07T09:54:48Z,2017-12-07T09:54:48Z,MERGED,True,3,1,1,https://github.com/DaveMielke,el.ctb needs to include litdigits6Dots for braille number input to work,1,[],https://github.com/liblouis/liblouis/pull/482,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/482,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,484,2017-12-06T14:45:55Z,2017-12-07T09:54:07Z,2017-12-07T09:54:13Z,MERGED,True,6,4,5,https://github.com/egli,Default to -Wall when compiling,7,[],https://github.com/liblouis/liblouis/pull/484,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/484,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,485,2017-12-06T21:30:43Z,2017-12-07T09:53:33Z,2017-12-07T09:53:33Z,MERGED,True,228,49,1,https://github.com/aaclause,Update French tables,1,[],https://github.com/liblouis/liblouis/pull/485,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/485,It is the continuation of #465.,It is the continuation of #465.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,487,2017-12-14T08:20:25Z,2017-12-14T11:32:45Z,2017-12-14T11:53:20Z,CLOSED,False,410,473,31,https://github.com/egli,Enhance test suite,18,[],https://github.com/liblouis/liblouis/pull/487,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/487,"The YAML test suite now supports everything that the C-based tests support, i.e. you can invoke translations and test for input our output positions, you can test with a specific cursor position and you can test for a specific resulting cursor position. At the same time you can specify any mode.
The tests that contained cursor positions have been migrated to the new syntax and are now essentially the same as they were in the json tests.
Some of the cursor position YAML tests had FIXMEs in them. These have been double checked with the original json tests and are now correct in the sense that they test the same as the original json tests and also behave the same.
Thanks to optional and named arguments the API of brl_checks.h has been massively reduced.","The YAML test suite now supports everything that the C-based tests support, i.e. you can invoke translations and test for input our output positions, you can test with a specific cursor position and you can test for a specific resulting cursor position. At the same time you can specify any mode.
The tests that contained cursor positions have been migrated to the new syntax and are now essentially the same as they were in the json tests.
Some of the cursor position YAML tests had FIXMEs in them. These have been double checked with the original json tests and are now correct in the sense that they test the same as the original json tests and also behave the same.
Thanks to optional and named arguments the API of brl_checks.h has been massively reduced.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/488,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/488#issuecomment-353322818,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",Just let me know when this is ready so I can merge,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/488#issuecomment-366659438,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",@Andre9642 is this ok to merge or will there be more changes?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/488#issuecomment-366740416,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","A YAML test is failing because the way we handle the cursorPos has changed. Sorry about that, we became blatantly aware of the deficiencies when trying to debug the bug in the 3.4.0 release. Since this has not officially been released yet, the online doc still shows the old way.
But the documentation has been updated and (I hope that works for you) can be read in its raw form at https://github.com/liblouis/liblouis/blob/master/doc/liblouis.texi#L2602
Essentially you now have to either specify one cursorPos which indicates where the cursor should be for that test. Alternatively you can specify a tuple saying where the cursor will be initially and after the translation.
Hope that helps",True,{'HEART': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,5,https://github.com/liblouis/liblouis/pull/488#issuecomment-366761334,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","Thanks @egli for your help.
Results are pretty good for french grade 2 table now. However, if we can wait a bit longer before merge to do more tests, that would be great.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,6,https://github.com/liblouis/liblouis/pull/488#issuecomment-368210325,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","There is a pretty annoying problem with the mix of uppercase and lowercase letters with g1 and g2 tables. For example, with the following test:
$ lou_checkyaml fr-bfu-comp6.yaml
Input:    'HCl'
Expected: '⠨⠓⠨⠉⠇' (length 5)
Received: '⠨⠨⠓⠉⠇' (length 5)
Diff:     Expected '⠓' but received '⠨' in index 1
lou_checkyaml:fr-bfu-comp6.yaml:42: Failure

It's the same result as if the input is ""HCL"".
Is there a solution for that? Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/488#issuecomment-368312282,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","@Andre9642 The HCl thing might be a bug in Liblouis.
These are the cap rules defined in your table:
capsletter 46
begcaps 46-46-46
begcapsword 46-46
begcaps 46-46
endcaps 5-5-46

endcapsword is not defined, so you would either expect that capsletter is used in case of mixed capitalisation, or that begcapsword and endcaps are used, or begcaps andendcaps.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,8,https://github.com/liblouis/liblouis/pull/488#issuecomment-368348393,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","@bertfrees Thanks you for your reply.
In french, when mixing uppercase and lowercase characters within a word, each capital letter is preceded by the single capital indicator.
I've tried different combinations but nothing seems to work...
Is there a mean to describe this behavior?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/488#issuecomment-368459322,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","No it seems there is no way to get that behavior. As I said with the current rules you would expect your behavior, so this might very well be a bug in Liblouis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,10,https://github.com/liblouis/liblouis/pull/488#issuecomment-369421321,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","@bertfrees @egli I've just compiled and installed the latest commit in the master branch... But lou_checkyaml fails with the folllowing error:
""lou_checkyaml: Cannot change directory to : Input/output error""
Where is the problem?
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/488#issuecomment-369546684,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",It seems to work on Travis...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/488#issuecomment-369548236,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","@Andre9642 I have been wondering... What is the difference between the ""fr-bfu"" tables you are working on now and the other French tables (fr-2007.ctb, fr-fr-g1.utb, Fr-Fr-g2.ctb, fr-ca-g1.utb, Fr-Ca-g2.ctb)? Do you know? As far as I understand, these other tables are also ""Unified French"". At least in all of the tables the word ""unifié"" is mentioned.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,13,https://github.com/liblouis/liblouis/pull/488#issuecomment-369567392,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","It seems to work on Travis...

Additional precision: I have no problem with make check. It's only when I call lou_checkyaml on yaml file:
$ lou_checkyaml en-GB-g2_harness.yaml
lou_checkyaml: Cannot change directory to : Input/output error
$ lou_checkyaml fr-bfu-g2.yaml
lou_checkyaml: Cannot change directory to : Input/output error",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/488#issuecomment-369568372,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",OK that's a bug. It must have gotten in recently though.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/488#issuecomment-369568901,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",@egli This commit caused this: 0f41fe1. There should be an additional check for an empty dir_name.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/488#issuecomment-369569734,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","@Andre9642 For now just run the test from a different directory. E.g. if you want to run ""tests/braille-specs/fr-bfu-g2.yaml"", run lou_checkyaml from the root directory or the ""tests"" directory. Alternatively you can run make check TESTS=braille-specs/fr-bfu-g2.yaml",True,{'HEART': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,17,https://github.com/liblouis/liblouis/pull/488#issuecomment-369643864,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","I have been wondering... What is the difference between the ""fr-bfu"" tables you are working on now and the other French tables (fr-2007.ctb, fr-fr-g1.utb, Fr-Fr-g2.ctb, fr-ca-g1.utb, Fr-Ca-g2.ctb)?

fr-fr-g1.ctb & (fr-fr-g2.ctb vs fr-bfu-g2.utb)
I didn't entirely understand these tables. I think that originally, it was for the old French Braille code, but there seems to have been some mixing between the BFU and old french braille code. :/
Moreover, fr-fr-g2.ctb has many errors, please find attached file for more details. fr-bfu-g2.utb fixes all these problems.
fr-ca-g1.utb & Fr-Ca-g2.ctb
Personally, I don't have experience with these tables. But they correspond to the old Canadian French Braille code and on some feedbacks it's not used too much today.
fr-2007.ctb vs fr-bfu-comp8.utb
Many corrections and improvements! :) Modifications have been done in fr-bfu-comp8.utb because it's present in NVDA.
Input:    '!""(),-./\\;:;?@[]{}*…'
Expected: '⠖⠶⠦⠴⠂⠤⠲⠌⢌⠆⠒⠆⠢⠜⣦⣴⣆⣰⠔⢤' (length 20)
Received: '⠖⠶⠦⠴⠂⠤⠲⠌⢌⠆⠒⠆⠢⠜⣦⣴⣆⣰⠔⠄⢌⠭⠣⠼⠣⠫⠄' (length 27)
Diff:     Expected '⢤' but received '⠄' in index 19
lou_checkyaml:../tables/fr-2007.yaml:14: Failure
Input:    '+±=<>×÷¹²³%¼½¾‰'
Cursor:   7
Expected: '⣖⣤⣶⢆⡰⣔⣒⡈⡘⡸⢬⢥⢨⢭⣬' (length 15)
Received: '⣖⣤⣶⢆⡰⣔⣒⡈⡘⡸⢬⢥⢨⢭⠄⢌⠭⠣⠼⠩⠼⠄' (length 22)
Diff:     Expected '⣬' but received '⠄' in index 14
lou_checkyaml:../tables/fr-2007.yaml:19: Failure
Input:    '_|$¢€£¥§ ¨¸´¤„`#&®™©'
Expected: '⣐⢸⡔⣉⣑⡆⣲⢏ ⠨⠸⠐⠘⠰⠠⢼⢿⢗⢞⢉' (length 20)
Received: '⣐⢸⡔⣉⣑⡆⣲⢏ ⠨⠸⠐⠘⠄⢌⠭⠣⠼⠡⠑⠄⠠⢼⢿⢗⢞⢉' (length 27)
Diff:     Expected '⠰' but received '⠄' in index 13
lou_checkyaml:../tables/fr-2007.yaml:19: Failure
Input:    '•‣∙⁍⁌⁃◦ —–°'
Expected: '⣛⣛⣛⣛⣛⣛⣛ ⣘⣈⡢' (length 11)
Received: '⠄⢌⠭⠣⠼⠣⠣⠄⠄⢌⠭⠣⠼⠣⠩⠄⠄⢌⠭⠣⠣⠡⠪⠄⠄⢌⠭⠣⠼⠹⠙⠄⠄⢌⠭⠣⠼⠹⠉⠄⠄⢌⠭⠣⠼⠹⠩⠄⠄⢌⠭⠣⠱⠑⠫⠄ ⠄⢌⠭⠣⠼⠡⠹⠄⠄⢌⠭⠣⠼⠡⠩⠄⡢' (length 74)
Diff:     Expected '⣛' but received '⠄' in index 0
lou_checkyaml:../tables/fr-2007.yaml:20: Failure
Input:    '« blabla-bla-bla » “” ‚‚‹›„‘’' Eh ! Ah ? Oh ;'
Cursor:   7
Expected: '⢶⡀⠃⠇⠁⠃⠇⠁⠤⠃⠇⠁⠤⠃⠇⠁⡀⡶ ⣄⣠ ⡠⡠⡐⢐⠰⢠⡄⠄ ⡑⠓⡀⠖ ⡁⠓⡀⠢ ⡕⠓⡀⠆' (length 45)
Received: '⢶ ⠃⠇⠁⠃⠇⠁⠤⠃⠇⠁⠤⠃⠇⠁ ⡶ ⠄⢌⠭⠣⠼⠡⠉⠄⠄⢌⠭⠣⠼⠡⠙⠄ ⠄⢌⠭⠣⠼⠡⠁⠄⠄⢌⠭⠣⠼⠡⠁⠄⠄⢌⠭⠣⠼⠩⠪⠄⠄⢌⠭⠣⠼⠩⠁⠄⠄⢌⠭⠣⠼⠡⠑⠄⠄⢌⠭⠣⠼⠡⠳⠄⡄⠄ ⡑⠓ ⠖ ⡁⠓ ⠢ ⡕⠓ ⠆' (length 101)
Diff:     Expected '⡀' but received ' ' in index 1
lou_checkyaml:../tables/fr-2007.yaml:25: Failure
Input:    '|†‡¤¦ªº¬¬±¶·'
Cursor:   7
Expected: '⢸⢴⡴⠘⢘⣡⣢⡲⡲⣤⣸⢀' (length 12)
Received: '⢸⠄⢌⠭⠣⠼⠣⠼⠄⠄⢌⠭⠣⠼⠣⠡⠄⠘⢘⣡⣢⡲⡲⣤⣸⢀' (length 26)
Diff:     Expected '⢴' but received '⠄' in index 1
Cursor position failure:
Initial:7 Expected:7 Actual:21 
lou_checkyaml:../tables/fr-2007.yaml:37: Failure
Input:    '⠖⠶⠦⠴⠂⠤⠲⠌⢌⠆⠒⠆⠢⠜⣦⣴⣆⣰⠔⢤'
Expected: '!""(),-./\\;:;?@[]{}*…' (length 20)
Received: '!""(),-./\;:;?@[]{}*\368/' (length 24)
Diff:     Expected '…' but received '\' in index 19
lou_checkyaml:../tables/fr-2007.yaml:51: Failure
Input:    '⣖⣤⣶⢆⡰⣔⣒⡈⡘⡸⢬⢥⢨⢭⣬'
Cursor:   7
Expected: '+±=<>×÷¹²³%¼½¾‰' (length 15)
Received: '+±=<>×÷¹²³%¼½¾\34678/' (length 21)
Diff:     Expected '‰' but received '\' in index 14
lou_checkyaml:../tables/fr-2007.yaml:56: Failure
Input:    '⣐⢸⡔⣉⣑⡆⣲⢏ ⠨⠸⠐⠘⠰⠠⢼⢿⢗⢞⢉'
Expected: '_|$¢€£¥§ ¨¸´¤„`#&®™©' (length 20)
Received: '_|$¢€£¥§ ¨¸´¤\56/`#&®™©' (length 23)
Diff:     Expected '„' but received '\' in index 13
lou_checkyaml:../tables/fr-2007.yaml:56: Failure
Input:    '⣛ ⣘⣈⡢'
Expected: '• —–°' (length 5)
Received: '\124578/ \4578/\478/°' (length 21)
Diff:     Expected '•' but received '\' in index 0
lou_checkyaml:../tables/fr-2007.yaml:57: Failure
Input:    '⢶⡀⠃⠇⠁⠃⠇⠁⠤⠃⠇⠁⠤⠃⠇⠁⡀⡶ ⣄⣠ ⡠⡠⡐⢐⠰⢠⡄⠄ ⡑⠓⡀⠖ ⡁⠓⡀⠢ ⡕⠓⡀⠆'
Cursor:   7
Expected: '« blabla-bla-bla » “” ‚‚‹›„‘’' Eh ! Ah ? Oh ;' (length 45)
Received: '«\7/blabla-bla-bla\7/» \378/\678/ \67/\67/\57/\58/\56/\68/’' Eh\7/! Ah\7/? Oh\7/;' (length 81)
Diff:     Expected ' ' but received '\' in index 1
Cursor position failure:
Initial:7 Expected:7 Actual:9 
lou_checkyaml:../tables/fr-2007.yaml:62: Failure
Input:    '⢖⢢⣷⢷⡌⣌⣝⣻⡬⠬⣾⢾⡼⣜⣪⢔⢎ ⠈⠠⢈⡨⠨⢍⠐⠸'
Cursor:   7
Expected: '¡¿ÁáÍíÑñÓóÚúÄäÖöß ^`ˆ˜¨¯´¸' (length 26)
Received: '¡¿ÁáÍíÑñÓ0ÚúÄäÖöß ^`ˆ˜¨¯´¸' (length 26)
Diff:     Expected 'ó' but received '0' in index 9
lou_checkyaml:../tables/fr-2007.yaml:70: Failure
Input:    '⢸⢴⡴⠘⢘⣡⣢⡲⡲⣤⣸⢀'
Cursor:   7
Expected: '|†‡¤¦ªº¬¬±¶·' (length 12)
Received: '|\3568/\3567/¤¦ªº¬¬±¶·' (length 22)
Diff:     Expected '†' but received '\' in index 1
Cursor position failure:
Initial:7 Expected:7 Actual:17 
lou_checkyaml:../tables/fr-2007.yaml:74: Failure
FAILURE (28 tests, 13 failures)

Edit: oops. It's a big file, Github does not accept it; here is a link instead -> https://dl.andreabc.net/Fr-Fr-g2_tests_20180301.zip",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/488#issuecomment-369647965,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","OK thanks. So in other words there is

either no difference in which braille codes they implement, but the ""fr-bfu"" ones are most accurate,
or there is a difference but we don't know what it is.

In the former case we can delete the old tables. But in either case we should contact the author of the older tables first.

fr-fr-g1.utb, Fr-Fr-g2.ctb, fr-ca-g1.utb and Fr-Ca-g2.ctb were written by Nicolas Pitre
fr-2007.ctb was taken from BRLTTY. We can probably just removed it.

Have you talked to Nicolas before? Do you want to write to him? Or should I?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,19,https://github.com/liblouis/liblouis/pull/488#issuecomment-369701187,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","We are agree.

Have you talked to Nicolas before?

No, never.

Do you want to write to him? Or should I?

I prefer you to do that please. My english level is poor. You will be more professional. ;)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/488#issuecomment-369760341,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",I asked because your French is better than mine :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,21,https://github.com/liblouis/liblouis/pull/488#issuecomment-369818479,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","Sorry, I wasn't thinking at all... Now, it is not a problem for me. I can therefore do it if you have not done so already.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/488#issuecomment-369877561,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","Yes, please do. Thanks!
P.S.: Can you put me in CC or forward?",True,{'HEART': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/MichelSuch,23,https://github.com/liblouis/liblouis/pull/488#issuecomment-370149805,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","Hi,
André just asked me to explain why there are 2007 tables and bfu tables.
Some years ago, I created the bfu tables (braille français unifié) from the 2007 tables.
First, I did not wat to break tables that worked reasonably well, but I wanted to make tables that would reflect the latest state of french (I should say francophone) braille.
So, here are bfu tables, which names are probably not perfect.
So, as I said, these are unified french tables. In a perfect world, we should not need anymore 2007 tables as well as canadian ones. But I cannot garantee some applications don't use them somewhere.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,24,https://github.com/liblouis/liblouis/pull/488#issuecomment-370183708,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","Hi Michel. Thanks for helping me understand! Sure, if there is a reasonable explanation for keeping the older set of tables, no problem. It can be useful to keep supporting old standards.  But my question was an even more basic one. It's about which tables implement which standards. For an outsider like me it's not immediately clear.
What confused me at first was that fr-2007.ctb, fr-fr-g1.utb, Fr-Fr-g2.ctb, fr-ca-g1.utb and Fr-Ca-g2.ctb all have the word ""unified"" or ""unifié"" somewhere in the description. I realize now that there are probably just different revisions of BFU. But what exactly the different revisions are and which ones are implemented is not clear. It's not simply ""2007"" vs ""current"" because the French and Canadian tables seem to be even older than 2007. If different revisions are not clearly distinguishable I think that would be a good reason to dump them. Ideally I'd like to have #+version metadata in all tables that deviate from the latest.
Finally what I don't quite understand is why there would be a Canadian and a French version of a ""unified"" standard. Does ""unified"" not mean international? The Fr-Fr-g2.ctb even has a Québec reference in it. I have run a diff between the French and Canadian tables just now and they turn out to be very similar. This suggests that there are some things not covered by the BFU standard (or were not back then), or are at least subject to interpretation.
I hope someone can clear things up for me :)
P.S.: I just noticed that André forwarded me the conversation with Nicolas Pitré. Thanks very much for that!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/MichelSuch,25,https://github.com/liblouis/liblouis/pull/488#issuecomment-370377445,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","Well, after talking with André, here is what we think should be done.
Table fr-2007.ctb should be removed. table fr-bfu-comp8.utb contains the same braille characters with much more characters.
Canadian tables (fr-ca-g1.utb and fr-ca-g2.ctb) should also be removed, since french braille is now unified, and there is nomore difference between braille for France, Canada and other french speaking countries.
fr-fr-g1.utb and fr-fr-g2.ctb syould be removed: same  reason than for fr-2007;ctb, and fr-fr-g2.ctb does not support backtranslation;
So, for french, we should only have:
fr-bfu-comp6.utb: 6 dots litterary
fr-bfu-comp8.utb: 8 dots computer
fr-bfu-g2.ctb: contracted braille
fr-bfu-comp68.uti: include containing unicode definitions
ipa-unicode-range.uti: include for International Phonetic Alphabet.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,26,https://github.com/liblouis/liblouis/pull/488#issuecomment-370395318,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","@MichelSuch OK, that's fine by me. I see André already removed one of them. Will you also do the rest? By the way we'd like to merge this branch today, so could you say when you're finished?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,27,https://github.com/liblouis/liblouis/pull/488#issuecomment-370408917,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","Oh, and one final request :-) Would it be possible to change the YAML tests to use the new table query feature? See 
  
    
      liblouis/doc/liblouis.texi
    
    
         Line 2483
      in
      c7fa0e6
    
  
  
    

        
          
           A third way to specify a table is by its metadata. A table query, 
        
    
  

. We can do this now because there will be no ambiguity between tables anymore after the other French tables have been deleted.",True,{'HEART': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,28,https://github.com/liblouis/liblouis/pull/488#issuecomment-370435513,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","OK this is becoming a bit messy. Will you squash those last commits into one if it's done?
By the way you don't have to add all metadata to the query. As long as the table you want to test is unambiguously selected by the query. But it's fine like this too...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/egli,29,https://github.com/liblouis/liblouis/pull/488#issuecomment-370446104,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","Best match: /home/travis/build/liblouis/liblouis/tables/fr-bfu-comp8.utb (20)
lou_checkyaml:./braille-specs/fr-bfu-comp8.yaml:2: Table query did not match expected table: expected 'fr-bfu-comp8.tbl' but got 'fr-bfu-comp8.utb'

Maybe a typo? Should it be fr-bfu-comp8.utb?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,30,https://github.com/liblouis/liblouis/pull/488#issuecomment-370449638,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","No I think the problem is that both tables have the metadata, while one just includes the other one. Only the *.tbl file should have the metadata. Eventually we will merge the two anyway.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,31,https://github.com/liblouis/liblouis/pull/488#issuecomment-370450509,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",The two last commits from Christian I assume that was an accident? Probably because you rebased without preserving merges. It's best to just drop them otherwise we have the same commit in different branches.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,32,https://github.com/liblouis/liblouis/pull/488#issuecomment-370450892,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",Can you merge and fix what's wrong please? I don't have time and I'm starting to do stupid things... :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,33,https://github.com/liblouis/liblouis/pull/488#issuecomment-370451197,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",OK :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,34,https://github.com/liblouis/liblouis/pull/488#issuecomment-370461870,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",Merged in 1b963a5,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/aaclause,35,https://github.com/liblouis/liblouis/pull/488#issuecomment-370463276,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.",Thanks you! And sorry for my stupid thing!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,488,2017-12-14T19:44:44Z,2018-03-05T15:46:08Z,2018-03-05T15:53:38Z,CLOSED,False,2907,4999,22,https://github.com/aaclause,Update french tables,76,['tables'],https://github.com/liblouis/liblouis/pull/488,https://github.com/bertfrees,36,https://github.com/liblouis/liblouis/pull/488#issuecomment-370464559,"It is the continuation of #485:

Many improvements concerning french grade 2 table.
Rewrite of the uncontracted unified French computer table.

This work was done in collaboration with @MichelSuch.","No, thank you guys for all the work!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/491,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/491#issuecomment-352006893,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","Thanks! But it's not a ""bad work-around"". It's supposed to be done like that. Could you remove that comment please? Also a small test case that shows it works like you want would be nice.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/491#issuecomment-352008570,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","In that case, why is it stated in UEB that way? I will remove that comment, no problem.
I assume you want a yaml test? Honestly, I have no idea where to start.
Do you want me to include French (Canadian) and Finnish to this pr as well?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/491#issuecomment-352009977,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","In that case, why is it stated in UEB that way?


I have no idea :) That should probably be changed as well.


I assume you want a yaml test?


Yes, a YAML test. Everything is explained here: http://liblouis.org/documentation/liblouis.html#YAML-Tests-1. Something like this:
table: [tables/unicode.dis,tables/nl-NL-g0.utb]
flags:
  testmode: backward
tests:
  - - ⠼⠁
    - 1",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,5,https://github.com/liblouis/liblouis/pull/491#issuecomment-352010836,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.",I think I figured it out. Let's see whether the travis build succeeds :),True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/491#issuecomment-352019403,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","OK all good now. Thanks! Regarding French and Finnish, yes that would be welcome too.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/491#issuecomment-352022296,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.",I'm not sure Davy is gonna approve the last commit. If I remember correctly there was another problem when using numericmodechars and/or numericnocontchars. @dkager,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,8,https://github.com/liblouis/liblouis/pull/491#issuecomment-352023978,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","@bertfrees commented on 15 dec. 2017 15:42 CET:

I'm not sure Davy is gonna approve the last commit. If I remember correctly there was another problem when using numericmodechars and/or numericnocontchars. @dkager

Hmm, how about keeping the existing code and prefixing numericmodechars and numericnocontchars with nofor, would that work?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,9,https://github.com/liblouis/liblouis/pull/491#issuecomment-352024352,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","@bertfrees commented on 15 dec. 2017 15:30 CET:

OK all good now. Thanks! Regarding French and Finnish, yes that would be welcome too.

Do you want tests for that as well? I guess the Dutch tests, for which table exactly the same change is made, is sufficient?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/491#issuecomment-352025052,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","Maybe the first two tests could be applied to the other tables? Like this:
table: [tables/unicode.dis,tables/nl-NL-g0.utb]
table: [tables/unicode.dis,tables/nl-BE-g0.utb]
table: ... # Finnish
table: ... # Canadian
flags: {testmode: backward}
tests:
  - - Lowercase letters
    - ⠁ ⠃ ⠉ ⠙ ⠑ ⠋ ⠛ ⠓ ⠊ ⠚ ⠅ ⠇ ⠍ ⠝ ⠕ ⠏ ⠟ ⠗ ⠎ ⠞ ⠥ ⠧ ⠺ ⠭ ⠽ ⠵
    - a b c d e f g h i j k l m n o p q r s t u v w x y z
  - - Single digits
    - ⠼⠁ ⠼⠃ ⠼⠉ ⠼⠙ ⠼⠑ ⠼⠋ ⠼⠛ ⠼⠓ ⠼⠊ ⠼⠚
    - 1 2 3 4 5 6 7 8 9 0
The third is more specific to Dutch I guess.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/491#issuecomment-352025752,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","[...] how about [...] prefixing numericmodechars and numericnocontchars with nofor [...]?

I don't think that works actually. Or maybe it does, it should be tested. But another possibility would be to have two tables, one for forward translation and one for backward translation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,12,https://github.com/liblouis/liblouis/pull/491#issuecomment-352028053,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","@bertfrees commented on 15 dec. 2017 15:56 CET:


[...] how about [...] prefixing numericmodechars and numericnocontchars with nofor [...]?

I don't think that works actually.

Yes, that's true.

But another possibility would be to have two tables, one for forward translation and one for backward translation.

Hmm, if we could avoid that, that would be nice. :) @dkager, your thoughts are more than welcome.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/491#issuecomment-353322400,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.",@leonardder if you change the name of a YAML test you will have to also change the name in two Makefiles: tests/Makefile.am and test/yaml/Makefile.am. Otherwise the test suite will not find the YAML test and the travis tests will fail. Let me know if you need any help.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,14,https://github.com/liblouis/liblouis/pull/491#issuecomment-353419919,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","Excuse me, I actually did change the makefiles but didn't commit them
properly.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,15,https://github.com/liblouis/liblouis/pull/491#issuecomment-365701979,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","I wonder, is this still on your radar for liblouis 3.5?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/491#issuecomment-365852456,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","@leonardder I'm a bit confused. In bothMakefile.am you add the files litdigit6Dots_backward.yaml and nl-g0_backward.yaml. However your PR only contains one YAML file litdigits6Dots_backward.yaml.
So to me it looks like

you did not push nl-g0_backward.yaml maybe and
you misspelled litdigit6Dots_backward.yaml in both Makefile.am (note the 's' in the filename litdigits6Dots...

Hope that helps
Other than that the test suite still has a problem that was fixed on master a while ago.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,17,https://github.com/liblouis/liblouis/pull/491#issuecomment-365858078,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","@egli commented:

@leonardder I'm a bit confused. In bothMakefile.am you add the files litdigit6Dots_backward.yaml and nl-g0_backward.yaml. However your PR only contains one YAML file litdigits6Dots_backward.yaml.

It turns out I forgot to remove nl-g0_backward.yaml. Everything I intended to be in there before is now in litdigits6Dots_backward.yaml


you misspelled litdigit6Dots_backward.yaml in both Makefile.am (note the 's' in the filename litdigits6Dots...


Sorry for that. Turns out I corrected the Makefile, not the Makefile.am",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/egli,18,https://github.com/liblouis/liblouis/pull/491#issuecomment-365867170,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","Other than that the test suite still has a problem that was fixed on master a while ago.

I guess that manifests itself only if the test suite fails. All the tests pass now",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,19,https://github.com/liblouis/liblouis/pull/491#issuecomment-365869555,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","I'll clean up the branch a bit and merge.
I'll also add back the ""Digits followed by lowercase letters"" tests and mark with XFAIL. It would be good to have some comment explaining why numericmodechars/numericnocontchars could not be used. @dkager.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,20,https://github.com/liblouis/liblouis/pull/491#issuecomment-365906910,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","Sounds fine to me, thanks for approving.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,21,https://github.com/liblouis/liblouis/pull/491#issuecomment-368645517,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.",@bertfrees: I added XFail tests for #490 to this pr as part of litdigits6Dots_backward.yaml,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/491#issuecomment-369223384,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.",I will drop the test for #490 from this branch and merge it separately.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,23,https://github.com/liblouis/liblouis/pull/491#issuecomment-369239769,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.",@leonardder I removed the Copyright (C) 2017 Babbage B.V. http://www.babbage.com lines that you added. Just adding one litdigits6Dots.uti line is not enough to be a copyright owner. Hope you don't mind. I did add you to the AUTHORS file though.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/leonardder,24,https://github.com/liblouis/liblouis/pull/491#issuecomment-369273438,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.","@bertfrees commented on 28 feb. 2018 14:32 CET:

@leonardder I removed the Copyright (C) 2017 Babbage B.V. http://www.babbage.com lines that you added. Just adding one litdigits6Dots.uti line is not enough to be a copyright owner. Hope you don't mind. I did add you to the AUTHORS file though.

No problem.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,491,2017-12-15T13:31:56Z,2018-02-28T22:08:07Z,2018-02-28T22:08:07Z,CLOSED,False,43,0,9,https://github.com/leonardder,Fix backtranslation of numbers in Dutch,12,['tables'],https://github.com/liblouis/liblouis/pull/491,https://github.com/bertfrees,25,https://github.com/liblouis/liblouis/pull/491#issuecomment-369400252,"This is based on the workaround used by UEB, including both litdigits6Dots.uti and digits6Dots.uti. I only applied these to Dutch, as I am not at all involved with the other tables mentioned in #486.",Merged in e2eba2e.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,492,2017-12-16T06:03:59Z,2017-12-19T07:59:53Z,2017-12-19T07:59:53Z,MERGED,True,15,6,2,https://github.com/DaveMielke,Treat characters within the range compbrlStart..compbrlEnd as a special case.,2,[],https://github.com/liblouis/liblouis/pull/492,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/492,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,504,2018-01-05T15:08:50Z,2018-01-24T15:34:09Z,2018-01-24T15:34:10Z,MERGED,True,3,0,2,https://github.com/tibbsa,"UEB Rule 10.7.3 ('had' initial letter contraction) exception added for ""phad""",1,[],https://github.com/liblouis/liblouis/pull/504,https://github.com/tibbsa,1,https://github.com/liblouis/liblouis/pull/504,"""had"" contraction should not be used when it appears in the letter sequence ""phad"" (as in Nymphadora or lymphadentitis).  These were two specific use cases, but I could identify no other words where ""phad"" would validly be contracted as ""p_h"".  Updated UEB YAML dictionary harness test for these cases.","""had"" contraction should not be used when it appears in the letter sequence ""phad"" (as in Nymphadora or lymphadentitis).  These were two specific use cases, but I could identify no other words where ""phad"" would validly be contracted as ""p_h"".  Updated UEB YAML dictionary harness test for these cases.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/garconvacher,1,https://github.com/liblouis/liblouis/pull/505,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/505#issuecomment-359793189,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.",The PR fails because you have renamed the tables and have not adapted the Makefile.am. If you need any help with that let me know.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/garconvacher,3,https://github.com/liblouis/liblouis/pull/505#issuecomment-359799219,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.",Thanks @egli for the advice! :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/505#issuecomment-359801776,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.",Note to self: mention the new and removed tables in NEWS,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/505#issuecomment-363098565,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","The file names aren't so great I think. They don't make clear what's in the tables. Also if the IPA_extend.utb table is not intended to be included it shouldn't exist.
I suggest renaming ""IPA_base.utb"" to something like ""IPA-symbols.uti"" and including it in IPA_extend.utb which I would simply call ""IPA.utb"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/505#issuecomment-366645314,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","@garconvacher are you going to addess the concerns that @bertfrees had in the previous comment?
What about IPA.utb (formerly IPA_extend.utb) and IPA-symbols.uti(formerly IPA_base.utb)?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/garconvacher,7,https://github.com/liblouis/liblouis/pull/505#issuecomment-366662234,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","Sorry @egli and @bertfrees, I forgot to reply.
I think these tables needs some tweaks:
IPA_base.utb should only contain the Unicode symbol for Phonetics. I will check it.
IPA_extend.utb should only contain the symbols that could create conflicts with other tables (e.g. theta /X03B8... I wrote to Unicode consortium about these issues).
About the tables name, IPA_base could become IPA-reserved-unicode-range and IPA_extend could become IPA-NONreserved-unicode-range. What do you think?
By the way, is there documentation on the files extensions? I don't know the difference between .utb and .uti.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/505#issuecomment-366670124,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","The ""i"" in "".uti"" means ""meant for inclusion"". There's no documentation because it's not really official.
I could live with ""IPA-reserved-unicode-range.uti"" (although it's a bit verbose compared to ""IPA-symbols.uti""), but ""IPA-NONreserved-unicode-range"" sounds a bit far-fetched. Why do we need this table? You say it's not meant for inclusion, and obviously it can't be used on it's own either, so what is it for? If it is merely there for copy-pasting individual rules from into other tables, I don't think it ought to be a table.
That is why I suggested to make a table called ""IPA.utb"" which is ""IPA_extend.utb"" with the base table included at the beginning. In this form, I imagine the table would be useful as standalone.
The alternative is to put the symbols outside of the reserved unicode range also in the base table, but commented out.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/garconvacher,9,https://github.com/liblouis/liblouis/pull/505#issuecomment-366692612,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","The alternative is to put the symbols outside of the reserved unicode range also in the base table, but commented out.

This is the original table.
There's a big issue with the symbols in the ""extend"" table.
E.g.: Theta (/X03B8) is the greek letter.
Official IPA braille code: 46-1456, it's fine with most of locales tables but there's somes conflicts with a few tables :
fr-bfu-comp68.cti: 45-245
gr-bb.ctb: 1456
nl-NL-g0.utb: 56-1456
sk-chardefs.cti: 45-1456
zh-hk.ctb: 46-1
In phonetics, theta is the symbol used to the sound made by ""th"" in ""thing"" or ""eighth"".
I don't know what to do to avoid conflicts or mistakes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/505#issuecomment-366696897,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","The alternative is to put the symbols outside of the reserved unicode range also in the base table, but commented out.

This is the original table.

OK, I see. Well yeah, that makes sense. I don't see how putting these rules in a separate table that can not be included is any different/better than keeping them in the same table but commented out.
So how about my proposal of creating a ""IPA.utb"" table which includes everything (nothing commented out)? This way at least you can translate phonetics by switching to the IPA table when phonetics passages are encountered.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/garconvacher,11,https://github.com/liblouis/liblouis/pull/505#issuecomment-366703453,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.",Seems tricky. How to detect phonetics passages? The only cue is the brackets around the phonetic.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/505#issuecomment-366706620,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","That is up to the caller. Liblouis itself can't do the detection. But let's say you have a HTML document like this:
<dl>
  <dt>braille  (<span class=""pronunciation"">brāl</span>)</dt>
  <dd>n.</dd>
  <dd>A system of writing and printing for blind or visually impaired people, in which
  varied arrangements of raised dots representing letters and numerals are identified
  by touch.</dd>
</dl>
In this case the phonetics have already been marked up and the span can be translated with a different table. It is this use case I would like to cover. And at the same time, it provides a valid argument for putting the phonetic symbols that are not part of IPA unicode range in a separate table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/garconvacher,13,https://github.com/liblouis/liblouis/pull/505#issuecomment-366717168,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","There's a better tag, <phoneme>, in SSML. This is a W3C recommendation but not implanted in any web browser...
The real issue is these few characters missing from the unicode phonetic blocks. There are ""fake"" phi, gamma or 'small' R in this unicode. It's a shame :-/",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/505#issuecomment-366722847,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","I understand the issue, and yes, it makes things a bit difficult. But I doubt that Unicode is ever going to change this, because ""Unicode aims at encoding graphemes, not individual ""meanings"" (""semantics"") of graphemes, and not glyphs"". So I think my proposed solution is the best Liblouis can do at the moment. If you don't object I'm going to replace your IPA_extend.utb with my suggested IPA.utb that includes everything including the what you call ""fake"" symbols. I won't touch your IPA_base.utb except that I'll rename it to ""IPA-unicode-range.uti"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/garconvacher,15,https://github.com/liblouis/liblouis/pull/505#issuecomment-366902411,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.","Hi,
Sounds good for me.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,505,2018-01-23T09:30:11Z,2018-02-26T10:35:15Z,2018-02-26T10:35:15Z,MERGED,True,276,208,5,https://github.com/garconvacher,Split IPA.utb table (International Phonetic Alphabet),7,[],https://github.com/liblouis/liblouis/pull/505,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/505#issuecomment-368152055,"IPA.utb split in two tables:

IPA_base.utb might not conflict with other tables.
IPA_extend.utb might conflict with other tables. This table is not intended to be included in other tables. It serves as a reference to pick up some symbols for local braille codes.",I rebased the branch and added the proposed changed.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,508,2018-02-01T13:10:03Z,2022-03-01T16:25:56Z,2022-03-01T16:25:57Z,CLOSED,False,112,23,6,https://github.com/egli,Disable case sensitivity checks when capitalization is not enabled,1,['invalid'],https://github.com/liblouis/liblouis/pull/508,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/508,"When a table does not define any capitalization opcodes we would expect liblouis to allow contractions regardless of any capitalization, be it at the beginning or in the middle of a word.
This patch introduces a new attribute of the table struct usesCapitalization that is set to 1 if the table contains any capitalization opcodes. The translation then only does capitalization emphasis handling if this attribute is set to 1. Also checks whether a rule can apply across capitalization changes are also only done for tables that have capitalization opcodes.
Fixes #507","When a table does not define any capitalization opcodes we would expect liblouis to allow contractions regardless of any capitalization, be it at the beginning or in the middle of a word.
This patch introduces a new attribute of the table struct usesCapitalization that is set to 1 if the table contains any capitalization opcodes. The translation then only does capitalization emphasis handling if this attribute is set to 1. Also checks whether a rule can apply across capitalization changes are also only done for tables that have capitalization opcodes.
Fixes #507",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,508,2018-02-01T13:10:03Z,2022-03-01T16:25:56Z,2022-03-01T16:25:57Z,CLOSED,False,112,23,6,https://github.com/egli,Disable case sensitivity checks when capitalization is not enabled,1,['invalid'],https://github.com/liblouis/liblouis/pull/508,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/508#issuecomment-1055622152,"When a table does not define any capitalization opcodes we would expect liblouis to allow contractions regardless of any capitalization, be it at the beginning or in the middle of a word.
This patch introduces a new attribute of the table struct usesCapitalization that is set to 1 if the table contains any capitalization opcodes. The translation then only does capitalization emphasis handling if this attribute is set to 1. Also checks whether a rule can apply across capitalization changes are also only done for tables that have capitalization opcodes.
Fixes #507",Let's close this as we all know that this is never going to go in,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,510,2018-02-14T13:05:55Z,2018-02-19T13:45:18Z,2018-02-19T13:52:13Z,MERGED,True,4,7,4,https://github.com/egli,Remove support for comp8Dots,3,[],https://github.com/liblouis/liblouis/pull/510,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/510,Fixes #497,Fixes #497,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/511,Resolves #462.,Resolves #462.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/511#issuecomment-366008271,Resolves #462.,"Seems to fail because of a format error, possibly in lou_translateString.c. How can I find the exact error?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/511#issuecomment-366049182,Resolves #462.,"It's OK, we can fix that while merging. As long as the 4 other builds pass, it's fine.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/511#issuecomment-366050405,Resolves #462.,"I would have changed ""warning: pass1Only mode has been deprecated"" to ""warning: pass1Only mode is not supported anymore"". And I also notice now that lou_translateString.c didn't have such a warning, maybe it should be added.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/511#issuecomment-366168364,Resolves #462.,"Thank you very much. However, it would be nice if I could also check and correct these errors myself. I am bound to make this type of error every now and then, because it is difficult for me to be sure about things as indentation and extra tabs and spaces.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/511#issuecomment-366173993,Resolves #462.,To be honest I'm not very happy with the way we have set up the travis test to check the quality of the source code. I've reopened #438.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/511#issuecomment-366174473,Resolves #462.,"Ok, I will re-enable the warning for both functions.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/511#issuecomment-366196847,Resolves #462.,"@BueVest Thanks for fixing the warnings.
The formatting issues are not real errors, you shouldn't care too much about it. The check is just there to remind the person who does the merge to fix the formatting first.
You could do it yourself by running make format-sources and committing the changes. You need to have clang-format installed for this. However the issue is that apparently newer versions of clang-format behave slightly different.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/511#issuecomment-368008487,Resolves #462.,"Is there anything else I need to do here before we merge?
Turns out that Clang is not that easy to install on Ubuntu on Windows, so I probably can't fix the formating, at least not just now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,511,2018-02-14T16:05:55Z,2018-02-23T21:26:55Z,2018-02-23T21:26:55Z,MERGED,True,59,156,10,https://github.com/BueVest,Buevest remove pass1 only,5,[],https://github.com/liblouis/liblouis/pull/511,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/511#issuecomment-368028973,Resolves #462.,"@BueVest No everything is fine, it will be included in 3.5. Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,513,2018-02-17T00:01:46Z,2018-03-05T10:06:06Z,2018-03-05T10:06:06Z,MERGED,True,341,325,2,https://github.com/rimas-kudelis,Display table fixes,3,['tables'],https://github.com/liblouis/liblouis/pull/513,https://github.com/rimas-kudelis,1,https://github.com/liblouis/liblouis/pull/513,"This touches the issue described in #503, although apparently there's very little to no data available about mappings between dots and chars used internally in various braille notetakers. In particular, there's very little information on mappings of dot combinations with dots 7 and/or 8. Furthermore, it seems that these mappings might be vendor- or locale-dependent. If that's the case, I guess we can consider #503 as fixed, or just lacking further information.","This touches the issue described in #503, although apparently there's very little to no data available about mappings between dots and chars used internally in various braille notetakers. In particular, there's very little information on mappings of dot combinations with dots 7 and/or 8. Furthermore, it seems that these mappings might be vendor- or locale-dependent. If that's the case, I guess we can consider #503 as fixed, or just lacking further information.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,513,2018-02-17T00:01:46Z,2018-03-05T10:06:06Z,2018-03-05T10:06:06Z,MERGED,True,341,325,2,https://github.com/rimas-kudelis,Display table fixes,3,['tables'],https://github.com/liblouis/liblouis/pull/513,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/513#issuecomment-370164194,"This touches the issue described in #503, although apparently there's very little to no data available about mappings between dots and chars used internally in various braille notetakers. In particular, there's very little information on mappings of dot combinations with dots 7 and/or 8. Furthermore, it seems that these mappings might be vendor- or locale-dependent. If that's the case, I guess we can consider #503 as fixed, or just lacking further information.",I've rebased and updated the last commit message a bit because it was not possible to see from the diff exactly what happened.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,515,2018-02-19T16:06:37Z,2018-02-20T08:32:47Z,2018-02-20T08:32:55Z,CLOSED,False,28,69,9,https://github.com/egli,Fix some warnings,2,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/515,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/515,"Such as

-Wunused-parameter
-Wunused-but-set-variable
-Wunused-function
-Wunused-result
-Wunused-variable
-Wold-style-declaration
-Wmissing-braces
-Wswitch

This PR is related but does not fix #322
Also the second commit is controversial in that it actually changes the public API of liblouis just for the sake of fixing a warning.","Such as

-Wunused-parameter
-Wunused-but-set-variable
-Wunused-function
-Wunused-result
-Wunused-variable
-Wold-style-declaration
-Wmissing-braces
-Wswitch

This PR is related but does not fix #322
Also the second commit is controversial in that it actually changes the public API of liblouis just for the sake of fixing a warning.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,515,2018-02-19T16:06:37Z,2018-02-20T08:32:47Z,2018-02-20T08:32:55Z,CLOSED,False,28,69,9,https://github.com/egli,Fix some warnings,2,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/515,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/515#issuecomment-366902986,"Such as

-Wunused-parameter
-Wunused-but-set-variable
-Wunused-function
-Wunused-result
-Wunused-variable
-Wold-style-declaration
-Wmissing-braces
-Wswitch

This PR is related but does not fix #322
Also the second commit is controversial in that it actually changes the public API of liblouis just for the sake of fixing a warning.","Split the PR into two separate PRs (#517 and #518), so this PR is superseded.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,517,2018-02-20T08:30:31Z,2018-02-23T08:44:01Z,2019-03-18T09:25:26Z,MERGED,True,26,72,7,https://github.com/egli,"Fix warnings such as -Wunused-parameter, etc",3,['refactoring'],https://github.com/liblouis/liblouis/pull/517,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/517,"-Wunused-parameter
-Wunused-but-set-variable
-Wunused-function
-Wunused-result
-Wunused-variable
-Wold-style-declaration
-Wmissing-braces
-Wswitch
This is related to #322 but doesn't actually fix any warnings that are
mentioned in there. It does however fix some warnings that are listed
in
https://www.freelists.org/post/liblouis-liblouisxml/liblouis-340-has-been-released,1","-Wunused-parameter
-Wunused-but-set-variable
-Wunused-function
-Wunused-result
-Wunused-variable
-Wold-style-declaration
-Wmissing-braces
-Wswitch
This is related to #322 but doesn't actually fix any warnings that are
mentioned in there. It does however fix some warnings that are listed
in
https://www.freelists.org/post/liblouis-liblouisxml/liblouis-340-has-been-released,1",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,517,2018-02-20T08:30:31Z,2018-02-23T08:44:01Z,2019-03-18T09:25:26Z,MERGED,True,26,72,7,https://github.com/egli,"Fix warnings such as -Wunused-parameter, etc",3,['refactoring'],https://github.com/liblouis/liblouis/pull/517,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/517#issuecomment-366938494,"-Wunused-parameter
-Wunused-but-set-variable
-Wunused-function
-Wunused-result
-Wunused-variable
-Wold-style-declaration
-Wmissing-braces
-Wswitch
This is related to #322 but doesn't actually fix any warnings that are
mentioned in there. It does however fix some warnings that are listed
in
https://www.freelists.org/post/liblouis-liblouisxml/liblouis-340-has-been-released,1","Removing unused functions is fine I think but then we should also remove the calls to these functions that are commented out. For example, the calls to makeDoubleRule were commented out in 961b0f4. I also think it's interesting to mention in the commit message when things have become unused. For example, doCompEmph became unused in b1a74b3 (see also #622). The unused arguments in compileSwapDots, replaceGrouping, removeGrouping and markEmphases were just mistakes in my bbcfd03 / aef8868 refactoring.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,518,2018-02-20T08:31:04Z,,2022-03-28T17:08:04Z,OPEN,False,3,6,3,https://github.com/egli,Remove the mode parameter from lou_dotsToChar,1,"['on hold', 'cleanup', 'api change']",https://github.com/liblouis/liblouis/pull/518,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/518,"This fixes a -Wunused-parameter warning and basically makes the API
more honest, as it no longer pretend to do anything with the mode
param.
However is also changes the public API of liblouis, so I'm not sure we
should actully merge this change.
Related to #322","This fixes a -Wunused-parameter warning and basically makes the API
more honest, as it no longer pretend to do anything with the mode
param.
However is also changes the public API of liblouis, so I'm not sure we
should actully merge this change.
Related to #322",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,518,2018-02-20T08:31:04Z,,2022-03-28T17:08:04Z,OPEN,False,3,6,3,https://github.com/egli,Remove the mode parameter from lou_dotsToChar,1,"['on hold', 'cleanup', 'api change']",https://github.com/liblouis/liblouis/pull/518,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/518#issuecomment-366940258,"This fixes a -Wunused-parameter warning and basically makes the API
more honest, as it no longer pretend to do anything with the mode
param.
However is also changes the public API of liblouis, so I'm not sure we
should actully merge this change.
Related to #322",This argument became unused in c9e7460 (#337).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,518,2018-02-20T08:31:04Z,,2022-03-28T17:08:04Z,OPEN,False,3,6,3,https://github.com/egli,Remove the mode parameter from lou_dotsToChar,1,"['on hold', 'cleanup', 'api change']",https://github.com/liblouis/liblouis/pull/518,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/518#issuecomment-368034269,"This fixes a -Wunused-parameter warning and basically makes the API
more honest, as it no longer pretend to do anything with the mode
param.
However is also changes the public API of liblouis, so I'm not sure we
should actully merge this change.
Related to #322","It kind of makes sense to have a mode argument, because lou_charToDots also has it, and you never know if there will ever be a mode added that influences the result of lou_dotsToChar.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,518,2018-02-20T08:31:04Z,,2022-03-28T17:08:04Z,OPEN,False,3,6,3,https://github.com/egli,Remove the mode parameter from lou_dotsToChar,1,"['on hold', 'cleanup', 'api change']",https://github.com/liblouis/liblouis/pull/518,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/518#issuecomment-368038531,"This fixes a -Wunused-parameter warning and basically makes the API
more honest, as it no longer pretend to do anything with the mode
param.
However is also changes the public API of liblouis, so I'm not sure we
should actully merge this change.
Related to #322","you never know if there will ever be a mode added

I disagree with that kind of reasoning. If we ever need a mode argument we'll just add it in the future.
However for backwards compatibility reason I'm against removing it now. If we decide to remove it we need to give proper deprecation notice.
So I think we can move this off the 3.5 milestone. @bertfrees agreed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,518,2018-02-20T08:31:04Z,,2022-03-28T17:08:04Z,OPEN,False,3,6,3,https://github.com/egli,Remove the mode parameter from lou_dotsToChar,1,"['on hold', 'cleanup', 'api change']",https://github.com/liblouis/liblouis/pull/518,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/518#issuecomment-368038890,"This fixes a -Wunused-parameter warning and basically makes the API
more honest, as it no longer pretend to do anything with the mode
param.
However is also changes the public API of liblouis, so I'm not sure we
should actully merge this change.
Related to #322",OK,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,518,2018-02-20T08:31:04Z,,2022-03-28T17:08:04Z,OPEN,False,3,6,3,https://github.com/egli,Remove the mode parameter from lou_dotsToChar,1,"['on hold', 'cleanup', 'api change']",https://github.com/liblouis/liblouis/pull/518,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/518#issuecomment-368048868,"This fixes a -Wunused-parameter warning and basically makes the API
more honest, as it no longer pretend to do anything with the mode
param.
However is also changes the public API of liblouis, so I'm not sure we
should actully merge this change.
Related to #322","Heh, but I guess if we decide to remove it we should probably announce it in the 3.5 release.
OTOH I'm not sure this issue is important enough that we need to go through all this trouble",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,518,2018-02-20T08:31:04Z,,2022-03-28T17:08:04Z,OPEN,False,3,6,3,https://github.com/egli,Remove the mode parameter from lou_dotsToChar,1,"['on hold', 'cleanup', 'api change']",https://github.com/liblouis/liblouis/pull/518,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/518#issuecomment-464784514,"This fixes a -Wunused-parameter warning and basically makes the API
more honest, as it no longer pretend to do anything with the mode
param.
However is also changes the public API of liblouis, so I'm not sure we
should actully merge this change.
Related to #322",The issue is on hold as we do not want to change the public API of liblouis for such a minor thing. We might reconsider if/when we have more substantial changes to the API in future.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/519,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/519#issuecomment-366923652,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila",The hyphenation YAML test seems to hang when compiled without --enable-ucs4. @hammera does this work for you locally. Any idea why it wouldn't work on travis?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/hammera,3,https://github.com/liblouis/liblouis/pull/519#issuecomment-366940381,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","Chris, me not working local too in make check the yaml/hu-hu-g1-hyph_harness.yaml hyphenation test into the test directory if I not using the default --enable-ucs4 option the ./configure script into the top of source directory my Linux system.
In Ubuntu always this mode is used when Ubuntu maintainers compiling Liblouis packages.
So, if --enable-ucs4 option is used, everything works fine, if not, the Hungarian hyphenation test file producing freeze if the test directory anybody running the make check command, both local usage and the Travis build.
But, I don't understand why happening this.
The test file syntax is full right, the tables/hyph_hu_HU.dic file more years not happened any changes.
For example, If I downloading with mingw32 build and trying using the YAML test system with wine emulator, the hyphenation test freeze after 23 failures, and received hyphenation masks is difference in Windows build the expected outputs.
I did this not official test for official available Windows build:


I downloaded official windows build: https://github.com/liblouis/liblouis/releases/download/v3.4.0/liblouis-win32.zip


Create a tmp directory my home directory, and unzip the downloaded file in the tmp directory.


Copy all Hungarian test harness files from to liblouis source repository to the tmp directory, because only the bin/lou_checkyaml.exe command available in official windows build, the yaml test files is not.


Set following environment variable for wine: export louis_tablepath=z:\\home\\hammera\\tmp\\share\\liblouis


Ran following command to verify the test system works in Wine: wine bin/lou_checkyaml.exe hu-hu-comp8_harness.yaml 
Result: success (21 tests, 0 failures)
Wow, this is the expected result.


Try following command: wine bin/lou_checkyaml.exe hu-hu-g1_harness.yaml
Result:
lou_checkyaml.exe:hu-hu-g1_harness.yaml:1189: Too few cursor positions (2) for input string of length 18
Possible this is happening only because the 4.0 release yet not containing an inportant fix for input positions related.


Final, ran following command: wine bin/lou_checkyaml.exe hu-hu-g1-hyph_harness.yaml 2>test.txt
Result is very surprised me, ideal not good if the Liblouis hyphenation support producing different hyphenation masks with Linux and Windows, UCS4 mode or not UCS4 mode, look the entire quote of the generated test.txt file:


Input:    'adásszalagokat'
Expected: '00000001010100'
Received: '00000000110100'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:4: Failure
Input:    'adásszünet'
Expected: '0000100100'
Received: '0000000010'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:7: Failure
Input:    'adászárásig'
Expected: '00001010100'
Received: '00001101000'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:8: Failure
Input:    'adósszámla'
Expected: '0000100010'
Received: '0010101000'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:9: Failure
Input:    'Agyagosszergény'
Expected: '000010000001000'
Received: '000010110101000'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:10: Failure
Input:    'agyaggyűrűiken'
Expected: '00000100101100'
Received: '00000101101100'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:11: Failure
Input:    'agyonnyom'
Expected: '000001000'
Received: '000101000'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:12: Failure
Input:    'agyonnyúzott'
Expected: '000001001000'
Received: '000101001000'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:13: Failure
Input:    'agyonnyűtt'
Expected: '0000010000'
Received: '0001010000'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:14: Failure
Input:    'ágyásszegély'
Expected: '000001001000'
Received: '000001000010'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:16: Failure
Input:    'ápolásszakmai'
Expected: '0001001000100'
Received: '0000100000100'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:19: Failure
Input:    'aktivitásszint'
Expected: '00101010010000'
Received: '00100010000000'
lou_checkyaml.exe:hu-hu-g1-hyph_harness.yaml:23: Failure
fixme:console:CONSOLE_DefaultHandler Terminating process 8 on event 0

The last line happening because after lot of waiting I terminated Wine test with CTRL+C command.
With file tables/hyph_hu_HU.dic command says following information, I think the result is right:
hyph_hu_HU.dic: troff or preprocessor input, UTF-8 Unicode text
This file previous I copied from openoffice.org I think in 2012, and add few rule changes only.
Any idea with hyphenation masks difference related with not ucs4 and ucs4 modes related? Try replacing the oldest Hungarian hyphenation dictionary to the latest Libreoffice hyphenation dictionary?
Ideal situation the hyphenation masks is need equals good with all platforms (Linux build with --enable-ucs4 option, Windows build, etc).
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/hammera,4,https://github.com/liblouis/liblouis/pull/519#issuecomment-366948425,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","Chris, I tested the difference for example the agyonnyom word with Linux and Windows Mingw32 4.0 builds with builtin lou_checkhyphens commandline tool.
Look the results depending used the --enable-ucs4 option or not, other components not different (translation tables, hungarian hyphenation dictionary):
Linux Liblouis build version result if used the --enable-ucs4 option during configuration and compilation:
$ lou_checkhyphens 
Press one of the letters in parentheses, then enter.
(t)able, tr(a)nslated, (u)ntranslated, (r)un, (h)elp, (q)uit
Command: t
Enter the name of a table or a list: hu-hu-g1.ctb,hyph_hu_HU.dic
Command: r
Type something, press enter, and view the results.
A blank line returns to command entry.
agyonnyom
Hyphenation mask: 000001000
Hyphenated word: agyon-nyom

This is the right result, an another right hyphenated word result variation is a-gyon-nyom (not yet try setting this variation into the hyphenation dictionary, because if I known right, Liblouis doesn't support one letter level hyphenation).
Look the Windows build result after I set the louis_tablepath environvent values with z:\\home\\hammera\\tmp\\share\\liblouis, the hyphenate mask and calculated hyphenated word will be wrong:
$ wine bin/lou_checkhyphens.exe 
Press one of the letters in parentheses, then enter.
(t)able, tr(a)nslated, (u)ntranslated, (r)un, (h)elp, (q)uit
Command: t
Enter the name of a table or a list: tables/hu-hu-g1.ctb,tables/hyph_hu_HU.dic
Command: r
Type something, press enter, and view the results.
A blank line returns to command entry.
agyonnyom
Hyphenation mask: 000101000
Hyphenated word: agy-on-nyom
So, clear seeing have difference the generated hyphenation mask and calculated hyphenated word in Linux and Windows builds, depending possible if used the enable-ucs4 option or not.
The windows build lou_checkhyphens.exe command generated hyphenated word from the agyonnyom word is not right (agy-on-nyom), the right variations is agyon-nyom, or a-gyon-nyom, if future Liblouis or the Liblouis used hyphenation components supports one letter level hyphenation part in hyphenation patterns if this is need a word.
Hopefully I writing right this part in my little bad english.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/519#issuecomment-366964566,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","@egli This is related to #437 (84475f2). I changed how testmode: hyphenate works, so that the YAML doesn't need to be changed. I have the same issue with --enable-ucs4.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/519#issuecomment-366984277,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","@hammera if I understand correctly you are saying that the test also hangs for you locally if you do not configure with --enable-ucs4. So it seems to be that hyphenation probably has a problem unless compiled with --enable-ucs4. It seems that you are somehow running into this problem with yaml/hu-hu-g1-hyph_harness.yaml.
The question is now what we can do about this Pull Request.Obviously if it makes the test suite hang it cannot go in. @bertfrees any ideas?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/519#issuecomment-366985337,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila",Did Attila make any actual changes to the test or is it just format changes? If it is just format changes I suggest we drop it and replace with #437 because the 0s and 1s make the test difficult to read.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/519#issuecomment-366997597,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","He did change the format yes, but he also added the YAML file to the Makefile so that it is now run as part of the test suite. Before it was not run.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/519#issuecomment-366998402,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila",And no actual changes to the test data? OK then. In that case I would drop it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/hammera,10,https://github.com/liblouis/liblouis/pull/519#issuecomment-367014898,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","Chris, Bert, with Yaml file I not changed the test cases first column, only simple replaced the expected word data to the hyphenation mask to Yaml file works correctly when I using the lou_checkyaml command, and added tests/Makefile.am file the yaml/hu-hu-g1-hyph_harness.yaml file to the Hungarian hyphenation test ran's automatically with make check command.
I very surprised too without --enable-ucs4 configuration option this change produce freeze when local system or in Travis build used the make check command into the tests directory.
I am very sorry about this.
Original test case looks like this, the master branch previous available lou_checkyaml command doesn't right use the hyphenation tests:
Few examples the original format, with better human readable:
table: [tables/unicode.dis, tables/hu-hu-g1.ctb, tables/hyph_hu_HU.dic]
flags: {testmode: hyphenate}
tests:
  - [adásszalagokat, adássza-la-go-kat]
  - [adásszerű, adás-sze-rű]
  - [adásszöveg, adás-szö-veg]
Without my change in Master branch available Hungarian hyphenation test producing 1177 failures, few examples when I ran lou_checkyaml yaml/hu-hu-g1-hyph_harness.yaml command:
Input:    'adásszalagokat'
Expected: 'adássza-la-go-kat'
Received: '00000001010100'
lou_checkyaml:hu-hu-g1-hyph_harness.yaml:4: Failure
Input:    'adásszerű'
Expected: 'adás-sze-rű'
Received: '000010010'

If the format change doesn't need, because will be available a larger fix with Yaml test system hyphenation test support to correct understand and execute the first quoted original form with hyphenation test harness files, feel free drop my changes, because when I did this change I doesn't known the issue #437 related works.
Hopefully future will be not producing freeze with hyphenation test independent to use the --enable-ucs4 option or not when a hyphenation test harness file added into the tests/makefile.am.
Anybody have any idea why have difference with hyphenation result with Linux and Windows builds, depending use the --enable-ucs4 configuration option or not?
I described a reproduced example with lou_checkyaml and lou_checkhyphens command related a previous comment.
If need opening a separated issue this problem part related, I will opening a new issue this problem part related.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/519#issuecomment-367265614,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","@bertfrees are you saying that #437 adds support for proper YAML hyphenation testing, so that the change that @hammera did in this PR is no longer needed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/519#issuecomment-367266006,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila",Yeah.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/519#issuecomment-367269647,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","@bertfrees I could only see some changes to brl_checks.[ch] but none in lou_checkyaml.c, but maybe I wasn't looking hard enough.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/519#issuecomment-367270249,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","@hammera I'm closing this PR as

it makes the test suite hang. I opened a separate issue (#522) for that
the change to the YAML file for hyphenation is no longer needed as this will be supported once #437 goes in

Hope that is OK with you",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/519#issuecomment-367271470,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","@egli Yes, that's right. I only had to fix the check_hyphenation function which was already used in lou_checkyaml.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/519#issuecomment-367274783,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","@bertfrees Ah, OK, cool",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/hammera,17,https://github.com/liblouis/liblouis/pull/519#issuecomment-367280620,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","Absolute ok the close and opened issue.
The lou_checkyaml doued lou_checkhyphen fix when will be available with Master branch?
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/egli,18,https://github.com/liblouis/liblouis/pull/519#issuecomment-367328986,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila","The lou_checkhyphen fix when will be available with Master branch?

As soon as #437 is merged. Hopefully before the release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,519,2018-02-20T08:32:17Z,2018-02-21T09:50:35Z,2018-02-21T14:51:43Z,CLOSED,False,1178,1177,2,https://github.com/hammera,Fix hungarian hyphenation Yaml test harness file,1,[],https://github.com/liblouis/liblouis/pull/519,https://github.com/hammera,19,https://github.com/liblouis/liblouis/pull/519#issuecomment-367350743,"Hy Chris,
Default after Yaml test migration the Hungarian hyphenation test harness Yaml file expected output field is broken. With Yaml test system in expected output field wait hyphenation mask, not the calculated hyphenated word.
Now, again works right with Hungarian hyphenation test harness possibility after I regenerate good Hungarian hyphenation test harness file.
If this is possible, after reviewing this change please merge this modification into Liblouis master branch repository.
My test result:
After I recompile Liblouis, when I ran in tests directory the make check command, the hyphenation test runs correctly.
The Yaml directory created right the hu-hu-g1-hyph_harness.log file with following content:
SUCCESS (1177 tests, 0 failures)
PASS yaml/hu-hu-g1-hyph_harness.yaml (exit status: 0)

This is the expected result, the new regenerated Hungarian hyphenation test harness Yaml file real containing 1177 test cases.
Attila",Many thanks Chris.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,520,2018-02-20T09:16:19Z,2018-02-20T09:26:34Z,2018-02-20T09:26:40Z,MERGED,True,113,59,3,https://github.com/egli,Add updates to the Urdu tables,1,[],https://github.com/liblouis/liblouis/pull/520,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/520,"Thanks to Jake Kyle
Fixes #516","Thanks to Jake Kyle
Fixes #516",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,521,2018-02-20T16:11:44Z,2018-02-20T16:32:35Z,2018-02-21T13:32:47Z,MERGED,True,63,4,6,https://github.com/egli,No longer mark = as deprecated,4,[],https://github.com/liblouis/liblouis/pull/521,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/521,"Fixed the documentation accordingly and
added Bues test case","Fixed the documentation accordingly and
added Bues test case",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,521,2018-02-20T16:11:44Z,2018-02-20T16:32:35Z,2018-02-21T13:32:47Z,MERGED,True,63,4,6,https://github.com/egli,No longer mark = as deprecated,4,[],https://github.com/liblouis/liblouis/pull/521,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/521#issuecomment-367030502,"Fixed the documentation accordingly and
added Bues test case",Looks good!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,521,2018-02-20T16:11:44Z,2018-02-20T16:32:35Z,2018-02-21T13:32:47Z,MERGED,True,63,4,6,https://github.com/egli,No longer mark = as deprecated,4,[],https://github.com/liblouis/liblouis/pull/521,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/521#issuecomment-367093854,"Fixed the documentation accordingly and
added Bues test case","Good solution. I think we should make an issue about making the = operand support backtranslation. Wouldn’t the best way be to resolve it into dot patterns at compile time, or is there a better way?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,521,2018-02-20T16:11:44Z,2018-02-20T16:32:35Z,2018-02-21T13:32:47Z,MERGED,True,63,4,6,https://github.com/egli,No longer mark = as deprecated,4,[],https://github.com/liblouis/liblouis/pull/521,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/521#issuecomment-367149285,"Fixed the documentation accordingly and
added Bues test case",Yes that would be a good solution.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,521,2018-02-20T16:11:44Z,2018-02-20T16:32:35Z,2018-02-21T13:32:47Z,MERGED,True,63,4,6,https://github.com/egli,No longer mark = as deprecated,4,[],https://github.com/liblouis/liblouis/pull/521,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/521#issuecomment-367233680,"Fixed the documentation accordingly and
added Bues test case",@BueVest yes we should create an issue. Anyone willing to do that?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,521,2018-02-20T16:11:44Z,2018-02-20T16:32:35Z,2018-02-21T13:32:47Z,MERGED,True,63,4,6,https://github.com/egli,No longer mark = as deprecated,4,[],https://github.com/liblouis/liblouis/pull/521,https://github.com/BueVest,6,https://github.com/liblouis/liblouis/pull/521#issuecomment-367280280,"Fixed the documentation accordingly and
added Bues test case","Done, see #523",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,521,2018-02-20T16:11:44Z,2018-02-20T16:32:35Z,2018-02-21T13:32:47Z,MERGED,True,63,4,6,https://github.com/egli,No longer mark = as deprecated,4,[],https://github.com/liblouis/liblouis/pull/521,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/521#issuecomment-367326556,"Fixed the documentation accordingly and
added Bues test case",@BueVest thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,524,2018-02-21T17:23:46Z,2018-02-23T08:02:20Z,2018-02-24T18:06:42Z,MERGED,True,28890,28708,1,https://github.com/school510587,Update zh-tw.ctb to version 2018-02,6,[],https://github.com/liblouis/liblouis/pull/524,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/524,"Summary of changes:

Fix format tweaks throughout zh-tw.ctb.
Add the citation to the Wikipedia page of Taiwanese braille.
Assign a proper attribute opcode to every character (SIGNIFICANT CHANGE).
Fix/Update the title and the copyright declaration.
Other minor changes of rules (Chinese words/phrases, kana, number forms, and punctuations/symbols).

The latest discussion about zh-tw.ctb is available in Chinese mainly here:
https://groups.io/g/nvda-tw/topic/zh_tw_ctb_2018_01_d/9381842?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,9381842
Note: Although this is a significant change, it doesn't make zh-tw.ctb backward incompatible.
Reviewers:

Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>
Peng-An Chen <andy72039@gmail.com>","Summary of changes:

Fix format tweaks throughout zh-tw.ctb.
Add the citation to the Wikipedia page of Taiwanese braille.
Assign a proper attribute opcode to every character (SIGNIFICANT CHANGE).
Fix/Update the title and the copyright declaration.
Other minor changes of rules (Chinese words/phrases, kana, number forms, and punctuations/symbols).

The latest discussion about zh-tw.ctb is available in Chinese mainly here:
https://groups.io/g/nvda-tw/topic/zh_tw_ctb_2018_01_d/9381842?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,9381842
Note: Although this is a significant change, it doesn't make zh-tw.ctb backward incompatible.
Reviewers:

Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>
Peng-An Chen <andy72039@gmail.com>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,526,2018-02-23T13:16:17Z,2018-02-23T15:16:39Z,2018-02-23T15:16:44Z,MERGED,True,26,19,3,https://github.com/egli,Fix more warnings,5,['refactoring'],https://github.com/liblouis/liblouis/pull/526,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/526,"-Wparentheses
-Wdangling-else
-Wsign-compare
-Wpointer-sign","-Wparentheses
-Wdangling-else
-Wsign-compare
-Wpointer-sign",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/527,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/527#issuecomment-368061553,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","Yes, you are right. I could have used the structure in check_base(). In fact, I did so in my first sketch with `realloc()` of the buffers and everything.

However, I thought that the check-base() function was already on the long side. So I decided to give the new code its own function, mostly for readability, even though it is only called from one place.

I don’t know what would be the best practice to follow here.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/527#issuecomment-368062702,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","Yes, I will do that. I thought of using constants in stead of numeric values. How about DIRECTION_FORWARD, DIRECTION_BACKWARD and DIRECTION_BOTH?

Just wanted to know if I am on the right track.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/527#issuecomment-368071963,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","The check_base function was created to remove duplication. I think the right approach is adding your code to this function, otherwise a lot of duplication is added again. If you want to reduce the allowed options for this test mode it can be done by raising exceptions for illegal combinations of options in check_base.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/527#issuecomment-368240338,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","I have looked at it again, and I can’t quite see how I can avoid duplicating or almost duplicating code. I would still need to swap the input and expected parameters and `realloc()` all buffers and then test using a subset of the testing code. I could do it in the `check_base` function, but it would probably take up just as many lines and duplicate as much code or otherwise be quite unreadable. I made the new function in the first place mainly for readability.

Bert, could you please be a little more specific as to how I could do this smarter. If there is any thing I have overlooked or a better way to do it, I would be happy to learn it.

I don’t need to prohibit the extra options with direction = 2. It is just that `typeform` and cursor positions etc. could only apply to the forward part of the test, not the backward part, because the corresponding backward test would require different positions etc. I think it would be fair to say that if you wanted to apply these advanced options to a backward test, you would still have to define backward tests explicitly.

Anyway, that will be quite easy, once you can use the same tables for more than one set of tests (smile)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/527#issuecomment-368442043,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","OK I didn't look at the code that well the first time. It's not as bad as it looked. You already call reduced_backtrans_check from check_base, that's good. But I think there is some more opportunity to reduce duplication (without making it unreadable). It's a bit difficult to explain how I would do it without actually trying it out though. Maybe I should just have a look when you're done with the branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/527#issuecomment-368564774,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","Thank you. That is kind of you. I will just continue in the track then.

Perhaps, I can’t finish the branch for this release. My left shoulder is broken. So, I don’t work so much or so fast these days.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/527#issuecomment-368567822,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","OK, that's fine. We didn't really plan for this to go in 3.5 anyway. It's not a change in a table or in the library, so whether or not this is in a release does not matter much.
Recover well!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/527#issuecomment-368777361,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","My left shoulder is broken

Oh, sorry to hear that. Hope you get well soon",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/527#issuecomment-386791088,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.",@BueVest Is this still in the pipeline for 3.6?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,11,https://github.com/liblouis/liblouis/pull/527#issuecomment-386904333,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","I can’t promise to finish it for 3.6  at the moment, but I will see what I can manage.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/527#issuecomment-391648799,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.",@BueVest what is the status on this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,13,https://github.com/liblouis/liblouis/pull/527#issuecomment-392369756,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","That is in itself a good question (see the last commit). Obviously, I am doing something horribly wrong, but what?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,14,https://github.com/liblouis/liblouis/pull/527#issuecomment-393088404,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","Ok, I think we are ready for review.
I see that there are some conflicts that need to be resolved, but I don't quite know how to go about it.
I have attached a yaml file to illustrate and test multiple tables with multiple test sections.
test_366_421.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/527#issuecomment-393273879,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","Thanks. It looks good at first sight. Everything nicely documented. But I'm going to look harder when I have the time. I'll also check if there is an opportunity to reduce duplication, as I said above.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,16,https://github.com/liblouis/liblouis/pull/527#issuecomment-393681253,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","Ok, seems like I still have some kind of formating issue that Clang doesn't like, Probably some indentation thingy. Could either of you help me with that?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/egli,17,https://github.com/liblouis/liblouis/pull/527#issuecomment-393848723,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.",I'll see if I have time this afternoon,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/527#issuecomment-393849156,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.",@egli I can do it when I merge.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/BueVest,19,https://github.com/liblouis/liblouis/pull/527#issuecomment-393870217,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","Thank you.

If it isn’t just a random indentation, but something more systematic that I have overlooked, please, let me know so that I can be aware of it in the future.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/527#issuecomment-394407368,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.",Merged in 846254c.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,527,2018-02-23T13:20:09Z,2018-06-04T16:08:06Z,2018-06-04T16:20:11Z,CLOSED,False,284,1188,14,https://github.com/BueVest,Buevest issue366 421,11,['test framework'],https://github.com/liblouis/liblouis/pull/527,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/527#issuecomment-394414257,"Is this the way to go with #421? When testmode bothDirections is specified, inpos, outpos and cursorpos only apply to the forward translation.
Try it on a dictionary harness - very instructive :-)
If this looks ok, I will document the feature and start on #366.","@BueVest Everything was fine, except that bit of duplication, which I removed now. And I also made inputPos and outposPos work with testmode:bothDirections, because I will be needing that feature.
Thanks again for the great work! Looking forward to your next contributions ;)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,528,2018-02-27T20:46:41Z,2018-02-28T09:31:57Z,2018-02-28T09:31:57Z,MERGED,True,19,14,6,https://github.com/BueVest,Minor updates to Danish tables.,2,[],https://github.com/liblouis/liblouis/pull/528,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/528,"Updated hyphenation file with a few words.
Corrected back-translation of letters with letsign in 6 dots grade 2.","Updated hyphenation file with a few words.
Corrected back-translation of letters with letsign in 6 dots grade 2.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/530,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225","Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/530#issuecomment-369227522,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225",@egli I'd like to get this into 3.5.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/530#issuecomment-369231229,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225","If we can't fix the build in time I can always remove the ""displayName"" test (which is responsible for generating the metadata) and only include the table changes for now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/530#issuecomment-369233028,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225",I think Travis is complaining when I try to link displayName.o with displayLanguage.a which is generated by go. On my machine this worked fine.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/530#issuecomment-369244055,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225","I'd be very reluctant to add go to the liblouis build process. If hard pressed you could talk me into Rust

I specifically did not add the Go code to the library (this was my initial plan, to generate the names on the fly) and instead just generate the metadata during a test. While the test is still part of the build, it does not really need to run, because the metadata is in the source code. So we could make it optional maybe if you don't like to add Go as a dependency, which I can understand.
By the way, what so great about Rust and wouldn't this be an additional dependency as well?

Taking one step further back: what is the purpose of the name and display-name fields? While name seems to make sense, display-name appears to be for localization? Shouldn't we use some established localization infrastructure (such as gettext) then?

The idea is indeed that display-name could later be combined with a localisation tool. The field would become something like:
#-display-name: %{display_name_de_g2}

The localisation tool would then look up the entry ""display_name_de_g2"" for the system locale.
See also #286.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/530#issuecomment-369565632,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225","We decided that I'm going to split up this PR into

just the metadata
the script for generating the metadata, but I'm going to extract it from make check and the Automake infrastructure, and only run it on demand or on Travis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/530#issuecomment-370059044,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225",I've created a new PR with only the metadata: #534. I'll rename this one.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/530#issuecomment-376906356,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225","Hi @bertfrees
I had a quick look at this PR. If I understand correctly this adds a script in contrib that relies on a go library that downloads data from the Unicode Common Locale Data Repository. It then uses that information to

build an index of table filename and display-name and
build a tool that can cross-check whether the display-name corresponds to the locale metadata. This script is only run if you invoke it manually

BTW: it appears that the functionality to get display-names from a locale is there in the golibrary but is not there when using Rust for example.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/530#issuecomment-376909359,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225","Yes. Except that the index is not built, it's in the source code. It is there for getting an overview of all the display names and for easily editing them.
I don't know how the go library does it. You think it connects to some online database?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/530#issuecomment-379489792,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225",Ok to go in?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,530,2018-02-28T12:41:05Z,2018-04-12T23:18:41Z,2018-04-12T23:18:46Z,MERGED,True,576,8,10,https://github.com/bertfrees,"Script for generating ""display-name"" metadata",2,['enhancement'],https://github.com/liblouis/liblouis/pull/530,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/530#issuecomment-379734820,"Add metadata fields ""name"" and ""display-name"" to tables. name contains a description of the table in the native language. display-name contains an English description.
-> This part has moved to #534

The display-name fields are kept in sync with a central file and can optionally be generated based on table metadata.
Fixes #225","Thanks.
It's not just double-checking. If I didn't have the Go function I wouldn't be able to generate the meta data at all. Or I would have to rewrite the Go function in C. That could be the next step.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,531,2018-03-01T13:02:42Z,2018-03-01T16:11:14Z,2018-03-01T16:11:21Z,MERGED,True,183,299,1,https://github.com/egli,Remove compbrl handling from for_updatePositions,5,[],https://github.com/liblouis/liblouis/pull/531,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/531,"This code removes the dead code to handle compbrl from the for_updatePositions function as it is now handled

The first commit simply removes that code
Some parameters that were used by the removed code are no longer needed. Hence the second commit removes the unused parameters in all involved functions
The third commit removes a test that is now always true since the same condition is tested further up in the while loop

This PR fixes #502","This code removes the dead code to handle compbrl from the for_updatePositions function as it is now handled

The first commit simply removes that code
Some parameters that were used by the removed code are no longer needed. Hence the second commit removes the unused parameters in all involved functions
The third commit removes a test that is now always true since the same condition is tested further up in the while loop

This PR fixes #502",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,532,2018-03-02T10:18:29Z,2018-03-02T10:28:35Z,2018-03-02T10:28:39Z,MERGED,True,38,1157,8,https://github.com/egli,Remove old UEB tables,2,[],https://github.com/liblouis/liblouis/pull/532,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/532,Fixes #468,Fixes #468,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,534,2018-03-02T21:32:50Z,2018-03-05T09:52:14Z,2018-03-05T09:54:22Z,MERGED,True,281,2,131,https://github.com/bertfrees,"Add metadata fields ""name"" and ""display-name"" to tables",2,['enhancement'],https://github.com/liblouis/liblouis/pull/534,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/534,"This is the same as #530 but only the metadata, not the test.
Fixes #286","This is the same as #530 but only the metadata, not the test.
Fixes #286",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,534,2018-03-02T21:32:50Z,2018-03-05T09:52:14Z,2018-03-05T09:54:22Z,MERGED,True,281,2,131,https://github.com/bertfrees,"Add metadata fields ""name"" and ""display-name"" to tables",2,['enhancement'],https://github.com/liblouis/liblouis/pull/534,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/534#issuecomment-370366605,"This is the same as #530 but only the metadata, not the test.
Fixes #286",Yes I agree.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,535,2018-03-03T18:21:11Z,2018-03-05T09:50:07Z,2018-03-05T09:50:07Z,MERGED,True,68,55,1,https://github.com/BueVest,Corrected more words outside primary test harness.,1,[],https://github.com/liblouis/liblouis/pull/535,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/535,Could this branch be merged once more? Just got some last minute words to update.,Could this branch be merged once more? Just got some last minute words to update.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,536,2018-03-05T10:49:44Z,2018-03-05T15:10:34Z,2018-03-05T15:10:40Z,MERGED,True,347,29,25,https://github.com/bertfrees,"Various bugfixes, a generalization of the class opcode, and a table for Ukrainian",9,[],https://github.com/liblouis/liblouis/pull/536,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/536,"I'm just putting this into one PR for now.
Replaces #453
Fixes #238","I'm just putting this into one PR for now.
Replaces #453
Fixes #238",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,536,2018-03-05T10:49:44Z,2018-03-05T15:10:34Z,2018-03-05T15:10:40Z,MERGED,True,347,29,25,https://github.com/bertfrees,"Various bugfixes, a generalization of the class opcode, and a table for Ukrainian",9,[],https://github.com/liblouis/liblouis/pull/536,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/536#issuecomment-370438813,"I'm just putting this into one PR for now.
Replaces #453
Fixes #238",Looks fine now,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,536,2018-03-05T10:49:44Z,2018-03-05T15:10:34Z,2018-03-05T15:10:40Z,MERGED,True,347,29,25,https://github.com/bertfrees,"Various bugfixes, a generalization of the class opcode, and a table for Ukrainian",9,[],https://github.com/liblouis/liblouis/pull/536,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/536#issuecomment-370444216,"I'm just putting this into one PR for now.
Replaces #453
Fixes #238",A better way would be to say: “This sentence is a lie.”,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,542,2018-03-19T16:31:22Z,2018-05-28T11:35:09Z,2018-05-28T11:35:10Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Added the Czech 8-dots computer table,4,['tables'],https://github.com/liblouis/liblouis/pull/542,https://github.com/HegrJan,1,https://github.com/liblouis/liblouis/pull/542,The table is based on the Czech8.bwe (Window-Eyes Braille table) plus some unicode math symbols were added according the Czech Braille standard.,The table is based on the Czech8.bwe (Window-Eyes Braille table) plus some unicode math symbols were added according the Czech Braille standard.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,542,2018-03-19T16:31:22Z,2018-05-28T11:35:09Z,2018-05-28T11:35:10Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Added the Czech 8-dots computer table,4,['tables'],https://github.com/liblouis/liblouis/pull/542,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/542#issuecomment-374320451,The table is based on the Czech8.bwe (Window-Eyes Braille table) plus some unicode math symbols were added according the Czech Braille standard.,"Perfect, thanks!
The table has almost everything we want: a license, metadata, a description with references to the implemented braille standards. Except maybe the description should be a bit more clear about what ""Czech8.bwe"" is. I didn't understand until I saw your the PR comment.
One thing that is missing but would be nice to have is a small test, to safeguard your work. Basically, this means you provide some input strings and corresponding braille. If for any reason we make changes to the table later and it doesn't behave as expected anymore, we'll be notified. For example, Zvonimir Stanecic provided a (very minimal and incomplete) test that makes use of a pangram: cz-8dots_harness.txt. You could do something similar but hopefully a bit more substantial. We use a YAML syntax for tests these days. It is described here. But it's the content that matters, we can help with the formatting if needed.
I also have another suggestion. I noticed there is some duplication between cs-letterDef8Dots.cti and the existing cs-chardefs.cti (which is included in cs-g1.ctb). Well, strictly speaking it is not duplication, because cs-chardefs.cti says for instance
uplow \x00C1\x00E1 16,16

while your cs-letterDef8Dots.cti adds a dot 7 for the uppercase
uplow \x00C1\x00E1 167,16

But because the uppercase definitions are irrelevant for cs-g1.ctb, cs-chardefs.cti could include cs-letterDef8Dots.cti.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,542,2018-03-19T16:31:22Z,2018-05-28T11:35:09Z,2018-05-28T11:35:10Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Added the Czech 8-dots computer table,4,['tables'],https://github.com/liblouis/liblouis/pull/542,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/542#issuecomment-374325400,The table is based on the Czech8.bwe (Window-Eyes Braille table) plus some unicode math symbols were added according the Czech Braille standard.,"I noticed there is some duplication between cs-letterDef8Dots.cti and the existing cs-chardefs.cti.

I hadn't looked at it very carefully yet. Apparently there are some differences. For example, ""Ľ""
has different translations in cs-comp8.ctb and cs-chardefs.cti. Are these differences intentional? It seems a bit confusing to me.
Also, latinLetterDef8Dots.uti can not be simply included in cs-letterDef8Dots.cti because apparently the ""W"" has a different translation (the ""Ř"" translates to W's usual dot pattern). Maybe this could be explained in a short comment at the top of cs-letterDef8Dots.cti?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,542,2018-03-19T16:31:22Z,2018-05-28T11:35:09Z,2018-05-28T11:35:10Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Added the Czech 8-dots computer table,4,['tables'],https://github.com/liblouis/liblouis/pull/542,https://github.com/HegrJan,4,https://github.com/liblouis/liblouis/pull/542#issuecomment-374380313,The table is based on the Czech8.bwe (Window-Eyes Braille table) plus some unicode math symbols were added according the Czech Braille standard.,"Okay, it's good idea to have some tests, I'll try to provide some. The file you've pointed to contains great sentence to test all the Czech letters, but it should perhaps check both uppercase and lowercase.
The difference in ""w"" translation is the reason I couldn't simply include the latinLetterDef8Dots.uti, you've noticed that the most common pattern used for it is occupied by ""ř"" (r with caron) in Czech.
The ""l"" with acute or caron don't belong to the Czech alphabet, they are actually letters used in Slovak and I didn't care much about them. I just fixed the ""L with caron""'s translation in 8-dots variant.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,542,2018-03-19T16:31:22Z,2018-05-28T11:35:09Z,2018-05-28T11:35:10Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Added the Czech 8-dots computer table,4,['tables'],https://github.com/liblouis/liblouis/pull/542,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/542#issuecomment-379212689,The table is based on the Czech8.bwe (Window-Eyes Braille table) plus some unicode math symbols were added according the Czech Braille standard.,"Left to do:

 If possible merge cs-letterDef8Dots.cti and cs-chardefs.cti or include one inside the other. If not possible write a short explanation of the differences.
 Write a short explanation of the differences between cs-letterDef8Dots.cti/cs-chardefs.cti and latinLetterDef8Dots.uti
 add something to NEWS",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,542,2018-03-19T16:31:22Z,2018-05-28T11:35:09Z,2018-05-28T11:35:10Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Added the Czech 8-dots computer table,4,['tables'],https://github.com/liblouis/liblouis/pull/542,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/542#issuecomment-392503215,The table is based on the Czech8.bwe (Window-Eyes Braille table) plus some unicode math symbols were added according the Czech Braille standard.,Merged in 3fbf0f1,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,545,2018-03-30T15:31:59Z,2018-05-28T11:49:39Z,2018-05-28T11:49:39Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Czech 6-dots table fix and tests,4,['tables'],https://github.com/liblouis/liblouis/pull/545,https://github.com/HegrJan,1,https://github.com/liblouis/liblouis/pull/545,"dropped multiple include
fixed curly brackets representation
fixed number sign representation
added copyright sign
added tests","dropped multiple include
fixed curly brackets representation
fixed number sign representation
added copyright sign
added tests",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,545,2018-03-30T15:31:59Z,2018-05-28T11:49:39Z,2018-05-28T11:49:39Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Czech 6-dots table fix and tests,4,['tables'],https://github.com/liblouis/liblouis/pull/545,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/545#issuecomment-379208952,"dropped multiple include
fixed curly brackets representation
fixed number sign representation
added copyright sign
added tests","To do:

 delete Cz-Cz-g1
 add something to NEWS
 adapt tables/Makefile.am",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,545,2018-03-30T15:31:59Z,2018-05-28T11:49:39Z,2018-05-28T11:49:39Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Czech 6-dots table fix and tests,4,['tables'],https://github.com/liblouis/liblouis/pull/545,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/545#issuecomment-379226429,"dropped multiple include
fixed curly brackets representation
fixed number sign representation
added copyright sign
added tests",Right. Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,545,2018-03-30T15:31:59Z,2018-05-28T11:49:39Z,2018-05-28T11:49:39Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Czech 6-dots table fix and tests,4,['tables'],https://github.com/liblouis/liblouis/pull/545,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/545#issuecomment-387005111,"dropped multiple include
fixed curly brackets representation
fixed number sign representation
added copyright sign
added tests","@bertfrees I'm a bit confused: You say that

the 3 first commits are handled in #542

Does that mean that I cannot merge this as is?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,545,2018-03-30T15:31:59Z,2018-05-28T11:49:39Z,2018-05-28T11:49:39Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Czech 6-dots table fix and tests,4,['tables'],https://github.com/liblouis/liblouis/pull/545,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/545#issuecomment-387011144,"dropped multiple include
fixed curly brackets representation
fixed number sign representation
added copyright sign
added tests",You should either take the two last commits or wait until #542 is ready.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,545,2018-03-30T15:31:59Z,2018-05-28T11:49:39Z,2018-05-28T11:49:39Z,CLOSED,False,51,256,8,https://github.com/HegrJan,Czech 6-dots table fix and tests,4,['tables'],https://github.com/liblouis/liblouis/pull/545,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/545#issuecomment-392506043,"dropped multiple include
fixed curly brackets representation
fixed number sign representation
added copyright sign
added tests",Merged in 91ce5ad,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,547,2018-04-07T18:25:20Z,2018-04-12T22:35:09Z,2018-04-12T22:39:50Z,MERGED,True,137,94,5,https://github.com/bertfrees,Fix input-output mapping of context rules,2,[],https://github.com/liblouis/liblouis/pull/547,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/547,This should fix #537.,This should fix #537.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,547,2018-04-07T18:25:20Z,2018-04-12T22:35:09Z,2018-04-12T22:39:50Z,MERGED,True,137,94,5,https://github.com/bertfrees,Fix input-output mapping of context rules,2,[],https://github.com/liblouis/liblouis/pull/547,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/547#issuecomment-379691284,This should fix #537.,"If github ever disappears we will have no info what this was all about.

Yes, I agree with you in general. Test comments, commit messages, etc. should be as complete as possible. However in this particular case I think the Github issue has nothing to add. The test says it all. The link just gives you the origin of the test, for information.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/548,"Also added support for a new option ""maxLength"" in YAML tests.","Also added support for a new option ""maxLength"" in YAML tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/548#issuecomment-379674429,"Also added support for a new option ""maxLength"" in YAML tests.","BTW @bertfrees, I can change the doc if you want me to.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/548#issuecomment-379691478,"Also added support for a new option ""maxLength"" in YAML tests.","I can change the doc if you want me to.

OK :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/548#issuecomment-379731222,"Also added support for a new option ""maxLength"" in YAML tests.","I don't quite understand the use case of this. Why do you specify an upper bound, i.e. the max  output length? Why can't you just specify the expected output length?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/548#issuecomment-379733115,"Also added support for a new option ""maxLength"" in YAML tests.","It's for testing Liblouis' ""partial translation mode"", i.e. translating just enough to fill the output buffer. If there isn't enough space left to output a word, Liblous is supposed to back up to the end of the previous word. This isn't really documented yet. But I think NVDA uses it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/548#issuecomment-379737721,"Also added support for a new option ""maxLength"" in YAML tests.","OK, thanks. Would it be OK to call this option maxOutputLength instead of just maxLength?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/548#issuecomment-379738544,"Also added support for a new option ""maxLength"" in YAML tests.","At first I had called it maxOutputLen but then renamed it to maxLength because I thought the ""output"" is a bit redundant. A maxInputLen wouldn't make any sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/548#issuecomment-379738837,"Also added support for a new option ""maxLength"" in YAML tests.",But feel free to change it again if you think it's more clear.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/548#issuecomment-379989243,"Also added support for a new option ""maxLength"" in YAML tests.","I added some documentation and as far as I'm concerned this can go in now. However @bertfrees could you have a quick look at what I say in the documentation. If I understand the code correctly it tests whether the maxOutputLen is larger than zero and the it also checks whether maxOutputLen than translationLen. This seems kinda odd, as the former can never happen if the latter is true. Maybe this is to provide better error messages?
Anyway I documented it that way and I hope my understanding is correct.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,548,2018-04-07T18:34:09Z,2018-04-12T23:08:11Z,2018-04-12T23:08:19Z,MERGED,True,51,9,7,https://github.com/bertfrees,Create a test for issue #412,4,[],https://github.com/liblouis/liblouis/pull/548,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/548#issuecomment-380024863,"Also added support for a new option ""maxLength"" in YAML tests.","Hmm, no. This has nothing to do with the partialTrans mode. I'm afraid I confused you with my explanation :-( I just made up a name for the feature. What I'm talking about isn't documented anywhere AFAIK. It's not a mode actually. By default, when you provide an output buffer that is not long enough (for example the length of the refreshable braille display), Liblouis will fill it only partially and return 1.
Yes, the two tests are indeed a bit odd. Don't remember exactly why I did it. The first test can maybe be dropped. I don't think I would mention any of it in the documentation though, it kinda goes without saying.
By the way the expected length should be larger or equal to the maximum length (not larger).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,549,2018-04-07T19:29:06Z,2018-04-12T22:44:19Z,2018-04-12T22:49:29Z,MERGED,True,20,0,1,https://github.com/bertfrees,Add tests for #490,1,[],https://github.com/liblouis/liblouis/pull/549,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/549,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,550,2018-04-07T19:35:00Z,2018-04-12T22:55:33Z,2018-04-12T22:55:45Z,MERGED,True,26,0,3,https://github.com/bertfrees,Add a test for issue #498,1,[],https://github.com/liblouis/liblouis/pull/550,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/550,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,551,2018-04-08T00:29:40Z,2018-04-09T08:35:23Z,2018-04-09T08:35:23Z,MERGED,True,12,3,2,https://github.com/aaclause,"fr-bfu-g2.ctb: backtranslation fixes about 'a', 'e' and 'y'",1,[],https://github.com/liblouis/liblouis/pull/551,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/551,"This PR fixes some backtranslation errors about 'a', 'e' and 'y' isolated in french grade 2 table.
Before: ""⠁ ⠑ ⠽"" -> ""A E Y"" instead of ""a e y"". It was necessary to escape them with letsign (""⠰⠁ ⠰⠑ ⠰⠽"").
It also adds some yaml tests for that.","This PR fixes some backtranslation errors about 'a', 'e' and 'y' isolated in french grade 2 table.
Before: ""⠁ ⠑ ⠽"" -> ""A E Y"" instead of ""a e y"". It was necessary to escape them with letsign (""⠰⠁ ⠰⠑ ⠰⠽"").
It also adds some yaml tests for that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,551,2018-04-08T00:29:40Z,2018-04-09T08:35:23Z,2018-04-09T08:35:23Z,MERGED,True,12,3,2,https://github.com/aaclause,"fr-bfu-g2.ctb: backtranslation fixes about 'a', 'e' and 'y'",1,[],https://github.com/liblouis/liblouis/pull/551,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/551#issuecomment-379536256,"This PR fixes some backtranslation errors about 'a', 'e' and 'y' isolated in french grade 2 table.
Before: ""⠁ ⠑ ⠽"" -> ""A E Y"" instead of ""a e y"". It was necessary to escape them with letsign (""⠰⠁ ⠰⠑ ⠰⠽"").
It also adds some yaml tests for that.","@Andre9642 I would appreciate it if from now on you use feature branches as the head of your PR's. All the ""merge remote-tracking branch 'lb/master'"" commits make the git history unnecessarily tangled up in my opinion. For trivial cases like this one, the right thing to do would have been to just add commit ad7184f on top of 0dee1fc. For long-lived branches like you had in the past, you should rebase onto master once in a while instead of merging (unless it's really too hard of course).
Changes look alright to me btw :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,551,2018-04-08T00:29:40Z,2018-04-09T08:35:23Z,2018-04-09T08:35:23Z,MERGED,True,12,3,2,https://github.com/aaclause,"fr-bfu-g2.ctb: backtranslation fixes about 'a', 'e' and 'y'",1,[],https://github.com/liblouis/liblouis/pull/551,https://github.com/aaclause,3,https://github.com/liblouis/liblouis/pull/551#issuecomment-379544574,"This PR fixes some backtranslation errors about 'a', 'e' and 'y' isolated in french grade 2 table.
Before: ""⠁ ⠑ ⠽"" -> ""A E Y"" instead of ""a e y"". It was necessary to escape them with letsign (""⠰⠁ ⠰⠑ ⠰⠽"").
It also adds some yaml tests for that.","@bertfrees Thanks for your advice! :) Sorry, I'm not an expert of Git yet. Currently, I especially check the cleanliness through git diff .... I will do better in the future.
Is it better this way?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,551,2018-04-08T00:29:40Z,2018-04-09T08:35:23Z,2018-04-09T08:35:23Z,MERGED,True,12,3,2,https://github.com/aaclause,"fr-bfu-g2.ctb: backtranslation fixes about 'a', 'e' and 'y'",1,[],https://github.com/liblouis/liblouis/pull/551,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/551#issuecomment-379554268,"This PR fixes some backtranslation errors about 'a', 'e' and 'y' isolated in french grade 2 table.
Before: ""⠁ ⠑ ⠽"" -> ""A E Y"" instead of ""a e y"". It was necessary to escape them with letsign (""⠰⠁ ⠰⠑ ⠰⠽"").
It also adds some yaml tests for that.",Perfect.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/552,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.","Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/552#issuecomment-380223953,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.","Some Danish tests are failing now.
1A is now translated to ⠼⠁⠠⠨⠁ while it should be ⠼⠁⠨⠠⠁, i.e. the letsign (6) comes before the capsign (46) instead of the other way around. It looks like it's because of these two rules:
noback pass2 _$D[@6-46] *
noback pass2 @6-46 @46-6

My change has affected the precedence rules a bit. When both of the above rules match, the first one is selected because it comes first and they both have a length of 2. Before my change, the first rule had a length of 0 and therefore had a lower precedence.
@BueVest What exactly is the purpose of the first rule?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/552#issuecomment-380548682,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.","Hmm, it looks like something that was added after a somewhat unclear change of contraction of capitalized words and capsign no longer functioning as letsign in the Danish rules. Actually, it is unclear whether the first rule should be there or not. If it isn't too many tests, could you please add an xfail for now while I try to wake up the Danish Braille committee?
Sorry for the inconvenience.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/552#issuecomment-380551848,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.",OK I can do that. It's only a few tests.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/552#issuecomment-380579406,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.",Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/552#issuecomment-380959023,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.","There is still one tests failing. I'm afraid this one is a real regression. da-dk-g28.ctb contains these two rules:
nocross st 1356
context _$d[""st""]~ @6-234-2345

The problem is that when both rules match (e.g. for the string ""1st""), the first rule is now chosen over the second, while it used to be the other way around. The solution is to change the order of the rules in the table. But you can also argue the old behavior was more logical. So maybe we should think about changing the precedence rules?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/552#issuecomment-381139040,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.","Yes, this is in deed a regression for the reasons you mention. I also agree that the old behavior was more logical. There would be a similar issue with

nocross nd 12345
noback context $d[“nd”] @6-1345-145

The overall problem seems to be that context rules apparently have to appear in the table after normal pass 1 rules, but they ar subject to the same precedence order. This makes it somewhat harder to match and use a context rule that acts as an exception to another rule like in the above examples.

Any ideas?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/552#issuecomment-381142804,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.","After having given it some more thought, I think the right thing to do is to order the rules in such a way that the rule that should win comes first in the table. Even though in the above example the context rule looks more specific, for Liblouis it currently has the same specificity as the nocross rule, so the nocross rule wins. We might still change the precedence rules, but until these rules are officially specified somewhere (with documentation and tests), I think safest is to enforce the precedence in the table in case of doubt. There is currently very little in the documentation about precedence rules of multipass rules, and even normal pass1 rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/552#issuecomment-381242329,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.","But why the general recommendation in the docs to place context rules last, or does it matter now that they use the same hashing buckets as other rules?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/552#issuecomment-381242783,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.",No idea.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,552,2018-04-10T19:44:27Z,2018-05-28T09:42:37Z,2018-05-28T09:42:41Z,CLOSED,False,56,59,8,https://github.com/bertfrees,Fix hashing of context rules with lookback,5,['bug'],https://github.com/liblouis/liblouis/pull/552,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/552#issuecomment-392476945,"Before, the context rule context _""x""[""y""] @123 would have been put in the ""x"" bucket instead of the ""y"" bucket.",Merged in f5858e9,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/erezkugler,1,https://github.com/liblouis/liblouis/pull/554,"changed column from dots 156 to 25
changed full stop from 46 to 256","changed column from dots 156 to 25
changed full stop from 46 to 256",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/554#issuecomment-380962076,"changed column from dots 156 to 25
changed full stop from 46 to 256",Thanks @erezkugler. Where have the other changes gone? Are you making another pull request for those?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/554#issuecomment-381066722,"changed column from dots 156 to 25
changed full stop from 46 to 256",You can also add it to this PR.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/erezkugler,4,https://github.com/liblouis/liblouis/pull/554#issuecomment-381380261,"changed column from dots 156 to 25
changed full stop from 46 to 256","Hi

1. We want to fix some wrong characters in the he.ctb  first

2. When using Hebrew with IndexBraille direct print some unwanted spaces appear in the beginning of the first line that’s been printed. Those spaces are not there in the original text…

3. When a new line in the text start with caret return  that line is printed in a separate row and not as part of the text as it should.

4. In order to create an empty space between the lines that been printed we need to enter 3 to 4 lines in the original text. I believe that some of this unwanted behavior is coming from the embosser and not from the braille table, but it is better to let all sided know about it.
After we will sort this issues with the Hebrew Table we will merge this table to the English grade 0 and the Arabic table and make a multi-language table for the use of mix text.

With kind regards
Erez",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/554#issuecomment-381417909,"changed column from dots 156 to 25
changed full stop from 46 to 256","OK we'll merge this first then.
What would be great, as I explained in my email, would be a reference to an official document of the Hebrew braille standard. We don't have that yet. There is a description in the header made by Adi Kushnir:

This table is based on the new unified Hebrew Braille code standard that was put together on January 2014 after a conference with all of the specialists in this field in Israel. It includes improved representation of Hebrew letters, special letters that are called Nikud, and punctuation symbols. The old Braille standard is not relevant any more.

However it doesn't include any links. Could you help us with that? I just want to make sure that Adi Kushnir and you are trying to implement the same standard.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/erezkugler,6,https://github.com/liblouis/liblouis/pull/554#issuecomment-381481079,"changed column from dots 156 to 25
changed full stop from 46 to 256","Hi Bert
You absolutely right.
The reference table is in Hebrew and attached to this mail.
As this table contains also Arabic characters I cant translate it ,
But the Hebrew section I did translate to make it easier to understand.
Regards
Erez",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/554#issuecomment-381719341,"changed column from dots 156 to 25
changed full stop from 46 to 256","@erezkugler We didn't receive the attachment. Could you either email it directly to me, or attach it to a Github comment?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/erezkugler,8,https://github.com/liblouis/liblouis/pull/554#issuecomment-381839785,"changed column from dots 156 to 25
changed full stop from 46 to 256","this is the referance Heb Arb table
Heb Arb Braille table 2016.xlsx",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/erezkugler,9,https://github.com/liblouis/liblouis/pull/554#issuecomment-384541547,"changed column from dots 156 to 25
changed full stop from 46 to 256","Hello Bert
After consulting all relevant factors we came to a decision that we need 2 braille tables.

1 table for braille display which will be grade 0 - Grade 0 = computer braille no prefix or contractions

1 table for braille embossers which will be grade 1 - Grade 1 = literary braille normally with number prefixes and typically with capital letter prefix
The embossers table will consist on 6 dot braille only.

Can we  save as the current Heb liblouis table and give it a new name Heb-Emboss and work on the changes on it.
Later on we will add arab to both tables.
At the end of this work we hopefully have 2 tables that include 3 languages for the Heb and Arab users in Israel.
What do you think of it?

Regards
Erez",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/554#issuecomment-384590533,"changed column from dots 156 to 25
changed full stop from 46 to 256",Sounds good to me.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/554#issuecomment-392462375,"changed column from dots 156 to 25
changed full stop from 46 to 256","@erezkugler The file ""Heb.Arb.Braille.table.2016.xlsx"" that you sent us, where exactly did it come from?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,554,2018-04-12T12:04:43Z,2018-06-29T19:57:07Z,2018-06-29T19:57:07Z,CLOSED,False,2,2,1,https://github.com/erezkugler,Update he.ctb,1,['tables'],https://github.com/liblouis/liblouis/pull/554,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/554#issuecomment-393519535,"changed column from dots 156 to 25
changed full stop from 46 to 256",Merged in 552bb08,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,559,2018-04-19T15:03:26Z,2018-05-24T14:12:59Z,2018-05-24T14:16:32Z,MERGED,True,44922,11922,1,https://github.com/Roshanson,Add some data for zh-chn.ctb,4,[],https://github.com/liblouis/liblouis/pull/559,https://github.com/Roshanson,1,https://github.com/liblouis/liblouis/pull/559,Add some data for zh-chn.ctb,Add some data for zh-chn.ctb,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,559,2018-04-19T15:03:26Z,2018-05-24T14:12:59Z,2018-05-24T14:16:32Z,MERGED,True,44922,11922,1,https://github.com/Roshanson,Add some data for zh-chn.ctb,4,[],https://github.com/liblouis/liblouis/pull/559,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/559#issuecomment-383512724,Add some data for zh-chn.ctb,@Roshanson Thanks. Could you describe a bit what exactly was changed?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,559,2018-04-19T15:03:26Z,2018-05-24T14:12:59Z,2018-05-24T14:16:32Z,MERGED,True,44922,11922,1,https://github.com/Roshanson,Add some data for zh-chn.ctb,4,[],https://github.com/liblouis/liblouis/pull/559,https://github.com/Roshanson,3,https://github.com/liblouis/liblouis/pull/559#issuecomment-383771997,Add some data for zh-chn.ctb,"@bertfrees  Ok ,The following is the updated content：
①We have added many polygraphs to distinguish different meanings of a word
②the letter identifiers have been modified. In China's school for the blind, when many visually impaired students learn, the lowercase letters often do not have to mark the identifiers deliberately. So in this version, we have deleted this item.
③The last point is the bug in the braille code that revises the space and 0",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,559,2018-04-19T15:03:26Z,2018-05-24T14:12:59Z,2018-05-24T14:16:32Z,MERGED,True,44922,11922,1,https://github.com/Roshanson,Add some data for zh-chn.ctb,4,[],https://github.com/liblouis/liblouis/pull/559,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/559#issuecomment-391651478,Add some data for zh-chn.ctb,@egli Make sure Rohanson's last comment makes it into the merge commit message.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,559,2018-04-19T15:03:26Z,2018-05-24T14:12:59Z,2018-05-24T14:16:32Z,MERGED,True,44922,11922,1,https://github.com/Roshanson,Add some data for zh-chn.ctb,4,[],https://github.com/liblouis/liblouis/pull/559,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/559#issuecomment-391731283,Add some data for zh-chn.ctb,Merged manually,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,565,2018-04-28T17:15:15Z,2018-05-08T19:57:11Z,2018-05-08T19:58:18Z,MERGED,True,789,749,4,https://github.com/bertfrees,Refactoring in lou_translateString.c,10,[],https://github.com/liblouis/liblouis/pull/565,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/565,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,565,2018-04-28T17:15:15Z,2018-05-08T19:57:11Z,2018-05-08T19:58:18Z,MERGED,True,789,749,4,https://github.com/bertfrees,Refactoring in lou_translateString.c,10,[],https://github.com/liblouis/liblouis/pull/565,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/565#issuecomment-385400354,,"the PR is massive to it's quite hard to dissect it.

Just look at the commits one by one.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,565,2018-04-28T17:15:15Z,2018-05-08T19:57:11Z,2018-05-08T19:58:18Z,MERGED,True,789,749,4,https://github.com/bertfrees,Refactoring in lou_translateString.c,10,[],https://github.com/liblouis/liblouis/pull/565,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/565#issuecomment-385417854,,"Just look at the commits one by one.

Hehe, that's what I did",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,566,2018-05-03T14:03:04Z,2018-06-04T12:54:39Z,2018-06-04T12:55:09Z,MERGED,True,1736,660,171,https://github.com/egli,Use the manywarnings module to handle selective warnings,16,[],https://github.com/liblouis/liblouis/pull/566,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/566,"By using the gnulib manywarnings module we should be able to selectively disable warnings and be freed from platform differences as to which warnings are supported.
Related to #322
Oh, and sorry for the huge change. Most of it is a gnulib upgrade. The real change is just in configure.ac and the two Makefile.am in liblouis and tools.","By using the gnulib manywarnings module we should be able to selectively disable warnings and be freed from platform differences as to which warnings are supported.
Related to #322
Oh, and sorry for the huge change. Most of it is a gnulib upgrade. The real change is just in configure.ac and the two Makefile.am in liblouis and tools.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,566,2018-05-03T14:03:04Z,2018-06-04T12:54:39Z,2018-06-04T12:55:09Z,MERGED,True,1736,660,171,https://github.com/egli,Use the manywarnings module to handle selective warnings,16,[],https://github.com/liblouis/liblouis/pull/566,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/566#issuecomment-386319616,"By using the gnulib manywarnings module we should be able to selectively disable warnings and be freed from platform differences as to which warnings are supported.
Related to #322
Oh, and sorry for the huge change. Most of it is a gnulib upgrade. The real change is just in configure.ac and the two Makefile.am in liblouis and tools.",... and it works on Travis. Great!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,566,2018-05-03T14:03:04Z,2018-06-04T12:54:39Z,2018-06-04T12:55:09Z,MERGED,True,1736,660,171,https://github.com/egli,Use the manywarnings module to handle selective warnings,16,[],https://github.com/liblouis/liblouis/pull/566,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/566#issuecomment-393525215,"By using the gnulib manywarnings module we should be able to selectively disable warnings and be freed from platform differences as to which warnings are supported.
Related to #322
Oh, and sorry for the huge change. Most of it is a gnulib upgrade. The real change is just in configure.ac and the two Makefile.am in liblouis and tools.","I tried to disable the implicit-fallthrough warning but it doesn't seem to work. I tried all of the four things below (in configure.ac). In no case are the implicit-fallthrough warnings ignored, as they are fo the following form
compileTranslationTable.c:3867:23: warning: this statement may fall through [-Wimplicit-fallthrough=]

implicit-fallthrough
nw=""$nw -Wimplicit-fallthrough"" # ignore warnings about implicit fallthrough is switch statements

Configure just mentions that
checking whether C compiler handles -Wimplicit-fallthrough=5... yes

implicit-fallthrough=
nw=""$nw -Wimplicit-fallthrough="" # ignore warnings about implicit fallthrough is switch statements

results in
checking whether C compiler handles -Wimplicit-fallthrough=5... yes

implicit-fallthrough=1
nw=""$nw -Wimplicit-fallthrough=1"" # ignore warnings about implicit fallthrough is switch statements

reults in
checking whether C compiler handles -Wimplicit-fallthrough=5... yes

implicit-fallthrough=5
nw=""$nw -Wimplicit-fallthrough=5"" # ignore warnings about implicit fallthrough is switch statements",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/567,fixes #412,fixes #412,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/567#issuecomment-387674730,fixes #412,"Not sure about the description of the feature ""word wrapping"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/567#issuecomment-387679294,fixes #412,I don't see this description anywhere (except in the issue). Are you talking about a possible NEWS entry?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/567#issuecomment-387679527,fixes #412,In the commit message. And yes I was also thinking about a NEWS entry.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/567#issuecomment-387683168,fixes #412,"I agree that that is confusing. I stumbled on that one too. Word warp isn't that a utdml thing?
Maybe rephrase what it really is.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/567#issuecomment-387687283,fixes #412,We don't want to write a whole paragraph describing the feature every time it needs to be mentioned do we? Don't you think we should have a name for it?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/567#issuecomment-387708910,fixes #412,"I agree it should have a name. It's just that I don't quite understand the feature and hence probably think it is of minor importance.
If I'd understand what is about I might help with naming.
AFAIK it is something to do with back tracking, but why it would do that I do not know.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/567#issuecomment-387712364,fixes #412,"Yeah. If the output buffer is not long enough to contain the whole output, Liblouis cuts it off at the last space. I guess this makes it easy for applications to translate a big input string (possibly with unknown size) in smaller parts, while still translating whole words because cutting words in half can result in wrong translations.
I also thought of ""back tracking"" but I didn't know if that was a correct English term for this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,567,2018-05-08T19:57:52Z,2018-05-28T08:59:53Z,2018-05-28T09:00:07Z,MERGED,True,9,5,3,https://github.com/bertfrees,Fix issue #412: word wrapping not working with all caps words,2,[],https://github.com/liblouis/liblouis/pull/567,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/567#issuecomment-391650491,fixes #412,"To do

 Add NEWS entry",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,1,https://github.com/liblouis/liblouis/pull/568,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,2,https://github.com/liblouis/liblouis/pull/568#issuecomment-391659976,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","Ok,

here we go:

the old 8'dots table was not the 8'dots table, it is the six dots table.

it is the completely new table right, with the proper russian standard.

This table fixes imput in the russian language,

allows display of the russian accented text,

the old table is not solid, licence is not the argument.

You are not a russian speaker, and you don't understand the word of russian.

this table modifies the following: a) the definitions are 8-dots, as
these should be,

b) in the NVDA screen reader, the table with this file name is displayed
as 8-dots, so i am making it consistent,

This table allows multi-language reading, without conflicts to russian
and latin.

the old table uses multi-cell definition, and we have double grade 2
tables. table named ru-compbrl.ctb is a grade 1 table along with
ru-ru-g1.utb.

so we have double tables.

read the header, that the russian table with this name is only the
literary table instead of 8-dots.

this is the fix which makes it 8-dots",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,3,https://github.com/liblouis/liblouis/pull/568#issuecomment-391660627,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","and, i cannot put the definitions into the external files, because of
the russian language braille incompatibility.

Even the ukrainian table has the problem with imput of the text.
cyrillic versus latin with NVDA",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,4,https://github.com/liblouis/liblouis/pull/568#issuecomment-391665467,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","and, please see metadata for the table ru-compbrl.ctb

and compare it with the old table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/568#issuecomment-391674415,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","Hi Zvonimir,
You said:

You are not a russian speaker, and you don't understand the word of russian.

You're totally right about that, we don't speak Russian, and that is exactly why we need a proper description of tables, proper metadata, and links to official documentation. Without this information it is impossible for us to judge whether one table is better than the nother. Tests that define the requirements are also a great help for us. You already said you are planning to create tests for release 3.7.0, that's great!
You said:

in the NVDA screen reader, the table with this file name is displayed as 8-dots, so i am making it consistent

Then it is an NVDA issue. In the Liblouis table header there is no mentioning of 8-dots. NVDA adds that information. Replacing a table with a new one, with the purpose of manipulating which table NVDA selects is not the way to do it. This should be fixed in NVDA.
There are indeed several tables for Russian, probably too many. At the moment it is not totally clear to me which tables implement what. But removing one table and adding a completely new one isn't going to help.
I think ru-compbrl.ctb is pretty nice because it can handle a mixture of Cyrillic and Latin, and it can distinguish between Cyrillic and Latin letters in the resulting braille output (see the explanation in ru-letters.dis). The purpose of ru-compbrl.ctb is not to be an 8-dot computer braille table. See the explanation in the header:

This table is not a computer braille in usual sense.
It is intended for producing printable braille representation
of a program source text, especially when it contains
Russian comments or literals. Use it as an alternative
literary braille table.

It looks like your new table was derived from ru.ctb, which is clearly meant as a proper computer braille table. Why don't you modify that table then? In the header it even says explicitly that they would like feedback from Russian speakers:

Comments from Russians are very welcome as neither Hans Schou nor Dave Mielke
understand a single word in Russian.

It looks like you should get in touch with them. We can help you with that of course.
You said:

This table allows multi-language reading, without conflicts to russian and latin.

Can you elaborate a bit on this? What does ""no conflicts"" mean? Are Russian letter and Latin letters mapped to different dot patterns in your table? Note that ru-compbrl.ctb and ru-litbrl.ctb also map them to different dot patterns. It depends on the display table that you use what the final result looks like. With ru-letters.dis, the result is ASCII braille where uppercase letters represent the Cyrillic alphabet and where lowercase letters represent the Latin alphabet. With ru-unicode.dis the result is Unicode braille and both alphabets map to the same patterns.
You said:

i cannot put the definitions into the external files, because of the russian language braille incompatibility

What do you mean by that?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,6,https://github.com/liblouis/liblouis/pull/568#issuecomment-391678803,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","so, please include it, as it is tested with NVDA. and it works

all the best,

ZS",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,7,https://github.com/liblouis/liblouis/pull/568#issuecomment-391680046,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","ok... again

in the NVDA screenreader ru-compbrl.ctb jis the 8-dots table, not the
literary one!

ru.ctb is based on the koi8R, not on the cp1250 or unocode.

This table is the unicode table for russian.

it has the mappings for latin and cyrillic, hebrew and arabic with greek.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/568#issuecomment-391681335,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","@zstanecic of course I do not speak Russian. That is why I have to go by the ""soft skills"" of the table, things that I mentioned before.
Anyway before we merge this I want the following:

 proper header for the table.

 It has to include a copyright statement
 has to specify the license.
 Also the meta data has to specified.
 and finally a comment what this table is and what standard (possibly with a link to the standard) this table is following.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/568#issuecomment-391689521,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","Also can you answer all the questions in my previous reply? I'm doing my best to write a comprehensive comment with clear questions and you ignore most of it.
You have to excuse me if you already explained some things and I missed it, but you are being very brief, and the way you write English, with snippets of sentences, is sometimes hard to understand for me.
When I say that I need a proper description of the table, I basically mean that there needs to be something in the table header. So if you can please summarize what you have said about the table in this Github issue, and put it in the table header (in proper English)?
Your contribution itself may be very good, but you have to understand that we can't accept it just like that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,10,https://github.com/liblouis/liblouis/pull/568#issuecomment-391691546,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","hi,
1. i added the table header,
2. i have specified license of this table,
3. this table is 8-dots as the name of the table states.
you should say me what next should i do.
see my commit",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,11,https://github.com/liblouis/liblouis/pull/568#issuecomment-391692338,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","can you write to me the questions? i don't understand your style of
citations, as i am answering you via e-mail",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/568#issuecomment-398487425,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","Sorry for the delay, I have been busy! So these are my questions:


As you've noticed I'm not so keen on increasing the number of Russian tables because we already have several of them. Because both your new table and the existing ru.ctb implement 8 dot computer braille, I think we should try to merge them. However you seem to be opposed to that idea. I need to understand why. I think it'll be easiest if you explain with a detailed YAML test. This way we can avoid any misunderstandings.


Your table supports multi-language reading, including Hebrew, Arabic and Greek. You said before that ru.ctb has conflicts between Russian and Latin. What exactly does that mean, and what does your table do to fix it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/568#issuecomment-416170380,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan",@zstanecic Any news on this PR? Have there been created tests in the meantime? We are also still left with some questions. Have you seen my last comment where I summarized them?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/568#issuecomment-464665531,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan",@zstanecic Any news?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,15,https://github.com/liblouis/liblouis/pull/568#issuecomment-464670834,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","Update:

Russian table is fixed in NVDA,

So this can be closed, so i’ll make some additions to ru.ctb.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/568#issuecomment-464693052,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan",You mean that this pull request can be discarded and you will make a new one later?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/zstanecic,17,https://github.com/liblouis/liblouis/pull/568#issuecomment-464696174,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan","Yes, of course.

I’ll make adjustments to the existing table, as this table can be extended",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,568,2018-05-14T13:12:55Z,2019-02-18T11:33:31Z,2019-02-18T11:33:31Z,CLOSED,False,611,118,1,https://github.com/zstanecic,tables - fix the russian table,10,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/568,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/568#issuecomment-464697888,"it is an 8-dots corrected table. In the past, we had 8 dots russian table, wich is in fact the six dots table. , Now this pull request fixes this issue. Table provided by Pavel Kaplan",OK thanks for the update.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,570,2018-05-16T09:11:56Z,2018-05-17T07:27:27Z,2018-05-17T07:27:27Z,MERGED,True,185,59,2,https://github.com/aaclause,`fr-bfu-g2.ctb`: Miscellaneous fixes and improvements,1,[],https://github.com/liblouis/liblouis/pull/570,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/570,"Various fixes and improvements:

improved reliability of backtranslation when used with NVDA. NVDA sometimes froze due to problems with some compbrl statements
improvements about acronyms and some contractions.","Various fixes and improvements:

improved reliability of backtranslation when used with NVDA. NVDA sometimes froze due to problems with some compbrl statements
improvements about acronyms and some contractions.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,570,2018-05-16T09:11:56Z,2018-05-17T07:27:27Z,2018-05-17T07:27:27Z,MERGED,True,185,59,2,https://github.com/aaclause,`fr-bfu-g2.ctb`: Miscellaneous fixes and improvements,1,[],https://github.com/liblouis/liblouis/pull/570,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/570#issuecomment-389462006,"Various fixes and improvements:

improved reliability of backtranslation when used with NVDA. NVDA sometimes froze due to problems with some compbrl statements
improvements about acronyms and some contractions.",@Andre9642 you should also update the test file fr-bfu-g2 to make sure the tests pass,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,570,2018-05-16T09:11:56Z,2018-05-17T07:27:27Z,2018-05-17T07:27:27Z,MERGED,True,185,59,2,https://github.com/aaclause,`fr-bfu-g2.ctb`: Miscellaneous fixes and improvements,1,[],https://github.com/liblouis/liblouis/pull/570,https://github.com/aaclause,3,https://github.com/liblouis/liblouis/pull/570#issuecomment-389465789,"Various fixes and improvements:

improved reliability of backtranslation when used with NVDA. NVDA sometimes froze due to problems with some compbrl statements
improvements about acronyms and some contractions.",@egli Thanks. :) That's fixed.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,570,2018-05-16T09:11:56Z,2018-05-17T07:27:27Z,2018-05-17T07:27:27Z,MERGED,True,185,59,2,https://github.com/aaclause,`fr-bfu-g2.ctb`: Miscellaneous fixes and improvements,1,[],https://github.com/liblouis/liblouis/pull/570,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/570#issuecomment-389469049,"Various fixes and improvements:

improved reliability of backtranslation when used with NVDA. NVDA sometimes froze due to problems with some compbrl statements
improvements about acronyms and some contractions.","I find it a bit hard to follow what is going on when there are a lot of changes to a table but little changes to the tests (and the commit message just says ""Various fixes and improvements"").",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,570,2018-05-16T09:11:56Z,2018-05-17T07:27:27Z,2018-05-17T07:27:27Z,MERGED,True,185,59,2,https://github.com/aaclause,`fr-bfu-g2.ctb`: Miscellaneous fixes and improvements,1,[],https://github.com/liblouis/liblouis/pull/570,https://github.com/aaclause,5,https://github.com/liblouis/liblouis/pull/570#issuecomment-389501899,"Various fixes and improvements:

improved reliability of backtranslation when used with NVDA. NVDA sometimes froze due to problems with some compbrl statements
improvements about acronyms and some contractions.",@bertfrees Is it better like this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,574,2018-05-25T08:31:59Z,2018-05-25T11:30:49Z,2018-05-25T11:30:49Z,MERGED,True,1,0,1,https://github.com/sthibaul,Mention CVE number for buffer overflow fix,1,[],https://github.com/liblouis/liblouis/pull/574,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/574,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,576,2018-05-25T14:39:37Z,2018-05-25T15:05:35Z,2018-05-25T15:05:40Z,MERGED,True,28,26,1,https://github.com/egli,Document output value of inlen,3,['documentation'],https://github.com/liblouis/liblouis/pull/576,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/576,"Basically just add the comment from the issue and add it as a footnote
to the last paragraph.
Fixes #493","Basically just add the comment from the issue and add it as a footnote
to the last paragraph.
Fixes #493",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,576,2018-05-25T14:39:37Z,2018-05-25T15:05:35Z,2018-05-25T15:05:40Z,MERGED,True,28,26,1,https://github.com/egli,Document output value of inlen,3,['documentation'],https://github.com/liblouis/liblouis/pull/576,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/576#issuecomment-392080585,"Basically just add the comment from the issue and add it as a footnote
to the last paragraph.
Fixes #493","I would drop the ""and 0 if a complete translation could not be done"". It's redundant and kinda confusing.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,577,2018-05-26T13:02:00Z,2018-05-28T09:02:57Z,2018-05-29T14:49:29Z,MERGED,True,887,502,1,https://github.com/school510587,Update zh-tw.ctb to Version 2018-05,1,['tables'],https://github.com/liblouis/liblouis/pull/577,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/577,"Summary of changes:

Redefine some Chinese words and phrases
Add various Nemeth symbols such as arrows and parenthesis
Complete the support of CJK Compatibility block
Fix the support of various parentheses, brackets, and braces
Minor fixes (kana rules, punctuation marks, Greek alphabets)

Reviewers:

嘯傲俠羽 <crazy@mail.batol.net>
Coscell Kao <coscell@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","Summary of changes:

Redefine some Chinese words and phrases
Add various Nemeth symbols such as arrows and parenthesis
Complete the support of CJK Compatibility block
Fix the support of various parentheses, brackets, and braces
Minor fixes (kana rules, punctuation marks, Greek alphabets)

Reviewers:

嘯傲俠羽 <crazy@mail.batol.net>
Coscell Kao <coscell@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,580,2018-05-29T08:18:03Z,2018-08-23T10:06:11Z,2018-08-23T10:06:18Z,MERGED,True,96,18,3,https://github.com/egli,Ensure that inputLength equals actualLength,8,[],https://github.com/liblouis/liblouis/pull/580,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/580,"If not try a few more times with a larger output buffer
Fixes #495
AFAICT this implements what is asked for in the issue. However due to this change the test suite no longer passes. Is this a problem in this patch or in the test suite?","If not try a few more times with a larger output buffer
Fixes #495
AFAICT this implements what is asked for in the issue. However due to this change the test suite no longer passes. Is this a problem in this patch or in the test suite?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,580,2018-05-29T08:18:03Z,2018-08-23T10:06:11Z,2018-08-23T10:06:18Z,MERGED,True,96,18,3,https://github.com/egli,Ensure that inputLength equals actualLength,8,[],https://github.com/liblouis/liblouis/pull/580,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/580#issuecomment-414146757,"If not try a few more times with a larger output buffer
Fixes #495
AFAICT this implements what is asked for in the issue. However due to this change the test suite no longer passes. Is this a problem in this patch or in the test suite?",I've rebased this branch and also fixed a bug. Tests are still failing though. My guess is that these are all back-translation tests and related to #583.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,581,2018-05-30T07:50:17Z,2018-05-31T12:13:43Z,2018-07-29T09:25:10Z,MERGED,True,8,1,1,https://github.com/timothytylee,Fix leaks when using default table resolver,1,[],https://github.com/liblouis/liblouis/pull/581,https://github.com/timothytylee,1,https://github.com/liblouis/liblouis/pull/581,"_lou_resolveTable() should clean up the list of resolved tables returned from the default resolver, since a copy is returned to caller.","_lou_resolveTable() should clean up the list of resolved tables returned from the default resolver, since a copy is returned to caller.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,581,2018-05-30T07:50:17Z,2018-05-31T12:13:43Z,2018-07-29T09:25:10Z,MERGED,True,8,1,1,https://github.com/timothytylee,Fix leaks when using default table resolver,1,[],https://github.com/liblouis/liblouis/pull/581,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/581#issuecomment-393083985,"_lou_resolveTable() should clean up the list of resolved tables returned from the default resolver, since a copy is returned to caller.","Fixes #315.
Ok, that's a simple solution. I hadn't thought of that yet. Thanks.
For reference, this was the solution we had thought of: sbsdev/pipeline@37c7f18.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,581,2018-05-30T07:50:17Z,2018-05-31T12:13:43Z,2018-07-29T09:25:10Z,MERGED,True,8,1,1,https://github.com/timothytylee,Fix leaks when using default table resolver,1,[],https://github.com/liblouis/liblouis/pull/581,https://github.com/timothytylee,3,https://github.com/liblouis/liblouis/pull/581#issuecomment-393101743,"_lou_resolveTable() should clean up the list of resolved tables returned from the default resolver, since a copy is returned to caller.",May I ask what is causing the Travis CI build to fail?  I can't see to find the reason from the build log.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,581,2018-05-30T07:50:17Z,2018-05-31T12:13:43Z,2018-07-29T09:25:10Z,MERGED,True,8,1,1,https://github.com/timothytylee,Fix leaks when using default table resolver,1,[],https://github.com/liblouis/liblouis/pull/581,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/581#issuecomment-393110218,"_lou_resolveTable() should clean up the list of resolved tables returned from the default resolver, since a copy is returned to caller.","clang-format is complaining. You don't have to worry about that, we will take care of it when we merge.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,581,2018-05-30T07:50:17Z,2018-05-31T12:13:43Z,2018-07-29T09:25:10Z,MERGED,True,8,1,1,https://github.com/timothytylee,Fix leaks when using default table resolver,1,[],https://github.com/liblouis/liblouis/pull/581,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/581#issuecomment-393112398,"_lou_resolveTable() should clean up the list of resolved tables returned from the default resolver, since a copy is returned to caller.",@timothytylee or if you like you can run clang-format-4.0 on your code and push. Then all tests should pass,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,581,2018-05-30T07:50:17Z,2018-05-31T12:13:43Z,2018-07-29T09:25:10Z,MERGED,True,8,1,1,https://github.com/timothytylee,Fix leaks when using default table resolver,1,[],https://github.com/liblouis/liblouis/pull/581,https://github.com/timothytylee,6,https://github.com/liblouis/liblouis/pull/581#issuecomment-393117395,"_lou_resolveTable() should clean up the list of resolved tables returned from the default resolver, since a copy is returned to caller.",I'll leave it to you then.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/585,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/585#issuecomment-393144358,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",Actually I'm unsure what ENDSEGMENT is used for. ESCAPE is used in math tables so should maybe be defined only for those tables.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/585#issuecomment-441274087,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",@egli I would revert for ENDSEGMENT and ESCAPE. I think these require a different solution.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/585#issuecomment-441275282,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",@bertfrees fine with me. But they seem to have been in the original C code that I got rid of. Aren't they needed?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/585#issuecomment-441275508,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",I would put them back in the C code for now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/585#issuecomment-442153858,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","Like I said for .tbl files I would put the include basic-spaces.cti inside the table that is included, because that table might be used directly.
Why not combine merge all-spaces.yaml and spaces-in-all-tables.yaml in a single exhaustive test?
Note that by merging spaces.ctb and basic-spaces.cti, space \x00a0 a was changed to space \x00a0 0. I think this is fine (see my first comment) but we have to keep in mind that some tables are possibly relying on the old definition.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/585#issuecomment-443214827,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",Hi @BueVest can you comment on my last commit (b3ff6f1)? Why is it that I have to define  NO-BREAK SPACE differently for Danish than for any other table? Is this a problem in my definition in basic-spaces?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/585#issuecomment-443215268,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","Oops, we made exactly the same comment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/585#issuecomment-443343809,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","@bertfrees I tried to merge the two YAML tests, but run into more and more test failures. This thing is growing over my head. Could you have a look?
Otherwise we may have to delay this one (again). Might be better to merge after the release so we have some time to shake out the breakages.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/585#issuecomment-443542755,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",I'm not against delaying it. I'll have a look.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/585#issuecomment-444076877,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",merge all-spaces.yaml with spaces-in-all-tables.yaml,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/585#issuecomment-444077285,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","I have done this locally, but I'd like to finish it completely before I push it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/585#issuecomment-444276880,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",I have first rebased this branch.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/585#issuecomment-469056552,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",@egli Ready.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/egli,15,https://github.com/liblouis/liblouis/pull/585#issuecomment-469170809,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",@bertfrees Thank you very much,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/585#issuecomment-469711025,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","@bertfrees , @school510587 I just uploaded a new windows binary. I took the one from the nightly build. Hope that solves the problems.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/585#issuecomment-469719024,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561",@school510587 Can you try it?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/school510587,18,https://github.com/liblouis/liblouis/pull/585#issuecomment-469733725,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","Hi @bertfrees and @egli,

I just downloaded liblouis-win32-1362d1b.zip and performed zh-tw.yaml and spaces.yaml tests. The output of \x2028 remains 1256.
However, the zh-tw.yaml failed because liblouis 3.9.0 had fixed the issue of space outputs.
To sum up, the new binary package is ok, thanks a lot. I will fix zh-tw.yaml at the next time of zh-tw.ctb update PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/school510587,19,https://github.com/liblouis/liblouis/pull/585#issuecomment-469745724,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","Hi @bertfrees and @egli,

Here is another problem. spaces.ctb has become spaces.uti. Should this be listed as renamed table in NEWS?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,585,2018-05-30T11:59:25Z,2019-03-04T08:56:31Z,2019-03-06T07:49:42Z,MERGED,True,685,719,202,https://github.com/egli,Remove hard coded rules in compileTranslationTable,15,[],https://github.com/liblouis/liblouis/pull/585,https://github.com/egli,20,https://github.com/liblouis/liblouis/pull/585#issuecomment-470004247,"Move the hard coded rules regarding white space handling to an
external table that can then be included by regular tables. This opens
up the course so we can finally fix some bugs that stem from this
special treatment of some chars.
Fixes #561","Probably.
OTOH the list of renamed tables is kept at request of NVDA. IIUC they have some mapping from table name to user visible Braille System name. So in the case of spaces.ctb this probably doesn't apply as I doubt it is visible to the average NVDA user",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,586,2018-05-31T09:00:17Z,2018-08-24T13:36:56Z,2018-08-29T12:33:29Z,CLOSED,False,245,942,1,https://github.com/egli,"Remove the code that implements the ""modern"" pass compiler",1,['refactoring'],https://github.com/liblouis/liblouis/pull/586,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/586,"This code was to replace the ""assembler"" like pass2 opcode language.
Unfortunately it was never documented and hence never used in the
wild. So it just sat around for years waiting for some malicious
tables to come along and make it over-flow some buffers.
So while this might technicaly be a more thought out language to
express your pass2 rules it never caught on and probably never will.
It is just more code to maintain that has never been battle tested.
If we'd decide to use this code then there is not only the problem of
making it work (it has never been properly tested) but also to migrate
all the existing tables.
So IMHO the best code of action is to just remove this code. Less code
means a smaller attack surface for malicious tables.","This code was to replace the ""assembler"" like pass2 opcode language.
Unfortunately it was never documented and hence never used in the
wild. So it just sat around for years waiting for some malicious
tables to come along and make it over-flow some buffers.
So while this might technicaly be a more thought out language to
express your pass2 rules it never caught on and probably never will.
It is just more code to maintain that has never been battle tested.
If we'd decide to use this code then there is not only the problem of
making it work (it has never been properly tested) but also to migrate
all the existing tables.
So IMHO the best code of action is to just remove this code. Less code
means a smaller attack surface for malicious tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,586,2018-05-31T09:00:17Z,2018-08-24T13:36:56Z,2018-08-29T12:33:29Z,CLOSED,False,245,942,1,https://github.com/egli,"Remove the code that implements the ""modern"" pass compiler",1,['refactoring'],https://github.com/liblouis/liblouis/pull/586,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/586#issuecomment-393472910,"This code was to replace the ""assembler"" like pass2 opcode language.
Unfortunately it was never documented and hence never used in the
wild. So it just sat around for years waiting for some malicious
tables to come along and make it over-flow some buffers.
So while this might technicaly be a more thought out language to
express your pass2 rules it never caught on and probably never will.
It is just more code to maintain that has never been battle tested.
If we'd decide to use this code then there is not only the problem of
making it work (it has never been properly tested) but also to migrate
all the existing tables.
So IMHO the best code of action is to just remove this code. Less code
means a smaller attack surface for malicious tables.","Sounds fine to me!
I'd mention the term ""scripting language"" because that is how it has been called in the past. This post on the mailing list might be helpful to understand what it was about.
John added this code in 58bd72c (2012).
I wouldn't have called the old (current) version of the multipass language ""assembler""-like (I know it's John's words). I'd call it ""regex""-like. It's not really lower-level, it just uses a different (and IMO better because shorter) syntax.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,586,2018-05-31T09:00:17Z,2018-08-24T13:36:56Z,2018-08-29T12:33:29Z,CLOSED,False,245,942,1,https://github.com/egli,"Remove the code that implements the ""modern"" pass compiler",1,['refactoring'],https://github.com/liblouis/liblouis/pull/586,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/586#issuecomment-415761034,"This code was to replace the ""assembler"" like pass2 opcode language.
Unfortunately it was never documented and hence never used in the
wild. So it just sat around for years waiting for some malicious
tables to come along and make it over-flow some buffers.
So while this might technicaly be a more thought out language to
express your pass2 rules it never caught on and probably never will.
It is just more code to maintain that has never been battle tested.
If we'd decide to use this code then there is not only the problem of
making it work (it has never been properly tested) but also to migrate
all the existing tables.
So IMHO the best code of action is to just remove this code. Less code
means a smaller attack surface for malicious tables.",Superceded by #625,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,587,2018-05-31T10:12:03Z,2018-05-31T12:11:23Z,2018-05-31T12:11:29Z,MERGED,True,15,1,1,https://github.com/egli,Fix yet another buffer overflow in the braille table parser,1,['memory error'],https://github.com/liblouis/liblouis/pull/587,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/587,"Reported by Edward-L
Fixes #582","Reported by Edward-L
Fixes #582",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,588,2018-05-31T19:41:01Z,2018-07-02T12:41:59Z,2018-12-21T11:47:16Z,MERGED,True,16,1,2,https://github.com/school510587,Add a YAML test for zh-tw,1,[],https://github.com/liblouis/liblouis/pull/588,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/588,"Here is a set of initially selected testcases.
See the following page for some response from other Taiwanese reviewers/users:
https://groups.io/g/nvda-tw/topic/test_cases_for_zh_tw_ctb/20401735?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,20401735","Here is a set of initially selected testcases.
See the following page for some response from other Taiwanese reviewers/users:
https://groups.io/g/nvda-tw/topic/test_cases_for_zh_tw_ctb/20401735?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,20401735",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,588,2018-05-31T19:41:01Z,2018-07-02T12:41:59Z,2018-12-21T11:47:16Z,MERGED,True,16,1,2,https://github.com/school510587,Add a YAML test for zh-tw,1,[],https://github.com/liblouis/liblouis/pull/588,https://github.com/school510587,2,https://github.com/liblouis/liblouis/pull/588#issuecomment-449082911,"Here is a set of initially selected testcases.
See the following page for some response from other Taiwanese reviewers/users:
https://groups.io/g/nvda-tw/topic/test_cases_for_zh_tw_ctb/20401735?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,20401735","Hi @bertfrees,

How to check only whether ""correct"" command is executed as expected?
For example, when I write:
noback correct ""闹"" ""鬧""
noback correct ""闹""[""别""]""扭"" ""彆""
I would just like to check whether 闹别扭 is replaced by 鬧彆扭, but the requirement has nothing to do with the final dot pattern of 鬧彆扭.
Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,588,2018-05-31T19:41:01Z,2018-07-02T12:41:59Z,2018-12-21T11:47:16Z,MERGED,True,16,1,2,https://github.com/school510587,Add a YAML test for zh-tw,1,[],https://github.com/liblouis/liblouis/pull/588,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/588#issuecomment-449085449,"Here is a set of initially selected testcases.
See the following page for some response from other Taiwanese reviewers/users:
https://groups.io/g/nvda-tw/topic/test_cases_for_zh_tw_ctb/20401735?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,20401735","No I don't see how you could do that. Either you check whether an opcode is behaving as expected by testing a special table dedicated to the test, or you check whether a table is behaving as expected. There is nothing in between. Why are you asking this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,588,2018-05-31T19:41:01Z,2018-07-02T12:41:59Z,2018-12-21T11:47:16Z,MERGED,True,16,1,2,https://github.com/school510587,Add a YAML test for zh-tw,1,[],https://github.com/liblouis/liblouis/pull/588,https://github.com/school510587,4,https://github.com/liblouis/liblouis/pull/588#issuecomment-449099542,"Here is a set of initially selected testcases.
See the following page for some response from other Taiwanese reviewers/users:
https://groups.io/g/nvda-tw/topic/test_cases_for_zh_tw_ctb/20401735?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,20401735","Hi @bertfrees,

Dot pattern of Chinese relies almost on pronunciation. At the beginning, I hope to handle characters with multiple pronunciations by multipass rules.
Ideally, ""noback context"" rules involve only traditional characters, because it is an intrinsic property of traditional Chinese.
However, simplified characters are derived from traditional characters. They gain different pronunciations when two traditional characters with different pronunciations are reduced to the same simplified character.
For example, 別 and 彆 are reduced to 别, and their tones are different.
Conceptually, 别 must be pronounced depending on the original traditional character it represents.

Thus, every simplified character undergoes two passes during braille translation.
In pass0 (noback correct), a conditional conversion is enforced to find its original tradition character.
In pass1 (noback context), pronunciations of all traditional characters are determined via a dictionary written in pass1 rules.

Here, I think two passes are independent of each other, and testcases can also be designed independently.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,588,2018-05-31T19:41:01Z,2018-07-02T12:41:59Z,2018-12-21T11:47:16Z,MERGED,True,16,1,2,https://github.com/school510587,Add a YAML test for zh-tw,1,[],https://github.com/liblouis/liblouis/pull/588,https://github.com/school510587,5,https://github.com/liblouis/liblouis/pull/588#issuecomment-449103990,"Here is a set of initially selected testcases.
See the following page for some response from other Taiwanese reviewers/users:
https://groups.io/g/nvda-tw/topic/test_cases_for_zh_tw_ctb/20401735?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,20401735","Hi @bertfrees,

Simplicity of testcase maintenance also has to be considered.
Language is dynamic, so we can't guarantee that pronunciations of characters remain unchanged forever.
Surppose one day 鬧彆扭 is pronounced differently, and this may require modification of pass1 rules.
If 闹别扭 is written in testcases along with its old dot pattern, all involved testcases must be modified to its new dot pattern.
This complexity can be avoided by independent design of testcases of two passes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,588,2018-05-31T19:41:01Z,2018-07-02T12:41:59Z,2018-12-21T11:47:16Z,MERGED,True,16,1,2,https://github.com/school510587,Add a YAML test for zh-tw,1,[],https://github.com/liblouis/liblouis/pull/588,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/588#issuecomment-449368252,"Here is a set of initially selected testcases.
See the following page for some response from other Taiwanese reviewers/users:
https://groups.io/g/nvda-tw/topic/test_cases_for_zh_tw_ctb/20401735?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,20401735","It sounds like the two passes are indeed independent of each other and could be tested independently. You could try to split off the ""correct"" part into a separate table, so that you could test it separately. The ""context"" part can be tested using the complete table. This may simplify test maintenance, but I'm a little concerned about the usefulness of the resulting tests. It think it's important that - at least a part of - the test cases test the complete input-output behavior of the table. There are two reasons for this. First, it's not because the two passes work fine independently that the combined table works fine too. And second, the tests also need to be readable and understandable by human beings. It is more clear to have a single test that translates 闹别扭 to braille then to have a part that translates 闹别扭 to 鬧彆扭 and a part that translates 鬧彆扭 to braille in a different file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,589,2018-06-01T09:38:14Z,2018-08-06T12:07:04Z,2018-08-27T10:03:59Z,MERGED,True,115,0,3,https://github.com/bertfrees,Add a YAML test for the issues reported by Michael Robin,1,[],https://github.com/liblouis/liblouis/pull/589,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/589,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,589,2018-06-01T09:38:14Z,2018-08-06T12:07:04Z,2018-08-27T10:03:59Z,MERGED,True,115,0,3,https://github.com/bertfrees,Add a YAML test for the issues reported by Michael Robin,1,[],https://github.com/liblouis/liblouis/pull/589,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/589#issuecomment-393843578,,I have no idea. I think that's up to the table developers to decide. I don't even know I understand the requirements correctly.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,589,2018-06-01T09:38:14Z,2018-08-06T12:07:04Z,2018-08-27T10:03:59Z,MERGED,True,115,0,3,https://github.com/bertfrees,Add a YAML test for the issues reported by Michael Robin,1,[],https://github.com/liblouis/liblouis/pull/589,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/589#issuecomment-393849277,,"I have no idea. I think that's up to the table developers to decide. I don't even know I understand the requirements correctly.

OK, makes sense",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/594,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?","The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/594#issuecomment-395013350,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?","Ok, the cs issue is more related to #400. They use different Braille chars to cancel numeric mode depending on whether it is followed by a small or capital letter. However, it will not work properly before issue 400 has been fixed.
I think we should merge this PR as it is, because it solves the problem with backtranslation of numbers for 4 languages already. We should then make another PR for #400, since I think it could be somewhat difficult and potentially break compatibility or at least expectation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/594#issuecomment-395016104,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?",Why don't you use the new bothDirections mode?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/594#issuecomment-395024478,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?","Some of the forward tests may be irrelevant with backtranslation, e.g. if 1 Braille pattern is used to define multiple characters, e.g. line 57.

However, I was concentrating on the numeric problem, so I didn’t try to decide if any of the actual tests in this case should be removed. I just wanted greater control over what was happening.



The bothDirections flag is great, especially when you expect backtranslation to be 100% correct, e.g. with 8 dots computer Braille tables or even with the Danish 8 dots grade 2 table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/594#issuecomment-395028152,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?","I wouldn't add tests if we're not sure they are really requirements. I think we should ask @HegrJan who initially wrote the test.
For the tests we are sure of I would use the bothDirections mode to make them more compact.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/BueVest,6,https://github.com/liblouis/liblouis/pull/594#issuecomment-395039725,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?","Yes, let us go back one commit and then merge, so we don’t add tests to the cs table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/594#issuecomment-401462732,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?",Should the litdigits6Dots_backward.yaml test be updated?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/BueVest,8,https://github.com/liblouis/liblouis/pull/594#issuecomment-403024031,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?","I will have a look at it. BTW, this is an disadvantage of running multiple tables in one go with an expected fail. If some but not all of the tables pass, you will never know.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/594#issuecomment-407734373,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?",Anything else to do here before merge?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,594,2018-06-05T18:15:49Z,2018-08-27T12:12:41Z,2018-08-27T12:12:41Z,MERGED,True,85,24,6,https://github.com/BueVest,Buevest issue490,4,[],https://github.com/liblouis/liblouis/pull/594,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/594#issuecomment-416200851,"The pl, pt, sr and lv tables just needed to add the digits and litdigits. The cs table would need some more work. Who owns the cs tables, and would it be ok to proceed?",I have rebased this branch. Everything OK and ready to merge.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,601,2018-06-19T17:55:29Z,2018-08-19T14:28:33Z,2018-08-19T14:28:36Z,CLOSED,False,0,1066,9,https://github.com/bertfrees,Delete Liblouisutdml specific tables,1,['refactoring'],https://github.com/liblouis/liblouis/pull/601,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/601,see issue #321,see issue #321,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,601,2018-06-19T17:55:29Z,2018-08-19T14:28:33Z,2018-08-19T14:28:36Z,CLOSED,False,0,1066,9,https://github.com/bertfrees,Delete Liblouisutdml specific tables,1,['refactoring'],https://github.com/liblouis/liblouis/pull/601,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/601#issuecomment-414131414,see issue #321,Merged in 9a4dd5f,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,602,2018-06-19T18:05:06Z,2018-08-06T12:05:42Z,2018-08-27T10:04:12Z,MERGED,True,14,0,3,https://github.com/bertfrees,Add a YAML test for hi-in-g1.utb,1,[],https://github.com/liblouis/liblouis/pull/602,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/602,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,604,2018-06-21T19:30:41Z,2018-07-02T12:04:10Z,2018-11-12T13:33:21Z,MERGED,True,6860,12774,13,https://github.com/BueVest,Buevest dk tables3 7,12,['tables'],https://github.com/liblouis/liblouis/pull/604,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/604,"Hyphenation reduced to the minimum required for good Braille translation.
. Longer nocross rules replaced with hyphenation. Improves cursor positioning.
Corrected words.","Hyphenation reduced to the minimum required for good Braille translation.
. Longer nocross rules replaced with hyphenation. Improves cursor positioning.
Corrected words.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,604,2018-06-21T19:30:41Z,2018-07-02T12:04:10Z,2018-11-12T13:33:21Z,MERGED,True,6860,12774,13,https://github.com/BueVest,Buevest dk tables3 7,12,['tables'],https://github.com/liblouis/liblouis/pull/604,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/604#issuecomment-399421475,"Hyphenation reduced to the minimum required for good Braille translation.
. Longer nocross rules replaced with hyphenation. Improves cursor positioning.
Corrected words.","I think the tests are just checking two random words in the Danish harness, one word for each test. They must have been made by Mesar Hameed when we first started to make the Danish tables.

Yes, I think I could make them into a yaml test, but if they are meant to be generic hyphenation tests, they probably shouldn’t be using the Danish hyphenation table, as it may change and indeed has changed. Any good ideas or should I just make the good old foobar hyphenation table for the test?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,604,2018-06-21T19:30:41Z,2018-07-02T12:04:10Z,2018-11-12T13:33:21Z,MERGED,True,6860,12774,13,https://github.com/BueVest,Buevest dk tables3 7,12,['tables'],https://github.com/liblouis/liblouis/pull/604,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/604#issuecomment-399873834,"Hyphenation reduced to the minimum required for good Braille translation.
. Longer nocross rules replaced with hyphenation. Improves cursor positioning.
Corrected words.",I see you answered your own question. Looks good to me.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/606,Aims to address #604. Keeping C tests until approved for comparison.,Aims to address #604. Keeping C tests until approved for comparison.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/606#issuecomment-399759011,Aims to address #604. Keeping C tests until approved for comparison.,"Sorry, #605",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/606#issuecomment-399910032,Aims to address #604. Keeping C tests until approved for comparison.,"Yes, but I thought I would delete all the C tests as the last thing. Then, it is easy to make comparisons between old and new tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/606#issuecomment-399922517,Aims to address #604. Keeping C tests until approved for comparison.,"Yes, but I thought I would delete all the C tests as the last thing. Then, it is easy to make comparisons between old and new tests.

You mean as the last thing in this pull request? To review the PR it would help to see what you are deleting vs what you are adding.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/606#issuecomment-399922976,Aims to address #604. Keeping C tests until approved for comparison.,"Ok. If it makes it easier, I will delete as I go then.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,6,https://github.com/liblouis/liblouis/pull/606#issuecomment-400065226,Aims to address #604. Keeping C tests until approved for comparison.,"What is the deeper meaning of compbrlAtCursor.c? AFAICS, it only tests that a computer Braille table returns computer Braille regardless of the cursor position and compbrlatcursor flag, and from an input of a single two-letter word. How could it not?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/606#issuecomment-400223023,Aims to address #604. Keeping C tests until approved for comparison.,"What is the deeper meaning of compbrlAtCursor.c? AFAICS, it only tests that a computer Braille table returns computer Braille regardless of the cursor position and compbrlatcursor flag, and from an input of a single two-letter word. How could it not?

@dkager do you know the answer?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/606#issuecomment-401468738,Aims to address #604. Keeping C tests until approved for comparison.,"Nice work! Much better than before. Some comments:

 The usefulness of some of these tests is questionable. Maybe it would have been better to remove them altogether. For example, some of the new inpos_outpos tests are so trivial that they add little to the existing tests.
 The tests that you grouped in backtranslate.yaml have little to do with each other. Some belong to the braille-specs tests for en-us or en-ueb. The ones for testing the partialTrans mode I would put in partialTrans.yaml. The one for testing the noUNdefinedDots mode I would put in noUndefinedDots.yaml.
 Embed the following tables in YAML. They are all small enough. It will make the tests much more readable.

 capitalization.ctb
 letterDefTest.ctb
 letterDefTest_lowercase.ctb
 letterDefTest_uppercase.ctb
 uplow_with_unicode.ctb
 lowercase_with_unicode.ctb
 pass2.ctb
 squash_space_with_repeated.utb
 squash_space_with_context_2.utb
 inpos_pass0.ctb
 inpos_pass1.ctb
 inpos_pass2.ctb
 inpos_pass3.ctb
 inpos_match_replace.ctb


 Use UTF-8 everywhere, no \x escape sequences (see letterDefTest_harness.yaml and backtranslate.yaml)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/606#issuecomment-401547184,Aims to address #604. Keeping C tests until approved for comparison.,"Ok, sounds reasonable. Could you please have a look at the following tests? I am in doubt if they should be converted or just removed.

capitalized_with_sentance.c and capitalized_word.c: Seem to be just generic cursor position tests of which we already have a lot.

compbrlAtCursor.c: Apparently checks if a computer braille table delivers computer braille in a one word test, even if computerBrailleAtCursor is turned on.

en_gb_g1_italics.c: Has an obvious error in the expected output – and fails. Apparently, it expects an indicator for bold when italics has been specified.

hyphenate_straightforward.c and hyphenate_xxx.c: Seem to demonstrate that the hyphenation patterns aren’t perfect for the given languages. Hyphenate_xxx refers to a bug which I cannot find among the issues.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/606#issuecomment-401948518,Aims to address #604. Keeping C tests until approved for comparison.,"capitalized_with_sentance.c
capitalized_word.c
present_progressive.c: these three are the only files that use the check_cursor_pos function. This function should be removed I think. capitalized_word.c and capitalized_word.c seem rather generic indeed, it's probably safe to remove these. present_progressive.c is currently failing so should be kept (converted to yaml). Note that check_cursor_pos sets compbrlAtCursor.
compbrlAtCursor.c: Doesn't really check the compbrlAtCursor mode at all AFAICS. It just checks that undefined characters are translated to '\xABCD'
en_gb_g1_italics.c: This test is indeed failing but I don't think it's because of what you say. It does expect an italic indicator (dots 46, or .). The problem might be the last part, ""time and spirit"". The test expects contractions while it's using a grade 1 table.
hyphenate_straightforward.c: Should be safe to remove. This merely tests that the hyphenation function works, but that shouldn't be done with real tables.
hyphenate_xxx.c: This test is related to https://www.freelists.org/post/liblouis-liblouisxml/Another-crash-in-Python-hyphenation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,11,https://github.com/liblouis/liblouis/pull/606#issuecomment-402081149,Aims to address #604. Keeping C tests until approved for comparison.,"- en_gb_g1_italics.c: This test is indeed failing but I don't think it's because of what you say. It does expect an italic indicator (dots 46, or .). The problem might be the last part, ""time and spirit"". The test expects contractions while it's using a grade 1 table.
Yes, the last test also fails for the reason you state, but already test no. 2 fails. The test actually expects begemph bold (46-46 or ..) when it should be expecting begemph italic (46). Should I make it work or just remove it?
 - hyphenate_straightforward.c: Should be safe to remove. This merely tests that the hyphenation function works, but that shouldn't be done with real tables.
 - hyphenate_xxx.c: This test is related to https://www.freelists.org/post/liblouis-liblouisxml/Another-crash-in-Python-hyphenation.
Ok, I see. It looks to me as if hyphen_string is too short. It should be inlen*2 to accommodate a hyphen between each letter, not just len+2.

BTW: It is true that moving the tables inpos_pass0-3 into inpos_outpos.yaml will make the tests much easier to read, but it also means that the content of inpos_pass0 will be repeated 4 times within the same yaml file because the table is being refered to several times. Are they some of the tests that you don’t think to add any value? If so, should they just be removed together with the tables?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/606#issuecomment-402117765,Aims to address #604. Keeping C tests until approved for comparison.,"The test actually expects begemph bold (46-46 or ..) when it should be expecting begemph italic (46). Should I make it work or just remove it?

Ah yes you're right. Yes, I'd make the tests work and move them to en-gb-g1_harness.yaml and en-gb-g2_harness.yaml.

It is true that moving the tables inpos_pass0-3 into inpos_outpos.yaml will make the tests much easier to read, but it also means that the content of inpos_pass0 will be repeated 4 times within the same yaml file because the table is being refered to several times.

Yeah but that's fine. These tables are so small.

Are they some of the tests that you don’t think to add any value?

Maybe. These ones are kind of different from the existing tests because the passes actually build on each other (i.e. text from replacements in one pass is matched by rules in the next pass).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,13,https://github.com/liblouis/liblouis/pull/606#issuecomment-402666280,Aims to address #604. Keeping C tests until approved for comparison.,"Ok, I will include the comment about the origin of the last test. I assume that’s the comment you are talking about.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/606#issuecomment-402672261,Aims to address #604. Keeping C tests until approved for comparison.,"Thanks. Yes, sorry if that was not clear. My link had the line number range in it, and in the graphical user interface this highlights the lines in question.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,15,https://github.com/liblouis/liblouis/pull/606#issuecomment-402714900,Aims to address #604. Keeping C tests until approved for comparison.,"Yes, I see now that I had actually overlooked that the test writer wanted the indicator to be before “a”, even if “a” is still italic.

All in all, I think the tests don’t bear much relation to the table they refer to. I could make the tests exactly as in the C test, except for the grade, and then let them fail as they please. Then, somebody else will have to decide if the tests or the tables are correct according to the specs.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/606#issuecomment-402985284,Aims to address #604. Keeping C tests until approved for comparison.,"@BueVest I have changed your last commit. I think these tests were testing the partialTrans and noUndefinedDots mode, they were not specific to English. I also removed the escape sequence.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,17,https://github.com/liblouis/liblouis/pull/606#issuecomment-403020957,Aims to address #604. Keeping C tests until approved for comparison.,"I think this is about as far as I can get.
AFAICS, the remaining C tests can't be converted to yaml. Concerning the hyphenation tests, three of them have already been removed by another PR. Hyphenatexxx.c should probably really be a python test, and if it fails, it would probably crash with an array out of bounds.
Have I overlooked anything?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,18,https://github.com/liblouis/liblouis/pull/606#issuecomment-407729623,Aims to address #604. Keeping C tests until approved for comparison.,"@bertfrees, you wrote:
The usefulness of some of these tests is questionable. Maybe it would have been better to remove them altogether. For example, some of the new inpos_outpos tests are so trivial that they add little to the existing tests.
I see what you mean, but I am not sure exactly which tests to remove. On the whole, I would rather have two tests too many than one too few. If you have any particular tests in mind, please, tell me, or you are of course free to remove them yourself. :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/egli,19,https://github.com/liblouis/liblouis/pull/606#issuecomment-415766878,Aims to address #604. Keeping C tests until approved for comparison.,What is the status on this one?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,20,https://github.com/liblouis/liblouis/pull/606#issuecomment-415849329,Aims to address #604. Keeping C tests until approved for comparison.,"As far as I am concerned, we are ready to merge. Perhaps, @bertfrees has something?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/606#issuecomment-416160170,Aims to address #604. Keeping C tests until approved for comparison.,I want to look at it again but let's move it to the next milestone then I have some more time.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/606#issuecomment-441296386,Aims to address #604. Keeping C tests until approved for comparison.,"It looks good except for the table ""pass0_typebuf.ctb"" which is not inlined yet, and lastworditalafter.yaml which uses real tables (en-us-g2.ctb and de-ch-g1.ctb). I will try to fix these two issues and after that I'll merge.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/BueVest,23,https://github.com/liblouis/liblouis/pull/606#issuecomment-441317802,Aims to address #604. Keeping C tests until approved for comparison.,Thank you very much for the help. I am very sorry that I haven’t been able to put much energy into Liblouis lately. I hope this will improve soon.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,606,2018-06-24T14:00:35Z,2018-12-02T20:54:19Z,2018-12-02T20:54:19Z,MERGED,True,633,1132,54,https://github.com/BueVest,Convert C tests to yaml,25,"['refactoring', 'needs fixup']",https://github.com/liblouis/liblouis/pull/606,https://github.com/bertfrees,24,https://github.com/liblouis/liblouis/pull/606#issuecomment-441598942,Aims to address #604. Keeping C tests until approved for comparison.,Don't worry about it. We're happy with anything you can contribute.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,609,2018-06-28T09:59:23Z,2018-06-28T11:53:46Z,2018-06-28T11:53:46Z,MERGED,True,8,2,1,https://github.com/moyanming,Update README.windows,2,[],https://github.com/liblouis/liblouis/pull/609,https://github.com/moyanming,1,https://github.com/liblouis/liblouis/pull/609,"Add more detailed description about how to make the DLL.
NMAKE: fatal error U1073 #607","Add more detailed description about how to make the DLL.
NMAKE: fatal error U1073 #607",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/611,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/611#issuecomment-403590617,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","(This is an answer to #611 (comment))

I incidentally answered this question in my most recent commit. I think a nocontractsign or letsign should cancel numeric mode no matter what. Even if it appears right after a numbersign. If the nocontractsign/letsign appears in a place where it has no effect, it should just be ignored.

However, it is a bit tricky: Nocontractsign/letsign is used to cancel numeric mode, cancel contraction, and in some Braille codes, e.g. Danish, also as endcapsword (see #401). I think the philosophy is that nocontractsign/letsign tells you that the dot pattern should be read in its most basic meaning, i.e. no number no contraction etc.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/611#issuecomment-403636984,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","(Answer to #611 (comment):)

Hmm, I don’t know that opcode, and I can’t find it. It has apparently not been documented.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/611#issuecomment-403731012,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)",It exists alright :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/611#issuecomment-403764848,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Yes, I can see in compileTranslationTable.c that both capsmodechars and numericmodechars exist, but apparently, they are undocumented, and I can’t see that they have been implemented at all in back-translation. Are there any tests to show that they work and how they work?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/611#issuecomment-403780975,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","numericmodechars is tested via the UEB tables. I assume there are no back-translation tests however.
capsmodechars is used in the Dutch table. Not sure if it's tested.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/611#issuecomment-404093696,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)",Thanks for the documentation update! I'm gonna let @egli check it for correctness of English.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,8,https://github.com/liblouis/liblouis/pull/611#issuecomment-404142185,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","(Answer to #611 (comment):)

It adds a reminder about the fact that a capsword is usually terminated automatically because of a space or punctuation. Only if a small letter appears after the capital letters will the endcapsword indicator be used. I guess that is why endcapsword and letsign share the same Braille pattern in many Braille codes. It terminates a special meaning of the Braille cells and tells you that the following cell should be interpreted according to its basic/normal meaning. In Danish Braille, the letsign/nocontractsign/endcapsword is actually called the same word as “natural sign” (like in music).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/611#issuecomment-404146137,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","I get what you mean but I think the wording is not so great.
What about this?

It is used in cases where the block is not terminated automatically by a word boundary, a number or punctuation. A common case is when an uppercase block is followed directly by a lowercase letter.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,10,https://github.com/liblouis/liblouis/pull/611#issuecomment-404182237,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Done.

BTW, the section heading, ”Indicator opcodes”, is becoming more and more misleading. How about we split it into three sections: e.g. “capital letters”, “Numbers” and perhaps something like “Canceling contraction”?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,11,https://github.com/liblouis/liblouis/pull/611#issuecomment-407165839,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Why is Travis CI failing? Is it something with the formating again? If so, Bert, could you please help me out?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/611#issuecomment-407167168,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","It's the formatting, but there are also two failing tests, namely hu-hu-g1_backward and lt-6dot_harness.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,13,https://github.com/liblouis/liblouis/pull/611#issuecomment-407174781,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Ah, sorry. I did know that, but I just forgot. Yes, I will need to work with the two table authors to fix it when the rest is a bit more stable.



I already think I know what should be done in each table, so I can do it or the table authors can do it as they please. How do we usually solve a situation like that?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/611#issuecomment-407192043,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)",The Hungarian table was created by @hammera and the Lithuanian table was created by @rimas-kudelis. They are both active on Github so it should be easy to ask them.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/hammera,15,https://github.com/liblouis/liblouis/pull/611#issuecomment-407276481,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","If I see right, with hu-hu-g1.ctb and hu-hu-g2.ctb tables related the hu-hu-g1_backward.yaml test producing failing result following situations:


When in middle numbers hawe a : character. If after the colon character with normal text not have a space character, all part need backtranslating with numbers.
For example:
11:45
This text part meaning a time value, need backtranslating with 11:45, not 11:de.


When a number have a comma character, for example 7,5.
This situation need backtranslating following way the 7,5 text:
7,5
hu-hu-g1.ctb table using the decpoint , 2 rule.


When a number have - character, for example 06-1-456-654.
This situation need backtranslating this text part with following text:
06-1-456-654


Following rules using the midnum opcode with hu-hu-g1.ctb and hu-hu-g2.ctb tables:
midnum : 3
midnum - 36-3456
midnum . 3-3456
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,16,https://github.com/liblouis/liblouis/pull/611#issuecomment-407347784,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Hi Attila,

Yes, I think you are right.

So, you would need the following line:

Midnumericmodechars ,:

This would ensure correct forward and backward translation without any extra number sign after , or :. You can remove the midnum rules for those two characters.

There is a problem with the – and . characters due to midnum having been changed or broken in the UEB work. In most tables, midnum now inserts a number sign between the midnum string and the next digit, but for some strange reason, apparently not in hu-hu-g1. I simply don’t have a clue why this happens.

So, when you have

Midnum – 36-3456

It works during forward translation, but the number sign is being eaten during backward translation, so that the following digits are back-translated as letters.

Noback midnum – 36-3456

Would probably solve it, or perhaps it would be enough to simply remove the midnum lines for – and . altogether. Hope it makes sense.

Do you want me to try it out, or would you rather like to do it yourself? If you would rather do it yourself, then I can mark the tests as xfail for now, and you can fix it later, but if it is ok with you, I can make these corrections, and you can check and approve.

Bue",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/hammera,17,https://github.com/liblouis/liblouis/pull/611#issuecomment-407451432,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Hi Bue,
Me this attached modification hu-hu-g1_backward.yaml and hu-hu-g1_forward.yaml passed right.
With midnum related lines, for example midnum - 36-3456 is need for hungarian grade1 and grade2.
If everithing is ok, you please commit this change your branch.
If you found a variation with need adding the midnummodechars rule, I welcome doing.
Now, lou_translate and lou_checktable utility doesn't support this new opcode?
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/hammera,18,https://github.com/liblouis/liblouis/pull/611#issuecomment-407452218,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","So, I add following line with hu-hu-g1.ctb table:
midnumericmodechars ,:.-
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,19,https://github.com/liblouis/liblouis/pull/611#issuecomment-407459869,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Hi attila,
Sorry, but I can't see your attached table. Perhaps, you need to rename to .utb.txt to attach the file.
I have only tried the new opcode with lou_trace and lou_checkyaml, but it should also work with the other utilities.
Bue",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/rimas-kudelis,20,https://github.com/liblouis/liblouis/pull/611#issuecomment-407512484,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Regarding lt-6dot_harness: I think that test is quite extensive, and if you can edit the respective table to make it pass the test, that's fine, I guess I could just simply review it then.
You've probably seen already that I introduced a bunch of workarounds to avoid hitting certain issues, of which it seems most if not all will be fixed by your commit, so it seems that bottom section of the table can be greatly simplified now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/hammera,21,https://github.com/liblouis/liblouis/pull/611#issuecomment-407633919,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Hy Bue,
Possible now right this attachment.
If again not see the attached file, please put following line with tables/hu-hu-g1.ctb table:
midendnumericmodechars ,:.-
Attila
hu_midnum.patch.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,22,https://github.com/liblouis/liblouis/pull/611#issuecomment-407646505,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Ok, @rimas-kudelis, I have changed the table according to the suggestions in the table itself, and it now passes all tests. Please, check and tell me how you like it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/rimas-kudelis,23,https://github.com/liblouis/liblouis/pull/611#issuecomment-407692027,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Yep, looks good :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,24,https://github.com/liblouis/liblouis/pull/611#issuecomment-407700490,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Ok, I have added the line. All tests pass now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,25,https://github.com/liblouis/liblouis/pull/611#issuecomment-407712686,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","@bertfrees could you please correct the formating issue?
Anything else to do before merging?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,26,https://github.com/liblouis/liblouis/pull/611#issuecomment-407714187,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Yes I'll do that when I merge.
I still need to look at the code changes, but I'm sure it'll be good as always.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,27,https://github.com/liblouis/liblouis/pull/611#issuecomment-411699898,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","@bertfrees, could we please get this PR to a stage where we can merge and close. I am working on two new tables for Greenlandic and Faroese, but they depend on the fixes in this PR. Anything I can do here?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,28,https://github.com/liblouis/liblouis/pull/611#issuecomment-411703992,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Hi Bue. I'm sorry, I haven't had any time to look at the code changes yet and I don't know if I will have time the coming week. I'm kind of in vacation mode so everything is going at a slow pace. There's nothing you can do. The plan is still to get this into v3.7 by the way. Would it be possible to base your new tables on this branch maybe?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,29,https://github.com/liblouis/liblouis/pull/611#issuecomment-411816159,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Yes, I can do that. It shouldn’t create merge issues, as the tables are separate files.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,30,https://github.com/liblouis/liblouis/pull/611#issuecomment-416243200,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","I have rebased this branch and cleaned up the issue-400.yaml file. @BueVest can you have a quick look? Maybe we should also rename the file but I can't come up with a good name.
@egli Could you please review the documentation changes?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,31,https://github.com/liblouis/liblouis/pull/611#issuecomment-416310351,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Ok, looks fine to me.

Concerning the renaming of the yaml file: how about something like backtranslate_numbers_caps.yaml. But you are right. We have several yaml files called issueXXX.yaml, which should probably also be renamed at some point to tell what they are about.

A small git question:

Now, when I pull from origin, I get quite a few merge conflicts to resolve. Is there a way to pull and specify that I want the remote version of the file in all cases, no matter what. Or since I have already done the pull and have the conflicts, is there a way to “autosolve” them. I suppose the correct term is rebasing, but how do I do it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,32,https://github.com/liblouis/liblouis/pull/611#issuecomment-416312633,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","You should abort the pull (don't know exactly what the command is, check git status), then do:
git checkout buevest_issue400
git fetch BueVest # replace ""BueVest"" with whatever is the remote name of your fork
git reset --hard BueVest/buevest_issue400",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/bertfrees,33,https://github.com/liblouis/liblouis/pull/611#issuecomment-416312953,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","This is of course assuming that you didn't make any new commits after ""Added midnumericmodechars to hu-hu-g1.ctb"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/egli,34,https://github.com/liblouis/liblouis/pull/611#issuecomment-416893895,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)",@BueVest would you mind writing a little blurb for the NEWS file about this change? As far as I can see you added a new opcodes to deal with numerals and how they end. Is that correct?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/egli,35,https://github.com/liblouis/liblouis/pull/611#issuecomment-416894850,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)",@BueVest and also does this actually fix #400?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/egli,36,https://github.com/liblouis/liblouis/pull/611#issuecomment-416896006,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)",@BueVest sorry a third time: You renamed midnumericmodechars to midendnumericmodechars. But I can still find midnumericmodechars in the documentation and a comment in ./tests/yaml/issue-400.yaml. Presumably this needs to be changed. Do you want me to do this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/egli,37,https://github.com/liblouis/liblouis/pull/611#issuecomment-416930460,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Do you want me to do this?

@BueVest I fixed above problem with the documentation, see 1a14722, 98a0e12 and 59c5149.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,611,2018-07-08T17:24:01Z,2018-08-29T09:38:53Z,2018-08-29T15:10:01Z,MERGED,True,375,326,20,https://github.com/BueVest,buevest_issue400,20,[],https://github.com/liblouis/liblouis/pull/611,https://github.com/BueVest,38,https://github.com/liblouis/liblouis/pull/611#issuecomment-416986726,"I assume we want back-translation to reflect forward translation as far as possible. So, first step should be to test the corresponding forward translations.
In a number of cases, the actual forward translation differs from the string used to trigger the expected back-translation. In all cases, the actual forward translation stands to logic IMHO, and is in accordance with the UEB manual. That is not to say that other Braille codes wouldn't need a different behaviour, but we haven't had an issue about this for forward translation.
I therefore suggest that we change the backward tests, at least  in the cases where they contradict the current forward rules. (see comments in issue-400.yaml)","Yes, please. That would be helpful.

This RP should solve issues #361, #400 and #439.

I also think it solves #401, but it would need more explicit testing. We can leave a note in the issue to test further.

It does not solve #479 which is related.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,1,https://github.com/liblouis/liblouis/pull/612,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,2,https://github.com/liblouis/liblouis/pull/612#issuecomment-407599023,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi!
Could you tell me how to achieve this effect, please?
When Chinese characters are mixed with English letters,
if there is no space character between them,
insert a Braille code to separate them.
For example
""昨天在_Street_找到了_15_个拿着_green bird_的人""
The _ underline represents the Braille code that needs to be inserted
I look forward to your reply. Thank you.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/612#issuecomment-407684527,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi,
If the Chinese letters are defined using either the ""letter"" or the ""sign"" opcode, then you could try something like the following:
noback context !$Uu[]$Uu2-. @56
noback context !$Uu[]$Uu1 @6
That should place dot 6 before a single latin letter and dots 56 before two or more consecutive latin letters.
I would recommend reading section 2.11 about context and multi-pass opcodes in the Liblouis manual.
I am sorry about my lack of knowledge about Chinese Braille, but I hope you can use this, perhaps with some adjustment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,4,https://github.com/liblouis/liblouis/pull/612#issuecomment-408601681,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","@BueVest
Hi!
Thank you for reply!
Now, I've solved it.
The code I used is as follows
noback context $uUdDm[]$S @0
noback context $S[]$u @56
noback context $S[]$m @0

…………
In addition, the previous comments have been modified.
Now you should be able to understand.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,5,https://github.com/liblouis/liblouis/pull/612#issuecomment-408721532,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi!
I have a problem.
I use the sign opcode to define Chinese characters.
When the always opcode is behind the digit opcode,
if there is no space symbol between them,
the always opcode is failed.
In other words:
When the Chinese character is at the back of the digit character,
if there is no space character between them,
and if the Chinese character is the always opcode,
the always opcode doesn't work.
Under normal circumstances:
It should work.
…………
I look forward to your reply.
Thank you.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,6,https://github.com/liblouis/liblouis/pull/612#issuecomment-409183634,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi!
I have another problem.
Because a Chinese character occupies two or three Braille symbols,
when a Chinese character is located at the end of the Braille display,
that is when it need to change the line to display,
if the end of the place is not enough to display a Chinese character,
do not disassemble a Chinese character.
Under normal circumstances:
It should be displayed at the beginning of the next line.
…………
I look forward to your reply.
Thank you.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,7,https://github.com/liblouis/liblouis/pull/612#issuecomment-409538538,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Well...
I don't know whether the two problems are feature or bug.
If it is a bug, do I need to write a issues?
If it is a feature, is there a solution?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/BueVest,8,https://github.com/liblouis/liblouis/pull/612#issuecomment-409717900,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi,

I think it would be better to write on the mailing list with questions on how to do one thing or another with liblouis, especially questions concerning the tables. Very few people read the pull requests.

I think your questions are difficult to answer.

Concerning not breaking the display line in the middle of a character consisting of three cells, I think that is a job for the application that uses Liblouis, e.g. NVDA, JAWS or a note-taker, and not Liblouis itself. Liblouis outputs a string of Braille characters, but has no control over line wrapping. However, Liblouis also outputs a list of braille cursor positions in relation to the original cursor positions. An application could use these positions to make sure that two Braille cells with the same original cursor position do not appear on different display lines. However, that would be the responsibility of the application. So, there is probably not much you can do about it in your table.

Concerning the failing “always” opcode after a digit: Have you tried using “letter” for the characters in stead of “sign”? I am not sure, but there might be a difference.

Bue",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,9,https://github.com/liblouis/liblouis/pull/612#issuecomment-409772257,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","@BueVest
Hi!
Thank you for your reply and advice.
…………
I used to use the letter opcode to define Chinese characters,
but that would be problem.
When the Chinese character is located behind the English letter,
or when the English letter is located behind the Chinese character;
if there is no space symbol between them,
I can't separate them with the context opcode.
I don't know why, but the actual test results are so.
If I use the sign opcode, I can implement it.
…………
Yours sincerely.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/612#issuecomment-411531582,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi @loomee.
Thanks for your work on Chinese braille. I would very much like to incorporate your tables in Liblouis, but there are a few small preconditions that need to be fulfilled first, like with all table contributions. These preconditions are:

References to some official documentation of the braille standards. It looks like you have already taken care of this. Very good!
Automatic regression tests that safeguard your work and document the braille standards. It could for example contain a small subset of the words defined in the table. See for example the very minimal test that was written for the existing ""zh-chn.ctb"" table: zh-chn.yaml. Liblouis tests are written in a special YAML format: http://liblouis.org/documentation/liblouis.html#YAML-Tests-1
Table metadata: http://liblouis.org/documentation/liblouis.html#Table-Metadata

Unfortunately the situation is a bit complicated at the moment because apart from the existing ""zh-chn.ctb"" table, written by Kaifang Bao from RejoinTech and improved by a guy who we know as ""Roshanson"" (don't know if that is his real name), and your two new tables ""zh-cn-g1.ctb"" and ""zh-cn-g2.ctb"", there has also been a third effort with two new tables called ""zh-chn.ctb"" and ""zh-chnb.ctb"" by someone who we know as ""vgjh2005"" (we don't know his real name). We haven't been able to merge vgjh2005's tables due to communication issues mainly (see PR #481).
Of course you understand that we can only include one official Liblouis table per braille standard, so we need to find out exactly which braille code is implemented by which table. From your explanation I'm not quite sure if the existing ""zh-chn.ctb"" table should be replaced by one of your tables or not. Also I'm not sure how your tables relate to vgjh2005's tables which he described as follows:

zh-chn.ctb: Chinese (mainland China, mandarin braille)
zh-chnb.ctb: Chinese (mainland China, mandarin braille with tone).

For both versions he refers to the wikipedia article https://en.wikipedia.org/wiki/Mainland_Chinese_Braille. Does your ""g1"" table correspond with his ""zh-chnb.ctb"" and does your ""g2"" correspond with the wikipedia article https://en.wikipedia.org/wiki/Two-cell_Chinese_Braille?
Thanks.
Bert",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,11,https://github.com/liblouis/liblouis/pull/612#issuecomment-411646778,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","@bertfrees
Hi!
Thank you for your reply.
My English is not good.
[Including the previous and the present]
This may make it difficult for you to understand my speech.
……
For what you call the automatic regression test, I'm still thinking about how to use it.
……
I got some blind people to actually experience the zh-cn-g1 and (2),
and they said it worked very well.
……
The zh-chn of VGJH is very similar to the zh-chn of Rejointech.
They are both Chinese Braille without tones.
The difference is that VGJH has more polyphonic glossary than Rejointech.
Besides, VGJH has more Chinese characters than Rejointech.
……
About zh-chnb of VGJH, it is a Mandarin Braille with tones.
The rest is not different from the zh-chn of VGJH.
……
With regard to zh-cn-g1, it is similar to the zh-chnb of VGJH.
But the difference is that zh-cn-g1 corrected zh-chnb's error.
The VGJH has a lot of redundant data and error.
Besides, zh-cn-g1 also optimizes the effect of Braille display.
……
About zh-cn-g2, it does sure correspond to Wikipedia.
……
In addition, I can try to contact VGJH. He should agree to my replacement.
But I'm not sure.
……
About Rejointech's zh-chn, blind friends say it's not easy to use.
……
Yours sincerely.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/612#issuecomment-411896283,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Thanks. I'm starting to understand the differences between the tables.
What exactly do you mean by ""zh-cn-g1 also optimizes the effect of text display""? Could you elaborate a bit?
Yes, it would be a huge help if you could talk to vgjh2005. His email address is vgjh2005@gmail.com. I hope we can come to an agreement about which tables are the best at the moment.
I was able to understand you pretty well so far. But if you think your English is not good enough to understand me or to express yourself properly, you could maybe ask someone to help you translate? If needed, we know a person from Taiwan who has done some work for Liblouis and who speaks English very well. He may want to help out.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,13,https://github.com/liblouis/liblouis/pull/612#issuecomment-412106582,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","@bertfrees
Sorry, I did not describe clearly, which makes it difficult for you to understand.
I mean, it optimizes the effect of Braille display.
Chinese characters, English letters and numeric characters, when they are mixed together, if there is no space between them, insert a braille symbol to separate them.
Refer to the special character sequences at the end of zh-cn-g1 and G2 files.
…………
I try to make yaml files for the automatic regression test.
I found that only the characters defined by default are displayed normally.
Those the always opcode and the context opcode do not work.
Maybe the yaml file I wrote was wrong, which caused these error.
However, manual testing on Braille displays is normal.
But, manual testing also found a drawback, referring to #615 .
…………
My English is not good. It is difficult to read the user manuals of liblouis.
It takes some time. I need to read it over and over again to understand it.
The result of Machine Translation is not accurate.
Using English Chinese dictionaries is slow.
…………
Thank you again for you've done.
Yours sincerely.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/612#issuecomment-412227102,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","OK thanks. Now I understand.
If manual testing shows that your table works like it should, you probably made a mistake in the YAML test. I can help you. Could you commit the file so that I can have a look? And can you tell me how exactly the manual testing was performed?
Both manual and automatic testing are important. The automatic tests have a different purpose than manual testing. They are automatically run every time a change is made to Liblouis, and if the test does not pass, the change is not accepted. So it protects again regressions. It is kind of like a contract. You can put as many test cases as you like in a YAML file. The zh-chn.yaml example that I showed you is very minimal, but there are test files for other languages that are several Megabytes long.
The other purpose of a YAML test is to document a certain table. The goal should be that after reading the YAML file you understand how the braille system works. For example, if someone wants to find out what the difference is between China's old braille system and its new braille system, that person would simply read and compare the respective YAML files of your tables. A suggestion: I think that if the YAML files of your two tables would be structured in a similar way and would be using the same example words that would make it very easy to compare the two.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,15,https://github.com/liblouis/liblouis/pull/612#issuecomment-412248023,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi!
@bertfrees
…………
I have finished the yaml document.
The last item of document is to demonstrate the bug of #615 .
…………
Yours sincerely.
…………
a.yaml.txt
b.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/612#issuecomment-412333630,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………",Many thanks. Should I look at the files a.yaml and b.yaml that you attached or to the files zhcn-g1.yaml and zhcn-g2.yaml that you committed? I'll see what I can do about the #615 bug.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,17,https://github.com/liblouis/liblouis/pull/612#issuecomment-412335602,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","@bertfrees
Sorry, I didn't make it clear.
…………
The a.yaml and the b.yaml are used to demonstrate bug.
The zhcn.yaml is used for the automatic regression test.
…………
Yours sincerely.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/612#issuecomment-412336076,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………",OK got it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/vgjh2005,19,https://github.com/liblouis/liblouis/pull/612#issuecomment-414040214,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi:
I agree with @bertfrees to replace my files. Thanks!",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,20,https://github.com/liblouis/liblouis/pull/612#issuecomment-414131060,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi! @bertfrees
I have discussed the related matters with Kaifang-Bao.
The zh-chn is very different from the zhcn-g1, and they are both being used by people.
Therefore, the two should exist together.
Besides, vgjh is very busy. He hardly has time to come here.
He has agreed to my replacement.
But his speech may confuse you.
Later, he should be able to modify his speech.
Yours sincerely",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/612#issuecomment-414365465,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………",@loomee Do your tables support simplified or traditional characters or both?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,22,https://github.com/liblouis/liblouis/pull/612#issuecomment-414506476,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Hi! @egli
I have a small update, and can I still push it now?
No worries, it's unimportant.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/loomee,23,https://github.com/liblouis/liblouis/pull/612#issuecomment-414508744,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","@bertfrees
Simplified and tradition characters are supported by it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/egli,24,https://github.com/liblouis/liblouis/pull/612#issuecomment-414614555,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","I have a small update, and can I still push it now?

@loomee Yes of course you can. The release is in about 2 weeks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,25,https://github.com/liblouis/liblouis/pull/612#issuecomment-414616536,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","I would give the Chinese tables the following names and metadata:

zh_CHN.tbl

display-name: Mainland Chinese braille without tone
locale: cmn-Hans-CN
type: literary


zhcn-g1.ctb

display-name: Mainland Chinese braille with tone
locale: cmn-CN
type: literary


zhcn-g2.ctb

display-name: Two-cell Chinese Braille
locale: cmn-CN
type: literary


zh_HK.tbl

display-name: Cantonese braille
locale: yue-HK
type: literary


zh_TW.tbl

display-name: Taiwanese braille
locale: cmn-TW
type: literary



(see also the discussion about locales at #467)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,26,https://github.com/liblouis/liblouis/pull/612#issuecomment-415049143,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………",@egli I can fix the last commit. I'll also make the new tests use a table query.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/egli,27,https://github.com/liblouis/liblouis/pull/612#issuecomment-415049389,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","@bertfrees OK, sure",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,28,https://github.com/liblouis/liblouis/pull/612#issuecomment-415173336,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………",I've added a few commits and rebased the branch.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,29,https://github.com/liblouis/liblouis/pull/612#issuecomment-415320570,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","There is still #615 left, but I guess it was alright to merge this already.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/bertfrees,30,https://github.com/liblouis/liblouis/pull/612#issuecomment-415383605,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………",@egli We should add Sunian Loomee to AUTHORS.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,612,2018-07-24T11:08:09Z,2018-08-23T07:17:08Z,2018-08-26T09:16:41Z,MERGED,True,52780,16,13,https://github.com/loomee,Add Chinese mandarin Braille code (Grade 1) and (Grade 2) ,7,['tables'],https://github.com/liblouis/liblouis/pull/612,https://github.com/egli,31,https://github.com/liblouis/liblouis/pull/612#issuecomment-415383761,"…………
The zhcn-g1.ctb is the Chinese Common Braille,
commonly known as the old Braille.
A Chinese character is composed of three Braille Symbols,
consonants, vowels and tones.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
This version contains tones per Chinese character.
Describe things more accurately.
Reading is easier.
Each Chinese character occupies three Braille Symbols
except for few Chinese characters.
Relatively large amount of paper.
…………
The zhcn-g2.ctb is the Chinese double spelling Braille,
commonly known as the new Braille.
A Chinese character is composed of two Braille Symbols,
consonants and vowels, the tones are included in vowels.
It contains 20902 Chinese characters,
and about 3000 phrases of simplified characters,
and about 2000 phrases of traditional characters.
Each Chinese character occupies two Braille Symbols.
Every Chinese character has tones.
Describe things more accurately.
Reading is easier.
Relative saving paper.
…………
The zhcn-g1.yaml and g2 are used to the automatic regression test.
…………
About the zh-chn.ctb in liblouis/tables.
It's just the old Braille.
It doesn't have a tone.
It contains not many Chinese characters, about ten thousand.
Each Chinese character occupies two Braille Symbols
except for few Chinese characters.
It has a few mistakes.
It doesn't have the Glossary of abnormal pronunciations.
Describe things not accurately enough.
Reading is difficult.
Relative saving paper.
…………","Ah, yes, of course",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,613,2018-07-27T09:18:53Z,2019-02-18T15:43:20Z,2020-03-08T18:02:58Z,MERGED,True,5,10,1,https://github.com/BueVest,Make equals operand work with back-translation: YAML test,1,[],https://github.com/liblouis/liblouis/pull/613,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/613,"How does this currently work in forward trans with chars that take up two or more Braille cells? The function getdotsforchar() only returns one widechar and seems to assume that there is a single cell representation for each char, which is false for most or all literary tables.","How does this currently work in forward trans with chars that take up two or more Braille cells? The function getdotsforchar() only returns one widechar and seems to assume that there is a single cell representation for each char, which is false for most or all literary tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,613,2018-07-27T09:18:53Z,2019-02-18T15:43:20Z,2020-03-08T18:02:58Z,MERGED,True,5,10,1,https://github.com/BueVest,Make equals operand work with back-translation: YAML test,1,[],https://github.com/liblouis/liblouis/pull/613,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/613#issuecomment-464089132,"How does this currently work in forward trans with chars that take up two or more Braille cells? The function getdotsforchar() only returns one widechar and seems to assume that there is a single cell representation for each char, which is false for most or all literary tables.",@BueVest what is the status on this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,613,2018-07-27T09:18:53Z,2019-02-18T15:43:20Z,2020-03-08T18:02:58Z,MERGED,True,5,10,1,https://github.com/BueVest,Make equals operand work with back-translation: YAML test,1,[],https://github.com/liblouis/liblouis/pull/613,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/613#issuecomment-464100952,"How does this currently work in forward trans with chars that take up two or more Braille cells? The function getdotsforchar() only returns one widechar and seems to assume that there is a single cell representation for each char, which is false for most or all literary tables.",This is related to #500. I think it's just a matter of adding the test to make sure we remember the issue. Maybe a link to the issue would be good.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,613,2018-07-27T09:18:53Z,2019-02-18T15:43:20Z,2020-03-08T18:02:58Z,MERGED,True,5,10,1,https://github.com/BueVest,Make equals operand work with back-translation: YAML test,1,[],https://github.com/liblouis/liblouis/pull/613,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/613#issuecomment-464125376,"How does this currently work in forward trans with chars that take up two or more Braille cells? The function getdotsforchar() only returns one widechar and seems to assume that there is a single cell representation for each char, which is false for most or all literary tables.","I would like to continue working with this one. I think I will have more time and resources for working with liblouis in the time to come.

Perhaps, the best way to solve it is to evaluate the “=” lines at compile time, and substitute with the actual rules in the table struct. However, this would probably have to be done after the actual compilation since the whole table needs to be in place before you can do it.

What do you think?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,613,2018-07-27T09:18:53Z,2019-02-18T15:43:20Z,2020-03-08T18:02:58Z,MERGED,True,5,10,1,https://github.com/BueVest,Make equals operand work with back-translation: YAML test,1,[],https://github.com/liblouis/liblouis/pull/613,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/613#issuecomment-464340258,"How does this currently work in forward trans with chars that take up two or more Braille cells? The function getdotsforchar() only returns one widechar and seems to assume that there is a single cell representation for each char, which is false for most or all literary tables.","Haven't given it much thought, but yes, makes sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,613,2018-07-27T09:18:53Z,2019-02-18T15:43:20Z,2020-03-08T18:02:58Z,MERGED,True,5,10,1,https://github.com/BueVest,Make equals operand work with back-translation: YAML test,1,[],https://github.com/liblouis/liblouis/pull/613,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/613#issuecomment-464340419,"How does this currently work in forward trans with chars that take up two or more Braille cells? The function getdotsforchar() only returns one widechar and seems to assume that there is a single cell representation for each char, which is false for most or all literary tables.","Although doing it after the actual compilation will pose problem because we should keep respecting the order in which the rules are defined, for precedence. So better would be to do two passes, a first pass to get all the character definitions, then all the other rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/timothytylee,1,https://github.com/liblouis/liblouis/pull/614,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.","undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/timothytylee,2,https://github.com/liblouis/liblouis/pull/614#issuecomment-408814972,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.",This fixes bug #584,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/614#issuecomment-411502678,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.",Thank you! I will include this change when I continue working on issue #483. It is planned to be done for the next release (3.7). Would it be possible to create a small YAML test that demonstrates the issue? It may be taken from the example in your bug report #584.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/timothytylee,4,https://github.com/liblouis/liblouis/pull/614#issuecomment-411738993,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.","I could no specify ""\345/"" as the expected result of a YAML test case.  There is a bug in lou_checkyaml.
In brl_checks.c, check_base() calls _lou_extParseChars() and treats \3 as an escape sequence, resulting in an expected length of 0.  If I use ""\\345/"" instead, lou_checkyaml thinks that 6 input positions should be given.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/614#issuecomment-411769533,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.",Hmm. I would have expected \\345/ to work. This is a bug in lou_checkyaml.c. Thanks for discovering it! I will fix it and also take care of the test myself.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/614#issuecomment-411862850,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.","After fixing the bug in lou_checkyaml.c I was able to run this test successfully:
table: |
  include tables/en-ueb-g1.ctb
flags: {testmode: backward}
tests:
  - - "">""
    - ""\\\\345/""
    - inputPos: [0,0,0,0,0]
This is probably because lou_checkyaml prefills the input positions array with zeros. Indeed, when I change the test to:
table: |
  include tables/en-ueb-g1.ctb
flags: {testmode: backward}
tests:
  - - "">>""
    - ""\\\\345/\\\\345/""
    - inputPos: [0,0,0,0,0,1,1,1,1,1]
the test fails.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/timothytylee,7,https://github.com/liblouis/liblouis/pull/614#issuecomment-411934439,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.","May I suggest pre-filling the input positions and output positions with -1 in the test framework, so that bugs like this would be more apparent during tests?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/614#issuecomment-412022829,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.",OK.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/614#issuecomment-415596459,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.",Fixed by #624 (8bd6f95).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,614,2018-07-30T10:06:16Z,2018-08-24T07:56:43Z,2018-08-24T07:56:43Z,CLOSED,False,12,3,1,https://github.com/timothytylee,Fill input positions of undefined braille (fix bug #584),1,[],https://github.com/liblouis/liblouis/pull/614,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/614#issuecomment-415682912,"undefinedDots() now updates outputPositions and inputPositions.
I've run make check with the new test, and the number of test failures did not increase.",#624 which fixes this has been merged,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,616,2018-08-06T12:25:29Z,2018-08-24T07:55:14Z,2018-08-24T07:55:14Z,CLOSED,False,3,2,1,https://github.com/timothytylee,Report correct inlen after back translation (fixes bug #583),1,[],https://github.com/liblouis/liblouis/pull/616,https://github.com/timothytylee,1,https://github.com/liblouis/liblouis/pull/616,"This patch fixes #583 .
The incorrect inlen resulted from doPasses() re-using ""src"" during pass 0.","This patch fixes #583 .
The incorrect inlen resulted from doPasses() re-using ""src"" during pass 0.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,616,2018-08-06T12:25:29Z,2018-08-24T07:55:14Z,2018-08-24T07:55:14Z,CLOSED,False,3,2,1,https://github.com/timothytylee,Report correct inlen after back translation (fixes bug #583),1,[],https://github.com/liblouis/liblouis/pull/616,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/616#issuecomment-411502704,"This patch fixes #583 .
The incorrect inlen resulted from doPasses() re-using ""src"" during pass 0.",Thank you! I will include this change when I continue working on issue #483. It is planned to be done for the next release (3.7). Would it be possible to create a small YAML test that demonstrates the issue? It may be taken from the example in your bug report #583.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,616,2018-08-06T12:25:29Z,2018-08-24T07:55:14Z,2018-08-24T07:55:14Z,CLOSED,False,3,2,1,https://github.com/timothytylee,Report correct inlen after back translation (fixes bug #583),1,[],https://github.com/liblouis/liblouis/pull/616,https://github.com/timothytylee,3,https://github.com/liblouis/liblouis/pull/616#issuecomment-411739680,"This patch fixes #583 .
The incorrect inlen resulted from doPasses() re-using ""src"" during pass 0.",lou_checkyaml currently does not appear to support checking of inlen.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,616,2018-08-06T12:25:29Z,2018-08-24T07:55:14Z,2018-08-24T07:55:14Z,CLOSED,False,3,2,1,https://github.com/timothytylee,Report correct inlen after back translation (fixes bug #583),1,[],https://github.com/liblouis/liblouis/pull/616,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/616#issuecomment-411762577,"This patch fixes #583 .
The incorrect inlen resulted from doPasses() re-using ""src"" during pass 0.","Oh, right. I forgot. We recently made the test framework automatically check the returned inlen: #580. But this PR is not merged yet because it made some tests fail. It's probably related to your bug report.
Never mind the test then!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,616,2018-08-06T12:25:29Z,2018-08-24T07:55:14Z,2018-08-24T07:55:14Z,CLOSED,False,3,2,1,https://github.com/timothytylee,Report correct inlen after back translation (fixes bug #583),1,[],https://github.com/liblouis/liblouis/pull/616,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/616#issuecomment-415596723,"This patch fixes #583 .
The incorrect inlen resulted from doPasses() re-using ""src"" during pass 0.",This has been replaced by #624 (aac37bf).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,616,2018-08-06T12:25:29Z,2018-08-24T07:55:14Z,2018-08-24T07:55:14Z,CLOSED,False,3,2,1,https://github.com/timothytylee,Report correct inlen after back translation (fixes bug #583),1,[],https://github.com/liblouis/liblouis/pull/616,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/616#issuecomment-415682535,"This patch fixes #583 .
The incorrect inlen resulted from doPasses() re-using ""src"" during pass 0.",#624 which fixes this problem has been merged.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,618,2018-08-14T15:48:22Z,2018-08-23T13:38:40Z,2018-11-12T13:33:15Z,MERGED,True,67,20,2,https://github.com/egli,Updates to Urdu tables,1,['tables'],https://github.com/liblouis/liblouis/pull/618,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/618,"updated in the light of further proof reading by Urdu braille expert
Fixes #617","updated in the light of further proof reading by Urdu braille expert
Fixes #617",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,619,2018-08-17T17:03:57Z,2018-08-24T14:59:06Z,2018-08-24T14:59:50Z,MERGED,True,1,1,1,https://github.com/sthibaul,Enable automake to generate dependencies for libbrlcheck.la,1,['build system'],https://github.com/liblouis/liblouis/pull/619,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/619,This fixes build against automake 1.16.,This fixes build against automake 1.16.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,619,2018-08-17T17:03:57Z,2018-08-24T14:59:06Z,2018-08-24T14:59:50Z,MERGED,True,1,1,1,https://github.com/sthibaul,Enable automake to generate dependencies for libbrlcheck.la,1,['build system'],https://github.com/liblouis/liblouis/pull/619,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/619#issuecomment-414230009,This fixes build against automake 1.16.,Possibly related to #544,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,619,2018-08-17T17:03:57Z,2018-08-24T14:59:06Z,2018-08-24T14:59:50Z,MERGED,True,1,1,1,https://github.com/sthibaul,Enable automake to generate dependencies for libbrlcheck.la,1,['build system'],https://github.com/liblouis/liblouis/pull/619,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/619#issuecomment-415062827,This fixes build against automake 1.16.,"Hi @sthibaul
This seems to fail for me locally
-*- mode: compilation; default-directory: ""~/src/liblouis/"" -*-
Compilation started at Wed Aug 22 16:39:48

make check
Making check in gnulib
make[1]: Entering directory '/home/eglic/src/liblouis/gnulib'
rm -f alloca.h-t alloca.h && \
{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
  cat ./alloca.in.h; \
} > alloca.h-t && \
mv -f alloca.h-t alloca.h
rm -f dirent.h-t dirent.h && \
{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
  sed -e 's|@''GUARD_PREFIX''@|GL|g' \
      -e 's|@''HAVE_DIRENT_H''@|1|g' \
      -e 's|@''INCLUDE_NEXT''@|include_next|g' \
      -e 's|@''PRAGMA_SYSTEM_HEADER''@|#pragma GCC system_header|g' \
...
ar: `u' modifier ignored since `D' is the default (see `U')
libtool: link: ranlib .libs/libbrlcheck.a
libtool: link: rm -fr .libs/libbrlcheck.lax
libtool: link: ( cd "".libs"" && rm -f ""libbrlcheck.la"" && ln -s ""../libbrlcheck.la"" ""libbrlcheck.la"" )
gcc -DHAVE_CONFIG_H -I. -I../liblouis  -fno-common -W -Wabi -Waddress -Waggressive-loop-optimizations -Wall -Wattributes -Wbad-function-cast -Wbool-compare -Wbool-operation -Wbuiltin-declaration-mismatch -Wbuiltin-macro-redefined -Wcast-align -Wchar-subscripts -Wchkp -Wclobbered -Wcomment -Wcomments -Wcoverage-mismatch -Wcpp -Wdangling-else -Wdate-time -Wdeprecated -Wdeprecated-declarations -Wdesignated-init -Wdisabled-optimization -Wdiscarded-array-qualifiers -Wdiscarded-qualifiers -Wdiv-by-zero -Wdouble-promotion -Wduplicated-branches -Wduplicated-cond -Wduplicate-decl-specifier -Wempty-body -Wendif-labels -Wenum-compare -Wexpansion-to-defined -Wextra -Wformat-contains-nul -Wformat-extra-args -Wformat-nonliteral -Wformat-security -Wformat-signedness -Wformat-y2k -Wformat-zero-length -Wframe-address -Wfree-nonheap-object -Whsa -Wignored-attributes -Wignored-qualifiers -Wimplicit -Wimplicit-function-declaration -Wimplicit-int -Wincompatible-pointer-types -Winit-self -Winline -Wint-conversion -Wint-in-bool-context -Wint-to-pointer-cast -Winvalid-memory-model -Winvalid-pch -Wjump-misses-init -Wlogical-not-parentheses -Wlogical-op -Wmain -Wmaybe-uninitialized -Wmemset-elt-size -Wmemset-transposed-args -Wmisleading-indentation -Wmissing-braces -Wmissing-declarations -Wmissing-field-initializers -Wmissing-include-dirs -Wmissing-parameter-type -Wmissing-prototypes -Wmultichar -Wnarrowing -Wnested-externs -Wnonnull -Wnonnull-compare -Wnull-dereference -Wodr -Wold-style-declaration -Wold-style-definition -Wopenmp-simd -Woverflow -Woverlength-strings -Woverride-init -Wpacked -Wpacked-bitfield-compat -Wparentheses -Wpointer-arith -Wpointer-compare -Wpointer-sign -Wpointer-to-int-cast -Wpragmas -Wpsabi -Wrestrict -Wreturn-local-addr -Wreturn-type -Wscalar-storage-order -Wsequence-point -Wshadow -Wshift-count-negative -Wshift-count-overflow -Wshift-negative-value -Wsizeof-array-argument -Wsizeof-pointer-memaccess -Wstack-protector -Wstrict-aliasing -Wstrict-overflow -Wstrict-prototypes -Wsuggest-final-methods -Wsuggest-final-types -Wswitch -Wswitch-bool -Wswitch-default -Wswitch-unreachable -Wsync-nand -Wtautological-compare -Wtrampolines -Wtrigraphs -Wtype-limits -Wuninitialized -Wunknown-pragmas -Wunsafe-loop-optimizations -Wunused -Wunused-but-set-parameter -Wunused-but-set-variable -Wunused-function -Wunused-label -Wunused-local-typedefs -Wunused-macros -Wunused-parameter -Wunused-result -Wunused-value -Wunused-variable -Wvarargs -Wvariadic-macros -Wvector-operation-performance -Wvla -Wvolatile-register-var -Wwrite-strings -Walloc-size-larger-than=9223372036854775807 -Warray-bounds=2 -Wformat-overflow=2 -Wformat-truncation=2 -Wimplicit-fallthrough=5 -Wnormalized=nfc -Wshift-overflow=2 -Wstringop-overflow=2 -Wunused-const-variable=2 -Wvla-larger-than=4031 -I../liblouis -I../tools/gnulib -I../tools/gnulib   -g -O2 -MT lou_allround.o -MD -MP -MF .deps/lou_allround.Tpo -c -o lou_allround.o lou_allround.c
In file included from lou_allround.c:30:0:
../liblouis/internal.h:90:28: warning: ‘dotMapping’ defined but not used [-Wunused-const-variable=]
 static const intCharTupple dotMapping[] = {
                            ^~~~~~~~~~
mv -f .deps/lou_allround.Tpo .deps/lou_allround.Po
make[2]: *** No rule to make target 'tools/libbrlcheck.la', needed by 'lou_allround'.  Stop.
make[2]: Leaving directory '/home/eglic/src/liblouis/tools'
Makefile:1378: recipe for target 'check-recursive' failed
make[1]: *** [check-recursive] Error 1
make[1]: Leaving directory '/home/eglic/src/liblouis/tools'
Makefile:1013: recipe for target 'check-recursive' failed
make: *** [check-recursive] Error 1

Compilation exited abnormally with code 2 at Wed Aug 22 16:40:10

I have automake 1.15.1
$ automake --version
automake (GNU automake) 1.15.1
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv2+: GNU GPL version 2 or later <http://gnu.org/licenses/gpl-2.0.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

What I do not understand is why it builds on travis which also seems to have automake 1.15.1",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,619,2018-08-17T17:03:57Z,2018-08-24T14:59:06Z,2018-08-24T14:59:50Z,MERGED,True,1,1,1,https://github.com/sthibaul,Enable automake to generate dependencies for libbrlcheck.la,1,['build system'],https://github.com/liblouis/liblouis/pull/619,https://github.com/sthibaul,4,https://github.com/liblouis/liblouis/pull/619#issuecomment-415664308,This fixes build against automake 1.16.,"Hello,
By ""this"", you mean with my patch?
The kind of error you are getting is exactly what my patch fixes... Did Makefile.in get regenerated?
Concerning your system vs travis, perhaps your distribution has backported to your automake a change from automake 1.16?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,619,2018-08-17T17:03:57Z,2018-08-24T14:59:06Z,2018-08-24T14:59:50Z,MERGED,True,1,1,1,https://github.com/sthibaul,Enable automake to generate dependencies for libbrlcheck.la,1,['build system'],https://github.com/liblouis/liblouis/pull/619,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/619#issuecomment-415785428,This fixes build against automake 1.16.,"Ah I must have made a mistake, now both make check and make distcheck (which I initially expected to be a problem) work.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,620,2018-08-20T14:34:51Z,2018-08-23T13:42:49Z,2018-11-12T13:32:54Z,CLOSED,False,287,149,3,https://github.com/JakeKyle,Tables/urdu,8,['tables'],https://github.com/liblouis/liblouis/pull/620,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/620,@egli I hope this is how you like pull requests to be done but let me know if not. I'm working on improving back-translation of urdu tables with the help of added YAML test. I will keep working on it but feel free to merge when you need to as forward-translation is better than the current version on repo.,@egli I hope this is how you like pull requests to be done but let me know if not. I'm working on improving back-translation of urdu tables with the help of added YAML test. I will keep working on it but feel free to merge when you need to as forward-translation is better than the current version on repo.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,620,2018-08-20T14:34:51Z,2018-08-23T13:42:49Z,2018-11-12T13:32:54Z,CLOSED,False,287,149,3,https://github.com/JakeKyle,Tables/urdu,8,['tables'],https://github.com/liblouis/liblouis/pull/620,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/620#issuecomment-415418445,@egli I hope this is how you like pull requests to be done but let me know if not. I'm working on improving back-translation of urdu tables with the help of added YAML test. I will keep working on it but feel free to merge when you need to as forward-translation is better than the current version on repo.,Merged in a257107,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,620,2018-08-20T14:34:51Z,2018-08-23T13:42:49Z,2018-11-12T13:32:54Z,CLOSED,False,287,149,3,https://github.com/JakeKyle,Tables/urdu,8,['tables'],https://github.com/liblouis/liblouis/pull/620,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/620#issuecomment-415418574,@egli I hope this is how you like pull requests to be done but let me know if not. I'm working on improving back-translation of urdu tables with the help of added YAML test. I will keep working on it but feel free to merge when you need to as forward-translation is better than the current version on repo.,Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,623,2018-08-23T11:20:34Z,2018-08-24T07:24:46Z,2018-08-24T07:24:52Z,MERGED,True,21,5,2,https://github.com/bertfrees,Fix computation of string lengths in lou_checkyaml,1,['bug'],https://github.com/liblouis/liblouis/pull/623,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/623,Bug was discovered here: #614 (comment),Bug was discovered here: #614 (comment),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,623,2018-08-23T11:20:34Z,2018-08-24T07:24:46Z,2018-08-24T07:24:52Z,MERGED,True,21,5,2,https://github.com/bertfrees,Fix computation of string lengths in lou_checkyaml,1,['bug'],https://github.com/liblouis/liblouis/pull/623,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/623#issuecomment-415597222,Bug was discovered here: #614 (comment),Also included in #624.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,624,2018-08-23T22:32:59Z,2018-08-24T07:42:16Z,2018-08-24T11:49:31Z,MERGED,True,756,666,10,https://github.com/bertfrees,Fix input/output positions for back-translation ,10,['back-translation'],https://github.com/liblouis/liblouis/pull/624,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/624,"Fixes issues

#483
#583
#584","Fixes issues

#483
#583
#584",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,625,2018-08-24T12:27:58Z,2018-08-24T15:45:30Z,2018-08-24T15:47:40Z,MERGED,True,258,950,2,https://github.com/egli,Remove scripting language pass compiler,3,['refactoring'],https://github.com/liblouis/liblouis/pull/625,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/625,Replaces #586,Replaces #586,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,625,2018-08-24T12:27:58Z,2018-08-24T15:45:30Z,2018-08-24T15:47:40Z,MERGED,True,258,950,2,https://github.com/egli,Remove scripting language pass compiler,3,['refactoring'],https://github.com/liblouis/liblouis/pull/625,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/625#issuecomment-415755389,Replaces #586,What has changed?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,625,2018-08-24T12:27:58Z,2018-08-24T15:45:30Z,2018-08-24T15:47:40Z,MERGED,True,258,950,2,https://github.com/egli,Remove scripting language pass compiler,3,['refactoring'],https://github.com/liblouis/liblouis/pull/625,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/625#issuecomment-415760036,Replaces #586,"Nothing as far as I can tell. #586 had a merge conflict that I couldn't handle, so I just removed the code again from master :-/",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,625,2018-08-24T12:27:58Z,2018-08-24T15:45:30Z,2018-08-24T15:47:40Z,MERGED,True,258,950,2,https://github.com/egli,Remove scripting language pass compiler,3,['refactoring'],https://github.com/liblouis/liblouis/pull/625,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/625#issuecomment-415761163,Replaces #586,"Hm not sure I understand. But anyway, why did you want my review?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,625,2018-08-24T12:27:58Z,2018-08-24T15:45:30Z,2018-08-24T15:47:40Z,MERGED,True,258,950,2,https://github.com/egli,Remove scripting language pass compiler,3,['refactoring'],https://github.com/liblouis/liblouis/pull/625,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/625#issuecomment-415764891,Replaces #586,"Well, the old PR had a merge conflict which I thought was really hard to resolve. So I thought it would be easier to just redo the patch based on master
I thought a quick review wouldn't hurt.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,625,2018-08-24T12:27:58Z,2018-08-24T15:45:30Z,2018-08-24T15:47:40Z,MERGED,True,258,950,2,https://github.com/egli,Remove scripting language pass compiler,3,['refactoring'],https://github.com/liblouis/liblouis/pull/625,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/625#issuecomment-415769597,Replaces #586,Only what I said in #586 (comment). Would be nice if that additional info I looked up would end up in the commit message. I like it when a commit has some references that make it easier to browse the history.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,625,2018-08-24T12:27:58Z,2018-08-24T15:45:30Z,2018-08-24T15:47:40Z,MERGED,True,258,950,2,https://github.com/egli,Remove scripting language pass compiler,3,['refactoring'],https://github.com/liblouis/liblouis/pull/625,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/625#issuecomment-415799638,Replaces #586,I incorporated your comments in the commit message. Hope you're ok with it now,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,625,2018-08-24T12:27:58Z,2018-08-24T15:45:30Z,2018-08-24T15:47:40Z,MERGED,True,258,950,2,https://github.com/egli,Remove scripting language pass compiler,3,['refactoring'],https://github.com/liblouis/liblouis/pull/625,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/625#issuecomment-415800086,Replaces #586,👍,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/630,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/630#issuecomment-416897948,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","@loomee can you translate this for me, or at least summarize? Are you approving this change?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/loomee,3,https://github.com/liblouis/liblouis/pull/630#issuecomment-416919119,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Sorry @egli and @school510587
I just comment on the branch of @surfer0627 /liblouis:PR0828.
I don't know why I got the #630.
For egli's question, I have no suggestions.
Because I don't understand about the Taiwan Braille.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/school510587,4,https://github.com/liblouis/liblouis/pull/630#issuecomment-416921366,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Hi @loomee and @egli,

@loomee simply has some questions about ""noback context"" commands, but our works are independent.
That is, he does not write down any opinion about approval of this PR.
I will state his questions in English, and present the answers in Chinese below.

Q: What is the purpose of _1 in the ""noback context"" commands?
A:
_1 的作用是，將盲文轉譯的游標往前一個字元看。
考慮這個詞語「音樂」，我使用這條敘述：
noback context _1""\x97F3""[""\x6A02""] @236-5
當盲文轉譯進行中，看到「樂」才會往前看是否有「音」，有的話才將「樂」轉譯為 236-5 點。
如果沒有使用 _1 它會在遇到「音」時就檢查這條規則。
這個例子來看其實效果沒有差異，請見一個兩字都變音的例子「龜茲」，發音 qiū cí.
如果說都不用 _1 將寫出以下二個敘述：
noback context [""\x9F9C""]""\x8332"" @245-234-3
noback context ""\x9F9C""[""\x8332""] @245-156-2
則，轉譯到「龜」時，第一條敘述會匹配，把「龜」轉成 245-234-3.
可是，接著轉譯的游標落在「茲」，就無法抓到第二條規則，因此我們加上 _1 要求將游標先往前再進行檢查：
noback context _1""\x9F9C""[""\x8332""] @245-156-2
當然，您可能會有疑問，為何不乾脆一次改變兩個字，如下：
noback context [""\x9F9C\x8332""] @245-234-3-245-156-2
如果這樣做，實際用 NVDA 操作時，點字顯示器的游標會與螢幕上的游標不同步。
這個敘述會讓 liblouis 轉譯時，把「龜茲」兩字看成一體，它不知道原來 245-234-3 是「龜」 245-156-2 是「茲」。
而我當初使用 ""noback context"" 的初衷，就是讓它徹底理解，哪些點字方對應到哪個文字。

Q: Any difference of (CPU) performance between ""noback context"" and ""always"" statements?
A:
有的，據 @bertfrees 表示，前者比較佔用運算資源，然而他也將在未來研究如何改善這個問題。
不過，說歸說，目前 zh-tw.ctb 運行起來效能不會差到有感覺的程度。
用我這架老舊的 32 位 XP, 我放上來的測資 4948 筆，全部跑完只要約 0.75 秒。

希望這樣的回答對您有幫助理解，還有問題可以私信我 <school510587@yahoo.com.tw>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/loomee,5,https://github.com/liblouis/liblouis/pull/630#issuecomment-416942687,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","@school510587
謝謝您的解答。
我看到您的‘noback context命令’中除了‘_1’還有‘_2、3、4’，
是不是表示以‘[]’為起點，向左檢查？數字表示‘[]’的左邊第X個字？

另外我看到了這樣的代碼：
# 下面這兩句好像是表示用右邊的字替換左邊的字。
# 然而在前面設定單個漢字的時候，為何不是直接將左邊字的盲文點字設定成和右邊字一樣呢？
noback correct ""\x51C9"" ""\x6DBC""
noback correct ""\x51CF"" ""\x6E1B""

# 下面這三句好像是表示用最右邊的字替換括弧裡的字。
# 然而最右邊的字與括弧裡的字是一樣的。
noback correct _1""\x8336""[""\x51E0""] ""\x51E0""
noback correct _3""\x660E\x7A97\x6DE8""[""\x51E0""] ""\x51E0""
noback correct _2""\x7A97\x660E""[""\x51E0""]""\x6DE8"" ""\x51E0""

不知這樣編寫有何用意？
Forgive me for not being smart. I don't know if it is redundant.
此致",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/school510587,6,https://github.com/liblouis/liblouis/pull/630#issuecomment-417177968,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Hi @loomee,

These commands are not redundant. Let me show the reason in Chinese below.
Here is a quick conclusion in English.
We use ""noback correct"" commands to avoid enumeration of phrases for different Chinese characters having the same meaning.
However, some characters, e.g. 几, are equivalent to other characters in most cases, but they also have their own special meaning in some rare cases.
We replace 几 with 幾 by default, but reserve 几 in these rare cases.
the 3 commands listed above mean that we reserve 几 in these context.

您對 _2, _3, _4 的猜測無誤，將 _1 的概念擴展即是。
您描述 ""noback correct"" 的用途也正確。
不過，將字替換為自己本身，是刻意的，並非冗餘。
這裡要解決的是，某些狀況下字的讀音會變，所以用 ""noback context"" 命令來處理。
然而，中文有許多全同字，如對應的繁體、簡體字，或者俗字、古字等。
您所貼的例子為「几」，它同時是「幾」的簡體字。
在我們用繁體字寫下特殊詞語的變音規則時，我們的用戶也希望這張表能盡量使簡體字文件閱讀通順。
如「幾乎」中的「幾」為陰平，並非上聲，所以 zh-tw.ctb 列了這個特例。
然而，考慮到簡體字的相容性，理論上必須也列「几乎」。
若所有詞語都這樣列舉，資料將會非常旁大不易管理，而且更麻煩的是，有些字是兩岸書寫方式不同而非對立的繁體簡體，當遇到文件中同時含有兩種寫法的字，想要涵蓋所有可能性就不像「繁體簡體各列一遍」這般容易了！
因此 ""noback correct"" 真正的意義為，把通同字的狀況，替換為某些規範的正字，就可以讓特例的詞彙只要使用正字列舉，即涵蓋所有可能性。
可是，這做法引起另一個問題，以剛才的「几」來說，它並非全同「幾」，也有自己的意義，雖然絕大多數狀況同「幾」，卻有少數狀況如「窗明几淨」，是它特有的使用時機。
當然，把「窗明幾淨」也列為特例，讓「幾」的盲文顯示聲調為陰平即解決問題，可是我們不能要求未來的維護者接受「窗明幾淨」這樣的寫法，畢竟這不是字典上規範的正確寫法。
我們採取的方法，就是某些特殊情況下，要求保留「几」的原字，關於「几」共有下列幾條命令：
noback correct _1""\x8336""[""\x51E0""] ""\x51E0""
noback correct _3""\x660E\x7A97\x6DE8""[""\x51E0""] ""\x51E0""
noback correct _2""\x7A97\x660E""[""\x51E0""]""\x6DE8"" ""\x51E0""
noback correct ""\x51E0"" ""\x5E7E""
前面三條是剛才所說的「特殊狀況」，最後一條是「預設狀況」，也就是說，盲文轉譯時會把文件優先比對前三者，若匹配則保留原字，否則將「几」替代為「幾」。
如此，資料的數量可以限制在一個範圍內，不會隨通同字的數量呈現指數級的增長。
如上，希望這樣的解釋有回答您的疑惑！",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/loomee,7,https://github.com/liblouis/liblouis/pull/630#issuecomment-417296642,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","@school510587
Thank you for answering my questions patiently.
I got it now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/school510587,8,https://github.com/liblouis/liblouis/pull/630#issuecomment-417730309,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Hi @egli and @bertfrees,

Sorry, I found that the tag v3.7.0 had been set, but this update of zh-tw.ctb is not in NEWS so far.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/630#issuecomment-418025198,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com",Hi @school510587 I added something in 0933cca. Is that not correct?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/school510587,10,https://github.com/liblouis/liblouis/pull/630#issuecomment-418133072,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Hi @egli,

Sorry, I just again check 0933c, and it is OK.
Perhaps some mistake was made when I read NEWS before comment.
I find that your style of NEWS changed largely, and I failed to locate this entry by searching for ""zh-tw"" or related strings.
However, there is a typo ""A/"" in the entry. I think it must be ""A,"".
Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/630#issuecomment-418135114,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Hi @school510587

I find that your style of NEWS changed largely

I think I always try to make the NEWS entries ""end-user friendly"", so I do not mention any file names. Maybe this isn't what users want, don't know. I thought people are not that interested in the names, more so in the language that is implemented by a new table.

However, there is a typo ""A/"" in the entry. I think it must be ""A,"".

I think you must be reading the NEWS file in the repository (or in the tarball). It is in org-mode format, a text format kind of like markdown, which I convert to markdown for the website and to plain text for the email announcement. In that markup format /foo/ indicates italics.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/school510587,12,https://github.com/liblouis/liblouis/pull/630#issuecomment-418138006,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Hi @egli,

Uh, OK. /CJK Unified Ideographs Extension A/ is an italic string.
The beginning slash is in the different line, so I misunderstood it.
Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/school510587,13,https://github.com/liblouis/liblouis/pull/630#issuecomment-419095352,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Hi @egli and @bertfrees,

I further read NEWS again, and I think one important change is not covered there.
""Improvement of cursor-moving granularity (#537)""
This is the change nearest to all users. Could you help to modify the entry about bopomofo braille in NEWS? For example:
- Significant changes to Bopomofo-based Chinese Braille. The granularity
  of cursor moving can now reflect positions of all Chinese characters.
  Among other things there is now complete the support of /CJK Unified
  Ideographs Extension A/ and some symbols were added for Nemeth.
  Thanks to Sponge Jhan and 黃偉豪.

Also, I'll adjust my PR comment style to avoid similar problems.
Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/630#issuecomment-419452362,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com",Hi @school510587 I changed the NEWS entry. Hope it's ok with you.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,630,2018-08-28T14:42:12Z,2018-08-30T10:06:25Z,2018-11-22T18:00:13Z,MERGED,True,25852,2422,2,https://github.com/school510587,Update zh-tw.ctb to (multipass) version 2018-09,1,['tables'],https://github.com/liblouis/liblouis/pull/630,https://github.com/school510587,15,https://github.com/liblouis/liblouis/pull/630#issuecomment-419499707,"This is a SIGNIFICANT change of zh-tw.ctb.
[!] liblouis 3.6.0 is the minimum version that accepts this table.
Summary of changes:

Replace ""always"" statements by multipass rules
Complete the support of CJK Unified Ideographs Extension A
Redefine some Chinese words and phrases
Add some symbols written in Nemeth syntax
If necessary, any significant change of the layout of both files, zh-tw.ctb and zh-tw.yaml, may be done in later versions.

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 hurt.nzsmr@gmail.com.
The YAML test can be treated as an abstract of all multipass rules.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com","Hi @egli, OK thanks. I think it becomes much better now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,633,2018-08-31T14:18:32Z,2018-11-20T15:17:44Z,2018-11-20T15:17:44Z,MERGED,True,148,47,3,https://github.com/leonardder,"Patch Python bindings to support both 16 and 32 bit widechars, add more functions from the liblouis api",6,[],https://github.com/liblouis/liblouis/pull/633,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/633,"Fixes #187
Fixes #55
Related to nvaccess/nvda#6695
The Python bindings do not yet support wide characters. This pr fixes this, while also removing the exception raising in case python and liblouis char sizes differ.
Implementation strategy based on ideas proposed by @jcsteh in nvaccess/nvda#6695 (comment)

The Python bindings need to know the number of bits used for widechar (16 or 32) by the compiled liblouis. This is accomplished by once calling lou_charSize when initializing the module, saving the value to wideCharBytes
Use utf_32_le for 32 bit widechars, and utf_16_le for 16 bit widechars.
Tell ctypes to use c_char_p instead of c_wchar_p so that we get raw bytes. use POINTER(c_char) instead of c_char_p. c_char_p is meant for null terminated strings, and we really don't want these strings to be single null terminated strings 😊
When passing unicode strings to liblouis, first encode them using the encoding from 2.
After obtaining unicode strings from liblouis, decode them.

Added functions
Additionally the following functions have been added to the wrapper

dotsToChar
charToDots
setLogLevel
registerLogCallback

Testing performed
Created an NVDA build from source using this code based on liblouis 3.6, since current master fails with NVDA's build system, both with 2 and 4 bit widechars. Both worked as expected in the end, i.e. with emoji's, NVDA printed \y followed by the expected hex identifier.
To be done
We really need to make sure this doesn't break on linux and doesn't cause failure with surrogate pairs. However, I'm not sure what's the best way to test this. Anyhow, I propose not to include this in liblouis 3.7 for now.
cc @dkager @jcsteh @mwhapples @Andre9642","Fixes #187
Fixes #55
Related to nvaccess/nvda#6695
The Python bindings do not yet support wide characters. This pr fixes this, while also removing the exception raising in case python and liblouis char sizes differ.
Implementation strategy based on ideas proposed by @jcsteh in nvaccess/nvda#6695 (comment)

The Python bindings need to know the number of bits used for widechar (16 or 32) by the compiled liblouis. This is accomplished by once calling lou_charSize when initializing the module, saving the value to wideCharBytes
Use utf_32_le for 32 bit widechars, and utf_16_le for 16 bit widechars.
Tell ctypes to use c_char_p instead of c_wchar_p so that we get raw bytes. use POINTER(c_char) instead of c_char_p. c_char_p is meant for null terminated strings, and we really don't want these strings to be single null terminated strings 😊
When passing unicode strings to liblouis, first encode them using the encoding from 2.
After obtaining unicode strings from liblouis, decode them.

Added functions
Additionally the following functions have been added to the wrapper

dotsToChar
charToDots
setLogLevel
registerLogCallback

Testing performed
Created an NVDA build from source using this code based on liblouis 3.6, since current master fails with NVDA's build system, both with 2 and 4 bit widechars. Both worked as expected in the end, i.e. with emoji's, NVDA printed \y followed by the expected hex identifier.
To be done
We really need to make sure this doesn't break on linux and doesn't cause failure with surrogate pairs. However, I'm not sure what's the best way to test this. Anyhow, I propose not to include this in liblouis 3.7 for now.
cc @dkager @jcsteh @mwhapples @Andre9642",True,{'THUMBS_UP': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,633,2018-08-31T14:18:32Z,2018-11-20T15:17:44Z,2018-11-20T15:17:44Z,MERGED,True,148,47,3,https://github.com/leonardder,"Patch Python bindings to support both 16 and 32 bit widechars, add more functions from the liblouis api",6,[],https://github.com/liblouis/liblouis/pull/633,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/633#issuecomment-417680562,"Fixes #187
Fixes #55
Related to nvaccess/nvda#6695
The Python bindings do not yet support wide characters. This pr fixes this, while also removing the exception raising in case python and liblouis char sizes differ.
Implementation strategy based on ideas proposed by @jcsteh in nvaccess/nvda#6695 (comment)

The Python bindings need to know the number of bits used for widechar (16 or 32) by the compiled liblouis. This is accomplished by once calling lou_charSize when initializing the module, saving the value to wideCharBytes
Use utf_32_le for 32 bit widechars, and utf_16_le for 16 bit widechars.
Tell ctypes to use c_char_p instead of c_wchar_p so that we get raw bytes. use POINTER(c_char) instead of c_char_p. c_char_p is meant for null terminated strings, and we really don't want these strings to be single null terminated strings 😊
When passing unicode strings to liblouis, first encode them using the encoding from 2.
After obtaining unicode strings from liblouis, decode them.

Added functions
Additionally the following functions have been added to the wrapper

dotsToChar
charToDots
setLogLevel
registerLogCallback

Testing performed
Created an NVDA build from source using this code based on liblouis 3.6, since current master fails with NVDA's build system, both with 2 and 4 bit widechars. Both worked as expected in the end, i.e. with emoji's, NVDA printed \y followed by the expected hex identifier.
To be done
We really need to make sure this doesn't break on linux and doesn't cause failure with surrogate pairs. However, I'm not sure what's the best way to test this. Anyhow, I propose not to include this in liblouis 3.7 for now.
cc @dkager @jcsteh @mwhapples @Andre9642",Very detailed and well formulated PR! Thanks @leonardder . Indeed sounds like this needs some more testing.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,633,2018-08-31T14:18:32Z,2018-11-20T15:17:44Z,2018-11-20T15:17:44Z,MERGED,True,148,47,3,https://github.com/leonardder,"Patch Python bindings to support both 16 and 32 bit widechars, add more functions from the liblouis api",6,[],https://github.com/liblouis/liblouis/pull/633,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/633#issuecomment-421039261,"Fixes #187
Fixes #55
Related to nvaccess/nvda#6695
The Python bindings do not yet support wide characters. This pr fixes this, while also removing the exception raising in case python and liblouis char sizes differ.
Implementation strategy based on ideas proposed by @jcsteh in nvaccess/nvda#6695 (comment)

The Python bindings need to know the number of bits used for widechar (16 or 32) by the compiled liblouis. This is accomplished by once calling lou_charSize when initializing the module, saving the value to wideCharBytes
Use utf_32_le for 32 bit widechars, and utf_16_le for 16 bit widechars.
Tell ctypes to use c_char_p instead of c_wchar_p so that we get raw bytes. use POINTER(c_char) instead of c_char_p. c_char_p is meant for null terminated strings, and we really don't want these strings to be single null terminated strings 😊
When passing unicode strings to liblouis, first encode them using the encoding from 2.
After obtaining unicode strings from liblouis, decode them.

Added functions
Additionally the following functions have been added to the wrapper

dotsToChar
charToDots
setLogLevel
registerLogCallback

Testing performed
Created an NVDA build from source using this code based on liblouis 3.6, since current master fails with NVDA's build system, both with 2 and 4 bit widechars. Both worked as expected in the end, i.e. with emoji's, NVDA printed \y followed by the expected hex identifier.
To be done
We really need to make sure this doesn't break on linux and doesn't cause failure with surrogate pairs. However, I'm not sure what's the best way to test this. Anyhow, I propose not to include this in liblouis 3.7 for now.
cc @dkager @jcsteh @mwhapples @Andre9642","I believe this pr is pretty much ready now.
@dkager could you have another look? Also a watch from @mwhapples would be greatly appreciated.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,636,2018-09-03T07:43:15Z,2019-03-04T09:00:41Z,2019-03-04T09:00:41Z,MERGED,True,708,724,203,https://github.com/aaclause,de-de-comp8.ctb and fr-bfu-comp8.utb: fix for no-break spaces,17,['tables'],https://github.com/liblouis/liblouis/pull/636,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/636,Related to nvaccess/nvda#1717,Related to nvaccess/nvda#1717,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,636,2018-09-03T07:43:15Z,2019-03-04T09:00:41Z,2019-03-04T09:00:41Z,MERGED,True,708,724,203,https://github.com/aaclause,de-de-comp8.ctb and fr-bfu-comp8.utb: fix for no-break spaces,17,['tables'],https://github.com/liblouis/liblouis/pull/636,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/636#issuecomment-418145733,Related to nvaccess/nvda#1717,Probably related to #585.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,636,2018-09-03T07:43:15Z,2019-03-04T09:00:41Z,2019-03-04T09:00:41Z,MERGED,True,708,724,203,https://github.com/aaclause,de-de-comp8.ctb and fr-bfu-comp8.utb: fix for no-break spaces,17,['tables'],https://github.com/liblouis/liblouis/pull/636,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/636#issuecomment-418492074,Related to nvaccess/nvda#1717,@Andre9642 Do you really want to map a space to dot 7?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,636,2018-09-03T07:43:15Z,2019-03-04T09:00:41Z,2019-03-04T09:00:41Z,MERGED,True,708,724,203,https://github.com/aaclause,de-de-comp8.ctb and fr-bfu-comp8.utb: fix for no-break spaces,17,['tables'],https://github.com/liblouis/liblouis/pull/636,https://github.com/aaclause,4,https://github.com/liblouis/liblouis/pull/636#issuecomment-418633658,Related to nvaccess/nvda#1717,"Do you really want to map a space to dot 7?

Yes. It is compliant to French and German(?) computer braille code standards. Non-breaking Spaces are important in these languages.
@DrSooom: could you confirm for German please?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,636,2018-09-03T07:43:15Z,2019-03-04T09:00:41Z,2019-03-04T09:00:41Z,MERGED,True,708,724,203,https://github.com/aaclause,de-de-comp8.ctb and fr-bfu-comp8.utb: fix for no-break spaces,17,['tables'],https://github.com/liblouis/liblouis/pull/636,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/636#issuecomment-418646919,Related to nvaccess/nvda#1717,"OK.
Christian is right, this is related to #585. I would wait for that issue to be fixed, so that the always \x00a0 7 rule can be dropped.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,636,2018-09-03T07:43:15Z,2019-03-04T09:00:41Z,2019-03-04T09:00:41Z,MERGED,True,708,724,203,https://github.com/aaclause,de-de-comp8.ctb and fr-bfu-comp8.utb: fix for no-break spaces,17,['tables'],https://github.com/liblouis/liblouis/pull/636,https://github.com/DrSooom,6,https://github.com/liblouis/liblouis/pull/636#issuecomment-418713936,Related to nvaccess/nvda#1717,"Dot 7 is shown on iOS (7.0.4 to 10.3.3) German Table for no-break spaces all the time. Therefore it should be the same behaviour in ""de-de-comp8.ctb"" as well.
The goal here is just to make a no-break space visible on the braille display without have to move the cursor in front of it, which is uncomfortable – especially if you don't know where them exactly are located in the text. Checking the correct used and position of no-break spaces isn't possible in a suitable way at the moment in NVDA (2013.2 to 2018.3). Please see my comment in NVDA issue #1717 for more details.
Just two example where no-break spaces should/have to be used: 1,8 m and 100 %. A line break between the digit and its value isn't correct in German. Therefore it should appear all the time like on iOS.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,636,2018-09-03T07:43:15Z,2019-03-04T09:00:41Z,2019-03-04T09:00:41Z,MERGED,True,708,724,203,https://github.com/aaclause,de-de-comp8.ctb and fr-bfu-comp8.utb: fix for no-break spaces,17,['tables'],https://github.com/liblouis/liblouis/pull/636,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/636#issuecomment-469057304,Related to nvaccess/nvda#1717,@egli This is also ready. Note that I rebased it onto issues/561.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,638,2018-09-04T14:29:00Z,2018-10-23T11:56:04Z,2018-10-23T11:56:12Z,MERGED,True,1,1,1,https://github.com/leonardder,Fix build error when UNICODE is defined,1,[],https://github.com/liblouis/liblouis/pull/638,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/638,"When UNICODE is defined as preprocessor macro, Liblouis refuses to build as part of NVDA because WIN32_FIND_DATA translates to WIN32_FIND_DATAW. This pr explicitly uses the WIN32_FIND_DATAA type.
Having said that, I'm not sure whether liblouis should keep on using the ANSI version of FindFirstFile. But, it looks like Liblouis' API is quite char (not w_char_t) oriented.","When UNICODE is defined as preprocessor macro, Liblouis refuses to build as part of NVDA because WIN32_FIND_DATA translates to WIN32_FIND_DATAW. This pr explicitly uses the WIN32_FIND_DATAA type.
Having said that, I'm not sure whether liblouis should keep on using the ANSI version of FindFirstFile. But, it looks like Liblouis' API is quite char (not w_char_t) oriented.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,638,2018-09-04T14:29:00Z,2018-10-23T11:56:04Z,2018-10-23T11:56:12Z,MERGED,True,1,1,1,https://github.com/leonardder,Fix build error when UNICODE is defined,1,[],https://github.com/liblouis/liblouis/pull/638,https://github.com/leonardder,2,https://github.com/liblouis/liblouis/pull/638#issuecomment-421040050,"When UNICODE is defined as preprocessor macro, Liblouis refuses to build as part of NVDA because WIN32_FIND_DATA translates to WIN32_FIND_DATAW. This pr explicitly uses the WIN32_FIND_DATAA type.
Having said that, I'm not sure whether liblouis should keep on using the ANSI version of FindFirstFile. But, it looks like Liblouis' API is quite char (not w_char_t) oriented.","@bertfrees, Looks like this is your code, could you have a say about @egli's #638 (review)?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,638,2018-09-04T14:29:00Z,2018-10-23T11:56:04Z,2018-10-23T11:56:12Z,MERGED,True,1,1,1,https://github.com/leonardder,Fix build error when UNICODE is defined,1,[],https://github.com/liblouis/liblouis/pull/638,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/638#issuecomment-421047243,"When UNICODE is defined as preprocessor macro, Liblouis refuses to build as part of NVDA because WIN32_FIND_DATA translates to WIN32_FIND_DATAW. This pr explicitly uses the WIN32_FIND_DATAA type.
Having said that, I'm not sure whether liblouis should keep on using the ANSI version of FindFirstFile. But, it looks like Liblouis' API is quite char (not w_char_t) oriented.",It's Davy's code.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/639,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,2,https://github.com/liblouis/liblouis/pull/639#issuecomment-418479179,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","Ok, it looks like Travis hates me because what I've done. I will set up a linux dev environment later this week.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/639#issuecomment-418655766,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.",Why did you close this? I liked the changes. At least the ones that didn't break the test suite :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,4,https://github.com/liblouis/liblouis/pull/639#issuecomment-418656972,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","Wow, that was actually an accident. I've been trying to filter out the commit that made the tests fail, but no luck so far. Since I had no proper build environment, I had to trigger travis builds every time, however I've now been able to setup a proper environment. I will open as soon as I have resolved the issues,",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/639#issuecomment-418659778,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","Ah, OK, cool",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,6,https://github.com/liblouis/liblouis/pull/639#issuecomment-418683303,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","All right, only check-format fails now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,7,https://github.com/liblouis/liblouis/pull/639#issuecomment-418685021,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","That this, the check-format build. I really have no clue of what's going wrong here. @egli, would you be able to help me out with this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/639#issuecomment-418685663,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.",We take care of that when we merge. No need to worry about it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,9,https://github.com/liblouis/liblouis/pull/639#issuecomment-418700583,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","AH, in that case I'll leave the thing alone for now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/639#issuecomment-418704184,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.",I just fixed the formatting problems. We run into this practically on every contribution. The check for proper formatting is very useful but OTOH if all the PRs fail I wonder if that isn't going to discourage contributors,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,11,https://github.com/liblouis/liblouis/pull/639#issuecomment-418706939,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","@egli commented on 5 sep. 2018 13:58 CEST:

I just fixed the formatting problems. We run into this practically on every contribution. The check for proper formatting is very useful but OTOH if all the PRs fail I wonder if that isn't going to discourage contributors

I must admit that the ""all cheques have failed"" message is somewhat misleading here.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/639#issuecomment-418708427,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","Most contributions are table changes. So we don't run into this on every contribution. I don't see how it can discourage contributors because either they have made the PR and we explained why the check fails, or they haven't made the PR yet.
To avoid the ""all checks have failed"" when only a part of the Travis runs have failed we would have to create separate status checks for every item in the Travis matrix, but I don't know if that's possible.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,13,https://github.com/liblouis/liblouis/pull/639#issuecomment-419472887,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","@egli: Hmm, looks like I have to look at that again.
Furthermore, i also have to address missmatches in lou_backTranslateString.c that I have in the x64 native command prompt for vs2017 and not in the x86 one. Appveyor would really be helpful to track these issues down.
Update: The latter is now resolved.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,14,https://github.com/liblouis/liblouis/pull/639#issuecomment-419511346,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","I pushed another commit that will change pattern.c to use type casting to unsigned int if necessary. The initial reason why I was using widechar is that expr_max was used in comparisons against *expr_data, which is of type widechar as well. I honestly have no idea about the expr_max, but doing anything about that might be out of scope for this pr.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/dkager,15,https://github.com/liblouis/liblouis/pull/639#issuecomment-431428749,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.",@leonardder What is the status of this PR?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/639#issuecomment-443697610,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.",I do not have time to look at this now. Moved to next release,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,17,https://github.com/liblouis/liblouis/pull/639#issuecomment-462438830,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","I will look into this again. I was pretty sure this did not cause any missmatch warnings when I last looked at it, and yet it does at least on one of my systems. There is something capricious about this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,18,https://github.com/liblouis/liblouis/pull/639#issuecomment-462689402,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","This is now causing missmatch warnings for cases I'm sure were fixed before.
I think it would be best to abandon this until we have proper testing possibilities (i.e. with an automated appveyor build facility).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/egli,19,https://github.com/liblouis/liblouis/pull/639#issuecomment-462753469,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.",So you're saying we should close this until we have #304?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,639,2018-09-04T18:44:43Z,,2022-03-28T17:08:04Z,OPEN,False,130,121,7,https://github.com/leonardder,Fixed signed/unsigned missmatch warnings when building with ucs 4,11,['on hold'],https://github.com/liblouis/liblouis/pull/639,https://github.com/leonardder,20,https://github.com/liblouis/liblouis/pull/639#issuecomment-462755263,"Fixes #637.
I made sure that both ucs=2 and ucs=4 build with Nmake. I currently do not have a linux build environment available to test though.
I also reintroduced the /WX compile flag for windows, as we are now completely warning free, and I think it should be kept that way whenever possible.","Not necessarily close it, but I think it can be removed from the 3.9
milestone for now.

I will discuss appveyor integration with @dkager. As many parties on
Windows, including Microsoft, Freedom Scientific and NV Access are now
relying on proper windows support of Liblouis, I think it can be
considered important to have automated Windows builds.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,643,2018-09-21T22:27:33Z,2018-09-25T12:26:57Z,2018-09-25T12:26:57Z,MERGED,True,34,8,2,https://github.com/BueVest,Tidy up mode flags in lou_allround.c,5,[],https://github.com/liblouis/liblouis/pull/643,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/643,"Solves #642
Also, now the flags are refered to by name instead of absolute values.
Other things we could do in this PR:

Remove the last traces of pass1Only in liblouis.h and lou_translatestring.c.
Add the most commonly used modes as command line parameters to the other tools, e.g. -p or --partialTrans.","Solves #642
Also, now the flags are refered to by name instead of absolute values.
Other things we could do in this PR:

Remove the last traces of pass1Only in liblouis.h and lou_translatestring.c.
Add the most commonly used modes as command line parameters to the other tools, e.g. -p or --partialTrans.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,643,2018-09-21T22:27:33Z,2018-09-25T12:26:57Z,2018-09-25T12:26:57Z,MERGED,True,34,8,2,https://github.com/BueVest,Tidy up mode flags in lou_allround.c,5,[],https://github.com/liblouis/liblouis/pull/643,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/643#issuecomment-424229248,"Solves #642
Also, now the flags are refered to by name instead of absolute values.
Other things we could do in this PR:

Remove the last traces of pass1Only in liblouis.h and lou_translatestring.c.
Add the most commonly used modes as command line parameters to the other tools, e.g. -p or --partialTrans.","Hi @BueVest
Excellent catch and good PR. Would you mind adding a NEWS entry?
I agree with the other suggestions, however I'd like to merge this PR and put the other changes (rm pass1Only traces and add command line params for modes) into separate PRs.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,643,2018-09-21T22:27:33Z,2018-09-25T12:26:57Z,2018-09-25T12:26:57Z,MERGED,True,34,8,2,https://github.com/BueVest,Tidy up mode flags in lou_allround.c,5,[],https://github.com/liblouis/liblouis/pull/643,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/643#issuecomment-424275989,"Solves #642
Also, now the flags are refered to by name instead of absolute values.
Other things we could do in this PR:

Remove the last traces of pass1Only in liblouis.h and lou_translatestring.c.
Add the most commonly used modes as command line parameters to the other tools, e.g. -p or --partialTrans.",Done! Happy merging (smile),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/644,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/644#issuecomment-424373362,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",Metadata needs to be in the format #+locale: ar. You put #locale: ar.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/644#issuecomment-424377769,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",Mesar wrote ar-ar-g1_harness.yaml and ar-fa_harness.yaml.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/644#issuecomment-424656503,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","To do:

 add ar-ar-g2.ctb to extra/generate-display-names/display-names
 fix meta data in ar-ar-g1
 clean up YAML files (move comments about implementation details somewhere else)
 add references to braille standards (see email)
 merge arabic_grade1.yaml with the existing test
 try to contact original authors of modified tests
 possibly keep old table for inclusion in farsi table
 what to do with arabic.grade2.issue.yaml?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,5,https://github.com/liblouis/liblouis/pull/644#issuecomment-425022420,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","I modified the yaml file for grade2, I think it doesn’t have failing tests. These tests fail because I typed in details for examples that did not work for me when using certain opcodes. I cleaned it up as per your recommendations.
I sent the modified file to the mailing list, I hope you can include it.
I also sent the braille reference I used to build these tables.
For the conflict with the Farsi table, can we just copy the content of the old Arabic table to the Persian table so that it no longer depends on the Arabic table?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/644#issuecomment-425031034,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","Hi @ikrami1
The tests in arabic_grade2.yaml now all pass (I added two xfail). However there are 5 failures in arabic_grade1.yaml, quite a few failures in ar-ar-g1_harness.yaml and ar-fa_harness.yaml.
Can you have a look at these and maybe give us a hint whether these need to fixed or whether we know that these are problems but we can leave them for now, i.e. mark them as expected failures with xfail?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/644#issuecomment-425031590,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","For the conflict with the Farsi table, can we just copy the content of the old Arabic table to the Persian table so that it no longer depends on the Arabic table?

Yes, we could do that. But I'd rather not have duplicate definitions for what I believe is the same language. Maybe it is a trivial error somewhere that can easily be fixed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,8,https://github.com/liblouis/liblouis/pull/644#issuecomment-425641512,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","as per bert request, i added the content of arabic_grade1.yaml at the top of the existing yaml file. i also corrected many errors displayed by the travis script. however, it cuts off at the middle of the file. i hope you can submit it again and display the rest of the failed examples so that i continue working on them. i am attaching the document here, but i was forced to change its extention to txt so that it can be uploaded to this window..
ar-ar-g1_harness.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/644#issuecomment-427638115,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","Two unexpected passes in arabic_grade2.yaml (line 96 and line 131).
One failure in ar-ar-g1_harness.yaml:
Input:    '[http://mielke.cc/brltty/doc/drivers/]'
Expected: '⠸⠬⠠⠦⠓⠞⠞⠏⠐⠂⠰⠲⠰⠲⠍⠊⠑⠇⠅⠑⠲⠉⠉⠰⠲⠃⠗⠇⠞⠞⠽⠰⠲⠙⠕⠉⠰⠲⠙⠗⠊⠧⠑⠗⠎⠰⠲⠴⠄' (length 49)
Received: '⠸⠬⠠⠦⠓⠞⠞⠏⠐⠂⠰⠲⠰⠲⠍⠊⠑⠇⠅⠑⠲⠉⠉⠰⠲⠃⠗⠇⠞⠞⠽⠰⠲⠙⠕⠉⠰⠲⠙⠗⠊⠧⠑⠗⠎⠰⠲⠴⠄⠸⠱' (length 51)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,10,https://github.com/liblouis/liblouis/pull/644#issuecomment-427781524,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","i modified the files and sent them to the mailing list. i actually forgot to remove the xfail flag after correcting the mistakes in the grade2 yaml file.
feel free to merge ar_grade1 yaml file with the existing one, just notice that there are some entries in the new file marked for forward translation only.
I hope we can look for the problem i am having with only one rule in the grade2 arabic.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/644#issuecomment-427785107,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",Which problem is that? All the grade 2 tests are passing now...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,12,https://github.com/liblouis/liblouis/pull/644#issuecomment-427787314,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","there is a group of contractions  that are represented by one letter only. if they come as single words, they should be abbriviated normally. but if they come as a part of bigger word, dots 36 must be placed before the character that represents the abbreviated word.

this is the most problematic rule for me so far. i should define every contraction twice, one with the ""word"" opcode, and another with the ""partword"" upcode.

when i used the ""word"" upcode, a big problem happens with backtranslation: if the contraction is part of a word, nvda automattically assumes that the character before the dots 36 is a contraction as well and automatically expand it. an example if the ""word"" upcode is used:

- وليس

#correct

- ⠺⠤⠇

#incorrect

- ⠤⠺⠤⠇

# The first character in the word is not an abbreviation, yet nvda assumes that it is a seperate word as soon as i put dots36 after it, because it thinks it is a dash symbol, not a contraction indicator. in grade1, the word ""وليس"" will be ""ولماليس""

#another example:

- لربما

#correct backtranslation

- ⠇⠤⠗

#incorrect backtranslation

- ⠤⠇⠤⠗

#to temporarily work around this issue, i used the ""lowword"" upcode. this resulted in good backtranslation, but disabled the use of all these abbreviations if they come connected with punctuation marks, which is not desirable.



# as a seperate word:

- ليس

- ⠇

- مثل

- ⠍

- ذاكر

- ⠮

- شيء نحو الهدف

- ⠩ ⠝ ⠉⠓⠙⠋

#due to the use of ""lowword"", they will not be translated next to punctuations.

- قريب جدا.

#correct

- ⠘⠟ ⠚⠲

#incorrect, which is the current state:

- ⠘⠟ ⠚⠙⠁⠲",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/644#issuecomment-427989185,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",Could you clarify with a YAML test?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,14,https://github.com/liblouis/liblouis/pull/644#issuecomment-428113877,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","is there a way to indicate that dots 36 is a contraction sign?
i want liblouis not to forward-translate dots 36 in grade2 to the dash sign if it is followed by a character.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/644#issuecomment-428150398,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","I'm not sure, I don't know that well how back-translation works. I need to work by trial and error. I have tried to create a test myself but I'm having trouble reading and editing your table and test because of the Arabic characters.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/644#issuecomment-428151511,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","I'm having trouble reading and editing your table and test because of the Arabic characters.

Note to self: (setq bidi-display-reordering nil) helps",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,17,https://github.com/liblouis/liblouis/pull/644#issuecomment-428171145,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","hi
i don't know what to do to make my table more readable for those who don't know Arabic, but i was advised earlier on the mailing list to use actual arabic characters instead of unicode values.
i created the required test and uploaded it to my comment. i had to change the extention to txt in order to be accepted.
i hope it helps
arabic grade2 issue.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/644#issuecomment-428173656,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","The main problem was that I didn't really know how to handle it in my editor, because I'm not used to these characters. But it's fine now. Unicode values would make it even harder to read I think.
Thank you for the test! I will look into it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,19,https://github.com/liblouis/liblouis/pull/644#issuecomment-431692597,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","i upgraded the grade1 table to represent the dash sign as 36-36, not 36. this is according to the reference book i used that explains Unified Arabic Braille system. this actually solved the problematic issue i was talking about, because dots 36 in their own are no longer regarded as a punctuation symbol.
i also updated the grade2 table to use the ""word"" upcode instead of ""lowword"", and it works fine.
i sent the updated documents to the mailing list, but i am providing here at this link for convenience:
https://1drv.ms/u/s!At4lvrlWM5p81U63xLDDeKqmZblp
it includes the updated tables and test, as well as the braille reference book.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/644#issuecomment-431790265,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",Great.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,21,https://github.com/liblouis/liblouis/pull/644#issuecomment-432190867,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","Is it possible to add these changes to this Pull-Request?

There is also a list of checkable items that needs to be completed, can you check what’s achieved so far?

I have another question, the braille reference I use contains entire section for Math and science symbols. They are very technical. Should I add them to the grade1 table, or a separate table for math and science should be created?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/644#issuecomment-432309934,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","It depends, if you think adding support for the math symbols will not interfere with the translation of literary text, it's better to add it to the same table.
I have some questions about the PDF document. Does it have the same content as the BRF you sent us earlier? I would like to have some more info about the book:

the title (in Arabic and translated to English)
who wrote the document?
who published the document and when (and where)?
which regions/languages does the braille code apply to?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,23,https://github.com/liblouis/liblouis/pull/644#issuecomment-432322858,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","the brf document is actually taken from this PDF one.
the book cover reads:
نظام برايل العربي المطور
The Developed Arabic braille system
أقر هذا النظام في مؤتمر تطوير وتوحيد خط برايل العربي الذي انعقد في الفترة من 7 إلى 10 أكتوبر 2002 بمدينة الرياض، المملكة العربية السعودية.
this system was stablished in the conference entitled ""the unification and development for Arabic braille font"", held in Riyad, Saudi Arabia, in the period between the 7th and 10th of October, 2002.
this document is prepared by the General Secretariat for special education committee in Saudi Arabia, and printed at their printing house.
this applies to the Arabic language only, and is supposed to be adopted by all arabic speaking countries, but i am not sure if all countries have actually agreed to using it. However, this is the table used in Duxbury braille translator.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,24,https://github.com/liblouis/liblouis/pull/644#issuecomment-433020327,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","math and science symbols will interfere with the literary contractions. so i think if they're added to the grade1 table, they will miss up the grade2 table greatly. so what do you recommend in this regard? are there any other languages that have two seperate tables for literary and math texts? Thanks?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,25,https://github.com/liblouis/liblouis/pull/644#issuecomment-433864658,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","Not that I know of, but it's perfectly fine to have two separate tables. Of course it means that the end-user somehow needs to indicate that he wants to translate mathematical content.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,26,https://github.com/liblouis/liblouis/pull/644#issuecomment-435315139,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","for the math symbols, i will do them in the same grade1 table, but will mark all of them with the noback opcode to avoid any problems could happen with the litrary braille. i think this will be good enough for those who want to read or emboss math content. i may do this at a later stage after i manage to see my changes in the next release of liblouis.
i updated the existing yaml test to fix some errors happened after changing the underscore sign to 6-36 as mentioned in the provided braille reference.
ar-ar-g1_harness.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/mohdshara,27,https://github.com/liblouis/liblouis/pull/644#issuecomment-435755233,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",Very well done Ikrami. I see that we still have some failed tests. will this be merged in the next release I hope despite those? The introduction of the new tables will solve long crucial standing issues and will enable the Arabic reading community to have access to more apps and hardware. Definitely very high impact.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,28,https://github.com/liblouis/liblouis/pull/644#issuecomment-435764938,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","these fails due to a deprecated Farsi table that includes the old Arabic grad1 table. the changes i made caused this Old Farsi table to crash, we tried contacting the authors of these tables to see if they will approve the new Farsi tables introduced in 2016. if they didn't reply, we can possibly keep the old Arabic table as well. but my changes are definitely ready for 3.8.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,29,https://github.com/liblouis/liblouis/pull/644#issuecomment-440616944,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","@ikrami1 There are 4 failing tests remaining:
1 in ar-ar-comp8.yaml:
Input:    '⠲⠬⢐⠐⡒⠶'
Expected: '.؟ـ،:""' (length 6)
Received: '۔؟ـ،:""' (length 6)
Diff:     Expected '.' but received '۔' in index 0
lou_checkyaml:./braille-specs/ar-ar-comp8.yaml:26: Failure
FAILURE (12 tests, 1 failure)
FAIL braille-specs/ar-ar-comp8.yaml (exit status: 1)

and 3 in ar-ar-g1_harness.yaml:
Input:    'آليا,'
Expected: '⠜⠇⠊⠁⠐⠂' (length 6)
Received: '⠜⠇⠊⠁⠂' (length 5)
Diff:     Expected '⠐' but received '⠂' in index 4
lou_checkyaml:./braille-specs/ar-ar-g1_harness.yaml:2085: Failure
Input:    'لويندوز,وقراءة'
Expected: '⠇⠺⠊⠝⠙⠺⠵⠨⠺⠟⠗⠁⠄⠡' (length 14)
Received: '⠇⠺⠊⠝⠙⠺⠵⠂⠺⠟⠗⠁⠄⠡' (length 14)
Diff:     Expected '⠨' but received '⠂' in index 7
lou_checkyaml:./braille-specs/ar-ar-g1_harness.yaml:3596: Failure
Input:    'و/أو'
Expected: '⠺⠌⠌⠺' (length 4)
Received: '⠺⠰⠲⠌⠺' (length 5)
Diff:     Expected '⠌' but received '⠰' in index 1
lou_checkyaml:./braille-specs/ar-ar-g1_harness.yaml:4087: Failure
FAILURE (4364 tests, 3 failures)
FAIL braille-specs/ar-ar-g1_harness.yaml (exit status: 1)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,30,https://github.com/liblouis/liblouis/pull/644#issuecomment-440654030,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",thank you. i sent my corrections to your personal e-mail.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,31,https://github.com/liblouis/liblouis/pull/644#issuecomment-440671538,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","ikrami.ahmad@gmail.com said:

Hello

I corrected the computer braille yaml test, please see the attachment and update accordingly.

You can delete The three failed tests in the g1 yaml file, they are useless anyway.

Someone draw my attention to two brackets that are commonly used which I would like you to add to the computer braille table:

Punctuation « 1234567
Punctuation » 1234568

In the Arabic grade 1 table, please move line 169, to line 182, so that Arabic numerals take precedence over latin numerals when back-translating.

Thank you.


The fix to the test did not work. Now there are two failures: one for forward translation and one for backward translation:
Input:    '.؟ـ،:""'
Expected: '⠬⢐⠐⡒⠶' (length 5)
Received: '⠲⠬⢐⠐⡒⠶' (length 6)
Diff:     Expected '⠬' but received '⠲' in index 0
Input:    '⠬⢐⠐⡒⠶'
Expected: '.؟ـ،:""' (length 6)
Received: '؟ـ،:""' (length 5)
Diff:     Expected '.' but received '؟' in index 0

I added the two punctuation rules and deleted the previous definitions of these symbols (both were mapped to 2356).
I also made the changes to the grade 1 table and test like you said.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,32,https://github.com/liblouis/liblouis/pull/644#issuecomment-440671941,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",@ikrami1 Could you add a test for the backtranslation of Arabic numerals?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,33,https://github.com/liblouis/liblouis/pull/644#issuecomment-440688570,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","@bertfrees I ADDED A BACWARD TEST FOR THE ARABIC NUMERALS AND SENT it to your e-mail.
for the Arabic grade2 issue, it is no longer exists. when i reviewed the reference of the unified arabic braille, i found that the dash symbol is 36-36, not 36 only. i corrected it in the grade1 table, and consequently, 36 in its own represents an indication for contraction only. it's safe to delete this yaml test.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,34,https://github.com/liblouis/liblouis/pull/644#issuecomment-440688954,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",Thank you,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/ikrami1,35,https://github.com/liblouis/liblouis/pull/644#issuecomment-443138389,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","i think these tables are ready for the new release now. i have nothing else to add or modify for the time being.
Thanks very much to Bert and whoever helped me to make this possible.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,36,https://github.com/liblouis/liblouis/pull/644#issuecomment-443154465,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.","Yes, I'm just going to clean up some things and then I'll merge. Thank you Ikrami for the great job.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,644,2018-09-25T13:55:47Z,2018-12-02T20:57:53Z,2018-12-02T20:57:56Z,CLOSED,False,1598,2811,21,https://github.com/egli,Added new Arabic tables by Ikrami Ahmad,27,['tables'],https://github.com/liblouis/liblouis/pull/644,https://github.com/bertfrees,37,https://github.com/liblouis/liblouis/pull/644#issuecomment-443541367,"These are the tables and yaml tests that were provided by Ikrami Ahmad. I did the following modifications

Added the standard license header to ar-ar-g2.ctb
Re-add the standard license header to ar-ar-g1.utb and added Ikrami Ahmad as a copyright holder.
Change all file encoding to UTF-8.
Add the tables and the yaml files to the Makefiles.
Add metadata to the tables so that the yaml files can find the tables via meta data queries

The tests do not pass.

braille-specs/ar-fa_harnes used the old arabic table and might have to be adapted.
the two Arabic yaml files cannot find their associated table. ATM I don't see why, the meta data seems to match. It says Table query did not match a table.",Merged in 6742e48,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/645,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/645#issuecomment-424658153,,"Not sure if we should mention anything here, as in Release 3.5. we already say
 > Support for the pass1Only flag has now been removed
I see what you mean, and I was in doubt myself. One could argue that the PR constitutes a noticeable change, since programs that still reference the p1o flag could choose to ignore the warning. Now, they won’t compile until the reference to p1o has been removed. However, I am totally fine with it either way.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/645#issuecomment-424665048,,"Yes, thinking about it we probably should mention it in the News",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/645#issuecomment-424828553,,"Hmm, I don't know. What's wrong with keeping the ""pass1Only mode is no longer supported"" warning a bit longer? It's not that we are in shortage of space for modes, are we?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/645#issuecomment-424865977,,"How long is a bit longer?

I found out about this when I started looking into lou_allround, which still referenced the flag. So, it became part of my tidying things up a bit.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/645#issuecomment-424883206,,"Until it's old news.
I like it if a program helps me to make no mistakes. Now Liblouis just silently ignores stuff.
Maybe, if you really want to remove all traces of pass1Only, we could show a more generic error for unrecognized modes instead?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/645#issuecomment-425231924,,"I could make this if it would help. Anyway, I think we should reference the mode flags by name and not by value. Then, the compiler absolutely wouldn’t ignore an invalid flag silently.

If you think it is a good idea, I will make a generic check for invalid mode flags.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/645#issuecomment-425245259,,"I think we should reference the mode flags by name and not by value

What do you mean?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/645#issuecomment-425385038,,"Sorry if I was unclear.

I simply supposed that writing

Mode |= pass1Only;

Would be better than

Mode |= 16;

If Pass1Only is invalid, the compiler would catch the former, but not the latter. However, making a specific check for the validity of mode would never hurt.

Hope I am making sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/645#issuecomment-425389913,,"Hmm, I don't see where we are using values at the moment. As far as I know we just check the given mode variable for certain bits, e.g. if (mode & dotsIO) ..., but nowhere in the code we check that all bits in the variable map to an existing mode. This is the problem.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/BueVest,11,https://github.com/liblouis/liblouis/pull/645#issuecomment-425448988,,"We don’t now, but we did until recently (see #643), and others might do the same, which would indeed lead to both the compiler and Liblouis silently ignoring an invalid flag.

I will make the check sometime during the week-end.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/645#issuecomment-425450688,,"Ah yes, forgot about that. Still, what we do ourselves is less important, it's what other programs do that we can't control. Thanks for looking into it!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/BueVest,13,https://github.com/liblouis/liblouis/pull/645#issuecomment-426027356,,"Hi Christian,

It is ok – I am always happy to learn. But I don’t quite see, how it can help us here. We are not talking about discrete numbers which may or may not be in a pre-defined array. This is a case of bits, which may be combined in almost any way.

So, we will have to add all valid modes to produce a bitmask of valid modes. Then, we must check if the actual mode contains bits not in this mask. I can handle the first part, but what would the bitwise logic of the last part look like?

BTW, Do we need to convert the enum to an array? The example looks as if you could use both, but I don’t know if you can address an enum like an array, e.g. sizeof(myEnum)/sizeof(*myEnum) like in the example.

How would you do it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/BueVest,14,https://github.com/liblouis/liblouis/pull/645#issuecomment-426033083,,"Ah yes, of course:

``` c
If ((mode|mask)^mask) return 0;
```

This would require mode to be unsigned, which it probably should be anyway.

What do you think?

Just tried to google a way to walk over an enum with none-contiguous values like the translationMode enum, but found no obvious solution. Any good ideas?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,645,2018-09-25T17:46:49Z,2018-11-26T11:48:59Z,2018-11-26T11:48:59Z,CLOSED,False,20,11,4,https://github.com/BueVest,Removed last traces of the pass1Only flag,4,[],https://github.com/liblouis/liblouis/pull/645,https://github.com/egli,15,https://github.com/liblouis/liblouis/pull/645#issuecomment-441612356,,Replaced by #666,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,646,2018-09-26T21:05:28Z,2018-11-21T14:04:21Z,2018-11-21T14:04:21Z,MERGED,True,55,35,3,https://github.com/BueVest,Add common mode flags to lou_translate and lou_trace,7,['enhancement'],https://github.com/liblouis/liblouis/pull/646,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/646,"Moved variables into main(), since they should only be visible from main() and not global.","Moved variables into main(), since they should only be visible from main() and not global.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,646,2018-09-26T21:05:28Z,2018-11-21T14:04:21Z,2018-11-21T14:04:21Z,MERGED,True,55,35,3,https://github.com/BueVest,Add common mode flags to lou_translate and lou_trace,7,['enhancement'],https://github.com/liblouis/liblouis/pull/646,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/646#issuecomment-425224319,"Moved variables into main(), since they should only be visible from main() and not global.","I am sorry. I just thought that we were supposed to eliminate global variables whenever possible if they weren’t strictly necessary, and I thought this was a good and easy place to do it.

If you feel strongly about this, I can reverse the commit, but I don’t really see why these variables absolutely have to be global. To me, it was just a matter of tidying things up a bit before I got on to implementing some new options.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,646,2018-09-26T21:05:28Z,2018-11-21T14:04:21Z,2018-11-21T14:04:21Z,MERGED,True,55,35,3,https://github.com/BueVest,Add common mode flags to lou_translate and lou_trace,7,['enhancement'],https://github.com/liblouis/liblouis/pull/646,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/646#issuecomment-425330465,"Moved variables into main(), since they should only be visible from main() and not global.","If you feel strongly about this, I can reverse the commit, but I don’t really see why these variables absolutely have to be global.

No, I don't feel very strongly about this, otherwise I would have requested changes in the review :-). It's just that I would not have worried about that particular piece of code first and foremost.
I have one question though: If you move the var into a local scope why would you still need the static keyword?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,646,2018-09-26T21:05:28Z,2018-11-21T14:04:21Z,2018-11-21T14:04:21Z,MERGED,True,55,35,3,https://github.com/BueVest,Add common mode flags to lou_translate and lou_trace,7,['enhancement'],https://github.com/liblouis/liblouis/pull/646,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/646#issuecomment-425335625,"Moved variables into main(), since they should only be visible from main() and not global.",Good question. I took it from the same article that you previously referred to. I thought that perhaps arrays had to be defined with the static keyword when in a function.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,646,2018-09-26T21:05:28Z,2018-11-21T14:04:21Z,2018-11-21T14:04:21Z,MERGED,True,55,35,3,https://github.com/BueVest,Add common mode flags to lou_translate and lou_trace,7,['enhancement'],https://github.com/liblouis/liblouis/pull/646,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/646#issuecomment-425367676,"Moved variables into main(), since they should only be visible from main() and not global.","You need the static keyword if you want to make it use static memory, but since the function is only called once it makes little difference.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,646,2018-09-26T21:05:28Z,2018-11-21T14:04:21Z,2018-11-21T14:04:21Z,MERGED,True,55,35,3,https://github.com/BueVest,Add common mode flags to lou_translate and lou_trace,7,['enhancement'],https://github.com/liblouis/liblouis/pull/646,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/646#issuecomment-425848714,"Moved variables into main(), since they should only be visible from main() and not global.","I personally wouldn't have removed the static keywords. There was nothing wrong with it. But we can leave it now.
Is there a way to not have the short versions of the new options, in other words require the long versions to be specified? Like this:
...
-b, --backward          backward translation using the given table
    --noContractions    Use no contractions
    --dotsIO            Display dot patterns
    --ucBrl             Use Unicode Braille patterns
    --noUndefinedDots   Disable output of undefined dot numbers during back-translation
    --partialTrans      Use partial back-translation

I'm not sure I like the short versions. For instance what are we going to do when there is a new mode who's name starts with ""n""?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,646,2018-09-26T21:05:28Z,2018-11-21T14:04:21Z,2018-11-21T14:04:21Z,MERGED,True,55,35,3,https://github.com/BueVest,Add common mode flags to lou_translate and lou_trace,7,['enhancement'],https://github.com/liblouis/liblouis/pull/646,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/646#issuecomment-440660477,"Moved variables into main(), since they should only be visible from main() and not global.",@egli 435c3ec OK?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,646,2018-09-26T21:05:28Z,2018-11-21T14:04:21Z,2018-11-21T14:04:21Z,MERGED,True,55,35,3,https://github.com/BueVest,Add common mode flags to lou_translate and lou_trace,7,['enhancement'],https://github.com/liblouis/liblouis/pull/646,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/646#issuecomment-440663146,"Moved variables into main(), since they should only be visible from main() and not global.","Well, OK I guess. Maybe a tad cryptic. Why not name the vars noContractionsMode instead of mode1? Other than that looks great",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/648,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/648#issuecomment-425846720,,"@egli You've already approved, but I assume this is just work in progress.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/648#issuecomment-425877856,,I assumed this PR was finished. If it is just work in progress then I would assume it is not a PR.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/648#issuecomment-425879634,,Judging from the PR title Bue intends to actually fix issue #631. I think Bue just wants feedback as soon in the process as possible.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/648#issuecomment-425912721,,"Bert, you are right. That is my intention. Though, it is not exactly easy to find out what is going on. I am just now saying hello to a whole new monster called gdb. I may eventually need help, but I will never give up (smile).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/648#issuecomment-464782137,,@BueVest what's the story with this PR? I'd like to get it out of the way in the foreseeable future,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/648#issuecomment-464897798,,"The issue was found while resolving issue #400. Within a capsphrase, numericnocontchar after a digit does not generate a nocontractsign as expected.

At the moment, the PR only contains changes to the test that demonstrates this issue. I think I originally meant to solve the issue in this PR, but a lot of things happened this autumn, and I didn’t give this very high priority, since capsphrase is assumedly only used in a few tables, and no one has actually complained about it, at least not afaik.

I am still willing to work at it, but it won’t be in this release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/648#issuecomment-465052306,,"So, I'll just merge this and you can open another PR whenever you're ready, OK?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,648,2018-09-30T12:33:45Z,2019-02-19T09:20:31Z,2019-02-19T14:35:23Z,MERGED,True,1,1,1,https://github.com/BueVest,Ensure nocontractsign before numericnocontchars in capital blocks,2,[],https://github.com/liblouis/liblouis/pull/648,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/648#issuecomment-465152549,,"Yes, fine with me.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,649,2018-10-01T09:24:46Z,2018-11-21T14:13:36Z,2018-11-21T14:18:03Z,MERGED,True,141,35,4,https://github.com/bertfrees,Latvian fixes,10,['tables'],https://github.com/liblouis/liblouis/pull/649,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/649,Not completely finished yet. Want to clean up my changes to Lv-Lv-g1.utb a bit. But you can already review.,Not completely finished yet. Want to clean up my changes to Lv-Lv-g1.utb a bit. But you can already review.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,649,2018-10-01T09:24:46Z,2018-11-21T14:13:36Z,2018-11-21T14:18:03Z,MERGED,True,141,35,4,https://github.com/bertfrees,Latvian fixes,10,['tables'],https://github.com/liblouis/liblouis/pull/649,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/649#issuecomment-425849682,Not completely finished yet. Want to clean up my changes to Lv-Lv-g1.utb a bit. But you can already review.,I should also update braille-specs/litdigits6Dots_backward.yaml.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/650,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/ultraleetj,2,https://github.com/liblouis/liblouis/pull/650#issuecomment-426040399,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","ok, regarding a few failures
lou_checkyaml:./braille-specs/es-g2.yaml:34: Failure
3605
Input:    'gasto'
3606
Expected: '⠛⠯⠕' (length 3)
3607
Received: '⠛⠯⠞⠕' (length 4)
3608
Diff:     Expected '⠕' but received '⠞' in index 2
3609
I will fix this in yaml file if I get permissions for it, , this was a typing misstake.
the correct unicode entry should be:



gasto
⠛⠯⠞⠕
as for line 46, i think there is an extra space, so it should be removed so that the program sees the translation. Its there and its correct, but just not seen.



for the next five, such as:
lou_checkyaml:./braille-specs/es-g2.yaml:12: Failure
3590
Input:    '⠗⠹⠊⠕'
3591
Expected: 'radio' (length 5)
3592
Received: 'readio' (length 6)
3593
Diff:     Expected 'a' but received 'e' in index 1
this is probably a back translation issue, but I cannot tell from that result. The idea is that it should be written as shown in the file. In this case I suspect that the word beginning for ""re"" is clashing with the word here. So apparently grouping vowels into a class  does work fine for forward translation but not for back translation.
Same applies to
lou_checkyaml:./braille-specs/es-g2.yaml:18: Failure
3595
Input:    '⠅⠃⠁'
3596
Expected: 'alba' (length 4)
3597
Received: 'albuena' (length 7)
3598
Diff:     Expected 'a' but received 'u' in index 3
3599
and its right.. this is again, a back translation issue.
The word 12-1 should not be backtranslated, I suspect this is true with all of the always opcode ones.
they are all appearing to have to do with back translation issues and have to do with with what I just explained above.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/650#issuecomment-426578312,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)",@ultraleetj I have updated the PR with your latest version that you uploaded yesterday.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/ultraleetj,4,https://github.com/liblouis/liblouis/pull/650#issuecomment-427104639,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","@bertfrees tanks a lot for updating, though I do have two questions, as you might have noticed running the same yaml test with the updated table gives many errors, so to solve them:

In spanish, just as in English, some word beginnings are really
beginnings and also abbreviations of some letters. Such is the case
with con (25) and cc (also dots 25). In spanish, we do have PR (dots


which is also the word beginning for  ""pre"". the differences here
are that in English c must be  strictly the middle of a word, while Pr
can go pretty much anywhere during a word, except for the ending so
its easy, the begmidword opcode falls right into place.
But, again, there is the same dot pattern for the representation of
two things and they would probably depend on the context they are used
in. Of course putting them in a certain order does help, but I have
looked at the english unified braille and the con example/solution
came out to be something that is not really in the manual:

empmatchafter match %[^_~]%<* con [Cc] 25
nofor begword con 25
I sort of am getting a grip on how the match opcode is working here,
but I had no idea there were rules named empmatchafter and or
empmatchbefore
are those experimental? what are they exactly supposed to do?
What would be the best way of resolving this, anyway? this happens
with almost all of the lowered  word signs. They are word beginnings
but can be also contractions, I think its just 8 cases that come up in the entire table.

In the case of the syllabic preferences I feel no real hyphenation
table would be needed. I just compared every partword contraction
against each other and only six specific cases result in the entire
set, they are:
adr, uen, uer, ues, uem.

examples of this:
""ladrillo"" should be contracted as ""l, a, dr, illo"" and not ""l, ad, rillo""
""cuento"" should be contracted as ""c, u, en, t, o"" and not ""c, ue, n, t, o""
and so on.
In other words, since there are two possible contractions that can
abbreviate the letters int he word, namely ad, and also dr, or ue and also en, (they sort
of overlap) the later one is preferred, in this case, dr, or en.
So not sure if an always opcode will solve this?
like:
always adr 1-256
this should in theory work since the manual states that the longest
rule is taken into consideration first for validity.
Thanks for any information you may provide.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/650#issuecomment-427638739,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","In the case of the syllabic preferences I feel no real hyphenation table would be needed. I just compared every partword contraction against each other and only six specific cases result in the entire set, they are: adr, uen, uer, ues, uem.
[...]
So not sure if an always opcode will solve this? like:
always adr 1-256


Yes, this should work. If it's only these six letter combination, this solution is clearly preferable to nocross rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/650#issuecomment-427640707,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","In spanish, just as in English, some word beginnings are really beginnings and also abbreviations of some letters.
[...]
What would be the best way of resolving this, anyway? this happens with almost all of the lowered  word signs. They are word beginnings but can be also contractions, I think its just 8 cases that come up in the entire table.

I'm not sure I understand the problem. Is this just a matter of prioritizing the rules? Is it a forward or backward translation problem? Remember I'm not a braille expert at all. Some examples would help I think.
The empmatchafter opcode as far as I understand has to do with emphasis, so not applicable here.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/650#issuecomment-427651372,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","These are the remaining failing tests:


ladrillo


cuento
See your comment above.


graben
The gr contractions shouldn't be made because it would result in a word with only lowered signs.
always gr 2356

The multipass rules were not working because the ab rule was missing a virtual dot.
begmidword ab 2

I have fixed this in the table.


crisol
The is contraction is not defined in the table.


esbelto
Where does the ⠧ (v) at the position of the b come from?


pocos
Defined in the table as an exception word.
word pocos 1234-14-246



tenue
The test expects that the en contraction is not made.
always en 26



mayab
The tests expects that the ab contraction is not made.
always ab 2



cono
The con contraction is currently chosen over the on contraction.
begword con 25
partword on 1346



adelantar}
I guess this is just a typo (the curly bracket).


entrenen
The entre contraction was made, while the test expects that the first en is not contracted and that the tr and the other two en are contracted.
begword entre 356

Question: the entre contraction also consists of lowered signs only, so shouldn't it be added to the contraction/cancelcontraction/finalizecontraction rules? Note that we can not use dots 356a for it because that is taken by tr.
The same comments can be made for the following rules:
begword com 36
begword con 25
begword dis 256
begword pre 235
begword sobre 23



pasión
The ión contraction is not defined in the table.


reacción
The test expects that the re contraction is not made.
begword re 1235



fácilmente
The tests expects that the fácil contraction is not made.
sufword fácil 124-12356



panqué
The test expects that the qu contraction is not made and expects some other mapping for é.
partword qu 12345
lowercase é 2346



alimentes
The im, en and es contractions are currently chosen over the mentes contraction.
partword im 345
always en 26
partword es 1246
endword mentes 134-234",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/ultraleetj,8,https://github.com/liblouis/liblouis/pull/650#issuecomment-427670779,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","could those two be merged?
my new pull request is
#653
by the way i did this with NVDA  and its doable, no sighted help needed. Will do an article at some point!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,650,2018-10-01T10:07:51Z,2018-12-03T15:25:06Z,2018-12-03T15:25:10Z,CLOSED,False,1619,246,17,https://github.com/bertfrees,Commit new table and test for Spanish grade 2 provided by Juan Pablo Bello,30,['tables'],https://github.com/liblouis/liblouis/pull/650,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/650#issuecomment-427674626,"To do:

 Fix remaining issues (see mailing list)
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","could those two be merged? my new pull request is #653

Thanks. The Github issues can not be merged, but I will merge the branches and commit everything to your pull request #653. Normally I should automatically have push access to your branch.
EDIT: On second thought, let's just continue working on your new branch, that will probably be easier. In parallel I will update this original branch with modified versions of your commits (files moved to the right locations, line endings converted, etc.).

by the way i did this with NVDA  and its doable, no sighted help needed. Will do an article at some point!

Nice. An article would be very helpful for others I think.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,651,2018-10-05T09:39:17Z,2018-10-11T06:51:25Z,2018-10-11T06:51:37Z,MERGED,True,4,0,2,https://github.com/egli,Define the undefined char for the Czech tables,1,['tables'],https://github.com/liblouis/liblouis/pull/651,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/651,By request of Jan Hegr,By request of Jan Hegr,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,651,2018-10-05T09:39:17Z,2018-10-11T06:51:25Z,2018-10-11T06:51:37Z,MERGED,True,4,0,2,https://github.com/egli,Define the undefined char for the Czech tables,1,['tables'],https://github.com/liblouis/liblouis/pull/651,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/651#issuecomment-427309278,By request of Jan Hegr,CC @HegrJan,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,651,2018-10-05T09:39:17Z,2018-10-11T06:51:25Z,2018-10-11T06:51:37Z,MERGED,True,4,0,2,https://github.com/egli,Define the undefined char for the Czech tables,1,['tables'],https://github.com/liblouis/liblouis/pull/651,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/651#issuecomment-428841226,By request of Jan Hegr,"@HegrJan writes:

yes, it's perfect. Thank you very much. Shall I approve it in your PR
somehow or it's sufficient this way?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,652,2018-10-07T17:04:15Z,2018-10-07T17:08:15Z,2018-10-07T17:08:15Z,CLOSED,False,28,4,1,https://github.com/ultraleetj,merge the two grade 2 spanish tables,1,[],https://github.com/liblouis/liblouis/pull/652,https://github.com/ultraleetj,1,https://github.com/liblouis/liblouis/pull/652,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,1,https://github.com/liblouis/liblouis/pull/653,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,2,https://github.com/liblouis/liblouis/pull/653#issuecomment-427681188,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","@bertfrees
thanks a lot for taking the time with all of this, and now I will attempt to address your previous comments:

Question: the entre contraction also consists of lowered signs only, so shouldn't it be added to the contraction/cancelcontraction/finalizecontraction rules? Note that we can not use dots 356a for it because that is taken by tr.

it most likely shouldn't, its only a word beginning. It looks like as far as the Spanish language is concerned, this is one of the very rare and specific cases for which a word that could result in being made up of only lowered braille signs contain ""entre"" as a word beginning so I have added this exception to the table as
word entrenen 15-1345-356-26-26
As for the rest of them, com, con, dis, ETC:
Not really, there is a rule which should cancel word beginnings when vowels are found, and some exceptions have been set to also prevent this from happening, but the rule is probably being not working or cancelled since I had specified a noback opcode. Some of those are being back translated incorrectly so that is why I had done it but that is probably not the way it would work, so removing the noback opcode should get at least forward translation working again.

The ión contraction is not defined in the table.

well, again, one of the cases where the same dot pattern (3456) can represent three different things, in this case:

ion (as partword),
ión (as endword),
and número (as word).


The is contraction is not defined in the table.
Where does the ⠧ (v) at the position of the b come from?
The test expects that the en contraction is not made.

ooops, my mistakes. This has been fixed in latest yaml file along with some other issues like:

panqué
The test expects that the qu contraction is not made and expects some other mapping for é.
fácilmente
The tests expects that the fácil contraction is not made.

this was all incorrect so I have fixed it.

The con contraction is currently chosen over the on contraction.

a rule which cancels contractions before a vowel was probably not in effect but it should work now:
code: before vowels always con 14-1346
now, as for:

alimentes
The im, en and es contractions are currently chosen over the mentes contraction.

the wording endings and beginnings shoudl have to be prioritized .
I have added some rules for this a t the very end of the table too, but then again that would be just a band-aid solution for only a few cases.
Regarding what I had said about contractions being word beginnings and also parts of words, you asked:

I'm not sure I understand the problem. Is this just a matter of prioritizing the rules? Is it a forward or backward translation problem? Remember I'm not a braille expert at all. Some examples would help I think.

mmm, this is probably a priority problem and perhaps a translation (both directions) problem. Because a dot pattern should be used to represent several things (see the comment about the ""ion"" contraction)
Of course most of the exceptions set int the table are meant to relax some of the rules which are applied but I would believe those would present back translation issues, mostly.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/653#issuecomment-427689786,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","I think I really need an example in order to understand...
Anyway, after your latest fixes to the table and additions to the test suite, there are 20 failing tests left (for forward translation only). I'm not sure which ones you are still working on and for which ones you need help. I saw that you asked me some questions on the mailing list, notably about the multipass trick, but I didn't find any YAML tests that seemed to match the issues in question. Also to be honest there have been a lot of emails and it's a bit hard for me as an outsider to keep track of all the individual issues and the status of them. For instance, most of your most recently added tests (about word beginnings followed by vowels etc.) are failing, even though from one of your emails I gathered this issue was fixed.
So what I'm going to do is the following: I will let you continue to improve the table like you have been doing, and when there is a particular issue that you want help with I will hear about it.
I believe you can run the tests locally now, isn't it? So I don't have to keep listing all the failing tests here like I did today. Or did you find that useful? Basically I was just using the lou_trace tool to find out which rules where triggered.",True,{'THUMBS_UP': ['https://github.com/ultraleetj']}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,4,https://github.com/liblouis/liblouis/pull/653#issuecomment-427693120,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","I think I really need an example in order to understand...

Well, this appears to be just a back translation issue, which we do not have at the moment since the focus is now shifting towards forward translation. So as long as test have passed, I think I am good, which they now, thankfully have.

Anyway, after your latest fixes to the table and additions to the test suite, there are 20 failing tests left (for forward translation only). I'm not sure which ones you are still working on and for which ones you need help.

I would doubt I would have called those.. real  fixes, (I never checked when posting). As far as it goes, for forward translation everything works now, apparently.

I saw that you asked me some questions on the mailing list, notably about the multipass trick, but I didn't find any YAML tests that seemed to match the issues in question. Also to be honest there have been a lot of emails and it's a bit hard for me as an outsider to keep track of all the individual issues and the status of them. For instance, most of your most recently added tests (about word beginnings followed by vowels etc.) are failing, even though from one of your emails I gathered this issue was fixed.
So what I'm going to do is the following: I will let you continue to improve the table like you have been doing, and when there is a particular issue that you want help with I will hear about it.

Correct. I feel bad since most of the tests and their output was partly due to my fault in negligently re-checking entries that some testers sent to me, so I have fixed those as well, and then again, I believe that the reordering of the entire set for the table  as far as partword and endword ETC. has made all of the failures.. gone, effectively eliminating all of the issues for which I was confused about, so maybe a multipass implementation would be needed when back translation is put in.
Regarding other multipass situations, I will fill the yaml tests for those in a few days, thoroughly test, keep experimenting, and post back.

I believe you can run the tests locally now, isn't it? So I don't have to keep listing all the failing tests here like I did today. Or did you find that useful? Basically I was just using the lou_trace tool to find out which rules where triggered.

Again, my apologies for submitting changes and tests rather carelessly and in a hurry. Truth is I still had not gained enough confidence with the entire working of everything, including git, though that is merely just an excuse. But I feel good, at least nothing is failing now, which is finally, some progress. I found that extremely useful and now I know how to apply this to my work. Thanks for the tip about the lou-trace tool, and overall, your amazing patience with so many issues (that I am sure others also do have)
This motivates me even more in terms of completing documentation and the like.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/653#issuecomment-427770120,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)",Nice work!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,6,https://github.com/liblouis/liblouis/pull/653#issuecomment-427963898,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","well, what would you think be next?
I think I have done everything that I can for now with this, though I could do more, of course I will be happy to do so.
Why have you listed or why do you recommend escape sequences be removed?
I guess that could be the next step and I can test with it if necessary.
As for the first issue listed regarding k, w,and x being present in words... could this probably work if I group k, w, and x into a class and then uncontract everything?
the thing is that I would not know which opcode to use, since k, w or x could be anywhere within a word for this to take effect. Moreover, how could I tell liblouis to prefix that specific word with a dot 5?
Maybe setting a variable would help, but this stuff is a bit over my head at the moment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/653#issuecomment-427985531,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)",Escape sequences make the table harder to read in my opinion.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,8,https://github.com/liblouis/liblouis/pull/653#issuecomment-428063000,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","Escape sequences make the table harder to read in my opinion.

this has now been fixed along with some words which were being contracted incorrectly. I have tested now extensively using the lou_translate tool (actually reading a set of 3 dozens random pages of literature) and the table gives pretty good, reliable results. We could probably put this as an experimental release, unless something else is missing (besides the issue listed on top regarding dot 5)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/653#issuecomment-428104693,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","I came up with a solution for the words with x, w or k in them, see 0786ea0.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,10,https://github.com/liblouis/liblouis/pull/653#issuecomment-428793770,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","sorry, its hard for me to still upload or change files and I think we have duplicate copies of everything, so I am attaching the latest test yaml here with a txt file extension
if you could probably suggest a way so that I could upload files or if what I have been doing so far is fine, let me know.
es-g2.yaml.txt",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/653#issuecomment-431679680,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","Handling capitalization and punctuation is turning out to be more complicated than expected.
The problem with capitalization is that compbrl not only disables contractions, but also capitalization. A possible solution would be to use latinLetterDef8Dots.cti, which contains rules like uplow Aa 17,1, and then convert dot 7 into a 46 prefix in a second pass. However this is only a part of the solution. We would need to reimplement everything, including words in all caps (e.g. ""MAXWELL""), with multipass rules. At some point I think we did something like that in the Dutch table, so it's possible, but it's not so great because it makes the table even more complicated. There are also other rules like endword ? 5-26 that don't work when compbrl is active.
I have made an attempt to fix the punctuation issue. without making the table too complicated.
The tests pass now, but I'm not sure about all the consequences of this change. For example, there is the question of whether punctuation marks are allowed in the middle of a word, and what the effect is on the contraction rules. For example, when a part of a word is enclosed in round or square brackets, which contain dots from the upper row, does this mean the first contraction does not need to be cancelled because the word does not exist of only lowered signs? Another question is what to do with an at-sign (dot 5) or a backslach (dots 5-3) inside a word?
This change will need proper testing. If you want I can commit it so you can have a look.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,12,https://github.com/liblouis/liblouis/pull/653#issuecomment-431714506,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","We would need to reimplement everything, including words in all caps (e.g. ""MAXWELL""), with multipass rules. At some point I think we did something like that in the Dutch table, so it's possible, but it's not so great because it makes the table even more complicated. There are also other rules like endword ? 5-26 that don't work when compbrl is active.

Well, those are somewhat extreme examples in literature, the only problem I would see is mainly with the endword situation you describe, though it wouldn't be as bad probably in a literature context, which is what most would use anyway for grade 2.

I'm not sure about all the consequences of this change. For example, there is the question of whether punctuation marks are allowed in the middle of a word, and what the effect is on the contraction rules. For example, when a part of a word is enclosed in round or square brackets, which contain dots from the upper row, does this mean the first contraction does not need to be cancelled because the word does not exist of only lowered signs?

I guess you meant to say lower, rather than upper row. As long as there is any dot in the upper row and the rest of the word either before or after does contain just lowered signs, nothing would have to be cancelled, plus I think I have included all of the possible resulting, officially existing words for the language in yaml.

Another question is what to do with an at-sign (dot 5) or a backslach (dots 5-3) inside a word?

I have personally not seen and at sign on most text out there, though you are right this might probably come up in something (such as a file path or an e-mail address) but I would just revert to grade one for that. Of course those rules were done in '98 (which is the latest official standard) and this was just meant for literary Braille, and personal note-taking, but not for computer or programming use so I would be sure others would do just the same, even for English.

This change will need proper testing. If you want I can commit it so you can have a look.

Send it over and I will do, thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/653#issuecomment-431823861,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","Regarding the problems with compbrl, we might fix it partly by using nocont instead.

I guess you meant to say lower, rather than upper row.

I meant upper row. The question was basically about the definition of ""word"", namely whether a bracket in the middle is part of the word, or split it into two words? If I understand correctly you are saying it's the former. But maybe this is just a theoretical discussion? Can you come up with a case where a bracket is in the middle of a word and either the part on the left or the right consists of only lowered signs?

I think I have included all of the possible resulting, officially existing words for the language in yaml.

Really? So these 6 cases are the only ones? Then I wonder why we are making it ourselves difficult with these complicated rules and their side effects, while we could just add 6 exception rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,14,https://github.com/liblouis/liblouis/pull/653#issuecomment-431988222,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","The question was basically about the definition of ""word"", namely whether a bracket in the middle is part of the word, or split it into two words? If I understand correctly you are saying it's the former. But maybe this is just a theoretical discussion? Can you come up with a case where a bracket is in the middle of a word and either the part on the left or the right consists of only lowered signs?

Well, this depends, I would not see a use for splitting words in bracket signs, bracket signs are normally used for aclaratory information, or as refferences to footnotes, but they do not split words as far as I am aware.

Really? So these 6 cases are the only ones? Then I wonder why we are making it ourselves difficult with these complicated rules and their side effects, while we could just add 6 exception rules.

Sorry, I was thinking in the wrong case.. which I had added for the solution for overlapping contractions, late night revissions are just not for me. As far as this goes I could still say the same: if any dot from any upper pattern is found and the rest are lowered signs, its fine that way. I would have to probably include some tests but I have not seen either dot 6, 45, or 56, or even 456 being used much in Spanish tbh, and even less as parts of words, in grade one.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,15,https://github.com/liblouis/liblouis/pull/653#issuecomment-433366581,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","Regarding the problems with compbrl, we might fix it partly by using nocont instead.

OK, reading the manual once more it seems appropriate, but then would it be just changing:
compbrl k
compbrl w
compbrl x
by:
nocont k
nocont w
nocont x
be enough? because this works with postpunct or prepunct rules so should they be defined first? not sure how you would indicate a cap character and then a dot pattern, we would probably have to do this for every printed cap  letter of the alphabet, but I definitely see where you are going :)
right, and regarding:

maybe this is just a theoretical discussion? Can you come up with a case where a bracket is in the middle of a word and either the part on the left or the right consists of only lowered signs?

I really could not come with anything of this sort in grade 2 braille so this is most definitely a theoretical discussion as you say, brackets or braces and parenthesis are never used in the middle of the words in literary (textbook) type Braille.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,16,https://github.com/liblouis/liblouis/pull/653#issuecomment-433383922,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","closed this pr by accident.
I have resolved some conflicts which prevented me from syncing the two branches, we should be all set and current now. I realized I was uploading files in the wrong way, this should make it better now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/653#issuecomment-433400363,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","would it be just changing compbrl by nocont be enough?

I don't know. It needs to be tested.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,18,https://github.com/liblouis/liblouis/pull/653#issuecomment-433408202,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","I don't know. It needs to be tested.

I will change it, test and report back, but I will have to find some time this weekend. thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,19,https://github.com/liblouis/liblouis/pull/653#issuecomment-433718949,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","well, I have just tested using the included tools (from the latest release version from September) and replaced as I had said,

just changing compbrl by nocont exactly where it appears on the table

result: any word which contains any of those letters make lou_translate enter into what seems to be an infinity loop so the CPU usage rises, there is absolutely no output and I have to use a break/abort command in the commandline (in windows it is control plus c) so that the command line will resume normal operation. This is true when words are typed by themselves, (I.e. kiwi, kilo) and surrounded by punctuation.
lou_trace does not echo any output, either. So this in effect, appears to crash some sort of module. Sorry that I cannot be of any more help than this, would you like me to commit anything? I did not test using yaml because I suspect the same would probably occur.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/653#issuecomment-433869346,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","OK I'll have a look. No need to commit anything. The nocont opcode is extensively used in the Danish tables, so it's not a forgotten opcode that doesn't work anymore. But of course there might be a bug.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/ultraleetj,21,https://github.com/liblouis/liblouis/pull/653#issuecomment-439921042,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)","ok, so no news on this? I also remember that there was another pr for spanish tables out of which we both unfortunately got no concrete answers though, separating that and this one made sense in a smoother project management way but not so much into an usage manner, since I would probably say that Spanish Braille is used uniformly whether you are in teh UK, or Spain or latin America, but the lack of official documents in English could probably be the culprit here. Anyway, I will test the table extensively this week by using some more texts and using NVDA and will report back no later than by the 25th, though what we have so far regarding forward translation is probably 90 percent there so I would believe this can be included safely anyway.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/653#issuecomment-440627856,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)",Changing compbrl into nocont makes the tests hang for me as well. Looks like a really strange bug! Don't know if I'll have time to look into it more before the release.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,23,https://github.com/liblouis/liblouis/pull/653#issuecomment-443522656,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)",I have fixed some more tests.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,653,2018-10-07T17:21:17Z,2018-12-03T15:22:05Z,2018-12-03T15:22:05Z,CLOSED,False,1539,208,15,https://github.com/ultraleetj,New table and test for Spanish grade 2,70,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/653,https://github.com/bertfrees,24,https://github.com/liblouis/liblouis/pull/653#issuecomment-443747218,"This PR replaces #650.
To do:
Fix remaining issues:

 Make words not contracted whenever they contain letters k, w or x and add a dot 5 before them
 probably start testing back translation
 Make all tests pass or mark some with xfail
 Possibly add more meta data
 Add news entry
 Update AUTHORS
 Remove escape sequences (\x0022, \x003F, \x00C1, \x00C9, \x00CD, \x00D1, \x00D3, \x00DA, \x00DC, \x00E1, \x00E9, \x00ED, \x00F1, \x00F3, \x00FA and \x00FC)",Merged in 572b183,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,656,2018-10-10T11:24:30Z,2018-11-30T13:16:50Z,2018-12-18T19:43:59Z,MERGED,True,621,324,5,https://github.com/loomee,Update Braille Tables for 'ZHCN',2,['tables'],https://github.com/liblouis/liblouis/pull/656,https://github.com/loomee,1,https://github.com/liblouis/liblouis/pull/656,"Updated a lot of punctuations.
Optimize the display of Braille.
Fix minor error

p.s. Don't merge it before december
because I don't know if it has bug.","Updated a lot of punctuations.
Optimize the display of Braille.
Fix minor error

p.s. Don't merge it before december
because I don't know if it has bug.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,656,2018-10-10T11:24:30Z,2018-11-30T13:16:50Z,2018-12-18T19:43:59Z,MERGED,True,621,324,5,https://github.com/loomee,Update Braille Tables for 'ZHCN',2,['tables'],https://github.com/liblouis/liblouis/pull/656,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/656#issuecomment-428537753,"Updated a lot of punctuations.
Optimize the display of Braille.
Fix minor error

p.s. Don't merge it before december
because I don't know if it has bug.",So in order to fix the problem explained in #615 you removed the include en-ueb-g1.ctb rule? Maybe mention that in the commit message.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,656,2018-10-10T11:24:30Z,2018-11-30T13:16:50Z,2018-12-18T19:43:59Z,MERGED,True,621,324,5,https://github.com/loomee,Update Braille Tables for 'ZHCN',2,['tables'],https://github.com/liblouis/liblouis/pull/656,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/656#issuecomment-440651429,"Updated a lot of punctuations.
Optimize the display of Braille.
Fix minor error

p.s. Don't merge it before december
because I don't know if it has bug.","@loomee Could you confirm that you removed the include en-ueb-g1.ctb for the reason I think?
Also what did you mean by this comment?

Don't merge it before december because I don't know if it has bug",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,656,2018-10-10T11:24:30Z,2018-11-30T13:16:50Z,2018-12-18T19:43:59Z,MERGED,True,621,324,5,https://github.com/loomee,Update Braille Tables for 'ZHCN',2,['tables'],https://github.com/liblouis/liblouis/pull/656,https://github.com/loomee,4,https://github.com/liblouis/liblouis/pull/656#issuecomment-441647614,"Updated a lot of punctuations.
Optimize the display of Braille.
Fix minor error

p.s. Don't merge it before december
because I don't know if it has bug.","@bertfrees
Sorry, I will reply to you now because I am too busy.
Answer your Question.
question 1:
answer: It is true.
question 2:
answer: As of now, no error reports have been received. So, it should be available.
Yours sincerely",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,656,2018-10-10T11:24:30Z,2018-11-30T13:16:50Z,2018-12-18T19:43:59Z,MERGED,True,621,324,5,https://github.com/loomee,Update Braille Tables for 'ZHCN',2,['tables'],https://github.com/liblouis/liblouis/pull/656,https://github.com/school510587,5,https://github.com/liblouis/liblouis/pull/656#issuecomment-448345361,"Updated a lot of punctuations.
Optimize the display of Braille.
Fix minor error

p.s. Don't merge it before december
because I don't know if it has bug.","Hi @loomee,
I has received this information (in Chinese): http://www.xinhuanet.com/2018-05/21/c_1122863599.htm
The government of mainland China published a set of modified rules for the old braille (zhcn-g1.ctb).
Will there be improvement for this table or a new table for zh-cn very soon?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,658,2018-10-24T10:19:42Z,2018-11-21T11:56:17Z,2018-11-21T11:56:17Z,MERGED,True,249,115,9,https://github.com/dkager,Update the Dutch tables to the braille standard 2017.1,5,['tables'],https://github.com/liblouis/liblouis/pull/658,https://github.com/dkager,1,https://github.com/liblouis/liblouis/pull/658,"This updates the Dutch tables to the braille standard 2017.
There is still much more work to do beyond updating the braille standard:

Finally make emphasis work analogous to capitalization, i.e. an emphmodechars opcode.
Include all examples from the braille standard as tests, ordered by section.
Remove tests/tweaks implemented by non-Braille Autoriteit agencies to get a purer table.


Improve backtranslation.

I don't address these points in this PR. However, I do want to find a better way to handle the various types of single quotes in capsmodechars.","This updates the Dutch tables to the braille standard 2017.
There is still much more work to do beyond updating the braille standard:

Finally make emphasis work analogous to capitalization, i.e. an emphmodechars opcode.
Include all examples from the braille standard as tests, ordered by section.
Remove tests/tweaks implemented by non-Braille Autoriteit agencies to get a purer table.


Improve backtranslation.

I don't address these points in this PR. However, I do want to find a better way to handle the various types of single quotes in capsmodechars.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,658,2018-10-24T10:19:42Z,2018-11-21T11:56:17Z,2018-11-21T11:56:17Z,MERGED,True,249,115,9,https://github.com/dkager,Update the Dutch tables to the braille standard 2017.1,5,['tables'],https://github.com/liblouis/liblouis/pull/658,https://github.com/dkager,2,https://github.com/liblouis/liblouis/pull/658#issuecomment-432600499,"This updates the Dutch tables to the braille standard 2017.
There is still much more work to do beyond updating the braille standard:

Finally make emphasis work analogous to capitalization, i.e. an emphmodechars opcode.
Include all examples from the braille standard as tests, ordered by section.
Remove tests/tweaks implemented by non-Braille Autoriteit agencies to get a purer table.


Improve backtranslation.

I don't address these points in this PR. However, I do want to find a better way to handle the various types of single quotes in capsmodechars.",re #525,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,658,2018-10-24T10:19:42Z,2018-11-21T11:56:17Z,2018-11-21T11:56:17Z,MERGED,True,249,115,9,https://github.com/dkager,Update the Dutch tables to the braille standard 2017.1,5,['tables'],https://github.com/liblouis/liblouis/pull/658,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/658#issuecomment-432780455,"This updates the Dutch tables to the braille standard 2017.
There is still much more work to do beyond updating the braille standard:

Finally make emphasis work analogous to capitalization, i.e. an emphmodechars opcode.
Include all examples from the braille standard as tests, ordered by section.
Remove tests/tweaks implemented by non-Braille Autoriteit agencies to get a purer table.


Improve backtranslation.

I don't address these points in this PR. However, I do want to find a better way to handle the various types of single quotes in capsmodechars.",Cool! Nice work.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,658,2018-10-24T10:19:42Z,2018-11-21T11:56:17Z,2018-11-21T11:56:17Z,MERGED,True,249,115,9,https://github.com/dkager,Update the Dutch tables to the braille standard 2017.1,5,['tables'],https://github.com/liblouis/liblouis/pull/658,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/658#issuecomment-432956642,"This updates the Dutch tables to the braille standard 2017.
There is still much more work to do beyond updating the braille standard:

Finally make emphasis work analogous to capitalization, i.e. an emphmodechars opcode.
Include all examples from the braille standard as tests, ordered by section.
Remove tests/tweaks implemented by non-Braille Autoriteit agencies to get a purer table.


Improve backtranslation.

I don't address these points in this PR. However, I do want to find a better way to handle the various types of single quotes in capsmodechars.","I have one request and one question.
Would it be possible to add references to chapters in the referenced braille specification? Especially for the things that changed in this PR. Also it would be nice if we could keep referencing the braille-specs repository, in other words add a link to braille-autoriteit.org to the https://github.com/liblouis/braille-specs/tree/master/dutch page.
I would add a #+version:2017.1 metadata field. I was also thinking about maybe maintaining different versions of the table for different revisions of the standard: one table for the 2005 standard and one for 2017. I think this could be useful for back-translating older texts. What do you think?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,658,2018-10-24T10:19:42Z,2018-11-21T11:56:17Z,2018-11-21T11:56:17Z,MERGED,True,249,115,9,https://github.com/dkager,Update the Dutch tables to the braille standard 2017.1,5,['tables'],https://github.com/liblouis/liblouis/pull/658,https://github.com/dkager,5,https://github.com/liblouis/liblouis/pull/658#issuecomment-433017153,"This updates the Dutch tables to the braille standard 2017.
There is still much more work to do beyond updating the braille standard:

Finally make emphasis work analogous to capitalization, i.e. an emphmodechars opcode.
Include all examples from the braille standard as tests, ordered by section.
Remove tests/tweaks implemented by non-Braille Autoriteit agencies to get a purer table.


Improve backtranslation.

I don't address these points in this PR. However, I do want to find a better way to handle the various types of single quotes in capsmodechars.","Would it be possible to add references to chapters in the referenced braille specification?

Where? In the table, tests, this PR/commits, ...
The Braille Autoriteit provides a (Dutch) summary of changes.

Also it would be nice if we could keep referencing the braille-specs repository

Sure. There is no PDF of this standard that I know of, but a link should be OK.

I was also thinking about maybe maintaining different versions of the table for different revisions of the standard

On one hand I agree, but on the other hand I think the Braille Autoriteit means for the standard to evolve over time (evolution not revolution). In 2019 there should be another update. If backtranslation worked well enough for the 2005 table then we could keep that around and make 2017 the new evolving default. I'm not sure if we should keep it in the tables directory or if there should be a legacy directory for that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,658,2018-10-24T10:19:42Z,2018-11-21T11:56:17Z,2018-11-21T11:56:17Z,MERGED,True,249,115,9,https://github.com/dkager,Update the Dutch tables to the braille standard 2017.1,5,['tables'],https://github.com/liblouis/liblouis/pull/658,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/658#issuecomment-433019261,"This updates the Dutch tables to the braille standard 2017.
There is still much more work to do beyond updating the braille standard:

Finally make emphasis work analogous to capitalization, i.e. an emphmodechars opcode.
Include all examples from the braille standard as tests, ordered by section.
Remove tests/tweaks implemented by non-Braille Autoriteit agencies to get a purer table.


Improve backtranslation.

I don't address these points in this PR. However, I do want to find a better way to handle the various types of single quotes in capsmodechars.","Where? In the table, tests, this PR/commits, ...

Sorry, forgot to say.. I meant in the tests mainly.

Sure. There is no PDF of this standard that I know of, but a link should be OK.

Yep, just a link is fine.

On one hand I agree, but on the other hand I think the Braille Autoriteit means for the standard to evolve over time.

Keeping a table for every minor update is probably not manageable, and not very useful because not that much braille material will be produced in between the smaller updates. So I was just thinking pre-2017 vs. post-2017. I don't know if it's worth it. Just an idea.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,658,2018-10-24T10:19:42Z,2018-11-21T11:56:17Z,2018-11-21T11:56:17Z,MERGED,True,249,115,9,https://github.com/dkager,Update the Dutch tables to the braille standard 2017.1,5,['tables'],https://github.com/liblouis/liblouis/pull/658,https://github.com/dkager,7,https://github.com/liblouis/liblouis/pull/658#issuecomment-433024908,"This updates the Dutch tables to the braille standard 2017.
There is still much more work to do beyond updating the braille standard:

Finally make emphasis work analogous to capitalization, i.e. an emphmodechars opcode.
Include all examples from the braille standard as tests, ordered by section.
Remove tests/tweaks implemented by non-Braille Autoriteit agencies to get a purer table.


Improve backtranslation.

I don't address these points in this PR. However, I do want to find a better way to handle the various types of single quotes in capsmodechars.","Your pre/post-2017 idea sounds good. I wonder what @leonardder thinks.
I will add some chapter references to the tests tonight.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,660,2018-10-29T17:59:24Z,2018-10-29T18:00:58Z,2018-10-29T18:00:58Z,CLOSED,False,323,87,7,https://github.com/MikeGray-APH,UEB updates,1,[],https://github.com/liblouis/liblouis/pull/660,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/660,Some UEB updates that can be merged back into master.,Some UEB updates that can be merged back into master.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,661,2018-10-29T18:01:26Z,2018-11-13T07:50:07Z,2018-11-13T07:50:07Z,MERGED,True,323,87,7,https://github.com/MikeGray-APH,UEB updates,1,['tables'],https://github.com/liblouis/liblouis/pull/661,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/661,Some UEB updates that can be merged back into master.,Some UEB updates that can be merged back into master.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/662,Some fixes to the Spanish tables we have made.,Some fixes to the Spanish tables we have made.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/662#issuecomment-434260495,Some fixes to the Spanish tables we have made.,Thanks Mike! There are also some fixes in the standard Spanish table in the pipeline (see #653). Maybe we should wait for that to be merged and then compare again? Also what would be really useful is a YAML test that explains the differences.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/662#issuecomment-434260796,Some fixes to the Spanish tables we have made.,@ultraleetj,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/662#issuecomment-434263845,Some fixes to the Spanish tables we have made.,"The new tables also needs some metadata and display names.
I suggest:
#-display-name: Spanish uncontracted braille as used in the U.S.
#+locale: es-US
#+type: literary
#+contraction: no
#+grade: 1

and
#-display-name: Spanish computer braille as used in the U.S.
#+locale: es-US
#+type: computer",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/ultraleetj,5,https://github.com/liblouis/liblouis/pull/662#issuecomment-434309386,Some fixes to the Spanish tables we have made.,"hi. A few observations

There are also some fixes in the standard Spanish table in the pipeline... we should wait for that to be merged and then compare again?

Well, as the standard one is really spain/latin america based, as far as I am aware there are no modifications to the referenced tables, namely es-g1.ctb so there should not be conflicts when merging everything at first glance.

Also what would be really useful is a YAML test that explains the differences.

Agreed. For this I made a few comments for the difs shown to hopefully have some situations cleared.

display-name: Spanish uncontracted braille as used in the U.S.

Agreed, though the usage is pretty standard across the world anyway, and most conventions on those difs are accurate and actually used everywhere. It does facilitate reading but also makes for introduction to a language as straightforward as possible anyway, which i would believe is APH's main concern.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/662#issuecomment-434314850,Some fixes to the Spanish tables we have made.,"Thank you Pablo for taking the time to review this.

as far as I am aware there are no modifications to the referenced tables, namely es-g1.ctb so there should not be conflicts

Aren't there? I see changes in es-chardefs.cti and es-translation.cti. Both are included in es-g1.ctb.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/ultraleetj,7,https://github.com/liblouis/liblouis/pull/662#issuecomment-434335244,Some fixes to the Spanish tables we have made.,"Aren't there? I see changes in es-chardefs.cti and es-translation.cti.

correct. I have left comments for some lines of which I am totally unsure about. This could mainly break punctuation if it gets implemented, though some of those, for example the ones in es-translation are valid. Hopefully we do have an answer soon.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/MikeGray-APH,8,https://github.com/liblouis/liblouis/pull/662#issuecomment-454055773,Some fixes to the Spanish tables we have made.,"These were issues raised by some of our users, whether or not the users were correct I am unable to say.  The only issue I recall was that Spanish numbers larger than 3 digits get a dot-3 between each set of 3 digits, except for phone numbers.  That one I could separate out if it is true.  If not, then this commit can be ignored.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/662#issuecomment-462437048,Some fixes to the Spanish tables we have made.,@ultraleetj What do you think about the numbers larger than 3 digits?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/662#issuecomment-462461388,Some fixes to the Spanish tables we have made.,"@ultraleetj Another thing: is there a formal document that you are aware of that we could reference in the es-g1.ctb table? Also, both grade 1 and 2 tables can be used in Spain as well as in Latin America, if I understood correctly? I think it would be clearer if the tables would mention that explicitly. There is someone on the mailing list asking about Latin American Spanish braille, and I'm not quite sure what to say. Any relevant documentation about this is welcome.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/662#issuecomment-464703976,Some fixes to the Spanish tables we have made.,"@ultraleetj Could I ask you to update the es-chardefs.cti and es-g1.ctb files with the things that you are certain of? I'm thinking for example of the right single quotation mark which you think should be 256, and maybe some other suggestions from Mike that you agree with.
We can than bundle everything else in this PR and somehow feed back your remarks to Mike's users.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/ultraleetj,12,https://github.com/liblouis/liblouis/pull/662#issuecomment-464840507,Some fixes to the Spanish tables we have made.,"hi, for now you can tell them usage is pretty much the same whether is
European or latin american. But to answer all of your other questions
I would need a few days because I am also gathering opinions and
consensus in blindness groups as of this moment, including the
bibliography and the digits thing. Thanks for the heads up!

2019-02-11 14:29 GMT-05:00, Bert Frees <notifications@github.com>:
…
 @ultraleetj Another thing: is there a formal document that you are aware of
 that we could reference in the es-g1.ctb table? Also, both grade 1 and 2
 tables can be used in Spain as well as in Latin America, if I understood
 correctly? I think it would be clearer if the tables would mention that
 explicitly. There is someone on the mailing list asking about Latin American
 Spanish braille, and I'm not quite sure what to say. Any relevant
 documentation about this is welcome.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/ultraleetj,13,https://github.com/liblouis/liblouis/pull/662#issuecomment-464840836,Some fixes to the Spanish tables we have made.,"I'll be glad to do this, though using the online editor is sort of
cumbersome to me so I will think of some workflow and hopefully have
something soon.

2019-02-18 6:53 GMT-05:00, Bert Frees <notifications@github.com>:
…
 @ultraleetj Could I ask you to update the es-chardefs.cti and es-g1.ctb
 files with the things that you are certain of? I'm thinking for example of
 the right single quotation mark which you think should be 256, and maybe
 some other suggestions from Mike that you agree with.

 We can than bundle everything else in this PR and somehow feed back your
 remarks to Mike's users.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/662#issuecomment-464841441,Some fixes to the Spanish tables we have made.,"Anything I can do to help, let me know. You can also just tell me what I need to do.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/ultraleetj,15,https://github.com/liblouis/liblouis/pull/662#issuecomment-493829650,Some fixes to the Spanish tables we have made.,"@ultraleetj What do you think about the numbers larger than 3 digits?

This is totally fine, number separation is important in literary Braille.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/ultraleetj,16,https://github.com/liblouis/liblouis/pull/662#issuecomment-493830089,Some fixes to the Spanish tables we have made.,"@ultraleetj Another thing: is there a formal document that you are aware of that we could reference in the es-g1.ctb table? Also, both grade 1 and 2 tables can be used in Spain as well as in Latin America, if I understood correctly? I think it would be clearer if the tables would mention that explicitly. There is someone on the mailing list asking about Latin American Spanish braille, and I'm not quite sure what to say. Any relevant documentation about this is welcome.

Hi, as far as numbers and other basic signs are concerned, we can cite this as a source, which includes separations for them. They are the Spanish commission braille guidelines. Usage is, or should be the same whether in Spain or Latin America, as many if not all of the conventions are set by the once (Spain's national blind organization )
http://sid.usal.es/idocs/F8/FDO12069/signografiabasica.pdf",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/Adriani90,17,https://github.com/liblouis/liblouis/pull/662#issuecomment-643520357,Some fixes to the Spanish tables we have made.,Any progress on this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/662#issuecomment-643604213,Some fixes to the Spanish tables we have made.,"I am waiting for Juan Pablo to integrate the changes from Mike (those that make sense) into the main Spanish tables, and add some words of explanation to the table headers about what exactly the tables implements and to which regions they apply, with links to any relevant documentation that is available.
When that is done I can take this PR from Mike and see what is left of it, and check back with him.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/ultraleetj,19,https://github.com/liblouis/liblouis/pull/662#issuecomment-645725738,Some fixes to the Spanish tables we have made.,"hi, apologies for not getting into this sooner. I am not really clear on what else do we need to get as far as this goes. I still see the other issues as being somewhat trivial and not really necessary to implement, for example prefixing things using a dot 6. Regarding the three digits rule, this makes sense since it can facilitate reading long numbers. The link that I pasted and gave as a source could be looked a bit closer, since its actually a collection of references that cover pretty much all of the spanish braille usage. There is actually a newly updated stenography or grade 2 document sent to me some months back, and I have already made progress in building a table, I need to finish up the yaml tests for it. But the yaml test here do need more context as well and I am not sure from where this could be obtained.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/662#issuecomment-645949013,Some fixes to the Spanish tables we have made.,"The main problem for me is that I don't have a clear understanding of:

which changes are already incorporated in the standard Spanish tables
which changes are useful but not incorporated yet
which changes are not appropriate for inclusion in the standard Spanish table according to you

@ultraleetj You are in the best position to provide us this info.
I'd like to avoid adding a table specific to U.S. unless really necessary (and I think you agree), so we should try to incorporate as much changes as possible that make sense. For the remaining changes I need you to tell me which ones would justify creating a dedicated table (for example because they are currently actually in use in the U.S. or in Latin America), and which ones not.
You already commented on most (not all) of the individual changes, but I was just hoping you could summarize everything to refresh everyone's minds. Even if you say none of the remaining changes should be included, a summary would be useful because I need something to feed back to Mike Gray. If you don't know where to start I can make a first move.
If there are useful things that are not incorporated yet, like e.g. the three digits rule, it needs to be incorporated, so we have to agree on who is going to do it. I prefer if you could do it, but I can help if needed.

There is actually a newly updated stenography or grade 2 document sent to me some months back, and I have already made progress in building a table, I need to finish up the yaml tests for it.

Great, looking forward to it.

But the yaml test here do need more context as well and I am not sure from where this could be obtained.

Do you mean this PR? This PR has no YAML tests. Are you saying there are certain changes that need more explanation? If so, yes I totally agree some YAML tests should be added, and it's these kind of things that Mike needs to know about.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,662,2018-10-29T18:17:21Z,2021-09-14T09:31:42Z,2021-09-14T09:37:35Z,CLOSED,False,204,8,5,https://github.com/MikeGray-APH,Spanish tables update,1,"['waiting', 'tables', 'needs test', 'needs fixup', 'stale']",https://github.com/liblouis/liblouis/pull/662,https://github.com/egli,21,https://github.com/liblouis/liblouis/pull/662#issuecomment-906372933,Some fixes to the Spanish tables we have made.,"Hi, I'd like to clean up the open PRs. There hasn't been much activity on this particular PR lately. Please try to move it forward otherwise I will close it after the next release. If you do not have any time now but you feel that we need to come back to this issue at a later point you can always re-open it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,663,2018-11-03T12:18:41Z,2018-11-21T13:16:09Z,2019-05-13T15:55:57Z,MERGED,True,57,32,4,https://github.com/lukaszgo1,"Improve Polish Grade 1 table, to make back-translations of diacritics working",6,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/663,https://github.com/lukaszgo1,1,https://github.com/liblouis/liblouis/pull/663,"This simply moves all Polish diacritics to the beginning of the table, because otherwise when back-translating they are treated as a different symbols.","This simply moves all Polish diacritics to the beginning of the table, because otherwise when back-translating they are treated as a different symbols.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,663,2018-11-03T12:18:41Z,2018-11-21T13:16:09Z,2019-05-13T15:55:57Z,MERGED,True,57,32,4,https://github.com/lukaszgo1,"Improve Polish Grade 1 table, to make back-translations of diacritics working",6,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/663,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/663#issuecomment-440305120,"This simply moves all Polish diacritics to the beginning of the table, because otherwise when back-translating they are treated as a different symbols.",Hi @lukaszgo1 can you provide a small YAML test for the changes you propose? Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,663,2018-11-03T12:18:41Z,2018-11-21T13:16:09Z,2019-05-13T15:55:57Z,MERGED,True,57,32,4,https://github.com/lukaszgo1,"Improve Polish Grade 1 table, to make back-translations of diacritics working",6,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/663,https://github.com/lukaszgo1,3,https://github.com/liblouis/liblouis/pull/663#issuecomment-440419004,"This simply moves all Polish diacritics to the beginning of the table, because otherwise when back-translating they are treated as a different symbols.",@egli Is the test which I've committed above enough?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,663,2018-11-03T12:18:41Z,2018-11-21T13:16:09Z,2019-05-13T15:55:57Z,MERGED,True,57,32,4,https://github.com/lukaszgo1,"Improve Polish Grade 1 table, to make back-translations of diacritics working",6,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/663,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/663#issuecomment-440628411,"This simply moves all Polish diacritics to the beginning of the table, because otherwise when back-translating they are treated as a different symbols.","@lukaszgo1 thanks, that's exactly what I had in mind. Looks good.
The YAML file actually needs to be added to two Makefiles (you only added it to one). Yes I know kinda sucks, but autotools wants it that way.
Also I pushed some fixes to the PR. I fixed some problems in the YAML file. For example for backward tests the braille is expected first and the print as a second param.
Now it does actually run the YAML tests and it looks like there is one test failing. Can you fix that one?
FAIL: braille-specs/Pl-Pl-g1_backward
=====================================

Input:    '⠏⠉⠓⠝⠡⠩ ⠺ ⠞⠱ ⠣⠬⠙⠮ ⠚⠑⠯⠁ ⠇⠥⠃ ⠕⠪⠍ ⠎⠅⠗⠵⠽⠹ ⠋⠊⠛⠄'
Expected: 'pchnąć w tę łódź jeża lub ośm skrzyń fig.' (length 41)
Received: 'pchnąć w tę łódź jeża lub ośm skrzyń fig'' (length 41)
Diff:     Expected '.' but received ''' in index 40
lou_checkyaml:./braille-specs/Pl-Pl-g1_backward.yaml:8: Failure
FAILURE (10 tests, 1 failure)
FAIL braille-specs/Pl-Pl-g1_backward.yaml (exit status: 1)

Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,663,2018-11-03T12:18:41Z,2018-11-21T13:16:09Z,2019-05-13T15:55:57Z,MERGED,True,57,32,4,https://github.com/lukaszgo1,"Improve Polish Grade 1 table, to make back-translations of diacritics working",6,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/663,https://github.com/lukaszgo1,5,https://github.com/liblouis/liblouis/pull/663#issuecomment-440655473,"This simply moves all Polish diacritics to the beginning of the table, because otherwise when back-translating they are treated as a different symbols.",@egli Fixed now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,665,2018-11-21T16:13:58Z,2018-11-30T14:38:18Z,2018-12-03T13:13:29Z,MERGED,True,10,2,2,https://github.com/egli,If test fails also print the associated table name,4,[],https://github.com/liblouis/liblouis/pull/665,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/665,"With the possibility to define one test for multiple tables in
checkyaml it is not always clear in which table a problem occurred.
This patch should help to locate the table that is the culprit for a
failed test.","With the possibility to define one test for multiple tables in
checkyaml it is not always clear in which table a problem occurred.
This patch should help to locate the table that is the culprit for a
failed test.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,665,2018-11-21T16:13:58Z,2018-11-30T14:38:18Z,2018-12-03T13:13:29Z,MERGED,True,10,2,2,https://github.com/egli,If test fails also print the associated table name,4,[],https://github.com/liblouis/liblouis/pull/665,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/665#issuecomment-441290443,"With the possibility to define one test for multiple tables in
checkyaml it is not always clear in which table a problem occurred.
This patch should help to locate the table that is the culprit for a
failed test.",So why again did you say this was verbose?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,665,2018-11-21T16:13:58Z,2018-11-30T14:38:18Z,2018-12-03T13:13:29Z,MERGED,True,10,2,2,https://github.com/egli,If test fails also print the associated table name,4,[],https://github.com/liblouis/liblouis/pull/665,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/665#issuecomment-443202933,"With the possibility to define one test for multiple tables in
checkyaml it is not always clear in which table a problem occurred.
This patch should help to locate the table that is the culprit for a
failed test.","@bertfrees as I mentioned on the phone, this is basically just a simple solution to a problem when reading the test log for yaml tests that test multiple tables with the same tests. It is not all-encompassing but a good-enough solution for a real problem.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,665,2018-11-21T16:13:58Z,2018-11-30T14:38:18Z,2018-12-03T13:13:29Z,MERGED,True,10,2,2,https://github.com/egli,If test fails also print the associated table name,4,[],https://github.com/liblouis/liblouis/pull/665,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/665#issuecomment-443506162,"With the possibility to define one test for multiple tables in
checkyaml it is not always clear in which table a problem occurred.
This patch should help to locate the table that is the culprit for a
failed test.",I noticed that this is also printing the table for tests marked with xfail.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,665,2018-11-21T16:13:58Z,2018-11-30T14:38:18Z,2018-12-03T13:13:29Z,MERGED,True,10,2,2,https://github.com/egli,If test fails also print the associated table name,4,[],https://github.com/liblouis/liblouis/pull/665,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/665#issuecomment-443700145,"With the possibility to define one test for multiple tables in
checkyaml it is not always clear in which table a problem occurred.
This patch should help to locate the table that is the culprit for a
failed test.","I noticed that this is also printing the table for tests marked with xfail.

Ah, yes. brl_check.c doesn't respect the diagnostics param in all places",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,665,2018-11-21T16:13:58Z,2018-11-30T14:38:18Z,2018-12-03T13:13:29Z,MERGED,True,10,2,2,https://github.com/egli,If test fails also print the associated table name,4,[],https://github.com/liblouis/liblouis/pull/665,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/665#issuecomment-443705396,"With the possibility to define one test for multiple tables in
checkyaml it is not always clear in which table a problem occurred.
This patch should help to locate the table that is the culprit for a
failed test.",Fixed in af87646,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,666,2018-11-22T12:58:07Z,2018-11-26T12:48:21Z,2018-11-26T12:48:32Z,MERGED,True,30,10,6,https://github.com/egli,Implement a isValidMode function,6,[],https://github.com/liblouis/liblouis/pull/666,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/666,"and use that to check mode input. This is turn is then used to reject any deprecated modes such as pass1Only
This is IMHO a cleaner implementation of #645. It also removes the pass1Only flag.
The layout of the code is a bit odd. We have an array (validTranslationModes[] in utils.c) that contains all the valid modes. Naturally this is very tightly coupled to the enum type declaration in liblouis.h.in. Maybe these two declarions should be closer together.
Also since this is really an internal helper function it should maybe not be in internal.h which is despite its name semi-public
Also the other functions in utils.c also seem to be publicly exported functions, whereas isValidMode is strictly internal. Should it go into another utils file?","and use that to check mode input. This is turn is then used to reject any deprecated modes such as pass1Only
This is IMHO a cleaner implementation of #645. It also removes the pass1Only flag.
The layout of the code is a bit odd. We have an array (validTranslationModes[] in utils.c) that contains all the valid modes. Naturally this is very tightly coupled to the enum type declaration in liblouis.h.in. Maybe these two declarions should be closer together.
Also since this is really an internal helper function it should maybe not be in internal.h which is despite its name semi-public
Also the other functions in utils.c also seem to be publicly exported functions, whereas isValidMode is strictly internal. Should it go into another utils file?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,668,2018-11-24T13:01:03Z,2018-12-04T15:41:28Z,2018-12-04T18:03:50Z,MERGED,True,8,7,1,https://github.com/leonardder,Python: Fix None callback registration,1,[],https://github.com/liblouis/liblouis/pull/668,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/668,"#633 introduced support for registering log callbacks in the python bindings, however, this bugged in two ways:

Both the ctypes function type and the registerLogCallback argument were named logcallback. The functype is now LogCallback and the function argument is logCallback
Even though this was advertised in the doc string, registerLogCallback didn't allow providing None to revert to the default callback. This was because ctypes used argument type checking. Type checking is now done using an isinstance check in the registerLogCallback wrapper function.","#633 introduced support for registering log callbacks in the python bindings, however, this bugged in two ways:

Both the ctypes function type and the registerLogCallback argument were named logcallback. The functype is now LogCallback and the function argument is logCallback
Even though this was advertised in the doc string, registerLogCallback didn't allow providing None to revert to the default callback. This was because ctypes used argument type checking. Type checking is now done using an isinstance check in the registerLogCallback wrapper function.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,668,2018-11-24T13:01:03Z,2018-12-04T15:41:28Z,2018-12-04T18:03:50Z,MERGED,True,8,7,1,https://github.com/leonardder,Python: Fix None callback registration,1,[],https://github.com/liblouis/liblouis/pull/668,https://github.com/leonardder,2,https://github.com/liblouis/liblouis/pull/668#issuecomment-443767329,"#633 introduced support for registering log callbacks in the python bindings, however, this bugged in two ways:

Both the ctypes function type and the registerLogCallback argument were named logcallback. The functype is now LogCallback and the function argument is logCallback
Even though this was advertised in the doc string, registerLogCallback didn't allow providing None to revert to the default callback. This was because ctypes used argument type checking. Type checking is now done using an isinstance check in the registerLogCallback wrapper function.","As the milestone of this is now changed, the fact that registerLogCallback fails without this patch should be noted in the news file. I would really appreciate a merge into 3.8. It is either code that is known to be working by at least one person, or code that is broken anyway.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,668,2018-11-24T13:01:03Z,2018-12-04T15:41:28Z,2018-12-04T18:03:50Z,MERGED,True,8,7,1,https://github.com/leonardder,Python: Fix None callback registration,1,[],https://github.com/liblouis/liblouis/pull/668,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/668#issuecomment-444145537,"#633 introduced support for registering log callbacks in the python bindings, however, this bugged in two ways:

Both the ctypes function type and the registerLogCallback argument were named logcallback. The functype is now LogCallback and the function argument is logCallback
Even though this was advertised in the doc string, registerLogCallback didn't allow providing None to revert to the default callback. This was because ctypes used argument type checking. Type checking is now done using an isinstance check in the registerLogCallback wrapper function.",Hi @leonardder what do you suggest we do? I really do not want to do another release right after 3.8.0 if at all possible. What are the repercussions? Can we live with it until the next release?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,668,2018-11-24T13:01:03Z,2018-12-04T15:41:28Z,2018-12-04T18:03:50Z,MERGED,True,8,7,1,https://github.com/leonardder,Python: Fix None callback registration,1,[],https://github.com/liblouis/liblouis/pull/668,https://github.com/leonardder,4,https://github.com/liblouis/liblouis/pull/668#issuecomment-444150904,"#633 introduced support for registering log callbacks in the python bindings, however, this bugged in two ways:

Both the ctypes function type and the registerLogCallback argument were named logcallback. The functype is now LogCallback and the function argument is logCallback
Even though this was advertised in the doc string, registerLogCallback didn't allow providing None to revert to the default callback. This was because ctypes used argument type checking. Type checking is now done using an isinstance check in the registerLogCallback wrapper function.","Hi @leonardder what do you suggest we do? I really do not want to do another release right after 3.8.0 if at all possible. What are the repercussions? Can we live with it until the next release?

The only repercussion I can think of is that one can't unregister a logging callback using the python wrapper. This is fairly trivial, as the pre 3.8 python wrapper didn't officially support this.
As for NVDA, in which I intended to use the logging callback functionality from now on, I will just change nvaccess/nvda#9015 to point at current master, which is v3.8.0 including this patch I believe.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,668,2018-11-24T13:01:03Z,2018-12-04T15:41:28Z,2018-12-04T18:03:50Z,MERGED,True,8,7,1,https://github.com/leonardder,Python: Fix None callback registration,1,[],https://github.com/liblouis/liblouis/pull/668,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/668#issuecomment-444153745,"#633 introduced support for registering log callbacks in the python bindings, however, this bugged in two ways:

Both the ctypes function type and the registerLogCallback argument were named logcallback. The functype is now LogCallback and the function argument is logCallback
Even though this was advertised in the doc string, registerLogCallback didn't allow providing None to revert to the default callback. This was because ctypes used argument type checking. Type checking is now done using an isinstance check in the registerLogCallback wrapper function.","Ok, so we don't have to create a bug fix release?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,668,2018-11-24T13:01:03Z,2018-12-04T15:41:28Z,2018-12-04T18:03:50Z,MERGED,True,8,7,1,https://github.com/leonardder,Python: Fix None callback registration,1,[],https://github.com/liblouis/liblouis/pull/668,https://github.com/leonardder,6,https://github.com/liblouis/liblouis/pull/668#issuecomment-444197759,"#633 introduced support for registering log callbacks in the python bindings, however, this bugged in two ways:

Both the ctypes function type and the registerLogCallback argument were named logcallback. The functype is now LogCallback and the function argument is logCallback
Even though this was advertised in the doc string, registerLogCallback didn't allow providing None to revert to the default callback. This was because ctypes used argument type checking. Type checking is now done using an isinstance check in the registerLogCallback wrapper function.","Nope, I wouldn't do that just for this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,669,2018-11-26T10:50:08Z,2018-12-03T15:16:27Z,2018-12-03T15:16:39Z,CLOSED,False,645,22,3,https://github.com/bertfrees,Changes to Ethiopic table,1,['tables'],https://github.com/liblouis/liblouis/pull/669,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/669,see https://www.freelists.org/post/liblouis-liblouisxml/Preparations-for-Next-Release-Ethiopic-Braille-Table,see https://www.freelists.org/post/liblouis-liblouisxml/Preparations-for-Next-Release-Ethiopic-Braille-Table,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,669,2018-11-26T10:50:08Z,2018-12-03T15:16:27Z,2018-12-03T15:16:39Z,CLOSED,False,645,22,3,https://github.com/bertfrees,Changes to Ethiopic table,1,['tables'],https://github.com/liblouis/liblouis/pull/669,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/669#issuecomment-441737008,see https://www.freelists.org/post/liblouis-liblouisxml/Preparations-for-Next-Release-Ethiopic-Braille-Table,On the mailing list I have asked for some tests to accompany this change.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,669,2018-11-26T10:50:08Z,2018-12-03T15:16:27Z,2018-12-03T15:16:39Z,CLOSED,False,645,22,3,https://github.com/bertfrees,Changes to Ethiopic table,1,['tables'],https://github.com/liblouis/liblouis/pull/669,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/669#issuecomment-443745574,see https://www.freelists.org/post/liblouis-liblouisxml/Preparations-for-Next-Release-Ethiopic-Braille-Table,Merged in 26df451,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,670,2018-11-26T12:37:49Z,2018-11-26T12:39:53Z,2018-11-26T14:19:31Z,CLOSED,False,1273,2,8,https://github.com/ultraleetj,project sync,8,[],https://github.com/liblouis/liblouis/pull/670,https://github.com/ultraleetj,1,https://github.com/liblouis/liblouis/pull/670,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,670,2018-11-26T12:37:49Z,2018-11-26T12:39:53Z,2018-11-26T14:19:31Z,CLOSED,False,1273,2,8,https://github.com/ultraleetj,project sync,8,[],https://github.com/liblouis/liblouis/pull/670,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/670#issuecomment-441635584,,@ultraleetj What are you trying to do?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,670,2018-11-26T12:37:49Z,2018-11-26T12:39:53Z,2018-11-26T14:19:31Z,CLOSED,False,1273,2,8,https://github.com/ultraleetj,project sync,8,[],https://github.com/liblouis/liblouis/pull/670,https://github.com/ultraleetj,3,https://github.com/liblouis/liblouis/pull/670#issuecomment-441647920,,"@bertfrees this was a mistake on my part, I was trying to sync my fork of the project with the latest version of the official repo. I chose the forks in reverse order and that is why this pr was needlessly and accidentally created.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,670,2018-11-26T12:37:49Z,2018-11-26T12:39:53Z,2018-11-26T14:19:31Z,CLOSED,False,1273,2,8,https://github.com/ultraleetj,project sync,8,[],https://github.com/liblouis/liblouis/pull/670,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/670#issuecomment-441650416,,"Are there things in your branch that are not in my branch yet? If not, it's much easier if you just reset your branch with git reset --hard 91f6d60 (but be careful that you do not loose unpushed work).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,670,2018-11-26T12:37:49Z,2018-11-26T12:39:53Z,2018-11-26T14:19:31Z,CLOSED,False,1273,2,8,https://github.com/ultraleetj,project sync,8,[],https://github.com/liblouis/liblouis/pull/670,https://github.com/ultraleetj,5,https://github.com/liblouis/liblouis/pull/670#issuecomment-441652888,,"no new changes from here. I am using the website to do all of this as I do not have a commandline tool installed and I was just mirroring both forks completely. as far as I can tell, no work has been lost.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,670,2018-11-26T12:37:49Z,2018-11-26T12:39:53Z,2018-11-26T14:19:31Z,CLOSED,False,1273,2,8,https://github.com/ultraleetj,project sync,8,[],https://github.com/liblouis/liblouis/pull/670,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/670#issuecomment-441654175,,OK.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,671,2018-11-29T20:48:10Z,2018-11-30T12:58:53Z,2018-12-07T17:46:54Z,MERGED,True,8110,950,3,https://github.com/school510587,Update zh-tw.ctb to version 2018-11,3,['tables'],https://github.com/liblouis/liblouis/pull/671,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/671,"Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>","Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,671,2018-11-29T20:48:10Z,2018-11-30T12:58:53Z,2018-12-07T17:46:54Z,MERGED,True,8110,950,3,https://github.com/school510587,Update zh-tw.ctb to version 2018-11,3,['tables'],https://github.com/liblouis/liblouis/pull/671,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/671#issuecomment-442989019,"Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>","It seems that zh-tw.yaml was not listed in tests/Makefile.am yet. Can you please add it, then I can see if it passes the Travis checks.
The PR looks good as always. This can probably go in without any change requests, so I'll add it to the 3.8 milestone.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,671,2018-11-29T20:48:10Z,2018-11-30T12:58:53Z,2018-12-07T17:46:54Z,MERGED,True,8110,950,3,https://github.com/school510587,Update zh-tw.ctb to version 2018-11,3,['tables'],https://github.com/liblouis/liblouis/pull/671,https://github.com/school510587,3,https://github.com/liblouis/liblouis/pull/671#issuecomment-442992574,"Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>","Hi @bertfrees,

Should I add this into tests/Makefile.am by my own?
If yes, I'll add it in this PR. Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,671,2018-11-29T20:48:10Z,2018-11-30T12:58:53Z,2018-12-07T17:46:54Z,MERGED,True,8110,950,3,https://github.com/school510587,Update zh-tw.ctb to version 2018-11,3,['tables'],https://github.com/liblouis/liblouis/pull/671,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/671#issuecomment-442992910,"Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>","One request: could you add the following copyright notice at the top of the YAML file?
# Copyright © 2018 Bo-Cheng Jhan
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.

and add the names of the other persons that contributed to the test.
Finally, could you also add anybody missing from the AUTHORS file? The file already contains Bo-Cheng Jhan and Coscell Kao, but none of the others you have mentioned here. If appropriate, i.e. if you think their contribution to the table was substantial enough, please add them.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,671,2018-11-29T20:48:10Z,2018-11-30T12:58:53Z,2018-12-07T17:46:54Z,MERGED,True,8110,950,3,https://github.com/school510587,Update zh-tw.ctb to version 2018-11,3,['tables'],https://github.com/liblouis/liblouis/pull/671,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/671#issuecomment-442993132,"Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>","Should I add this into tests/Makefile.am by my own?

Yes, if that's not too much trouble. Otherwise I can do it myself, no problem.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,671,2018-11-29T20:48:10Z,2018-11-30T12:58:53Z,2018-12-07T17:46:54Z,MERGED,True,8110,950,3,https://github.com/school510587,Update zh-tw.ctb to version 2018-11,3,['tables'],https://github.com/liblouis/liblouis/pull/671,https://github.com/school510587,6,https://github.com/liblouis/liblouis/pull/671#issuecomment-442997458,"Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>","Hi @bertfrees,

Could you help add zh-tw.yaml into Makefile? I can't ensure my modification is consistent with the style of the entire file.
I have added the copyright declaration into zh-tw.yaml with slight modification.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,671,2018-11-29T20:48:10Z,2018-11-30T12:58:53Z,2018-12-07T17:46:54Z,MERGED,True,8110,950,3,https://github.com/school510587,Update zh-tw.ctb to version 2018-11,3,['tables'],https://github.com/liblouis/liblouis/pull/671,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/671#issuecomment-442997846,"Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>","Perfect, thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,671,2018-11-29T20:48:10Z,2018-11-30T12:58:53Z,2018-12-07T17:46:54Z,MERGED,True,8110,950,3,https://github.com/school510587,Update zh-tw.ctb to version 2018-11,3,['tables'],https://github.com/liblouis/liblouis/pull/671,https://github.com/school510587,8,https://github.com/liblouis/liblouis/pull/671#issuecomment-443009193,"Summary of changes:

Fix the locale field of zh-tw.yaml test suite
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Modify dot patterns of dashes for readability reasons

The set of multipass rules was written mainly according to 3 official dictionaries listed in the comment of zh-tw.ctb. Note that some official dictionary web pages are not friendly to blind users. In this case, thanks to the help from 黃偉豪 <hurt.nzsmr@gmail.com>.
Reviewers:

Victor Cai <surfer0627@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>","By the way, other participants I mentioned above are reviewers now, so I didn't propose to add them into AUTHORS.
However, I'll remember to add someone into AUTHORS if his/her support is beyond a reviewer. Thanks for reminding me about this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/672,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/hammera,2,https://github.com/liblouis/liblouis/pull/672#issuecomment-443422033,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","Why again failed the Travis check?
My Linux system compilation and hungarian grade tables related test files works perfecct.
Again have 1 failing check with when happening the travis build.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/672#issuecomment-446556857,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","It is because you changed the name of the table to ""Hungarian fully contracted grade 2 braille"", which is not uniform with the names of other tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/hammera,4,https://github.com/liblouis/liblouis/pull/672#issuecomment-446565553,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","Bert, I founded an another issue with midendnumericmode opcode related, this is affecting only with hu-hu-g1.ctb table:
If a text have for example with 1944-ben text, forward translation is OK (⠼⠁⠊⠙⠙⠤⠃⠑⠝), but backward translation is not.
The back translated string is following:
1944-25n
hu-hu-g2.ctb table is not affected, because the -ban, -ben suffixes abbreviated with -b string.
other affected suffixes, with affecting both two tables, some example strings:
8-ai, 9-ei, 8-a, 9-e
For example, the 8-ai string unicode braille output is ⠼⠓⠤⠁⠊, the backtranslated string is 8-19, not 8-ai.
This testcases easy to reproduce with lou_translate tool.
Have possibility to prevent this mistakes? Before the midendnumeric opcode change, this issues is not happened.
What the best method with your or Davi openion to prevent this issues?
I do context rules, or simple put these strings with proper tables?
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/hammera,5,https://github.com/liblouis/liblouis/pull/672#issuecomment-446566025,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","Ok, now travis build ran succesfully, I always learning a thing.
Thanks Bert the warning my change bug.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/672#issuecomment-446569716,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","Regarding the back-translation issue you mentioned, I think maybe you need a nocontractsign rule. @BueVest what do you think?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/hammera,7,https://github.com/liblouis/liblouis/pull/672#issuecomment-446622253,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","Bert, I tried following rule with hu-hu-g1.ctb table before or after the midendnumericmodechars rule, but not help:
nocontractsign 36-1-24
Look following output with lou_allround utility, I choosed the dotsIO mode:
lou_allround
Press one of the letters in parentheses, then enter.
(t)able, (r)un, (m)ode, (c)ursor, (e)mphasis, (s)pacing, (h)elp,
(q)uit, (f)orward-only, (b)ack-only, show-(p)ositions m(i)nimal.
test-(l)engths.
Command: t
Enter the name of a table: hu-hu-g1.ctb
Command: m
Reset mode? y/n: n
No contractions? y/n: n
Computer Braille at cursor? y/n: n
Dots input and output? y/n: y
Computer Braille left of cursor? y/n: n
Unicode Braille? y/n: n
No undefined dots? y/n: n
Partial back-translation? y/n: n
Command: r
Type something, press enter, and view the results.
A blank line returns to command entry.
8-ai
Translation dot patterns:
3456-125-36-1-24
Back-translation:
8-19
With forward translation rule generated dots full correct (this situation not need put after the - character the 3456 dots before the 1-24 dots.
The backtranslated form is buggy.
Look an another example when lou_allround produce good output with same parameters, the example string is 8-19 (have after the - character with numbers):
root@hammera-H81M-DS2V:/usr/share/liblouis/tables# lou_allround
Press one of the letters in parentheses, then enter.
(t)able, (r)un, (m)ode, (c)ursor, (e)mphasis, (s)pacing, (h)elp,
(q)uit, (f)orward-only, (b)ack-only, show-(p)ositions m(i)nimal.
test-(l)engths.
Command: t
Enter the name of a table: hu-hu-g1.ctb
Command: m
Reset mode? y/n: n
No contractions? y/n: n
Computer Braille at cursor? y/n: n
Dots input and output? y/n: y
Computer Braille left of cursor? y/n: n
Unicode Braille? y/n: n
No undefined dots? y/n: n
Partial back-translation? y/n: n
Command: r
Type something, press enter, and view the results.
A blank line returns to command entry.
8-19
Translation dot patterns:
3456-125-36-3456-1-24
Back-translation:
8-19
Perfect roundtrip!
This situation because have numbers after the - character, the back translation is full correct.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/hammera,8,https://github.com/liblouis/liblouis/pull/672#issuecomment-446644134,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","Bert, no surprise, but again failed the Travis build process, I think because now of course the new added testcases producing failed result with hu-hu-g1_backward.yaml and hu-hu-g2_backward.yaml file when happening the back translation tests.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/672#issuecomment-467392768,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila","Hi @hammera what do you want to do with this PR? I marked the tests that were failing with xfail. These tests were new, so it is not a regression. I think this just makes an existing problem with backtranslation more visible. As far as I'm concerned this can go in.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,672,2018-12-01T11:33:16Z,2019-02-26T14:22:41Z,2019-02-26T14:22:41Z,CLOSED,False,529,3,9,https://github.com/hammera,Fix few issues with hungarian grade1 and grade2 Braille tables,7,['tables'],https://github.com/liblouis/liblouis/pull/672,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/672#issuecomment-467456688,"Hy Chris,
I fixed few issues and added some new rules into the hungarian grade1 and grade2 tables related.
The complete list:


Fix percent sign related issues with tables/hu-hu-g1.ctb and tables/hu-hu-g2.ctb table files related. Since added the midendnumericmodechars opcode with hu-hu-g1.ctb table, the 50% style text not presenting right with hungarian grade1 braille.
Fixed this issue into hu-hu-g1.ctb table with added the endnum % 3456-245-356 dots.


Added midendnumericmodechars related rule into hu-hu-g2.ctb table, similar with the hu-hu-g1.ctb table.
Added into the hu-hu-g2.ctb table the endnum % 3456-245-356 dots.


Correct table metadata into the tables/hu-hu-g2.ctb table, and include the hyph_hu_HU.dic hyphenation table.


Added few missing rules into the hu-hu-g2.ctb table.


Added few word exceptions into tables/hu-exceptionwords.cti file, and added this new words and the numbered percent sign related testcases both the tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.


Add new hungarian grade2 table related test Yaml file into the tests/braille-specs directory. The test file name is tests/braille-specs/hu-hu-g2_harness.yaml.


Added new hungarian grade2 test Yaml file into proper Makefiles.am files.


If this is possible, please merge this fix into the Liblouis github repository master branch version before the 3.8.0 release.
Attila",I believe this is merged in de3e3c4,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,674,2018-12-02T16:22:25Z,2018-12-02T16:56:15Z,2018-12-02T16:56:15Z,CLOSED,False,1,0,1,https://github.com/aaclause,Add euro sign to de-de-comp8.ctb,1,[],https://github.com/liblouis/liblouis/pull/674,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/674,"Fix #673
Related to nvaccess/nvda#8998","Fix #673
Related to nvaccess/nvda#8998",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,674,2018-12-02T16:22:25Z,2018-12-02T16:56:15Z,2018-12-02T16:56:15Z,CLOSED,False,1,0,1,https://github.com/aaclause,Add euro sign to de-de-comp8.ctb,1,[],https://github.com/liblouis/liblouis/pull/674,https://github.com/DrSooom,2,https://github.com/liblouis/liblouis/pull/674#issuecomment-443521093,"Fix #673
Related to nvaccess/nvda#8998",Sadly this isn't the only character which is missing in de-de-comp8.ctb. See my comment in NVDA's issue #1717 for more details. And please also see PR #461.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,674,2018-12-02T16:22:25Z,2018-12-02T16:56:15Z,2018-12-02T16:56:15Z,CLOSED,False,1,0,1,https://github.com/aaclause,Add euro sign to de-de-comp8.ctb,1,[],https://github.com/liblouis/liblouis/pull/674,https://github.com/aaclause,3,https://github.com/liblouis/liblouis/pull/674#issuecomment-443522549,"Fix #673
Related to nvaccess/nvda#8998","Oh sorry, I didn't see PR #461 before. So I close this PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,675,2018-12-03T12:39:37Z,2019-11-13T15:40:37Z,2019-11-13T15:43:09Z,CLOSED,False,1610,492,6,https://github.com/egli,Updated Turkish tables,4,"['waiting', 'needs metadata', 'stale']",https://github.com/liblouis/liblouis/pull/675,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/675,"These tables were attached to #399. I'm adding them to this PR so that they can be discussed.
They appear to be complete rewrites of the original ones. Maybe we should contact the original authors to check if they are happy with the changes. Also I modified the copyright statements to reflect the fact that the tables have completely rewritten. And lastly the tables seem to have problems:
FAIL: check_all_tables.pl
=========================

Duplicate emphasis class: italic
1 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
1 warnings issued
/home/eglic/src/liblouis/tables/tr-g1.ctb:328: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g1.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g1.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr-g2.ctb:330: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g2.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g2.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr.ctb:224: error: Dot pattern \156/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:270: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:271: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:273: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:274: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:301: error: Dot pattern \12345678/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:312: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:333: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:336: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:345: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:353: error: Dot pattern \12456/ is not defined.
11 errors found.
/home/eglic/src/liblouis/tables/tr.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr.ctb failed or timed out
FAIL check_all_tables.pl (exit status: 1)


 contact original authors
 fix problems","These tables were attached to #399. I'm adding them to this PR so that they can be discussed.
They appear to be complete rewrites of the original ones. Maybe we should contact the original authors to check if they are happy with the changes. Also I modified the copyright statements to reflect the fact that the tables have completely rewritten. And lastly the tables seem to have problems:
FAIL: check_all_tables.pl
=========================

Duplicate emphasis class: italic
1 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
1 warnings issued
/home/eglic/src/liblouis/tables/tr-g1.ctb:328: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g1.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g1.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr-g2.ctb:330: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g2.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g2.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr.ctb:224: error: Dot pattern \156/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:270: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:271: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:273: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:274: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:301: error: Dot pattern \12345678/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:312: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:333: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:336: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:345: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:353: error: Dot pattern \12456/ is not defined.
11 errors found.
/home/eglic/src/liblouis/tables/tr.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr.ctb failed or timed out
FAIL check_all_tables.pl (exit status: 1)


 contact original authors
 fix problems",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,675,2018-12-03T12:39:37Z,2019-11-13T15:40:37Z,2019-11-13T15:43:09Z,CLOSED,False,1610,492,6,https://github.com/egli,Updated Turkish tables,4,"['waiting', 'needs metadata', 'stale']",https://github.com/liblouis/liblouis/pull/675,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/675#issuecomment-464088239,"These tables were attached to #399. I'm adding them to this PR so that they can be discussed.
They appear to be complete rewrites of the original ones. Maybe we should contact the original authors to check if they are happy with the changes. Also I modified the copyright statements to reflect the fact that the tables have completely rewritten. And lastly the tables seem to have problems:
FAIL: check_all_tables.pl
=========================

Duplicate emphasis class: italic
1 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
1 warnings issued
/home/eglic/src/liblouis/tables/tr-g1.ctb:328: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g1.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g1.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr-g2.ctb:330: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g2.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g2.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr.ctb:224: error: Dot pattern \156/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:270: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:271: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:273: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:274: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:301: error: Dot pattern \12345678/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:312: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:333: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:336: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:345: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:353: error: Dot pattern \12456/ is not defined.
11 errors found.
/home/eglic/src/liblouis/tables/tr.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr.ctb failed or timed out
FAIL check_all_tables.pl (exit status: 1)


 contact original authors
 fix problems","Hi @ugurgurbuz39 it looks like some dot patterns in tr-g1.ctb and tr.ctb are not defined. Could you have a look?
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,675,2018-12-03T12:39:37Z,2019-11-13T15:40:37Z,2019-11-13T15:43:09Z,CLOSED,False,1610,492,6,https://github.com/egli,Updated Turkish tables,4,"['waiting', 'needs metadata', 'stale']",https://github.com/liblouis/liblouis/pull/675,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/675#issuecomment-464099539,"These tables were attached to #399. I'm adding them to this PR so that they can be discussed.
They appear to be complete rewrites of the original ones. Maybe we should contact the original authors to check if they are happy with the changes. Also I modified the copyright statements to reflect the fact that the tables have completely rewritten. And lastly the tables seem to have problems:
FAIL: check_all_tables.pl
=========================

Duplicate emphasis class: italic
1 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
1 warnings issued
/home/eglic/src/liblouis/tables/tr-g1.ctb:328: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g1.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g1.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr-g2.ctb:330: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g2.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g2.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr.ctb:224: error: Dot pattern \156/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:270: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:271: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:273: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:274: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:301: error: Dot pattern \12345678/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:312: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:333: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:336: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:345: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:353: error: Dot pattern \12456/ is not defined.
11 errors found.
/home/eglic/src/liblouis/tables/tr.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr.ctb failed or timed out
FAIL check_all_tables.pl (exit status: 1)


 contact original authors
 fix problems","Since this removes older tables, some of which were based on an official document (e.g. the computer braille table was based on the Unesco document) it would be appropriate to include references to the used specification.
Also as always some tests would be nice I think.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,675,2018-12-03T12:39:37Z,2019-11-13T15:40:37Z,2019-11-13T15:43:09Z,CLOSED,False,1610,492,6,https://github.com/egli,Updated Turkish tables,4,"['waiting', 'needs metadata', 'stale']",https://github.com/liblouis/liblouis/pull/675,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/675#issuecomment-553458999,"These tables were attached to #399. I'm adding them to this PR so that they can be discussed.
They appear to be complete rewrites of the original ones. Maybe we should contact the original authors to check if they are happy with the changes. Also I modified the copyright statements to reflect the fact that the tables have completely rewritten. And lastly the tables seem to have problems:
FAIL: check_all_tables.pl
=========================

Duplicate emphasis class: italic
1 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
Duplicate emphasis class: underline
Duplicate emphasis class: bold
3 warnings issued
Duplicate emphasis class: italic
1 warnings issued
/home/eglic/src/liblouis/tables/tr-g1.ctb:328: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g1.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g1.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr-g2.ctb:330: error: Dot pattern \12345678/ is not defined.
1 errors found.
/home/eglic/src/liblouis/tables/tr-g2.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr-g2.ctb failed or timed out
/home/eglic/src/liblouis/tables/tr.ctb:224: error: Dot pattern \156/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:270: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:271: error: Dot pattern \12356/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:273: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:274: error: Dot pattern \23456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:301: error: Dot pattern \12345678/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:312: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:333: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:336: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:345: error: Dot pattern \12456/ is not defined.
/home/eglic/src/liblouis/tables/tr.ctb:353: error: Dot pattern \12456/ is not defined.
11 errors found.
/home/eglic/src/liblouis/tables/tr.ctb could not be compiled
lou_checktable on /home/eglic/src/liblouis/tables/tr.ctb failed or timed out
FAIL check_all_tables.pl (exit status: 1)


 contact original authors
 fix problems",Hi @ugurgurbuz39 I'm going to close this PR as there seems to be no progress. If you would like to move forward with this feel free to re-open,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,676,2018-12-11T19:10:54Z,2019-03-29T18:30:06Z,2019-03-29T18:30:06Z,CLOSED,False,438,408,1,https://github.com/MikeGray-APH,Added modified letters,1,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/676,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/676,"There are two test failing in master branch now, not as a result of this branch.","There are two test failing in master branch now, not as a result of this branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,676,2018-12-11T19:10:54Z,2019-03-29T18:30:06Z,2019-03-29T18:30:06Z,CLOSED,False,438,408,1,https://github.com/MikeGray-APH,Added modified letters,1,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/676,https://github.com/MikeGray-APH,2,https://github.com/liblouis/liblouis/pull/676#issuecomment-462862029,"There are two test failing in master branch now, not as a result of this branch.",I was wondering if there is any holdup to this.  I have other pull requests coming.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,676,2018-12-11T19:10:54Z,2019-03-29T18:30:06Z,2019-03-29T18:30:06Z,CLOSED,False,438,408,1,https://github.com/MikeGray-APH,Added modified letters,1,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/676,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/676#issuecomment-462967603,"There are two test failing in master branch now, not as a result of this branch.","Sorry I missed this one.
There are a lot of things happening in this commit and it's not easy to see what exactly. It looks like a lot of it is just moving things around. Would it be possible to add some tests to explain how this commit changes the behavior of the table?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,676,2018-12-11T19:10:54Z,2019-03-29T18:30:06Z,2019-03-29T18:30:06Z,CLOSED,False,438,408,1,https://github.com/MikeGray-APH,Added modified letters,1,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/676,https://github.com/MikeGray-APH,4,https://github.com/liblouis/liblouis/pull/676#issuecomment-468024637,"There are two test failing in master branch now, not as a result of this branch.","The only thing this does is to rearrange the entries in unicode order, along with some additional letters.  This request was made at the request of James Bowden",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,676,2018-12-11T19:10:54Z,2019-03-29T18:30:06Z,2019-03-29T18:30:06Z,CLOSED,False,438,408,1,https://github.com/MikeGray-APH,Added modified letters,1,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/676,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/676#issuecomment-468074503,"There are two test failing in master branch now, not as a result of this branch.","Could you or James please put the added letters in a test? Even if I would like to do it myself, I can't, because everything is lumped into a single commit. I saw on the mailing list that some time ago James asked about the test format but we never received any tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,676,2018-12-11T19:10:54Z,2019-03-29T18:30:06Z,2019-03-29T18:30:06Z,CLOSED,False,438,408,1,https://github.com/MikeGray-APH,Added modified letters,1,"['waiting', 'tables', 'needs test']",https://github.com/liblouis/liblouis/pull/676,https://github.com/MikeGray-APH,6,https://github.com/liblouis/liblouis/pull/676#issuecomment-476219957,"There are two test failing in master branch now, not as a result of this branch.",I do not have really have the time either.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,677,2018-12-12T15:28:49Z,2019-02-18T15:21:33Z,2019-05-28T13:30:57Z,MERGED,True,180,0,1,https://github.com/egli,Extend the German 8 dot computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/677,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/677,"Fixes #654
Fixes #388
Fixes #673","Fixes #654
Fixes #388
Fixes #673",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,677,2018-12-12T15:28:49Z,2019-02-18T15:21:33Z,2019-05-28T13:30:57Z,MERGED,True,180,0,1,https://github.com/egli,Extend the German 8 dot computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/677,https://github.com/taymun26,2,https://github.com/liblouis/liblouis/pull/677#issuecomment-451693961,"Fixes #654
Fixes #388
Fixes #673","Yes, this is basically the revert of the commit mentioned plus some more symbols.
And it is my consent to re-integrate the braille table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/683,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,2,https://github.com/liblouis/liblouis/pull/683#issuecomment-452010666,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Hi Bert,
Please feel free to adjust the country code to meet with the standard like Khmer as Km, Myanmar as My etc. For the official links to the specific Braille codes, wikipedia should be a good one. However, it doesn't give the full rules and Braille codes (especially for the contracted version). I haven't found any official site to publish this this detailed info, except through our partner organizations. Please feel free to let me know for any questions so I can check with the partners. Any other sources would be very thankful and highly appreciated.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/683#issuecomment-452024518,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Wikipedia isn't detailed enough, that is the problem. It doesn't necessarily have to be an official document, or from an official site. Some unofficial reference document is also fine. It's not because I have specific questions now, it's for the case there is a dispute over the implementation later that a reference document could possibly clear up.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,4,https://github.com/liblouis/liblouis/pull/683#issuecomment-452600672,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",So you already received the info from me to you through list. Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/683#issuecomment-494372885,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Hi @danghoaiphuc  we would like to merge this PR, but we are still missing tests and references to the braille codes that you are using.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/683#issuecomment-494373246,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","See our conversation on the mailing list: https://www.freelists.org/post/liblouis-liblouisxml/Submiting-New-Braille-Tables,11",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,7,https://github.com/liblouis/liblouis/pull/683#issuecomment-494873508,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Hi Bert and Christian,
I am very sorry for not having much time to do requests that you have requested. I will have some more time in July to follow all requests that you asked and hope to have the tables merged in the release scheduled in September. If anyone can be of help of this testing, it should be highly appreciated.
I am sorry for this because my colleagues and I are working on fixing bugs for the Burmese text-to-speech engine for both Android and Windows. It's really a big need for blind community in Myanmar firstly as our Burmese language TTS is the first one for them to use with screen readers.
I must admit that I haven't tried with YAML test so my high priority for now is to improve our Myanmar TTS for Burmese language at the moment. Again, sorry Bert and Christain for the inconvenience.
Will do my best to follow your request right after having more time with the Myanmar TTS project.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/683#issuecomment-494981230,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",Hi Phuc. No worries. We are not in a hurry. Take your time. The TTS project sounds important too.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/tmthywynn8,9,https://github.com/liblouis/liblouis/pull/683#issuecomment-501946166,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Based on the Rules and Guidelines for Vietnamese Braille English document, I may be able to construct some tests for grade 1 Vietnamese braille easily enough. According to the listserve post though, there may be differences depending on which grade 2 table is used, and as I don't know Vietnamese braille at all, constructing tests for contracted braille would be rather difficult to verify without any form of official documentation or guidelines. I just need to have a good understanding of (1) the guidelines and how that translates over to the Liblouis braille table, and (2) which character set we are testing against—VNI and Unicode being the most popular forms of electronically written Vietnamese.
In theory, based on the guidelines above, we can test whether the current Vietnamese table by Harri Pasanen conforms to the rules outlined, apart from the specific cases noted, and if it does fit for the most part, @danghoaiphuc's set of tables may supersede what's there already as it's written by a native user of Vietnamese braille based on the published guidelines from the same country.
Let me wrap my head around the table, and see if I can contribute in any useful way before doing anything, since I at least understand conversational Vietnamese plus have a braille display to make sure the table conforms with the rules. No promises though, as constructing such tests may be beyond my abilities regardless of understanding, as I'm not usually the one to think of edge cases nor would I be using this table in my daily life.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/683#issuecomment-502022864,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","@tmthywynn8 Thanks for offering your help!
I don't know VNI encoding, and I don't know if Liblouis could support it in theory. In any case, YAML only supports UTF-8, UTF-16 and UTF-32 anyway, and all Liblouis tables are currently UTF-8. So there's not much choice really.
Regarding the old table by Harri Pasanen, he said that:

I don’t know Vietnamese, I made my table based on some unofficial documentation, and it was further improved by Nguyễn Đức Anh Minh. He is probably in better position to give feedback on the new table.

But I didn't hear from Nguyễn Đức Anh Minh. So I don't know if we need to put much effort in preserving the table.
Harri also attached his latest version of the table, which appears to contain a couple of improvements. I can push these changes if anyone is interested.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/tmthywynn8,11,https://github.com/liblouis/liblouis/pull/683#issuecomment-517960014,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","In theory, VNI is usually displayed as a two-byte character-thing to screen readers and the like, so it's technically possible to support it, but I think the character definition opcodes are usually limited to just one character (not counting uplow), no?
The major problem is I don't know where to start for test construction. When I worked on computer braille, there were examples of translation given by the transcription manual, but for this I'd have to start essentially from scratch. I'll have to look through the existing unit tests, but is there a decent YAML for grade 1 with a systematic approach to all possible combinations in that braille system? I could then gleam from there the methodology and do the same for Vietnamese.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/683#issuecomment-521288663,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","In theory, VNI is usually displayed as a two-byte character-thing to screen readers and the like, so it's technically possible to support it, but I think the character definition opcodes are usually limited to just one character (not counting uplow), no?

OK. So yes, it would indeed be possible to support it. Character definition rules can only have one character, but that character can be 2 bytes wide (or 4 bytes in the 32-bit version of Liblouis). So whatever the VNI encoding is of a character, it should be possible to define it in the table as a \xhhhh escape sequence. Whether you can encode the table itself in VNI, I'm not sure.
Anyway, we have to ask @danghoaiphuc to be sure, but I assume that the table is designed for Unicode input.

[...] is there a decent YAML for grade 1 with a systematic approach to all possible combinations in that braille system? I could then gleam from there the methodology and do the same for Vietnamese.

I don't think there is a single approach that you can apply to any braille system. I wouldn't know which example you could best use for the Vietnamese case. I have no idea whatsoever what kind of language Vietnamese is, so I'm afraid I can't say much useful. A more in-depth documentation of the braille system with examples would have been useful. But according to Phuc this is all that exists.
By the way, @danghoaiphuc, your website https://saomaicenter.org seems to be down. Are you aware? I wanted to look at the https://saomaicenter.org/en/blog/rules-and-guidelines-vietnamese-braille document.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,13,https://github.com/liblouis/liblouis/pull/683#issuecomment-521507913,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Sorry for getting back to @tmthywynn8  and @bertfrees so late. I would have some more time in September to improve the Vietnamese tables and update the document reference to Khmer, Myanmar and Vietnamese Braille codes.
Our website is still working, please double-check.
Brief intro about char sets we have used so far in Vietnam. Old char sets are ABC and VNI based on 1-byte encoding. And now official charset is unicode but even Vietnamese unicode also exists two different encoding method (the built-in and composit unicode).
The Vietnamese tables that I have created can handle both unicode types. By default, it converts into Braille from the built-in unicode (official one). In case it meets with composit unicode characters, I use the correct optcode to convert from composit to the default one then forward to LibLouis to translate into Braille.
With that method, I think it's not a problem to convert from old charsets like ABC or VNI but I don't think it's a good solution to let Liblouis handles these tasks. Users should use other conversion tool like Unikey to convert from old charsets to the official Vietnamese Unicode. Otherwise, it might conflict with other characters...
Harry's table works well so far but still lacks many features + some issues. My tables works quite well especially with the forward translation but backward needs some more test.
@tmthywynn8 I am very thankful if you can help in constructing the test and improve the tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/683#issuecomment-521566768,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","OK website works now. Looks like it was down yesterday.
Thanks for the information about encoding. This info should definitely go into the table header.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/683#issuecomment-728075820,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",@danghoaiphuc Somebody needs to drive this PR forward otherwise I'm afraid we'll have to close it soon. It would be a real shame to let this promising work go lost. But at the moment it is just not solid enough to replace an existing Liblouis table. First and foremost: it lacks some basic documentation.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,16,https://github.com/liblouis/liblouis/pull/683#issuecomment-728099520,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","@bertfrees I am sorry for this late update.
Will work on it and get back to you soon. If anyone could give me a hand on writing yaml test files, that would be great. I am ready to provide test cases...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/683#issuecomment-728162100,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Thanks. Don't worry about the YAML format. We can of course help with that.
Congratulations with the funding you received from DAISY, by the way.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,18,https://github.com/liblouis/liblouis/pull/683#issuecomment-728796697,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Thanks @bertfrees
Fyi, I have updated the meta data info for all main Braille tables, 1) Vietnamese (vi-vn-g0/g1/g2/saigon-g1.ctb), 2) Khmer (km-g1.ctb) and 3) Burmese/Myanmar (my-g1/g2.ctb). I don't provide meta data for include files. Here is the link to download the zipped file:
Braille Tables.zip
For Vietnamese Braille spec: in the header, I provided the link to its documentation resource.
For Khmer Braille, here is the document shared by Krousar Thmey school for the Blind in Cambodia:
Khmer Braille Signs.pdf
Please note, I created the table to handle unicode Khmer characters.
And via Wikipedia at: https://en.wikipedia.org/wiki/Cambodian_Braille
For Burmese:
MyanmarBrailleGrade1Uncontracted.xlsx
MyanmarBrailleGrade2Contracted.zip
Myanmar Braille documents were provided to me by the Myanmar Assistive Technology Research and Development Center.
And Myanmar Braille uncontracted is also available via Wikipedia at: https://en.wikipedia.org/wiki/Burmese_Braille
Please let me know if you need further information.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,19,https://github.com/liblouis/liblouis/pull/683#issuecomment-733937615,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Thanks very much. This helps a lot!
The Saigon table points to the same page as the main Vietnamese contracted braille table though, and this page doesn't make a distinction between the two systems.
I'll put the Khmer document on our website. Not sure yet what I'm gonna do with all the Excel documents. Maybe I'll just point to the Github attachment.
There is another issue that I just discovered while looking at the tables again: I don't like the vi-ueb-math.ctb very much. I wonder if you could eliminate it (and just replace it with en-ueb-math.ctb) if you put the include rule somewhere else? If we would have some tests that demonstrate the issue with using en-ueb-math.ctb (if I understand correctly it's a back-translation issue) we could try to solve it in a better way.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,20,https://github.com/liblouis/liblouis/pull/683#issuecomment-734676366,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Thanks @bertfrees
Fyi, I already deleted the vi-ueb-math.ctb and made change to include en-ueb-math.ctb
And I also updated the document resource link of vi-saigon-g1.ctb to: https://www.saomaicenter.org/en/blog/accessible-formats/vietnamese-saigon-braille-grade-1
Here is the zipped file containing all tables for Khmer, Myanmar and Vietnamese:
Braille Tables.zip
Please let me know if I miss anything.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/683#issuecomment-734769213,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",@danghoaiphuc Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/683#issuecomment-779399183,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","@danghoaiphuc Can you have a look at the file vi-g1.yaml? These tests stem from Harri Pasanen's version. Does this make any sense whatsoever?
If you can find the time, please consider adding some tests of your own.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/egli,23,https://github.com/liblouis/liblouis/pull/683#issuecomment-792739339,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",Hi @danghoaiphuc this PR almost made it into the 3.17 release. We were really torn whether we should include it. But the failing tests really make it hard to include a PR. Can you have a look at the tests in vi-g1.yaml and let us know if these tests make any sense? Thank you.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/egli,24,https://github.com/liblouis/liblouis/pull/683#issuecomment-792740478,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","@bertfrees can you push the fix for the problem with
Best match: /home/runner/work/liblouis/liblouis/tables/vi-saigon-g1.ctb (15)
lou_checkyaml:./braille-specs/vi-g1.yaml:6: Table query did not match expected table: expected 'vi-vn-g1.ctb' but got 'vi-saigon-g1.ctb'",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,25,https://github.com/liblouis/liblouis/pull/683#issuecomment-792744030,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",Done,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/egli,26,https://github.com/liblouis/liblouis/pull/683#issuecomment-848623593,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",Hi @danghoaiphuc can you have a look at the tests in vi-g1.yaml and let us know if these tests make any sense? Thank you.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,27,https://github.com/liblouis/liblouis/pull/683#issuecomment-850122845,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Hi @egli,
Yes, it works fine. In addition, we have used these Vietnamese tables to translate thousands of Vietnamese documents.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,28,https://github.com/liblouis/liblouis/pull/683#issuecomment-850283487,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","@danghoaiphuc That's great. However you misunderstood the question. We'd like you to help us understand how it is possible that the old and new table for Vietnamese differ so much. Actually, to be more precise, we can't tell how much they differ because the test data we have for Vietnamese is so limited, but for the data that we have, namely numbers, there is a very clear difference.
As you know we previously decided to remove the old table, because it was written by a non-native. It was however based on some unofficial documentation and was done with help from a native, so there must be some value in it.
Whenever we're in a situation like this where there is some doubt, we tend to be conservative. So basically the burden is on you to convince us that your table is better.
Now, back to the number question: have you looked at the test file? Can you give us any insights about why this approach could have been chosen for the current table? Is this something you have seen before? Does an alternative (unofficial) braille system exist perhaps? It is obviously based on the French numbering system, which makes sense because according to Wikipedia the Vietnamese braille system is very close to French braille.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,29,https://github.com/liblouis/liblouis/pull/683#issuecomment-850331387,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Hi @bertfrees
Fyi, below are main differences between old and new Vietnamese tables:


Numbers and basic math expressions, Vietnam has published a new official standard since 2010. And many new Braille math signs + rules are based on UEB as the ministry of Education they do base on Duxbury software.
You are right. Vietnamese Braille rules are quite similar to French but actually it's mixed with English and Russian rules as well.
So the new table has been addressed those while the old one hasn't.


Vietnamese has different unicode char sets as well as different old 1-byte charsets between the North and the South. However, it's official standard. So we make certain LibLouis optcode like ""correct"" to automatically convert characters from unofficial charsets into official ones before processing the forward translation.
That's the feature which old table doesn't have.


Many new rules are added such as word and phrase caps, indicators and punctuations.
Processing to place correctly the accents in different situations. For instance: both in print are correct like ""òa"" or ""oà, but grave sign must place before letter o in both cases. The old table just places the accent right before the letter attached with the accent for many cases.


All existing Vietnamese Braille contracted tables are shared in my package to you, including partial and full contractions.


I am sorry for not commiting so much for the tables to be included in LibLouis before due to my other commitment recently.
Please let me know if you need further information. Many thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,30,https://github.com/liblouis/liblouis/pull/683#issuecomment-850523321,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Hi @bertfrees and @egli
I just read through the LibLouis document and created this vi-vn-g0.zipYAML test file for the table vi-vn-g0.ctb (uncontracted Vietnamese). Github doesn't give me to attach .yaml file so I zipped it.
I am not quite familiar with yaml test file structure of LibLouis, so please help me check it.
I use ""unicode.dis"" for display
For other Vietnamese contracted tables are basically from this one except contracted forms. Therefore, if this works fine, others should be too.
I will create test files for those contracted tables in the future.
Many thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,31,https://github.com/liblouis/liblouis/pull/683#issuecomment-854040712,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","@danghoaiphuc Thank you for the information. That helps!
Thanks for the test. There are a number of them that are failing. I'll list the failures below, can you please tell me what is wrong? If the tests are wrong we'll fix them. If there are issues in the table, we can either add flags to the tests to indicate this, or we fix the table.
There are two failures in the forward direction. They first is presumably a wrong test. The second I'm not sure.
Input:    '234'
Expected: '⠼⠁⠂⠃⠉⠙'
Received: '⠼⠃⠉⠙'
Input:    'HOA THẮM TƯƠI MUÔN ĐỜI!'
Expected: '⠨⠨⠓⠕⠁ ⠞⠓⠔⠜⠍ ⠞⠳⠪⠊ ⠍⠥⠹⠝ ⠙⠰⠪⠊⠖⠨⠅'
Received: '⠨⠨⠓⠕⠁ ⠞⠓⠔⠜⠍ ⠞⠳⠪⠊ ⠍⠥⠹⠝ ⠮⠰⠪⠊⠖⠨⠅'
In the backward direction there are 5 failures:
Input:    '⠼⠁⠂⠃⠉⠙'
Expected: '234'
Received: '1,234'
Input:    '⠼⠁⠠⠁⠃'
Expected: '1ab'
Received: '1ạb'
Input:    '⠨⠨⠓⠕⠁ ⠞⠓⠔⠜⠍ ⠞⠳⠪⠊ ⠍⠥⠹⠝ ⠙⠰⠪⠊⠖⠨⠅'
Expected: 'HOA THẮM TƯƠI MUÔN ĐỜI!'
Received: 'HOA THẮM TƯƠI MUÔN DỜI!'
Input:    '⠔⠑ ⠰⠑ ⠢⠑ ⠤⠑ ⠠⠑ ⠣ ⠔⠣ ⠰⠣ ⠢⠣ ⠤⠣ ⠠⠣'
Expected: 'é è ẻ ẽ ẹ ê ế ề ể ễ ệ'
Received: 'é è ẻ ẽ ẹ   ề  ễ ệ'
Input:    '⠓⠔⠕⠁ ⠓⠔⠕⠁ ⠓⠰⠕⠁ ⠓⠰⠕⠁ ⠓⠢⠕⠁ ⠓⠢⠕⠁ ⠇⠤⠕⠁ ⠇⠤⠕⠁ ⠓⠠⠕⠁ ⠓⠠⠕⠁'
Expected: 'hóa hoá hòa hoà hỏa hoả lõa loã họa hoạ'
Received: 'hoá hoá hoà hoà hoả hoả loã loã hoạ hoạ'",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/danghoaiphuc,32,https://github.com/liblouis/liblouis/pull/683#issuecomment-854628791,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS","Hi @bertfrees
Please download new YAML test file here:
vi-vn-g0.zip
and see my replies below of each issue. Many thanks for checking.
Forward issues:
Input: '234'
Expected: '⠼⠁⠂⠃⠉⠙'
Received: '⠼⠃⠉⠙'

This might cause due to the input including comma sign, seperating between two input numbers 1 and 2 so LibLouis tool might skip and just get the part after comma sign? I checked from our Braille translator, it's correct.

Input: 'HOA THẮM TƯƠI MUÔN ĐỜI!'
Expected: '⠨⠨⠓⠕⠁ ⠞⠓⠔⠜⠍ ⠞⠳⠪⠊ ⠍⠥⠹⠝ ⠙⠰⠪⠊⠖⠨⠅'
Received: '⠨⠨⠓⠕⠁ ⠞⠓⠔⠜⠍ ⠞⠳⠪⠊ ⠍⠥⠹⠝ ⠮⠰⠪⠊⠖⠨⠅'

Sorry, I put wrong expected result. It should be correct with the received output as: '⠨⠨⠓⠕⠁ ⠞⠓⠔⠜⠍ ⠞⠳⠪⠊ ⠍⠥⠹⠝ ⠮⠰⠪⠊⠖⠨⠅'
Before 2010, letter ""đ"" should be translated as dots 145. But from 2010, it should be translated as dots 2346.

In the backward direction there are 5 failures:
Input: '⠼⠁⠂⠃⠉⠙'
Expected: '234'
Received: '1,234'

Same. It's already removed from the test file.

Input: '⠼⠁⠠⠁⠃'
Expected: '1ab'
Received: '1ạb'

Can you mark it as backward-translate error flag. I will fix it in next release.

Input: '⠨⠨⠓⠕⠁ ⠞⠓⠔⠜⠍ ⠞⠳⠪⠊ ⠍⠥⠹⠝ ⠙⠰⠪⠊⠖⠨⠅'
Expected: 'HOA THẮM TƯƠI MUÔN ĐỜI!'
Received: 'HOA THẮM TƯƠI MUÔN DỜI!'

Same as forward. It should be correct with new test file.

Input: '⠔⠑ ⠰⠑ ⠢⠑ ⠤⠑ ⠠⠑ ⠣ ⠔⠣ ⠰⠣ ⠢⠣ ⠤⠣ ⠠⠣'
Expected: 'é è ẻ ẽ ẹ ê ế ề ể ễ ệ'
Received: 'é è ẻ ẽ ẹ   ề  ễ ệ'

Can you mark it as backward-translate error flag. I will fix it in next release. It might have issues with two letters ê and ế for backward translation.

Input: '⠓⠔⠕⠁ ⠓⠔⠕⠁ ⠓⠰⠕⠁ ⠓⠰⠕⠁ ⠓⠢⠕⠁ ⠓⠢⠕⠁ ⠇⠤⠕⠁ ⠇⠤⠕⠁ ⠓⠠⠕⠁ ⠓⠠⠕⠁'
Expected: 'hóa hoá hòa hoà hỏa hoả lõa loã họa hoạ'
Received: 'hoá hoá hoà hoà hoả hoả loã loã hoạ hoạ'

I moved this to test flag ""forward"" instead of both_direction. Because, this is to check the option to check for only forward-translate input of different cases of Vietnamese print accent placements.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,683,2019-01-07T15:19:17Z,2021-06-07T15:08:36Z,2021-06-07T15:28:52Z,MERGED,True,7792,307,22,https://github.com/bertfrees,"Khmer, Burmese and Vietnamese",15,['tables'],https://github.com/liblouis/liblouis/pull/683,https://github.com/bertfrees,33,https://github.com/liblouis/liblouis/pull/683#issuecomment-855925348,"Some observations

 The tables have no metadata yet. I am working on this (but need some help).
 The file names (kh, mm) do not match the official language tags (km, my).
 There was already a table for Vietnamese created by Harri Pasanen. We have to decide what to do with it.
 Run checktable on the tables.
 Add the tables to tables/Makefile.am
 Some tests would be nice.
 Links to official documentation of the braille codes would be nice.
 Update NEWS
 Update AUTHORS",@danghoaiphuc Thanks very much.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/josteinaj,1,https://github.com/liblouis/liblouis/pull/687,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/687#issuecomment-455188356,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)",Is Kari's latest comment regarding punctuation incorporated? It might be important to know which signs and punctuation cancel the uppercase state and which don't. Liblouis has a way to control this.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/687#issuecomment-455203808,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","When a uppercase passage ends with punctuation or numbers, it is not obvious whether the closing indicator should come after it or not. Your tests say that it should come after. Is this indeed the case? Liblouis does it correctly in the case of punctuation, but not in the case of a number. This tests fails:
Input:    'SAK 27/07 SØKNAD OM ØKONOMISK STØTTE FOR 2007'
Expected: '⠠⠠⠠⠎⠁⠅ ⠼⠃⠛⠌⠼⠚⠛ ⠎⠪⠅⠝⠁⠙ ⠕⠍ ⠪⠅⠕⠝⠕⠍⠊⠎⠅ ⠎⠞⠪⠞⠞⠑ ⠋⠕⠗ ⠼⠃⠚⠚⠛⠠' (length 52)
Received: '⠠⠠⠠⠎⠁⠅ ⠼⠃⠛⠌⠼⠚⠛ ⠎⠪⠅⠝⠁⠙ ⠕⠍ ⠪⠅⠕⠝⠕⠍⠊⠎⠅ ⠎⠞⠪⠞⠞⠑ ⠋⠕⠗⠠ ⠼⠃⠚⠚⠛' (length 52)

I don't think there is currently a way to control this, but we could come up with a new opcode for that.
By the way is there some official documentation about these new ""OUP"" rules? Would be nice to have some comments about this in the test and table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/687#issuecomment-455215525,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","After some more investigation, it turns out there is no difference between punctuation or numbers, what matters is whether the word (sequence of non-space characters) consists of only non-letters or not. ""2007"" does not contain a letter, so it is not included in the passage. ""TORNER."" contains letters, so it is included in the passage. Note that ""27/07"" also contains no letters, however it is included in the passage because it is followed by the uppercase word ""SØKNAD"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/josteinaj,5,https://github.com/liblouis/liblouis/pull/687#issuecomment-455562715,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","I've updated the test so that the dot 6 ends before the punctuation of the last capitalized word.
I'm not sure about where the dot 6 should be in ""FOR 2007"" yet.
Will check if there's documentation for this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/687#issuecomment-455599408,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","Thanks. So the ""FOR 2007"" case would be the only issue, if the dot is expected to come after the number. Not sure how we could do this in Liblouis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/687#issuecomment-494316992,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)",See also my last comment in nlbdev/pipeline#214. Waiting for more clarifications.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/687#issuecomment-727876253,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)",@josteinaj what is the status of this PR?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/josteinaj,9,https://github.com/liblouis/liblouis/pull/687#issuecomment-727885371,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)",I'll check with @KariRudjord.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/josteinaj,10,https://github.com/liblouis/liblouis/pull/687#issuecomment-765286953,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","@egli @bertfrees I haven't heard from @KariRudjord yet, she's quite busy. But I think the tests looks correct, so feel free to merge this if this works. We can revisit this in the future if it needs adjustments.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/687#issuecomment-906373107,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","Hi, I'd like to clean up the open PRs. There hasn't been much activity on this particular PR lately. Please try to move it forward otherwise I will close it after the next release. If you do not have any time now but you feel that we need to come back to this issue at a later point you can always re-open it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/josteinaj,12,https://github.com/liblouis/liblouis/pull/687#issuecomment-908304330,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","The current behavior of liblouis as described in Berts comment (#687 (comment)) is probably fine.
OUP (@larsbjorndal or @KariRudjord) can decide later where the dot should be in the ""FOR 2007"" case.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/josteinaj,13,https://github.com/liblouis/liblouis/pull/687#issuecomment-908310951,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","It seems that this was merged in fe5ce6f already, so I'm closing this one.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/687#issuecomment-908331348,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","Aha, seems I included the first commit in 8c2c9d9. But not the second commit. Are we sure it's not needed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/josteinaj,15,https://github.com/liblouis/liblouis/pull/687#issuecomment-909092164,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)","@bertfrees I don't know why this PR wasn't updated automatically but I added this commit, which is the same as the second commit but with fixed punctuation, to josteinaj/liblouis:norwegian-threedot-capital-capitalization: josteinaj@7558a92",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/josteinaj,16,https://github.com/liblouis/liblouis/pull/687#issuecomment-909093711,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)",I opened the PR again and some stuff happened. The commit is now available in this PR: 7558a92,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,687,2019-01-17T11:15:00Z,2021-11-24T11:08:06Z,2021-11-24T11:08:06Z,MERGED,True,2,1,1,https://github.com/josteinaj,Norwegian: fix tests for handling of punctuation when there's two or more capital words,1,['tables'],https://github.com/liblouis/liblouis/pull/687,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/687#issuecomment-909107720,"See: nlbdev/pipeline#214
Currently capitalized words are prefixed with ""⠠⠠"" (6-6). When there are multiple capitalized words after each other, then the first word should be prefixed with ""⠠⠠⠠"" (6-6-6) and the last word should be suffixed with ""⠠"" (6).
(PR only contains updated tests. Needs implementation.)",Thanks. Rebased onto master.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,690,2019-01-28T16:34:47Z,2021-09-14T09:35:26Z,2021-09-14T10:12:26Z,CLOSED,False,5,2,1,https://github.com/jdatray,a few changes/additions to chardefs.cti,1,"['waiting', 'tables', 'needs test', 'stale']",https://github.com/liblouis/liblouis/pull/690,https://github.com/jdatray,1,https://github.com/liblouis/liblouis/pull/690,"This change:
Corrects dot pattern for vulgar fraction three quarters, and adds a few currency symbols.","This change:
Corrects dot pattern for vulgar fraction three quarters, and adds a few currency symbols.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,690,2019-01-28T16:34:47Z,2021-09-14T09:35:26Z,2021-09-14T10:12:26Z,CLOSED,False,5,2,1,https://github.com/jdatray,a few changes/additions to chardefs.cti,1,"['waiting', 'tables', 'needs test', 'stale']",https://github.com/liblouis/liblouis/pull/690,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/690#issuecomment-464075362,"This change:
Corrects dot pattern for vulgar fraction three quarters, and adds a few currency symbols.","Hi @jdatray I approved the changes (and will most likely merge unless my co-maintainer @bertfrees objects :-))
But I'd still like to have a little addition to the yaml tests (probably one of tests/braille-specs/en-ueb-*.yaml) that test your additions.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,690,2019-01-28T16:34:47Z,2021-09-14T09:35:26Z,2021-09-14T10:12:26Z,CLOSED,False,5,2,1,https://github.com/jdatray,a few changes/additions to chardefs.cti,1,"['waiting', 'tables', 'needs test', 'stale']",https://github.com/liblouis/liblouis/pull/690,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/690#issuecomment-464093572,"This change:
Corrects dot pattern for vulgar fraction three quarters, and adds a few currency symbols.",See my remark at #691 (comment) about this very same commit. These changes don't affect UEB at all actually because chardefs.cti is not included in any UEB table.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,690,2019-01-28T16:34:47Z,2021-09-14T09:35:26Z,2021-09-14T10:12:26Z,CLOSED,False,5,2,1,https://github.com/jdatray,a few changes/additions to chardefs.cti,1,"['waiting', 'tables', 'needs test', 'stale']",https://github.com/liblouis/liblouis/pull/690,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/690#issuecomment-464777779,"This change:
Corrects dot pattern for vulgar fraction three quarters, and adds a few currency symbols.",Hi @jdatray I'd like to merge this but I'd like to have a test for the tree additions. Let me know if you need any help.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,690,2019-01-28T16:34:47Z,2021-09-14T09:35:26Z,2021-09-14T10:12:26Z,CLOSED,False,5,2,1,https://github.com/jdatray,a few changes/additions to chardefs.cti,1,"['waiting', 'tables', 'needs test', 'stale']",https://github.com/liblouis/liblouis/pull/690,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/690#issuecomment-494754775,"This change:
Corrects dot pattern for vulgar fraction three quarters, and adds a few currency symbols.",@jdatray Any chance you could provide us with that test? Then we can include this change in the 1.10 release. Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,690,2019-01-28T16:34:47Z,2021-09-14T09:35:26Z,2021-09-14T10:12:26Z,CLOSED,False,5,2,1,https://github.com/jdatray,a few changes/additions to chardefs.cti,1,"['waiting', 'tables', 'needs test', 'stale']",https://github.com/liblouis/liblouis/pull/690,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/690#issuecomment-906373342,"This change:
Corrects dot pattern for vulgar fraction three quarters, and adds a few currency symbols.","Hi, I'd like to clean up the open PRs. There hasn't been much activity on this particular PR lately. Please try to move it forward otherwise I will close it after the next release. If you do not have any time now but you feel that we need to come back to this issue at a later point you can always re-open it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/jdatray,1,https://github.com/liblouis/liblouis/pull/691,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/jdatray,2,https://github.com/liblouis/liblouis/pull/691#issuecomment-458567029,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","Thanks for the catch. This is now updated.

James",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/691#issuecomment-458595208,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".",Did you push your changes?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/jdatray,4,https://github.com/liblouis/liblouis/pull/691#issuecomment-458609338,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","I have pushed the changes to the chardefs table. I have not made any changes yet to the testing tables, I need to study that subject matter first.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/691#issuecomment-458611078,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","I have pushed the changes to the chardefs table.

I cannot see any commit. Did you push it to github?

I have not made any changes yet to the testing tables, I need to study that subject matter first.

No rush :-), whenever you're ready.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/jdatray,6,https://github.com/liblouis/liblouis/pull/691#issuecomment-458615478,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","I did a commit –amend, the commit number is: c82e779

I also pushed it to the chardefs_donate branch. Let me know if you don’t find it there, or if there is another way I should have handled making the update.

James",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/691#issuecomment-464072777,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","Hi james, sorry for the trouble, but afaik you have to push to the en-ueb-g2_donate branch. And maybe since you did a --amend you might have to force push. Let me know if you have any trouble.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/691#issuecomment-464091883,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","Note that chardefs.cti is included in a lot of tables so we have to be careful with changes. I would feel more comfortable if there were test cases for specific languages (presumably UEB) that explain how the behavior needs to change, and then we can make the right changes in the right tables based on that info.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/jdatray,9,https://github.com/liblouis/liblouis/pull/691#issuecomment-464172814,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","Hello. I’d like to get your take on something.

In the edit to chardefs.cti, one changed line is a correction to a dot pattern for vulgar fraction three quarters.

The additions are for some currency symbols. I found the commented-out yen sign in chardefs.cti, so I uncommented it, added a dot pattern and a few currency symbol rules such as for euros, franc and Naira.

I later found that en-ueb-chardefs.uti contains these currency entries. However, en-ueb-chardefs.uti is only included by en-ueb-g1.ctb. We wanted to get the currency symbols into the en-us tables. Would it be better to move the currency symbols into US-English-specific  tables, or leave them in chardefs.cti? I suppose, at a minimum, these symbols should be added to en-us-g1.ctb. What would you advise?

Chardefs.cti is included by:
en-in-g1.ctb
en-us-g1.ctb
en-us-interline.ctb
en-us-mathtext.ctb
ko-2006.cti
ko.cti
mn-MN-common.cti
nemeth.ctb
nemeth_edit.ctb
ru-compbrl.ctb
ru-litbrl.ctb
ru-ru-g1.utb

Note that JAWS added back in the nemeth tables for its Liblouis braille. These tables were needed for displaying math symbols in MathML.

James",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/691#issuecomment-464339695,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","After having given it some more thought, I think the fact that chardefs.cti is included in several non-English tables should restrain us from making changes to it. All the tables that include it are aware (or should be) that this table represents the up to date English standard and is therefore subject to change. If these other tables has certain expectations of the table they should have tests for it.
I suggest to rename ""chardefs.cti"" to ""en-chardefs.cti"" to make this more clear.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/691#issuecomment-464779508,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","Hi @jdatray again, can you provide us with a test for the changes. In particular here I'd like to have a test for ""reverb"": What word are we translating and what is the expected braille? Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/jdatray,12,https://github.com/liblouis/liblouis/pull/691#issuecomment-465311663,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","Hi.

I just pushed a commit which adds a test for “reverb” to en-ueb-g2-dictionary_harness.yaml.

I noticed that en-ueb-10-07-contractions.yaml had a test for “reverberate”, but it lacks all the word variations which include “reverb” that en-ueb-g2-dictionary_harness.yaml has. I assumed that I should just add the test to en-ueb-g2-dictionary_harness.yaml, let me know if this is incorrect.

Thanks,
James",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/691#issuecomment-494365652,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","@jdatray Can we know your name so that we can credit you? You are from Freedom Scientific, right?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/jdatray,14,https://github.com/liblouis/liblouis/pull/691#issuecomment-494379651,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","Yes, I am from Freedom Scientific. My name is James Datray.

James",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,691,2019-01-28T17:02:23Z,2019-05-22T11:23:22Z,2019-05-22T11:23:22Z,MERGED,True,24,21,20,https://github.com/jdatray,En ueb g2 donate,4,['tables'],https://github.com/liblouis/liblouis/pull/691,https://github.com/egli,15,https://github.com/liblouis/liblouis/pull/691#issuecomment-494742046,"I commented out the sufword reverbera rule, and added a rule for sufword reverb. I think this covers both, and fixes the issue with mistranslation of ""reverb"".","OK, I updated the branch and my change request is now resolved",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,692,2019-01-29T19:59:26Z,2019-02-18T16:06:34Z,2019-02-18T16:06:34Z,MERGED,True,2,2,2,https://github.com/jdatray,Corrects dot pattern for anterior.,2,[],https://github.com/liblouis/liblouis/pull/692,https://github.com/jdatray,1,https://github.com/liblouis/liblouis/pull/692,"This changes the dot pattern for the ""er"" of ""anterior"" from 23456 to 12456.","This changes the dot pattern for the ""er"" of ""anterior"" from 23456 to 12456.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,693,2019-02-08T12:54:12Z,2019-02-18T15:39:59Z,2019-02-18T15:39:59Z,MERGED,True,50,46,2,https://github.com/mgieseki,Fixed memory leaks created by block scope compound literals,1,[],https://github.com/liblouis/liblouis/pull/693,https://github.com/mgieseki,1,https://github.com/liblouis/liblouis/pull/693,This is a quick fix for the memory issues that occur when using GCC 9 (also see #686). I didn't analyze the code in detail yet and therefore only patched the parts that led to segmentation faults in the test suite. Maybe some more changes have to be applied.,This is a quick fix for the memory issues that occur when using GCC 9 (also see #686). I didn't analyze the code in detail yet and therefore only patched the parts that led to segmentation faults in the test suite. Maybe some more changes have to be applied.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,693,2019-02-08T12:54:12Z,2019-02-18T15:39:59Z,2019-02-18T15:39:59Z,MERGED,True,50,46,2,https://github.com/mgieseki,Fixed memory leaks created by block scope compound literals,1,[],https://github.com/liblouis/liblouis/pull/693,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/693#issuecomment-461796247,This is a quick fix for the memory issues that occur when using GCC 9 (also see #686). I didn't analyze the code in detail yet and therefore only patched the parts that led to segmentation faults in the test suite. Maybe some more changes have to be applied.,"Ah thanks. I did not know about this GCC change. The patch looks fine, but is there a way to keep the const qualifier?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,693,2019-02-08T12:54:12Z,2019-02-18T15:39:59Z,2019-02-18T15:39:59Z,MERGED,True,50,46,2,https://github.com/mgieseki,Fixed memory leaks created by block scope compound literals,1,[],https://github.com/liblouis/liblouis/pull/693,https://github.com/mgieseki,3,https://github.com/liblouis/liblouis/pull/693#issuecomment-461798618,This is a quick fix for the memory issues that occur when using GCC 9 (also see #686). I didn't analyze the code in detail yet and therefore only patched the parts that led to segmentation faults in the test suite. Maybe some more changes have to be applied.,"The patch looks fine, but is there a way to keep the const qualifier?

I don't think so. Since the local input variables are no longer pointers but InString instances that get changed inside the function, I had to remove the constness. Alternatively, we could keep the pointer and let it point to a second local variable holding the InString. I'm not sure if that's really better.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,693,2019-02-08T12:54:12Z,2019-02-18T15:39:59Z,2019-02-18T15:39:59Z,MERGED,True,50,46,2,https://github.com/mgieseki,Fixed memory leaks created by block scope compound literals,1,[],https://github.com/liblouis/liblouis/pull/693,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/693#issuecomment-461798896,This is a quick fix for the memory issues that occur when using GCC 9 (also see #686). I didn't analyze the code in detail yet and therefore only patched the parts that led to segmentation faults in the test suite. Maybe some more changes have to be applied.,No that's not really better. Let's keep it like this then.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,694,2019-02-11T16:20:12Z,2019-02-28T07:29:31Z,2019-02-28T07:29:45Z,MERGED,True,69,29,10,https://github.com/egli,Update the Norwegian tables,3,['tables'],https://github.com/liblouis/liblouis/pull/694,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/694,"The purpose of this update is mainly to fix some problems caused by an update
in April 2015, that led to misbehavior when used with devices that don't
understand unicode bbraille. Some characters are moved to get higher
priority to output from liblouis.
In addition, I've added/fixed braille representation for some capital
accented letters that previously was wrong. These chars are added to the test file
no_harness.yaml as well.
Still there are one issue that I hope someone else can look into: the
begcomp/endcomp construct. I've added a test case, with status xfail, in the
file no_backward.yaml, to demonstrate the problem. The problem is not
introduced with this update.","The purpose of this update is mainly to fix some problems caused by an update
in April 2015, that led to misbehavior when used with devices that don't
understand unicode bbraille. Some characters are moved to get higher
priority to output from liblouis.
In addition, I've added/fixed braille representation for some capital
accented letters that previously was wrong. These chars are added to the test file
no_harness.yaml as well.
Still there are one issue that I hope someone else can look into: the
begcomp/endcomp construct. I've added a test case, with status xfail, in the
file no_backward.yaml, to demonstrate the problem. The problem is not
introduced with this update.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,694,2019-02-11T16:20:12Z,2019-02-28T07:29:31Z,2019-02-28T07:29:45Z,MERGED,True,69,29,10,https://github.com/egli,Update the Norwegian tables,3,['tables'],https://github.com/liblouis/liblouis/pull/694,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/694#issuecomment-462391633,"The purpose of this update is mainly to fix some problems caused by an update
in April 2015, that led to misbehavior when used with devices that don't
understand unicode bbraille. Some characters are moved to get higher
priority to output from liblouis.
In addition, I've added/fixed braille representation for some capital
accented letters that previously was wrong. These chars are added to the test file
no_harness.yaml as well.
Still there are one issue that I hope someone else can look into: the
begcomp/endcomp construct. I've added a test case, with status xfail, in the
file no_backward.yaml, to demonstrate the problem. The problem is not
introduced with this update.",See https://www.freelists.org/post/liblouis-liblouisxml/Updates-to-Norwegian-tables,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,694,2019-02-11T16:20:12Z,2019-02-28T07:29:31Z,2019-02-28T07:29:45Z,MERGED,True,69,29,10,https://github.com/egli,Update the Norwegian tables,3,['tables'],https://github.com/liblouis/liblouis/pull/694,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/694#issuecomment-462392888,"The purpose of this update is mainly to fix some problems caused by an update
in April 2015, that led to misbehavior when used with devices that don't
understand unicode bbraille. Some characters are moved to get higher
priority to output from liblouis.
In addition, I've added/fixed braille representation for some capital
accented letters that previously was wrong. These chars are added to the test file
no_harness.yaml as well.
Still there are one issue that I hope someone else can look into: the
begcomp/endcomp construct. I've added a test case, with status xfail, in the
file no_backward.yaml, to demonstrate the problem. The problem is not
introduced with this update.","That reminds me, there are some commits from NLB that we better merge too.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,694,2019-02-11T16:20:12Z,2019-02-28T07:29:31Z,2019-02-28T07:29:45Z,MERGED,True,69,29,10,https://github.com/egli,Update the Norwegian tables,3,['tables'],https://github.com/liblouis/liblouis/pull/694,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/694#issuecomment-462394768,"The purpose of this update is mainly to fix some problems caused by an update
in April 2015, that led to misbehavior when used with devices that don't
understand unicode bbraille. Some characters are moved to get higher
priority to output from liblouis.
In addition, I've added/fixed braille representation for some capital
accented letters that previously was wrong. These chars are added to the test file
no_harness.yaml as well.
Still there are one issue that I hope someone else can look into: the
begcomp/endcomp construct. I've added a test case, with status xfail, in the
file no_backward.yaml, to demonstrate the problem. The problem is not
introduced with this update.",@bertfrees do you have those commits?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,694,2019-02-11T16:20:12Z,2019-02-28T07:29:31Z,2019-02-28T07:29:45Z,MERGED,True,69,29,10,https://github.com/egli,Update the Norwegian tables,3,['tables'],https://github.com/liblouis/liblouis/pull/694,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/694#issuecomment-462395199,"The purpose of this update is mainly to fix some problems caused by an update
in April 2015, that led to misbehavior when used with devices that don't
understand unicode bbraille. Some characters are moved to get higher
priority to output from liblouis.
In addition, I've added/fixed braille representation for some capital
accented letters that previously was wrong. These chars are added to the test file
no_harness.yaml as well.
Still there are one issue that I hope someone else can look into: the
begcomp/endcomp construct. I've added a test case, with status xfail, in the
file no_backward.yaml, to demonstrate the problem. The problem is not
introduced with this update.",https://github.com/liblouis/liblouis/compare/super/nlb,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,694,2019-02-11T16:20:12Z,2019-02-28T07:29:31Z,2019-02-28T07:29:45Z,MERGED,True,69,29,10,https://github.com/egli,Update the Norwegian tables,3,['tables'],https://github.com/liblouis/liblouis/pull/694,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/694#issuecomment-462396669,"The purpose of this update is mainly to fix some problems caused by an update
in April 2015, that led to misbehavior when used with devices that don't
understand unicode bbraille. Some characters are moved to get higher
priority to output from liblouis.
In addition, I've added/fixed braille representation for some capital
accented letters that previously was wrong. These chars are added to the test file
no_harness.yaml as well.
Still there are one issue that I hope someone else can look into: the
begcomp/endcomp construct. I've added a test case, with status xfail, in the
file no_backward.yaml, to demonstrate the problem. The problem is not
introduced with this update.",#695,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,694,2019-02-11T16:20:12Z,2019-02-28T07:29:31Z,2019-02-28T07:29:45Z,MERGED,True,69,29,10,https://github.com/egli,Update the Norwegian tables,3,['tables'],https://github.com/liblouis/liblouis/pull/694,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/694#issuecomment-467560679,"The purpose of this update is mainly to fix some problems caused by an update
in April 2015, that led to misbehavior when used with devices that don't
understand unicode bbraille. Some characters are moved to get higher
priority to output from liblouis.
In addition, I've added/fixed braille representation for some capital
accented letters that previously was wrong. These chars are added to the test file
no_harness.yaml as well.
Still there are one issue that I hope someone else can look into: the
begcomp/endcomp construct. I've added a test case, with status xfail, in the
file no_backward.yaml, to demonstrate the problem. The problem is not
introduced with this update.",Rebased onto master and added some commits. @egli If you're OK with it we can merge.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/695,... done by NLB in the past year and a half.,... done by NLB in the past year and a half.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/695#issuecomment-467225586,... done by NLB in the past year and a half.,"I dropped the commit ""Handle URLs and e-mail addresses in Java instead of liblouis"" and merged with master here: https://github.com/liblouis/liblouis/compare/nlb",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/695#issuecomment-467411542,... done by NLB in the past year and a half.,@egli Review if you want. I want to merge this before I do Lars' PR.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/695#issuecomment-467439914,... done by NLB in the past year and a half.,You should have looked at https://github.com/liblouis/liblouis/compare/nlb. Most of your comments are not relevant anymore I'm afraid.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/695#issuecomment-467447850,... done by NLB in the past year and a half.,Yes that looks much better and addresses most of my comments. I just looked at https://github.com/liblouis/liblouis/pull/695/files which is the list of changed files in this PR.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/695#issuecomment-467448101,... done by NLB in the past year and a half.,"Ah, maybe that is the list of changes modulo the conflicts that have to be resolved",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/695#issuecomment-467450488,... done by NLB in the past year and a half.,"It's the same branch with some commits removed, and then merged with the latest master.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/695#issuecomment-467526966,... done by NLB in the past year and a half.,Merged in 8dbdd34,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,695,2019-02-11T16:35:57Z,2019-02-26T17:11:53Z,2019-10-09T11:33:47Z,CLOSED,False,799,548,34,https://github.com/bertfrees,Various changes to Norwegian,19,['tables'],https://github.com/liblouis/liblouis/pull/695,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/695#issuecomment-467527121,... done by NLB in the past year and a half.,Not deleting branch because NLB still uses it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/699,"Fixes #698
! Not finished/optimized for Python 2.","Fixes #698
! Not finished/optimized for Python 2.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/699#issuecomment-464349115,"Fixes #698
! Not finished/optimized for Python 2.","With my current changes, it seems that works with Python 2 and 3 on Windows and Linux. I tested:

on Linux, with Python 2.7.15 and Python 3.7.2 using the following script
on Windows, with Python 2.7.15 and Python 3.7.1 using the following script and trough NVDA

Test code
# coding: UTF-8
import louis
tbl = ""aéêà/fr-bfu-comp8.utb""
louis.version()
res = louis.translate([tbl], ""test 1234"")
print(res)
res = louis.translateString([tbl], ""qwerty"")
print(res)
res = louis.backTranslate([tbl], u""⠁⠃⠉"")
print(res)
If possible, I'd like more tests from others and a review of my code.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/699#issuecomment-467422474,"Fixes #698
! Not finished/optimized for Python 2.",I tested this on Linux with both Python 2.7 and Python3. Above tests all work.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/aaclause,4,https://github.com/liblouis/liblouis/pull/699#issuecomment-467626662,"Fixes #698
! Not finished/optimized for Python 2.","There is one small thing that bothers me.
According to the documentation, sys.platform could have 2 values for Windows: 'win32' and 'cygwin'.
I'd like to get 'cygwin' value (in order to test or/and cover this case) but I don't know how to reproduce that.
Any idea?
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/699#issuecomment-468171054,"Fixes #698
! Not finished/optimized for Python 2.","According to the documentation, sys.platform could have 2 values for Windows: 'win32' and 'cygwin'. I'd like to get 'cygwin' value (in order to test or/and cover this case) but I don't know how to reproduce that.

Sorry, @Andre9642  I have no idea.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/aaclause,6,https://github.com/liblouis/liblouis/pull/699#issuecomment-468348754,"Fixes #698
! Not finished/optimized for Python 2.","@egli OK. I think that it doesn't matter for now, thus the PR can be merged as is. Maybe we could look at this point later.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/aaclause,7,https://github.com/liblouis/liblouis/pull/699#issuecomment-468924917,"Fixes #698
! Not finished/optimized for Python 2.","To be honest, I'm not convinced that this pr really fixes an issue. The finding that it fixes something might be more of a lucky shot.

Thanks @leonardder. That's why I requested a review originally. :/ Indeed, you raise other tricky issues.
However, I think that it's better than before but not perfect.
Maybe we should revert this PR from 3.9 in favor of a fix more serious/safe.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/aaclause,8,https://github.com/liblouis/liblouis/pull/699#issuecomment-468933583,"Fixes #698
! Not finished/optimized for Python 2.","x.decode(""utf-8"") results in an unicode object.
Also note that something like b"""".join([u""€""]) will still output a unicode type.

Right. However, it seems to me that especially a problem in Python 2 and you can always do something like: u""€"".encode(""UTF-8"").",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/leonardder,9,https://github.com/liblouis/liblouis/pull/699#issuecomment-468948491,"Fixes #698
! Not finished/optimized for Python 2.","@Andre9642 commented on 2 Mar 2019, 15:23 CET:

Maybe we should revert this PR from 3.9 in favor of a fix more serious/safe.

I agree with that, and am happy to provide feedback on any future contribution, but be sure to mention me for that.
I just noticed that python 2 encodes to utf-8 by default for characters outside the ASCII range, so I do understand why you assumed utf-8 by default.
Nevertheless, I think we should assume that, if a calling program supplies byte strings to _createTablesString, they are encoded properly. That allows us to provide an implementation that supports both python 2 and python 3 with minimal effort. On python 3, they should be unicode anyway.
Something like this should work:
#: Specifies the encoding to use when encoding file paths.
#: @type: str
filePathEncoding = ""mbcs"" if sys.platform == ""win32"" else ""utf_8""
#: The type used for unicode strings
UnicodeType = str if sys.version_info.major == 3 else unicode

def _createTablesString(tablesList):
    """"""Creates a tables string for liblouis calls""""""
    encodedTablesList = []
    for x in tablesList:
        if not isinstance(x, (UnicodeType, bytes)):
            raise TypeError(""%r in tablesList is of the wrong type"" % x)
        if isinstance(x, UnicodeType):
            x = x.encode(filePathEncoding)
        encodedTablesList.append(x)
    return encodedTablesList",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/699#issuecomment-469186395,"Fixes #698
! Not finished/optimized for Python 2.","@Andre9642, @leonardder so should I revert this PR?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,699,2019-02-15T02:19:04Z,2019-03-01T09:41:40Z,2019-03-04T14:46:07Z,MERGED,True,10,1,1,https://github.com/aaclause,Python binding: allows translate if tables are located in path with non-ASCII characters,1,['Python'],https://github.com/liblouis/liblouis/pull/699,https://github.com/aaclause,11,https://github.com/liblouis/liblouis/pull/699#issuecomment-469191260,"Fixes #698
! Not finished/optimized for Python 2.","Yes, it's probably better. There's no regression but I'll prefer provide a better PR for the original issue.
Sorry for my awkwardness.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,703,2019-02-25T04:49:02Z,2019-02-26T14:25:55Z,2019-03-02T21:53:22Z,MERGED,True,6302,790,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-02,2,[],https://github.com/liblouis/liblouis/pull/703,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/703,"Summary: (1) improvement of braille representation of Chinese characters, and (2) rewrite kana rules using multipass statements.
Details:

Fix dot patterns of various Chinese characters.
Add more Chinese phrase rules to catch dot-pattern exceptions (the main source of additional lines).
Adjust copyright declaration of zh-tw.yaml.
Rewrite kana rules using multipass statements.

Note: Developers, please present only the summary in NEWS, thanks.
Reviewers:

黃偉豪 <hurt.nzsmr@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
Victor Cai <surfer0627@gmail.com>","Summary: (1) improvement of braille representation of Chinese characters, and (2) rewrite kana rules using multipass statements.
Details:

Fix dot patterns of various Chinese characters.
Add more Chinese phrase rules to catch dot-pattern exceptions (the main source of additional lines).
Adjust copyright declaration of zh-tw.yaml.
Rewrite kana rules using multipass statements.

Note: Developers, please present only the summary in NEWS, thanks.
Reviewers:

黃偉豪 <hurt.nzsmr@gmail.com>
Coscell Kao <coscell@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
Victor Cai <surfer0627@gmail.com>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,705,2019-02-26T14:49:35Z,2019-02-28T13:54:03Z,2019-02-28T13:54:07Z,MERGED,True,3,8,4,https://github.com/egli,Remove the locale opcode,4,[],https://github.com/liblouis/liblouis/pull/705,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/705,Fixes #682,Fixes #682,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,705,2019-02-26T14:49:35Z,2019-02-28T13:54:03Z,2019-02-28T13:54:07Z,MERGED,True,3,8,4,https://github.com/egli,Remove the locale opcode,4,[],https://github.com/liblouis/liblouis/pull/705,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/705#issuecomment-467467605,Fixes #682,Maybe also add a compilation warning?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,705,2019-02-26T14:49:35Z,2019-02-28T13:54:03Z,2019-02-28T13:54:07Z,MERGED,True,3,8,4,https://github.com/egli,Remove the locale opcode,4,[],https://github.com/liblouis/liblouis/pull/705,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/705#issuecomment-467511465,Fixes #682,You mean compileWarning?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,705,2019-02-26T14:49:35Z,2019-02-28T13:54:03Z,2019-02-28T13:54:07Z,MERGED,True,3,8,4,https://github.com/egli,Remove the locale opcode,4,[],https://github.com/liblouis/liblouis/pull/705,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/705#issuecomment-467512803,Fixes #682,The opcode is silently ignored. Maybe there should be a warning message.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/garconvacher,1,https://github.com/liblouis/liblouis/pull/707,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/707#issuecomment-468296034,,"Thank you.
There are several tests that fail after your changes, notably during backward translation. They look like regressions. See https://travis-ci.org/liblouis/liblouis/jobs/499837578#L3441. Can you please fix these regressions? Maybe it would be better to remove the spaces with a correct rule?
Also it would be nice to have additional tests that cover the changes you have done, both for the spaces stuff, and for the enhancements to capitalization and emphasis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/garconvacher,3,https://github.com/liblouis/liblouis/pull/707#issuecomment-468310775,,I need to dig this :/,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/707#issuecomment-468313363,,"Something like this should work (but note that I haven't tried it):
correct ""[\s]»"" ?

A good place to start is to make some unit tests for it. Then you have a way to easily verify your changes, and so you can tweak the table until it works. It also makes it possible for other people to help if needed. And if something is covered with a test we will get notified if it ever breaks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/garconvacher,5,https://github.com/liblouis/liblouis/pull/707#issuecomment-468318185,,"Thanks for the advices @bertfrees, I'll try tomorrow.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/garconvacher,6,https://github.com/liblouis/liblouis/pull/707#issuecomment-468324050,,There's a mess in my commits :/,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/707#issuecomment-468325258,,"Don't worry about that, we always clean it up before we merge a PR.",True,{'THUMBS_UP': ['https://github.com/garconvacher']}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/garconvacher,8,https://github.com/liblouis/liblouis/pull/707#issuecomment-468724188,,"Hi.
I have now good results with ""make check"" but this table need some little tweaks.
For now, I reseted my master to clean my mess and I close this PR. I will submit a new with a new branch later.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/707#issuecomment-468727899,,You can just force-push to the same branch if you want. Then you don't have to create a new PR. (We can reopen this one.),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/garconvacher,10,https://github.com/liblouis/liblouis/pull/707#issuecomment-468728829,,"OK, I'll do this next week.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,707,2019-02-28T14:26:01Z,2019-03-01T16:29:02Z,2019-03-04T14:51:49Z,CLOSED,False,40,17,7,https://github.com/garconvacher,"French braille code comp6 - Fix emphasis, punctuation tweaking",13,"['needs test', 'needs fixup']",https://github.com/liblouis/liblouis/pull/707,https://github.com/garconvacher,11,https://github.com/liblouis/liblouis/pull/707#issuecomment-469279991,,Can't reopen this PR,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,708,2019-03-04T08:50:49Z,2019-03-04T09:38:54Z,2019-03-04T09:42:07Z,MERGED,True,83,82,12,https://github.com/egli,Prefix the loglevel enum symbols with LOU_,1,[],https://github.com/liblouis/liblouis/pull/708,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/708,Fixes #352,Fixes #352,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,709,2019-03-04T10:54:36Z,2019-03-04T11:33:04Z,2019-03-04T11:41:25Z,MERGED,True,311,66,6,https://github.com/egli,Implement the new Slovenian braille standard,6,[],https://github.com/liblouis/liblouis/pull/709,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/709,Fixes #684,Fixes #684,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,710,2019-03-04T11:26:53Z,2019-03-04T11:35:33Z,2019-04-14T10:20:24Z,MERGED,True,595,54,2,https://github.com/egli,Updates to Latvian,6,[],https://github.com/liblouis/liblouis/pull/710,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/710,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,711,2019-03-04T12:35:37Z,2019-03-04T13:02:59Z,2019-03-04T13:03:19Z,MERGED,True,1,13,2,https://github.com/egli,"Revert ""Python binding: allows translate if tables are located in path with non-ASCII characters""",2,[],https://github.com/liblouis/liblouis/pull/711,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/711,"Reverts #699
Based on the discussion in #699 I'm reverting this","Reverts #699
Based on the discussion in #699 I'm reverting this",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,712,2019-03-04T15:02:45Z,2019-05-27T15:12:13Z,2019-06-17T15:06:47Z,MERGED,True,136,6,2,https://github.com/garconvacher,French braille 6 dots - Emphasis tweaking + test table updated,1,['tables'],https://github.com/liblouis/liblouis/pull/712,https://github.com/garconvacher,1,https://github.com/liblouis/liblouis/pull/712,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,712,2019-03-04T15:02:45Z,2019-05-27T15:12:13Z,2019-06-17T15:06:47Z,MERGED,True,136,6,2,https://github.com/garconvacher,French braille 6 dots - Emphasis tweaking + test table updated,1,['tables'],https://github.com/liblouis/liblouis/pull/712,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/712#issuecomment-473868081,,@garconvacher Should we wait for more improvements or should we include these changes already in 3.10?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,712,2019-03-04T15:02:45Z,2019-05-27T15:12:13Z,2019-06-17T15:06:47Z,MERGED,True,136,6,2,https://github.com/garconvacher,French braille 6 dots - Emphasis tweaking + test table updated,1,['tables'],https://github.com/liblouis/liblouis/pull/712,https://github.com/garconvacher,3,https://github.com/liblouis/liblouis/pull/712#issuecomment-473894566,,"@bertfrees, I will update the files at the end of this week!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,714,2019-03-05T10:11:50Z,2019-05-28T09:34:51Z,2019-06-17T15:06:35Z,MERGED,True,3,1,1,https://github.com/garconvacher,Documentation / README: './autogen.sh' missing in the installation steps,2,[],https://github.com/liblouis/liblouis/pull/714,https://github.com/garconvacher,1,https://github.com/liblouis/liblouis/pull/714,I am not familiar with these Linux's procedures. ./configure do nothing so I tried this ./autogen.sh.,I am not familiar with these Linux's procedures. ./configure do nothing so I tried this ./autogen.sh.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,714,2019-03-05T10:11:50Z,2019-05-28T09:34:51Z,2019-06-17T15:06:35Z,MERGED,True,3,1,1,https://github.com/garconvacher,Documentation / README: './autogen.sh' missing in the installation steps,2,[],https://github.com/liblouis/liblouis/pull/714,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/714#issuecomment-469661843,I am not familiar with these Linux's procedures. ./configure do nothing so I tried this ./autogen.sh.,"If you download the tar ball from the releases website, then you only need configure.
If you checkout from git or download the source tar from github then you will have to do ./autogen.sh.
As far as I know the README is geared towards users that download the release tar ball, so I wouldn't mention autogen there. It is mentioned in the file HACKING that should explain how to build liblouis from a git checkout.
Maybe instead the README should mention that more details are provided in HACKING.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,714,2019-03-05T10:11:50Z,2019-05-28T09:34:51Z,2019-06-17T15:06:35Z,MERGED,True,3,1,1,https://github.com/garconvacher,Documentation / README: './autogen.sh' missing in the installation steps,2,[],https://github.com/liblouis/liblouis/pull/714,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/714#issuecomment-469667516,I am not familiar with these Linux's procedures. ./configure do nothing so I tried this ./autogen.sh.,"Maybe instead the README should mention that more details are provided in HACKING.

Yes",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,714,2019-03-05T10:11:50Z,2019-05-28T09:34:51Z,2019-06-17T15:06:35Z,MERGED,True,3,1,1,https://github.com/garconvacher,Documentation / README: './autogen.sh' missing in the installation steps,2,[],https://github.com/liblouis/liblouis/pull/714,https://github.com/garconvacher,4,https://github.com/liblouis/liblouis/pull/714#issuecomment-469707803,I am not familiar with these Linux's procedures. ./configure do nothing so I tried this ./autogen.sh.,OK. I thought 'tar ball' was the downloaded zip from github.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,716,2019-03-18T12:48:48Z,2019-04-09T10:14:40Z,2019-04-09T10:14:48Z,CLOSED,False,136,54,1,https://github.com/bertfrees,lou_checkyaml: Allow defining inline display table,1,[],https://github.com/liblouis/liblouis/pull/716,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/716,"It is now also possible to define inline tables when a display table
has been defined (either inline or normal).","It is now also possible to define inline tables when a display table
has been defined (either inline or normal).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,716,2019-03-18T12:48:48Z,2019-04-09T10:14:40Z,2019-04-09T10:14:48Z,CLOSED,False,136,54,1,https://github.com/bertfrees,lou_checkyaml: Allow defining inline display table,1,[],https://github.com/liblouis/liblouis/pull/716,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/716#issuecomment-478498036,"It is now also possible to define inline tables when a display table
has been defined (either inline or normal).",@egli Can you have a look? I have some more commits that depend on this.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,716,2019-03-18T12:48:48Z,2019-04-09T10:14:40Z,2019-04-09T10:14:48Z,CLOSED,False,136,54,1,https://github.com/bertfrees,lou_checkyaml: Allow defining inline display table,1,[],https://github.com/liblouis/liblouis/pull/716,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/716#issuecomment-480797365,"It is now also possible to define inline tables when a display table
has been defined (either inline or normal).",@egli I'm going to merge this OK?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,716,2019-03-18T12:48:48Z,2019-04-09T10:14:40Z,2019-04-09T10:14:48Z,CLOSED,False,136,54,1,https://github.com/bertfrees,lou_checkyaml: Allow defining inline display table,1,[],https://github.com/liblouis/liblouis/pull/716,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/716#issuecomment-481191242,"It is now also possible to define inline tables when a display table
has been defined (either inline or normal).",Merged in 3d28331,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,719,2019-03-29T18:35:27Z,2019-04-05T15:42:32Z,2019-04-05T15:42:32Z,MERGED,True,454,404,2,https://github.com/MikeGray-APH,Added modified letters,1,['tables'],https://github.com/liblouis/liblouis/pull/719,https://github.com/MikeGray-APH,1,https://github.com/liblouis/liblouis/pull/719,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,719,2019-03-29T18:35:27Z,2019-04-05T15:42:32Z,2019-04-05T15:42:32Z,MERGED,True,454,404,2,https://github.com/MikeGray-APH,Added modified letters,1,['tables'],https://github.com/liblouis/liblouis/pull/719,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/719#issuecomment-478164516,,"Thanks, looks good.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,1,https://github.com/liblouis/liblouis/pull/720,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/720#issuecomment-482946011,,"@vbprofi Thanks for the table. I would also like to have a reference to a formal specification of the Nordern Kurdish braille code. A link to a website for example. We can also put documents on our own website if needed.
Secondly, like I explained in the other issue, we want to have test data for all new tables. These tests (a set of words, special characters, sentences, etc. and their respective expected braille translations) will serve as documentation as well as a guard against regressions.
Finally, what does the line ""XWE coming..."" mean? Do we need to wait until the table is complete before we commit it to Liblouis?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,3,https://github.com/liblouis/liblouis/pull/720#issuecomment-491610841,,"The kurdish table is complete.  The comment ""XWE coming ..."" is from an earlier use and refers to the contracted braille.  Test datas and documentations are not developed yet. The uncontracted braille was developed within the framework of the project of a school for the blind in Rojava and is currently being taught.  For the creation of the test data we just lack the capacity.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/720#issuecomment-491751596,,"OK, I will remove the comment then.
The documentation is important. Especially if the braille code was developed in a project, and is not something official yet, it is important to explain this in the braille table. Also if there is any documentation about this project, it would be a good idea to add references to it. We can also publish it on our website if needed.
What do you mean, for the creation of the test data we lack the capacity? The table is really small, so it can't be much work to gather some test data, right? The tests are important for us. We are not accepting tables without tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/720#issuecomment-728071070,,"@vbprofi We would like to include this table, but it lacks some basic documentation. See my comment above. Can you help us out please?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,6,https://github.com/liblouis/liblouis/pull/720#issuecomment-728100689,,"is that helpful?
https://www.dropbox.com/s/i1pthhcgdrcceyt/punktschrift_kmr.zip?dl=0",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,7,https://github.com/liblouis/liblouis/pull/720#issuecomment-728103837,,"The Kurdish alphabet and the braille table are linked above. What exactly is still needed for the test? Maybe we can work out missing data together. I would be very happy if Northern Kurdish is implemented.
The tables I have entered / pulled are currently officially used in Rojava and Northern Kurdistan. However, there is no website or source where you can officially read this. What exactly does the missing test data look like? then I would create this together with you. Maybe need examples.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/720#issuecomment-728243979,,"Thanks for the link. Unfortunately the two documents don't seem very useful, as they are basically just tables with no additional information whatsoever.
Since there doesn't seem to be any official documentation, I think the best we can do is provide a description in the Liblouis table of where it came from, who developed it. You mentioned a project of a school for the blind in Rojava. Maybe you can put some more details about this project in the table description: which school, when did this happen, who was responsible, who was involved, etc. Also, the information you gave about where the braille code is used today, would be good to have in the table description.
Sure, I'll help you with the test data. We just need some examples of text (words, special characters, sentences, etc.) and their corresponding braille translation. The ultimate goal is to cover all aspects/rules of the braille code with your set of tests. The better the tests, the better the quality of the Liblouis translations. If the braille code is simple, the tests will also be simple. More complex braille codes will need more examples to explain the rules. Since your table simply includes UEB grade 1 and adds 5 Kurdish letters, things should be pretty straightforward.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,9,https://github.com/liblouis/liblouis/pull/720#issuecomment-733847283,,"Okay I will compile the information for the documentation. But I will need some time, because the reality of the war is making everything difficult.
For now we can work on the test data for liblouis. To be honest, I have no idea what exactly is needed and how this test data should look like.  Are there any examples or templates?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/720#issuecomment-733870829,,"Thank you, much appreciated.
There are no requirements for the format of the test data. As long as it is clear for each of the examples what exactly the plain text is and what exactly the corresponding braille is.
We do have a special format for all our tests. You can find a lot of examples in the tests/braille-specs directory of the source code: https://github.com/liblouis/liblouis/tree/master/tests/braille-specs. However it is no requirement. I will make sure your data is converted to the right format if needed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,11,https://github.com/liblouis/liblouis/pull/720#issuecomment-771085996,,"Hello,

thank you. I looked at the data with a screen reader but I don't
understand how I can display Braille in plain text. Even though there is
no need to produce test data right now, it would be nice if some words
or phrases existed.

Maybe I have to reread it...

Regarding to the documentation:

Since the Kurdish language was forbidden for several decades and is
still partly forbidden, there are no generally applicable standards
because all four parts of Kurdistan are very different. Even among close
villages, you can see differences. Only in the last 100 years did the
awareness of a Kurdish nation and the intellectual Kurdish language
developed. In northern Kurdistan (south-east Turkey), the Kurdish
dialect was crystallized from the Botan region for the intellectual
language.

Since the freedom movement of Kurdistan organized itself in all parts of
Kurdistan and the diaspora with the idea of self-administration /
Organisation and self-determination and promoted the intellectual
language, the Botan dialect from Northern Kurdistan became the
intellectual universal language everywhere in the community. This is
also shown in text, sound, and images (books, press, media, TV, and
radio). In Northern Kurdistan, despite the ban of the Kurdish language,
Kurdish is taught and learned through self-organization. This also
became the ground for the Kurdish native language in the schools in
Rojava and the Democratic Federation of Northern and Eastern Syria.

Despite the threat of further wars in the region, a school for the blind
was found in Kobane in 2016, which is sponsored and supported by the
Kobane People's Council and the city administration. The school for the
blind, consisting of 10 pupils, developed the Braille script for
Northern Kurdish with the support of the language and cultural
institutes from Germany and Northern Kurdistan. They tried to keep to
the international standards. It quickly became clear that few letters
differ from English. This knowledge became the basis of Braille in
Northern Kurdish and since then there have been courses for learning
Braille in a blind school class for 10 people several hours a week. The
pupils in the blind school class consist of both war veterans and blind
people by birth who try to learn their native language and Kurdish
Braille together.

In cooperation with the Kurdish Institute for Science and Research
(Kurdisches Institut für Wissenschaft und Forschung e. V) in Düsseldorf,
Germany and the Language and Culture Institute in Amed (Diyarbakir), as
well as the People's Council of Kobane, the standards developed by the
school for the blind in Kobane, were adopted in 2018 in the curricula
for people with blindness.

Due to the reality of the war, the work of the 10-person class has been
suspended since October 2019. There are attempts to resume work as soon
as possible.

Imam Kahraman worked with the Kurdish Institute for Science and Research
(Kurdisches Institut für Wissenschaft und Forschung e. V) in Düsseldorf
translated the NVDA interface into Northern Kurdish and created the
Liblouis table for Northern Kurdish based on Kobane's Braille script
that was previously developed.

Best regards",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/720#issuecomment-779335364,,"I looked at the data with a screen reader but I don't understand how I can display Braille in plain text. Even though there is no need to produce test data right now, it would be nice if some words or phrases existed.

Again, how exactly you represent the braille does not matter for us, as long as it is clear what is meant. For example, you may use dot numbers: ""1 3 , 1 3 6 , 1 2 3 5 , 1 3 4 , 1 , 1 3 4 5 , 1 4 , 2 4"". We will then probably reformat it into Unicode braille patterns. This is how most existing tests represent braille.
Thank you for the background information! Very useful.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/720#issuecomment-779344625,,@vbprofi I will add the GNU Lesser General Public License v2.1 to the file if that's OK with you. Which person or organisation should I make the copyright owner? Also may I add your name to our AUTHORS file?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/720#issuecomment-790640645,,@vbprofi The next release is coming close (next Monday). Have you seen my last two messages?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,15,https://github.com/liblouis/liblouis/pull/720#issuecomment-790691751,,"Hello dear friend,
thank you very much for the quick feedback.
The GNU Lesser General Public License v2.1 can be added to the file. That's OK for me.
Please use the author Imam Kahraman imam.kahraman@gmail.com as copyright owner. that can insert to the table file and in the author's file, if you like.
best regards",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/720#issuecomment-790695364,,"Thank you.
Have you had the chance to create some test data?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/egli,17,https://github.com/liblouis/liblouis/pull/720#issuecomment-792743527,,"Hi @vbprofi your PR almost made it into the 3.17 release. We were really torn whether we should include it. But to keep the quality of the braille tables we'd really like to have some test data.
This can be as simple as a few sentences or even just words and their corresponding braille translation. We will then take care to integrate this into our test suite.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,18,https://github.com/liblouis/liblouis/pull/720#issuecomment-793166696,,"Hello,
If the current status is included in the main branch, it would help us to work with NVDA on further projects and to further develop the North Kurdish Braille table.
As far as I was able to do so, I created some test data. I hope that is enough for now. I also hope that the format is okay. Personally, I found the examples to be very complicated. Therefore I decided on the following chema:
Azadi 1, 1356, a, 145, 24
Bakur 12, 1, 13, 136, 1235
Ciwan 14, 24, 2456, 1, 1345
Çîrok 16, 35, 1235, 135, 13
Destan 145, 15, 234, 2345, 1, 1345
Êzîdî 126, 1356, 35, 145, 35
Erê 15, 1235, 126
Firat 124, 24, 1235, 1, 2345
Gulîstan 1245, 136, 123, 35, 234, 2345, 1, 1345
Havîn 125, 1, 1236, 35, 1345
Iro 24, 1235, 135
Îsot 35, 234, 135, 2345
Jin 245, 24, 1345
Kurdistan 13, 136, 1235, 145, 24, 234, 2345, 1, 1345
Lêkolîn 123, 126, 13, 135, 123, 35, 1345
Malbat 134, 1, 123, 12, 1, 2345
Nêçîr 1345, 126, 16, 35, 1235
Oremar 135, 1235, 15, 134, 1, 1235
Paytext 1234, 1, 13456, 2345, 15, 1346, 2345
Qamişlo 12345, 1, 134, 24, 234, 123, 135
Rojava 1235, 135, 245, 1, 1236, 1
Serxwebûn 234, 15, 1235, 1346, 2456, 15, 12, 156, 1345
Şirnex 146, 24, 1235, 1345, 15, 1346
Tembûr 2345, 15, 134, 12, 156, 1235
û 156
Urmê 136, 1235, 134, 126
Viyan 1236, 24, 13456, 1, 1345
Welat 2456, 15, 123, 1, 2345
Xezal 1346, 15, 1356, 1, 123
Yekitî 13456, 15, 13, 24, 2345, 35,
Zap 1356, 1, 1234
some more translations:
Çand 16, 1, 1345, 145
dÎl 145, 35, 123
bÎranÎn 12, 35, 1235, 1, 1345, 35, 1345
nÊzÎk 1345, 126, 1356, 35, 13
Şer 146, 15, 1235
ŞÊr 146, 126, 1235
ŞirÎn 146, 24, 1235, 35, 1345
ez Û tu 15, 1356 | 156 | 1256, 136
Best regards",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,19,https://github.com/liblouis/liblouis/pull/720#issuecomment-793652050,,"Thank you, this format is perfectly fine, I can convert it.
I just noticed there is no copyright notice in the table yet. Who should this table be copyrighted to?
We'll add the GNU Lesser General Public License v2.1 to the table (like most other tables) if that is OK with you.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,20,https://github.com/liblouis/liblouis/pull/720#issuecomment-793675508,,"Hello,
I am happy the testdata can be used for converting.
as written above you can add the GNU Lesser General Public License v2.1 to the file. That's OK for us.
that work (braile table, testdata and so on ) copyrighted by Imam Kahraman imam.kahraman@gmail.com.
Is there anything else that is missing? Then just let me know.
If there are further developments in Kurdish Braille, we will try to implement them here and further develop and update the work we have done so far. Is that ok for you?
Best Regards",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/720#issuecomment-793685062,,"Thanks, I'll add the license and copyright.
But I have bad news: I'm afraid none of the tests you provided succeed. They all fail. That means there are some serious issues to be resolved before we can merge this. As far as I can tell it's the UEB grade 1 include that is messing everything up. Basically, everything is translated using UEB rules.
You should get in touch with the NDVA people to help you install your table in NVDA in order to manually test it.
The alternative is that I help you fix the issues based on test data, like the examples you already provided, however then we're gonna need some more test data, including numbers, punctuation, special symbols etc.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,22,https://github.com/liblouis/liblouis/pull/720#issuecomment-793695562,,"maybe my Include UEB Grade 1 is just not right.
We actually need grade 0 (basic braile from English). I think I inserted that with UEB Grade 1 incorrectly.
which file would then be an option for english basic braile?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,23,https://github.com/liblouis/liblouis/pull/720#issuecomment-793712861,,"In English, ""grade 1"" means ""uncontracted braille"". The only other UEB table is grade 2 (contracted braille), I don't think you want that.
I can see two main issues: one is that the Kurdish letter definitions are not used because the UEB definitions take precedence. This can be resolved by moving the Kurdish letter definitions up, before the include rules. The second issue is that you include UEB, but the examples you provided don't follow the UEB rules, like for instance they are missing indication of capitals.
But anyway, the bottom line here is: it's not a good idea to develop a Liblouis table without actually testing the behavior. Developing a table is always a trial and error process.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,24,https://github.com/liblouis/liblouis/pull/720#issuecomment-839834033,,"That's right, I didn't notice it during the implementation. Point 7 represents the capital letters. This is missing in the table. Would you fix that? Or should I update and upload the file?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,25,https://github.com/liblouis/liblouis/pull/720#issuecomment-839862489,,"Dot 7 should be added for capital letters? So is this a 8-dot table? And is this a computer braille table or not?
If dot 7 should be added for capital letters, then the test data you provided is wrong. Can you fix it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,26,https://github.com/liblouis/liblouis/pull/720#issuecomment-839874914,,"I just looked again. It is actually 6 point Braile and not a computer braile. There is no point 7 and 8 for capital letters. But if you cannot do without points 7 and 8 and the UEB table needs the missing points, we should add it. Actually, s with 6 points should be easy to implement. Don't understand the problems that have.
I thought the tables were modular. If this is not the case, we need another way to implement the 6 point Braile in Kurdish. do you have an idea or solution?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,27,https://github.com/liblouis/liblouis/pull/720#issuecomment-839905059,,"Look. It's very simple. You define how the Kurdish table should behave, by providing information and test data. Then I can help you achieve that behavior.
But with the information I have now I can not help you. All I have is your initial implementation of the table, and the list of words that you gave me. Your initial implementation includes the UEB table, so I assumed that the Kurdish braille code is somehow based on UEB. But because there is no information or test data for punctuation, capitals, numbers, etc. I have no way of telling how exactly Kurdish relates to UEB and what the differences are. So I can also not say what is the best way to implement it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,28,https://github.com/liblouis/liblouis/pull/720#issuecomment-839925632,,"the North Kurdish 6 point uncontracted  braile is based on the English 6 point uncontracted  braile. Overall, the necessary letters for the Kurdish language are added. Everything (Letters and Digits) is adopt from the English Braile.
No further adjustments are actually required because everything remains the same. The question that arises for me is the UEB table the right table for our kurdish table?
I had created test data. Can also create more if needs. But I don't have any more information. If we could implement it successfully, it will be much easier to work on the computer with the braille Device in the future. Then there may be further developments on the same good basis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,29,https://github.com/liblouis/liblouis/pull/720#issuecomment-839931282,,"The UEB table that was included, en-ueb-g1.ctb, is indeed the table for English uncontracted braille, as UEB is the recommended standard for English all around the world nowadays.
So based on what you just said, I think en-ueb-g1.ctb is the right table to include. And if there are no other differences apart from the added Kurdish letters, we're good on the table side.
However, the test data is not correct because capitals are not indicated in the tests. This needs to be fixed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,30,https://github.com/liblouis/liblouis/pull/720#issuecomment-840049445,,"Here are the corrected test data. I hope it works this time.
azadi 1, 1356, 1, 145, 24
bakur 12, 1, 13, 136, 1235
ciwan 14, 24, 2456, 1, 1345
çîrok 16, 35, 1235, 135, 13
destan 145, 15, 234, 2345, 1, 1345
êzîdî 126, 1356, 35, 145, 35
erê 15, 1235, 126
firat 124, 24, 1235, 1, 2345
gulîstan 1245, 136, 123, 35, 234, 2345, 1, 1345
havîn 125, 1, 1236, 35, 1345
iro 24, 1235, 135
îsot 35, 234, 135, 2345
jin 245, 24, 1345
kurdistan 13, 136, 1235, 145, 24, 234, 2345, 1, 1345
lêkolîn 123, 126, 13, 135, 123, 35, 1345
malbat 134, 1, 123, 12, 1, 2345
nêçîr 1345, 126, 16, 35, 1235
oremar 135, 1235, 15, 134, 1, 1235
paytext 1234, 1, 13456, 2345, 15, 1346, 2345
qamişlo 12345, 1, 134, 24, 234, 123, 135
rojava 1235, 135, 245, 1, 1236, 1
serxwebûn 234, 15, 1235, 1346, 2456, 15, 12, 156, 1345
şirnex 146, 24, 1235, 1345, 15, 1346
tembûr 2345, 15, 134, 12, 156, 1235
û 156
urmê 136, 1235, 134, 126
viyan 1236, 24, 13456, 1, 1345
welat 2456, 15, 123, 1, 2345
xezal 1346, 15, 1356, 1, 123
yekitî 13456, 15, 13, 24, 2345, 35,
zap 1356, 1, 1234
some more translations:
çand 16, 1, 1345, 145
dîl 145, 35, 123
bîranîn 12, 35, 1235, 1, 1345, 35, 1345
nêzîk 1345, 126, 1356, 35, 13
şer 146, 15, 1235
şêr 146, 126, 1235
şirîn 146, 24, 1235, 35, 1345
ez û tu 15, 1356 | 156 | 1256, 136
best regards",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,31,https://github.com/liblouis/liblouis/pull/720#issuecomment-840093090,,Are you serious?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,32,https://github.com/liblouis/liblouis/pull/720#issuecomment-840099436,,I hope that I have created the test data serious. I check it earlier and found and corrected a mistake.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/egli,33,https://github.com/liblouis/liblouis/pull/720#issuecomment-853355693,,@bertfrees can you push the yaml file?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/bertfrees,34,https://github.com/liblouis/liblouis/pull/720#issuecomment-853765809,,@egli I've added some more changes including the YAML file and rebase onto the latest master.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,35,https://github.com/liblouis/liblouis/pull/720#issuecomment-854533400,,Thank you for the help and the good work! Is there anything I could still help? Or is there anything else I can do to to help?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/egli,36,https://github.com/liblouis/liblouis/pull/720#issuecomment-855884095,,"Hi @vbprofi
There are five tests that fail. Can you have a look at those below and tell me if the tests are correct, for example is the expected braille of ""çîrok"" really ""⠡⠔⠗⠕⠅""?
- [çîrok, ⠡⠔⠗⠕⠅, {xfail: true}]
- [nêçîr, ⠝⠣⠡⠔⠗, {xfail: true}]
- [qamişlo, ⠟⠁⠍⠊⠎⠇⠕, {xfail: true}]
- [çand, ⠡⠁⠝⠙, {xfail: true}]
- [""ez û tu"", ""⠑⠵ ⠱ ⠳⠥"", {xfail: true}]",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,37,https://github.com/liblouis/liblouis/pull/720#issuecomment-857244701,,"I've checked and corrected the 5 examples. The following must now be correct:
Çîrok | 16, 35, 1235, 135, 13
nêçîr | 1345, 126, 16, 35, 1235
qamiŞlo | 12345, 1, 134, 24, 146, 123, 135
Çand | 16, 1, 1345, 145
ez û tu | 15, 1356 | 156 | 2345, 136
please try again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/egli,38,https://github.com/liblouis/liblouis/pull/720#issuecomment-857415596,,"Ah, thank you very much @vbprofi, now we are getting somewhere! Your corrections fixed two problems but three remain:
Input:    'çîrok'
Expected: '⠡⠔⠗⠕⠅' (length 5)
Received: '⠘⠯⠉⠔⠗⠕⠅' (length 7)
Diff:     Expected '⠡' but received '⠘' in index 0

Input:    'nêçîr'
Expected: '⠝⠣⠡⠔⠗' (length 5)
Received: '⠝⠣⠘⠯⠉⠔⠗' (length 7)
Diff:     Expected '⠡' but received '⠘' in index 2

Input:    'çand'
Expected: '⠡⠁⠝⠙' (length 4)
Received: '⠘⠯⠉⠁⠝⠙' (length 6)
Diff:     Expected '⠡' but received '⠘' in index 0

There seems to be a problem with 'ç'. It seems to be translated to ''⠘⠯⠉' instead of to '⠡'. Any idea why this would be happening?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/egli,39,https://github.com/liblouis/liblouis/pull/720#issuecomment-857416740,,"Ah, I see the problem, look at the table:
# Kurdish letters: Ç Ê Î Ş Û
letter	\x0037	16	KURDISH CAPITAL LETTER Ç
letter	\x0037	16	KURDISH SMALL LETTER Ç
letter	\x00CA	126	KURDISH CAPITAL LETTER Ê
...

the second line should say:
letter	\x00e7	16	KURDISH SMALL LETTER Ç

I'll fix it",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/egli,40,https://github.com/liblouis/liblouis/pull/720#issuecomment-857421799,,Fixed in d21ba86. This will be in the September release. Thanks @vbprofi !,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,720,2019-03-30T22:42:15Z,2021-06-07T13:30:53Z,2021-06-09T07:12:05Z,MERGED,True,173,0,7,https://github.com/vbprofi,adding northern kurdish table,7,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/720,https://github.com/vbprofi,41,https://github.com/liblouis/liblouis/pull/720#issuecomment-857447630,,"I am very satisfied with the result. Thank you very much for the great help!
We are now waiting for the next NVDA update, which will then include the current new Liblouis version, and hope that we can continue working on the Kurdish braile.
We can now close the thread here. I wish you a lot of power for your successful work! good luck and Until next time!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,724,2019-04-03T11:08:08Z,2019-05-28T11:54:27Z,2019-05-28T11:54:33Z,MERGED,True,22,22,1,https://github.com/bertfrees,Don't add -lyaml to LIBS if --with-yaml=no is specified,1,[],https://github.com/liblouis/liblouis/pull/724,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/724,"because this resulted in a runtime dependency on libyaml in liblouis.dylib if libyaml is installed on the compiler machine.
Note that ideally liblouis.dylib should never depend on libyaml, only lou_checkyaml should.
A better solution might be to use the action-if-found argument:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Libraries.html#Libraries","because this resulted in a runtime dependency on libyaml in liblouis.dylib if libyaml is installed on the compiler machine.
Note that ideally liblouis.dylib should never depend on libyaml, only lou_checkyaml should.
A better solution might be to use the action-if-found argument:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Libraries.html#Libraries",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,724,2019-04-03T11:08:08Z,2019-05-28T11:54:27Z,2019-05-28T11:54:33Z,MERGED,True,22,22,1,https://github.com/bertfrees,Don't add -lyaml to LIBS if --with-yaml=no is specified,1,[],https://github.com/liblouis/liblouis/pull/724,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/724#issuecomment-481135365,"because this resulted in a runtime dependency on libyaml in liblouis.dylib if libyaml is installed on the compiler machine.
Note that ideally liblouis.dylib should never depend on libyaml, only lou_checkyaml should.
A better solution might be to use the action-if-found argument:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Libraries.html#Libraries",If not do you need help with testing?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,724,2019-04-03T11:08:08Z,2019-05-28T11:54:27Z,2019-05-28T11:54:33Z,MERGED,True,22,22,1,https://github.com/bertfrees,Don't add -lyaml to LIBS if --with-yaml=no is specified,1,[],https://github.com/liblouis/liblouis/pull/724,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/724#issuecomment-481138243,"because this resulted in a runtime dependency on libyaml in liblouis.dylib if libyaml is installed on the compiler machine.
Note that ideally liblouis.dylib should never depend on libyaml, only lou_checkyaml should.
A better solution might be to use the action-if-found argument:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Libraries.html#Libraries",Only tested with and without the argument. What else needs to be tested? Without libyaml installed (and both with and without the argument)?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,724,2019-04-03T11:08:08Z,2019-05-28T11:54:27Z,2019-05-28T11:54:33Z,MERGED,True,22,22,1,https://github.com/bertfrees,Don't add -lyaml to LIBS if --with-yaml=no is specified,1,[],https://github.com/liblouis/liblouis/pull/724,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/724#issuecomment-481168099,"because this resulted in a runtime dependency on libyaml in liblouis.dylib if libyaml is installed on the compiler machine.
Note that ideally liblouis.dylib should never depend on libyaml, only lou_checkyaml should.
A better solution might be to use the action-if-found argument:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Libraries.html#Libraries","Without libyaml installed (and both with and without the argument)?

I guess so yes",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,725,2019-04-08T11:42:33Z,2019-04-09T10:14:04Z,2019-04-09T10:14:56Z,CLOSED,False,11,8,4,https://github.com/bertfrees,Build win64 version on Travis,1,[],https://github.com/liblouis/liblouis/pull/725,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/725,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,725,2019-04-08T11:42:33Z,2019-04-09T10:14:04Z,2019-04-09T10:14:56Z,CLOSED,False,11,8,4,https://github.com/bertfrees,Build win64 version on Travis,1,[],https://github.com/liblouis/liblouis/pull/725,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/725#issuecomment-481191042,,Merged in aee5afe,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,726,2019-04-09T10:22:31Z,2019-04-14T10:24:49Z,2019-04-14T10:24:57Z,CLOSED,False,388,0,3,https://github.com/bertfrees,Add a YAML file to document the differences between the match and multipass opcodes,1,[],https://github.com/liblouis/liblouis/pull/726,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/726,see issue #475,see issue #475,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,726,2019-04-09T10:22:31Z,2019-04-14T10:24:49Z,2019-04-14T10:24:57Z,CLOSED,False,388,0,3,https://github.com/bertfrees,Add a YAML file to document the differences between the match and multipass opcodes,1,[],https://github.com/liblouis/liblouis/pull/726,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/726#issuecomment-482942759,see issue #475,Merged in 70f55ef,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,727,2019-04-14T11:37:24Z,2019-05-27T15:10:41Z,2019-05-27T15:10:48Z,MERGED,True,437,0,3,https://github.com/bertfrees,Typeform tests for Norwegian,1,[],https://github.com/liblouis/liblouis/pull/727,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/727,An old branch I had lying around...,An old branch I had lying around...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,727,2019-04-14T11:37:24Z,2019-05-27T15:10:41Z,2019-05-27T15:10:48Z,MERGED,True,437,0,3,https://github.com/bertfrees,Typeform tests for Norwegian,1,[],https://github.com/liblouis/liblouis/pull/727,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/727#issuecomment-483182161,An old branch I had lying around...,Yes needs some work...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,730,2019-05-02T03:47:24Z,2019-08-14T15:03:08Z,2019-08-14T15:03:08Z,CLOSED,False,2229462,0,38,https://github.com/DrSooom,Adding the HUC8 and the HUC6 Braille Tables,1,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/730,https://github.com/DrSooom,1,https://github.com/liblouis/liblouis/pull/730,"Link to issue number:
Closes #688
Closes #689
Summary of the issue:
Depending on the braille table you are using, undefined Unicode characters are always shown with the same braille character or with their hexadecimal value such as '\x0030'. For further information please take a look at the official documentation (Wayback Machine).
Description of how this pull request fixes the issue:
This PR only adds all tbi and tbl files of the HUC8 and the HUC6 Braille Tables. It doesn't change any other braille tables. How the HUC Braille Tables are used like a secondary braille table (don't confuse it with the ""include"" command) still has to be done in another PR – or even in the end application. See also nvaccess/nvda#8702.
And please note that UTF-16 end applications require only four files with a total file size of 3.70 MB. The complete HUC Braille Tables require 76.1 MB. See also question No. ⣡.
Testing performed:

Included the UTF16 variants of the HUC8 and the HUC6 Braille Tables into some English, German and French braille tables in NVDA. See also this installation instruction in the official documentation.
Furthermore the HUC8 and the HUC6 Braille Tables were also tested as stand-alone tables in NVDA. See question No. ⣥.

Pending tasks:

Check all definitions primary in the files ""huc8-u+0000-u+ffff.tbi"" and ""huc6-u+0000-u+ffff.tbi"". If the first 256 entries in the file ""huc8-u+0000-u+ffff.tbi"" are correct, then from here on you just have to check every 256th entry. And for the file ""huc6-u+0000-u+ffff.tbi"" the first 16 entries have to be check followed by every 16th entry. If these two files don't contain any errors, then you just you only have to check the very first entry of all the other 32 tbi files due to Copy&Paste.
Braille input testing. I only checked the braille output.
And as NVDA 2019.1 only supports UTF-16, I wasn't able to test the UTF-32 variants.
And please don't ask me how YAML tests should be created for such kind of braille tables.

Known issues with pull request:

The ""include"" command at the very end of a file might not be the perfect way how the HUC Braille Tables should be used. Due to multiple definitions computer braille issues sometimes could raise, which can be easily fix by commenting some code points out in the HUC Braille Tables. See also question No. ⢅, No. ⠁ and No. ⣅ in the official documentation.
The stand-alone tests succeeded without raising errors. Well, spaces were still only shown in the HUC style while the cursor is directly in front of it and the option ""Expand to computer braille for the word at the cursor"" in the Braille NVDA settings is enabled in NVDA – otherwise they were displayed as ⠀ (dot 0). (I will add this behavior to the FAQ section in the next update of the documentation.)","Link to issue number:
Closes #688
Closes #689
Summary of the issue:
Depending on the braille table you are using, undefined Unicode characters are always shown with the same braille character or with their hexadecimal value such as '\x0030'. For further information please take a look at the official documentation (Wayback Machine).
Description of how this pull request fixes the issue:
This PR only adds all tbi and tbl files of the HUC8 and the HUC6 Braille Tables. It doesn't change any other braille tables. How the HUC Braille Tables are used like a secondary braille table (don't confuse it with the ""include"" command) still has to be done in another PR – or even in the end application. See also nvaccess/nvda#8702.
And please note that UTF-16 end applications require only four files with a total file size of 3.70 MB. The complete HUC Braille Tables require 76.1 MB. See also question No. ⣡.
Testing performed:

Included the UTF16 variants of the HUC8 and the HUC6 Braille Tables into some English, German and French braille tables in NVDA. See also this installation instruction in the official documentation.
Furthermore the HUC8 and the HUC6 Braille Tables were also tested as stand-alone tables in NVDA. See question No. ⣥.

Pending tasks:

Check all definitions primary in the files ""huc8-u+0000-u+ffff.tbi"" and ""huc6-u+0000-u+ffff.tbi"". If the first 256 entries in the file ""huc8-u+0000-u+ffff.tbi"" are correct, then from here on you just have to check every 256th entry. And for the file ""huc6-u+0000-u+ffff.tbi"" the first 16 entries have to be check followed by every 16th entry. If these two files don't contain any errors, then you just you only have to check the very first entry of all the other 32 tbi files due to Copy&Paste.
Braille input testing. I only checked the braille output.
And as NVDA 2019.1 only supports UTF-16, I wasn't able to test the UTF-32 variants.
And please don't ask me how YAML tests should be created for such kind of braille tables.

Known issues with pull request:

The ""include"" command at the very end of a file might not be the perfect way how the HUC Braille Tables should be used. Due to multiple definitions computer braille issues sometimes could raise, which can be easily fix by commenting some code points out in the HUC Braille Tables. See also question No. ⢅, No. ⠁ and No. ⣅ in the official documentation.
The stand-alone tests succeeded without raising errors. Well, spaces were still only shown in the HUC style while the cursor is directly in front of it and the option ""Expand to computer braille for the word at the cursor"" in the Braille NVDA settings is enabled in NVDA – otherwise they were displayed as ⠀ (dot 0). (I will add this behavior to the FAQ section in the next update of the documentation.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,730,2019-05-02T03:47:24Z,2019-08-14T15:03:08Z,2019-08-14T15:03:08Z,CLOSED,False,2229462,0,38,https://github.com/DrSooom,Adding the HUC8 and the HUC6 Braille Tables,1,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/730,https://github.com/DrSooom,2,https://github.com/liblouis/liblouis/pull/730#issuecomment-488978516,"Link to issue number:
Closes #688
Closes #689
Summary of the issue:
Depending on the braille table you are using, undefined Unicode characters are always shown with the same braille character or with their hexadecimal value such as '\x0030'. For further information please take a look at the official documentation (Wayback Machine).
Description of how this pull request fixes the issue:
This PR only adds all tbi and tbl files of the HUC8 and the HUC6 Braille Tables. It doesn't change any other braille tables. How the HUC Braille Tables are used like a secondary braille table (don't confuse it with the ""include"" command) still has to be done in another PR – or even in the end application. See also nvaccess/nvda#8702.
And please note that UTF-16 end applications require only four files with a total file size of 3.70 MB. The complete HUC Braille Tables require 76.1 MB. See also question No. ⣡.
Testing performed:

Included the UTF16 variants of the HUC8 and the HUC6 Braille Tables into some English, German and French braille tables in NVDA. See also this installation instruction in the official documentation.
Furthermore the HUC8 and the HUC6 Braille Tables were also tested as stand-alone tables in NVDA. See question No. ⣥.

Pending tasks:

Check all definitions primary in the files ""huc8-u+0000-u+ffff.tbi"" and ""huc6-u+0000-u+ffff.tbi"". If the first 256 entries in the file ""huc8-u+0000-u+ffff.tbi"" are correct, then from here on you just have to check every 256th entry. And for the file ""huc6-u+0000-u+ffff.tbi"" the first 16 entries have to be check followed by every 16th entry. If these two files don't contain any errors, then you just you only have to check the very first entry of all the other 32 tbi files due to Copy&Paste.
Braille input testing. I only checked the braille output.
And as NVDA 2019.1 only supports UTF-16, I wasn't able to test the UTF-32 variants.
And please don't ask me how YAML tests should be created for such kind of braille tables.

Known issues with pull request:

The ""include"" command at the very end of a file might not be the perfect way how the HUC Braille Tables should be used. Due to multiple definitions computer braille issues sometimes could raise, which can be easily fix by commenting some code points out in the HUC Braille Tables. See also question No. ⢅, No. ⠁ and No. ⣅ in the official documentation.
The stand-alone tests succeeded without raising errors. Well, spaces were still only shown in the HUC style while the cursor is directly in front of it and the option ""Expand to computer braille for the word at the cursor"" in the Braille NVDA settings is enabled in NVDA – otherwise they were displayed as ⠀ (dot 0). (I will add this behavior to the FAQ section in the next update of the documentation.)",I recently added question No. ⠇ (Wayback Machine) regarding how spaces and non-breaking spaces are displayed.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,730,2019-05-02T03:47:24Z,2019-08-14T15:03:08Z,2019-08-14T15:03:08Z,CLOSED,False,2229462,0,38,https://github.com/DrSooom,Adding the HUC8 and the HUC6 Braille Tables,1,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/730,https://github.com/DrSooom,3,https://github.com/liblouis/liblouis/pull/730#issuecomment-489298856,"Link to issue number:
Closes #688
Closes #689
Summary of the issue:
Depending on the braille table you are using, undefined Unicode characters are always shown with the same braille character or with their hexadecimal value such as '\x0030'. For further information please take a look at the official documentation (Wayback Machine).
Description of how this pull request fixes the issue:
This PR only adds all tbi and tbl files of the HUC8 and the HUC6 Braille Tables. It doesn't change any other braille tables. How the HUC Braille Tables are used like a secondary braille table (don't confuse it with the ""include"" command) still has to be done in another PR – or even in the end application. See also nvaccess/nvda#8702.
And please note that UTF-16 end applications require only four files with a total file size of 3.70 MB. The complete HUC Braille Tables require 76.1 MB. See also question No. ⣡.
Testing performed:

Included the UTF16 variants of the HUC8 and the HUC6 Braille Tables into some English, German and French braille tables in NVDA. See also this installation instruction in the official documentation.
Furthermore the HUC8 and the HUC6 Braille Tables were also tested as stand-alone tables in NVDA. See question No. ⣥.

Pending tasks:

Check all definitions primary in the files ""huc8-u+0000-u+ffff.tbi"" and ""huc6-u+0000-u+ffff.tbi"". If the first 256 entries in the file ""huc8-u+0000-u+ffff.tbi"" are correct, then from here on you just have to check every 256th entry. And for the file ""huc6-u+0000-u+ffff.tbi"" the first 16 entries have to be check followed by every 16th entry. If these two files don't contain any errors, then you just you only have to check the very first entry of all the other 32 tbi files due to Copy&Paste.
Braille input testing. I only checked the braille output.
And as NVDA 2019.1 only supports UTF-16, I wasn't able to test the UTF-32 variants.
And please don't ask me how YAML tests should be created for such kind of braille tables.

Known issues with pull request:

The ""include"" command at the very end of a file might not be the perfect way how the HUC Braille Tables should be used. Due to multiple definitions computer braille issues sometimes could raise, which can be easily fix by commenting some code points out in the HUC Braille Tables. See also question No. ⢅, No. ⠁ and No. ⣅ in the official documentation.
The stand-alone tests succeeded without raising errors. Well, spaces were still only shown in the HUC style while the cursor is directly in front of it and the option ""Expand to computer braille for the word at the cursor"" in the Braille NVDA settings is enabled in NVDA – otherwise they were displayed as ⠀ (dot 0). (I will add this behavior to the FAQ section in the next update of the documentation.)","I already thought that I have overlooked something. Sorry, I uploaded all 38 files to the root folder and not to the ""tables"" folder. As the 34 tbi files are too large for editing at the GitHub website, which is required for moving them, I hope that you are able to move these 38 files to the correct folder. Otherwise I have to delete and upload them again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,730,2019-05-02T03:47:24Z,2019-08-14T15:03:08Z,2019-08-14T15:03:08Z,CLOSED,False,2229462,0,38,https://github.com/DrSooom,Adding the HUC8 and the HUC6 Braille Tables,1,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/730,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/730#issuecomment-493139040,"Link to issue number:
Closes #688
Closes #689
Summary of the issue:
Depending on the braille table you are using, undefined Unicode characters are always shown with the same braille character or with their hexadecimal value such as '\x0030'. For further information please take a look at the official documentation (Wayback Machine).
Description of how this pull request fixes the issue:
This PR only adds all tbi and tbl files of the HUC8 and the HUC6 Braille Tables. It doesn't change any other braille tables. How the HUC Braille Tables are used like a secondary braille table (don't confuse it with the ""include"" command) still has to be done in another PR – or even in the end application. See also nvaccess/nvda#8702.
And please note that UTF-16 end applications require only four files with a total file size of 3.70 MB. The complete HUC Braille Tables require 76.1 MB. See also question No. ⣡.
Testing performed:

Included the UTF16 variants of the HUC8 and the HUC6 Braille Tables into some English, German and French braille tables in NVDA. See also this installation instruction in the official documentation.
Furthermore the HUC8 and the HUC6 Braille Tables were also tested as stand-alone tables in NVDA. See question No. ⣥.

Pending tasks:

Check all definitions primary in the files ""huc8-u+0000-u+ffff.tbi"" and ""huc6-u+0000-u+ffff.tbi"". If the first 256 entries in the file ""huc8-u+0000-u+ffff.tbi"" are correct, then from here on you just have to check every 256th entry. And for the file ""huc6-u+0000-u+ffff.tbi"" the first 16 entries have to be check followed by every 16th entry. If these two files don't contain any errors, then you just you only have to check the very first entry of all the other 32 tbi files due to Copy&Paste.
Braille input testing. I only checked the braille output.
And as NVDA 2019.1 only supports UTF-16, I wasn't able to test the UTF-32 variants.
And please don't ask me how YAML tests should be created for such kind of braille tables.

Known issues with pull request:

The ""include"" command at the very end of a file might not be the perfect way how the HUC Braille Tables should be used. Due to multiple definitions computer braille issues sometimes could raise, which can be easily fix by commenting some code points out in the HUC Braille Tables. See also question No. ⢅, No. ⠁ and No. ⣅ in the official documentation.
The stand-alone tests succeeded without raising errors. Well, spaces were still only shown in the HUC style while the cursor is directly in front of it and the option ""Expand to computer braille for the word at the cursor"" in the Braille NVDA settings is enabled in NVDA – otherwise they were displayed as ⠀ (dot 0). (I will add this behavior to the FAQ section in the next update of the documentation.)","Looks good!

Sorry, I uploaded all 38 files to the root folder and not to the ""tables"" folder.

Don't worry, we can fix that.
I think a YAML test would be great, but I will take care of that too.
Regarding the naming: shouldn't the "".tbl"" extension in huc6-utf16.tbl etc. be changed to "".tbi""? Will this table ever be used standalone?
Because these tables use up quite a lot of space, I was thinking of maybe storing them in compressed form? We could also omit the part that is only needed for UTF-32 applications in the UTF-16 build.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,730,2019-05-02T03:47:24Z,2019-08-14T15:03:08Z,2019-08-14T15:03:08Z,CLOSED,False,2229462,0,38,https://github.com/DrSooom,Adding the HUC8 and the HUC6 Braille Tables,1,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/730,https://github.com/DrSooom,5,https://github.com/liblouis/liblouis/pull/730#issuecomment-493496555,"Link to issue number:
Closes #688
Closes #689
Summary of the issue:
Depending on the braille table you are using, undefined Unicode characters are always shown with the same braille character or with their hexadecimal value such as '\x0030'. For further information please take a look at the official documentation (Wayback Machine).
Description of how this pull request fixes the issue:
This PR only adds all tbi and tbl files of the HUC8 and the HUC6 Braille Tables. It doesn't change any other braille tables. How the HUC Braille Tables are used like a secondary braille table (don't confuse it with the ""include"" command) still has to be done in another PR – or even in the end application. See also nvaccess/nvda#8702.
And please note that UTF-16 end applications require only four files with a total file size of 3.70 MB. The complete HUC Braille Tables require 76.1 MB. See also question No. ⣡.
Testing performed:

Included the UTF16 variants of the HUC8 and the HUC6 Braille Tables into some English, German and French braille tables in NVDA. See also this installation instruction in the official documentation.
Furthermore the HUC8 and the HUC6 Braille Tables were also tested as stand-alone tables in NVDA. See question No. ⣥.

Pending tasks:

Check all definitions primary in the files ""huc8-u+0000-u+ffff.tbi"" and ""huc6-u+0000-u+ffff.tbi"". If the first 256 entries in the file ""huc8-u+0000-u+ffff.tbi"" are correct, then from here on you just have to check every 256th entry. And for the file ""huc6-u+0000-u+ffff.tbi"" the first 16 entries have to be check followed by every 16th entry. If these two files don't contain any errors, then you just you only have to check the very first entry of all the other 32 tbi files due to Copy&Paste.
Braille input testing. I only checked the braille output.
And as NVDA 2019.1 only supports UTF-16, I wasn't able to test the UTF-32 variants.
And please don't ask me how YAML tests should be created for such kind of braille tables.

Known issues with pull request:

The ""include"" command at the very end of a file might not be the perfect way how the HUC Braille Tables should be used. Due to multiple definitions computer braille issues sometimes could raise, which can be easily fix by commenting some code points out in the HUC Braille Tables. See also question No. ⢅, No. ⠁ and No. ⣅ in the official documentation.
The stand-alone tests succeeded without raising errors. Well, spaces were still only shown in the HUC style while the cursor is directly in front of it and the option ""Expand to computer braille for the word at the cursor"" in the Braille NVDA settings is enabled in NVDA – otherwise they were displayed as ⠀ (dot 0). (I will add this behavior to the FAQ section in the next update of the documentation.)","Regarding the naming: shouldn't the "".tbl"" extension in huc6-utf16.tbl etc. be changed to "".tbi""?

I was already thinking about this at the beginning of the creation process and I decided that the four head files should be recognized in an easier way. Furthermore including them just into other tables isn't the best solution due to multiple definitions. (Please read the FAQ for more details.) Maybe later on the end application could use the HUC Braille Tables as a secondary braille table for braille output only. This should eliminate the multiple definitions problems. And finally it's easier just to name the four tbl files in the manual instead of explaining the whole structure of the HUC Braille Tables. As the HUC Braille Tables contains two levels, these levels should be represented by their file ending too.

Will this table ever be used standalone?

It is possible, but not recommended. Well, but maybe some nerds want to recognize respectively want to read the code points of Unicode characters alone. But as I already wrote here in the documentation – it isn't the primary way how the HUC Braille Tables should be used. But on the other hand I don't want to block that kind of using the HUC Braille Tables, as I haven't the permission to decide this. I want to keep both ways open. Therefore two new entries in the braille output list in NVDA for the HUC Braille Tables (stand-alone) would be nice too. CC: @leonardder

Because these tables use up quite a lot of space, I was thinking of maybe storing them in compressed form? We could also omit the part that is only needed for UTF-32 applications in the UTF-16 build.

I suggest to add a new option for the building process. As UTF-16 end applications don't need 34 of the 38 files, they should be of course omitted. Therefore I created two tbl files for UTF-16 and two tbl files for UTF-32 end applications. UTF-32 end applications don't need the ""*-utf16.tbl"" files, vice versa. So if the developer already knows, which UTF encoding format is used, he just have to choose the correct tbl files for extending other braille tables. I tried to keep the whole using/including process of the HUC Braille Tables as simple as possible for everybody. Therefore I created the two files ""huc8-utf16.tbl"" and ""huc6-utf16.tbl"" as well, even if they aren't really required. But having them makes the explanation much easier.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,730,2019-05-02T03:47:24Z,2019-08-14T15:03:08Z,2019-08-14T15:03:08Z,CLOSED,False,2229462,0,38,https://github.com/DrSooom,Adding the HUC8 and the HUC6 Braille Tables,1,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/730,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/730#issuecomment-521285099,"Link to issue number:
Closes #688
Closes #689
Summary of the issue:
Depending on the braille table you are using, undefined Unicode characters are always shown with the same braille character or with their hexadecimal value such as '\x0030'. For further information please take a look at the official documentation (Wayback Machine).
Description of how this pull request fixes the issue:
This PR only adds all tbi and tbl files of the HUC8 and the HUC6 Braille Tables. It doesn't change any other braille tables. How the HUC Braille Tables are used like a secondary braille table (don't confuse it with the ""include"" command) still has to be done in another PR – or even in the end application. See also nvaccess/nvda#8702.
And please note that UTF-16 end applications require only four files with a total file size of 3.70 MB. The complete HUC Braille Tables require 76.1 MB. See also question No. ⣡.
Testing performed:

Included the UTF16 variants of the HUC8 and the HUC6 Braille Tables into some English, German and French braille tables in NVDA. See also this installation instruction in the official documentation.
Furthermore the HUC8 and the HUC6 Braille Tables were also tested as stand-alone tables in NVDA. See question No. ⣥.

Pending tasks:

Check all definitions primary in the files ""huc8-u+0000-u+ffff.tbi"" and ""huc6-u+0000-u+ffff.tbi"". If the first 256 entries in the file ""huc8-u+0000-u+ffff.tbi"" are correct, then from here on you just have to check every 256th entry. And for the file ""huc6-u+0000-u+ffff.tbi"" the first 16 entries have to be check followed by every 16th entry. If these two files don't contain any errors, then you just you only have to check the very first entry of all the other 32 tbi files due to Copy&Paste.
Braille input testing. I only checked the braille output.
And as NVDA 2019.1 only supports UTF-16, I wasn't able to test the UTF-32 variants.
And please don't ask me how YAML tests should be created for such kind of braille tables.

Known issues with pull request:

The ""include"" command at the very end of a file might not be the perfect way how the HUC Braille Tables should be used. Due to multiple definitions computer braille issues sometimes could raise, which can be easily fix by commenting some code points out in the HUC Braille Tables. See also question No. ⢅, No. ⠁ and No. ⣅ in the official documentation.
The stand-alone tests succeeded without raising errors. Well, spaces were still only shown in the HUC style while the cursor is directly in front of it and the option ""Expand to computer braille for the word at the cursor"" in the Braille NVDA settings is enabled in NVDA – otherwise they were displayed as ⠀ (dot 0). (I will add this behavior to the FAQ section in the next update of the documentation.)","As I mentioned in #689 (comment), I think this should not go in as such. @DrSooom you are of course free to distribute the tables separately, but I think a better approach would be to add a new mode to liblouis. This new mode will then invoke some code that will emit HUC Braille for unknown Unicode characters as opposed to the escaped Unicode which is the current functionality",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,732,2019-05-17T15:45:38Z,2019-05-21T13:45:53Z,2019-05-28T13:33:04Z,MERGED,True,193,2,5,https://github.com/egli,Add realloc to tools gnulib,1,[],https://github.com/liblouis/liblouis/pull/732,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/732,"Fixes #329
Contrary to the discussion in the issue, I'm not reusing the gnulib
realloc from the top level but instead I'm just adding realloc to the
tools version of gnulib.","Fixes #329
Contrary to the discussion in the issue, I'm not reusing the gnulib
realloc from the top level but instead I'm just adding realloc to the
tools version of gnulib.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,733,2019-05-20T19:20:14Z,2019-05-21T07:33:43Z,2019-05-21T07:33:44Z,MERGED,True,5,2,2,https://github.com/tibbsa,Fix UEB contracted back-translation of 'qk' and add YAML verification test,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/733,https://github.com/tibbsa,1,https://github.com/liblouis/liblouis/pull/733,"Resolution for issue #562 (where 'qk' was back-translating as ""quick's"").
It appears that when someone added an annotation to UEB Rule 10.9.3, that annotation was inadvertently inserted into the middle of the relevant rule rather than at the end.","Resolution for issue #562 (where 'qk' was back-translating as ""quick's"").
It appears that when someone added an annotation to UEB Rule 10.9.3, that annotation was inadvertently inserted into the middle of the relevant rule rather than at the end.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,733,2019-05-20T19:20:14Z,2019-05-21T07:33:43Z,2019-05-21T07:33:44Z,MERGED,True,5,2,2,https://github.com/tibbsa,Fix UEB contracted back-translation of 'qk' and add YAML verification test,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/733,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/733#issuecomment-494176433,"Resolution for issue #562 (where 'qk' was back-translating as ""quick's"").
It appears that when someone added an annotation to UEB Rule 10.9.3, that annotation was inadvertently inserted into the middle of the relevant rule rather than at the end.",Nice! Thanks. Merged in 83484d8.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,735,2019-05-20T19:50:48Z,2019-05-21T07:35:14Z,2019-05-21T07:35:14Z,MERGED,True,10,3,2,https://github.com/tibbsa,"Fix UEB contracted back-translation of ""first"" and ""it's""",1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/735,https://github.com/tibbsa,1,https://github.com/liblouis/liblouis/pull/735,"Partial resolution to issue #572 regarding the UEB issues only.
Fixed ""⠋⠌"" erroneously back-translating as ""first's"" rather than ""first"". When the table was edited ao annotate this as flowing from UEB Rule 10.9.3, the rule was inadvertently inserted into the midst of the rule breaking it.
Fixed ""⠭⠄⠎"" erroneously back-translating as ""x's"" rather than ""it's"".  The dot pattern for ""x"" was misspecified in the table as 1-3-4-5 (N) rather than 1-3-4-6 (X).
Adds YAML tests for verification.
The UK English grade 2 ""double L"" issue also raised in #572 is not addressed by this pull request.","Partial resolution to issue #572 regarding the UEB issues only.
Fixed ""⠋⠌"" erroneously back-translating as ""first's"" rather than ""first"". When the table was edited ao annotate this as flowing from UEB Rule 10.9.3, the rule was inadvertently inserted into the midst of the rule breaking it.
Fixed ""⠭⠄⠎"" erroneously back-translating as ""x's"" rather than ""it's"".  The dot pattern for ""x"" was misspecified in the table as 1-3-4-5 (N) rather than 1-3-4-6 (X).
Adds YAML tests for verification.
The UK English grade 2 ""double L"" issue also raised in #572 is not addressed by this pull request.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,735,2019-05-20T19:50:48Z,2019-05-21T07:35:14Z,2019-05-21T07:35:14Z,MERGED,True,10,3,2,https://github.com/tibbsa,"Fix UEB contracted back-translation of ""first"" and ""it's""",1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/735,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/735#issuecomment-494176479,"Partial resolution to issue #572 regarding the UEB issues only.
Fixed ""⠋⠌"" erroneously back-translating as ""first's"" rather than ""first"". When the table was edited ao annotate this as flowing from UEB Rule 10.9.3, the rule was inadvertently inserted into the midst of the rule breaking it.
Fixed ""⠭⠄⠎"" erroneously back-translating as ""x's"" rather than ""it's"".  The dot pattern for ""x"" was misspecified in the table as 1-3-4-5 (N) rather than 1-3-4-6 (X).
Adds YAML tests for verification.
The UK English grade 2 ""double L"" issue also raised in #572 is not addressed by this pull request.",Thanks. Merged in f984b04,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,736,2019-05-21T16:10:11Z,2019-05-22T07:15:00Z,2019-05-22T07:15:21Z,MERGED,True,18,1,2,https://github.com/tibbsa,UK English Braille Grade 2 - Correct erroneous back-translation of 'll',1,['tables'],https://github.com/liblouis/liblouis/pull/736,https://github.com/tibbsa,1,https://github.com/liblouis/liblouis/pull/736,"Resolution to remaining problems reported at issue #572 relating to the UK grade 2 table.
Resolves numerous problems surrounding the (ll)=(little) and (bel)=(below) contractions.
On back-translation, the letters ""ll"" were being back-translated as 'little' regardless of where they appeared in the word (resulting in e.g. ball => balittle).
On back-translation, ""(be)little"" was erroneously back-translated as ""belowittle"".
On back-translation, ""(be)(ll)d"" was erroneously back-translated as ""belowld"".
On forward-translation, ""belittle"" was being abbreviated to ""(be)ll"" creating ambiguity between belittle and bell.
This patch corrects the above issues and adds YAML verification tests based on examples in UKAAF standards.","Resolution to remaining problems reported at issue #572 relating to the UK grade 2 table.
Resolves numerous problems surrounding the (ll)=(little) and (bel)=(below) contractions.
On back-translation, the letters ""ll"" were being back-translated as 'little' regardless of where they appeared in the word (resulting in e.g. ball => balittle).
On back-translation, ""(be)little"" was erroneously back-translated as ""belowittle"".
On back-translation, ""(be)(ll)d"" was erroneously back-translated as ""belowld"".
On forward-translation, ""belittle"" was being abbreviated to ""(be)ll"" creating ambiguity between belittle and bell.
This patch corrects the above issues and adds YAML verification tests based on examples in UKAAF standards.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,736,2019-05-21T16:10:11Z,2019-05-22T07:15:00Z,2019-05-22T07:15:21Z,MERGED,True,18,1,2,https://github.com/tibbsa,UK English Braille Grade 2 - Correct erroneous back-translation of 'll',1,['tables'],https://github.com/liblouis/liblouis/pull/736,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/736#issuecomment-494682583,"Resolution to remaining problems reported at issue #572 relating to the UK grade 2 table.
Resolves numerous problems surrounding the (ll)=(little) and (bel)=(below) contractions.
On back-translation, the letters ""ll"" were being back-translated as 'little' regardless of where they appeared in the word (resulting in e.g. ball => balittle).
On back-translation, ""(be)little"" was erroneously back-translated as ""belowittle"".
On back-translation, ""(be)(ll)d"" was erroneously back-translated as ""belowld"".
On forward-translation, ""belittle"" was being abbreviated to ""(be)ll"" creating ambiguity between belittle and bell.
This patch corrects the above issues and adds YAML verification tests based on examples in UKAAF standards.","@tibbsa man, you're a total hero, thanks for those fixes!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,737,2019-05-22T08:16:01Z,2019-05-28T09:30:47Z,2019-05-28T09:30:55Z,MERGED,True,43,4,4,https://github.com/egli,Add musical unicode characters to German 8-dot braille,4,['tables'],https://github.com/liblouis/liblouis/pull/737,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/737,Fixes #685,Fixes #685,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,737,2019-05-22T08:16:01Z,2019-05-28T09:30:47Z,2019-05-28T09:30:55Z,MERGED,True,43,4,4,https://github.com/egli,Add musical unicode characters to German 8-dot braille,4,['tables'],https://github.com/liblouis/liblouis/pull/737,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/737#issuecomment-494780196,Fixes #685,@bertfrees if you look above in that table (line 300 of tables/de-de-comp8.ctb) there is a comment saying that the whole second part of the table is non-standard.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,737,2019-05-22T08:16:01Z,2019-05-28T09:30:47Z,2019-05-28T09:30:55Z,MERGED,True,43,4,4,https://github.com/egli,Add musical unicode characters to German 8-dot braille,4,['tables'],https://github.com/liblouis/liblouis/pull/737,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/737#issuecomment-494791770,Fixes #685,"Right, I forgot.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,737,2019-05-22T08:16:01Z,2019-05-28T09:30:47Z,2019-05-28T09:30:55Z,MERGED,True,43,4,4,https://github.com/egli,Add musical unicode characters to German 8-dot braille,4,['tables'],https://github.com/liblouis/liblouis/pull/737,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/737#issuecomment-494791991,Fixes #685,Just a small test then and I'm happy.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,737,2019-05-22T08:16:01Z,2019-05-28T09:30:47Z,2019-05-28T09:30:55Z,MERGED,True,43,4,4,https://github.com/egli,Add musical unicode characters to German 8-dot braille,4,['tables'],https://github.com/liblouis/liblouis/pull/737,https://github.com/DrSooom,5,https://github.com/liblouis/liblouis/pull/737#issuecomment-494824542,Fixes #685,"The GitHub Website says ""No newline at end of file"" at line 480.
Finally thanks a lot for adding these three Unicode characters to the German 8-dot braille table. Hopefully this update will be useful for MuseScore users and all other users, who work with these musical signs.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,737,2019-05-22T08:16:01Z,2019-05-28T09:30:47Z,2019-05-28T09:30:55Z,MERGED,True,43,4,4,https://github.com/egli,Add musical unicode characters to German 8-dot braille,4,['tables'],https://github.com/liblouis/liblouis/pull/737,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/737#issuecomment-494826502,Fixes #685,"The GitHub Website says ""No newline at end of file"" at line 480.

Right. This can break the last rule. These kind of mistakes will be caught by the test.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,1,https://github.com/liblouis/liblouis/pull/738,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/738#issuecomment-494785780,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"Explain why these characters are ""unnecessary""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,3,https://github.com/liblouis/liblouis/pull/738#issuecomment-494792659,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"Hi, in the mn-mn-common.cti, there were built characters which were added in 2015. Most of those characters were old russian characters, and Mr. Tsengel and we decided to follow en-ueb table for the punctuations and rest of the signs except Mongolian alphabet and additional 2 signs that en-ueb doesn't have. Therefore, I removed those characters, to ensure smooth transition for output and input braille table for Mongolian language. When ru.dis was included and those old characters were in, back translation had many conflicts from en-ueb and built in old  russian characters, therefore it was necessary to smooth things  out.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/738#issuecomment-494792826,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,OK we'll have to discuss this with the table maintainers. Presumably they didn't pay much attention at back-translation before.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/738#issuecomment-494793112,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"Oh, you have discussed this with Mr. Tsengel already?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,6,https://github.com/liblouis/liblouis/pull/738#issuecomment-494793405,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"Yes, actually I  have changed it under mr Tsengel's order.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,7,https://github.com/liblouis/liblouis/pull/738#issuecomment-494794738,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"If it is necessary, I will ask Mr Tsengel to comment here. Or ask him to submit the commits. I also had removed the ru.dis from the  mn-mn-g1.utb and mn-mn-g2.ctb, but the testing had failed. Please let me know what needs to be done to make those changes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,8,https://github.com/liblouis/liblouis/pull/738#issuecomment-494796894,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,#740,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/738#issuecomment-494799890,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"OK. Then it is probably OK. But what I would like to have some additions to the test file ""mn-MN_harness.yaml"" that shows:

 1. that this change was needed to fix back-translation issues, and
 2. since it appears you have removed all non-Cyrillic characters and punctuation from the table and you are now solely depending on the inclusion of ""en-ueb-g1.ctb"" to handle these, it might be a good idea to include some non-Mongolian stuff in the tests as well, to make sure your table does not break unexpectedly when en-ueb-g1.ctb changes.

Let me know if you need help creating the tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,10,https://github.com/liblouis/liblouis/pull/738#issuecomment-494801419,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,I'm very clueless when it comes to testing yaml. please tell me what to do. I will appriciate  it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/738#issuecomment-494804801,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"We have a section in the user manual about the tests: http://liblouis.org/documentation/liblouis.html#Automated-Testing-of-Translation-Tables.
Basically a test file contain a list of tests, where each test consists of an input string and an expected output string. The input can be anything: a character, a word, a sentence, ... The expected output is what Liblouis is expected to produce when the input string is translated. Normally the input is normal text and the output is braille, but in back-translation mode the input is braille and the output is normal text.
The exact format of the tests is explained in the user manual, but the most important thing is the test data itself. It is not a problem if the format is not 100% correct. I will help you.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,12,https://github.com/liblouis/liblouis/pull/738#issuecomment-494808776,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"Ok i understand. But I don't exactly know how to put the braille strings in the yaml file. I can of course prepare normal testing sentence, but braille string for the normal string is  the problem which I don't know the way to solve.  please I need help with it. I can of course point out  the exact braille dot patterns for the whole sentence,",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/738#issuecomment-494814057,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"Whatever is easier for you. You may use the exact braille dot patters if you want. You can also provide only the inputs, not the expected outputs. You then send this file to me, I complete it with whatever Liblouis outputs for these inputs, and then I send it back to you so your can check the output is indeed correct.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,14,https://github.com/liblouis/liblouis/pull/738#issuecomment-494816695,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"please  convert this sentence into braille string. it shall be the test sentence.
Брайль бичиг бол хараагүй хүний ертөнцийг харах цонх мөн.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,15,https://github.com/liblouis/liblouis/pull/738#issuecomment-495052023,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,@bertfrees closed the other 2 pr and committed the changes in to this branch. Sorry for the inconvenience. It seems I'm still newbie  at github. :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/738#issuecomment-495118093,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,Thank you.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/738#issuecomment-500045833,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"@angaragmn  Maybe a test with non-Cyrillic letters to prove that works as expected?
I noticed that in mn-MN-g2.ctb you changed en-ueb-g2.ctb to en-ueb-g1.ctb. Was that an accident?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,18,https://github.com/liblouis/liblouis/pull/738#issuecomment-500675236,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"@bertfrees The changing of en-ueb-g2 to en-ueb-g1 is an accident. I'm sorry about that. Regarding the test with non-cyrillic letter, you mean I should test it with latin letters?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,19,https://github.com/liblouis/liblouis/pull/738#issuecomment-500760580,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"Yes, a test with some Latin letters would be nice.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/angaragmn,20,https://github.com/liblouis/liblouis/pull/738#issuecomment-503219089,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,"@bertfrees Hi, I appologize for taking so long. here is the sentence   that should be sufficient to take it as a test sentence.
I checked it with the braille display and NVDA with updated table i have. it is working splendedly. I hope it shall be alright with yaml too.
The only thing worse than being blind is having sight but no vision.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,738,2019-05-22T12:14:26Z,2019-06-20T21:28:37Z,2019-06-20T21:28:37Z,MERGED,True,73,412,6,https://github.com/angaragmn,Removed unnecessary characters and kept the required one's.,9,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/738,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/738#issuecomment-503220275,Removed the unnecessary signs and  characters in this table and kept the important one's. Now En-ueb table will work without any hitch. Back translation is working smoothily.,Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,739,2019-05-22T12:29:42Z,2019-05-23T03:02:02Z,2019-05-23T03:02:31Z,CLOSED,False,2,3,1,https://github.com/angaragmn,"Removed ru.dis, because it is unrequired.",1,[],https://github.com/liblouis/liblouis/pull/739,https://github.com/angaragmn,1,https://github.com/liblouis/liblouis/pull/739,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,739,2019-05-22T12:29:42Z,2019-05-23T03:02:02Z,2019-05-23T03:02:31Z,CLOSED,False,2,3,1,https://github.com/angaragmn,"Removed ru.dis, because it is unrequired.",1,[],https://github.com/liblouis/liblouis/pull/739,https://github.com/angaragmn,2,https://github.com/liblouis/liblouis/pull/739#issuecomment-494785155,,Failed?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,739,2019-05-22T12:29:42Z,2019-05-23T03:02:02Z,2019-05-23T03:02:31Z,CLOSED,False,2,3,1,https://github.com/angaragmn,"Removed ru.dis, because it is unrequired.",1,[],https://github.com/liblouis/liblouis/pull/739,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/739#issuecomment-494795305,,"This PR should be looked at together with #738, right? If that is indeed the case, could you add this commit to the other PR? Makes it a bit easier.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,740,2019-05-22T12:36:21Z,2019-05-23T03:05:02Z,2019-05-23T03:05:22Z,CLOSED,False,2,2,1,https://github.com/angaragmn,"Removed ru.dis, because it is not necessary in this table.",1,[],https://github.com/liblouis/liblouis/pull/740,https://github.com/angaragmn,1,https://github.com/liblouis/liblouis/pull/740,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,740,2019-05-22T12:36:21Z,2019-05-23T03:05:02Z,2019-05-23T03:05:22Z,CLOSED,False,2,2,1,https://github.com/angaragmn,"Removed ru.dis, because it is not necessary in this table.",1,[],https://github.com/liblouis/liblouis/pull/740,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/740#issuecomment-494800346,,"Same comment as in #739 (comment). I would appreciate if you could put everything in a single PR, to make it manageable by us.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,741,2019-05-22T16:23:03Z,2019-08-15T09:17:56Z,2020-01-23T11:10:33Z,MERGED,True,56,39,2,https://github.com/ultraleetj,Spanish grade 2 fixes and updates,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/741,https://github.com/ultraleetj,1,https://github.com/liblouis/liblouis/pull/741,"To do (user suggestions):
Add dot 5 when alphabet letters are presented by themselves, except q and w
In case of q and w,  add dots 5 and 6 by themselves to avoid confusion with accented variants/derivatives of these words.
Fixes are detailed in commits, however including them here for completeness:
Added new remarks (as comments) regarding use of pronouns with sources.
corrected contraction and derivatives: único. It was previously dots 23456-13 and should have ben 23456-14
word: ese also corrected
added: numerosas, cuya
Skipped: Sólo. Its accentuation has been discouraged at least since 1959, see RAE rules.
corrected: aquéllos, aquéllas an other commonly missaccented demonstrative pronouns conforming to the latest RAE rules.
Removed: contraction 5-1356, esté, it served no purpose at all and such word is not contracted.
corrected:

Más and mas. ""Más"", with accent, should not have a dot 5, and ""mas"",without accent, is not a single-cell abbreviation, it should be  134-12346.
Casi. should be 14-234, not  13-234.
Cierto. should be 14-2345 not 13-2345.
Igualdad should have the ad contraction at end, there is a leftover dot.
Joven should be jv. An error in the table contained an acute o which is not part of the word so that is why it was not contracted.
added derivative for it, jóvenes
Largo: an error in the table made this one not contract, it was spelled as lago. Corrected derivative lagos for largos and also added largas.
Necesidad. again, leftover dot 3 instead of 1456 at end
Puede. should be 1234-1256.
Relatividad. Should be 1235-123-1236-1456.
added: relatividades
Nuestro. Should be  1345-1256.
Sino. Should be sn. An error in the table was abbreviating sin instead of sino.
Estaba. Missing letter B: 1246-12. Rule contained an error since the -12 was being separated by whitespace.
""Números"" should be contracted as number sign and 246.

Links: Rae rules:
http://www.rae.es/consultas/el-adverbio-solo-y-los-pronombres-demostrativos-sin-tilde","To do (user suggestions):
Add dot 5 when alphabet letters are presented by themselves, except q and w
In case of q and w,  add dots 5 and 6 by themselves to avoid confusion with accented variants/derivatives of these words.
Fixes are detailed in commits, however including them here for completeness:
Added new remarks (as comments) regarding use of pronouns with sources.
corrected contraction and derivatives: único. It was previously dots 23456-13 and should have ben 23456-14
word: ese also corrected
added: numerosas, cuya
Skipped: Sólo. Its accentuation has been discouraged at least since 1959, see RAE rules.
corrected: aquéllos, aquéllas an other commonly missaccented demonstrative pronouns conforming to the latest RAE rules.
Removed: contraction 5-1356, esté, it served no purpose at all and such word is not contracted.
corrected:

Más and mas. ""Más"", with accent, should not have a dot 5, and ""mas"",without accent, is not a single-cell abbreviation, it should be  134-12346.
Casi. should be 14-234, not  13-234.
Cierto. should be 14-2345 not 13-2345.
Igualdad should have the ad contraction at end, there is a leftover dot.
Joven should be jv. An error in the table contained an acute o which is not part of the word so that is why it was not contracted.
added derivative for it, jóvenes
Largo: an error in the table made this one not contract, it was spelled as lago. Corrected derivative lagos for largos and also added largas.
Necesidad. again, leftover dot 3 instead of 1456 at end
Puede. should be 1234-1256.
Relatividad. Should be 1235-123-1236-1456.
added: relatividades
Nuestro. Should be  1345-1256.
Sino. Should be sn. An error in the table was abbreviating sin instead of sino.
Estaba. Missing letter B: 1246-12. Rule contained an error since the -12 was being separated by whitespace.
""Números"" should be contracted as number sign and 246.

Links: Rae rules:
http://www.rae.es/consultas/el-adverbio-solo-y-los-pronombres-demostrativos-sin-tilde",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,741,2019-05-22T16:23:03Z,2019-08-15T09:17:56Z,2020-01-23T11:10:33Z,MERGED,True,56,39,2,https://github.com/ultraleetj,Spanish grade 2 fixes and updates,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/741,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/741#issuecomment-521300493,"To do (user suggestions):
Add dot 5 when alphabet letters are presented by themselves, except q and w
In case of q and w,  add dots 5 and 6 by themselves to avoid confusion with accented variants/derivatives of these words.
Fixes are detailed in commits, however including them here for completeness:
Added new remarks (as comments) regarding use of pronouns with sources.
corrected contraction and derivatives: único. It was previously dots 23456-13 and should have ben 23456-14
word: ese also corrected
added: numerosas, cuya
Skipped: Sólo. Its accentuation has been discouraged at least since 1959, see RAE rules.
corrected: aquéllos, aquéllas an other commonly missaccented demonstrative pronouns conforming to the latest RAE rules.
Removed: contraction 5-1356, esté, it served no purpose at all and such word is not contracted.
corrected:

Más and mas. ""Más"", with accent, should not have a dot 5, and ""mas"",without accent, is not a single-cell abbreviation, it should be  134-12346.
Casi. should be 14-234, not  13-234.
Cierto. should be 14-2345 not 13-2345.
Igualdad should have the ad contraction at end, there is a leftover dot.
Joven should be jv. An error in the table contained an acute o which is not part of the word so that is why it was not contracted.
added derivative for it, jóvenes
Largo: an error in the table made this one not contract, it was spelled as lago. Corrected derivative lagos for largos and also added largas.
Necesidad. again, leftover dot 3 instead of 1456 at end
Puede. should be 1234-1256.
Relatividad. Should be 1235-123-1236-1456.
added: relatividades
Nuestro. Should be  1345-1256.
Sino. Should be sn. An error in the table was abbreviating sin instead of sino.
Estaba. Missing letter B: 1246-12. Rule contained an error since the -12 was being separated by whitespace.
""Números"" should be contracted as number sign and 246.

Links: Rae rules:
http://www.rae.es/consultas/el-adverbio-solo-y-los-pronombres-demostrativos-sin-tilde",I rebased the branch and updated the NEWS file.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,741,2019-05-22T16:23:03Z,2019-08-15T09:17:56Z,2020-01-23T11:10:33Z,MERGED,True,56,39,2,https://github.com/ultraleetj,Spanish grade 2 fixes and updates,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/741,https://github.com/ultraleetj,3,https://github.com/liblouis/liblouis/pull/741#issuecomment-521907916,"To do (user suggestions):
Add dot 5 when alphabet letters are presented by themselves, except q and w
In case of q and w,  add dots 5 and 6 by themselves to avoid confusion with accented variants/derivatives of these words.
Fixes are detailed in commits, however including them here for completeness:
Added new remarks (as comments) regarding use of pronouns with sources.
corrected contraction and derivatives: único. It was previously dots 23456-13 and should have ben 23456-14
word: ese also corrected
added: numerosas, cuya
Skipped: Sólo. Its accentuation has been discouraged at least since 1959, see RAE rules.
corrected: aquéllos, aquéllas an other commonly missaccented demonstrative pronouns conforming to the latest RAE rules.
Removed: contraction 5-1356, esté, it served no purpose at all and such word is not contracted.
corrected:

Más and mas. ""Más"", with accent, should not have a dot 5, and ""mas"",without accent, is not a single-cell abbreviation, it should be  134-12346.
Casi. should be 14-234, not  13-234.
Cierto. should be 14-2345 not 13-2345.
Igualdad should have the ad contraction at end, there is a leftover dot.
Joven should be jv. An error in the table contained an acute o which is not part of the word so that is why it was not contracted.
added derivative for it, jóvenes
Largo: an error in the table made this one not contract, it was spelled as lago. Corrected derivative lagos for largos and also added largas.
Necesidad. again, leftover dot 3 instead of 1456 at end
Puede. should be 1234-1256.
Relatividad. Should be 1235-123-1236-1456.
added: relatividades
Nuestro. Should be  1345-1256.
Sino. Should be sn. An error in the table was abbreviating sin instead of sino.
Estaba. Missing letter B: 1246-12. Rule contained an error since the -12 was being separated by whitespace.
""Números"" should be contracted as number sign and 246.

Links: Rae rules:
http://www.rae.es/consultas/el-adverbio-solo-y-los-pronombres-demostrativos-sin-tilde","@bertfrees you are right. I completely forgot to make more expensive tests, but since these were mostly whole word and language related corrections I did not see a real need for it. Thanks for all of the work.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,741,2019-05-22T16:23:03Z,2019-08-15T09:17:56Z,2020-01-23T11:10:33Z,MERGED,True,56,39,2,https://github.com/ultraleetj,Spanish grade 2 fixes and updates,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/741,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/741#issuecomment-521972544,"To do (user suggestions):
Add dot 5 when alphabet letters are presented by themselves, except q and w
In case of q and w,  add dots 5 and 6 by themselves to avoid confusion with accented variants/derivatives of these words.
Fixes are detailed in commits, however including them here for completeness:
Added new remarks (as comments) regarding use of pronouns with sources.
corrected contraction and derivatives: único. It was previously dots 23456-13 and should have ben 23456-14
word: ese also corrected
added: numerosas, cuya
Skipped: Sólo. Its accentuation has been discouraged at least since 1959, see RAE rules.
corrected: aquéllos, aquéllas an other commonly missaccented demonstrative pronouns conforming to the latest RAE rules.
Removed: contraction 5-1356, esté, it served no purpose at all and such word is not contracted.
corrected:

Más and mas. ""Más"", with accent, should not have a dot 5, and ""mas"",without accent, is not a single-cell abbreviation, it should be  134-12346.
Casi. should be 14-234, not  13-234.
Cierto. should be 14-2345 not 13-2345.
Igualdad should have the ad contraction at end, there is a leftover dot.
Joven should be jv. An error in the table contained an acute o which is not part of the word so that is why it was not contracted.
added derivative for it, jóvenes
Largo: an error in the table made this one not contract, it was spelled as lago. Corrected derivative lagos for largos and also added largas.
Necesidad. again, leftover dot 3 instead of 1456 at end
Puede. should be 1234-1256.
Relatividad. Should be 1235-123-1236-1456.
added: relatividades
Nuestro. Should be  1345-1256.
Sino. Should be sn. An error in the table was abbreviating sin instead of sino.
Estaba. Missing letter B: 1246-12. Rule contained an error since the -12 was being separated by whitespace.
""Números"" should be contracted as number sign and 246.

Links: Rae rules:
http://www.rae.es/consultas/el-adverbio-solo-y-los-pronombres-demostrativos-sin-tilde","@ultraleetj Christian already merged, but please consider adding some more tests anyway when you have time. The more tests the better. Even those that are covered with word rules are useful.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,741,2019-05-22T16:23:03Z,2019-08-15T09:17:56Z,2020-01-23T11:10:33Z,MERGED,True,56,39,2,https://github.com/ultraleetj,Spanish grade 2 fixes and updates,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/741,https://github.com/ultraleetj,5,https://github.com/liblouis/liblouis/pull/741#issuecomment-574274578,"To do (user suggestions):
Add dot 5 when alphabet letters are presented by themselves, except q and w
In case of q and w,  add dots 5 and 6 by themselves to avoid confusion with accented variants/derivatives of these words.
Fixes are detailed in commits, however including them here for completeness:
Added new remarks (as comments) regarding use of pronouns with sources.
corrected contraction and derivatives: único. It was previously dots 23456-13 and should have ben 23456-14
word: ese also corrected
added: numerosas, cuya
Skipped: Sólo. Its accentuation has been discouraged at least since 1959, see RAE rules.
corrected: aquéllos, aquéllas an other commonly missaccented demonstrative pronouns conforming to the latest RAE rules.
Removed: contraction 5-1356, esté, it served no purpose at all and such word is not contracted.
corrected:

Más and mas. ""Más"", with accent, should not have a dot 5, and ""mas"",without accent, is not a single-cell abbreviation, it should be  134-12346.
Casi. should be 14-234, not  13-234.
Cierto. should be 14-2345 not 13-2345.
Igualdad should have the ad contraction at end, there is a leftover dot.
Joven should be jv. An error in the table contained an acute o which is not part of the word so that is why it was not contracted.
added derivative for it, jóvenes
Largo: an error in the table made this one not contract, it was spelled as lago. Corrected derivative lagos for largos and also added largas.
Necesidad. again, leftover dot 3 instead of 1456 at end
Puede. should be 1234-1256.
Relatividad. Should be 1235-123-1236-1456.
added: relatividades
Nuestro. Should be  1345-1256.
Sino. Should be sn. An error in the table was abbreviating sin instead of sino.
Estaba. Missing letter B: 1246-12. Rule contained an error since the -12 was being separated by whitespace.
""Números"" should be contracted as number sign and 246.

Links: Rae rules:
http://www.rae.es/consultas/el-adverbio-solo-y-los-pronombres-demostrativos-sin-tilde","hi, @bertfrees  so there is a newly revised edition for spanish grade 2 which was just given to me and will be published by the Spanish braille comission next week. I have downloaded the latest liblouis release since this one is where this current table resides. I have considerably expanded the yaml test as well, and have prepared a change log to the table. By this weekend I should be able to have something fully finished and upload it. Since I still have a rather confused understanding of git use, I wonder if I should delete and create a fork again, or just making a brand new pull request will do (to avoid a rebase and so on). I also have another question with a few words that are contracted, because they have spaces in between them (I.e. Costa Rica)
would just putting things like
word Costa Rica 456–14–1235
work?
by the way, there should be no caps sign when this country name gets contracted, so I am not sure if there is a way to tell lliblouis not to prefix it with a capital sign even though the printed text may contain it.
As for the rest of the cases and new changes, I think everything is pretty much covered. Some of the rules that gave us a bit of a headache, such as the contraction cancellations  for words being made up entirely of lowered signs is now dropped and not in use.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,741,2019-05-22T16:23:03Z,2019-08-15T09:17:56Z,2020-01-23T11:10:33Z,MERGED,True,56,39,2,https://github.com/ultraleetj,Spanish grade 2 fixes and updates,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/741,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/741#issuecomment-577636048,"To do (user suggestions):
Add dot 5 when alphabet letters are presented by themselves, except q and w
In case of q and w,  add dots 5 and 6 by themselves to avoid confusion with accented variants/derivatives of these words.
Fixes are detailed in commits, however including them here for completeness:
Added new remarks (as comments) regarding use of pronouns with sources.
corrected contraction and derivatives: único. It was previously dots 23456-13 and should have ben 23456-14
word: ese also corrected
added: numerosas, cuya
Skipped: Sólo. Its accentuation has been discouraged at least since 1959, see RAE rules.
corrected: aquéllos, aquéllas an other commonly missaccented demonstrative pronouns conforming to the latest RAE rules.
Removed: contraction 5-1356, esté, it served no purpose at all and such word is not contracted.
corrected:

Más and mas. ""Más"", with accent, should not have a dot 5, and ""mas"",without accent, is not a single-cell abbreviation, it should be  134-12346.
Casi. should be 14-234, not  13-234.
Cierto. should be 14-2345 not 13-2345.
Igualdad should have the ad contraction at end, there is a leftover dot.
Joven should be jv. An error in the table contained an acute o which is not part of the word so that is why it was not contracted.
added derivative for it, jóvenes
Largo: an error in the table made this one not contract, it was spelled as lago. Corrected derivative lagos for largos and also added largas.
Necesidad. again, leftover dot 3 instead of 1456 at end
Puede. should be 1234-1256.
Relatividad. Should be 1235-123-1236-1456.
added: relatividades
Nuestro. Should be  1345-1256.
Sino. Should be sn. An error in the table was abbreviating sin instead of sino.
Estaba. Missing letter B: 1246-12. Rule contained an error since the -12 was being separated by whitespace.
""Números"" should be contracted as number sign and 246.

Links: Rae rules:
http://www.rae.es/consultas/el-adverbio-solo-y-los-pronombres-demostrativos-sin-tilde","Hi @ultraleetj. Sorry for the delay.
Yes, please make a brand new pull request. That is, of course, under the condition that you have made no new changes on that branch that are not in Liblouis yet.
word Costa Rica 456–14–1235

This does not work. You'll need to write a context rule for that:
noback context ""Costa Rica"" @456-14-1235

Another way to solve this could be to remove the space in pass 0 so that it can be treated like a word:
noback correct ""Costa""[$s$s.]""Rica"" ?
word CostaRica 456-14-1235

I'm not sure about the ignoring of the capital sign. It might work with the first solution, but you have to try it. The second solution you'll have to change to something like:
noback correct ""Costa""$s$s.""Rica"" ""costarica""
word costarica 456-14-1235",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/744,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/744#issuecomment-496121802,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","Hi @hammera , thanks for the patch. There seems to be a problem in the tests. You have changed the way spaces are handled. You might have to update the tests for spaces in spaces.yaml.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/hammera,3,https://github.com/liblouis/liblouis/pull/744#issuecomment-496853570,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","Hy Chris,
Exactly what need change the hungarian test files with spaces related?
My machine both hu-hu-g1_forward.yaml, hu-hu-g1_backward.yaml, hu-hu-g2_forward.yaml and hu-hu-g2_backward.yaml produce succesful results.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/hammera,4,https://github.com/liblouis/liblouis/pull/744#issuecomment-496860259,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","Hy Chris,
Because the 3.10 release publication date is june 3, if more work need doing all affected hungarian test files, temporary not a good solution if I remove following rule all affected tables?
The affected line is following:
include spaces.uti
Safe purpose I added the spaces.uti file with all table now, because with hu-hu-comp8.ctb table previous containing with spaces.ctb table include line before I think the 3.8.0 release.
After Liblouis 3.10.0 release coming out, I doing the test files change.
Not have an automated way to doing this change yet?
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/744#issuecomment-496879740,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila",@bertfrees any idea what needs to be changed in spaces.yaml to make the test pass (see test failures),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/744#issuecomment-496888093,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila",I would think the question is: what needs to be changed in the table to make the test pass? No?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/744#issuecomment-496888442,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila",By the way let's maybe start by moving the spaces tests to the Hungarian test files. That'll make things a bit easier.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/744#issuecomment-496955298,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","OK, I'll move the space tests",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/hammera,9,https://github.com/liblouis/liblouis/pull/744#issuecomment-496966763,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","Hy Chris,
When the space tests moved, if need adding any spaces related rules into hu-hu-comp8.ctb, hu-hu-g1.ctb or hu-hu-g2.ctb files, I doing welcome the proper rules into table files when I looked your email.
I surprised only a think, I have one question:
Why changed with hungarian test harness files with unicode.dis related line?
With Liblouis 3.8.0 release all hungarian test files containing following line:
display: unicode.dis
With Liblouis 3.9.0 release this line changed all hungarian test yaml files with following line:
display: unicode-without-blank.dis
What the difference with unicode.dis and unicode-without-blank.dis files?
When need have use the unicode.dis file and when need have use the unicode-without-blank.dis file?
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/hammera,10,https://github.com/liblouis/liblouis/pull/744#issuecomment-498182604,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","Chris, temporary I remove the include spaces.uti line with hu-hu-comp8.ctb, hu-hu-g1.ctb and hu-hu-g2.ctb table files to fit these changes into Liblouis 3.10 release?
This day will coming out the 3.10 release I think.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/744#issuecomment-498199579,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","Just give me a minute @hammera , I'm working on a fix",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/hammera,12,https://github.com/liblouis/liblouis/pull/744#issuecomment-498243189,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","Hy Chris,
Chris, million thanks the fix, now I think everithing looks good.
Previous with Travis check produce error because I included the spaces.uti file with hu-hu-g1.ctb and hu-hu-g2.ctb table before other include lines?
I surprised a think:
Now I see the hu-chardefs.cti file already included the spaces.uti file after the following line, this is not happened with Liblouis 3.8.0 release:
space \x00a0 a
In en-chardefs.cti file have similar lines:
space \x00A0 a NO-BREAK SPACE  0020 NON-BREAKING SPACE
include spaces.uti
When happened this change into en-chardefs.cti and hu-chardefs.cti files?
I not remember what commit produced this change into tables/hu-chardefs.cti file.
No matter to happened this change, this is a practical change.
This change happened when the 3.9.0 Liblouis release publicated.
In the NEWS file I not see this change.
With hu-hu-comp8.ctb table need the include spaces.uti line, because this table right not use the hu-chardefs.cti include line.
Previous this table containing the include spaces.ctb line (this is true the Liblouis 3.8.0 release), But before the Liblouis 3.9.0 release coming out, not changed the hu-hu-comp8.ctb table the include spaces.ctb line to include spaces.uti line.
Simple anybody removed the include spaces.ctb line with tables/hu-hu-comp8.ctb table. :-(:-(
Now this is fixed.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/744#issuecomment-498247071,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila","When happened this change into en-chardefs.cti and hu-chardefs.cti files?

I think that was when we removed the hard coded white space handling in liblouis. That was in 3.9. See third item in section ""Bug fixes""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,744,2019-05-24T12:22:29Z,2019-06-03T13:02:39Z,2019-06-03T13:05:37Z,MERGED,True,119,3,5,https://github.com/hammera,"Add Hungarian grade1 Braille input related rules, and some modifications to the Hungarian table files",2,['tables'],https://github.com/liblouis/liblouis/pull/744,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/744#issuecomment-498248076,"Hy Chris,
I doed first release with hungarian grade1 Braille input related.
If this is possible, please merge this pull request with the Liblouis master branch before Liblouis 3.10.0 release coming out.
I doed few small modifications with hu-hu-comp8.ctb, hu-hu-g1.ctb, hu-hu-g1.ctb, hu-hu-g2.ctb tables related. I merge these changes with one commit.
Attila",@bertfrees I managed to move the tests out of spaces.yaml into the respective test files. Looks a bit weird because it uses you inline display table hack. Will submit it as a separate PR,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,745,2019-05-28T08:53:27Z,2019-05-28T12:30:57Z,2019-05-29T20:08:17Z,MERGED,True,4753,1032,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-05,2,['tables'],https://github.com/liblouis/liblouis/pull/745,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/745,"Summary of changes:

Correct various dot patterns of Chinese characters.
Add more known pattern exceptions of Chinese characters.
Apply ""word"" opcode to 倔 and 据.
Change dot pattern of ＆ to 456-12346.

Reviewers:

Peng-An Chen <andy72039@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
Coscell Kao <coscell@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","Summary of changes:

Correct various dot patterns of Chinese characters.
Add more known pattern exceptions of Chinese characters.
Apply ""word"" opcode to 倔 and 据.
Change dot pattern of ＆ to 456-12346.

Reviewers:

Peng-An Chen <andy72039@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
Coscell Kao <coscell@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,745,2019-05-28T08:53:27Z,2019-05-28T12:30:57Z,2019-05-29T20:08:17Z,MERGED,True,4753,1032,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-05,2,['tables'],https://github.com/liblouis/liblouis/pull/745,https://github.com/school510587,2,https://github.com/liblouis/liblouis/pull/745#issuecomment-496475279,"Summary of changes:

Correct various dot patterns of Chinese characters.
Add more known pattern exceptions of Chinese characters.
Apply ""word"" opcode to 倔 and 据.
Change dot pattern of ＆ to 456-12346.

Reviewers:

Peng-An Chen <andy72039@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
Coscell Kao <coscell@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","Hi @bertfrees,

I think it is OK, but I have a problem. Why the testcases pasted here is slightly different from those in spaces.yaml?
This is copied from spaces.yaml:

  - ['\x0009', '9']
  - ['\x000a', '⣀']
  - ['\x000c', '⡘⠇']
  - ['\x0020', '\x0020']
  - ['\x00a0', 'a']

The answers of \x0009 and \x00a0 are different from what you paste:

  - ['\x0009', '\x0009']
  - ['\x00a0', '\x00a0']",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,745,2019-05-28T08:53:27Z,2019-05-28T12:30:57Z,2019-05-29T20:08:17Z,MERGED,True,4753,1032,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-05,2,['tables'],https://github.com/liblouis/liblouis/pull/745,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/745#issuecomment-496475450,"Summary of changes:

Correct various dot patterns of Chinese characters.
Add more known pattern exceptions of Chinese characters.
Apply ""word"" opcode to 倔 and 据.
Change dot pattern of ＆ to 456-12346.

Reviewers:

Peng-An Chen <andy72039@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
Coscell Kao <coscell@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>",The display table used in that test is slightly different.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,745,2019-05-28T08:53:27Z,2019-05-28T12:30:57Z,2019-05-29T20:08:17Z,MERGED,True,4753,1032,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-05,2,['tables'],https://github.com/liblouis/liblouis/pull/745,https://github.com/school510587,4,https://github.com/liblouis/liblouis/pull/745#issuecomment-496493242,"Summary of changes:

Correct various dot patterns of Chinese characters.
Add more known pattern exceptions of Chinese characters.
Apply ""word"" opcode to 倔 and 据.
Change dot pattern of ＆ to 456-12346.

Reviewers:

Peng-An Chen <andy72039@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
Coscell Kao <coscell@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","Hi @bertfrees,

I have added 5 lines into zh-tw.yaml. Please check whether this is correct, thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,746,2019-05-28T13:39:25Z,2019-05-28T13:54:52Z,2019-05-28T13:54:58Z,MERGED,True,8,5,1,https://github.com/egli,Improve array bounds checking when parsing chars,1,[],https://github.com/liblouis/liblouis/pull/746,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/746,Fixes #728,Fixes #728,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,746,2019-05-28T13:39:25Z,2019-05-28T13:54:52Z,2019-05-28T13:54:58Z,MERGED,True,8,5,1,https://github.com/egli,Improve array bounds checking when parsing chars,1,[],https://github.com/liblouis/liblouis/pull/746,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/746#issuecomment-496524618,Fixes #728,"I'm basically just running the test files provided in #728. It crashes because in line 1689 of compileTranslationTable.c it writes past the end of the chars array of passLine. I assume this happens because parseChars that is responsible for filling the passLine struct fills the length not correctly. It has to account for the pass_endTest terminator.
Hm, maybe parseChars should not have to account for the terminator after all. Have to look at it again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,746,2019-05-28T13:39:25Z,2019-05-28T13:54:52Z,2019-05-28T13:54:58Z,MERGED,True,8,5,1,https://github.com/egli,Improve array bounds checking when parsing chars,1,[],https://github.com/liblouis/liblouis/pull/746,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/746#issuecomment-496526686,Fixes #728,"Hm, above might be technically true, i.e. it would be nicer to handle the terminator at the call site. OTH there are other callers of parseChars that could be susceptible to that attack, so it might be better to avoid this at the source.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,747,2019-05-28T16:48:10Z,2019-06-03T12:42:03Z,2019-06-03T12:43:34Z,MERGED,True,180,145,8,https://github.com/bertfrees,Updates to Dutch table,12,['tables'],https://github.com/liblouis/liblouis/pull/747,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/747,"Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)","Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,747,2019-05-28T16:48:10Z,2019-06-03T12:42:03Z,2019-06-03T12:43:34Z,MERGED,True,180,145,8,https://github.com/bertfrees,Updates to Dutch table,12,['tables'],https://github.com/liblouis/liblouis/pull/747,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/747#issuecomment-496855755,"Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)","First off, what is the use case? Are you saying that emphasis ends at & and + if we do not have the emphmodechars opcode? If yes then I guess there is a use case.

If no emphmodechars is defined, Emphasis only ends at space. If emphmodechars &+ is defined, emphasis does not end at & and +, but it will end at all other non-letters, such as -.

Second I'd like to have docs for this opcode

Yep, thought about that after I made the PR. I should definitely do that.

Third what is the impact of the change to long long? Is this for every character definition in a table? So presumable in the hundreds of bytes that a table will be larger in memory? Or will this be attached to every input char? Will this have any impact on performance?

The table is going to be somewhat longer, yes, and the internal buffers uses during a translation will also be larger. I don't see how this can have a big impact on performance. OK, there is a lot of attribute checking in the code, but I don't think that is going to make the difference.
The alternative is to stick to our 32 bits, and reduce the allowed number of classes, which is already pretty low (14), every time we need a new attribute. There is a table that is using 14 classes (zh-tw) so I have have to ask him to eliminate one. That's not a good way of working I think. I expect that classes are even going to be more important in the future.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,747,2019-05-28T16:48:10Z,2019-06-03T12:42:03Z,2019-06-03T12:43:34Z,MERGED,True,180,145,8,https://github.com/bertfrees,Updates to Dutch table,12,['tables'],https://github.com/liblouis/liblouis/pull/747,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/747#issuecomment-496877505,"Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)","OK, the use case is explained in #116, so that's fine
Re the performance afaik we are talking about a bit array that is now extended from 32 bits to 64 bits. And this array is for each defined char in the table. That should be around say 100 * 32 bits which should probably be OK. But isn't every input char also getting a TranslationTableCharacterAttributes? If so then this might matter at least long term.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,747,2019-05-28T16:48:10Z,2019-06-03T12:42:03Z,2019-06-03T12:43:34Z,MERGED,True,180,145,8,https://github.com/bertfrees,Updates to Dutch table,12,['tables'],https://github.com/liblouis/liblouis/pull/747,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/747#issuecomment-496886445,"Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)","Yes, this is what I meant by the internal buffers. Obviously this will increase memory usage a bit. But what other choice do we have? I think there are other arrays that we pass around that have a more dubious use. E.g. does the spacing thing even work? Why does wordBuffer need to be an int? ...
Note that the emphasisBuffer also takes 64 bits. You could also argue that we don't need 16 emphasis classes (I think we do, to be clear).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,747,2019-05-28T16:48:10Z,2019-06-03T12:42:03Z,2019-06-03T12:43:34Z,MERGED,True,180,145,8,https://github.com/bertfrees,Updates to Dutch table,12,['tables'],https://github.com/liblouis/liblouis/pull/747,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/747#issuecomment-496949782,"Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)","So in other words this will double the memory consumption of EmphasisClass? Hm, OK I guess I can live with that.
But in other news you are saying that wordBuffer only really uses 4 bit? so we could easily use a short? Maybe this should be a separate issue",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,747,2019-05-28T16:48:10Z,2019-06-03T12:42:03Z,2019-06-03T12:43:34Z,MERGED,True,180,145,8,https://github.com/bertfrees,Updates to Dutch table,12,['tables'],https://github.com/liblouis/liblouis/pull/747,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/747#issuecomment-496986444,"Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)","No this doesn't change anything about EmphasisClass. I'm just giving this as an example of something where a balance needs to be made between memory consumption and power.
However, as a matter of fact, there isn't even an additional memory consumption that is proportional to the length of the input buffer. I was confused myself. All the attributes info is of course present in the character definition itself. When Liblouis needs to check whether a certain input character has a certain attribute, it first looks up this character in the table and then gets the attributes variable.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,747,2019-05-28T16:48:10Z,2019-06-03T12:42:03Z,2019-06-03T12:43:34Z,MERGED,True,180,145,8,https://github.com/bertfrees,Updates to Dutch table,12,['tables'],https://github.com/liblouis/liblouis/pull/747,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/747#issuecomment-496987084,"Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)","Indeed I think wordBuffer only needs 4 bits, but not quite sure.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,747,2019-05-28T16:48:10Z,2019-06-03T12:42:03Z,2019-06-03T12:43:34Z,MERGED,True,180,145,8,https://github.com/bertfrees,Updates to Dutch table,12,['tables'],https://github.com/liblouis/liblouis/pull/747,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/747#issuecomment-498215446,"Fixed some remaining issues in the Dutch table (commissioned by Transkript, Luisterpuntbibliotheek and Licht and Liefde).
Please have a look, especially @dkager.
If we hurry, we can include this in the 3.10 release :)",@egli I added the documentation.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,751,2019-06-03T10:58:53Z,2019-06-03T13:54:24Z,2019-06-03T13:54:34Z,MERGED,True,220,139,7,https://github.com/bertfrees,Remove restrictions on which characters/cells can be used in translation rules,3,['enhancement'],https://github.com/liblouis/liblouis/pull/751,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/751,Fixes #332,Fixes #332,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,751,2019-06-03T10:58:53Z,2019-06-03T13:54:24Z,2019-06-03T13:54:34Z,MERGED,True,220,139,7,https://github.com/bertfrees,Remove restrictions on which characters/cells can be used in translation rules,3,['enhancement'],https://github.com/liblouis/liblouis/pull/751,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/751#issuecomment-498260318,Fixes #332,Fixed the Travis issue.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,753,2019-06-04T09:49:16Z,2019-06-05T12:10:11Z,2019-08-14T14:23:10Z,MERGED,True,103,76,4,https://github.com/egli,Move the hu space related tests to the proper YAML files,1,[],https://github.com/liblouis/liblouis/pull/753,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/753,Note that I had to use the inline display table trick to make this work. Depending or your POV this might be considered a hack.,Note that I had to use the inline display table trick to make this work. Depending or your POV this might be considered a hack.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,753,2019-06-04T09:49:16Z,2019-06-05T12:10:11Z,2019-08-14T14:23:10Z,MERGED,True,103,76,4,https://github.com/egli,Move the hu space related tests to the proper YAML files,1,[],https://github.com/liblouis/liblouis/pull/753,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/753#issuecomment-498606536,Note that I had to use the inline display table trick to make this work. Depending or your POV this might be considered a hack.,"Sure, looks fine. Why do you think it would be a hack?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,754,2019-06-04T15:41:32Z,2019-06-18T07:33:06Z,2019-06-18T07:33:33Z,MERGED,True,95,85,9,https://github.com/egli,No longer install internal.h,9,[],https://github.com/liblouis/liblouis/pull/754,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/754,"Fixes #667 and fixes liblouis/liblouisutdml#16
Definitions that are needed by liblouisutdml such as the endsegment or the braille dots definitions have been prefixed with LOU_ and moved to liblouis.h.in","Fixes #667 and fixes liblouis/liblouisutdml#16
Definitions that are needed by liblouisutdml such as the endsegment or the braille dots definitions have been prefixed with LOU_ and moved to liblouis.h.in",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,755,2019-06-05T13:41:36Z,2019-06-20T20:23:50Z,2019-06-21T15:17:08Z,MERGED,True,258,114,16,https://github.com/egli,Upgrade clang-format,3,[],https://github.com/liblouis/liblouis/pull/755,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/755,"Unfortunately not every version of clang-format produces the same output given the same config file. For that reason when upgrading clang-format we also have to re-format the source. Luckily the changes are pretty small.
Since I upgraded my machine I no longer have clang-format5 which we are currently using on travis.
This PR upgrades the Travis build environment to Xenial which has Clang7. I locally have Clang8 and re-formated the source with that. They seem to produce identical output.","Unfortunately not every version of clang-format produces the same output given the same config file. For that reason when upgrading clang-format we also have to re-format the source. Luckily the changes are pretty small.
Since I upgraded my machine I no longer have clang-format5 which we are currently using on travis.
This PR upgrades the Travis build environment to Xenial which has Clang7. I locally have Clang8 and re-formated the source with that. They seem to produce identical output.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,755,2019-06-05T13:41:36Z,2019-06-20T20:23:50Z,2019-06-21T15:17:08Z,MERGED,True,258,114,16,https://github.com/egli,Upgrade clang-format,3,[],https://github.com/liblouis/liblouis/pull/755,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/755#issuecomment-499088562,"Unfortunately not every version of clang-format produces the same output given the same config file. For that reason when upgrading clang-format we also have to re-format the source. Luckily the changes are pretty small.
Since I upgraded my machine I no longer have clang-format5 which we are currently using on travis.
This PR upgrades the Travis build environment to Xenial which has Clang7. I locally have Clang8 and re-formated the source with that. They seem to produce identical output.",The build problem fails when compiling with i586-mingw32msvc-gcc. Maybe in Xenial something changed with that also,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,756,2019-06-09T19:34:47Z,2019-06-21T15:28:01Z,2019-06-21T15:29:41Z,MERGED,True,29,23,3,https://github.com/bertfrees,Fix issue #498,4,['bug'],https://github.com/liblouis/liblouis/pull/756,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/756,See #498.,See #498.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,756,2019-06-09T19:34:47Z,2019-06-21T15:28:01Z,2019-06-21T15:29:41Z,MERGED,True,29,23,3,https://github.com/bertfrees,Fix issue #498,4,['bug'],https://github.com/liblouis/liblouis/pull/756,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/756#issuecomment-503027029,See #498.,"add brackets to make the precedence clear

You mean the precedence between && and &? I though that was a no-brainer. But OK I can put the brackets back.
The second condition means ""if there are cap signs"". It's used in various other parts of the code. OK creating a function for it makes sense.
If there are cap signs, this function is responsible for inserting the lowercase letters instead of the uppercase. (The cap signs are inserted elsewhere.) If there are no cap signs, the uppercase letters should be preserved otherwise the case info is lost, and this is exactly what this change does. Understand?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,756,2019-06-09T19:34:47Z,2019-06-21T15:28:01Z,2019-06-21T15:29:41Z,MERGED,True,29,23,3,https://github.com/bertfrees,Fix issue #498,4,['bug'],https://github.com/liblouis/liblouis/pull/756,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/756#issuecomment-504161218,See #498.,@egli Is it clear now?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,756,2019-06-09T19:34:47Z,2019-06-21T15:28:01Z,2019-06-21T15:29:41Z,MERGED,True,29,23,3,https://github.com/bertfrees,Fix issue #498,4,['bug'],https://github.com/liblouis/liblouis/pull/756,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/756#issuecomment-504463502,See #498.,"Is it clear now?

Yes, very nice. Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/758,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334","The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/758#issuecomment-501153793,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334","I wish there was a way to not have to do this Makefile.am manipulation
 all the time. I've never understood why you have to have a Makefile.am
 with EXTRA_DIST for every subdir.
I think there would be a way to avoid it. There is a subsection in the
Automake manual that lists alternatives to the recursive approach.
 Couldn't this be generated?
Generally I question the amount of effort we should put into this. My
vision is of course to move to Rust which will after a painful migration
phase (hopefully) allow us to get rid of automake.
 Especially with the liblouisutdml test suite it is getting absurd. For
 every new test you even have to add something to configure.ac. Why?
 Isn't this information already present in the SUBDIRS variables?
I see what you mean. Maybe we could explore the non-recursive approach.
But I thought we wanted to put as little effort as possible into this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/758#issuecomment-501198988,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334","No, I won't ask you to put your time in Liblouisutdml. It's OK. I'm just ventilating my Automake frustrations. But it's good to know that there is maybe a way to avoid it.
Anyway, regarding Liblouis, I would say a little bit of effort to make maintenance less painful is acceptable :-) Because while the Rust thing is a very good idea that will help us with memory management and things like that, I don't see it happening in the first few years to be honest, and in the meantime we can't neglect the project of course. In general, it would be an illusion to think that migrating to Rust will suddenly fix all our issues. It can't be an excuse to not deal with real issues. This build thing is of course a very minor issue, but maybe the solution is also very simple.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/758#issuecomment-501206616,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",Build is fixed.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/758#issuecomment-502806791,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",@egli Is the change OK?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/758#issuecomment-503015156,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334","Is the change OK?

You removed all includes for hyphenation tables except where they are needed by nocross rules?
I understand and agree with the arguments in #334. Since this is a step in this direction I guess the change it OK.
What I don't like that much is that it isn't very homogenous, it treats some tables in one way and others in another way. But I guess you could argue that the nocross hyphenation dictionaries aren't really for hyphenation at all.
The other thing that is a slight irritation is that the nocross meta data could be derived from the table itself. It isn't very DRY.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/758#issuecomment-503021913,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334","But I guess you could argue that the nocross hyphenation dictionaries aren't really for hyphenation at all.

Exactly.

... the nocross meta data could be derived from the table itself

I guess so, but the metadata is merely a temporary and practical solution. Ideally, either

Liblouis should not be used as a hyphenation library at all (by Liblouisutdml) (basically what #334 is hinting at), or
Liblouis should have separate tables just for hyphenation, so that ""nocross"" pattern files can not conflict with ""hyphenation"" pattern files anymore. In Liblouisutdml there would be a separate setting for the hyphenation table to use, and in Liblouis the hyphenation tables would get their own category #+type:hyphenation. Also ideally it shouldn't be needed to define any braille rules in a hyphenation table (the tables/hu-hu-g1.ctb in: 
  
    
      liblouis/tests/yaml/hu-hu-g1-hyph_harness.yaml
    
    
        Lines 1 to 3
      in
      1d48b61
    
  
  
    

        
          
           table: | 
        

        
          
             include tables/hu-hu-g1.ctb 
        

        
          
             include tables/hyph_hu_HU.dic 
        
    
  

 ... but I guess if we are going that far we might as well go for (1).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/758#issuecomment-504180512,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",@egli What do you say?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/758#issuecomment-504549640,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334","The other thing that is a slight irritation is that the nocross meta data could be derived from the table itself. It isn't very DRY.

I don't think that this argument really applies in this case. It's not because it could be derived from the table contents that it should be. It is much more efficient to look up the meta data then to compile the table.
By the way there are other metadata field that could be derived from the table contents, such as dots. An example of a field that can be derived from other metadata is display-name. It is already being generated today from locale, grade, etc., for most tables but not all. However this currently does not happen at runtime, and not even at compile time (because you didn't want it to be part of the build).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/758#issuecomment-505505907,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",I rebased it right before you reviewed it. I think by doing that the other change got lost.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/758#issuecomment-505507107,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",@egli It's fixed now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/758#issuecomment-510642081,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",Good to merge now?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/758#issuecomment-511321359,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",Yup,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,758,2019-06-10T16:50:53Z,2019-08-14T14:18:21Z,2019-08-23T14:26:16Z,MERGED,True,20,40,22,https://github.com/bertfrees,Remove includes of hyphenation tables except those needed for nocross rules,3,[],https://github.com/liblouis/liblouis/pull/758,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/758#issuecomment-511327118,"The idea is that the caller (in this case odt2braille/liblouisutdml) should be able to decide for itself which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.
See issue #334",OK. I guess I have to mention this change in NEWS so that people don't complain.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,760,2019-06-13T19:11:22Z,2019-06-14T13:25:19Z,2019-06-14T13:25:32Z,MERGED,True,18,4,2,https://github.com/bertfrees,Issue in Dutch with numbers inside all-caps phrases,1,['tables'],https://github.com/liblouis/liblouis/pull/760,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/760,"For example, when ""2DE"" happens inside a phrase in all-caps, it appears as the number ""245"".
@dkager Can you confirm that the new test is correct?","For example, when ""2DE"" happens inside a phrase in all-caps, it appears as the number ""245"".
@dkager Can you confirm that the new test is correct?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,760,2019-06-13T19:11:22Z,2019-06-14T13:25:19Z,2019-06-14T13:25:32Z,MERGED,True,18,4,2,https://github.com/bertfrees,Issue in Dutch with numbers inside all-caps phrases,1,['tables'],https://github.com/liblouis/liblouis/pull/760,https://github.com/dkager,2,https://github.com/liblouis/liblouis/pull/760#issuecomment-502018932,"For example, when ""2DE"" happens inside a phrase in all-caps, it appears as the number ""245"".
@dkager Can you confirm that the new test is correct?","Correct. Also, why did you define ...
class digitletter abcdefghijABCDEFGH

... e.g. without IJ?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,760,2019-06-13T19:11:22Z,2019-06-14T13:25:19Z,2019-06-14T13:25:32Z,MERGED,True,18,4,2,https://github.com/bertfrees,Issue in Dutch with numbers inside all-caps phrases,1,['tables'],https://github.com/liblouis/liblouis/pull/760,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/760#issuecomment-502019831,"For example, when ""2DE"" happens inside a phrase in all-caps, it appears as the number ""245"".
@dkager Can you confirm that the new test is correct?",Oops. No idea. Good catch.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,761,2019-06-14T17:21:09Z,2019-06-20T21:23:04Z,2019-06-21T08:06:49Z,MERGED,True,0,0,0,https://github.com/bertfrees,A caps passage should not end on a word without letters,0,[],https://github.com/liblouis/liblouis/pull/761,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/761,"See the added tests: 
  
    
      liblouis/tests/braille-specs/nl-g0_harness.yaml
    
    
        Lines 169 to 171
      in
      f97abd1
    
  
  
    

        
          
           - [WAT IS FOUT - De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT - de fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        
    
  


Before this change, the first test would result in ⠘⠘⠺⠁⠞⠀⠊⠎⠀⠋⠕⠥⠞⠀⠘⠤⠀⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲. (⠘ is begcapsword and ⠘⠘ is begcapsphrase.)","See the added tests: 
  
    
      liblouis/tests/braille-specs/nl-g0_harness.yaml
    
    
        Lines 169 to 171
      in
      f97abd1
    
  
  
    

        
          
           - [WAT IS FOUT - De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT - de fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        
    
  


Before this change, the first test would result in ⠘⠘⠺⠁⠞⠀⠊⠎⠀⠋⠕⠥⠞⠀⠘⠤⠀⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲. (⠘ is begcapsword and ⠘⠘ is begcapsphrase.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,761,2019-06-14T17:21:09Z,2019-06-20T21:23:04Z,2019-06-21T08:06:49Z,MERGED,True,0,0,0,https://github.com/bertfrees,A caps passage should not end on a word without letters,0,[],https://github.com/liblouis/liblouis/pull/761,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/761#issuecomment-503677983,"See the added tests: 
  
    
      liblouis/tests/braille-specs/nl-g0_harness.yaml
    
    
        Lines 169 to 171
      in
      f97abd1
    
  
  
    

        
          
           - [WAT IS FOUT - De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT - de fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        
    
  


Before this change, the first test would result in ⠘⠘⠺⠁⠞⠀⠊⠎⠀⠋⠕⠥⠞⠀⠘⠤⠀⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲. (⠘ is begcapsword and ⠘⠘ is begcapsphrase.)",Added a commit that fixes #763.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,761,2019-06-14T17:21:09Z,2019-06-20T21:23:04Z,2019-06-21T08:06:49Z,MERGED,True,0,0,0,https://github.com/bertfrees,A caps passage should not end on a word without letters,0,[],https://github.com/liblouis/liblouis/pull/761,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/761#issuecomment-504210313,"See the added tests: 
  
    
      liblouis/tests/braille-specs/nl-g0_harness.yaml
    
    
        Lines 169 to 171
      in
      f97abd1
    
  
  
    

        
          
           - [WAT IS FOUT - De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT - de fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        
    
  


Before this change, the first test would result in ⠘⠘⠺⠁⠞⠀⠊⠎⠀⠋⠕⠥⠞⠀⠘⠤⠀⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲. (⠘ is begcapsword and ⠘⠘ is begcapsphrase.)",@dkager Thanks. I fixed it. However I was also interested specifically in your review of the updates to the tests. I assumed it was OK and merged it already.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,761,2019-06-14T17:21:09Z,2019-06-20T21:23:04Z,2019-06-21T08:06:49Z,MERGED,True,0,0,0,https://github.com/bertfrees,A caps passage should not end on a word without letters,0,[],https://github.com/liblouis/liblouis/pull/761,https://github.com/dkager,4,https://github.com/liblouis/liblouis/pull/761#issuecomment-504298691,"See the added tests: 
  
    
      liblouis/tests/braille-specs/nl-g0_harness.yaml
    
    
        Lines 169 to 171
      in
      f97abd1
    
  
  
    

        
          
           - [WAT IS FOUT - De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT - de fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        
    
  


Before this change, the first test would result in ⠘⠘⠺⠁⠞⠀⠊⠎⠀⠋⠕⠥⠞⠀⠘⠤⠀⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲. (⠘ is begcapsword and ⠘⠘ is begcapsphrase.)","Sorry, by not commenting on the tests I meant to say that they look OK to me. I can ask during the next Braille Authority meeting if you'd like.
Maybe we should test this hard-to-read caps/emphMode code with some corner case tests beyond what's in the braillespecs?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,761,2019-06-14T17:21:09Z,2019-06-20T21:23:04Z,2019-06-21T08:06:49Z,MERGED,True,0,0,0,https://github.com/bertfrees,A caps passage should not end on a word without letters,0,[],https://github.com/liblouis/liblouis/pull/761,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/761#issuecomment-504333891,"See the added tests: 
  
    
      liblouis/tests/braille-specs/nl-g0_harness.yaml
    
    
        Lines 169 to 171
      in
      f97abd1
    
  
  
    

        
          
           - [WAT IS FOUT - De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT - de fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠤ ⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        

        
          
           - [WAT IS FOUT De fout..., ⠘⠺⠁⠞ ⠘⠊⠎ ⠘⠋⠕⠥⠞ ⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲] 
        
    
  


Before this change, the first test would result in ⠘⠘⠺⠁⠞⠀⠊⠎⠀⠋⠕⠥⠞⠀⠘⠤⠀⠨⠙⠑ ⠋⠕⠥⠞⠲⠲⠲. (⠘ is begcapsword and ⠘⠘ is begcapsphrase.)","Maybe we should test this hard-to-read caps/emphMode code with some corner case tests beyond what's in the braillespecs?

Sure. I already did some testing with corner cases just to see if the results would match what I thought what was the code was supposed to be doing. But because I didn't want to add any Dutch specs that I wasn't sure about, I removed them again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,762,2019-06-14T18:25:58Z,2019-08-23T06:46:33Z,2019-08-23T14:20:18Z,MERGED,True,29,18,2,https://github.com/bertfrees,Some improvements to lou_checkyaml test reporting,4,['test framework'],https://github.com/liblouis/liblouis/pull/762,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/762,"Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests","Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,762,2019-06-14T18:25:58Z,2019-08-23T06:46:33Z,2019-08-23T14:20:18Z,MERGED,True,29,18,2,https://github.com/bertfrees,Some improvements to lou_checkyaml test reporting,4,['test framework'],https://github.com/liblouis/liblouis/pull/762,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/762#issuecomment-504179533,"Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests","@egli Any objections? There is one thing in particular that I am not sure about. I noticed that when make check fails, it becomes kinda hard to find the ""real"" issues if you look at the ""test-suite.log"" file because now lou_checkyaml prints something for every expected failure too. And we have a lot of expected failures. The point of this change was to make the expected failures more visible, but now I'm starting to think there should maybe be a switch to turn it on.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,762,2019-06-14T18:25:58Z,2019-08-23T06:46:33Z,2019-08-23T14:20:18Z,MERGED,True,29,18,2,https://github.com/bertfrees,Some improvements to lou_checkyaml test reporting,4,['test framework'],https://github.com/liblouis/liblouis/pull/762,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/762#issuecomment-505433870,"Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests","Ah, dang, I see that you answer my question above, so forget about the question. But maybe this should be made optional, as we do indeed have a lot of XFAILs",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,762,2019-06-14T18:25:58Z,2019-08-23T06:46:33Z,2019-08-23T14:20:18Z,MERGED,True,29,18,2,https://github.com/bertfrees,Some improvements to lou_checkyaml test reporting,4,['test framework'],https://github.com/liblouis/liblouis/pull/762,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/762#issuecomment-505435263,"Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests","I think my reasoning was that a xfail test can ""pass"" for different reasons, and it's nice to know why exactly. You can't find the actual translation in the test definition, like is the case with normal tests.
But then indeed I realized that we have a lot of them and it's difficult to sift through them, so an option would be ideal.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,762,2019-06-14T18:25:58Z,2019-08-23T06:46:33Z,2019-08-23T14:20:18Z,MERGED,True,29,18,2,https://github.com/bertfrees,Some improvements to lou_checkyaml test reporting,4,['test framework'],https://github.com/liblouis/liblouis/pull/762,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/762#issuecomment-505810697,"Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests",@bertfrees are you waiting for me to create the option?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,762,2019-06-14T18:25:58Z,2019-08-23T06:46:33Z,2019-08-23T14:20:18Z,MERGED,True,29,18,2,https://github.com/bertfrees,Some improvements to lou_checkyaml test reporting,4,['test framework'],https://github.com/liblouis/liblouis/pull/762,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/762#issuecomment-505816078,"Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests",Haha. Not really. But of course you may add the option :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,762,2019-06-14T18:25:58Z,2019-08-23T06:46:33Z,2019-08-23T14:20:18Z,MERGED,True,29,18,2,https://github.com/bertfrees,Some improvements to lou_checkyaml test reporting,4,['test framework'],https://github.com/liblouis/liblouis/pull/762,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/762#issuecomment-510647626,"Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests",@egli Please check last commit.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,762,2019-06-14T18:25:58Z,2019-08-23T06:46:33Z,2019-08-23T14:20:18Z,MERGED,True,29,18,2,https://github.com/bertfrees,Some improvements to lou_checkyaml test reporting,4,['test framework'],https://github.com/liblouis/liblouis/pull/762,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/762#issuecomment-524080579,"Report expected failures
Print the table under test also in hyphenation mode
Print the table under test also for expected failures
Make a test fail if it resulted in a expected pass for one of the tables under test
Count every test once for every table under test in the total number of tests",@egli Fixed the if condition. Don't know if this needs a change in the NEWS file. I'll let you finish it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,767,2019-06-25T11:38:05Z,2019-07-15T09:20:46Z,2021-02-22T11:45:21Z,MERGED,True,3071,3066,53,https://github.com/egli,Issue a warning when uppercase unicode escaping is used,4,['refactoring'],https://github.com/liblouis/liblouis/pull/767,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/767,"and migrate all affected tables over to lowercase unicode escaping
Fixes #766","and migrate all affected tables over to lowercase unicode escaping
Fixes #766",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,768,2019-06-26T09:41:05Z,2019-06-26T10:06:29Z,2019-06-26T10:06:35Z,MERGED,True,0,12,2,https://github.com/egli,Remove the _lou_getLastTableList function,1,['refactoring'],https://github.com/liblouis/liblouis/pull/768,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/768,It was only used in liblouisutdml and since the internal API is no longer exported it makes no sense to have this call in the API.,It was only used in liblouisutdml and since the internal API is no longer exported it makes no sense to have this call in the API.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,768,2019-06-26T09:41:05Z,2019-06-26T10:06:29Z,2019-06-26T10:06:35Z,MERGED,True,0,12,2,https://github.com/egli,Remove the _lou_getLastTableList function,1,['refactoring'],https://github.com/liblouis/liblouis/pull/768,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/768#issuecomment-505802085,It was only used in liblouisutdml and since the internal API is no longer exported it makes no sense to have this call in the API.,You could argue that this should have been done as part of #754,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,771,2019-06-26T18:12:29Z,2019-06-28T22:03:03Z,2019-06-28T22:03:03Z,CLOSED,False,10,0,1,https://github.com/DaveMielke,Add a yaml test for the result input length when back translating.,1,[],https://github.com/liblouis/liblouis/pull/771,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/771,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,771,2019-06-26T18:12:29Z,2019-06-28T22:03:03Z,2019-06-28T22:03:03Z,CLOSED,False,10,0,1,https://github.com/DaveMielke,Add a yaml test for the result input length when back translating.,1,[],https://github.com/liblouis/liblouis/pull/771,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/771#issuecomment-506890178,,Changed slightly and committed in b9270eb.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,773,2019-06-28T17:49:00Z,2019-06-28T22:27:25Z,2019-06-28T22:27:25Z,MERGED,True,32,10,6,https://github.com/DaveMielke,Set the offset even when noUndefinedDots has been specified else that position within the map is undefined.,6,[],https://github.com/liblouis/liblouis/pull/773,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/773,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,773,2019-06-28T17:49:00Z,2019-06-28T22:27:25Z,2019-06-28T22:27:25Z,MERGED,True,32,10,6,https://github.com/DaveMielke,Set the offset even when noUndefinedDots has been specified else that position within the map is undefined.,6,[],https://github.com/liblouis/liblouis/pull/773,https://github.com/DaveMielke,2,https://github.com/liblouis/liblouis/pull/773#issuecomment-506865353,,undefined-dots.yaml has been added to the pull request.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,773,2019-06-28T17:49:00Z,2019-06-28T22:27:25Z,2019-06-28T22:27:25Z,MERGED,True,32,10,6,https://github.com/DaveMielke,Set the offset even when noUndefinedDots has been specified else that position within the map is undefined.,6,[],https://github.com/liblouis/liblouis/pull/773,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/773#issuecomment-506888161,,"Great, thanks! In tests in the yaml directory we normally don't use tables from the tables directory because they are subject to change. But I can change that myself.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,774,2019-06-29T06:29:11Z,2019-07-11T20:56:01Z,2019-07-11T20:56:01Z,CLOSED,False,37,0,1,https://github.com/DaveMielke,Add tests that verify the correct rendering of the undefined dots sequences.,1,[],https://github.com/liblouis/liblouis/pull/774,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/774,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,774,2019-06-29T06:29:11Z,2019-07-11T20:56:01Z,2019-07-11T20:56:01Z,CLOSED,False,37,0,1,https://github.com/DaveMielke,Add tests that verify the correct rendering of the undefined dots sequences.,1,[],https://github.com/liblouis/liblouis/pull/774,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/774#issuecomment-510650650,,Merged in 050699e,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,775,2019-07-01T17:55:11Z,2019-08-14T13:54:13Z,2019-08-23T14:38:14Z,MERGED,True,148,56,9,https://github.com/bertfrees,Support for compound words in lou_hyphenate,5,[],https://github.com/liblouis/liblouis/pull/775,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/775,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,775,2019-07-01T17:55:11Z,2019-08-14T13:54:13Z,2019-08-23T14:38:14Z,MERGED,True,148,56,9,https://github.com/bertfrees,Support for compound words in lou_hyphenate,5,[],https://github.com/liblouis/liblouis/pull/775,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/775#issuecomment-510649475,,@egli OK now?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,781,2019-07-04T00:46:52Z,2019-07-05T07:28:10Z,2019-07-05T07:28:49Z,MERGED,True,2,2,1,https://github.com/JulienCochuyt,tables/fr-bfu-comp68.cti: Fix small typo,2,['tables'],https://github.com/liblouis/liblouis/pull/781,https://github.com/JulienCochuyt,1,https://github.com/liblouis/liblouis/pull/781,"Fix a small typo in the character description for U-0305 (math complex conjugate)
Was ""congugué de"", should read ""conjugué de"".","Fix a small typo in the character description for U-0305 (math complex conjugate)
Was ""congugué de"", should read ""conjugué de"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,781,2019-07-04T00:46:52Z,2019-07-05T07:28:10Z,2019-07-05T07:28:49Z,MERGED,True,2,2,1,https://github.com/JulienCochuyt,tables/fr-bfu-comp68.cti: Fix small typo,2,['tables'],https://github.com/liblouis/liblouis/pull/781,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/781#issuecomment-508366042,"Fix a small typo in the character description for U-0305 (math complex conjugate)
Was ""congugué de"", should read ""conjugué de"".","Hi,
Could you correct another small mistake?
On line 56:

noback sign \x03D0 45-12 ϵ ϐ var. bêta

The ""ϵ "" part should be removed.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,781,2019-07-04T00:46:52Z,2019-07-05T07:28:10Z,2019-07-05T07:28:49Z,MERGED,True,2,2,1,https://github.com/JulienCochuyt,tables/fr-bfu-comp68.cti: Fix small typo,2,['tables'],https://github.com/liblouis/liblouis/pull/781,https://github.com/JulienCochuyt,3,https://github.com/liblouis/liblouis/pull/781#issuecomment-508553541,"Fix a small typo in the character description for U-0305 (math complex conjugate)
Was ""congugué de"", should read ""conjugué de"".","The ""ϵ "" part should be removed.

Done.
I have set your usual signature as the author of this second commit.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/lukaszgo1,1,https://github.com/liblouis/liblouis/pull/782,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.","The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/782#issuecomment-509340488,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.","Hello Łukasz. Is there some (official) document about the Polish braille code that we could refer to?
Also, we require all table changes to be backed by regression tests. Can you please give us, for each of the improvements, an example input and corresponding expected output?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/lukaszgo1,3,https://github.com/liblouis/liblouis/pull/782#issuecomment-509423100,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.",@bertfrees Sorry for this mess. Are these tests sufficient?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/782#issuecomment-509528133,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.",Yes. Perfect. Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/lukaszgo1,5,https://github.com/liblouis/liblouis/pull/782#issuecomment-509609765,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.","Regarding official specification the closest document that exists for literary braille is the publication containing rules for adapting printed materials to Polish braille. It is available here:
http://pzn.org.pl/wp-content/uploads/2016/07/zasady_adaptacji_materialow_dydaktycznych_do_wersji_brajlowskiej.pdf",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/782#issuecomment-509645392,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.","Perfect, thanks. Can I summarize the document as follows? If you think it's relevant you can also add something about the team of experts that were consulted.
Zasady adaptacji materiałów dydaktycznych do wersji brajlowskiej

title translated: Rules for adapting didactic materials to braille
by: Paweł Wdówik, Uniwersytet Warszawski, Biuro ds. Osób Niepełnosprawnych (University of Warszawa, Office for Persons with Disabilities)
published: Warszawa, 2011, ISBN 978-83-920140-4-1
language: Polish

Published in the project ""Education, disability, information, technology - elimination of barriers in access of disabled people to education"" implemented in the ""Kapitał Ludzki"" program co-financed by the European Union from the European Social Fund.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/lukaszgo1,7,https://github.com/liblouis/liblouis/pull/782#issuecomment-509648130,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.","There is one case which I haven't predicted which isn't working according to the specification. When you have for instance WSiP it is at the moment translated as ⠨⠨⠺⠎⠊⠨⠏ however it should be ⠨⠺⠨⠎⠊⠨⠏ that is if we have block of consecutive capitals, and there is one or more lover case letters between them each capital should be getting ⠨ before them. Is it possible to implement?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/lukaszgo1,8,https://github.com/liblouis/liblouis/pull/782#issuecomment-509648559,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.",The description of the specification is okay - thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/782#issuecomment-509651978,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.","I can't say from the top of my head if it is possible to implement, but you may already add it to the test and add a xfail: some description flag to the test to mark it as ""not implemented yet"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/782#issuecomment-509762395,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.",I cleaned up the branch and added two new commits.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/lukaszgo1,11,https://github.com/liblouis/liblouis/pull/782#issuecomment-510664176,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.",@bertfrees Thanks for merging. What could we do with the problem which I've described in this commend?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/782#issuecomment-510668831,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.","Can you create a new issue for it? I suspect it can't be done at the moment, so we'd need some changes to the code.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,782,2019-07-06T11:00:28Z,2019-07-11T20:59:33Z,2019-07-12T12:01:35Z,MERGED,True,36,3,8,https://github.com/lukaszgo1,Small fixes to the Polish tables.,5,['tables'],https://github.com/liblouis/liblouis/pull/782,https://github.com/lukaszgo1,13,https://github.com/liblouis/liblouis/pull/782#issuecomment-510860623,"The following has been done:

Proper sign for consecutive capital letters is used - is should be ⠨⠨ instead of ⠈⠠
Definitions for comma and dot when present between digits were reverted.
The – sign was added to the 8-dot table.",I've opened #791,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/784,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/leonardder,2,https://github.com/liblouis/liblouis/pull/784#issuecomment-509264009,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","@egli: I stumbled upon another bug while using the python 3 version of NVDA with this, namely that by default, single surrogate characters aren't allowed to be decoded/encoded in Python 3. This pr now also contains a fix for that issue.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/784#issuecomment-509320760,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","UCS-2 is compatible with UTF-16, however UCS-2 can't display emoji. That's where the surrogate characters are for.
Here is a lovely article about how Python does unicode",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/784#issuecomment-509333361,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","Just saying that it would be nice if the documentation would say something about the encoding, to show the intend and avoid misunderstandings. At the moment UTF-16 is not even properly supported, so raising an error on illegal UCS-2 characters actually would also make sense.
At the moment there are no tables yet that handle emoji, and the tables that do want to handle them (like the Taiwanese one) need to do some workaround.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/leonardder,5,https://github.com/liblouis/liblouis/pull/784#issuecomment-520423694,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","@bertfrees bertfrees @egli what's the best to bring this forward?
Having this in the next release would be beneficial for NVDA 2019.3 and beyond.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/784#issuecomment-520428520,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","Sure, shouldn't be a problem to get this into the release. It's just that little piece of documentation about the encoding of input strings that would be nice. Since Christian and I have a lot of work on our plate for the release, could you @leonardder maybe try to write up something for the manual? Or someone else? I was thinking in section 7.1: Overview. It already says something about compiling liblouis for 16- or 32-bit, but it isn't explicit about the input encoding.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/leonardder,7,https://github.com/liblouis/liblouis/pull/784#issuecomment-520446100,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","I'm not sure whether I""m the right person for this. I just assumed
compatibility between UCS-2 and UTF-16 and it seems Liblouis is able to
handle UTF-16 surrogates just fine (i.e. they are just nothing else than
code points), but I don't know anything about how liblouis deals with
encodings internally.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/784#issuecomment-520500411,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","At the moment Liblouis itself is completely unaware of the input encoding. So there isn't much to say about the internals. The main thing you need to know is that the ""characters"" used in a table match directly the 16- or 32-bit values in the input. So in the terminology used in the manual, a ""character"" is essentially what a ""character"" is in UCS-2/UCS-4. Tables can be encoded in UTF-8, 8-bit ASCII, UCS-2LE (little endian) or UCS-2BE (big endian). UTF-8 encoded tables with characters above U+FFFF do not work with a 16-bit version of Liblouis.
But while Liblouis is unaware of the input encoding, it is relevant for table authors, and conversely, it is relevant for the caller of Liblouis to know for which input encoding a table was designed.
Until now the input was always assumed to be UCS-2LE or UCS-2BE (for a 16-bit version of Liblouis). Note that the manual calls it ""16-bit Unicode"" and ""32-bit Unicode"". Depending on the interpretation of ""16-bit Unicode"", you can argue that UTF-16 was also allowed, but anyway, until now there haven't been any tables that actually support it.
If we add UTF-16 to the picture, we can simply assume the input is always UTF-16LE or UTF-16BE, because UTF-16 and UCS-2 are compatible. Still, it's better to explicitly state this in the manual so that table authors are aware that it is possible to handle UTF-16 input.
That just leaves us with one remaining problem: how does a caller of Liblouis know which tables are designed for little endian input and which are designed for big endian input. In practice, as far as I know all tables are for little endian, so the most straightforward solution would be to adapt the documentation. The alternative is to add this information as metadata in the table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/leonardder,9,https://github.com/liblouis/liblouis/pull/784#issuecomment-525152834,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","Just to make sure, I""m missing a referenceto this pr in the news file. I think that at least the allow surrogates part is important to list in the changelog, as NVDA relies on this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/784#issuecomment-525648994,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","@leonardder OK, I deliberately didn't mention it as I thought this was a technical detail, but I'm happy to mention it in the NEWS. Do you have a suggestion for a NEWS entry?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/leonardder,11,https://github.com/liblouis/liblouis/pull/784#issuecomment-525655686,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","How about something like this:

The python wrapper now encodes and decodes strings to/from UTF-16 and UTF-32 using the surrogatepass error handler. This ensures that single UTF-16 surrogate characters are processed correctly by the wrapper and don't raise an encoding/decoding error.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,784,2019-07-08T07:43:52Z,2019-08-23T07:30:36Z,2020-04-10T16:14:09Z,MERGED,True,19,16,1,https://github.com/leonardder,Python wrapper: createEncodedByeString > createEncodedByteString and allow surrogates on Python 3,2,"['documentation', 'Python']",https://github.com/liblouis/liblouis/pull/784,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/784#issuecomment-525674088,"FIxed a typo: createEncodedByeString > createEncodedByteString. This typo was probably introduced due to a bad search/replace.
On Python 3, an UnicodeEncodeError was raised when trying to translate utf-16 surrogate characters. NVDA suffers from this issue in command consoles, where surrogate characters seem to be allowed. Using the surrogatepass error handler ensures that behavior is similar to the behavior on Python 2.","Excellent, thanks. Fixed in f8cdd61",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,785,2019-07-08T12:57:58Z,2019-08-16T08:38:24Z,2019-08-16T08:38:24Z,MERGED,True,1630,922,164,https://github.com/aaclause,Update gnulib,1,[],https://github.com/liblouis/liblouis/pull/785,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/785,"This PR updates gnulib, based on commit ee77e5c1fef322b8c0a6596aa9b2c43323eff4d1 from git://git.savannah.gnu.org/gnulib.git repository.
At first, I just wanted to update the copyright year displayed when you execute lou_<tool> -v.
I discovered that the year is hard-coded in tools/gnulib/version-etc.c.
So, I take it that gnulib needs updated.
Then, with the help of HACKING file, I updated it.
I hope that is good.
Thanks.","This PR updates gnulib, based on commit ee77e5c1fef322b8c0a6596aa9b2c43323eff4d1 from git://git.savannah.gnu.org/gnulib.git repository.
At first, I just wanted to update the copyright year displayed when you execute lou_<tool> -v.
I discovered that the year is hard-coded in tools/gnulib/version-etc.c.
So, I take it that gnulib needs updated.
Then, with the help of HACKING file, I updated it.
I hope that is good.
Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/jrbowden,1,https://github.com/liblouis/liblouis/pull/786,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/786#issuecomment-509671543,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi James. Looks like a good start! No, you haven't done anything wrong as far as I can see. Just make sure these changes are eventually covered by tests. Note that you can define tests for the backward translation using the flag testmode: backward, or better yet is to use testmode: bothDirections.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/jrbowden,3,https://github.com/liblouis/liblouis/pull/786#issuecomment-510385807,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi Bert,

Many thanks for your kind words. It is good to know that I have done the right
thing.

So I have started work on the next little batch of commits and hope to have
another request later today or tomorrow (depending on how much other work I
have to do).

You are right: ideally, the dictionary harness test should be testing both
directions. I tried this yesterday and unfortunately this generates over 26,000
failed tests! I will however, see what can be done, because this would be
another improvement. I will have to consult about it though, because there is
obviously a reason why some rules have been added - I suspected them when I
read them.

Anyway, the new commits I am making all have accompanying tests.

Many thanks again for all your help and support, I very much appreciate it.

I look forward to continuing work with you and the LibLouis team.

With bestregards,

James.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/786#issuecomment-510418860,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Making all tests both directions is not possible, but a part of them can. We can split a YAML file into two files, or we can split up the tests into two sections, like this:
table:
  locale: en
  grade: 2
  system: ueb
  __assert-match: en-ueb-g2.ctb
flags: {testmode: forward}
tests:
  - [..., ...] 
  - [..., ...]
flags: {testmode: bothDirections}
tests:
  - [..., ...] 
  - [..., ...]",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/jrbowden,5,https://github.com/liblouis/liblouis/pull/786#issuecomment-510474021,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi Bert,

It's good to hear from you again.
Thank you for your advice about splitting tables and defining sets of tests
with different parameters.

I think in this case, errors in the tables are preventing the tests from being
both directions. I hope to fix the tables, rather than knocking out certain
tests.

There is one particular group of failing tests which, with a couple of rule
changes in the tables, would fixed thousands at once. But I will have to
consult others about making this change: there might be a reason why it is as
it is.

Many thanks again for your useful tip.

With best regards,

James.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/jrbowden,6,https://github.com/liblouis/liblouis/pull/786#issuecomment-510937096,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi Bert,
Here is the next batch of commits: these all have accompanying tests and all should pass.
RUEB stands for the Rules of Unified English Braille, the reference book for UEB.
More to follow...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/786#issuecomment-510940168,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Great!
It's also useful to include the ""RUEB x.y.z"" references in comments in the table and tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/786#issuecomment-559114179,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.",I moved this to milestone 3.12 because James told me he would like to have this released already even though it is still work in progress. He is currently getting his changes peer reviewed and will let us know when this is complete.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/jrbowden,9,https://github.com/liblouis/liblouis/pull/786#issuecomment-559769061,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi Bert,

I just put in the final two commits for this round.
Please go ahead and include if all tests pass.
It is still work in progress, but the feeling is that people would like to have
the improvements so far (over 2,000 words fixed).

For the release notes, you could write something like:
Improvements to contraction use in UEB.

(There are also a few improvements to back translation, but mainly it's words
in grade 2).

I trust this helps. Let me know if you need anything further.

I hope to continue this work after the release of 3.12. There is still a lot to
do.

With best regards,
James.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/786#issuecomment-559841542,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","OK thanks James.
There is one test that is failing. Can you help me with this? It's not a test that you wrote.
Input:    'achildren bchildren cchildren dchildren echildren  fchildren gchildren hchildren ichildren jchildren kchildren lchildren  mchildren nchildren ochildren pchildren qchildren rchildren schildren tchildren uchildren  vchildren wchildren xchildren ychildren zchildren'
Expected: 'a*n b*n c*n d*n e*n  f*n g*n h*n i*n j*n k*n l*n  m*n n*n o*n p*n q*n r*n s*n t*n u*n  v*n w*n x*n y*n z*n'
Received: 'a*n b*n c*ildr5 d*n e*n  f*n g*n h*n i*n j*n k*n l*n  m*n n*n o*n p*n q*n r*n s*n t*n u*n  v*n w*n x*n y*n z*n'

In other words, ""cchildren"" is translated to ""cildr5"" while the expected result is ""cn"".
After we have dealt with this the branch is ready to be merged as far as I'm concerned.
Note that you should start a new branch to continue working.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/jrbowden,11,https://github.com/liblouis/liblouis/pull/786#issuecomment-559889196,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi Bert,

Thanks for your email.
I am confused why I do not have this test - I should have spotted this one
months ago. It is not in my test suite. Did someone else add this test very
recently?

However, yes, I understand why this is happening. Technically it is an error.
I added a preference rule for the letters CCH: the CH sign always takes
priority over CC.

I have an idea we can change

always cch ...
to

match %a cch - ...

and this will probably fix things.

Shall I make a commit for this change?

With best regards,

James.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/786#issuecomment-560101825,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Yes the test was added recently.

Shall I make a commit for this change?

If you think it will fix things, yes please!
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/786#issuecomment-560317277,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.",@jrbowden can you do this like now. I want to cut the release at 15:00 CET. Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/jrbowden,14,https://github.com/liblouis/liblouis/pull/786#issuecomment-560331137,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi,

Hopefully all done now. Apologies for the delay - I was busy for a lot of the
weekend so this had to wait till I was back at work.
A lot of merge conflicts apparently created by this commit, there should just
be 1 line added to en-ueb-g2.ctb.

With best regards,

James.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/786#issuecomment-560356653,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Thank you James! All tests pass now.
I rebased the branch onto the lasest master. @egli Ready to be merged.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/786#issuecomment-582988092,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.",@jrbowden I just noticed that you forgot to add a copyright line for your changes to en-ueb-g2.ctb and en-ueb-g2-dictionary_harness.yaml.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/jrbowden,17,https://github.com/liblouis/liblouis/pull/786#issuecomment-583141817,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","Hi Bert,
Good to hear from you again.

What kind of copyright line do I need?
I thought it was all covered by the main Liblouis license?
I'm just a contributor?

I hope to continue making more additions, but have not managed thus far this
year due to other projects.

With best regards,

James.
…
----Original Message----
From: notifications@github.com
Date: 06/02/2020 16:28
To: ""liblouis/liblouis""<liblouis@noreply.github.com>
Cc: ""jrbowden""<jr.bowden@btinternet.com>, ""Mention""<mention@noreply.github.com>
Subj: Re: [liblouis/liblouis] Beginning work to improve UEB (#786)

@jrbowden I just noticed that you forgot to add a copyright line for your
changes to en-ueb-g2.ctb and en-ueb-g2-dictionary_harness.yaml.
-- 
You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#786 (comment)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,786,2019-07-09T14:01:13Z,2019-12-02T12:34:00Z,2020-02-06T23:35:22Z,MERGED,True,4459,518,3,https://github.com/jrbowden,Beginning work to improve UEB,41,['tables'],https://github.com/liblouis/liblouis/pull/786,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/786#issuecomment-583163913,"Hi Bert,
I have a lot of changes to fix issues in the UEB tables of LibLouis.
As I'm new to GIT, I wanted to start with a couple of cosmetic issues (which does fix about 4 errors when back translating).
I hope I've done the right thing, please let me know.
If this is OK, I'll start making more substantive changes.
There are no updated tests for this pull request, later ones will have added tests, mainly to the ueb-g2_dictionary-harness.yaml file.
If I've done anything wrong, please do let me know, as I am very new to GIT.
With best regards,
James Bowden.","The copyright notice and the license are two different things. The copyright notice recognizes you as the (co-)author of a specific file and gives you the power to enforce the license. It is a requirement of the GPL to put copyright notices in your source files, with the right dates.
Just mimic the other copyright lines in the same file or other files.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,788,2019-07-09T17:02:03Z,2019-11-26T15:15:26Z,2019-11-26T15:15:44Z,MERGED,True,10257,116,5,https://github.com/bertfrees,Update en-ueb-michael-robin.yaml,3,[],https://github.com/liblouis/liblouis/pull/788,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/788,"@MikeGray-APH @josephsl Could you please review these new tests, and tell me if they make sense or not before I commit them? I have no idea. I have the feeling these are corner cases. I thought it was weird to use contracted braille for this kind of input, but Michael told me computer braille has its drawbacks and it should also be possible to use grade 2.","@MikeGray-APH @josephsl Could you please review these new tests, and tell me if they make sense or not before I commit them? I have no idea. I have the feeling these are corner cases. I thought it was weird to use contracted braille for this kind of input, but Michael told me computer braille has its drawbacks and it should also be possible to use grade 2.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,788,2019-07-09T17:02:03Z,2019-11-26T15:15:26Z,2019-11-26T15:15:44Z,MERGED,True,10257,116,5,https://github.com/bertfrees,Update en-ueb-michael-robin.yaml,3,[],https://github.com/liblouis/liblouis/pull/788,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/788#issuecomment-521227539,"@MikeGray-APH @josephsl Could you please review these new tests, and tell me if they make sense or not before I commit them? I have no idea. I have the feeling these are corner cases. I thought it was weird to use contracted braille for this kind of input, but Michael told me computer braille has its drawbacks and it should also be possible to use grade 2.","@MikeGray-APH Hi, does this test make sense to you?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,788,2019-07-09T17:02:03Z,2019-11-26T15:15:26Z,2019-11-26T15:15:44Z,MERGED,True,10257,116,5,https://github.com/bertfrees,Update en-ueb-michael-robin.yaml,3,[],https://github.com/liblouis/liblouis/pull/788,https://github.com/MikeGray-APH,3,https://github.com/liblouis/liblouis/pull/788#issuecomment-527820499,"@MikeGray-APH @josephsl Could you please review these new tests, and tell me if they make sense or not before I commit them? I have no idea. I have the feeling these are corner cases. I thought it was weird to use contracted braille for this kind of input, but Michael told me computer braille has its drawbacks and it should also be possible to use grade 2.","It seems OK to me, but the file should be split up and renamed for the issues that it is testing for.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,788,2019-07-09T17:02:03Z,2019-11-26T15:15:26Z,2019-11-26T15:15:44Z,MERGED,True,10257,116,5,https://github.com/bertfrees,Update en-ueb-michael-robin.yaml,3,[],https://github.com/liblouis/liblouis/pull/788,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/788#issuecomment-527827426,"@MikeGray-APH @josephsl Could you please review these new tests, and tell me if they make sense or not before I commit them? I have no idea. I have the feeling these are corner cases. I thought it was weird to use contracted braille for this kind of input, but Michael told me computer braille has its drawbacks and it should also be possible to use grade 2.","@MikeGray-APH Thanks for having a look. Hmm, as far as I understand all of the tests have to do with contractions not being applied, or grade 1 indicators not being inserted, when some special characters that you could encounter in URLs or computer code, precede or follow it. It's all just one issue, isn't it? Except for the ""multiple _ becomes single _"" test case, this might be a separate issue.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,788,2019-07-09T17:02:03Z,2019-11-26T15:15:26Z,2019-11-26T15:15:44Z,MERGED,True,10257,116,5,https://github.com/bertfrees,Update en-ueb-michael-robin.yaml,3,[],https://github.com/liblouis/liblouis/pull/788,https://github.com/MikeGray-APH,5,https://github.com/liblouis/liblouis/pull/788#issuecomment-527830005,"@MikeGray-APH @josephsl Could you please review these new tests, and tell me if they make sense or not before I commit them? I have no idea. I have the feeling these are corner cases. I thought it was weird to use contracted braille for this kind of input, but Michael told me computer braille has its drawbacks and it should also be possible to use grade 2.","In the file there are several references to freelists.org liblouis-liblouisxml posts, so I assume those are the issues that are being addressed.  If they are all the same, than just changing the file name to refer to that issue is fine.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,788,2019-07-09T17:02:03Z,2019-11-26T15:15:26Z,2019-11-26T15:15:44Z,MERGED,True,10257,116,5,https://github.com/bertfrees,Update en-ueb-michael-robin.yaml,3,[],https://github.com/liblouis/liblouis/pull/788,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/788#issuecomment-527834951,"@MikeGray-APH @josephsl Could you please review these new tests, and tell me if they make sense or not before I commit them? I have no idea. I have the feeling these are corner cases. I thought it was weird to use contracted braille for this kind of input, but Michael told me computer braille has its drawbacks and it should also be possible to use grade 2.","Yes he has been sending a lot of emails, but as far as I can see (but I'm no UEB expert) they all come down to the same thing.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,788,2019-07-09T17:02:03Z,2019-11-26T15:15:26Z,2019-11-26T15:15:44Z,MERGED,True,10257,116,5,https://github.com/bertfrees,Update en-ueb-michael-robin.yaml,3,[],https://github.com/liblouis/liblouis/pull/788,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/788#issuecomment-558654712,"@MikeGray-APH @josephsl Could you please review these new tests, and tell me if they make sense or not before I commit them? I have no idea. I have the feeling these are corner cases. I thought it was weird to use contracted braille for this kind of input, but Michael told me computer braille has its drawbacks and it should also be possible to use grade 2.",I've split up the tests into a en-ueb-computer-code.yaml and a en-ueb-repeated-underscores.yaml file.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/789,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)","It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/789#issuecomment-510642751,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)","Hmm, @egli can you see what I did wrong? The tests pass on my machine.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/789#issuecomment-511335957,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)","Hm, looks like checkyaml core dumped
FAIL: braille-specs/en-ueb-g2_backward
======================================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /home/travis/build/liblouis/liblouis/tables/en-ueb-g2.ctb (28)
../tests/yaml-log-compiler.sh: line 25: 22569 Segmentation fault      (core dumped) ${WINE} lou_checkyaml${EXEEXT} $yaml_test
FAIL braille-specs/en-ueb-g2_backward.yaml (exit status: 139)

FAIL: braille-specs/spaces
==========================

../tests/yaml-log-compiler.sh: line 25: 23748 Segmentation fault      (core dumped) ${WINE} lou_checkyaml${EXEEXT} $yaml_test
FAIL braille-specs/spaces.yaml (exit status: 139)

Can you try to run this with addressSanitizer (see HACKING)?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/789#issuecomment-511336563,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)",OK I'll try that.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/789#issuecomment-512991617,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)",@egli I can't make addressSanitizer work. Tried with both LLVM and gcc.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/789#issuecomment-521248276,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)","OK, I'll try with addressSanitizer",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/789#issuecomment-521652195,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)","Well, I ran the spaces test with lou_checkyaml with AddressSanitizer

Output of spaces.yaml
eglic@wharton:~/src/liblouis$ ./tools/lou_checkyaml tests/braille-specs/spaces.yaml 
=================================================================
==19001==ERROR: AddressSanitizer: heap-use-after-free on address 0x62e00014e8e8 at pc 0x7fca3552456a bp 0x7ffede728d50 sp 0x7ffede728d40
WRITE of size 2 at 0x62e00014e8e8 thread T0
    #0 0x7fca35524569 in compileUplow /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2282
    #1 0x7fca35524569 in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2669
    #2 0x7fca3552ee7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #3 0x7fca35524aaf in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4122
    #4 0x7fca35524aaf in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #5 0x7fca3552ebe1 in compileString /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3799
    #6 0x7fca355309c6 in lou_compileString /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4511
    #7 0x5567dcd73144 in compile_include /home/eglic/src/liblouis/tools/lou_checkyaml.c:212
    #8 0x5567dcd73591 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:342
    #9 0x5567dcd74605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #10 0x7fca3512ab6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)
    #11 0x5567dcd6f4c9 in _start (/home/eglic/src/liblouis/tools/.libs/lou_checkyaml+0x64c9)

0x62e00014e8e8 is located 42216 bytes inside of 42256-byte region [0x62e000144400,0x62e00014e910)
freed by thread T0 here:
    #0 0x7fca3568a87e in __interceptor_realloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c87e)
    #1 0x7fca3551d4bc in allocateSpaceInTranslationTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:417
    #2 0x7fca3551d6fc in addCharOrDots /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:545
    #3 0x7fca35524027 in compileUplow /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2275
    #4 0x7fca35524027 in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2669
    #5 0x7fca3552ee7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #6 0x7fca35524aaf in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4122
    #7 0x7fca35524aaf in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #8 0x7fca3552ebe1 in compileString /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3799
    #9 0x7fca355309c6 in lou_compileString /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4511
    #10 0x5567dcd73144 in compile_include /home/eglic/src/liblouis/tools/lou_checkyaml.c:212
    #11 0x5567dcd73591 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:342
    #12 0x5567dcd74605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #13 0x7fca3512ab6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

previously allocated by thread T0 here:
    #0 0x7fca3568a448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7fca3552f50c in allocateTranslationTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:479
    #2 0x7fca3552f50c in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4151
    #3 0x7fca3552f50c in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #4 0x5567dcd73342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #5 0x5567dcd74605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #6 0x7fca3512ab6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

SUMMARY: AddressSanitizer: heap-use-after-free /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2282 in compileUplow
Shadow bytes around the buggy address:
  0x0c5c80021cc0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c5c80021cd0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c5c80021ce0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c5c80021cf0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c5c80021d00: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
=>0x0c5c80021d10: fd fd fd fd fd fd fd fd fd fd fd fd fd[fd]fd fd
  0x0c5c80021d20: fd fd fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5c80021d30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5c80021d40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5c80021d50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5c80021d60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==19001==ABORTING

Then I also checked with tests/braille-specs/en-ueb-g2_backward.yaml:

Output of en-ueb-g2_backward.yaml
eglic@wharton:~/src/liblouis$ ./tools/lou_checkyaml tests/braille-specs/en-ueb-g2_backward.yaml 
Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /usr/local/share/liblouis/tables/en-ueb-g2.ctb (28)
SUCCESS (58 tests, 0 failures)

=================================================================
==19043==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 5824 byte(s) in 364 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff168b8 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3978
    #2 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #3 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #4 0x7f299ff4e008 in analyzeTable /home/eglic/src/liblouis/liblouis/metadata.c:381
    #5 0x7f299ff4f10f in lou_indexTables /home/eglic/src/liblouis/liblouis/metadata.c:509
    #6 0x7f299ff4f717 in indexTablePath /home/eglic/src/liblouis/liblouis/metadata.c:603
    #7 0x7f299ff4f82e in lou_findTable /home/eglic/src/liblouis/liblouis/metadata.c:611
    #8 0x55e5bda0a1bc in read_table_value /home/eglic/src/liblouis/tools/lou_checkyaml.c:271
    #9 0x55e5bda0d28a in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:314
    #10 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #11 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Direct leak of 2048 byte(s) in 1 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x55e5bda09934 in read_table_value /home/eglic/src/liblouis/tools/lou_checkyaml.c:223
    #2 0x55e5bda0d28a in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:314
    #3 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #4 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Direct leak of 128 byte(s) in 4 object(s) allocated from:
    #0 0x7f29a008087e in __interceptor_realloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c87e)
    #1 0x7f299fceb1f3 in yaml_string_extend (/usr/lib/x86_64-linux-gnu/libyaml-0.so.2+0x61f3)

Direct leak of 48 byte(s) in 3 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff168b8 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3978
    #2 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #3 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #4 0x7f299ff1a9af in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4110
    #5 0x7f299ff1a9af in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #6 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #7 0x7f299ff1aaaf in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4122
    #8 0x7f299ff1aaaf in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #9 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #10 0x7f299ff25e93 in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4175
    #11 0x7f299ff25e93 in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #12 0x55e5bda0d342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #13 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #14 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Direct leak of 44 byte(s) in 1 object(s) allocated from:
    #0 0x7f29a000916d in strdup (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x9516d)
    #1 0x55e5bda0d981 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:957
    #2 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Direct leak of 32 byte(s) in 2 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff168b8 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3978
    #2 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #3 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #4 0x7f299ff1a9af in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4110
    #5 0x7f299ff1a9af in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #6 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #7 0x7f299ff25e93 in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4175
    #8 0x7f299ff25e93 in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #9 0x55e5bda0d342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #10 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #11 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Direct leak of 32 byte(s) in 2 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299fce7c13  (/usr/lib/x86_64-linux-gnu/libyaml-0.so.2+0x2c13)

Direct leak of 32 byte(s) in 2 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff168b8 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3978
    #2 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #3 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #4 0x7f299ff1a9af in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4110
    #5 0x7f299ff1a9af in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #6 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #7 0x7f299ff1aaaf in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4122
    #8 0x7f299ff1aaaf in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #9 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #10 0x7f299ff1aaaf in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4122
    #11 0x7f299ff1aaaf in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #12 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #13 0x7f299ff25e93 in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4175
    #14 0x7f299ff25e93 in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #15 0x55e5bda0d342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #16 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #17 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Direct leak of 24 byte(s) in 1 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff168b8 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3978
    #2 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #3 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #4 0x7f299ff25e1f in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4170
    #5 0x7f299ff25e1f in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #6 0x55e5bda0d342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #7 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #8 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Direct leak of 14 byte(s) in 1 object(s) allocated from:
    #0 0x7f29a000916d in strdup (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x9516d)
    #1 0x55e5bda0a143 in read_table_query /home/eglic/src/liblouis/tools/lou_checkyaml.c:151
    #2 0x55e5bda0a143 in read_table_value /home/eglic/src/liblouis/tools/lou_checkyaml.c:270
    #3 0x55e5bda0d28a in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:314
    #4 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #5 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Indirect leak of 1490944 byte(s) in 364 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff16d17 in resolveSubtable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3850
    #2 0x7f299ff16d17 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3988
    #3 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #4 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #5 0x7f299ff4e008 in analyzeTable /home/eglic/src/liblouis/liblouis/metadata.c:381
    #6 0x7f299ff4f10f in lou_indexTables /home/eglic/src/liblouis/liblouis/metadata.c:509
    #7 0x7f299ff4f717 in indexTablePath /home/eglic/src/liblouis/liblouis/metadata.c:603
    #8 0x7f299ff4f82e in lou_findTable /home/eglic/src/liblouis/liblouis/metadata.c:611
    #9 0x55e5bda0a1bc in read_table_value /home/eglic/src/liblouis/tools/lou_checkyaml.c:271
    #10 0x55e5bda0d28a in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:314
    #11 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #12 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Indirect leak of 12288 byte(s) in 3 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff16d17 in resolveSubtable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3850
    #2 0x7f299ff16d17 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3988
    #3 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #4 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #5 0x7f299ff1a9af in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4110
    #6 0x7f299ff1a9af in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #7 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #8 0x7f299ff1aaaf in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4122
    #9 0x7f299ff1aaaf in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #10 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #11 0x7f299ff25e93 in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4175
    #12 0x7f299ff25e93 in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #13 0x55e5bda0d342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #14 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #15 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Indirect leak of 8192 byte(s) in 2 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff16d17 in resolveSubtable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3850
    #2 0x7f299ff16d17 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3988
    #3 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #4 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #5 0x7f299ff1a9af in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4110
    #6 0x7f299ff1a9af in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #7 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #8 0x7f299ff1aaaf in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4122
    #9 0x7f299ff1aaaf in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #10 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #11 0x7f299ff1aaaf in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4122
    #12 0x7f299ff1aaaf in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #13 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #14 0x7f299ff25e93 in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4175
    #15 0x7f299ff25e93 in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #16 0x55e5bda0d342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #17 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #18 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Indirect leak of 8192 byte(s) in 2 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff16d17 in resolveSubtable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3850
    #2 0x7f299ff16d17 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3988
    #3 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #4 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #5 0x7f299ff1a9af in includeFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4110
    #6 0x7f299ff1a9af in compileRule /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:2693
    #7 0x7f299ff24e7f in compileFile /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4067
    #8 0x7f299ff25e93 in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4175
    #9 0x7f299ff25e93 in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #10 0x55e5bda0d342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #11 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #12 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

Indirect leak of 8192 byte(s) in 2 object(s) allocated from:
    #0 0x7f29a0080448 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x10c448)
    #1 0x7f299ff16d17 in resolveSubtable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3850
    #2 0x7f299ff16d17 in _lou_defaultTableResolver /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:3988
    #3 0x55e5bda0985f in customTableResolver /home/eglic/src/liblouis/tools/lou_checkyaml.c:891
    #4 0x7f299ff16f1f in _lou_resolveTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4029
    #5 0x7f299ff25e1f in compileTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4170
    #6 0x7f299ff25e1f in lou_getTable /home/eglic/src/liblouis/liblouis/compileTranslationTable.c:4283
    #7 0x55e5bda0d342 in read_table /home/eglic/src/liblouis/tools/lou_checkyaml.c:325
    #8 0x55e5bda0e605 in main /home/eglic/src/liblouis/tools/lou_checkyaml.c:1016
    #9 0x7f299fb20b6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)

SUMMARY: AddressSanitizer: 1536034 byte(s) leaked in 754 allocation(s).
eglic@wharton:~/src/liblouis$ 

The second one seems to have succeeded while the spaces test crashed afaict. TBH I'm not sure if this helps much",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/789#issuecomment-521773974,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)",Hmm so what do you suggest? Have you tried running it on master?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/789#issuecomment-521937989,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)","Hm, now that I looked at the code that you changed I begin to understand the AddressSanitizer output. I didn't know that you changed the memory allocation functions. From the error output it looks like you are using memory that has been freed before.
I'll run scan-build over it to see it it tells me anything. BTW, scan-build might work for you since it is based on LLVM.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/789#issuecomment-521947468,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)",scan-build doesn't really help that much here. I guess we'll have to bite the bullet and dig into those AddressSanitizer reports.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/789#issuecomment-521959442,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)","Hm, this is starting to get interesting:

Output of gdb session
eglic@wharton:~/src/liblouis$ libtool --mode=execute gdb ./tools/lou_checkyaml
Reading symbols from /home/eglic/src/liblouis/tools/.libs/lou_checkyaml...
(gdb) run tests/braille-specs/spaces.yaml
Starting program: /home/eglic/src/liblouis/tools/.libs/lou_checkyaml tests/braille-specs/spaces.yaml

Program received signal SIGSEGV, Segmentation fault.
0x00007ffff7fb1467 in makeCorrections (table=0x555555a432c0, mode=0, currentPass=0, 
    input=0x7fffffffd000, output=0x7fffffffd020, posMapping=0x555555579380, realInlen=0x7fffffffcf80, 
    cursorPosition=0x7fffffffcf74, cursorStatus=0x7fffffffcf78, appliedRules=0x0, 
    appliedRulesCount=0x7fffffffcf7c, maxAppliedRules=0) at lou_backTranslateString.c:1029
1029						currentOpcode = currentRule->opcode;
(gdb) bt
#0  0x00007ffff7fb1467 in makeCorrections (table=0x555555a432c0, mode=0, currentPass=0, 
    input=0x7fffffffd000, output=0x7fffffffd020, posMapping=0x555555579380, realInlen=0x7fffffffcf80, 
    cursorPosition=0x7fffffffcf74, cursorStatus=0x7fffffffcf78, appliedRules=0x0, 
    appliedRulesCount=0x7fffffffcf7c, maxAppliedRules=0) at lou_backTranslateString.c:1029
#1  0x00007ffff7faef6a in _lou_backTranslateWithTracing (
    tableList=0x5555557a5f20 ""checkyaml_inline_table_at_line_1,en-ueb-g1.ctb"", inbuf=0x555555896990, 
    inlen=0x7fffffffd13c, outbuf=0x555555585b60, outlen=0x7fffffffd140, typeform=0x0, spacing=0x0, 
    outputPos=0x0, inputPos=0x0, cursorPos=0x7fffffffd144, mode=0, rules=0x0, rulesLen=0x0)
    at lou_backTranslateString.c:247
#2  0x00007ffff7fae949 in lou_backTranslate (
    tableList=0x5555557a5f20 ""checkyaml_inline_table_at_line_1,en-ueb-g1.ctb"", inbuf=0x555555896990, 
    inlen=0x7fffffffd13c, outbuf=0x555555585b60, outlen=0x7fffffffd140, typeform=0x0, spacing=0x0, 
    outputPos=0x0, inputPos=0x0, cursorPos=0x7fffffffd144, modex=0) at lou_backTranslateString.c:143
#3  0x000055555555ab24 in check_base (
    tableList=0x5555557a5f20 ""checkyaml_inline_table_at_line_1,en-ueb-g1.ctb"", 
    input=0x555555896790 ""\\x0020"", expected=0x5555558d7990 ""\\x0020"", in=...) at brl_checks.c:149
#4  0x0000555555558e99 in read_test (parser=0x7fffffffd9d0, tables=0x7fffffffd430, direction=2, 
    hyphenation=0) at lou_checkyaml.c:824
#5  0x00005555555590d4 in read_tests (parser=0x7fffffffd9d0, tables=0x7fffffffd430, direction=2, 
    hyphenation=0) at lou_checkyaml.c:867
#6  0x0000555555559a3b in main (argc=2, argv=0x7fffffffdcc8) at lou_checkyaml.c:1049

Looks like it crashes when trying to read currentRule->opcode in lou_backTranslateString.c. gdb says that the ruleArea is empty:

Dump of table struct
(gdb) p *table
$11 = {
  capsNoCont = 0, 
  numPasses = 2, 
  corrections = 1, 
  syllables = 0, 
  usesSequences = 0, 
  usesNumericMode = 1, 
  usesEmphMode = 0, 
  tableSize = 129220, 
  bytesUsed = 110980, 
  undefined = 0, 
  letterSign = 0, 
  numberSign = 14205, 
  noContractSign = 14215, 
  seqPatterns = {0 <repeats 128 times>}, 
  emphClasses = {0x555555896830 ""italic"", 0x555555896850 ""underline"", 0x555555896870 ""bold"", 
    0x555555896890 ""script"", 0x5555558968b0 ""transnote"", 0x5555558968d0 ""trans1"", 
    0x5555558968f0 ""trans2"", 0x555555896910 ""trans3"", 0x555555896930 ""trans4"", 0x555555896950 ""trans5"", 
    0x0}, 
  seqPatternsCount = 0, 
  seqAfterExpression = {0 <repeats 128 times>}, 
  seqAfterExpressionLength = 0, 
  emphRules = {{15995, 0, 0, 16006, 16017, 15965, 15975, 15985, 3}, {16057, 0, 16067, 0, 0, 16027, 
      16037, 16047, 3}, {16157, 0, 16167, 0, 0, 16127, 16137, 16147, 3}, {16107, 0, 16117, 0, 0, 16077, 
      16087, 16097, 3}, {16207, 0, 16217, 0, 0, 16177, 16187, 16197, 3}, {0, 0, 0, 16227, 16238, 0, 0, 
      0, 0}, {16282, 0, 16293, 0, 0, 16249, 16260, 16271, 3}, {16337, 0, 16348, 0, 0, 16304, 16315, 
      16326, 3}, {16392, 0, 16403, 0, 0, 16359, 16370, 16381, 3}, {16447, 0, 16458, 0, 0, 16414, 16425, 
      16436, 3}, {16502, 0, 16513, 0, 0, 16469, 16480, 16491, 3}}, 
  begComp = 0, 
  compBegEmph1 = 0, 
  compEndEmph1 = 0, 
  compBegEmph2 = 0, 
  compEndEmph2 = 0, 
  compBegEmph3 = 0, 
  compEndEmph3 = 0, 
  compCapSign = 0, 
  compBegCaps = 0, 
  compEndCaps = 0, 
  endComp = 0, 
  hyphenStatesArray = 0, 
  noLetsignBefore = {0 <repeats 128 times>}, 
  noLetsignBeforeCount = 0, 
  noLetsign = {0 <repeats 128 times>}, 
  noLetsignCount = 0, 
  noLetsignAfter = {0 <repeats 128 times>}, 
  noLetsignAfterCount = 0, 
  characters = {141, 0, 0, 0, 0, 0, 0, 9903, 9911, 53, 169, 187, 205, 223, 0, 0, 0, 12154, 12173, 0, 0, 
    0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 115, 2958, 3019, 3198, 3233, 3252, 3271, 3290, 3316, 3351, 3370, 
    3389, 3408, 3459, 3487, 3523, 1982, 2000, 2018, 2036, 2054, 2072, 2090, 2108, 2126, 2144, 3542, 
    3595, 3664, 3683, 3702, 3054, 3742, 678, 730, 782, 617, 645, 922, 974, 1026, 1078, 1130, 1182, 
    1234, 1286, 1338, 601, 1434, 1486, 609, 1582, 1634, 1686, 1738, 593, 1834, 1886, 637, 3761, 3780, 
    3799, 2333, 3818, 2412, 686, 738, 790, 834, 878, 930, 982, 1034, 1086, 1138, 1190, 1242, 1294, 
    1346, 1390, 1442, 1494, 1538, 1590, 1642, 1694, 1746, 1790, 1842, 1894, 1938, 3837, 3856, 3883, 
    2493, 0, 0, 0, 13247, 0, 0, 557, 16534, 8190, 8266, 16588, 16606, 13545, 13553, 13583, 12749, 
    12757, 12787, 575, 16750, 16768, 16786, 16804, 16822, 16840, 16858, 16876, 16894, 16912, 16930, 
    16948, 12825, 12833, 89, 3912, 3941, 3960, 3979, 3997, 4016, 4046, 2706, 4065, 17182, 4084, 4103, 
    4122, 4140, 2580, 4159, 4178, 4197, 4225, 2262, 4245, 4343, 4264, 2643, 17452, 17470, 4362, 4283, 
    4303, 4323, 4381, 4400, 4438, 4476, 4514, 4552, 4590, 4628, 4648...}, 
  dots = {0 <repeats 103 times>, 9, 0 <repeats 97 times>, 123, 702, 3416, 754, 3298, 1206, 3603, 1258, 
    2349, 806, 1102, 946, 2270, 1310, 1606, 1458, 3332, 894, 2714, 1050, 2501, 1406, 2966, 1554, 2278, 
    850, 1154, 998, 2777, 1362, 1658, 1510, 3035, 2420, 2341, 3324, 2588, 1710, 3062, 1762, 2428, 2376, 
--Type <RET> for more, q to quit, c to continue without paging--
    10793, 2903, 2804, 1858, 5519, 2651, 3621, 8809, 3495, 3864, 3080, 1954, 3027, 13999, 3214, 3206, 
    1806, 2528, 4205, 1910, 14025, 11376, 17676, 694, 17720, 746, 17764, 1198, 17808, 1250, 17852, 798, 
    1094, 938, 17932, 1302, 1598, 1450, 18012, 886, 18056, 1042, 18100, 1398, 18144, 1546, 18188, 842, 
    1146, 990, 18268, 1354, 1650, 1502, 18348, 18374, 18400, 18426, 18452, 1702, 18496, 1754, 18540, 
    18566, 18592, 18618, 18644, 1850, 18688, 18714, 18740, 18766, 18792, 18818, 18844, 1946, 18888, 
    18914, 18940, 18966, 1798, 19010, 19036, 1902, 19080, 19106, 19132, 19158, 19184, 19210, 19236, 
    19262, 19288, 19314, 19340, 19366, 19392, 19418, 19444, 19470, 19496, 19522, 19548, 19574, 19600, 
    19626, 19652, 19678, 19704, 19730, 19756, 19782, 19808, 19834, 19860, 19886, 19912, 19938, 19964, 
    19990, 20016, 20042, 20068, 20094, 20120, 20146, 20172, 20198, 20224, 20250, 20276, 20302, 20328, 
    20354, 20380, 20406, 20432...}, 
  compdotsPattern = {0 <repeats 256 times>}, 
  swapDefinitions = {0 <repeats 50 times>}, 
  forPassRules = {665, 0, 14265, 0, 0}, 
  backPassRules = {0, 0, 0, 0, 0}, 
  forRules = {0 <repeats 273 times>, 13621, 0, 0, 0, 0, 0, 0, 0, 13667, 13632, 0, 0, 0, 0, 13643, 
    13679, 13701, 0, 13655, 0 <repeats 306 times>, 13690, 0 <repeats 519 times>, 13839, 13868, 13897, 
    13926, 0}, 
  backRules = {0 <repeats 133 times>, 8581, 16037, 8619, 16047, 8931, 16027, 8969, 11820, 0, 8893, 
    9349, 14051, 4253, 9235, 9159, 11724, 8733, 0, 0, 13915, 9121, 11517, 9197, 11934, 8695, 12560, 
    8657, 3807, 9045, 9273, 0, 0, 2436, 13886, 3769, 3826, 9311, 11498, 0, 0, 0, 0, 12330, 0, 9083, 0, 
    9387, 0, 8817, 0, 4024, 3260, 8771, 16057, 0, 11422, 8855, 9463, 0, 16469, 9425, 
    0 <repeats 24 times>, 13690, 0 <repeats 19 times>, 13075, 0 <repeats 40 times>, 5557, 0, 0, 0, 0, 
    0, 0, 0, 4636, 0 <repeats 46 times>, 15985, 0, 0, 6224, 0, 0, 0, 0, 0, 0, 0, 6204, 
    0 <repeats 16 times>, 15995, 0, 0, 0, 10143, 0, 0, 0, 11262, 0 <repeats 13 times>, 3043, 
    0 <repeats 16 times>, 10378, 0, 0, 0, 0, 0, 0, 13980, 0 <repeats 87 times>, 10331, 
    0 <repeats 32 times>...}, 
  ruleArea = {0}
}
(gdb) 

Any idea?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,789,2019-07-10T10:30:19Z,2019-08-21T11:51:10Z,2020-03-22T12:58:32Z,MERGED,True,1345,1173,4,https://github.com/bertfrees,Internally separate display from translation,5,"['enhancement', 'refactoring']",https://github.com/liblouis/liblouis/pull/789,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/789#issuecomment-522265841,"It is still possible to use a translation table as a display table, and the API is not changed yet.
The next steps are

to add a separate argument for the display table to the API
to add new options for the display table to the tools
to use the new API to implement display: ... in the ""lou_checkyaml"" tool
to add deprecation warnings when a display table contains rules other than display
to make it possible to specify a display table that is not really a table but implemented in C (notably for Unicode braille, and possibly the dotsIO mode can be replaced with a special display table)
to add more options for controlling the displaying, like e.g. ignoring virtual dots (see #750)","I don't think I changed how the memory allocation works, are at least didn't mean to. But while trying to eliminate the tableSize and tableUsed variables I must have done something wrong. I think I already spot the error.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,790,2019-07-11T05:16:12Z,2019-08-14T14:19:10Z,2019-08-14T14:19:10Z,MERGED,True,1,0,1,https://github.com/mlang,tables/de-de-comp8.ctb: add a mapping for 0x2019,1,['tables'],https://github.com/liblouis/liblouis/pull/790,https://github.com/mlang,1,https://github.com/liblouis/liblouis/pull/790,"RIGHT SINGLE QUOTATION MARK comes up regularily when browsing the web with
NVDA.","RIGHT SINGLE QUOTATION MARK comes up regularily when browsing the web with
NVDA.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,790,2019-07-11T05:16:12Z,2019-08-14T14:19:10Z,2019-08-14T14:19:10Z,MERGED,True,1,0,1,https://github.com/mlang,tables/de-de-comp8.ctb: add a mapping for 0x2019,1,['tables'],https://github.com/liblouis/liblouis/pull/790,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/790#issuecomment-521260707,"RIGHT SINGLE QUOTATION MARK comes up regularily when browsing the web with
NVDA.",@bertfrees I thought you wanted to add a test file?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,790,2019-07-11T05:16:12Z,2019-08-14T14:19:10Z,2019-08-14T14:19:10Z,MERGED,True,1,0,1,https://github.com/mlang,tables/de-de-comp8.ctb: add a mapping for 0x2019,1,['tables'],https://github.com/liblouis/liblouis/pull/790,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/790#issuecomment-521261924,"RIGHT SINGLE QUOTATION MARK comes up regularily when browsing the web with
NVDA.",Yes but I can do that afterwards.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,792,2019-07-13T07:07:42Z,2019-08-23T14:48:16Z,2019-08-23T14:48:16Z,MERGED,True,2,29,2,https://github.com/aaclause,tables/en-ueb-g1.ctb: comment 'repeated _ 46-36',3,['tables'],https://github.com/liblouis/liblouis/pull/792,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/792,Fixes #777,Fixes #777,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,792,2019-07-13T07:07:42Z,2019-08-23T14:48:16Z,2019-08-23T14:48:16Z,MERGED,True,2,29,2,https://github.com/aaclause,tables/en-ueb-g1.ctb: comment 'repeated _ 46-36',3,['tables'],https://github.com/liblouis/liblouis/pull/792,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/792#issuecomment-511550324,Fixes #777,"When I see this, I of course wonder why all the lines were commented out except the repeated _ 46-36 one. Also, I think it's better to remove all the lines instead of commenting out.

Completely agree.
git blame reveals the commit 8265508 for these changes. The author seems to be @egli. :)
Excerpt from git blame tables/en-ueb-g1.ctb:
8265508cc (Christian Egli 2016-03-18 12:09:39 +0100 270) #repeated .... 0
8265508cc (Christian Egli 2016-03-18 12:09:39 +0100 271) repeated _ 46-36
8265508cc (Christian Egli 2016-03-18 12:09:39 +0100 272) #repeated ---- 36

Excerpt from git diff:
-repeated .... 0
+#repeated .... 0
-repeated ____ 46-36
+repeated _ 46-36
-repeated ---- 36
+#repeated ---- 36

Also I found this topic on the mailing list
https://www.freelists.org/post/liblouis-liblouisxml/FW-UEB-grade-2-with-repeated-underscores-as-one-or-two-cells-instead-of-full-cells

Was this change checked with the table author?

No, not for me. @josephsl and @MikeGray-APH your opinion is welcome. I'm not an expert of UEB.
In my opinion, repeated opcode only make sense
for the printed braille (on paper).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,792,2019-07-13T07:07:42Z,2019-08-23T14:48:16Z,2019-08-23T14:48:16Z,MERGED,True,2,29,2,https://github.com/aaclause,tables/en-ueb-g1.ctb: comment 'repeated _ 46-36',3,['tables'],https://github.com/liblouis/liblouis/pull/792,https://github.com/josephsl,3,https://github.com/liblouis/liblouis/pull/792#issuecomment-511552065,Fixes #777,"Hi, I haven’t contributed to Liblouis for a while due to NVDA work; I think mike may have a better idea as to how to proceed, since APH and others are in charge of UEWB set at the moment. Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,792,2019-07-13T07:07:42Z,2019-08-23T14:48:16Z,2019-08-23T14:48:16Z,MERGED,True,2,29,2,https://github.com/aaclause,tables/en-ueb-g1.ctb: comment 'repeated _ 46-36',3,['tables'],https://github.com/liblouis/liblouis/pull/792,https://github.com/aaclause,4,https://github.com/liblouis/liblouis/pull/792#issuecomment-511567364,Fixes #777,"and finally we need a YAML test.

I tried to add one that covers at least the original issue but feel free to add others.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,792,2019-07-13T07:07:42Z,2019-08-23T14:48:16Z,2019-08-23T14:48:16Z,MERGED,True,2,29,2,https://github.com/aaclause,tables/en-ueb-g1.ctb: comment 'repeated _ 46-36',3,['tables'],https://github.com/liblouis/liblouis/pull/792,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/792#issuecomment-511592561,Fixes #777,"Thanks @Andre9642. There appears to be a test about underscores in tests/braille-specs/en-ueb-michael-robin.yaml. It is marked as xfail but it does not pass after your change, which either means we haven't fixed it properly, or the test is wrong.
# https://www.freelists.org/post/liblouis-liblouisxml/FW-UEB-grade-2-with-repeated-underscores-as-one-or-two-cells-instead-of-full-cells

- - '_ __ ___'
  - '_ _.- _.-_'
  - {xfail: multiple ""_"" becomes single ""_""}
@egli Commit 8265508 doesn't say why it was done. Any idea?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,792,2019-07-13T07:07:42Z,2019-08-23T14:48:16Z,2019-08-23T14:48:16Z,MERGED,True,2,29,2,https://github.com/aaclause,tables/en-ueb-g1.ctb: comment 'repeated _ 46-36',3,['tables'],https://github.com/liblouis/liblouis/pull/792,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/792#issuecomment-511691743,Fixes #777,"@bertfrees hm, no idea what this commit was about. Looks like it was around 3.0-alpha. Must have been a patch from @MikeGray-APH that I committed verbatim.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/Ronan555,1,https://github.com/liblouis/liblouis/pull/793,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/793#issuecomment-511994648,,"Hi Ronan. Had a cursory look and in general it looks pretty good, but a few questions came up:

Why did the grade 1 test have to go?
The grade 1 table seems to be largely copied from the UEB table. I'm not so fond of that because this way all the mistakes, shortcoming and unneeded stuff are copied as well. I prefer starting from a solid test file and then working towords making that test pass. The way it is now it's not very clear what the differences are with UEB. Would it be possible to include the UEB table and then add missing rules and/or override certain UEB rules? Also, could a part of the UEB test be applied on the Irish table maybe? Or does that make no sense?
You moved the metadata from ga.tbl to ga-g2.ctb. This is fine, but it's better to remove ga.tbl altogether.

Finally, a small summary of the changes in the NEWS file would be nice.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/Ronan555,3,https://github.com/liblouis/liblouis/pull/793#issuecomment-512930264,,"Hi Bert,

Thanks for this.

I originally tried to include the UEB grade 1 tables in ga-g1.utb  and
I almost got it to work.

I ran into trouble in one place. This is with the Irish á symbol.

This uses the same Braille contraction as the word ""and"" in English.

uplow \x00c1\x00e1 12346 Áá



This worked okay for forward translation. However, for backtranslation
with ASCII Braille, I ran into difficulties. It was taking the & sign
in the Braille file to be a punctuation symbol. I couldn't seem to
resolve this issue when using the include statement.

I will give it another try though and if I can't get it to work, I
will post to this list.

The ga.tbl table was in Liblouis before I myself and the INBAF team
got involved. It was originally based on a previous version of Irish
Braille as documented on Wikipedia. We would be happy to delete it but
we weren't the original authors.

I am in the process of re-creating the g1 test harness. Sorry for
deleting this without a replacement. I will have the replacement
shortly.

I will update the error in ga-g2.ctb and commence working on the UEB
include statements.
Regards,
Ronan
…
On 16/07/2019, Bert Frees ***@***.***> wrote:
 Hi Ronan. Had a cursory look and in general looks pretty good, but a few
 questions came up:

 - Why did the grade 1 test have to go?
 - The grade 1 table seems to be largely copied from the UEB table. I'm not
 so fond of that because this way all the mistakes, shortcoming and unneeded
 stuff are copied as well. I prefer starting from a solid test file and then
 working towords making that test pass. The way it is now it's not very clear
 what the differences are with UEB. Would it be possible to `include` the UEB
 table and then to add missing rules and/or override certain UEB rules? Also,
 could a part of the UEB test be applied on the Irish table maybe? Or does
 that make no sense?
 - You moved the metadata from ga.tbl to ga-g2.ctb. This is fine, but it's
 better to remove ga.tbl altogether.

 Finally, a small summary of the changes in the NEWS file would be nice.

 --
 You are receiving this because you authored the thread.
 Reply to this email directly or view it on GitHub:
 #793 (comment)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/Ronan555,4,https://github.com/liblouis/liblouis/pull/793#issuecomment-513905414,,"Hi Bert and all,

I am trying to inherit the UEB grade 1 rules and override these with
changes for Irish grade 1.

For example, the accented vowels á é í ó and ú have different Braille
characters in Irish.

When I enter
uplow \x00c1\x00e1 12346 Áá

followed by
include en-ueb-g1.ctb

this only partially works. The lowercase á comes out correct in
forward translation but the uppercase Á doesn't work.

Should it be possible to put in an override uplow statement like this
or is there some other solution that will allow the inclusion of
existing tables and the changing of certain rules for Irish letters?

Any suggestions greatly appreciated!


Incidentally I have got it to work by expanding all the include
statements in UEB grade 1 and then by changing the uplow statements
that refer to the letters in question. It would be preferrable though,
if this could be done with an override.

Thanks,
Ronan",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/793#issuecomment-513940927,,"It should be possible to do with overrides, although it can be a bit tricky. There are some known bugs regarding precedence rules. See for instance #384.
If you push your work in progress, and the tests are complete and accurate, I can help you fix the table. It may require some trial and error.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/Ronan555,6,https://github.com/liblouis/liblouis/pull/793#issuecomment-514349720,,"Hi Bert,
Thanks for that. I have pushed the attached table to origin.  This
table attempts to inherit UEB Grade 1 and override some characters. I
can't seem to get it to work for upper case accented vowels ÁÉÍÓÚ

Let me know what you think.

Many thanks,
Ronan",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/Ronan555,7,https://github.com/liblouis/liblouis/pull/793#issuecomment-517431775,,"Hi Bert and all,
I am working on a test harness file for Irish Grade 1  Braille (ga.g1.utb).
Have you had a chance to look at the draft Irish Grade 1 Braille
ga-g1.utb table that I pushed on 23 July?
As discussed, this attempts to override the UEB Grade 1 tables with
code to support Irish, but is not currently working correctly.
I agree that overriding is the best approach if it can be got to
operate correctly. Do you think it will be possible to get these
overrides to work?
Alternatively, do you think I would be better reverting to the version
that I previously put on a pull request?  This previous version
expanded the UEB tables out in full and then overwrote individual
lines where changes are needed. It seemed to be working correctly.
Many thanks,
Ronan
…
On 22/07/2019, Ronan McGuirk ***@***.***> wrote:
 Hi Bert and all,

 I am trying to inherit the UEB grade 1 rules and override these with
 changes for Irish grade 1.

 For example, the accented vowels á é í ó and ú have different Braille
 characters in Irish.

 When I enter
 uplow \x00c1\x00e1 12346 Áá

 followed by
 include en-ueb-g1.ctb

 this only partially works. The lowercase á comes out correct in
 forward translation but the uppercase Á doesn't work.

 Should it be possible to put in an override uplow statement like this
 or is there some other solution that will allow the inclusion of
 existing tables and the changing of certain rules for Irish letters?

 Any suggestions greatly appreciated!


 Incidentally I have got it to work by expanding all the include
 statements in UEB grade 1 and then by changing the uplow statements
 that refer to the letters in question. It would be preferrable though,
 if this could be done with an override.

 Thanks,
 Ronan


 On 16/07/2019, Bert Frees ***@***.***> wrote:
> Hi Ronan. Had a cursory look and in general looks pretty good, but a few
> questions came up:
>
> - Why did the grade 1 test have to go?
> - The grade 1 table seems to be largely copied from the UEB table. I'm
> not
> so fond of that because this way all the mistakes, shortcoming and
> unneeded
> stuff are copied as well. I prefer starting from a solid test file and
> then
> working towords making that test pass. The way it is now it's not very
> clear
> what the differences are with UEB. Would it be possible to `include` the
> UEB
> table and then to add missing rules and/or override certain UEB rules?
> Also,
> could a part of the UEB test be applied on the Irish table maybe? Or does
> that make no sense?
> - You moved the metadata from ga.tbl to ga-g2.ctb. This is fine, but it's
> better to remove ga.tbl altogether.
>
> Finally, a small summary of the changes in the NEWS file would be nice.
>
> --
> You are receiving this because you authored the thread.
> Reply to this email directly or view it on GitHub:
> #793 (comment)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/793#issuecomment-517644255,,"Hello Ronan. I'm very sorry, I haven't had the change to look at the draft table yet. There have been a lot of PRs lately and Christian is on vacation.
I'm sure I will get the overrides to work, I just need to find the time to pick up this PR again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/793#issuecomment-517935585,,"Hi Ronan.
I have pushed a commit that fixes the issue with the uppercase letters ÁÉÍÓÚ.
The test now has 7 remaining failures:

There are 5 cases where there is an unexpected letsign in the output before a single letter that is followed by an apostrophe: D'ith, m'Uncail, etc.
There is one case where there is an unexpected letsign in the output before a single letter that is followed by a hyphen: t-asal
There is one back-translation failure: ""⠁⠝⠀⠞⠒⠁⠎⠁⠇"" translates to ""t:asal"" instead of ""t-asal""

Earlier you said:

I ran into trouble in one place. This is with the Irish á symbol. This uses the same Braille contraction as the word ""and"" in English.
uplow \x00c1\x00e1 12346 Áá

This worked okay for forward translation. However, for backtranslation with ASCII Braille, I ran into difficulties. It was taking the & sign in the Braille file to be a punctuation symbol.

Does this work now and is there are test case for this?
Regarding the ga.tbl table, you said:

The ga.tbl table was in Liblouis before I myself and the INBAF team got involved. It was originally based on a previous version of Irish Braille as documented on Wikipedia. We would be happy to delete it but we weren't the original authors.

However ga.tbl just includes ga-g2.ctb, which you reworked completely in this PR, so the ga.tbl has nothing to do with the original table anymore.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/Ronan555,10,https://github.com/liblouis/liblouis/pull/793#issuecomment-520065747,,"Hi Bert,
Thanks for all your help.

I have updated the ga-g1.utb table and it now seems to be working
correctly for forward and back translation in both UNICODE and ASCII.
I have pushed the revised tables and two yaml test  harness files.
These seem to be working for me on Windows 10.

I haven't been able to re-test The back translation problem with the á
symbol on an Android brailler yet, but I am hopeful that it should
work now because the ASCII YAML back translation test harness is
working. I needed to put Display statements in as overrides for the &
sign etc.

I am happy to delete ga.tbl since we are not using it.

Please let me know what further steps I need to make in order to
implement these changes.

Many thanks,
Ronan",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/793#issuecomment-520525644,,"Hi Ronan,
Looks good! Just a few more comments:


It would be nice to have a regression test for the grade 1 table again. You said before that you were working on a new one. It would also be OK to just put the original one back.


Why did you create a second version of the grade 2 test without the Unicode display table? I would prefer to have no duplication. Is the second version needed to test the table's own display behavior?


I noticed you added a bunch of display rules to the table. I know there are other tables that do this, but I would rather have display tables completely separated from translation tables. Do you think you could maybe use an existing .dis table, or create a new one for Irish if no other tables are suitable?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/Ronan555,12,https://github.com/liblouis/liblouis/pull/793#issuecomment-521007743,,"Hi Bert,
Thanks for that.
I had created the second version of the test without the UNICODE
display table because the tables seemed to be working okay in NVDA and
passed the UNICODE tests correctly. However, I had problems previously
on a Polaris Brailler with back translation. Through a process of
elimination it seemed that this uses ASCII Braille and I used the
ASCII YAML tests to understand what was happening. This showed that
there were problems with the ASCII display of certain characters. This
is the reason I included the Display rules.
I have now updated the tables to remove the display rules and use an
include statement.
I have pushed a Grade 1 YAML test file.
I take your point about yaml test duplication. What do you suggest
should be done in order to ensure that the ASCII Braille forward and
back translation continues to be correct?

Many thanks and I hope we are closer to being implementable...
Ronan",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/793#issuecomment-521199647,,"I have now updated the tables to remove the display rules and use an
include statement.

Perfect.

I have pushed a Grade 1 YAML test file.

Thanks!

What do you suggest should be done in order to ensure that the ASCII Braille forward and back translation continues to be correct?

What I'll do is I'll make a separate YAML file for testing the ""display"" behavior of the ga-g1.utb (and text_nabcc.dis) table. And then I'll merge the ga-g2_harness.yaml and ga-g2_Asciiharness.yaml files back into one. Since the ga-g1_harness.yaml file you added also uses Unicode, I presume this is what you prefer? So I'll merge ga-g2_Asciiharness.yaml into ga-g2_harness.yaml and not the other way around? Or is the ASCII version easier to use?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/793#issuecomment-521205574,,Blocked on #816 (#789) and #798.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/Ronan555,15,https://github.com/liblouis/liblouis/pull/793#issuecomment-521304528,,"Hi Burt,
Many thanks.
I prefer Unicode braille  because I use NVDA and I find it easier to follow the Braille patterns with Unicode braille . Please let me know if I should make any further changes.
Many thanks again,
Ronan",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/793#issuecomment-521305708,,"Hi Ronan. No, nothing you need to do. I take it from here. Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/793#issuecomment-523454824,,"@Ronan555 I have one more question. In ga-g1.utb there are the following lines:
# TODO: Please add a reference to official documentation about
# the implemented braille code. Preferably submit the documents
# to https://github.com/liblouis/braille-specs.

I would like this TODO to be fixed. We have some documentation on Irish braille at http://liblouis.org/braille-specs/irish, but they don't mention UEB so I suspect these are out of date.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/793#issuecomment-524073124,,OK this branch is almost finished. We just need to rebase it onto #827 to get the tests working.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,19,https://github.com/liblouis/liblouis/pull/793#issuecomment-525390588,,I removed the commits that depend on #827 so we can go ahead and merge this.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,793,2019-07-16T20:17:06Z,2019-08-28T07:25:58Z,2019-08-28T07:25:58Z,MERGED,True,351,433,9,https://github.com/Ronan555,Irish may2019,15,['tables'],https://github.com/liblouis/liblouis/pull/793,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/793#issuecomment-525392198,,And rebased onto master.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/794,Fix the accents and some other things within gr-bb.ctb,Fix the accents and some other things within gr-bb.ctb,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/794#issuecomment-513460929,Fix the accents and some other things within gr-bb.ctb,"Hi Dave. Thanks for this.
I didn't want to bother you with it beforehand because I thought you knew the drill, but: some regression tests would be nice. Just a list of all the letters is probably enough, although some examples that show why we need the Latin letter definitions would be nice too maybe.
I wonder why capsletter is 6 but the Greek uppercase letters are all defined as letter with the cap sign (46) integrated. Wouldn't it make more sense to make capsletter 46, like is done in el.ctb? And why are the Latin letters even needed?
Finally, I was wondering what explains the big differences between ancient and modern Greek braille, and why a different braille code is needed. Wikipedia says that there are two Greek braille codes: ""Modern Greek Braille"" used in Greece, and ""International Greek Braille"" for Greek letters or words used in mathematics or otherwise embedded in English and other languages. But it doesn't mention a braille code specially for ancient Greek. Do you know more about this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,3,https://github.com/liblouis/liblouis/pull/794#issuecomment-513461899,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/20 at 04:48 -0700]
I didn't want to bother you with it beforehand because I thought you knew the
drill, but: some regression tests would be nice. Just a list of all the
letters is probably enough, although some examples that show why we need the
Latin letter definitions would be nice too maybe.
Yes, I'll get to it. I just wanted to get the changes in right away. I'm now
working on a few outstanding fixes to el.ctb. After they're done, I'll have a
look at adding test cases.
I wonder why `capsletter` is `6` but the Greek uppercase letters are all
defined as `letter` with the cap sign (46) integrated. Wouldn't it make more
sense to make `capsletter 46`, like is done in el.ctb? And why are the Latin
letters even needed?
I don't know and just left that part of the table as it was. Now that the Greek
part of it is fixed, I'll look into some of these other questions. My main
goal, at this point, was not wanting to break it for uses that I'm unaware of.
Finally, I was wondering what explains the big differences between ancient and
modern Greek braille, and why a different braille code is needed.
el.ctb actually works much better for ancient Greek. The difference between the
two tables, in my opinion, has much more to do with the typical arrogance of
those whose native language is English. :-) The real difference between the two
tables is that el.ctb is for real Greek people and that gr-bb.ctb was developed
by english-speaking researchers who wanted to be able to read Greek but who
didn't bother to check with Greece first.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/794#issuecomment-513470546,Fix the accents and some other things within gr-bb.ctb,"I wonder why capsletter is 6 but the Greek uppercase letters are all defined as letter with the cap sign (46) integrated. Wouldn't it make more sense to make capsletter 46, like is done in el.ctb? And why are the Latin letters even needed?

I don't know and just left that part of the table as it was. Now that the Greek part of it is fixed, I'll look into some of these other questions. My main goal, at this point, was not wanting to break it for uses that I'm unaware of.

OK. At some point I think a refactoring would be appropriate. It seems the starting point of this table was an English table which would explain why the Greek letter are ""secondary"". We shouldn't be too afraid to break things anyway, but with some added tests I think we're pretty safe.


Finally, I was wondering what explains the big differences between ancient and modern Greek braille, and why a different braille code is needed.

el.ctb actually works much better for ancient Greek. The difference between the two tables, in my opinion, has much more to do with the typical arrogance of those whose native language is English. :-) The real difference between the two tables is that el.ctb is for real Greek people and that gr-bb.ctb was developed by english-speaking researchers who wanted to be able to read Greek but who didn't bother to check with Greece first.

OK. So in that case, ""international Greek"" is actually a better description of the table than ""ancient Greek"" or ""biblical Greek""?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,5,https://github.com/liblouis/liblouis/pull/794#issuecomment-513476509,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/20 at 07:07 -0700]
At some point I think a refactoring would be appropriate. It seems the
starting point of this table was an English table which would explain why the
Greek letter are ""secondary"".
I think that's exactly right. I just want to solve one problem at a time - the
most important of which was the extreme difficulty to actually read Greek with
it because the accents were messed up. :-) Another thing that needs to be done
is to ensure that back translating actually ends up typing Greek characters
(not English ones).
We shouldn't be too afraid to break things anyway, but with some added tests I
think we're pretty safe.
Yes. Don't worry - I'll get to the tests. My priority, right now, is not
wanting to prolong my need for Maria's time.
OK. So in that case, ""international Greek"" is actually a better description of
the table than ""ancient Greek"" or ""biblical Greek""?
Yes, except that that might still encourage its use. I've already been trying
to think of a good name that means something like ""englishified"" without being
too rude. :-) I've considered el-us, as everyone is used to that country going
its own way on such things, but that wouldn't be accurate since UK people have
been involved as well.

As part of this, I'm wondering if you'd be willing to rename gr-bb to whatever
we decide is a better name. It really should be el-something as el is the
language code - GR is the territory code.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/794#issuecomment-513484247,Fix the accents and some other things within gr-bb.ctb,"Sure, we can rename the file if we find a more suitable name, but actually  don't really care about the file name. I would like the table metadata to be correct though. Currently the ""display-name"" field says ""Ancient Greek braille"" and ""locale"" says ""grc"". Possibly it can stay ""grc"" if the main or only application of this braille code is for historical texts. But the display name should be a bit more specific. I've also been thinking for a while about a new metadata field to specify on which language community or region a braille code applies (English in this case), which is not necessarily the same as the primary target language of the table (Greek in this case), which is what the ""locale"" field is for. In some cases this information can be encoded within the locale field, more specifically in the region subtag. For example, the Liblouis table for transcribing Dutch texts and that is used in Belgium (Dutch is spoken in the Netherlands and Belgium) is tagged ""nl-BE"". However we can not use this trick for the ""grc-en"" (""el-en"") case because that's not a valid language tag. And ""grc-US"" (""el-US"") is a not accurate enough. A new field would solve the issue.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,7,https://github.com/liblouis/liblouis/pull/794#issuecomment-513493598,Fix the accents and some other things within gr-bb.ctb,I've added a paragraph based on what Maria wrote that describes what the table really is. I've also modified the comment on the first line. Let me know if you'd like it to be more informative. No change to the display-name yet.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/794#issuecomment-513496258,Fix the accents and some other things within gr-bb.ctb,Thanks. Maybe the name of the friend of Maria from Oxford should be mentioned? Also Maria's name and your name should be in the copyright lines.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,9,https://github.com/liblouis/liblouis/pull/794#issuecomment-513496490,Fix the accents and some other things within gr-bb.ctb,"Can the system handle Maria's name being written in Greek (as in her email
header), or should it be written using Latin letters?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/794#issuecomment-513496759,Fix the accents and some other things within gr-bb.ctb,Yes you can use any characters. There are also Chinese names in some tables.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,11,https://github.com/liblouis/liblouis/pull/794#issuecomment-513598951,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/21 at 16:00 -0700]
What's important I think is the fact that the table used by non-Greek
speaking.
to me, that's a tough one as I don't think we want to be encouraging non-Greek
people to be using it at all. One of it's ""advantages"" is that each accent is a
separate character and that there are no diphthong contractions. It's too bad
that some of the letters are represented differently, but we could say
something like:

   simplified international Greek

And then, if we do that, what about maybe calling the table el-simlified.ctb?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/794#issuecomment-513715815,Fix the accents and some other things within gr-bb.ctb,"but we could say something like ""simplified international Greek"".

Sounds good. But I wonder if we also need to indicate that it is for English speaking or whether this doesn't matter.

what about maybe calling the table el-simplified.ctb?

OK.
But use the "".utb"" extension because it's not contracted. Or you can use the new "".tbl"" extension because that is how we are eventually gonna name all the tables anyway (when all the metadata is correct and we have found a good naming scheme).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,13,https://github.com/liblouis/liblouis/pull/794#issuecomment-513735173,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/22 at 02:30 -0700]
I wonder if we also need to indicate that it is for English speaking or
whether this doesn't matter.
For the display-name, should the language be first, as it's more important? If
so, What'd your convention be for adding the modifiers?

   Greek - simplified international
   Greek, simplified international
   Greek (siplified international)
   ...
Note that I've used the "".utb"" extension because it's not contracted. Or you
can use the new "".tbl"" extension because that is how we are eventually gonna
name all the tables anyway (when all the metadata is correct and we have found
a good naming scheme).
I think I'll go with .utb for now. I think I'll also split the Greek part out
into el-simplified.uti so that, if anyone should ever want to, it'll be easy to
include elsewhere.

If we want to put English in the name, would el-simplified-en.utb be okay?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/794#issuecomment-513764440,Fix the accents and some other things within gr-bb.ctb,"File name doesn't matter that much to me, but it should probably reflect what we put in the metadata. The metadata should either get a #+system field which is an identifier of the braille system, or/and if appropriate, the new field that I suggested to indicate the target audience.
By the way I would keep the #+locale: grc. If we limit it to grc we discourage the use of this table more.
There is not really a convention for adding modifiers at the moment. There is an overview of all the display names in extra/generate-display-names/display-names. You can see that there are a few occasions where something is added in brackets. The language is always first, except in the case of ""Two-cell Chinese braille"". Maybe this could be changed to ""Chinese braille (two-cell)"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,15,https://github.com/liblouis/liblouis/pull/794#issuecomment-513812927,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/22 at 05:08 -0700]
The metadata should either get a `#+system` field which is an identifier of
the braille system,
Isn't that what #+name already is?

I wish this braille code had a name, but, as far as I know, it doesn't.
or/and if appropriate, the new field that I suggested to indicate the target
audience.
Are there other tables which could use such a property? What are some examples?
By the way I would keep the `#+locale: grc`.
Yes, since Greek is its purpose anyway. Why grc instead of el, though?

I wonder if there's an ISO country code for ""any country"", ""international"", or
some such thing.
If we limit it to grc we discourage the use of this table more.
Do you think it's a bad idea, then, for me to split the Greek part out into a
.uti file?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/794#issuecomment-513841901,Fix the accents and some other things within gr-bb.ctb,"The metadata should either get a #+system field which is an identifier of the braille system,

Isn't that what #+name already is?
I wish this braille code had a name, but, as far as I know, it doesn't.

In this case, it's maybe not an official system, but we can still give it our own name, like e.g. grc-international. By the way, I just had a look at the ""World Braille Usage, third edition"" document and it has a chapter for ""Greek (international)"" on page 185.
#+name is kind of the same, yes, but it is a description in words rather than a computer readable identifier (and it can also contain more information then just the braille system; one system can have several variants and grades).

Are there other tables which could use such a property? What are some examples?

Not at the moment, except the example I gave earlier with Dutch in Belgium vs. The Netherlands. We haven't really got different braille systems, but some small differences exist anyway (actually, handling of Greek is one of those differences), and although efforts are being done to create a common standard, we currently still have two Liblouis tables. As I said before this difference can be encoded within the #+locale field (nl-BE vs. nl-NL), but if a separate field would exist for the target audience, #+locale would become nl for both (and I would probably rename the field to #+language), and the new field would become nl-BE vs. nl-NL. I guess BANA vs. BAUK is another example.


By the way I would keep the #+locale: grc.

Yes, since Greek is its purpose anyway. Why grc instead of el, though?

Exactly to limit the scope. grc means classical greek: https://iso639-3.sil.org/code/grc.

I wonder if there's an ISO country code for ""any country"", ""international"", or some such thing.

Don't think there is such a thing.

Do you think it's a bad idea, then, for me to split the Greek part out into a .uti file?

I still like the idea. At least it won't hurt. And it could be useful for removing duplication between tables. Exactly which tables could make use of it I don't know. Maybe we should first investigate what various tables have in common. I know many languages use a ""alphabet switch indicator"" which complicates things because Liblouis can't handle that very well. This will be improved when #702 is implemented.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,17,https://github.com/liblouis/liblouis/pull/794#issuecomment-513861260,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/22 at 08:30 -0700]
 In this case, it's maybe not an official system, but we can still give it our own name, like e.g. `grc-international`.
That's what I just renamed the table to (grc-international.utb). Should I add a #+name too?

The display-name is now ""Greek international braille"".
 By the way, I just had a look at the ""[World Braille Usage, third edition](http://liblouis.org/braille-specs/world-braille-usage-third-edition.pdf)"" document and it has a chapter for ""Greek (international)"" on page 185.
Yes, that's the right code, so I guess we now know its name. It raises a question, however. It has two schemes for the accented letters. One prefixes a letter with a dot combination representing the accent. The other uses a set of single braille characters - one for each accent+letter combination. If we define both then we'd need two names - not just one.
> Do you think it's a bad idea, then, for me to split the Greek part out into a .uti file?

 I still like the idea. At least it won't hurt. And it could be useful for removing duplication between tables. Exactly which tables could make use of it I don't know.
I figured that it'd just make it easy for whoever to include it on top of his/her primary language table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/794#issuecomment-513886784,Fix the accents and some other things within gr-bb.ctb,"That's what I just renamed the table to (grc-international.utb). Should I add a #+name too?

Sure.
Regarding the different schemes for accents: hmm yeah, it seems it depends on the country. Since the table you're currently working on is the English version, probably only one accent scheme is required. But if you decide to split off the Greek letters into a ""uti"" version, maybe it makes sense two make two versions of it, yes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,19,https://github.com/liblouis/liblouis/pull/794#issuecomment-513900146,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/22 at 10:51 -0700]
Regarding the different schemes for accents: hmm yeah, it seems it depends on the country.
Did I miss something in the document? Does it actually say that one scheme is meant for some languages and the other scheme for other languages?
But if you decide to split off the Greek letters into a ""uti"" version, maybe it makes sense two make two versions of it, yes.
But how to name them? Do you see anything in the document that gives each scheme some kind of a different name?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/794#issuecomment-513916240,Fix the accents and some other things within gr-bb.ctb,"Yes, the document says:

The single accented letters may be used in some countries, while others use 2-cell characters.

To come up with a concise name for these is a difficult one. Maybe ""one-cell-accents"" vs. ""two-cell-accents"". Or ""accents-composed"" vs. ""accents-decomposed"". Don't know.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,21,https://github.com/liblouis/liblouis/pull/794#issuecomment-513946228,Fix the accents and some other things within gr-bb.ctb,"Maybe I'm not supposed to be able to do this, but I'm trying to apply my grc-*
test cases to just the subtable(s). I've removed the locale and assert lines,
and pointed table to the correct file. It seems to work except that the
received lines seem to be containing extra blanks so the test cases fail. How
can I fix that?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/794#issuecomment-513981481,Fix the accents and some other things within gr-bb.ctb,Can't say without trying it myself. If you push what you have done I'll fix it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,23,https://github.com/liblouis/liblouis/pull/794#issuecomment-513982731,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/22 at 15:38 -0700]

Hi:
Can't say without trying it myself. If you push what you have done I'll fix it.
The attached grc-international.yaml shows what I'm trying to do. For me, it
says 57 tests with 55 failures, so only the ones with no blanks are passing.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |

# Copyright © 2019 by Dave Mielke <dave@mielke.cc>
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved. This file is offered as-is,
# without any warranty.

display: unicode-without-blank.dis
table: grc-international-decomposed.uti
flags: {testmode: forward}
tests:

- # lowercase letters
  - αβγδεζηθικλμνξοπρστυφχψως
  - ⠁⠃⠛⠙⠑⠵⠱⠹⠊⠅⠇⠍⠝⠭⠕⠏⠗⠎⠞⠥⠋⠯⠽⠺⠎

- # uppercase letters
  - ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ
  - ⠨⠁⠨⠃⠨⠛⠨⠙⠨⠑⠨⠵⠨⠱⠨⠹⠨⠊⠨⠅⠨⠇⠨⠍⠨⠝⠨⠭⠨⠕⠨⠏⠨⠗⠨⠎⠨⠞⠨⠥⠨⠋⠨⠯⠨⠽⠨⠺

- # accents
  - ᾿ ῾ ΄ ` ´ ῀
  - ⠴ ⠓ ⠈ ⠠ ⠈ ⠐

- # lowercase letters with dasia
  - ἁ ἑ ἡ ἱ ὁ ὑ ὡ ῥ
  - ⠓⠁ ⠓⠑ ⠓⠱ ⠓⠊ ⠓⠕ ⠓⠥ ⠓⠺ ⠗⠓

- # lowercase letters with dasia and oxia
  - ἅ ἕ ἥ ἵ ὅ ὕ ὥ
  - ⠓⠈⠁ ⠓⠈⠑ ⠓⠈⠱ ⠓⠈⠊ ⠓⠈⠕ ⠓⠈⠥ ⠓⠈⠺

- # lowercase letters with dasia and oxia and ypogegrammeni
  - ᾅ ᾕ ᾥ
  - ⠓⠈⠁⠔ ⠓⠈⠱⠔ ⠓⠈⠺⠔

- # lowercase letters with dasia and perispomeni
  - ἇ ἧ ἷ ὗ ὧ
  - ⠓⠐⠁ ⠓⠐⠱ ⠓⠐⠊ ⠓⠐⠥ ⠓⠐⠺

- # lowercase letters with dasia and perispomeni and ypogegrammeni
  - ᾇ ᾗ ᾧ
  - ⠓⠐⠁⠔ ⠓⠐⠱⠔ ⠓⠐⠺⠔

- # lowercase letters with dasia and varia
  - ἃ ἓ ἣ ἳ ὃ ὓ ὣ
  - ⠓⠠⠁ ⠓⠠⠑ ⠓⠠⠱ ⠓⠠⠊ ⠓⠠⠕ ⠓⠠⠥ ⠓⠠⠺

- # lowercase letters with dasia and varia and ypogegrammeni
  - ᾃ ᾓ ᾣ
  - ⠓⠠⠁⠔ ⠓⠠⠱⠔ ⠓⠠⠺⠔

- # lowercase letters with dasia and ypogegrammeni
  - ᾁ ᾑ ᾡ
  - ⠓⠁⠔ ⠓⠱⠔ ⠓⠺⠔

- # lowercase letters with dialytika
  - ϊ ϋ
  - ⠊ ⠥

- # lowercase letters with dialytika and oxia
  - ΐ ΰ
  - ⠈⠊ ⠈⠥

- # lowercase letters with dialytika and perispomeni
  - ῗ ῧ
  - ⠐⠊ ⠐⠥

- # lowercase letters with dialytika and tonos
  - ΐ ΰ
  - ⠈⠊ ⠈⠥

- # lowercase letters with dialytika and varia
  - ῒ ῢ
  - ⠠⠊ ⠠⠥

- # lowercase letters with macron
  - ᾱ ῑ ῡ
  - ⠁ ⠊ ⠥

- # lowercase letters with oxia
  - ά έ ή ί ό ύ ώ
  - ⠈⠁ ⠈⠑ ⠈⠱ ⠈⠊ ⠈⠕ ⠈⠥ ⠈⠺

- # lowercase letters with oxia and ypogegrammeni
  - ᾴ ῄ ῴ
  - ⠈⠁⠔ ⠈⠱⠔ ⠈⠺⠔

- # lowercase letters with perispomeni
  - ᾶ ῆ ῖ ῦ ῶ
  - ⠐⠁ ⠐⠱ ⠐⠊ ⠐⠥ ⠐⠺

- # lowercase letters with perispomeni and ypogegrammeni
  - ᾷ ῇ ῷ
  - ⠐⠁⠔ ⠐⠱⠔ ⠐⠺⠔

- # lowercase letters with psili
  - ἀ ἐ ἠ ἰ ὀ ὐ ὠ ῤ
  - ⠴⠁ ⠴⠑ ⠴⠱ ⠴⠊ ⠴⠕ ⠴⠥ ⠴⠺ ⠴⠗

- # lowercase letters with psili and oxia
  - ἄ ἔ ἤ ἴ ὄ ὔ ὤ
  - ⠴⠈⠁ ⠴⠈⠑ ⠴⠈⠱ ⠴⠈⠊ ⠴⠈⠕ ⠴⠈⠥ ⠴⠈⠺

- # lowercase letters with psili and oxia and ypogegrammeni
  - ᾄ ᾔ ᾤ
  - ⠴⠈⠁⠔ ⠴⠈⠱⠔ ⠴⠈⠺⠔

- # lowercase letters with psili and perispomeni
  - ἆ ἦ ἶ ὖ ὦ
  - ⠴⠐⠁ ⠴⠐⠱ ⠴⠐⠊ ⠴⠐⠥ ⠴⠐⠺

- # lowercase letters with psili and perispomeni and ypogegrammeni
  - ᾆ ᾖ ᾦ
  - ⠴⠐⠁⠔ ⠴⠐⠱⠔ ⠴⠐⠺⠔

- # lowercase letters with psili and varia
  - ἂ ἒ ἢ ἲ ὂ ὒ ὢ
  - ⠴⠠⠁ ⠴⠠⠑ ⠴⠠⠱ ⠴⠠⠊ ⠴⠠⠕ ⠴⠠⠥ ⠴⠠⠺

- # lowercase letters with psili and varia and ypogegrammeni
  - ᾂ ᾒ ᾢ
  - ⠴⠠⠁⠔ ⠴⠠⠱⠔ ⠴⠠⠺⠔

- # lowercase letters with psili and ypogegrammeni
  - ᾀ ᾐ ᾠ
  - ⠴⠁⠔ ⠴⠱⠔ ⠴⠺⠔

- # lowercase letters with tonos
  - ά έ ή ί ό ύ ώ
  - ⠈⠁ ⠈⠑ ⠈⠱ ⠈⠊ ⠈⠕ ⠈⠥ ⠈⠺

- # lowercase letters with varia
  - ὰ ὲ ὴ ὶ ὸ ὺ ὼ
  - ⠠⠁ ⠠⠑ ⠠⠱ ⠠⠊ ⠠⠕ ⠠⠥ ⠠⠺

- # lowercase letters with varia and ypogegrammeni
  - ᾲ ῂ ῲ
  - ⠠⠁⠔ ⠠⠱⠔ ⠠⠺⠔

- # lowercase letters with vrachy
  - ᾰ ῐ ῠ
  - ⠁ ⠊ ⠥

- # lowercase letters with ypogegrammeni
  - ᾳ ῃ ῳ
  - ⠁⠔ ⠱⠔ ⠺⠔

- # uppercase letters with dasia
  - Ἁ Ἑ Ἡ Ἱ Ὁ Ὑ Ὡ Ῥ
  - ⠨⠓⠁ ⠨⠓⠑ ⠨⠓⠱ ⠨⠓⠊ ⠨⠓⠕ ⠨⠓⠥ ⠨⠓⠺ ⠨⠗⠓

- # uppercase letters with dasia and oxia
  - Ἅ Ἕ Ἥ Ἵ Ὅ Ὕ Ὥ
  - ⠨⠓⠈⠁ ⠨⠓⠈⠑ ⠨⠓⠈⠱ ⠨⠓⠈⠊ ⠨⠓⠈⠕ ⠨⠓⠈⠥ ⠨⠓⠈⠺

- # uppercase letters with dasia and oxia and prosgegrammeni
  - ᾍ ᾝ ᾭ
  - ⠨⠓⠈⠁⠔ ⠨⠓⠈⠱⠔ ⠨⠓⠈⠺⠔

- # uppercase letters with dasia and perispomeni
  - Ἇ Ἧ Ἷ Ὗ Ὧ
  - ⠨⠓⠐⠁ ⠨⠓⠐⠱ ⠨⠓⠐⠊ ⠨⠓⠐⠥ ⠨⠓⠐⠺

- # uppercase letters with dasia and perispomeni and prosgegrammeni
  - ᾏ ᾟ ᾯ
  - ⠨⠓⠐⠁⠔ ⠨⠓⠐⠱⠔ ⠨⠓⠐⠺⠔

- # uppercase letters with dasia and prosgegrammeni
  - ᾉ ᾙ ᾩ
  - ⠨⠓⠁⠔ ⠨⠓⠱⠔ ⠨⠓⠺⠔

- # uppercase letters with dasia and varia
  - Ἃ Ἓ Ἣ Ἳ Ὃ Ὓ Ὣ
  - ⠨⠓⠠⠁ ⠨⠓⠠⠑ ⠨⠓⠠⠱ ⠨⠓⠠⠊ ⠨⠓⠠⠕ ⠨⠓⠠⠥ ⠨⠓⠠⠺

- # uppercase letters with dasia and varia and prosgegrammeni
  - ᾋ ᾛ ᾫ
  - ⠨⠓⠠⠁⠔ ⠨⠓⠠⠱⠔ ⠨⠓⠠⠺⠔

- # uppercase letters with dialytika
  - Ϊ Ϋ
  - ⠨⠊ ⠨⠥

- # uppercase letters with macron
  - Ᾱ Ῑ Ῡ
  - ⠨⠁ ⠨⠊ ⠨⠥

- # uppercase letters with oxia
  - Ά Έ Ή Ί Ό Ύ Ώ
  - ⠨⠈⠁ ⠨⠈⠑ ⠨⠈⠱ ⠨⠈⠊ ⠨⠈⠕ ⠨⠈⠥ ⠨⠈⠺

- # uppercase letters with prosgegrammeni
  - ᾼ ῌ ῼ
  - ⠨⠁⠔ ⠨⠱⠔ ⠨⠺⠔

- # uppercase letters with psili
  - Ἀ Ἐ Ἠ Ἰ Ὀ Ὠ
  - ⠨⠴⠁ ⠨⠴⠑ ⠨⠴⠱ ⠨⠴⠊ ⠨⠴⠕ ⠨⠴⠺

- # uppercase letters with psili and oxia
  - Ἄ Ἔ Ἤ Ἴ Ὄ Ὤ
  - ⠨⠴⠈⠁ ⠨⠴⠈⠑ ⠨⠴⠈⠱ ⠨⠴⠈⠊ ⠨⠴⠈⠕ ⠨⠴⠈⠺

- # uppercase letters with psili and oxia and prosgegrammeni
  - ᾌ ᾜ ᾬ
  - ⠨⠴⠈⠁⠔ ⠨⠴⠈⠱⠔ ⠨⠴⠈⠺⠔

- # uppercase letters with psili and perispomeni
  - Ἆ Ἦ Ἶ Ὦ
  - ⠨⠴⠐⠁ ⠨⠴⠐⠱ ⠨⠴⠐⠊ ⠨⠴⠐⠺

- # uppercase letters with psili and perispomeni and prosgegrammeni
  - ᾎ ᾞ ᾮ
  - ⠨⠴⠐⠁⠔ ⠨⠴⠐⠱⠔ ⠨⠴⠐⠺⠔

- # uppercase letters with psili and prosgegrammeni
  - ᾈ ᾘ ᾨ
  - ⠨⠴⠁⠔ ⠨⠴⠱⠔ ⠨⠴⠺⠔

- # uppercase letters with psili and varia
  - Ἂ Ἒ Ἢ Ἲ Ὂ Ὢ
  - ⠨⠴⠠⠁ ⠨⠴⠠⠑ ⠨⠴⠠⠱ ⠨⠴⠠⠊ ⠨⠴⠠⠕ ⠨⠴⠠⠺

- # uppercase letters with psili and varia and prosgegrammeni
  - ᾊ ᾚ ᾪ
  - ⠨⠴⠠⠁⠔ ⠨⠴⠠⠱⠔ ⠨⠴⠠⠺⠔

- # uppercase letters with tonos
  - Ά Έ Ή Ί Ό Ύ Ώ
  - ⠨⠈⠁ ⠨⠈⠑ ⠨⠈⠱ ⠨⠈⠊ ⠨⠈⠕ ⠨⠈⠥ ⠨⠈⠺

- # uppercase letters with varia
  - Ὰ Ὲ Ὴ Ὶ Ὸ Ὺ Ὼ
  - ⠨⠠⠁ ⠨⠠⠑ ⠨⠠⠱ ⠨⠠⠊ ⠨⠠⠕ ⠨⠠⠥ ⠨⠠⠺

- # uppercase letters with vrachy
  - Ᾰ Ῐ Ῠ
  - ⠨⠁ ⠨⠊ ⠨⠥",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,24,https://github.com/liblouis/liblouis/pull/794#issuecomment-514148841,Fix the accents and some other things within gr-bb.ctb,"The following will fix the test:
table: {locale: grc}
table: spaces.uti,grc-international-decomposed.uti
I've added ""spaces.uti"", and I also kept the original table (the ""utb"" one) in the test because in the end that is what we are interested in so it should be tested as well. All the tests in the table are tested against all the tables that you defined at the beginning of the file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/DaveMielke,25,https://github.com/liblouis/liblouis/pull/794#issuecomment-514216480,Fix the accents and some other things within gr-bb.ctb,"[quoted lines by Bert Frees on 2019/07/23 at 03:17 -0700]
The following will fix the test:
Thanks. Now they do indeed work. This means that I can now start working on the
composed version.
I've added ""spaces.uti"", and I also kept the original table (the ""utb"" one) in
the test because in the end that is what we are interested in so it should be
tested as well. All the tests in the table are tested against all the tables
that you defined at the beginning of the file.
What's picking up the .utb? The {locale: grc}? I'm only getting one SUCCESS
line - not two. Is that how it works?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,26,https://github.com/liblouis/liblouis/pull/794#issuecomment-514221490,Fix the accents and some other things within gr-bb.ctb,"What's picking up the .utb? The {locale: grc}? I'm only getting one SUCCESS line - not two. Is that how it works?

Yes. That's just how it works.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,794,2019-07-19T18:31:15Z,2019-08-07T22:58:15Z,2019-08-07T22:58:15Z,MERGED,True,1355,510,14,https://github.com/DaveMielke,Fix the accents and some other things within gr-bb.ctb.,31,['tables'],https://github.com/liblouis/liblouis/pull/794,https://github.com/bertfrees,27,https://github.com/liblouis/liblouis/pull/794#issuecomment-514302826,Fix the accents and some other things within gr-bb.ctb,"what, from your perspective, still needs to be done (for both PRs)

Can't think of anything right now. Looks complete to me. I'm going to have a final look at it and add a few commits myself, like updating the NEWS file, the Makefiles and the display-names file, and maybe do some additions to the metadata and comments in the headers. Then I'll let you review my commits if you want and maybe let Christian have a look and then it's ready for the 3.11 release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/795,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.","Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/DaveMielke,2,https://github.com/liblouis/liblouis/pull/795#issuecomment-513612509,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.","[quoted lines by Bert Frees on 2019/07/21 at 15:47 -0700]
+#-name: ελληνικό σύστημα μπράιγ [Greek Braille System]

I would drop the ""[Greek Braille system]"".
Done.
It's better if there aren't two tables with the same metadata, so either
change the metadata in el.tbl or remove el.tbl and add the metadata to el.ctb.
el.tbl has been removed.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/795#issuecomment-518688430,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.",@egli We agreed that we were not going to mention *.tbl files in the NEWS. We never did. As far as the NEWS file is concerned these files don't exist. They're only relevant for people that use the discovery feature.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/795#issuecomment-518708006,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.","We agreed that we were not going to mention *.tbl files in the NEWS

I'm confused, I never said anything about the NEWS file. I'm talking about Makefile.am. Those files should be adapted.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/795#issuecomment-518708675,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.","Haha, no I was confused. Sorry.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/DaveMielke,6,https://github.com/liblouis/liblouis/pull/795#issuecomment-520870140,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.","The page for this PR says ""changes requested"", and that they must be dealt with
before it can be merged. What changes are they?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/795#issuecomment-520875647,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.",I think Christian wants the el.tbl line in tables/Makefile.am to be removed because the table was deleted. But you don't have to worry about that.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/DaveMielke,8,https://github.com/liblouis/liblouis/pull/795#issuecomment-520880603,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.","Hi:

Okay, that was easy. I hadn't done a make, since I was only updating tables and
tests, so I didn't notice the make failing. Fixed now. Better go do the same
thing in PR 808 for fi-fi.ctb.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,795,2019-07-20T19:13:08Z,2019-08-26T11:36:20Z,2019-08-26T11:42:33Z,MERGED,True,202,117,6,https://github.com/DaveMielke,Various fixes to el.ctb:,22,['tables'],https://github.com/liblouis/liblouis/pull/795,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/795#issuecomment-520883054,"Unlike other vowels, when Alpha has an ypogegrammeni the Alpha itself needs to be rendered.
Ensure that all accents on the second vowel of a diphthong are rendered before the contraction.",Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/798,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/798#issuecomment-515439925,,"I looked at the undefined-dots.yaml test quickly and it seems that the behavior of the inputPos/outputPos mapping is consistent with inpos_outpos.yaml, so it looks OK!
Some comments in undefined-dots.yaml similar to the comments in inpos_outpos.yaml to explain would be nice though, because inputPos/outputPos tests can be difficult to read. But don't worry I can do that myself. I think I'll even add a test in inpos_outpos.yaml with noUndefined mode.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,3,https://github.com/liblouis/liblouis/pull/798#issuecomment-517440867,,"We normally put variable declarations at the beginning of the block. Not sure if this has changed now. @egli?
The configure.ac does require C99, so I figured it'd be okay.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,4,https://github.com/liblouis/liblouis/pull/798#issuecomment-517488515,,"I was thinking about how to test the charToFallbackDots function. It would be
 nice to have a YAML test for it but I guess that is not possible. So it'll
 probably be a C test. Or do you have an idea @DaveMielke?
I've been wondering about the very same thing. One way to trigger it might be
for the undefined opcode to accept a special operand, e.g. ""undefined *"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,5,https://github.com/liblouis/liblouis/pull/798#issuecomment-517521308,,"I was thinking about how to test the charToFallbackDots function.
I just added a test to verify that the hex rendering of undefined characters
works when absolutely no characters are defined. Maybe this is enough to,
albeit indirectly, test the _lou_charToFallbackDots() function.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/798#issuecomment-517618318,,"I just added a test to verify that the hex rendering of undefined characters works when absolutely no characters are defined.

Aha, actually I had already added a test like that yesterday but didn't push yet. I'll try to merge them.

One way to trigger it might be for the undefined opcode to accept a special operand, e.g. ""undefined *"".

Hmm, you mean like a hidden feature? That sounds a bit overdoing it for just a test. I think I'll just go for a test written in C.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/798#issuecomment-517639268,,"@DaveMielke I pushed some commits.
Now for that test: I wanted to create a table with the exact same mapping as you implemented in C, and then create a simple test that checks that the table and the _lou_charToFallbackDots() function behave the same. But would there already be a table in the tables directory that we could use for this? That brings me to another point. What exactly is the standard that you based the charToFallbackDots function on? CBC (Computer Braille Code)? North American Braille ASCII Code? I would like to mention that information in the C code, the test and the NEWS file and maybe the user manual.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,8,https://github.com/liblouis/liblouis/pull/798#issuecomment-517798331,,"I wanted to create a table with the exact same mapping as you implemented in
 C, and then create a simple test that checks that the table and the
 _lou_charToFallbackDots() function behave the same.
Yes, that makes sense.
But would there already be a table in the tables directory that we could use
for this?
there could - and probably should - be, but I don't think there is. I'd say
that en-us-comp8 is the closest, but even it doesn't respect the one-to-one
relationship between text and braille characters that computer braille ought
to. The same table, in fact, would be the right thing to include in
grc-international-en. I could write it if you'd like.
That brings me to another point. What exactly is the standard that you based
the charToFallbackDots function on? CBC (Computer Braille Code)? North
American Braille ASCII Code? I would like to mention that information in the C
code, the test and the NEWS file and maybe the user manual.
It's what I've traditionally (but not sure from where) refer to as NABCC (North
American Braille Computer Code). It's a very common extension to the characters
used within BRF files, with the addition of adding both dots 7 and 8 to the
characters within the 0X40-0X5F block to represent the control characters.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/798#issuecomment-517801833,,"It's what I've traditionally (but not sure from where) refer to as NABCC (North American Braille Computer Code)

Right. I knew the mapping looked familiar. We have the text_nabcc.dis table. I should be able to use that one in my test. Note that it's a .dis table though so I don't know if it will be useful for your grc-international-en table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,10,https://github.com/liblouis/liblouis/pull/798#issuecomment-517806425,,"[quoted lines by Bert Frees on 2019/08/02 at 11:30 -0700]

Hi:
We have the text_nabcc.dis table. I should be able to use that one in my test.
Just checked it. It matches except that it also maps 0X80-0XFF but
_lou_charToFallbackDots() doesn't. I can extend the function if you'd like, but
the fact is that most people wouldn't recognize those additional characters.
They don't even make sense anymore in these Unicode (i.e. no longer ISO 8859-1)
days.
Note that it's a .dis table though so I don't know if it will be useful for
your grc-international-en table.
Too bad there isn't an easy way to use the same data for both types of tables.
The same must exist for U+2800-U+28FF range, although that range is
well-defined so the duplication would be easier to tolerate.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/798#issuecomment-517814474,,"I can extend the function if you'd like

Only if you think it makes sense.

Too bad there isn't an easy way to use the same data for both types of tables.

I think some duplication doesn't hurt. We could possibly generate two tables from a single source file with the Makefile.
For the U+2800-U+28FF range there is the braille-patterns.cti table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,12,https://github.com/liblouis/liblouis/pull/798#issuecomment-517817764,,"[quoted lines by Bert Frees on 2019/08/02 at 12:14 -0700]

Hi:
> I can extend the function if you'd like

Only if you think it makes sense.
I don't, for reasons given in my previous message. _lou_charToFallbackDots()
converts any character equal to or greater than 0X80 to a question mark (so
dots 1456). I think the right thing to do is for your test to either verify
this or just stop at 0X7F.
We could possibly generate two tables from a single source file with the
Makefile.
It'd be nice to have nabcc.uti. While a .dis file clearly needs all 256
mappings, nabcc.uti should probably only map the first 128.
For the U+2800-U+28FF range there is the braille-patterns.cti table.
Probably should be .uti. :-)

Is that done via the make file approach?
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/798#issuecomment-517819419,,"No, unicode.dis and braille-patterns.cti are just a different file in the source code. There is even a third file called unicode-braille.utb which is the same thing but without noback.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,14,https://github.com/liblouis/liblouis/pull/798#issuecomment-517908266,,"Hi:

I've added en-nabcc.uti to this PR. Maybe you can use it for your C test of
_lou_charToFallbackDots().

The test for it only verifies 126 of the 128 characters. \x0000 (NUL) caused
the rest of the input text to be lost, and \X001B (ESC) was translated to a
literal escape character (i.e. it wasn't being translated to braille). For now,
those two characters aren't in the test.

Do you think en-nabcc should be .utb rather than .uti?
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/798#issuecomment-517934401,,"Great! I used the .dis table for my test (see commit 619bb09), but the en-nabcc.uti will surely be useful.
ESC is currently hard coded to dot pattern 1B. My test is also failing because of that.
I also noticed the issue with NUL before. I'll look into it.

Do you think en-nabcc should be .utb rather than .uti?

Yes, I wanted to ask about that. I can imagine someone might like to use it as a top-level table, no?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,16,https://github.com/liblouis/liblouis/pull/798#issuecomment-517935580,,"[quoted lines by Bert Frees on 2019/08/03 at 15:49 +0000]
ESC is currently hard coded to dot pattern 1B.
Do you mean dot 1 + virtual dot B, or do you mean the dot bit combination 0X1B?
> Do you think en-nabcc should be .utb rather than .uti?

Yes, I wanted to ask about that. I can imagine someone might like to use it as a top-level table, no?
Okay, I'll rename it and add some metadata.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/798#issuecomment-517936090,,"Yes, dot 1 + virtual dot B. As far as I know this should only be needed for certain math tables, so the rule should be made explicit in those tables only, and removed elsewhere. I'll fix it. (This is related to #585 by the way.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,18,https://github.com/liblouis/liblouis/pull/798#issuecomment-518683007,,"[quoted lines by Christian Egli on 2019/08/06 at 05:19 -0700]

Hi:
>  	scratchBuf[bufPos++] = '\'';
-	for (charPos = 0; charPos < length && bufPos < (MAXSTRING - 2); charPos++) {
-		if (chars[charPos] >= 32 && chars[charPos] < 127)
-			scratchBuf[bufPos++] = (char)chars[charPos];
-		else {
+
+	for (int charPos = 0; (charPos < length) && (bufPos < (MAXSTRING - 2));
+			charPos += 1) {

Why is `charPos += 1` better than `charPos++` ?
In theory, nothing. I don't like making a special case out of an
increment/decrement by 1. I thini it only makes coding sense to use ++ or --
when implementing a stack-like behaviour.
>  	scratchBuf[bufPos++] = '\'';
-	for (charPos = 0; charPos < length && bufPos < (MAXSTRING - 2); charPos++) {
-		if (chars[charPos] >= 32 && chars[charPos] < 127)
-			scratchBuf[bufPos++] = (char)chars[charPos];
-		else {
+
+	for (int charPos = 0; (charPos < length) && (bufPos < (MAXSTRING - 2));
+			charPos += 1) {
+		widechar c = chars[charPos];
+
+		if (!forceHex && (c >= 0X20) && (c < 0X7F)) {

Don't we have constants for these magic numbers?
I don't think so, and, if you'd like me to would gladly define them. I don't
like hard-coding constants like that, which is why, in fact, I did create a
constant - LOU_ROW_BRAILLE = 0X2800 - for the Unicode braille row.
> +_lou_charToFallbackDots(widechar c) {
+	static const unsigned char charToDots[] = {
+		/* ASCII characters 0X00-0X1F - control characters.
+		 * These won't be referenced so we have room for data.
+		 * These groups must be in descending order.
+		 * Each group contains the following four bytes:
+		 * 1) The first character to which this block applies.
+		 * 2) The bits to remove from the character.
+		 * 3) The bits to add to the character.
+		 * 4) The dots to add to the braille pattern.
+		 */
+		0X7F, 0X20, 0X00, LOU_DOT_7, 0X60, 0X20, 0X00, 0, 0X5F, 0X00, 0X00, 0, 0X40, 0X00,
+		0X00, LOU_DOT_7, 0X20, 0X00, 0X00, 0, 0X00, 0X00, 0X40, LOU_DOT_7 | LOU_DOT_8,
+
+		// ASCII characters 0X20-0X3F - digits and common symbols.
+		[' '] = 0, ['!'] = LOU_DOT_2 | LOU_DOT_3 | LOU_DOT_4 | LOU_DOT_6,

I do not understand the `[' '] = 0` notation. What value is that putting into the array?
It's anotehr C99 huge improvement. When initializing an array, you can say
exactly which element is being initialized. In this case, the array element for
(indexed by) each character's actual value is being initialized with that
character's dot representation.

C99 also supports using .fieldName=value when initializing a struct or union.
> +		['Y'] = LOU_DOT_1 | LOU_DOT_3 | LOU_DOT_4 | LOU_DOT_5 | LOU_DOT_6,
+		['Z'] = LOU_DOT_1 | LOU_DOT_3 | LOU_DOT_5 | LOU_DOT_6,
+		['['] = LOU_DOT_2 | LOU_DOT_4 | LOU_DOT_6,
+		['\\'] = LOU_DOT_1 | LOU_DOT_2 | LOU_DOT_5 | LOU_DOT_6,
+		[']'] = LOU_DOT_1 | LOU_DOT_2 | LOU_DOT_4 | LOU_DOT_5 | LOU_DOT_6,
+		['^'] = LOU_DOT_4 | LOU_DOT_5, ['_'] = LOU_DOT_4 | LOU_DOT_5 | LOU_DOT_6
+	};
+
+	if (c >= 0X80) c = '?';
+	widechar dots = LOU_DOTS;
+
+	{
+		const unsigned char *p = charToDots;
+
+		while (1) {
+			if (*p <= c) {

Wouldn't a while loop be clearer?
Yes, now that the code has reached it's current form, that would work. Would
you like me to make that change?
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,19,https://github.com/liblouis/liblouis/pull/798#issuecomment-518686371,,"[quoted lines by Bert Frees on 2019/08/06 at 05:42 -0700]

Hi:
For me these don't need to be constants. Would maybe even make it less readable. But maybe a comment above the rule that says this means ""c inside the ASCII range"" would be useful.
ctype.h has isascii(). It doesn't take a widechar (or wchar_t), though. The
best solution is probably to add an inline function to internal.h:

   static inline int
   isASCII (widechar c) {
     return (c >= 0X20) && (c <= 0X7E);
   }

This'd encapsulate it within a functino that self-documents exactly what's
being done and does exactly what you want.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/798#issuecomment-518690404,,"This'd encapsulate it within a functino that self-documents exactly what's being done and does exactly what you want.

Yeah good solution.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/798#issuecomment-519267396,,I rebased the branch. Should be mergable now. @egli maybe check my new commits 0db7e61 and 672ba43 because those change the behavior slightly.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,22,https://github.com/liblouis/liblouis/pull/798#issuecomment-520013934,,"[quoted lines by MikeGray-APH on 2019/08/09 at 10:54 -0700]
The main reason I still define all variables at the beginning without defining them is that it makes gdb debugging scripts easier to write and maintain.
But, if the code is way easier to read and follow, it might need a lot less
debugging. :-)
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,23,https://github.com/liblouis/liblouis/pull/798#issuecomment-520456950,,"Hi:

When there are no dots, _lou_unknownDots() currently renders \/. What do you
think about having it render \0/ instead?
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/bertfrees,24,https://github.com/liblouis/liblouis/pull/798#issuecomment-520517715,,"Yes, I would think that is indeed the expected behavior. Was that not the
case in Liblouis 3.10?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,798,2019-07-24T19:44:46Z,2019-08-21T12:57:47Z,2019-08-21T12:57:47Z,MERGED,True,789,246,26,https://github.com/DaveMielke,Rename noUndefinedDots to noUndefined and implement it for forward translation.,51,[],https://github.com/liblouis/liblouis/pull/798,https://github.com/DaveMielke,25,https://github.com/liblouis/liblouis/pull/798#issuecomment-520523794,,"[quoted lines by Bert Frees on 2019/08/12 at 10:26 -0700]

Hi:
Yes, I would think that is indeed the expected behavior.
Okay, I'll make the change and add a test for it.
Was that not the case in Liblouis 3.10?
No, it doesn't look like it.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,799,2019-07-26T17:54:52Z,2019-08-07T20:01:07Z,2019-08-07T20:01:08Z,MERGED,True,4,1,3,https://github.com/DaveMielke,Fix the hang (loop) mentioned witin issue-77.yaml.,2,[],https://github.com/liblouis/liblouis/pull/799,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/799,Fixes #77,Fixes #77,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,799,2019-07-26T17:54:52Z,2019-08-07T20:01:07Z,2019-08-07T20:01:08Z,MERGED,True,4,1,3,https://github.com/DaveMielke,Fix the hang (loop) mentioned witin issue-77.yaml.,2,[],https://github.com/liblouis/liblouis/pull/799,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/799#issuecomment-517416902,Fixes #77,Trying to understand why it was hanging but am not seeing it. Can you explain in a couple of words?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,799,2019-07-26T17:54:52Z,2019-08-07T20:01:07Z,2019-08-07T20:01:08Z,MERGED,True,4,1,3,https://github.com/DaveMielke,Fix the hang (loop) mentioned witin issue-77.yaml.,2,[],https://github.com/liblouis/liblouis/pull/799,https://github.com/DaveMielke,3,https://github.com/liblouis/liblouis/pull/799#issuecomment-517435519,Fixes #77,"[quoted lines by Bert Frees on 2019/08/01 at 12:03 -0700]
Trying to understand why it was hanging but am not seeing it. Can you explain in a couple of words?
the sequence was a word made up of a repeated followed by a nocont. The
repeated was processed and then the nocont made it back up to the start of the
word, thus causing the repeated to be done again. The fix was to do as was
already done for other opcodes - to make repeated chcek if it was being
reprocessed due to nocont.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,799,2019-07-26T17:54:52Z,2019-08-07T20:01:07Z,2019-08-07T20:01:08Z,MERGED,True,4,1,3,https://github.com/DaveMielke,Fix the hang (loop) mentioned witin issue-77.yaml.,2,[],https://github.com/liblouis/liblouis/pull/799,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/799#issuecomment-517641265,Fixes #77,"Thanks.
Right, now I remember how the nocont rules works. I think I'm just going to add your explanation to the commit message. It might help us in the future. Needless to say, this code is quite brittle and it could be that there are other cases that could make Liblouis hang that we haven't discovered yet. There must be a better way that to repeat this same piece of code everywhere.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,799,2019-07-26T17:54:52Z,2019-08-07T20:01:07Z,2019-08-07T20:01:08Z,MERGED,True,4,1,3,https://github.com/DaveMielke,Fix the hang (loop) mentioned witin issue-77.yaml.,2,[],https://github.com/liblouis/liblouis/pull/799,https://github.com/DaveMielke,5,https://github.com/liblouis/liblouis/pull/799#issuecomment-517799329,Fixes #77,"[quoted lines by Bert Frees on 2019/08/02 at 02:56 -0700]

Hi:
Needless to say, this code is quite brittle and it could be that there are
other cases that could make Liblouis hang that we haven't discovered yet.
There must be a better way that to repeat this same piece of code everywhere.
Yes, I've had the very same thought and shall continue to think of a clean
solution. It's probably also true that other cases (literal, computer braille,
cursor expansion, etc) could have the very same problem.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,799,2019-07-26T17:54:52Z,2019-08-07T20:01:07Z,2019-08-07T20:01:08Z,MERGED,True,4,1,3,https://github.com/DaveMielke,Fix the hang (loop) mentioned witin issue-77.yaml.,2,[],https://github.com/liblouis/liblouis/pull/799,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/799#issuecomment-517803450,Fixes #77,I didn't mean this PR is blocked on that. But of course if you want to try to solve the issue you are very welcome :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,799,2019-07-26T17:54:52Z,2019-08-07T20:01:07Z,2019-08-07T20:01:08Z,MERGED,True,4,1,3,https://github.com/DaveMielke,Fix the hang (loop) mentioned witin issue-77.yaml.,2,[],https://github.com/liblouis/liblouis/pull/799,https://github.com/DaveMielke,7,https://github.com/liblouis/liblouis/pull/799#issuecomment-517806997,Fixes #77,"[quoted lines by Bert Frees on 2019/08/02 at 11:36 -0700]

Hi:
I didn't mean this PR is blocked on that. But of course if you want to try to solve the issue you are very welcome :-)
I'd rather this PR proceed as is. Proper time should be taken to design a
proper resolution.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/800,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/school510587,2,https://github.com/liblouis/liblouis/pull/800#issuecomment-515909334,,"Recently I received request of supporting pronunciation symbols from 黃偉豪. He also helped me a lot on making and verifying this change. However, I think this feature may take time to be reviewed by liblouis developers, so I create an individual PR earlier. This PR only contains addition of IPA table to zh-tw.ctb, without other improvement of Chinese braille translation, etc.
@bertfrees and @egli, could you check that if there is any symbol in IPA not present in both IPA-unicode-range.uti and zh-tw.ctb? Now I'm sure zh-tw.ctb translates θ into ⠨⠹, which is consistent to the definition in IPA.utb.
Reviewers:

嘯傲俠羽 crazy@mail.batol.net
Coscell Kao coscell@gmail.com
Victor Cai surfer0627@gmail.com",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/800#issuecomment-518668922,,"could you check that if there is any symbol in IPA not present in both IPA-unicode-range.uti and zh-tw.ctb?

@school510587 can you do that check? Sorry, I do not have time to do the leg work for other people.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/school510587,4,https://github.com/liblouis/liblouis/pull/800#issuecomment-518719089,,"I have added four symbols: U+00E7, U+00F8, U+0153, U+2C71. U+F25F is not included, because it belongs to private use area. I think this is the best that I can do. Thanks for review.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/800#issuecomment-521230521,,@school510587 is this good to go in now or does anything need checking? Also could you add a few tests to the YAML file to explain what did change does?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/school510587,6,https://github.com/liblouis/liblouis/pull/800#issuecomment-521243839,,"Hi @bertfrees,

I think only a test of θ being translated into 46-1456 is meaningful to zh-tw.ctb, because it is the only symbol existing in both zh-tw.ctb and IPA-unicode-range.uti.
At the beginning, I thought there might be a set of tests for IPA, but I didn't find it.
I thus asked you for help to check if any IPA symbol was missing.
Is it possible to make a set of tests for IPA-unicode-range.uti?
If OK, any table featuring support of IPA symbols should pass this test.
However, I have very limited knowledge to IPA, so I don't know what are representative cases to check our IPA support.
Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/800#issuecomment-521260376,,"Yes, good idea. I'll generate a ""ipa.yaml"" test and then run it against zh-tw.ctb. But what about the 7 new rules that you added? Why wouldn't it be meaningful to test these?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/800#issuecomment-524316317,,So I created a braille-specs/ipa-unicode-range.yaml. It is basically a verbatim copy of the IPA-unicode-range.uti table. With that I'm testing fr-bfu-comp8.utb and IPA.utb. I get failures. I think I'll add the test to a separate PR.,True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/800#issuecomment-524318417,,Shouldn't we have run the new test against zh-tw.ctb?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/800#issuecomment-524326183,,"Aha, hm, I guess so. But since the test had failures against other existing tables I didn't want to delay this PR",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,800,2019-07-29T09:01:29Z,2019-08-23T13:36:20Z,2019-09-13T21:53:16Z,MERGED,True,24,2,3,https://github.com/school510587,Add IPA support into zh-tw.ctb,7,['tables'],https://github.com/liblouis/liblouis/pull/800,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/800#issuecomment-524326719,,"OK, it's fine.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/801,Just opening PR. More to come.,Just opening PR. More to come.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/801#issuecomment-515970618,Just opening PR. More to come.,"No new tests fail after removing swapcc from the test in compileTranslationTable.c.
The two swapcc and swapcd tests in tests/yaml/multipass-backwards.yaml still fail. So, these opcodes apparently still need to be implemented for backtrans. Suggest fixing this in another PR to keep things clean.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/801#issuecomment-516164314,Just opening PR. More to come.,"Narrowed it down to 165 table lines with one cell and only one Braille cell. Lines with more than one Braille cell seem to somehow already work with back-translation. If everything is ok, could we please merge soon? Then I can rebase and use this work for getting on with German back-translation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/801#issuecomment-516350726,Just opening PR. More to come.,Thanks Bue. OK. I'll do my best to merge ASAP. But I think you can already go ahead and base your German stuff on this branch.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/801#issuecomment-517645228,Just opening PR. More to come.,"@BueVest By the way we're gonna have to wait a bit until Christian is back from vacation anyway. He should be back next week but I'm sure he'll have a lot of other things to do first.
So don't let this stuff block your work on the German table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/801#issuecomment-517650943,Just opening PR. More to come.,"@BueVest I rebase the branch and added a NEWS entry.
You said:

Narrowed it down to 165 table lines with one cell and only one Braille cell. Lines with more than one Braille cell seem to somehow already work with back-translation.

Yes, make sense, that is because the function addBackwardRuleWithSingleCell is only called if the rule has one cell. But how have you found all the always rules with one cell and one character? I'm seeing some rules that you haven't prefixed with noback. Did you take into account the rules that use an escape sequence?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/801#issuecomment-517762650,Just opening PR. More to come.,"Yes, or rather, I have tried to. I have searched all .ctb, .cti, .utb and uti files. However, when you use the python escape style for characters, Python reports the length as 3, but I am not sure that it is true for all escaped characters. I would have thought that it would be a length of either 1 (if the sequence is read as an escaped char) or 6 (if it is being read as a string without escaping). Perhaps this is the problem?

Could you please give me an example of what I have missed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/801#issuecomment-517781465,Just opening PR. More to come.,"I think these should be all of them:
ru-ru-g1.utb:119:always \x00B4 4
ru-ru-g1.utb:305:always \x00AB 236
ru-ru-g1.utb:306:always \x00BB 356
hr-translation.cti:133:#always \x2013 36
hr-translation.cti:134:#always \x2014 36
sl-si-g1.utb:98:always \x00B4 4
en-gb-g1.utb:202:always \x2212 36",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/801#issuecomment-517937289,Just opening PR. More to come.,"Ok, I think I am beginning to find out what is happening.Apparently “\x0061” does not spell “a” in Python, but rather a null character followed by “6” and “1”.



Do you know what Git command to use to pull my remote branch after it has been rebased? Both pulling and rebasing want me to resolve the same conflicts that you have already resolved, and I want to make sure that I end up with the same branch as the remote one, history and all.

Do I simply delete my local branch, and pull the remote again, or is there a better way? Sorry about the probably stupid question.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/BueVest,10,https://github.com/liblouis/liblouis/pull/801#issuecomment-517952707,Just opening PR. More to come.,"Well, whink it is ok now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/801#issuecomment-518020919,Just opening PR. More to come.,Did you also look for any swapcc rules that were enabled by this change? Are there none?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/BueVest,12,https://github.com/liblouis/liblouis/pull/801#issuecomment-518027069,Just opening PR. More to come.,"No, I didn’t search for tables using swapcc, which would be searching for “nofor correct …%...”

I think no one could have used it, since it has apparently never worked and still doesn’t. As I wrote, I think it should be fixed in another PR.

There is a test of nofor correct with swapcc in multipass-backward.yaml, but the test looks a bit spooky to me, and, of course, it also fails. I also tested it with my own test with the same result.



BTW, I would suggest that swaps and groups work from right to left when translating backwards. This would make the same swaps and groups usable for both forward and backward translation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/801#issuecomment-518034480,Just opening PR. More to come.,"Sorry I missed that comment.
I suggest to keep the newRule->opcode == CTO_SwapCc for now and if needed fix it when we look at the swapcc issue.

BTW, I would suggest that swaps and groups work from right to left when translating backwards. This would make the same swaps and groups usable for both forward and backward translation.

Yes makes sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,801,2019-07-29T09:14:00Z,2019-08-21T12:07:46Z,2019-08-21T12:07:47Z,MERGED,True,191,189,27,https://github.com/BueVest,Enable always with one char and swapcc for use with back-translation,5,['refactoring'],https://github.com/liblouis/liblouis/pull/801,https://github.com/BueVest,14,https://github.com/liblouis/liblouis/pull/801#issuecomment-518200562,Just opening PR. More to come.,Fine with me.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,803,2019-07-29T22:29:13Z,2019-08-25T18:05:14Z,2019-08-25T18:05:14Z,MERGED,True,54,51,3,https://github.com/BueVest,Resolve #802: capsnocont leaking to next word,4,[],https://github.com/liblouis/liblouis/pull/803,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/803,"Just added the test for now. More to come, I hope.","Just added the test for now. More to come, I hope.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,803,2019-07-29T22:29:13Z,2019-08-25T18:05:14Z,2019-08-25T18:05:14Z,MERGED,True,54,51,3,https://github.com/BueVest,Resolve #802: capsnocont leaking to next word,4,[],https://github.com/liblouis/liblouis/pull/803,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/803#issuecomment-516351124,"Just added the test for now. More to come, I hope.",Related to #802,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,803,2019-07-29T22:29:13Z,2019-08-25T18:05:14Z,2019-08-25T18:05:14Z,MERGED,True,54,51,3,https://github.com/BueVest,Resolve #802: capsnocont leaking to next word,4,[],https://github.com/liblouis/liblouis/pull/803,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/803#issuecomment-516986947,"Just added the test for now. More to come, I hope.","Ready for merge, I think, except the Clang check seems to be failing yet again. I don't know what I am doing wrong.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,803,2019-07-29T22:29:13Z,2019-08-25T18:05:14Z,2019-08-25T18:05:14Z,MERGED,True,54,51,3,https://github.com/BueVest,Resolve #802: capsnocont leaking to next word,4,[],https://github.com/liblouis/liblouis/pull/803,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/803#issuecomment-518021920,"Just added the test for now. More to come, I hope.","Thanks! Seems to fix the test, but I think I'm going to try to rewrite the code a bit.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,803,2019-07-29T22:29:13Z,2019-08-25T18:05:14Z,2019-08-25T18:05:14Z,MERGED,True,54,51,3,https://github.com/BueVest,Resolve #802: capsnocont leaking to next word,4,[],https://github.com/liblouis/liblouis/pull/803,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/803#issuecomment-518026119,"Just added the test for now. More to come, I hope.",Anything I can do?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,803,2019-07-29T22:29:13Z,2019-08-25T18:05:14Z,2019-08-25T18:05:14Z,MERGED,True,54,51,3,https://github.com/BueVest,Resolve #802: capsnocont leaking to next word,4,[],https://github.com/liblouis/liblouis/pull/803,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/803#issuecomment-518034100,"Just added the test for now. More to come, I hope.","No it's OK. The code is correct, it just bugs me a bit that there are two loops that both check for the uppercase attribute. I'm gonna try to find a nicer way to do it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,803,2019-07-29T22:29:13Z,2019-08-25T18:05:14Z,2019-08-25T18:05:14Z,MERGED,True,54,51,3,https://github.com/BueVest,Resolve #802: capsnocont leaking to next word,4,[],https://github.com/liblouis/liblouis/pull/803,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/803#issuecomment-518084906,"Just added the test for now. More to come, I hope.","Yes, that bothered me too. But it seemed to be a choice between that extra loop and constantly checking for capsnocont in the original loop. Looking forward to seeing how you solve it ☺",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/806,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/DaveMielke,2,https://github.com/liblouis/liblouis/pull/806#issuecomment-518011980,,"[quoted lines by Bert Frees on 2019/08/04 at 07:38 -0700]

Hi:
The value compare should indeed also be case insensitive.
Done.
If I remember correctly the isValidChar() function was changed later so that a period could be used in a field value. It seems I forgot to update the documentation.
Documentation updated.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/806#issuecomment-518647657,,"Wait, why should the key comparison be case insensitive? The key FOO is not the same thing as the key foo IMHO.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/806#issuecomment-518656157,,"Dave suggested it and I thought it made sense indeed. I just don't see a reason why the case should matter, and by ignoring the case it's more difficult for users to make mistakes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/DaveMielke,5,https://github.com/liblouis/liblouis/pull/806#issuecomment-518678664,,"[quoted lines by Christian Egli on 2019/08/06 at 05:23 -0700]

Hi:
-	resolved = _lou_resolveTable(table, NULL);
-	if (resolved == NULL) {
-		_lou_logMessage(LOU_LOG_ERROR, ""Cannot resolve table '%s'"", table);
-		return NULL;
-	}
-	sprintf(fileName, ""%s"", *resolved);
-	k = 0;
-	for (k = 0; resolved[k]; k++) free(resolved[k]);
-	free(resolved);
-	if (k > 1) {
-		_lou_logMessage(
-				LOU_LOG_ERROR, ""Table '%s' resolves to more than one file"", table);
-		return NULL;
+
+	{

why is the extra block needed here?
This function had two declarations of k, one (this one, an int to count the
number of resolved tables) in an outer block, and one (a string for a key name)
in an inner block. This is called ""shadowing, and is bad practice and error
prone to do that sort of thing. The extra block, here, moves the outer k into
an inner block.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/DaveMielke,6,https://github.com/liblouis/liblouis/pull/806#issuecomment-518684493,,"[quoted lines by Christian Egli on 2019/08/06 at 05:27 -0700]

Hi:
Wait, why should the key comparison be case insensitive? The key `FOO` is not the same thing as the key `foo` IMHO.
In my opinion, that, from a user perspective, would be extremely error prone.
Probably even also from a table maintenance perspective. As I see it, it's a
case where the reality of practice needs to win out big time over elegant
theory.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/806#issuecomment-518712096,,"As I see it, it's a case where the reality of practice needs to win out big time over elegant theory.

Haha, I tend to lean on the elegant theory side. But in this case it is fine with me either way.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/DaveMielke,8,https://github.com/liblouis/liblouis/pull/806#issuecomment-518725731,,"[quoted lines by Christian Egli on 2019/08/06 at 08:09 -0700]

Hi:
Haha, I tend to lean on the elegant theory side. But in this case it is fine with me either way.
I usually do, too. One of my principles that overrides that, though, is that
it's the job of those who write the code to make the lives of those who use it
as easy and as non-error prone as possible. And people, as we know, don't
always behave according to elegant theories.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/806#issuecomment-519238117,,Merged in cc94204.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/806#issuecomment-519418267,,"While riding the train to work I thought about this some more: I really don't like having case-insensitive metadata keys. As they say in Pythonland: There should only be one obvious way to do it. Also I just spent some time to make sure that all the liblouis unicode escape characters, e.g. \x, were all lowercase.
But is appears that the two of you are both for case insensitive keys, so I'll drop the issue.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,806,2019-08-04T02:28:24Z,2019-08-07T19:30:49Z,2019-08-08T09:49:55Z,CLOSED,False,0,0,0,https://github.com/DaveMielke,Various small fixes to the metadata code.,0,[],https://github.com/liblouis/liblouis/pull/806,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/806#issuecomment-519450294,,The Unicode escape characters thing is a bit different because \x and \X do not mean different things now. One is just deprecated.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,807,2019-08-07T11:05:23Z,2019-09-02T09:32:14Z,2019-11-26T13:48:26Z,MERGED,True,26713,28,8,https://github.com/egli,Add Grade 2 table for Afrikaans,8,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/807,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/807,"Christo de Klerk of the South African Braille Authority and myself have been working on a Grade 2 table for Afrikaans. Included in this email is the results of that work.
Here are some notes from Christo on the YAML file which is also included.
If you look in the YAML file, you will see that I commented out about 30 words. Although they translate correctly, there are two bugs in the UEB chardef table that makes lou_checkyaml choke on those words. James Bowden from the UK is looking at fixing them, but there seems to be some controversy. We might have to consider copying it, making the necessary changes and using our own dedicated chardefs table. The nastier of the two bugs affects the back translation of words beginning with ""alge"" which contract to $= which is the UEB circle shape indicator.
This is a major improvement. Afrikaans is widely spoken across southern Africa as well as in the Afrikaner diaspora world wide. Afrikaans is also one of the official languages of South Africa. We would ask that these tables replace the existing Afrikaans grade 1 table in liblouis as quickly as possible.","Christo de Klerk of the South African Braille Authority and myself have been working on a Grade 2 table for Afrikaans. Included in this email is the results of that work.
Here are some notes from Christo on the YAML file which is also included.
If you look in the YAML file, you will see that I commented out about 30 words. Although they translate correctly, there are two bugs in the UEB chardef table that makes lou_checkyaml choke on those words. James Bowden from the UK is looking at fixing them, but there seems to be some controversy. We might have to consider copying it, making the necessary changes and using our own dedicated chardefs table. The nastier of the two bugs affects the back translation of words beginning with ""alge"" which contract to $= which is the UEB circle shape indicator.
This is a major improvement. Afrikaans is widely spoken across southern Africa as well as in the Afrikaner diaspora world wide. Afrikaans is also one of the official languages of South Africa. We would ask that these tables replace the existing Afrikaans grade 1 table in liblouis as quickly as possible.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,807,2019-08-07T11:05:23Z,2019-09-02T09:32:14Z,2019-11-26T13:48:26Z,MERGED,True,26713,28,8,https://github.com/egli,Add Grade 2 table for Afrikaans,8,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/807,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/807#issuecomment-519055223,"Christo de Klerk of the South African Braille Authority and myself have been working on a Grade 2 table for Afrikaans. Included in this email is the results of that work.
Here are some notes from Christo on the YAML file which is also included.
If you look in the YAML file, you will see that I commented out about 30 words. Although they translate correctly, there are two bugs in the UEB chardef table that makes lou_checkyaml choke on those words. James Bowden from the UK is looking at fixing them, but there seems to be some controversy. We might have to consider copying it, making the necessary changes and using our own dedicated chardefs table. The nastier of the two bugs affects the back translation of words beginning with ""alge"" which contract to $= which is the UEB circle shape indicator.
This is a major improvement. Afrikaans is widely spoken across southern Africa as well as in the Afrikaner diaspora world wide. Afrikaans is also one of the official languages of South Africa. We would ask that these tables replace the existing Afrikaans grade 1 table in liblouis as quickly as possible.","If you look in the YAML file, you will see that I commented out about 30 words.

Better to use xfail. Then we'll be notified when James Bowden's PR fixes them.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/808,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/808#issuecomment-519939542,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","Some background for Christian: the idea is to have a new metadata field for selecting a table from a list fast and efficiently. It has the most important information first and no redundant information. It should look nice when sorted. This in contrast to the existing ""display-name"" field which is for describing a table accurately and should sound good.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/808#issuecomment-521581481,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","I'll merge the Finnish table separately.

AFAIK they use this in NVDA

They sure do.
I'll take care of the NEWS and everything. I also have suggestions for some changes coming up.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/DaveMielke,4,https://github.com/liblouis/liblouis/pull/808#issuecomment-521620530,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","[quoted lines by Christian Egli on 2019/08/15 at 02:26 -0700]

Hi:
However why did you at the same time remove a finish table?
They were so identical that there wasn't any obvious way for the metadata to
describe them as being different from one another. The one with the extra
character was the one that was retained. That made only one character different
between them, and the one with what seemed to be the more accurate rendering is
in the one that was retained.

By the way, I did ask first.
OK you explain why and I guess I'm fine with the resoning. Just next time it might be better to put this in a separate PR
Yes, I understand that. I'm sorry.
Also we need to mention the removal of tables in the NEWS file. AFAIK they use this in NVDA
I can put it back if you'd like. Another appraoch would be to put the old file
back but change it so that it includes the retained version, and then have the
metadata discover fi.tbl.

Does NVDA use fi.tbl or fi-fi.ctb?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/808#issuecomment-521623491,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","Does NVDA use fi.tbl or fi-fi.ctb?

We don't know, we only know that they use our release notes to do changes in their code if needed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/808#issuecomment-521631880,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","I can put it back if you'd like. Another approach would be to put the old file back but change it so that it includes the retained version, and then have the metadata discover fi.tbl.

Oh no, if it really is identical another table as you describe then good thing you discovered this and good riddance of this duplicated table.
We just need to mention the removal in the NEWS file, that's all.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/DaveMielke,7,https://github.com/liblouis/liblouis/pull/808#issuecomment-521632186,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb",Shall I at least put fi.tbl back and move the metadata to it?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/808#issuecomment-521632625,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","No, don't. It's perfect like it is now. And I have the NEWS file covered.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/808#issuecomment-524084237,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb",Finnish part merged in 78983d6,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/808#issuecomment-524107487,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","@DaveMielke I have some suggestions (I have made these changes locally, so no need for you to change anything, just let me know what you think):


Don't mention ""forward"" in either index-name or display-name. This is something that the user should never have to worry about. The program is always interested in either only forward translation, only backward translation, or both, so it should already filter out the unsuitable tables before presenting the list to the user. So, for example in da-dk-g16-lit.ctb, ""Danish, uncontracted, 6-dot, forward"" becomes ""Danish, uncontracted, 6-dot"" (index-name), and ""Danish 6-dot uncontracted braille for forward translation"" becomes ""Danish 6-dot uncontracted braille"" (display-name).


You removed the ""fully"" from ""fully contracted braille"" (see for example da-dk-g26.ctb). I think I understand why you did this, but for me ""contracted braille"" also includes ""partially contracted braille"". I had added the ""fully"" to make it unambiguous. So my suggestion is to change it back to how it was before, and also add ""fully"" to the index-name. What do you think?


In index-name (see for example da-dk-g26l.ctb) we could also maybe replace ""partially contracted"" with ""contracted, partially""? Not sure about this though.


I was thinking about moving the ""(UEB)"" in ""Unified English (UEB) uncontracted braille"" to the end, because I find it a bit awkward in the middle. So it would become ""Unified English uncontracted braille (UEB)"". Same for EBAE. Moreover, if it's at the end it doesn't disturb as much, so we could possibly add similar abbreviations of braille codes and authorities elsewhere (BAUK, BFU, UIB, etc.). Or maybe this is going to create too much noise, I dunno. But in any case, it should be consistent. For example, adding it for EBAE also justifies adding it for BAUK.


Just a tiny detail, but I would change ""Esperanto, x-system"" to ""Esperanto x-system"" (without the comma), because the ""x-system"" is part of the original writing system (with language code ""eo-xsistemo"") rather than a variant of the braille code. I know, very subtle difference, but still.


For the French tables we could drop the ""unified"" because there are no French tables that are not ""unified"". Also I'm not sure whether it has the same meaning as the ""U"" in UEB, because then why are there separate tables for computer braille?


I would change ""International Greek braille"" to ""Greek international braille"" because the ""international"" has more affinity with ""braille"" then with ""Greek"".


I would change the index-name of no-no-8dot-fallback-6dot-g0.utb, ""Norwegian, uncontracted, 8-dot, with 6-dot fallback"", to ""Norwegian, uncontracted, 8-dot, 6-dot fallback"" which makes it slightly more compact which is important for index-name.


You changed the display-name of all the tables for Mandarin to have the word ""Mandarin"" in it. While I think this is the right thing to do for index-name, it's not necessarily so for display-name. For example ""Taiwanese Mandarin braille"" just doesn't sound as good as ""Taiwanese braille"", and the latter is what is also used on the Wikipedia page. Wikipedia also talks about ""(Mainland) Chinese braille"", not ""Mainland Mandarin braille"". Besides ""Mainland"" without ""China"" doesn't even make that much sense, so I also suggest to replace ""mainland"" with ""mainland China"" in all the index-names. And for consistency in the index-names, I would also add ""mainland China"" to the index-name of the ""2-cell"" table. In summary, these are the names for the Mandarin tables I'm proposing:
index-name:

Mandarin, mainland China, without tone
Mandarin, mainland China, with tone
Mandarin, mainland China, 2-cell
Mandarin, Taiwan

display-name:

Chinese braille without tone, for simplified Chinese characters
Chinese braille with tone
Two-cell Chinese braille
Taiwanese braille",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/DaveMielke,11,https://github.com/liblouis/liblouis/pull/808#issuecomment-524120318,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","[quoted lines by Bert Frees on 2019/08/22 at 15:53 -0700]

Hi:

Don't worry about subtle changes to improve things. I'm like that, too. :-)
 - Don't mention ""forward"" in either index-name or display-name. This is something that the user should never have to worry about. The program is always interested in either only forward translation, only backward translation, or both, so it should already filter out the unsuitable tables before presenting the list to the user. So, for example in da-dk-g16-lit.ctb, ""Danish, uncontracted, 6-dot, forward"" becomes ""Danish, uncontracted, 6-dot"" (index-name), and ""Danish 6-dot uncontracted braille for forward translation"" becomes ""Danish 6-dot uncontracted braille"" (display-name).
I aghree with you in principle but I added ""forward"" for a reason - to remove duplicate index/display names. Each of them that now says ""forward"" has a corresponding table that specifies #+direction:both and, in each case, removing ""forward"" would result in pairs of identical index/display names. I dont' think that duplicate names makes it easy for a user to know which table is which.

Now for what I really think: There are way too many Danish tables. Why do we need a ""both"" and a ""forward"" version. Why not just get rid of one table from each pair and then we wouldn't need to distinuish them from one another with extra stuff.
 - You removed the ""fully"" from ""fully contracted braille"" (see for example da-dk-g26.ctb). I think I understand why you did this, but for me ""contracted braille"" also includes ""partially contracted braille"". I had added the ""fully"" to make it unambiguous. So my suggestion is to change it back to how it was before, and also add ""fully"" to the index-name. What do you think?
I guess it's a matter of taste. To me, ""fully"" is what one expects and most will use while ""partially"" is an odd case tempoirarily used by those who are learning braille. To me, therefore, saying ""fully"" adds extra baggage whereas ""partially"" alerts the user that it's specially annotated to differentiate it from what one expects to be the normal case.

English braille - at least EBAE - has a grade 1.5 which maybe someone should write a table for. Should that mean, then, that the EBAE contracted table should also have ""fully"" added to it? I think that'd look ugly.
 - In index-name (see for example da-dk-g26l.ctb) we could also maybe replace ""partially contracted"" with ""contracted, partially""? Not sure about this though.
That doesn't read right in English. It implies that, in some way, the table is only partially implemented. :-)
- I was thinking about moving the ""(UEB)"" in ""Unified English (UEB) uncontracted braille"" to the end, because I find it a bit awkward in the middle. So it would become ""Unified English uncontracted braille (UEB)"". Same for EBAE.
I udnerstand your reasoning, but that implies that UEB means uncontracted unified braille. In other words, (something) implies that it defines everything that precedes it. Why not just drop UEB, EBAE, etc from the names. I don't think they're very helpful, actually.
 Moreover, if it's at the end it doesn't disturb as much, so we could possibly add similar abbreviations of braille codes and authorities elsewhere (BAUK, BFU, UIB, etc.). Or maybe this is going to create too much noise, I dunno. But in any case, it should be consistent. For example, adding it for EBAE also justifies adding it for BAUK.
Yes, I think those are noise and consistency should probably mean removing them.
 - Just a tiny detail, but I would change ""Esperanto, x-system"" to ""Esperanto x-system"" (without the comma), because the ""x-system"" is part of the original writing system (with language code ""eo-xsistemo"") rather than a variant of the braille code. I know, very subtle difference, but still.
As I said above, I like getting things right even if the change is small. Sure, go for it. I wasn't sure what to do with it because I didn't even know what it meant.
 - For the French tables we could drop the ""unified"" because there are no French tables that are not ""unified"".
Well, there used to be but removing them is fine because I doubt there'll be any desire to implement the older tables as they're too Windows centric.
 Also I'm not sure whether it has the same meaning as the ""U"" in UEB, because then why are there separate tables for computer braille?
I suspect that it does. My guess is that it stands for something like ""Braille Français Unifié"". But, still, sure, just remove Unified in the French case.
 - I would change ""International Greek braille"" to ""Greek international braille"" because the ""international"" has more affinity with ""braille"" then with ""Greek"".
But there's no such thing as international braille, and that's what such a change would imply. I think, to make both of us happy, it should maybe be:

   Greek internationalized braille
 - I would change the index-name of no-no-8dot-fallback-6dot-g0.utb, ""Norwegian, uncontracted, 8-dot, with 6-dot fallback"", to ""Norwegian, uncontracted, 8-dot, 6-dot fallback"" which makes it slightly more compact which is important for index-name.
Yes, that's better.
 - You changed the display-name of all the tables for Mandarin to have the word ""Mandarin"" in it. While I think this is the right thing to do for index-name, it's not necessarily so for display-name. For example ""Taiwanese Mandarin braille"" just doesn't sound as good as ""Taiwanese braille"", and the latter is what is also used on the Wikipedia page.
Yes, removing Mandarin in the Taiwanese case makes sense and does look better.
 Wikipedia also talks about ""(Mainland) Chinese braille"", not ""Mainland Mandarin braille"". Besides ""Mainland"" without ""China"" doesn't even make that much sense, so I also suggest to replace ""mainland"" with ""mainland China"" in all the index-names. And for consistency in the index-names, I would also add ""mainland China"" to the index-name of the ""2-cell"" table.
Sure. My problem was that ""Chinese"" isn't a language, but ""mainland China"" would be fine.
 In summary, these are the names for the Mandarin tables I'm proposing:

   index-name:
   - Mandarin, mainland China, without tone
   - Mandarin, mainland China, with tone
   - Mandarin, mainland China, 2-cell
   - Mandarin, Taiwan
Yes, except that I think ""tone"" should be ""tones"". Mandarin, after all, doesn't just use neutral plus a single tone modifier - there are several. Saying ""tone"" in the singular is probably the kind of English ""mistake"" that a Mandarin speaker might make.
   display-name:
   - Chinese braille without tone, for simplified Chinese characters
   - Chinese braille with tone
   - Two-cell Chinese braille
   - Taiwanese braille
Again, I think it should be ""tones"". Also, I really don't like saying Chinese instead of Mandarin because Mandarin is the language. The people are Chinese (as they also are in Hong Kong), but the language is Mandarin (as opposed to Cantonese).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/808#issuecomment-524274007,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","Hi, some more comments:

I aghree with you in principle but I added ""forward"" for a reason - to remove duplicate index/display names.

Hmm okay, I didn't notice that before. Still, my argument counts I think if we change the ""both"" to ""backward"". In this case the user will normally never have to see both tables in the list, so shouldn't get confused.

Now for what I really think: There are way too many Danish tables. Why do we need a ""both"" and a ""forward"" version.

I wouldn't just delete the forward one, but rather change ""both"" into ""backward"". Then I'll ask Bue if there is a possibility to reduce the number of tables somehow, and if not if he could explain a bit more inside the tables what the differences are between the normal and ""lit"" versions.
The fact that there are many Danish tables is just because there are so many variants to choose from. I think we have to live with that.

I guess it's a matter of taste. To me, ""fully"" is what one expects and most will use while ""partially"" is an odd case tempoirarily used by those who are learning braille. To me, therefore, saying ""fully"" adds extra baggage whereas ""partially"" alerts the user that it's specially annotated to differentiate it from what one expects to be the normal case.

I'm not sure it's like that in all countries though. But okay let's keep the change.

Why not just drop UEB, EBAE, etc from the names. I don't think they're very helpful, actually.

OK sounds good.



For the French tables we could drop the ""unified"" because there are no French tables that are not ""unified"".


Well, there used to be but removing them is fine because I doubt there'll be any desire to implement the older tables as they're too Windows centric.

Also I'm not sure whether it has the same meaning as the ""U"" in UEB, because then why are there separate tables for computer braille?

I suspect that it does. My guess is that it stands for something like ""Braille Français Unifié"". But, still, sure, just remove Unified in the French case.

Yes, it does mean ""unifié"" but I thought maybe it had a different meaning then in UEB, because again why would you need a separate computer braille table then? It think it could become confusing for the user. Also I can find very little information about this on the web. It isn't mentioned very often so seems it has become not so relevant anymore. But anyway, I think we've already agreed that removing it is better :-)

But there's no such thing as international braille, and that's what such a change would imply. I think, to make both of us happy, it should maybe be:
Greek internationalized braille

OK that works for me. ""International braille"" does appear a lot in articles on the web though, so it seems to be common, but ""internationalized"" is fine too.


these are the names for the Mandarin tables I'm proposing:
index-name:

Mandarin, mainland China, without tone
Mandarin, mainland China, with tone
Mandarin, mainland China, 2-cell
Mandarin, Taiwan


Yes, except that I think ""tone"" should be ""tones"". Mandarin, after all, doesn't just use neutral plus a single tone modifier - there are several. Saying ""tone"" in the singular is probably the kind of English ""mistake"" that a Mandarin speaker might make.

I guess ""tone"" is something we could say in Dutch too. Maybe that's why I thought it is also valid English. It's one of those words that doesn't necessarily mean a single instance (and doesn't need an article in that case), but it can also mean a specific tone and can have an article and has a plural. But anyway you're the expert on the English language.
Maybe talking about ""tone marking"" is more accurate anyway?


display-name:

Chinese braille without tone, for simplified Chinese characters
Chinese braille with tone
Two-cell Chinese braille
Taiwanese braille




I really don't like saying Chinese instead of Mandarin because Mandarin is the language. The people are Chinese (as they also are in Hong Kong), but the language is Mandarin (as opposed to Cantonese).

Yeah sure, I know Chinese is not the language, but it is an adjective/country so there's no reason why a braille code can not be called like that. ""Taiwanese"" is also not a language.
Again to me it's more important that the names sound good and are recognizable by the users, so for example following Wikipedia is not a bad idea in this case because these pages are probably created by people who can know.
Besides I don't know if people from Hong Kong like to be called Chinese :-) so actually I think there can be little confusion. If there is, I would rather let someone who can know change the names.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/DaveMielke,13,https://github.com/liblouis/liblouis/pull/808#issuecomment-524341764,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","[quoted lines by Bert Frees on 2019/08/23 at 04:06 -0700]

Hi:
> I aghree with you in principle but I added ""forward"" for a reason - to remove duplicate index/display names.

Hmm okay, I didn't notice that before. Still, my argument counts I think if we
change the ""both"" to ""backward"". In this case the user will normally never
have to see both tables in the list, so shouldn't get confused.
In our case, we need forward and backward translation to ideally be precisely
inverse. Having to use two different tables - one for each direction - just
because it helps fix up a naming issue maybe is what we should be doing, but I
think I'd rather be using a single table that someone has verified to be
working correctly in both directions.
> Now for what I really think: There are way too many Danish tables. Why do we need a ""both"" and a ""forward"" version.

I wouldn't just delete the forward one, but rather change ""both"" into
""backward"". Then I'll ask Bue if there is a possibility to reduce the number
of tables somehow, and if not if he could explain a bit more inside the tables
what the differences are between the normal and ""lit"" versions.
Yes, so, at this point, especially given that the 3.11 release date is close, I
think we're left with this question. Is it better to introduce a lie by
changing both to backward or is it better to temporarily have a somewhat
awkward-looking name?
> I suspect that it does. My guess is that it stands for something like
""Braille Français Unifié"". But, still, sure, just remove Unified in the French
case.

Yes, it does mean ""unifié"" but I thought maybe it had a different meaning then
in UEB, because again why would you need a separate computer braille table
then?
Perhaps because French computer braille in different countries is (was)
different, just like US and UK English computer braille aren't the same.
It think it could become confusing for the user. Also I can find very little
information about this on the web. It isn't mentioned very often so seems it
has become not so relevant anymore. But anyway, I think we've already agreed
that removing it is better :-)
The French are very jealous about their language, even having an official
academy which strives to maintain their language's ""purity"". Given that, it
wouldn't surprise me at all if they even want to keep French computer braille
as ""pure"" as possible.
> > these are the names for the Mandarin tables I'm proposing:
> >
> >   index-name:
> >   - Mandarin, mainland China, without tone
> >   - Mandarin, mainland China, with tone
> >   - Mandarin, mainland China, 2-cell
> >   - Mandarin, Taiwan
>
> Yes, except that I think ""tone"" should be ""tones"". Mandarin, after all, doesn't just use neutral plus a single tone modifier - there are several. Saying ""tone"" in the singular is probably the kind of English ""mistake"" that a Mandarin speaker might make.

I guess ""tone"" is something we could say in Dutch too. Maybe that's why I
thought it is also valid English. It's one of those words that doesn't
necessarily mean a single instance (and doesn't need an article in that case),
but it can also mean a specific tone and can have an article and has a plural.
But anyway you're the expert on the English language.

Maybe talking about ""tone marking"" is more accurate anyway?
To me, that'd depend on the braille. Foe example, it'd be wrong to say French
braille with accent markings (notice I've used the plural here, too) since the
letters aren't merely annotated - completely different braille symbols are
used.

Back to ""tone"" (singular) for a moment. I, of course, knew the intention of the
word. To a casual reader, the phrase ""Mandarin braille with tone"" would mean
""Mandarin braille with expressiveness"". That, of coruse, is entirely wrong
because modifying a Mandarin word with one of the four possible tones changes
the whole meaning of the word to something that isn't even related.
Yeah sure, I know Chinese is not *the* language, but it is an
adjective/country so there's no reason why a braille code can not be called
like that. ""Taiwanese"" is also not a language.
Besides I don't know if people from Hong Kong like to be called Chinese :-) so
actually I think there can be little confusion. If there is, I would rather
let someone who can know change the names.
Shall I ask on the list for Chinese people to answer this one?
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,808,2019-08-09T13:55:48Z,2019-09-02T10:11:29Z,2019-09-02T10:11:29Z,MERGED,True,200,52,143,https://github.com/DaveMielke,Add #-index-name: metadata to the tables.,4,[],https://github.com/liblouis/liblouis/pull/808,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/808#issuecomment-524391654,"Not done yet: fi-fi-8dot.ctb, no-no-8dot-fallback-6dot-g0.utb","Shall I ask on the list for Chinese people to answer this one?

OK sure, why not.

I think I'd rather be using a single table that someone has verified to be working correctly in both directions.

In that case you should probably use only the ""both"" table (that is, automatically filter the ""forward"" one out), because that one is most likely to behave the same in forward and backward direction. In fact this is probably what you should be doing anyway, because you're only interested in tables that work both ways (de-g1.ctb and grc-international-en.utb are also marked ""forward"").
Note that the forward direction of one table and the backward direction of another table could in theory be more ""in line"" than the forward and backward direction of the same table. Using a single table doesn't guarantee anything about the back-translation capabilities. But let's forget about that fact for now...
I'm going to ask Bue's advice first. In fact, I'll invite him to the conversation.
Hi @BueVest. Dave an I are breaking our heads over the question how to present the list of available Danish tables to an end user. Do we need to name the tables that are optimized for forward translation (the ""lit"" tables) differently than the ones that work in both directions? Or can a program automatically filter out the tables that are not useful? In the latter case, and if the program needs both forward and backward directions, there are two possibilities: either use the ""lit"" table for forward translation and the other one for backward, or use the one table that can do both directions. I guess the real question is: what exactly is the added value of the ""lit"" tables? You probably told me before, but I forgot. It would be good to have a more elaborate explanation in the table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,809,2019-08-13T09:59:37Z,2019-08-14T14:27:39Z,2019-08-14T14:27:44Z,MERGED,True,11,17193,4,https://github.com/egli,Remove the unicodedefs.cti table,3,[],https://github.com/liblouis/liblouis/pull/809,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/809,"Fixes #696
Still to do:

 add the unicode links to the documentation","Fixes #696
Still to do:

 add the unicode links to the documentation",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/812,Fixes #810 and other small fixes.,Fixes #810 and other small fixes.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/812#issuecomment-521230173,Fixes #810 and other small fixes.,@Andre9642 Let us know when this is ready for review/to be merged.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/812#issuecomment-555012493,Fixes #810 and other small fixes.,@Andre9642 Is this PR ready for us to review?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/aaclause,4,https://github.com/liblouis/liblouis/pull/812#issuecomment-555396355,Fixes #810 and other small fixes.,"I have to discuss with @garconvacher about arrow representations. Official documentations are confusing for me and Unicode has a lot of variants (U+2190..U+21FF).
Examples:



Arrow
According CBFU
Currently (conflict with math code? Bad mapping?)




↔
⠪⠒⠕
⠐⠻


←
⠪⠒⠒
⠸⠪


→
⠒⠒⠕
⠸⠱



I'd like to clarify/fix that. After that, I'd like add some tests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/812#issuecomment-555397799,Fixes #810 and other small fixes.,OK thanks for the heads up.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/garconvacher,6,https://github.com/liblouis/liblouis/pull/812#issuecomment-555408550,Fixes #810 and other small fixes.,"I have to discuss with @garconvacher about arrow representations. Official documentations are confusing for me and Unicode has a lot of variants (U+2190..U+21FF).

Lot of variants and french braille has different representations between literary and math contexts. Which ones to choose?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/aaclause,7,https://github.com/liblouis/liblouis/pull/812#issuecomment-560272631,Fixes #810 and other small fixes.,"Lot of variants and french braille has different representations between literary and math contexts. Which ones to choose?

IMO we should leave like this for now, but without writing tests. ⠪⠒⠕, ⠪⠒⠒ or ⠒⠒⠕ is too confusing for me in 8-dots.
@egli or @bertfrees: could you merge the PR like this? If needed, I'll provide another PR for arrows and yaml tests later. The original issue is solved anyway.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/812#issuecomment-560359185,Fixes #810 and other small fixes.,@Andre9642 OK we've merged it. Since there was no YAML file for the IPA stuff yet (Christian created a test for IPA-unicode-range.uti in #829) we've let this pass without tests.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/aaclause,9,https://github.com/liblouis/liblouis/pull/812#issuecomment-560381505,Fixes #810 and other small fixes.,"Thanks a lot. :)
Off-topic: don't forget to update the date in NEWS file.

Noteworthy changes in release 3.12.0 (2019-09-02)
should be


Noteworthy changes in release 3.12.0 (2019-12-02)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,812,2019-08-13T22:34:41Z,2019-12-02T10:50:41Z,2019-12-02T14:21:28Z,MERGED,True,16,17,3,https://github.com/aaclause,fr-bfu-comp68.cti & IPA-unicode-range.uti: various fixes,3,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/812,https://github.com/garconvacher,10,https://github.com/liblouis/liblouis/pull/812#issuecomment-560416495,Fixes #810 and other small fixes.,"IMO we should leave like this for now, but without writing tests. ⠪⠒⠕, ⠪⠒⠒ or ⠒⠒⠕ is too confusing for me in 8-dots.

As far as I know, these representations are for students (mostly readers on paper) and they appears only on 6 dots french code. Arrows' representations of the mathematical code could be sufficient?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,817,2019-08-14T14:29:29Z,2019-08-14T15:07:01Z,2019-08-14T15:07:20Z,CLOSED,False,0,0,0,https://github.com/bertfrees,Add a test for case sensitivity related issues and expectations,0,[],https://github.com/liblouis/liblouis/pull/817,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/817,... starting with the issue from #498 (comment).,... starting with the issue from #498 (comment).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,817,2019-08-14T14:29:29Z,2019-08-14T15:07:01Z,2019-08-14T15:07:20Z,CLOSED,False,0,0,0,https://github.com/bertfrees,Add a test for case sensitivity related issues and expectations,0,[],https://github.com/liblouis/liblouis/pull/817,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/817#issuecomment-521286835,... starting with the issue from #498 (comment).,Merged in 43f40a3.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,820,2019-08-16T12:17:30Z,2019-08-16T12:58:12Z,2019-08-26T09:21:03Z,MERGED,True,92,0,2,https://github.com/egli,Add a display table to match Word CX,1,[],https://github.com/liblouis/liblouis/pull/820,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/820,"It's a display table that matches chars used by Word CX to display
braille patterns on screen. I know for sure that Word CX is used in
Norway and Sweden, and maybe also in other countries. I'm quite sure
that the char mapping is the same in the two countries, and because of
that, I named the table wordcx.dis, not no-no-wordcx.dis.","It's a display table that matches chars used by Word CX to display
braille patterns on screen. I know for sure that Word CX is used in
Norway and Sweden, and maybe also in other countries. I'm quite sure
that the char mapping is the same in the two countries, and because of
that, I named the table wordcx.dis, not no-no-wordcx.dis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,821,2019-08-16T12:54:08Z,2019-08-20T09:36:26Z,2019-08-20T09:36:31Z,MERGED,True,23,14,1,https://github.com/egli,"Document valid class, grouping and swap names",1,['documentation'],https://github.com/liblouis/liblouis/pull/821,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/821,"PR #751 changed how names (e.g. emph class names) are handled. The chars that make up the name no longer have to be defined with character definition opcodes. Instead the are defined with a simple ""regexp"" [a-zA-Z]+.
This PR updates the documentation to define valid names for the class,grouping and swap opcodes.
Fixes #752","PR #751 changed how names (e.g. emph class names) are handled. The chars that make up the name no longer have to be defined with character definition opcodes. Instead the are defined with a simple ""regexp"" [a-zA-Z]+.
This PR updates the documentation to define valid names for the class,grouping and swap opcodes.
Fixes #752",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,823,2019-08-20T06:50:33Z,2019-08-21T11:51:12Z,2020-08-27T13:47:45Z,MERGED,True,3,2,3,https://github.com/JakeKyle,Dutch tables: update handling colon within number,2,['tables'],https://github.com/liblouis/liblouis/pull/823,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/823,"@dkager
@bertfrees
Update nl-g0.uti table and nl-g0_harness.yaml test so number sign is used after a colon within a number. This conforms to 2017 rules.","@dkager
@bertfrees
Update nl-g0.uti table and nl-g0_harness.yaml test so number sign is used after a colon within a number. This conforms to 2017 rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,823,2019-08-20T06:50:33Z,2019-08-21T11:51:12Z,2020-08-27T13:47:45Z,MERGED,True,3,2,3,https://github.com/JakeKyle,Dutch tables: update handling colon within number,2,['tables'],https://github.com/liblouis/liblouis/pull/823,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/823#issuecomment-522924462,"@dkager
@bertfrees
Update nl-g0.uti table and nl-g0_harness.yaml test so number sign is used after a colon within a number. This conforms to 2017 rules.",Fixes #822,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,823,2019-08-20T06:50:33Z,2019-08-21T11:51:12Z,2020-08-27T13:47:45Z,MERGED,True,3,2,3,https://github.com/JakeKyle,Dutch tables: update handling colon within number,2,['tables'],https://github.com/liblouis/liblouis/pull/823,https://github.com/dkager,3,https://github.com/liblouis/liblouis/pull/823#issuecomment-522994524,"@dkager
@bertfrees
Update nl-g0.uti table and nl-g0_harness.yaml test so number sign is used after a colon within a number. This conforms to 2017 rules.","Yep, looks good.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,825,2019-08-22T10:48:45Z,2019-08-23T06:49:44Z,2019-08-26T07:26:55Z,MERGED,True,10,3,4,https://github.com/PaulRambags,tables/nl-chardefs.uti: Bullet and dot operators fix,3,['tables'],https://github.com/liblouis/liblouis/pull/825,https://github.com/PaulRambags,1,https://github.com/liblouis/liblouis/pull/825,The bullet and dot operators in the Dutch chardefs must be converted to (236).,The bullet and dot operators in the Dutch chardefs must be converted to (236).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,825,2019-08-22T10:48:45Z,2019-08-23T06:49:44Z,2019-08-26T07:26:55Z,MERGED,True,10,3,4,https://github.com/PaulRambags,tables/nl-chardefs.uti: Bullet and dot operators fix,3,['tables'],https://github.com/liblouis/liblouis/pull/825,https://github.com/PaulRambags,2,https://github.com/liblouis/liblouis/pull/825#issuecomment-523871889,The bullet and dot operators in the Dutch chardefs must be converted to (236).,"Thanks! Looks good. But I noticed that the copyright in nl-chardefs.cti should be updated (the date). And Paul you can add your name to AUTHORS (but you don't have to).

I have made the requested changes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/jkinslayer,1,https://github.com/liblouis/liblouis/pull/826,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/826#issuecomment-527573709,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","@jkinslayer Thanks for the contribution! Looks pretty good. See the comments that I made inline for some questions I have. Also, an important something that is missing is test data. We require that all table contributions are accompanied with regression tests, with your name and preferably with a link to some official document on the braille specification. It's preferred that the tests are written in our YAML format.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/jkinslayer,3,https://github.com/liblouis/liblouis/pull/826#issuecomment-527787947,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","I'm afraid I don't know what ""A+B Unicode"" means. @jkinslayer<https://github.com/jkinslayer> could you explain?

Hi Bert,

Some arabic texts appear in their presentation form, either A + B . The characters are contextually determined joining forms
and letter and diacritic combinations. Primarily for printing arabic texts nicely.
Then instead of having the characters appear in the base arabic range of 0x600 the unicode characters appear under their
unicode pendant in the 0xfb00, 0xfc00, ... range.

The ar-ext.uti file is just a back mapper for the same character in the 0xfb00 range to the single character in the 0x600 range.
Without that back mapping the lou_translate() will only output text as a series of \xfc4e\xfd5e\x.....  placeholders.

I had worked with Ikrami Ahmad <ikrami.ahmad@gmail.com> for this problem.
I found his contact in the ar-ar-g1.utb as the original creator of the arabic table.

CH",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/jkinslayer,4,https://github.com/liblouis/liblouis/pull/826#issuecomment-527788542,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","The table name should probably be ""ar-ext.uti"", right? (The ""C"" stands for ""contracted"", the ""U"" for ""uncontracted"")
Ah, yes, this should probably be named ar-ext.uti. I thought I'd fixed that.
Sorry I am not so familiar with the process and the standards.

CH",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/jkinslayer,5,https://github.com/liblouis/liblouis/pull/826#issuecomment-527790356,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","Why is the file copyrighted to ViewPlus and JJB?
There was no ka-ge-g1.utb file before, so I just picked a generic header. Since these lines appear almost everywhere.

The georgian braille table was created according to specs from Khatuna Gogidze - Georgian Braille expert, Georgian Braille books publisher
I have a PDF file with the specs. Do you want that?

CH",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/826#issuecomment-527821804,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","Thanks for the infos.
Yes, if there are no legal issues, I would like to include the PDF on our braille-specs website.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/jkinslayer,7,https://github.com/liblouis/liblouis/pull/826#issuecomment-527834752,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","I guess there must have been some change in the line endings of this file or something, because Github says a lot of lines changed, but I can only see a few actual changes.
Not sure why those lines are flagged. I did not change them.
They should remain unchanged. I only added a couple of lines in ro.ctb.

CH",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/826#issuecomment-527858477,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","As I said I think you changed the line endings. But never mind, I can fix it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/826#issuecomment-528065698,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","Some arabic texts appear in their presentation form, either A + B. The characters are contextually determined joining forms and letter and diacritic combinations. Primarily for printing arabic texts nicely.  Then instead of having the characters appear in the base arabic range of 0x600 the unicode characters appear under their unicode pendant in the 0xfb00, 0xfc00, ... range.
The ar-ext.uti file is just a back mapper for the same character in the 0xfb00 range to the single character in the 0x600 range. Without that back mapping the lou_translate() will only output text as a series of \xfc4e\xfd5e\x.....  placeholders.
I had worked with Ikrami Ahmad ikrami.ahmad@gmail.com for this problem. I found his contact in the ar-ar-g1.utb as the original creator of the arabic table.

OK I get it now. I also found an old email (18 March) from you about this that I had forgotten about. I see that you have written a correct rule to do the normalization. I think this is the right approach. However you also define a number of sign rules. Couldn't these be deleted? The correct rule should be enough. Note that instead of defining all the characters at once in the swapcc rule, you could also have a correct rule for every individual character. For example:
noback correct ""\xFEB3"" ""\x0633"" # Seen initial

I think I'll add the following links to the comment at the top of the table to make it more clear what is meant by ""presentation form A+B unicode characters"".

https://en.wikipedia.org/wiki/Arabic_Presentation_Forms-A
https://en.wikipedia.org/wiki/Arabic_Presentation_Forms-B",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/826#issuecomment-558674407,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","@jkinslayer There are still things to do before we can merge this PR.


I'm missing test files for ka-ge-g1.utb and ar-ext.uti.


There are some lines in ka-ge-g1.utb commented out. Can you explain why they are commented out, or remove them?


The copyright lines in ka-ge-g1.utb should be fixed.


You promised me a PDF of the Khatuna Gogidze document, but I don't think I ever received anything. Did you sent it?


I need some more info about the ka-ge-g1.utb table in order to get the metadata right. Is the table specific to Georgia or is it enough to say ""Kartvelian""? This is the metadata I currently have for the table:
#-index-name: Kartvelian
#-display-name: Kartvelian braille
#+locale: ccs
#+type: literary
#+contraction: no",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/826#issuecomment-728164741,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.",@jkinslayer Any update on this pull request? See my comment from November last year.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/jkinslayer,12,https://github.com/liblouis/liblouis/pull/826#issuecomment-728838020,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","At 17:17 11/16/2020, you wrote:

@jkinslayer Any update on this pull request? See my comment from November last year.

Hello, that's all a long time ago. I need to recuperate on this task.

That's the information I had collected about Georgian braille. I have no YAML test cases. Some lines are in ka-ge-g1.utb are commented out because we don't always want to backtranslate kartevelian characters into ASCII space. That's needed if one wants to use Sylfaen font or other font which maps Kartevelian chars into ASCII space. But with our fonts we don't need to do that, since we're all using the proper unicode charset. By the way: Is there a way to make some rules conditional based on an input flag or parameter? For instance, I want to enable or disable some rules based on user preference? How do you do that? I can't possibly use hundreds of different table files for such a purpose.
 
CH",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/826#issuecomment-728881141,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","Thanks for the update. Yeah that's quite a while ago, and that's the reason I ask. We don't like having PR's pend for too long. If there is no progress they will be closed at some point.
You could in theory have different tables for different character encodings. But I would not recommend it. There are no other tables that do this, and we currently have no way to indicate it in the table metadata. As far as I'm aware most/all tables assume the input is Unicode, and I think this is how it should be. If re-encoding is required it ought to be done outside Liblouis.

Is there a way to make some rules conditional based on an input flag or parameter? For instance, I want to enable or disable some rules based on user preference?

There isn't. The only way to do this is to have multiple tables that you can pick from. Conditional rules have been discussed before but I don't really like the idea, and I haven't seen a good enough use case for it yet. Could you give some examples of how you would use it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,826,2019-08-22T14:42:20Z,2021-09-14T09:36:13Z,2021-09-14T10:12:19Z,CLOSED,False,466,4,7,https://github.com/jkinslayer,"update for Kartvelian Braille Table (Georgia), Arabic, and Romanian.",7,"['waiting', 'tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/826,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/826#issuecomment-906373552,"Added ka-ge-g1.utb for Kartvelian language in Georgia.
Added dot patterns in Arabic language for extended arabic character set form A + B.
Updated ro.ctb table, added hyphen and ellipsis opcodes.","Hi, I'd like to clean up the open PRs. There hasn't been much activity on this particular PR lately. Please try to move it forward otherwise I will close it after the next release. If you do not have any time now but you feel that we need to come back to this issue at a later point you can always re-open it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,827,2019-08-22T20:51:54Z,2019-11-18T13:52:48Z,2019-11-26T13:48:02Z,MERGED,True,966,729,23,https://github.com/bertfrees,Further separate display from translation,8,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/827,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/827,"This is the next step after #789.
There are two phases to a braille conversion:

translation: liblouis uses the rules in the translation table to convert characters to dots
display: display the dots as characters. Usually liblouis uses the characters defined in display rules (in display tables) but as a fallback it uses mappings defined in the translation table, e.g. letter rules

This PR aims to separate these two concepts at least internally","This is the next step after #789.
There are two phases to a braille conversion:

translation: liblouis uses the rules in the translation table to convert characters to dots
display: display the dots as characters. Usually liblouis uses the characters defined in display rules (in display tables) but as a fallback it uses mappings defined in the translation table, e.g. letter rules

This PR aims to separate these two concepts at least internally",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,827,2019-08-22T20:51:54Z,2019-11-18T13:52:48Z,2019-11-26T13:48:02Z,MERGED,True,966,729,23,https://github.com/bertfrees,Further separate display from translation,8,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/827,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/827#issuecomment-525390679,"This is the next step after #789.
There are two phases to a braille conversion:

translation: liblouis uses the rules in the translation table to convert characters to dots
display: display the dots as characters. Usually liblouis uses the characters defined in display rules (in display tables) but as a fallback it uses mappings defined in the translation table, e.g. letter rules

This PR aims to separate these two concepts at least internally",Moved to next milestone.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,827,2019-08-22T20:51:54Z,2019-11-18T13:52:48Z,2019-11-26T13:48:02Z,MERGED,True,966,729,23,https://github.com/bertfrees,Further separate display from translation,8,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/827,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/827#issuecomment-543265597,"This is the next step after #789.
There are two phases to a braille conversion:

translation: liblouis uses the rules in the translation table to convert characters to dots
display: display the dots as characters. Usually liblouis uses the characters defined in display rules (in display tables) but as a fallback it uses mappings defined in the translation table, e.g. letter rules

This PR aims to separate these two concepts at least internally","Rebased and done things properly now.
Depends on #864.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/829,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/829#issuecomment-524318272,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test",Related to #800,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/829#issuecomment-524319381,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","I'll have a look at why it fails.
I suggest renaming the test to ""ipa.yaml"". ""ipa-unicode-range"" is also not so great as name for the table by the way, but that's a different issue.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/829#issuecomment-524324310,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","To me it simply looks like a number of IPA characters (eight) in the French table are overridden by other rules. This may be intentional or not. We better ask Ludovic.
This also brings us to another point. If it is indeed possible to override the IPA characters, why do we even need to split off a part that is ""safe to include""? Why not include the whole IPA.utb (which should really be called IPA.uti IMO, and Dave Mielke shares this opinion). Besides, if ""safe the include"" means that there is no overlap at all, that is obviously not the case (because some tests fail), and even if it would be the case for French that does not mean it is the case for other tables that want to include it (like Taiwanese). So it does not make much sense to have a the ipa-unicode-range.uti, at least not if it's intended to be generic. (Of course it's fine for French to have its own subtable.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/829#issuecomment-524324472,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test",@garconvacher See my comment above.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/829#issuecomment-524798514,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","I suggest renaming the test to ""ipa.yaml"".

Done",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/829#issuecomment-553456878,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test",@garconvacher what is up with this change?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/garconvacher,8,https://github.com/liblouis/liblouis/pull/829#issuecomment-553779649,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","To me it simply looks like a number of IPA characters (eight) in the French table are overridden by other rules. This may be intentional or not. We better ask Ludovic.

Hi, I missed the previous mention :/
In ipa.yaml, there's:
table: fr-bfu-comp8.utb
table: IPA.utb
table: IPA-unicode-range.uti

I don't remember well how the tests works but the eight characters are not IPA specific (unicode range). I think this test will fail with italian and greek tables and surely others.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/829#issuecomment-555012636,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test",Possibly related to #812.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/829#issuecomment-555215768,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","@garconvacher The ipa.yaml test that Christian created includes all the characters that are defined in IPA-unicode-range.uti. The following tests are failing when run against the fr-bfu-comp8.utb table.

\x00F0: ⢃ instead of ⠻
\x032C: ⠨⠸⠘⠒ instead of ⠠⠦
\x032F: ⠨⠈⠒ instead of ⠠⠾
\x2016: ⠘⠿ instead of ⠸⠿
\x2193: ⠨⠻ instead of ⠸⠮
\x2191: ⠘⠻ instead of ⠸⠫
\x2197: ⠘⠱ instead of ⠸⠙
\x2198: ⠨⠱ instead of ⠸⠴

My question is: is this behavior correct?
fr-bfu-comp8.utb includes IPA-unicode-range.uti, so one would expect all the characters defined there to be translated according to that table. This is clearly not the case, which must mean that fr-bfu-comp8.utb defines these characters itself. But according to IPA-unicode-range.uti the whole purpose of that table is to avoid conflicts, so there's something fishy. Either the French table does not behave correctly, or it behaves correctly and there is no need to avoid conflicts.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/garconvacher,11,https://github.com/liblouis/liblouis/pull/829#issuecomment-555394826,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","It's trickier than I thought.
My first IPA table matched the Unicode characters from the IPA braille reference. I did not check the characters on the Unicode charts.
I realize now that some of these are taken from other charts than IPA.
These are from Combining Diacritical Marks: Range 0300–036F:


\x032C: ⠨⠸⠘⠒ instead of ⠠⠦
\x032F: ⠨⠈⠒ instead of ⠠⠾


this from  General Punctuation: Range 2000–206F:


\x2016: ⠘⠿ instead of ⠸⠿


These from Arrows: Range 2190–21FF


\x2193: ⠨⠻ instead of ⠸⠮
\x2191: ⠘⠻ instead of ⠸⠫
\x2197: ⠘⠱ instead of ⠸⠙
\x2198: ⠨⠱ instead of ⠸⠴


I also find errors from the reference: \xF19C, \xF19D and \xF25F. The Unicode chart for these ""characters"" is Private Use Area: Range E000-F8FF. It does not make sense :(
So IPA-unicode-range.uti is a mess.
@Andre9642, do you want I check the table to keep only the appropriate characters?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/829#issuecomment-560374265,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test",I rebased this branch to master in the hopes that thanks to #812 the situation would improve a bit,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/829#issuecomment-560374897,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","But alas there are more tests failing now, as some of the definitions have been moved from IPA-unicode-range.uti to IPA.utb and are hence no longer in the former file. But the test still expects them there.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/829#issuecomment-727874876,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test",@garconvacher what is the status of this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,829,2019-08-23T13:36:43Z,2021-09-14T09:37:22Z,2021-09-14T10:12:01Z,CLOSED,False,192,0,3,https://github.com/egli,Add a test for the ipa unicode range table,3,"['waiting', 'stale']",https://github.com/liblouis/liblouis/pull/829,https://github.com/egli,15,https://github.com/liblouis/liblouis/pull/829#issuecomment-906373779,"The test currently generates failures. That shouldn't happen as the test is basically 1:1 mapped from the ipa-unicode-range table

 add the zh-tw.ctb table to the tables to test","Hi, I'd like to clean up the open PRs. There hasn't been much activity on this particular PR lately. Please try to move it forward otherwise I will close it after the next release. If you do not have any time now but you feel that we need to come back to this issue at a later point you can always re-open it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,830,2019-08-25T14:14:24Z,2019-08-27T08:41:44Z,2019-08-27T08:41:44Z,MERGED,True,2287,1706,5,https://github.com/BueVest,Update to Danish tables,6,[],https://github.com/liblouis/liblouis/pull/830,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/830,Contains a lot of improvements to the hyphenation table and a few corrections to certain contractions.,Contains a lot of improvements to the hyphenation table and a few corrections to certain contractions.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,830,2019-08-25T14:14:24Z,2019-08-27T08:41:44Z,2019-08-27T08:41:44Z,MERGED,True,2287,1706,5,https://github.com/BueVest,Update to Danish tables,6,[],https://github.com/liblouis/liblouis/pull/830,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/830#issuecomment-524782593,Contains a lot of improvements to the hyphenation table and a few corrections to certain contractions.,"@BueVest why is this test failing:
FAIL: braille-specs/da-dk-g28
=============================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /home/travis/build/liblouis/liblouis/tables/da-dk-g28.ctb (27)

Input:    '⠠⡤'
Expected: '—' (length 1)
Received: '\36/' (length 4)
Diff:     Expected '—' but received '\' in index 0

lou_checkyaml:./braille-specs/da-dk-g28.yaml:123: Failure
Table: unicode-without-blank.dis,/home/travis/build/liblouis/liblouis/tables/da-dk-g28.ctb

FAILURE (375 tests, 1 failure)
FAIL braille-specs/da-dk-g28.yaml (exit status: 1)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,830,2019-08-25T14:14:24Z,2019-08-27T08:41:44Z,2019-08-27T08:41:44Z,MERGED,True,2287,1706,5,https://github.com/BueVest,Update to Danish tables,6,[],https://github.com/liblouis/liblouis/pull/830,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/830#issuecomment-524825956,Contains a lot of improvements to the hyphenation table and a few corrections to certain contractions.,"Sorry, my mistake. I am in the middle of fixing it right now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,831,2019-08-25T18:59:13Z,2019-08-26T08:06:26Z,2019-08-26T08:06:26Z,MERGED,True,2,2,2,https://github.com/BueVest,Marked Current German g0 and g2 table correctly as forward only tables.,1,[],https://github.com/liblouis/liblouis/pull/831,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/831,"Changed ""translation"" to ""direction"".","Changed ""translation"" to ""direction"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,835,2019-08-30T10:42:54Z,2019-11-19T13:20:04Z,2019-11-19T13:40:04Z,MERGED,True,12,12,2,https://github.com/egli,Punctuation corrections in Ethiopic Braille,2,['tables'],https://github.com/liblouis/liblouis/pull/835,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/835,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,835,2019-08-30T10:42:54Z,2019-11-19T13:20:04Z,2019-11-19T13:40:04Z,MERGED,True,12,12,2,https://github.com/egli,Punctuation corrections in Ethiopic Braille,2,['tables'],https://github.com/liblouis/liblouis/pull/835,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/835#issuecomment-555493498,,@egli OK I see now that you have changed the tests. I would have preferred if the table author would have done this himself. Now we have changed the braille-specs without verification from someone who can know.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,835,2019-08-30T10:42:54Z,2019-11-19T13:20:04Z,2019-11-19T13:40:04Z,MERGED,True,12,12,2,https://github.com/egli,Punctuation corrections in Ethiopic Braille,2,['tables'],https://github.com/liblouis/liblouis/pull/835,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/835#issuecomment-555502865,,I asked him twice and he just repeated his first answer in more detail. Basically he is saying that two punctuation characters changed. So I thought let's end this agony and just fixed the tests myself.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,835,2019-08-30T10:42:54Z,2019-11-19T13:20:04Z,2019-11-19T13:40:04Z,MERGED,True,12,12,2,https://github.com/egli,Punctuation corrections in Ethiopic Braille,2,['tables'],https://github.com/liblouis/liblouis/pull/835,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/835#issuecomment-555502965,,"Apologies, I see that you actually asked him this on the mailing list, unfortunately you didn't get a proper answer.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,835,2019-08-30T10:42:54Z,2019-11-19T13:20:04Z,2019-11-19T13:40:04Z,MERGED,True,12,12,2,https://github.com/egli,Punctuation corrections in Ethiopic Braille,2,['tables'],https://github.com/liblouis/liblouis/pull/835,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/835#issuecomment-555503926,,No need to apologize. That's the life of a liblouis maintainer :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,836,2019-08-31T19:22:12Z,2019-09-02T09:28:15Z,2019-09-04T08:52:58Z,MERGED,True,5243,5544,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-08,3,['tables'],https://github.com/liblouis/liblouis/pull/836,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/836,"Summary of changes since 2019-05:

Add support of IPA symbols (PR#800).
Fix dot patterns of various Chinese characters.
Add more Chinese dot pattern exception rules according to dictionaries.
Add/Fix math symbol definitions.
Add support of single-line box drawing characters (used by some tools such as tree).
Remove unnecessary testcases.

Besides, the NEWS entry seens ambiguous, because there are several Chinese braille tables in liblouis. I suggest that the NEWS entry become, for example:
Add support for the International Phonetic Alphabet (IPA) to the Chinese bopomofo braille table, thanks to Hurt Huang and Sponge Jhan. Various improvements, including
dot patterns and testcases, to the Chinese bopomofo braille table, thanks to Sponge Jhan.
Reviewers:

Coscell Kao <coscell@gmail.com>
特種兵 <afreettears@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","Summary of changes since 2019-05:

Add support of IPA symbols (PR#800).
Fix dot patterns of various Chinese characters.
Add more Chinese dot pattern exception rules according to dictionaries.
Add/Fix math symbol definitions.
Add support of single-line box drawing characters (used by some tools such as tree).
Remove unnecessary testcases.

Besides, the NEWS entry seens ambiguous, because there are several Chinese braille tables in liblouis. I suggest that the NEWS entry become, for example:
Add support for the International Phonetic Alphabet (IPA) to the Chinese bopomofo braille table, thanks to Hurt Huang and Sponge Jhan. Various improvements, including
dot patterns and testcases, to the Chinese bopomofo braille table, thanks to Sponge Jhan.
Reviewers:

Coscell Kao <coscell@gmail.com>
特種兵 <afreettears@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,836,2019-08-31T19:22:12Z,2019-09-02T09:28:15Z,2019-09-04T08:52:58Z,MERGED,True,5243,5544,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-08,3,['tables'],https://github.com/liblouis/liblouis/pull/836,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/836#issuecomment-527536947,"Summary of changes since 2019-05:

Add support of IPA symbols (PR#800).
Fix dot patterns of various Chinese characters.
Add more Chinese dot pattern exception rules according to dictionaries.
Add/Fix math symbol definitions.
Add support of single-line box drawing characters (used by some tools such as tree).
Remove unnecessary testcases.

Besides, the NEWS entry seens ambiguous, because there are several Chinese braille tables in liblouis. I suggest that the NEWS entry become, for example:
Add support for the International Phonetic Alphabet (IPA) to the Chinese bopomofo braille table, thanks to Hurt Huang and Sponge Jhan. Various improvements, including
dot patterns and testcases, to the Chinese bopomofo braille table, thanks to Sponge Jhan.
Reviewers:

Coscell Kao <coscell@gmail.com>
特種兵 <afreettears@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","Note that before we always talked about ""Bopomofo-based Chinese Braille"" in the NEWS file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,836,2019-08-31T19:22:12Z,2019-09-02T09:28:15Z,2019-09-04T08:52:58Z,MERGED,True,5243,5544,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-08,3,['tables'],https://github.com/liblouis/liblouis/pull/836,https://github.com/school510587,3,https://github.com/liblouis/liblouis/pull/836#issuecomment-527547164,"Summary of changes since 2019-05:

Add support of IPA symbols (PR#800).
Fix dot patterns of various Chinese characters.
Add more Chinese dot pattern exception rules according to dictionaries.
Add/Fix math symbol definitions.
Add support of single-line box drawing characters (used by some tools such as tree).
Remove unnecessary testcases.

Besides, the NEWS entry seens ambiguous, because there are several Chinese braille tables in liblouis. I suggest that the NEWS entry become, for example:
Add support for the International Phonetic Alphabet (IPA) to the Chinese bopomofo braille table, thanks to Hurt Huang and Sponge Jhan. Various improvements, including
dot patterns and testcases, to the Chinese bopomofo braille table, thanks to Sponge Jhan.
Reviewers:

Coscell Kao <coscell@gmail.com>
特種兵 <afreettears@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","Ah, sorry, I thought liblouis developers might not mind this when I read NEWS. Considering consistency, should the entry be modified? Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,836,2019-08-31T19:22:12Z,2019-09-02T09:28:15Z,2019-09-04T08:52:58Z,MERGED,True,5243,5544,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-08,3,['tables'],https://github.com/liblouis/liblouis/pull/836,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/836#issuecomment-527549304,"Summary of changes since 2019-05:

Add support of IPA symbols (PR#800).
Fix dot patterns of various Chinese characters.
Add more Chinese dot pattern exception rules according to dictionaries.
Add/Fix math symbol definitions.
Add support of single-line box drawing characters (used by some tools such as tree).
Remove unnecessary testcases.

Besides, the NEWS entry seens ambiguous, because there are several Chinese braille tables in liblouis. I suggest that the NEWS entry become, for example:
Add support for the International Phonetic Alphabet (IPA) to the Chinese bopomofo braille table, thanks to Hurt Huang and Sponge Jhan. Various improvements, including
dot patterns and testcases, to the Chinese bopomofo braille table, thanks to Sponge Jhan.
Reviewers:

Coscell Kao <coscell@gmail.com>
特種兵 <afreettears@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","Probably, yes, but it's really a detail. We can do it during one of the next updates.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,836,2019-08-31T19:22:12Z,2019-09-02T09:28:15Z,2019-09-04T08:52:58Z,MERGED,True,5243,5544,2,https://github.com/school510587,Update zh-tw.ctb to version 2019-08,3,['tables'],https://github.com/liblouis/liblouis/pull/836,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/836#issuecomment-527808105,"Summary of changes since 2019-05:

Add support of IPA symbols (PR#800).
Fix dot patterns of various Chinese characters.
Add more Chinese dot pattern exception rules according to dictionaries.
Add/Fix math symbol definitions.
Add support of single-line box drawing characters (used by some tools such as tree).
Remove unnecessary testcases.

Besides, the NEWS entry seens ambiguous, because there are several Chinese braille tables in liblouis. I suggest that the NEWS entry become, for example:
Add support for the International Phonetic Alphabet (IPA) to the Chinese bopomofo braille table, thanks to Hurt Huang and Sponge Jhan. Various improvements, including
dot patterns and testcases, to the Chinese bopomofo braille table, thanks to Sponge Jhan.
Reviewers:

Coscell Kao <coscell@gmail.com>
特種兵 <afreettears@gmail.com>
黃偉豪 <hurt.nzsmr@gmail.com>
Victor Cai <surfer0627@gmail.com>","I think I changed the entry to mention something along the line of ""Bopomofo-based Chinese Braille"", at least below in the detailed entries",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,839,2019-09-03T18:20:25Z,2019-11-27T09:52:04Z,2019-11-27T09:52:15Z,MERGED,True,323,99,4,https://github.com/bertfrees,Improvements to Afrikaans grade 2 table,6,['tables'],https://github.com/liblouis/liblouis/pull/839,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/839,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,840,2019-09-03T20:04:37Z,2019-09-04T08:58:01Z,2019-09-04T08:58:02Z,MERGED,True,1,0,1,https://github.com/DaveMielke,Add an idnex name to ga-g2.ctb.,1,[],https://github.com/liblouis/liblouis/pull/840,https://github.com/DaveMielke,1,https://github.com/liblouis/liblouis/pull/840,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,841,2019-09-05T08:41:16Z,2019-11-18T11:56:34Z,2019-11-18T11:56:34Z,MERGED,True,2,2,2,https://github.com/leonardder,Specify calling convension for log callback,3,[],https://github.com/liblouis/liblouis/pull/841,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/841,"The calling convention for the logging callback is not specified. When using the Microsoft Visual C++ compiler in the past, the __stdcall calling convention was assumed. However, when building with clang-cl, __cdecl is used as a default instead. When on Windows, the python wrapper assumes __stdcall and therefore anything that tries to use logging crashes.
This pr makes sure that for the callback, the same calling convention is used as used for all exported functions.","The calling convention for the logging callback is not specified. When using the Microsoft Visual C++ compiler in the past, the __stdcall calling convention was assumed. However, when building with clang-cl, __cdecl is used as a default instead. When on Windows, the python wrapper assumes __stdcall and therefore anything that tries to use logging crashes.
This pr makes sure that for the callback, the same calling convention is used as used for all exported functions.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,841,2019-09-05T08:41:16Z,2019-11-18T11:56:34Z,2019-11-18T11:56:34Z,MERGED,True,2,2,2,https://github.com/leonardder,Specify calling convension for log callback,3,[],https://github.com/liblouis/liblouis/pull/841,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/841#issuecomment-528383993,"The calling convention for the logging callback is not specified. When using the Microsoft Visual C++ compiler in the past, the __stdcall calling convention was assumed. However, when building with clang-cl, __cdecl is used as a default instead. When on Windows, the python wrapper assumes __stdcall and therefore anything that tries to use logging crashes.
This pr makes sure that for the callback, the same calling convention is used as used for all exported functions.",I just have one question: Does that constitute in an API change? In other words do I have to change LIBLOUIS_CURRENT in configure.ac and/or LIBLOUIS_AGE?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,841,2019-09-05T08:41:16Z,2019-11-18T11:56:34Z,2019-11-18T11:56:34Z,MERGED,True,2,2,2,https://github.com/leonardder,Specify calling convension for log callback,3,[],https://github.com/liblouis/liblouis/pull/841,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/841#issuecomment-528459089,"The calling convention for the logging callback is not specified. When using the Microsoft Visual C++ compiler in the past, the __stdcall calling convention was assumed. However, when building with clang-cl, __cdecl is used as a default instead. When on Windows, the python wrapper assumes __stdcall and therefore anything that tries to use logging crashes.
This pr makes sure that for the callback, the same calling convention is used as used for all exported functions.","I'm not sure. lou_registerLogCallback takes a logging callback, and the
prototype of that changed and now holds the calling convention. However,
tools using liblouis.h are just fine.

May be increase LIBLOUIS_CURRENT just to make sure. Do you want me to do
this as part of this pr?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,841,2019-09-05T08:41:16Z,2019-11-18T11:56:34Z,2019-11-18T11:56:34Z,MERGED,True,2,2,2,https://github.com/leonardder,Specify calling convension for log callback,3,[],https://github.com/liblouis/liblouis/pull/841,https://github.com/leonardder,4,https://github.com/liblouis/liblouis/pull/841#issuecomment-528491473,"The calling convention for the logging callback is not specified. When using the Microsoft Visual C++ compiler in the past, the __stdcall calling convention was assumed. However, when building with clang-cl, __cdecl is used as a default instead. When on Windows, the python wrapper assumes __stdcall and therefore anything that tries to use logging crashes.
This pr makes sure that for the callback, the same calling convention is used as used for all exported functions.",I'm pretty sure I had the parentheses  wrong. They are now similar to these of the prototype that is expected by lou_registerTableResolver (i.e. the calling convention is within them).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,841,2019-09-05T08:41:16Z,2019-11-18T11:56:34Z,2019-11-18T11:56:34Z,MERGED,True,2,2,2,https://github.com/leonardder,Specify calling convension for log callback,3,[],https://github.com/liblouis/liblouis/pull/841,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/841#issuecomment-528737139,"The calling convention for the logging callback is not specified. When using the Microsoft Visual C++ compiler in the past, the __stdcall calling convention was assumed. However, when building with clang-cl, __cdecl is used as a default instead. When on Windows, the python wrapper assumes __stdcall and therefore anything that tries to use logging crashes.
This pr makes sure that for the callback, the same calling convention is used as used for all exported functions.",@leonardder don't worry about the changes to configure.ac. I'll do that when I cut the release. If we do it now as part of this PR then I might do it again at release time :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,841,2019-09-05T08:41:16Z,2019-11-18T11:56:34Z,2019-11-18T11:56:34Z,MERGED,True,2,2,2,https://github.com/leonardder,Specify calling convension for log callback,3,[],https://github.com/liblouis/liblouis/pull/841,https://github.com/leonardder,6,https://github.com/liblouis/liblouis/pull/841#issuecomment-534877492,"The calling convention for the logging callback is not specified. When using the Microsoft Visual C++ compiler in the past, the __stdcall calling convention was assumed. However, when building with clang-cl, __cdecl is used as a default instead. When on Windows, the python wrapper assumes __stdcall and therefore anything that tries to use logging crashes.
This pr makes sure that for the callback, the same calling convention is used as used for all exported functions.","@egli Just to confirm, I assume this fails because of clangformat? These test results are often hard to parse.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,841,2019-09-05T08:41:16Z,2019-11-18T11:56:34Z,2019-11-18T11:56:34Z,MERGED,True,2,2,2,https://github.com/leonardder,Specify calling convension for log callback,3,[],https://github.com/liblouis/liblouis/pull/841,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/841#issuecomment-534945875,"The calling convention for the logging callback is not specified. When using the Microsoft Visual C++ compiler in the past, the __stdcall calling convention was assumed. However, when building with clang-cl, __cdecl is used as a default instead. When on Windows, the python wrapper assumes __stdcall and therefore anything that tries to use logging crashes.
This pr makes sure that for the callback, the same calling convention is used as used for all exported functions.","I assume this fails because of clangformat?

Correct.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/842,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/842#issuecomment-529653347,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Apparently, the Travis build fails with the following message.
No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.
163
Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received
What could be going wrong?
Nothing seems to fail locally.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/842#issuecomment-529792924,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,@BueVest I just restarted that particular test and now all is green. Might have been a fluke,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/842#issuecomment-560155035,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"I think we should merge this PR now. It contains fully working back-translatable grade 0 and 1. Grade 2 will require some substantial development and a lot of work. So, I think it would be better to do that in another PR. Then we can start using g0 and g1 and gain some experience.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/842#issuecomment-560158758,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"@BueVest OK, we'll see what we can do. It is a bit late that you tell this and there are a lot of changes to review. Tomorrow is release day.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/842#issuecomment-560160114,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Had a quick look. Here are some comments:

 What's with the temporary test file?
 Why do we need separate ""bd"" tables? Couldn't both forward and backward translations be defined in the same tables?
 You have created quite a lot of duplication with the ""bd"" tables. Even if there is a need to have two sets of tables, could something be done about the duplication?
 Why do we need the ""bd"" tests?
 Changes were made to de-chardefs6.cti, but this was not reflected in the tests.
 I saw a TODO (""modify copyright message..."")",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/842#issuecomment-560169106,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"You wrote:
 * What's with the temporary test file?
Sorry, I thought I had already removed it. Didn’t I move it to the proper test directory?
 * Why do we need separate ""bd"" tables? Couldn't both forward and backward translations be defined in the same tables?
BD is for “bidirectional” (feel free to rename). So, they are in fact for both forward and backward translation. Some aspects of the Braille created by the original (non-BD) tables are less suited for back-translation, e.g. the lack of capital letters, the unconditional removal of some spaces, the use of the not so detailed accented letters etc. This corresponds to the difference between the Danish 6 dots grade 1 and 2 tables and their literary counterparts. The literary tables generate beautiful Braille for reading, but it is less suited for back-translation than the Braille created by the other tables. Hope it makes sense.
 * You have created quite a lot of duplication with the ""bd"" tables. Even if there is a need to have two sets of tables, could something be done about the duplication?
Yes, that would be nice indeed, but that would require a change of the file structure for the German tables. We could move the lines that can be shared into new files, which are then shared between the forward/literary tables and the bidirectional ones. However, if this change was to be made, I would rather make it in collaboration with the original table author, and not by myself. Currently, the chardefs file is shared, because I could make the necessary changes without affecting forward translation in the original tables.
 * Why do we need the ""bd"" tests?
The BD tests test the bidirectional tables in both directions. The other tests test the original tables, and only in the forward direction. The files could in theory be merged, but since they test two separate sets of tables, I think they should be separate yaml files.
 * Changes were made to de-chardefs6.cti, but this was not reflected in the tests.
The changes are primarily to the order of character definitions to ensure correct back-translation. They should not affect forward translation.

If there are any big problems with merging now, we can do it later. I just thought it would be a good idea to gain some broader user experience with the tables now. Especially, since people are currently using the “forward only” tables for back-translation with screen readers, e.g. NVDA, and flagging back-translation problems as bugs rather than request for new features. Perhaps we should flag it as an error to use a forward table for back-translation? Just thinking…",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/842#issuecomment-560362686,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Some aspects of the Braille created by the original (non-BD) tables are less suited for back-translation, e.g. the lack of capital letters, the unconditional removal of some spaces, the use of the not so detailed accented letters etc.

Yes, I assumed it was like the Danish tables, but still: couldn't they be combined in the same table? Or would that be too confusing?

We could move the lines that can be shared into new files, which are then shared between the forward/literary tables and the bidirectional ones. However, if this change was to be made, I would rather make it in collaboration with the original table author, and not by myself. Currently, the chardefs file is shared, because I could make the necessary changes without affecting forward translation in the original tables.

OK. I think it would be good to do this refactoring right from the start. This also gives us the opportunity to get some feedback from the original table author.

The BD tests test the bidirectional tables in both directions. The other tests test the original tables, and only in the forward direction. The files could in theory be merged, but since they test two separate sets of tables, I think they should be separate yaml files.

I think it might be easier to follow if the tests were grouped into the things that work the same in both versions of the tables and the things were the tables differ.

The changes [to de-chardefs6.cti] are primarily to the order of character definitions to ensure correct back-translation. They should not affect forward translation.

Hmm, are you sure? I thought I saw some actual differences?

If there are any big problems with merging now, we can do it later. I just thought it would be a good idea to gain some broader user experience with the tables now.

Yes, it sure is nice to get user feedback as soon as possible, however we shouldn't use time pressure as an excuse to do things in a sloppy way. If you would have done the PR a week ago I'm sure we would have been able to fix all the issues. I do trust you that you would fix the issues afterwards if we would merge the PR now, but still...

Perhaps we should flag it as an error to use a forward table for back-translation? Just thinking…

This is something that needs to be handled on the NVDA side ideally. Adding these kind of metadata based limitations into the library itself only works if you can select tables only through metadata, but this is not the case at the moment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/842#issuecomment-587174222,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"What needs to be done here?
Concerning Bert's suggestions above:


We could refactor, so that the ""core"" files contain all the common stuff, and the main tables contain the stuff specific to the individual tables. However, that would be some change to the original file structure, and I would rather not do that without the approval of the owner of the original tables. Is that you, @egli ?


Refactoring the yaml tests: @bertfrees , you apparently wanted to have the tests in fewer files and grouped to show the same things for the different tables. What is that supposed to look like? As far as I remember, we can run the same tests for multiple tables, but not with different flags for each table, e.g. forward for one table and both directions for another table, unless that has been changed in the code.


Any suggestions are welcome.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/842#issuecomment-587953870,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,@BueVest What happened in Git? There are two seemingly identical branches that got merged. Now the diff in Github has become unreadable. I cleaned it up locally and also rebased onto master. If you want I can push it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/842#issuecomment-587964184,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"You apparently wanted to have the tests in fewer files and grouped to show the same things for the different tables.

Yes. Well, it was just a suggestion. I think it might help in understanding how the tables differ. But I don't know how feasible it actually is. It depends on how much and what kind of differences there are. And you will indeed have to run the common tests in both directions for both tables.
Which brings us to one my others questions: Do you really need the two tables? Couldn't the backward behavior of your ""bidi"" table be combined with the forward behavior of the original table? Is the forward part of the ""bidi"" table really important to have? It's just a naive question. Maybe the tables are so different that they are not compatible at all? I don't know. I need to understand better how exactly the tables differ.
Let's assume for a moment the answer to the above question is yes (we do really need both directions of the new table). Couldn't the backward behaviors of the main and ""bidi"" tables be aligned? Some back-translation is always better than a back-translation that is not working at all, right?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/842#issuecomment-588140343,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,I think first and foremost we need a summary of things where the two tables differ.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,13,https://github.com/liblouis/liblouis/pull/842#issuecomment-588318463,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Yes, the forward part is indeed important. It creates Braille that can be back-translated, whereas the Braille from the original tables can’t be back-translated. There are some distinct differences of which I have already mentioned the marking of capital letters and the processing of accented letters.

If the caller could set a flag, which could then be checked by various lines in the tables, then we could probably merge the two sets (#ifdef someFlag/ #ifndef someflag / #endif), but I don’t see how this could currently be done.

The whole thing about the different flavours of Braille within the same Braille code and why some flavours are more back-translatable than others is all about the different way we use Braille, i.e. reading books (possibly on paper) vs. reading and writing documents with a screen reader or on a Braille note-taker. It is a discussion which is probably appropriate to most languages, except where they have deliberately changed the Braille code to make back-translation easier, e.g. UEB.

If you are interested, I will be happy to try to explain it to you in more details, but it will probably be easier over Skype than through a PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/842#issuecomment-588330028,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"So what about the second part of my question: Could the backward behavior of the main table be the same as that from the bidi table?
Maybe I just don't know enough details, but from my vague understanding of it it sounds like both variants of the braille are not incompatible. One just contains more information than the other (like information of capitals) that make the back-translation better.
If you want to do a Skype call to discuss this PR, that is fine for me. However I think we need some written explanation of the table anyway. It's interesting for me, but I'm not the only person who needs to know. It's also and primarily the original author of the table (Christian's colleague), and other German braille people, that need to understand.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/842#issuecomment-588991927,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Regarding the tests, I gave it another thought: for dictionary tests it doesn't matter that there are a lot of files with possibly duplication. They are not meant as documentation. But it would be nice to have a YAML file that explains the differences between the main German braille code and the variant optimized for back-translation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,16,https://github.com/liblouis/liblouis/pull/842#issuecomment-591551302,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"So what about the second part of my question: Could the backward behavior of the main table be the same as that from the bidi table?

 Maybe I just don't know enough details, but from my vague understanding of it it sounds like both variants of the braille are not incompatible. One just contains > more information than the other (like information of capitals) that make the back-translation better.
Yes, you are right. A great part of the work is simply making the tables produce Braille which contains as much information as possible while still following the rules.

I am not quite sure, but the original tables could probably be made to perform the same back-translation as the BD tables. In fact, they would probably perform better now than before anyway, because I have changed the order of character definitions, which are common to the two sets of tables.

On the other hand, as far as I remember, the original tables have some weird work-around to get rid of unwanted capsigns. That might have to be re-worked quite a bit for proper back-translation within the same table.

I could describe the differences in forward translation between the two table sets within the bd tables themselves., provided that back-translation is simply not defined for the original tables. However, describing the whole philosophy of why you would want two sets of tables? That is somewhat harder to describe in few words. I guess it is something, which is perhaps obvious to Braille users, but perhaps not so much to many others. That is why I suggested a Skype call. If I am to describe it, I need to understand what it is that is so difficult to understand about it, so to speak.

Also, such an explanation should probably not be hidden away in a specific table, but rather be in the manual in the section about back-translation. It could be relevant for work on back-translation in any language that has advanced grade 2 or grade 3, and where the Braille code is not specifically made for automatic back-translation.

Hope it makes sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/842#issuecomment-591585157,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"I could describe the differences in forward translation between the two table sets within the bd tables themselves, provided that back-translation is simply not defined for the original tables.

Yes! That's exactly what I'm after.

[...] describing the whole philosophy of why you would want two sets of tables? [...] If I am to describe it, I need to understand what it is that is so difficult to understand about it, so to speak.

It is not so difficult to understand at all. I'm just asking a lot of questions (sometimes deliberately naive) to make sure that we are doing it the best possible way. For example I think whether we should try to handle both variants of the braille code within the main table (or both tables) when back-translating is a valid question. If it is indeed doable it would be a major improvement. You wouldn't need to figure out which table to select, you can just pick one and it would work.
Anyway, I'm not asking you to describe the whole philosophy of the two sets of table. I think it would indeed be a valuable addition, and useful for developing other tables, but for now all I'm asking for is a proper description of the behavior.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/842#issuecomment-591586405,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"By the way can I push the cleaned up branch that I have locally or not? I want to be able to look at the combined diff on Github, that is currently not possible.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,19,https://github.com/liblouis/liblouis/pull/842#issuecomment-591666863,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Yes, of course you can.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/842#issuecomment-591669705,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"OK, pushed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,21,https://github.com/liblouis/liblouis/pull/842#issuecomment-592487126,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Should I attach a note to the original g0-2 tables saying something about them being literary tables and not meant for back-translation? I can see that at least NVDA still selects them for input, i.e. back-translation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/842#issuecomment-592491707,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Should I attach a note to the original g0-2 tables saying something about them being literary tables and not meant for back-translation?

OK makes sense.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,23,https://github.com/liblouis/liblouis/pull/842#issuecomment-592510097,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"> +# - Gross-/Kleinschreibung wird nicht berücksichtigt (d.h. für
> +#   Abkürzungen u.ä. braucht es Vorprogramm)
> +# - Akzente: Hinweis auf die beiden Tabellen (bis jetzt nur als
> +#   Kommentar in de-g0.utb)

 This text needs to be corrected.
Hmm, yes, I did consider it, but what does it actually mean, and what should we say instead, or should I just remove it?
> +#-name: Deutsche Basisschrift
> +#-display-name: German uncontracted braille

 This metadata needs to be updated.
Then, what do you want instead? Should I just add (bidi)?

In  <#842 (comment)> tables/de-g0-bd.utb:
> +# must include display table directly to establish Character/dots associations.
> +include de-eurobrl6.dis

 This is a bit fishy.
Then, what do you want? Some display statements need to be there to define the dot patterns. The characters themselves have other definitions in a literary (none-computer Braille) table.

In  <#842 (comment)> tables/de-chardefs6.cti:
> -# liblouis: Character definitions for german tables
> +# liblouis: Character definitions for german tables (bidirectional)

 Are we sure that the changes to de-chardefs6.cti don't affect the main table?
Yes. All tests pass, or did until we rebased.

In  <#842 (comment)> tables/de-g1-bd-core.cti:
> +# liblouis: German grade 1 braille (bidirectional)

 This table should be merged with de-g1-core.cti
I agree, but the lines that are different between the two tables would then have to be moved to the main tables. This is a change to the structure of the original tables, so I think I must have the approval of the owner before doing this refactoring.

Actually, I originally also made the Danish tables that way, with common core files, but I was then asked to split the tables and keep them separate, even though they share most lines, like the German tables.

I suggest we keep them separate for now and then make it a milestone for the next release, perhaps both for the German and the Danish Tables.
>  +noback nocross    au         16                           # 1 #

 nocross should be changed to nocross always (this is because I have rebased the branch)
No problem.
> #  Copyright (C) 2018 SBS Schweizerische Bibliothek für Blinde, Seh- und Lesebehinderte
> +#  Copyright (C) 2020 Bue Vester-Andersen

 A copyright line is not really appropriate in case of an addition of a single comment.
No problem, I will remove it. Should there be anything else to indicate that I made changes to the file?

In  <#842 (comment)> tables/de-g0-bd-core.uti:
> +# liblouis: German grade 0 braille (bidirectional)

 We should try to remove the duplication between this file and de-g0-core.uti.
Agree, but let us make it an item for the next release.

In tables/Makefile.am <#842 (comment)> :
…
> +       de-g0-bd-core.uti \
> +       de-g0-bd.utb \

""bidi"" makes more sense as an abbreviation of ""bidirectional"" than ""bd"" so I think I will > renamed the files. But you don't have to worry about that Bue.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,24,https://github.com/liblouis/liblouis/pull/842#issuecomment-592644662,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"I'm not sure what it should be. You tell me :-) No, just adding ""bidi"" is way to criptic. It needs to be something understandable. Maybe ""German uncontracted braille, back-translatable""?
How about simply “bidirectional”, which is what “bidi” stands for anyway?

I think we need some “Liblouis terms” to describe these things properly. With the Danish tables, the bidirectional ones came first, so “lit” was appended to the other ones, which is also a bit cryptic.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,25,https://github.com/liblouis/liblouis/pull/842#issuecomment-592739986,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"In  <#842 (comment)> tables/de-chardefs6.cti:
>> -# liblouis: Character definitions for german tables
>> +# liblouis: Character definitions for german tables (bidirectional)
>
> Yes. All tests pass, or did until we rebased.

 Yes, I'm sure the tests pass, but the tests aren't that great. We only have a dictionary test. That > means only words are tested. Anything special, like punctuation, is not covered.

 I'm just looking at the file and while a lot of the changes are things that you just moved around, or where you added a noback, there also seem to be some actual changes in the dot patterns.
I have changed some characters from their computer Braille representation to their actual literary representation where I could do this without disrupting the original tables. This was necessary to provide backtranslation for these characters.

If I am to merge the tables and change the structure, I will have to make proper tests for the original tables anyway to make sure I don’t break anything in the process. I will see to it before the next release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,26,https://github.com/liblouis/liblouis/pull/842#issuecomment-592749373,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Yes, I'm sure the tests pass, but the tests aren't that great. We only have a dictionary test. That means only words are tested. Anything special, like punctuation, is not covered.

 I'm just looking at the file and while a lot of the changes are things that you just moved around, or where you added a noback, there also seem to be some actual changes in the dot patterns.
Ok, I actually just found something:

With the original tables without any additional display table, accented letters now translate as ⠈letter, not “letter, i.e. ⠈a, not “a. This is an example of a dot pattern that needs to be mapped by an included display file, which I apparently forgot to do with the original tables.

It actually should have been caught by the dictionary test, which contains words with accented letters. However, the yaml test file specifies its own display file and thereby masks the problem.

I should include the display file in the original tables, same as in the bidi tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,27,https://github.com/liblouis/liblouis/pull/842#issuecomment-592772670,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Nope. Wrong thinking :-) It is not a problem in the translation table. It is a problem in how you provide the braille input for a translation. The YAML test does it correctly: the braille encoding in the test matches the specified display table. You need to do the same.
Then, what solution would you suggest? Please, suggest something concrete instead of just saying “no”.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,28,https://github.com/liblouis/liblouis/pull/842#issuecomment-592935967,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"I've added this to the 3.13 milestone because I believe we can solve the remaining issues, apart from the refactoring stuff and the addition of tests, but we agreed to tackle those next time.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,29,https://github.com/liblouis/liblouis/pull/842#issuecomment-592954959,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"It's very simple. It's a matter of encoding/decoding braille correctly when interfacing with Liblouis. I'm not sure how you are invoking Liblouis, but if you either specify a display table and encode/decode your braille according to that table, or if you use the dotsIO mode, and you still get an unexpected result, then there is a problem. Otherwise there is no problem.
Yes, I agree, and all is good and well, as long as the caller specifies a display table, which, unfortunately, they don’t at the moment. I know for certain that both the HIMS note-takers and NVDA call liblouis without specifying a display table, and I am almost sure about JAWS, even though I don’t have access to the source code. Personally, I test these things with lou_trace, with or without a display table.

For a long term solution, I would suggest that the caller should be required to specify a display table, or that the table can specify a “default display table” to use with that table. No, this is not mixing the display opcode back with the others. It is simply a way for the table author to specify the default Braille representation for the table. This is typically guided by nationality and language. For Danish it would be da-dk-octobraille.dis. For German, it would typically be de-eurobrl6.dis.

Yes, I am also looking forward to the day when we all use Unicode Braille for our embossers and notetakers, but, unfortunately, that is not the present situation.

For a short term solution, I still suggest we include de-eurobrl6.dis in the German tables, even if it is “wrong thinking”. Then, they still work without specifying a display table explicitly, which is unfortunately required at the moment. If you have a better practical solution for now, please, tell me about it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/BueVest,30,https://github.com/liblouis/liblouis/pull/842#issuecomment-593149350,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"So if we're just talking about screen readers, they must be specifying a display table or using the dotsIO mode, right? Otherwise they have no idea which dots they are sending to the braille display, and the protocol apparently requires it.
Yes, perhaps. I am not sure, but it would be interesting to look into at some time.
 Even if the situation with embossers and note-takers is like it is, my standpoint is still that any software that makes use of Liblouis, if it can update to new versions of Liblouis, can also be changed to specify display tables.
Yes, of course they can, but we should then do the following:

1.	Announce the change of policy clearly, both in the NEWS file and the manual.
2.	Flag it as an error or at least a warning, if a display table is not specified.
3.	Alternatively, let the table author specify a default display table to be used, either as an opcode or as metadata, which can be read and used by Liblouis itself.

BTW: Is there anything more for me to do in this PR?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,31,https://github.com/liblouis/liblouis/pull/842#issuecomment-593155286,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"Alternatively, let the table author specify a default display table to be used, either as an opcode or as metadata, which can be read and used by Liblouis itself.

Nice try.

BTW: Is there anything more for me to do in this PR?

No, I can't think of anything. It is almost ready and I we should be able to handle the remaining things ourselves. I've created an issue for the next release, you probably saw that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,842,2019-09-05T12:26:52Z,2020-03-02T14:24:31Z,2020-03-02T15:50:08Z,MERGED,True,21680,21,19,https://github.com/BueVest,Buevest german backtrans,46,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/842,https://github.com/bertfrees,32,https://github.com/liblouis/liblouis/pull/842#issuecomment-593404703,Still preliminary work. G0 is about ready for testing in a wider context. G1 should be relatively easy to add.,"You should probably read the whole discussion. We talked about all of these things.
Regarding 2: see #842 (comment) and below.
And there is this new issue: #911",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,843,2019-09-05T14:13:49Z,2019-09-06T06:55:18Z,2019-11-26T13:47:44Z,MERGED,True,5,37,3,https://github.com/egli,Use a modern version of libyaml,1,"['enhancement', 'build system']",https://github.com/liblouis/liblouis/pull/843,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/843,"Version 0.2.2 of libyaml includes the changes that are in the libyaml_mingw patch, so applying that patch is no longer needed. This simplifies both the travis build process and the Dockerfile.","Version 0.2.2 of libyaml includes the changes that are in the libyaml_mingw patch, so applying that patch is no longer needed. This simplifies both the travis build process and the Dockerfile.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,844,2019-09-06T08:19:10Z,2019-11-19T13:50:53Z,2020-11-03T16:16:28Z,CLOSED,False,47,22,2,https://github.com/egli,Major overhaul of the Dockerfile to create a mingw binary distribution,4,"['refactoring', 'build system']",https://github.com/liblouis/liblouis/pull/844,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/844,"base on newest Debian
use best practices to create fewer layers, etc
the image now basically just provides a mingw build environment with libyaml pre-installed
the CMD which is executed when running the image will build, test and zip up liblouis

Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64
This has the potential to simplify the mingw travis build quite a bit. We could push the image to docker hub and then use it in the travis build.
For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.","base on newest Debian
use best practices to create fewer layers, etc
the image now basically just provides a mingw build environment with libyaml pre-installed
the CMD which is executed when running the image will build, test and zip up liblouis

Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64
This has the potential to simplify the mingw travis build quite a bit. We could push the image to docker hub and then use it in the travis build.
For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,844,2019-09-06T08:19:10Z,2019-11-19T13:50:53Z,2020-11-03T16:16:28Z,CLOSED,False,47,22,2,https://github.com/egli,Major overhaul of the Dockerfile to create a mingw binary distribution,4,"['refactoring', 'build system']",https://github.com/liblouis/liblouis/pull/844,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/844#issuecomment-528763808,"base on newest Debian
use best practices to create fewer layers, etc
the image now basically just provides a mingw build environment with libyaml pre-installed
the CMD which is executed when running the image will build, test and zip up liblouis

Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64
This has the potential to simplify the mingw travis build quite a bit. We could push the image to docker hub and then use it in the travis build.
For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.","Oh, and case you're wondering: For some reason unbeknownst to me four test cases do not pass at the moment. That's why there is the make check WINE=wine64 || cat tests/test-suite.log. Not sure that is so clever. Maybe we should just die if the tests fail. Anyway I have no idea why the tests fail with wine. Can you make any sense of it?
===========================================
   Liblouis 3.11.0: tests/test-suite.log
===========================================

# TOTAL: 171
# PASS:  167
# SKIP:  0
# XFAIL: 0
# FAIL:  4
# XPASS: 0
# ERROR: 0

.. contents:: :depth: 2

FAIL: braille-specs/hu-hu-g1_harness
====================================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /usr/src/liblouis/tables\hu.tbl (18)
include /usr/src/liblouis/tables\hu.tbl:1: error: invalid escape sequence '\h'
Cannot resolve table '/usr/src/liblouis/tableshu.tbl'
LOUIS_TABLEPATH=/usr/src/liblouis/tables
lou_checkyaml.exe:./braille-specs/hu-hu-g1_harness.yaml:6: Error in table checkyaml_inline_table_at_line_1,/usr/src/liblouis/tables\hu.tbl
FAIL braille-specs/hu-hu-g1_harness.yaml (exit status: 1)

FAIL: braille-specs/hu-hu-g2_harness
====================================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /usr/src/liblouis/tables\hu-hu-g2.ctb (18)
include /usr/src/liblouis/tables\hu-hu-g2.ctb:1: error: invalid escape sequence '\h'
Cannot resolve table '/usr/src/liblouis/tableshu-hu-g2.ctb'
LOUIS_TABLEPATH=/usr/src/liblouis/tables
lou_checkyaml.exe:./braille-specs/hu-hu-g2_harness.yaml:6: Error in table checkyaml_inline_table_at_line_1,/usr/src/liblouis/tables\hu-hu-g2.ctb
FAIL braille-specs/hu-hu-g2_harness.yaml (exit status: 1)

FAIL: braille-specs/mn-MN_harness
=================================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /usr/src/liblouis/tables\mn-MN-g1.utb (18)
include /usr/src/liblouis/tables\mn-MN-g1.utb:1: error: invalid escape sequence '\m'
Cannot resolve table '/usr/src/liblouis/tablesmn-MN-g1.utb'
LOUIS_TABLEPATH=/usr/src/liblouis/tables
lou_checkyaml.exe:./braille-specs/mn-MN_harness.yaml:7: Error in table checkyaml_inline_table_at_line_1,/usr/src/liblouis/tables\mn-MN-g1.utb
FAIL braille-specs/mn-MN_harness.yaml (exit status: 1)

FAIL: braille-specs/spaces
==========================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /usr/src/liblouis/tables\ga-g1.utb (17)
include /usr/src/liblouis/tables\ga-g1.utb:1: error: invalid escape sequence '\g'
Cannot resolve table '/usr/src/liblouis/tablesga-g1.utb'
LOUIS_TABLEPATH=/usr/src/liblouis/tables
lou_checkyaml.exe:./braille-specs/spaces.yaml:837: Error in table checkyaml_inline_table_at_line_1,/usr/src/liblouis/tables\ga-g1.utb
FAIL braille-specs/spaces.yaml (exit status: 1)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,844,2019-09-06T08:19:10Z,2019-11-19T13:50:53Z,2020-11-03T16:16:28Z,CLOSED,False,47,22,2,https://github.com/egli,Major overhaul of the Dockerfile to create a mingw binary distribution,4,"['refactoring', 'build system']",https://github.com/liblouis/liblouis/pull/844,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/844#issuecomment-528766372,"base on newest Debian
use best practices to create fewer layers, etc
the image now basically just provides a mingw build environment with libyaml pre-installed
the CMD which is executed when running the image will build, test and zip up liblouis

Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64
This has the potential to simplify the mingw travis build quite a bit. We could push the image to docker hub and then use it in the travis build.
For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.",If we really like this it should probably be documented somewhere,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,844,2019-09-06T08:19:10Z,2019-11-19T13:50:53Z,2020-11-03T16:16:28Z,CLOSED,False,47,22,2,https://github.com/egli,Major overhaul of the Dockerfile to create a mingw binary distribution,4,"['refactoring', 'build system']",https://github.com/liblouis/liblouis/pull/844,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/844#issuecomment-528810844,"base on newest Debian
use best practices to create fewer layers, etc
the image now basically just provides a mingw build environment with libyaml pre-installed
the CMD which is executed when running the image will build, test and zip up liblouis

Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64
This has the potential to simplify the mingw travis build quite a bit. We could push the image to docker hub and then use it in the travis build.
For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.","Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64


Would be nice if these line were replaced by some script or a make command I think.
By the way is -f a new switch? I think so. I think it must be why I'm using the gtar command.
One issue is that your method does not take into account the .dockerignore. You just add the whole current working directory as a volume. Why not just ADD it? As far as I can see the way it works now is that the whole current working directory (filtered by .dockerignore) is sent as a ZIP to the docker server anyway, but you're not using it.

For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.

Hmm, why couldn't it be done in a single image?
The original purpose of the Dockerfile.dev file was to provide an environment that contains everything you need to do Liblouis development (e.g. to compile or cross-compile for all platforms). This is also the reason why I didn't include the CMD and instead put this in Makefile.am. I liked this approach. The only problem I think was that if you wanted to run the command inside the docker container, you first needed to make sure the Makefile was there, hence these lines:
RUN ./autogen.sh
RUN ./configure

Maybe the solution is simply to move the commands to some bash script, or to make it more convenient, to some other Makefile that we can then include both in Makefile.am and in an initial Makefile that we check in to Git.
Anyway, I guess I'm not totally against having two separate images. My main concern is that putting the CMD in the Dockerfile makes it slightly less DRY.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,844,2019-09-06T08:19:10Z,2019-11-19T13:50:53Z,2020-11-03T16:16:28Z,CLOSED,False,47,22,2,https://github.com/egli,Major overhaul of the Dockerfile to create a mingw binary distribution,4,"['refactoring', 'build system']",https://github.com/liblouis/liblouis/pull/844,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/844#issuecomment-528875249,"base on newest Debian
use best practices to create fewer layers, etc
the image now basically just provides a mingw build environment with libyaml pre-installed
the CMD which is executed when running the image will build, test and zip up liblouis

Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64
This has the potential to simplify the mingw travis build quite a bit. We could push the image to docker hub and then use it in the travis build.
For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.","Would be nice if these line were replaced by some script or a make command I think.

Agreed

By the way is -f a new switch? I think so.

Not that I'd know of

One issue is that your method does not take into account the .dockerignore. You just add the whole current working directory as a volume. Why not just ADD it?

I do not want to add the source of liblouis to the image. I just want to use the image to build the source that I have locally. The building is at the time I run the image not when I build the image. Hence the mounting instead of the ADDing.

As far as I can see the way it works now is that the whole current working directory (filtered by .dockerignore) is sent as a ZIP to the docker server anyway, but you're not using it.

Yes, granted not so nice.


For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.



Hmm, why couldn't it be done in a single image?

If that is possible I'm all for it. I just thought it would be best not to mix the two things. Especially since I pre-compile libyaml in the image, so presumably I would have both builds in the same image. OK, that might be doable.

The original purpose of the Dockerfile.dev file was to provide an environment that contains everything you need to do Liblouis development (e.g. to compile or cross-compile for all platforms). This is also the reason why I didn't include the CMD and instead put this in Makefile.am. I liked this approach. The only problem I think was that if you wanted to run the command inside the docker container, you first needed to make sure the Makefile was there, hence these lines:


Maybe the solution is simply to move the commands to some bash script, or to make it more convenient, to some other Makefile that we can then include both in Makefile.am and in an initial Makefile that we check in to Git.


Anyway, I guess I'm not totally against having two separate images. My main concern is that putting the CMD in the Dockerfile makes it slightly less DRY.

IMHO there are two stages to the build: First you compile all the dependencies and second you compile, test and package liblouis itself. The first step is really independent of the current liblouis source. That's why I separated the building, testing and packaging into the CMD. Now granted that this would probably be nicer in a script. The problem is that the two steps still are quite dependent on each other, the liblouis build needs to know where the yaml lib was installed, etc. For that reason I wanted to keep them kind of close to each other, i.e. in the same (Docker)file.
And note that this is more of an exploration than a fixed idea of where I want to go.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,844,2019-09-06T08:19:10Z,2019-11-19T13:50:53Z,2020-11-03T16:16:28Z,CLOSED,False,47,22,2,https://github.com/egli,Major overhaul of the Dockerfile to create a mingw binary distribution,4,"['refactoring', 'build system']",https://github.com/liblouis/liblouis/pull/844,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/844#issuecomment-528883604,"base on newest Debian
use best practices to create fewer layers, etc
the image now basically just provides a mingw build environment with libyaml pre-installed
the CMD which is executed when running the image will build, test and zip up liblouis

Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64
This has the potential to simplify the mingw travis build quite a bit. We could push the image to docker hub and then use it in the travis build.
For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.","I do not want to add the source of liblouis to the image. I just want to use the image to build the source that I have locally. The building is at the time I run the image not when I build the image. Hence the mounting instead of the ADDing.

But it's a ""throw-away"" image so it really doesn't matter. And if it would not be a throw-away image you could use the ""builder"" feature.
I'm afraid that not using the .dockerignore file is going to cause problems. And another, more important reason to not use a volume is that the container will contain a copy and what happens in the container will stay in the container. This is one of the main benefits of using Docker, right? It means that I can just build the windows binaries without having to clean and reconfigure the project in order to start compiling for my own platform again.

The problem is that the two steps still are quite dependent on each other, the liblouis build needs to know where the yaml lib was installed, etc. For that reason I wanted to keep them kind of close to each other, i.e. in the same (Docker)file.

Yes, that could indeed be a reason for keeping them close to each other. Because passing the CPPFLAGS='-I/usr/build/libyaml/include/' LDFLAGS='-L/usr/build/libyaml/lib/' to docker run might look strange. Could we make them into environment variables maybe?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,844,2019-09-06T08:19:10Z,2019-11-19T13:50:53Z,2020-11-03T16:16:28Z,CLOSED,False,47,22,2,https://github.com/egli,Major overhaul of the Dockerfile to create a mingw binary distribution,4,"['refactoring', 'build system']",https://github.com/liblouis/liblouis/pull/844,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/844#issuecomment-555516176,"base on newest Debian
use best practices to create fewer layers, etc
the image now basically just provides a mingw build environment with libyaml pre-installed
the CMD which is executed when running the image will build, test and zip up liblouis

Mount the liblouis source directory when running the image as follows:
cd ~/src/liblouis
docker build -f Dockerfile.dev -t liblouis/mingw64 .
docker run -v `pwd`:/usr/src/liblouis liblouis/mingw64
This has the potential to simplify the mingw travis build quite a bit. We could push the image to docker hub and then use it in the travis build.
For win32 I imagine we could create a separate slightly different image that provides a build environment for 32 bit.",While this PR is still sort of a step forward for the win Dockerfile in reality it has been superseded by #853.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,845,2019-09-07T09:43:47Z,2019-09-09T06:55:36Z,2019-09-09T06:55:45Z,MERGED,True,14,1,2,https://github.com/BueVest,Buevest#631,2,[],https://github.com/liblouis/liblouis/pull/845,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/845,Should resolve #631.,Should resolve #631.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,845,2019-09-07T09:43:47Z,2019-09-09T06:55:36Z,2019-09-09T06:55:45Z,MERGED,True,14,1,2,https://github.com/BueVest,Buevest#631,2,[],https://github.com/liblouis/liblouis/pull/845,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/845#issuecomment-529325580,Should resolve #631.,Thanks Bue,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,847,2019-09-08T09:37:34Z,2019-11-05T08:42:50Z,2019-11-05T08:42:50Z,MERGED,True,0,2,1,https://github.com/sthibaul,Remove explicit detection of pkg-config,1,['build system'],https://github.com/liblouis/liblouis/pull/847,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/847,"It is not actually used, and even if it was, PKG_CHECK_MODULES already does
the detection, and with support for cross-compilation, so we should not try
to detect pkg-config by hand, it only reduces support.","It is not actually used, and even if it was, PKG_CHECK_MODULES already does
the detection, and with support for cross-compilation, so we should not try
to detect pkg-config by hand, it only reduces support.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/850,Fixes #849,Fixes #849,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/850#issuecomment-529538279,Fixes #849,"Well, that is embarrassing. Thanks for the patch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/aaclause,3,https://github.com/liblouis/liblouis/pull/850#issuecomment-529543726,Fixes #849,"Ah. Remaining a small problem.
$ lou_translate fr-bfu-comp8.utb ""filename with space""
lou_translate: cannot open filename with space for reading: No such file or directory

The error message should be:
lou_translate: cannot open 'filename with space' for reading: No such file or directory.
Is there a clean solution to add "" or ' if space/'/"" is present in the file name?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/aaclause,4,https://github.com/liblouis/liblouis/pull/850#issuecomment-532473204,Fixes #849,"About my previous comment, I'd like to add something like this:
Show/hide
char *
quoteFilename(char *filename) {
	if (!filename) return NULL;
	size_t sz = strlen(filename) * sizeof(char *);
	char c[] = ""'"";
	char *quotedFilename = malloc(sz);
	memset(quotedFilename, 0, sz);
	if (!(strchr(filename, ' ') || strchr(filename, '\'') || strchr(filename, '""'))){
		strcpy(quotedFilename, filename);
		return quotedFilename;
	}
	if (strchr(filename, '\'')) c[0] = '""';
	strcpy(quotedFilename, c);
	strcat(quotedFilename, filename);
	strcat(quotedFilename, c);
	return quotedFilename;
}

And... in main():
			char *quotedFilename = quoteFilename(argv[optind + 1]);
			fprintf(stderr, ""%s: cannot open %s for reading: No such file or directory\n"",
					program_name, quotedFilename);
			free(quotedFilename);


Is it overkill?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/850#issuecomment-532621966,Fixes #849,No I guess it's fine. Needs some documentation though. @egli What do you think?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/850#issuecomment-532665627,Fixes #849,"Hm, now I get it. @MikeGray-APH added an option to pass a filename to translate, but this was never documented. And it segfaults if the file cannot be opened. I guess we have two options

Fix the behaviour and document it
remove the behaviour as it was never documented

@Andre9642 were you actually using the undocumented feature?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/850#issuecomment-532693457,Fixes #849,"So I implemented the behaviour that @bertfrees wants locally. But as you might know I like it simple, so I think the proposal to remove the behaviour is still the best.
In what way does an optional file argument help? OK you can translate a file, but can't you do that with redirection? Is this a problem that only exists on non-unix platforms?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/850#issuecomment-532694313,Fixes #849,"Is this a problem that only exists on non-unix platforms?

This was indeed my first thought. And maybe it makes it easier to invoke the command from other environments.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/aaclause,9,https://github.com/liblouis/liblouis/pull/850#issuecomment-533330352,Fixes #849,"@Andre9642 were you actually using the undocumented feature?

To be honest, I accidentally discovered it a few weeks ago. :)

But as you might know I like it simple, so I think the proposal to remove the behaviour is still the best.

I agree. I don't see any problem (including on Windows).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/850#issuecomment-534471888,Fixes #849,"OK, I pushed what I have. IMHO the code is a bit more clear :-). Also the extra file argument is documented now.
So in theory this could go in and would fix #849. However there is the larger question how uniform the tools should be which I hope to address in #862.
In the interest of simplicity however I would argue that the best solution still is to simply remove the feature. I'm going to ask @MikeGray-APH if he wants and or needs this feature.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/850#issuecomment-553453855,Fixes #849,Sent a mail to Mike asking him if he minds the removal,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/850#issuecomment-555034979,Fixes #849,Sent another mail to Mike,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,850,2019-09-09T15:22:02Z,2019-11-27T10:31:35Z,2019-11-27T15:04:27Z,CLOSED,False,21,19,1,https://github.com/aaclause,lou_translate: prevents segmentation fault when invalid file is provided,3,"['bug', 'needs fixup']",https://github.com/liblouis/liblouis/pull/850,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/850#issuecomment-559029000,Fixes #849,Superseded by #872,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,851,2019-09-10T09:56:34Z,2019-11-27T14:43:49Z,2019-11-27T15:04:08Z,MERGED,True,12,10,5,https://github.com/egli,Move lou_compare to tests and rename to compare_ueb_test_data,2,['refactoring'],https://github.com/liblouis/liblouis/pull/851,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/851,"Since lou_compare is just used for testing it makes no sense to install it.
Well, let's say we should open a discussion whether we really need to install it.
Fixes #846","Since lou_compare is just used for testing it makes no sense to install it.
Well, let's say we should open a discussion whether we really need to install it.
Fixes #846",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,851,2019-09-10T09:56:34Z,2019-11-27T14:43:49Z,2019-11-27T15:04:08Z,MERGED,True,12,10,5,https://github.com/egli,Move lou_compare to tests and rename to compare_ueb_test_data,2,['refactoring'],https://github.com/liblouis/liblouis/pull/851,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/851#issuecomment-529932640,"Since lou_compare is just used for testing it makes no sense to install it.
Well, let's say we should open a discussion whether we really need to install it.
Fixes #846","OK, I don't really care about the name. I just wanted to drop the lou_ prefix.
The tool is generic, yes, but it also duplicates much of the functionality of the yaml based tests, so I think de-emphasising the generality of the tool is a good thing.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,851,2019-09-10T09:56:34Z,2019-11-27T14:43:49Z,2019-11-27T15:04:08Z,MERGED,True,12,10,5,https://github.com/egli,Move lou_compare to tests and rename to compare_ueb_test_data,2,['refactoring'],https://github.com/liblouis/liblouis/pull/851,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/851#issuecomment-532419661,"Since lou_compare is just used for testing it makes no sense to install it.
Well, let's say we should open a discussion whether we really need to install it.
Fixes #846","The fact that there is duplication in the tests is a different issue to me. This should be addressed properly: see #268.
The main goal of this PR is to make it clear that lou_checkyaml is the recommended way to run tests, and by removing it from the tools directory I think we've already accomplished that.
I'm fine with giving it a less generic name, but mainly because it's difficult to find a generic name that is not totally meaningless. I would also like to drop ""compare"" from the name because in order to compare you need two things. Something like ""check_ueb_test_data"" or ""check_ueb_test"" is better I think.
By the way we should check with Mike just to be sure because here he explicitly asked that ""the lou_compare tool remains"". Not sure if renaming and not installing it would be OK.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,851,2019-09-10T09:56:34Z,2019-11-27T14:43:49Z,2019-11-27T15:04:08Z,MERGED,True,12,10,5,https://github.com/egli,Move lou_compare to tests and rename to compare_ueb_test_data,2,['refactoring'],https://github.com/liblouis/liblouis/pull/851,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/851#issuecomment-534484590,"Since lou_compare is just used for testing it makes no sense to install it.
Well, let's say we should open a discussion whether we really need to install it.
Fixes #846",We need to talk to @MikeGray-APH before acting in this is any way.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,851,2019-09-10T09:56:34Z,2019-11-27T14:43:49Z,2019-11-27T15:04:08Z,MERGED,True,12,10,5,https://github.com/egli,Move lou_compare to tests and rename to compare_ueb_test_data,2,['refactoring'],https://github.com/liblouis/liblouis/pull/851,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/851#issuecomment-555035211,"Since lou_compare is just used for testing it makes no sense to install it.
Well, let's say we should open a discussion whether we really need to install it.
Fixes #846",Sent a mail to Mike asking for a call,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/853,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.","This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/853#issuecomment-533491631,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.",I presume this replaces #844?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/853#issuecomment-548298441,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.",Just as a reference: @bertfrees posted this related gist a long time ago.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/853#issuecomment-557087361,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.","So, I finally managed to build and run the tests under 32 bit. I tried literally everything:

w/o wine prefix
with libwine:386
with other host triplets -> Bad exe format
install an X Virtual Frame Buffer (Xvfb) as it keept complaning about a missing DISPLAY

as it turns out it probably tries to invoke a graphical debugger when it segfaults
so the missing DISPLAY is just a subsequent error of the original segfault



It kept crashing in lou_chackyaml. As it turns out the only way to make it work ATM is to compile liblouis with -O0, i.e. drop all compiler optimizations. I guess there must be a bug in lou_checkyaml somewhere.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/853#issuecomment-557155109,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.",Cool! BTW I was still planning to do the bisect. I guess now it's easy to do with this Dockerfile.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/853#issuecomment-558996567,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.","A much cleaner solution IMO is to only send the .git folder to Docker. Doesn't necessarily need to be part of this PR though.

I was just thinking about this when having a shower (where I always have the best ideas :-). And again it occurred to me that I do not like this idea. First I think it's too complicated, not simple. OK you can argue that is subjective. But secondly you can no longer build an image from an tree that has not been checked in.
Does it really matter if too much is sent to docker build? In the end the image is just a throw-away and we just extract the build artefacts anyway.
And for a release the build should be done from a clean checkout anyway.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/853#issuecomment-558997640,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.","Make sure that lou_checkyaml has libyaml embedded like it used to be. According to Christian this is not the case anymore.

All I know is that libyaml.dll is not included in the zip file. But AFAIK I did not change anything how the liblouis tools are built, so if it was statically linked in before it should be statically linked in now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/853#issuecomment-559012233,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.","First I think it's too complicated, not simple.

It's not complicated :-). You only need one extra line in the Dockerfile and the result is that it greatly simplifies the .dockerignore (and it won't have to be updated ever).

secondly you can no longer build an image from an tree that has not been checked in.

What do you mean? All you need to make sure of is that your changes are in the index. I don't see how that is a problem. If anything I would say it even gives you more power because you can very easily enable/disable certain changes by simply staging/unstaging them.

Does it really matter if too much is sent to docker build? In the end the image is just a throw-away and we just extract the build artefacts anyway.

Still it takes up space if you don't manually delete the image, which you don't want to do because this way you need to rebuild the whole thing every time (including the apt-get install and the building of libyaml). A solution could be to rm ${SRCDIR}/liblouis on the last line of the Dockerfile. But still, temporarily it will probably take even more (2 or 3 times) space because the files need to be zipped up, send to Docker and then processed by Docker. When you don't have that much free disk space it is not optimal.
Secondly, it takes time to zip up the files in order to send them to Docker. It's just annoying to have to wait 1,5 minute (I timed it) if you know it could be almost instant.

And for a release the build should be done from a clean checkout anyway.

OK but if you use this argument you can't use your other argument (""you can no longer build an image from an tree that has not been checked in"") anymore :-).
By the way, why does release have to be done from a clean checkout, isn't that exactly because of these kind of issues which are not handled properly? In theory it shouldn't be needed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,853,2019-09-13T15:26:03Z,2020-08-26T11:22:02Z,2020-08-26T11:29:53Z,MERGED,True,245,101,9,https://github.com/egli,Dockerfiles for building win32 and win64 binaries,20,['build system'],https://github.com/liblouis/liblouis/pull/853,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/853#issuecomment-559012988,"This is sort of the result of the exploration on having docker build the windows binaries. I ended up with two Dockerfiles.
The win64 one works flawlessly, the tests are run under wine and actually expose some real problems.
The win32 image doesn't work. Wine crashes and atm it doesn't even find libyaml.
For the moment I have to say that I'm dumping this here and will not sink some more time into it. TBH win32 is not at the top of my priority list :-). I'd rather work on #704 instead.","All I know is that libyaml.dll is not included in the zip file.

Ah, but then it might be just fine. We simply have to test the executable outside of the Docker container.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,855,2019-09-16T13:17:52Z,2019-11-13T15:14:30Z,2019-11-13T15:14:30Z,MERGED,True,3,2,1,https://github.com/aaclause,Avoid a memory leak when several tables are specified with some of them that can't be resolved,3,['needs fixup'],https://github.com/liblouis/liblouis/pull/855,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/855,"Warning: I'm not totally confident for this patch, (I'm a beginner in C), so please review it carefully. :)
Fixes #854
Valgrind reports

With current releases: see #854
With this patch: see below

$ echo ""test""|valgrind --track-origins=yes --leak-check=full --show-leak-kinds=all -v ~/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== Memcheck, a memory error detector
==112557== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==112557== Using Valgrind-3.14.0-3a3000290b-20181009X and LibVEX; rerun with -h for copyright info
==112557== Command: /home/andreabush/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== 
--112557-- Valgrind options:
--112557--    --track-origins=yes
--112557--    --leak-check=full
--112557--    --show-leak-kinds=all
--112557--    -v
--112557-- Contents of /proc/version:
--112557--   Linux version 5.2.13-arch1-1-ARCH (builduser@heftig-49962) (gcc version 9.1.0 (GCC)) #1 SMP PREEMPT Fri Sep 6 17:52:33 UTC 2019
--112557-- 
--112557-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--112557-- Page sizes: currently 4096, max supported 4096
--112557-- Valgrind library directory: /usr/lib/valgrind
--112557-- Reading syms from /home/andreabush/app/liblouis_test/bin/lou_translate
--112557-- Reading syms from /usr/lib/ld-2.29.so
--112557-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--112557--    object doesn't have a dynamic symbol table
--112557-- Scheduler: using generic scheduler lock implementation.
--112557-- Reading suppressions file: /usr/lib/valgrind/default.supp
==112557== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-112557-by-andreabush-on-???
==112557== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-112557-by-andreabush-on-???
==112557== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-112557-by-andreabush-on-???
==112557== 
==112557== TO CONTROL THIS PROCESS USING vgdb (which you probably
==112557== don't want to do, unless you know exactly what you're doing,
==112557== or are doing some strange experiment):
==112557==   /usr/lib/valgrind/../../bin/vgdb --pid=112557 ...command...
==112557== 
==112557== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==112557==   /path/to/gdb /home/andreabush/app/liblouis_test/bin/lou_translate
==112557== and then give GDB the following command
==112557==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=112557
==112557== --pid is optional if only one valgrind process is running
==112557== 
--112557-- REDIR: 0x4020400 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9742 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--112557-- REDIR: 0x40201d0 (ld-linux-x86-64.so.2:index) redirected to 0x580c975c (vgPlain_amd64_linux_REDIR_FOR_index)
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==112557== WARNING: new redirection conflicts with existing -- ignoring it
--112557--     old: 0x04020400 (strlen              ) R-> (0000.0) 0x580c9742 vgPlain_amd64_linux_REDIR_FOR_strlen
--112557--     new: 0x04020400 (strlen              ) R-> (2007.0) 0x0483bd80 strlen
--112557-- REDIR: 0x401cbe0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ce40 (strcmp)
--112557-- REDIR: 0x4020960 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4840860 (mempcpy)
--112557-- Reading syms from /home/andreabush/app/liblouis_test/lib/liblouis.so.19.0.0
--112557-- Reading syms from /usr/lib/libyaml-0.so.2.0.6
--112557--    object doesn't have a symbol table
--112557-- Reading syms from /usr/lib/libc-2.29.so
--112557-- REDIR: 0x49534e0 (libc.so.6:memmove) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952760 (libc.so.6:strncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953810 (libc.so.6:strcasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952080 (libc.so.6:strcat) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49527c0 (libc.so.6:rindex) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954c70 (libc.so.6:rawmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496d330 (libc.so.6:wmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cda0 (libc.so.6:wcscmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953640 (libc.so.6:mempcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953470 (libc.so.6:bcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49526f0 (libc.so.6:strncmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952130 (libc.so.6:strcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49535a0 (libc.so.6:memset) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cd60 (libc.so.6:wcschr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952650 (libc.so.6:strnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952210 (libc.so.6:strcspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953860 (libc.so.6:strncasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49521b0 (libc.so.6:strcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49539b0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496e610 (libc.so.6:wcsnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952800 (libc.so.6:strpbrk) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49520e0 (libc.so.6:index) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952610 (libc.so.6:strlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49591b0 (libc.so.6:memrchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49538b0 (libc.so.6:strcasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953430 (libc.so.6:memchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496ceb0 (libc.so.6:wcslen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952ac0 (libc.so.6:strspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49537b0 (libc.so.6:stpncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953750 (libc.so.6:stpcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954cb0 (libc.so.6:strchrnul) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953900 (libc.so.6:strncasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4a25a70 (libc.so.6:__strrchr_avx2) redirected to 0x483b790 (rindex)
--112557-- REDIR: 0x4a21580 (libc.so.6:__strncmp_avx2) redirected to 0x483c410 (strncmp)
--112557-- REDIR: 0x4a25c40 (libc.so.6:__strlen_avx2) redirected to 0x483bc60 (strlen)
--112557-- REDIR: 0x494e5d0 (libc.so.6:malloc) redirected to 0x4838710 (malloc)
--112557-- REDIR: 0x4a25880 (libc.so.6:__strchrnul_avx2) redirected to 0x4840390 (strchrnul)
--112557-- REDIR: 0x494ec70 (libc.so.6:free) redirected to 0x4839940 (free)
--112557-- REDIR: 0x4a290d0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x483f790 (memset)
--112557-- REDIR: 0x4a28c50 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x483f8a0 (memmove)
--112557-- REDIR: 0x4a28c30 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x48404a0 (mempcpy)
--112557-- REDIR: 0x4a27180 (libc.so.6:__strcpy_avx2) redirected to 0x483bdb0 (strcpy)
--112557-- REDIR: 0x4a26100 (libc.so.6:__strcat_avx2) redirected to 0x483b940 (strcat)
Cannot resolve table 'foobar.ctb'
1 errors found.
en-ueb-g1.ctb,foobar.ctb could not be compiled
==112557== 
==112557== HEAP SUMMARY:
==112557==     in use at exit: 0 bytes in 0 blocks
==112557==   total heap usage: 15 allocs, 15 frees, 73,450 bytes allocated
==112557== 
==112557== All heap blocks were freed -- no leaks are possible
==112557== 
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)","Warning: I'm not totally confident for this patch, (I'm a beginner in C), so please review it carefully. :)
Fixes #854
Valgrind reports

With current releases: see #854
With this patch: see below

$ echo ""test""|valgrind --track-origins=yes --leak-check=full --show-leak-kinds=all -v ~/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== Memcheck, a memory error detector
==112557== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==112557== Using Valgrind-3.14.0-3a3000290b-20181009X and LibVEX; rerun with -h for copyright info
==112557== Command: /home/andreabush/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== 
--112557-- Valgrind options:
--112557--    --track-origins=yes
--112557--    --leak-check=full
--112557--    --show-leak-kinds=all
--112557--    -v
--112557-- Contents of /proc/version:
--112557--   Linux version 5.2.13-arch1-1-ARCH (builduser@heftig-49962) (gcc version 9.1.0 (GCC)) #1 SMP PREEMPT Fri Sep 6 17:52:33 UTC 2019
--112557-- 
--112557-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--112557-- Page sizes: currently 4096, max supported 4096
--112557-- Valgrind library directory: /usr/lib/valgrind
--112557-- Reading syms from /home/andreabush/app/liblouis_test/bin/lou_translate
--112557-- Reading syms from /usr/lib/ld-2.29.so
--112557-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--112557--    object doesn't have a dynamic symbol table
--112557-- Scheduler: using generic scheduler lock implementation.
--112557-- Reading suppressions file: /usr/lib/valgrind/default.supp
==112557== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-112557-by-andreabush-on-???
==112557== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-112557-by-andreabush-on-???
==112557== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-112557-by-andreabush-on-???
==112557== 
==112557== TO CONTROL THIS PROCESS USING vgdb (which you probably
==112557== don't want to do, unless you know exactly what you're doing,
==112557== or are doing some strange experiment):
==112557==   /usr/lib/valgrind/../../bin/vgdb --pid=112557 ...command...
==112557== 
==112557== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==112557==   /path/to/gdb /home/andreabush/app/liblouis_test/bin/lou_translate
==112557== and then give GDB the following command
==112557==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=112557
==112557== --pid is optional if only one valgrind process is running
==112557== 
--112557-- REDIR: 0x4020400 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9742 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--112557-- REDIR: 0x40201d0 (ld-linux-x86-64.so.2:index) redirected to 0x580c975c (vgPlain_amd64_linux_REDIR_FOR_index)
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==112557== WARNING: new redirection conflicts with existing -- ignoring it
--112557--     old: 0x04020400 (strlen              ) R-> (0000.0) 0x580c9742 vgPlain_amd64_linux_REDIR_FOR_strlen
--112557--     new: 0x04020400 (strlen              ) R-> (2007.0) 0x0483bd80 strlen
--112557-- REDIR: 0x401cbe0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ce40 (strcmp)
--112557-- REDIR: 0x4020960 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4840860 (mempcpy)
--112557-- Reading syms from /home/andreabush/app/liblouis_test/lib/liblouis.so.19.0.0
--112557-- Reading syms from /usr/lib/libyaml-0.so.2.0.6
--112557--    object doesn't have a symbol table
--112557-- Reading syms from /usr/lib/libc-2.29.so
--112557-- REDIR: 0x49534e0 (libc.so.6:memmove) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952760 (libc.so.6:strncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953810 (libc.so.6:strcasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952080 (libc.so.6:strcat) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49527c0 (libc.so.6:rindex) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954c70 (libc.so.6:rawmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496d330 (libc.so.6:wmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cda0 (libc.so.6:wcscmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953640 (libc.so.6:mempcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953470 (libc.so.6:bcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49526f0 (libc.so.6:strncmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952130 (libc.so.6:strcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49535a0 (libc.so.6:memset) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cd60 (libc.so.6:wcschr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952650 (libc.so.6:strnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952210 (libc.so.6:strcspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953860 (libc.so.6:strncasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49521b0 (libc.so.6:strcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49539b0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496e610 (libc.so.6:wcsnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952800 (libc.so.6:strpbrk) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49520e0 (libc.so.6:index) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952610 (libc.so.6:strlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49591b0 (libc.so.6:memrchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49538b0 (libc.so.6:strcasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953430 (libc.so.6:memchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496ceb0 (libc.so.6:wcslen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952ac0 (libc.so.6:strspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49537b0 (libc.so.6:stpncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953750 (libc.so.6:stpcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954cb0 (libc.so.6:strchrnul) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953900 (libc.so.6:strncasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4a25a70 (libc.so.6:__strrchr_avx2) redirected to 0x483b790 (rindex)
--112557-- REDIR: 0x4a21580 (libc.so.6:__strncmp_avx2) redirected to 0x483c410 (strncmp)
--112557-- REDIR: 0x4a25c40 (libc.so.6:__strlen_avx2) redirected to 0x483bc60 (strlen)
--112557-- REDIR: 0x494e5d0 (libc.so.6:malloc) redirected to 0x4838710 (malloc)
--112557-- REDIR: 0x4a25880 (libc.so.6:__strchrnul_avx2) redirected to 0x4840390 (strchrnul)
--112557-- REDIR: 0x494ec70 (libc.so.6:free) redirected to 0x4839940 (free)
--112557-- REDIR: 0x4a290d0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x483f790 (memset)
--112557-- REDIR: 0x4a28c50 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x483f8a0 (memmove)
--112557-- REDIR: 0x4a28c30 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x48404a0 (mempcpy)
--112557-- REDIR: 0x4a27180 (libc.so.6:__strcpy_avx2) redirected to 0x483bdb0 (strcpy)
--112557-- REDIR: 0x4a26100 (libc.so.6:__strcat_avx2) redirected to 0x483b940 (strcat)
Cannot resolve table 'foobar.ctb'
1 errors found.
en-ueb-g1.ctb,foobar.ctb could not be compiled
==112557== 
==112557== HEAP SUMMARY:
==112557==     in use at exit: 0 bytes in 0 blocks
==112557==   total heap usage: 15 allocs, 15 frees, 73,450 bytes allocated
==112557== 
==112557== All heap blocks were freed -- no leaks are possible
==112557== 
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,855,2019-09-16T13:17:52Z,2019-11-13T15:14:30Z,2019-11-13T15:14:30Z,MERGED,True,3,2,1,https://github.com/aaclause,Avoid a memory leak when several tables are specified with some of them that can't be resolved,3,['needs fixup'],https://github.com/liblouis/liblouis/pull/855,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/855#issuecomment-531783156,"Warning: I'm not totally confident for this patch, (I'm a beginner in C), so please review it carefully. :)
Fixes #854
Valgrind reports

With current releases: see #854
With this patch: see below

$ echo ""test""|valgrind --track-origins=yes --leak-check=full --show-leak-kinds=all -v ~/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== Memcheck, a memory error detector
==112557== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==112557== Using Valgrind-3.14.0-3a3000290b-20181009X and LibVEX; rerun with -h for copyright info
==112557== Command: /home/andreabush/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== 
--112557-- Valgrind options:
--112557--    --track-origins=yes
--112557--    --leak-check=full
--112557--    --show-leak-kinds=all
--112557--    -v
--112557-- Contents of /proc/version:
--112557--   Linux version 5.2.13-arch1-1-ARCH (builduser@heftig-49962) (gcc version 9.1.0 (GCC)) #1 SMP PREEMPT Fri Sep 6 17:52:33 UTC 2019
--112557-- 
--112557-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--112557-- Page sizes: currently 4096, max supported 4096
--112557-- Valgrind library directory: /usr/lib/valgrind
--112557-- Reading syms from /home/andreabush/app/liblouis_test/bin/lou_translate
--112557-- Reading syms from /usr/lib/ld-2.29.so
--112557-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--112557--    object doesn't have a dynamic symbol table
--112557-- Scheduler: using generic scheduler lock implementation.
--112557-- Reading suppressions file: /usr/lib/valgrind/default.supp
==112557== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-112557-by-andreabush-on-???
==112557== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-112557-by-andreabush-on-???
==112557== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-112557-by-andreabush-on-???
==112557== 
==112557== TO CONTROL THIS PROCESS USING vgdb (which you probably
==112557== don't want to do, unless you know exactly what you're doing,
==112557== or are doing some strange experiment):
==112557==   /usr/lib/valgrind/../../bin/vgdb --pid=112557 ...command...
==112557== 
==112557== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==112557==   /path/to/gdb /home/andreabush/app/liblouis_test/bin/lou_translate
==112557== and then give GDB the following command
==112557==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=112557
==112557== --pid is optional if only one valgrind process is running
==112557== 
--112557-- REDIR: 0x4020400 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9742 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--112557-- REDIR: 0x40201d0 (ld-linux-x86-64.so.2:index) redirected to 0x580c975c (vgPlain_amd64_linux_REDIR_FOR_index)
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==112557== WARNING: new redirection conflicts with existing -- ignoring it
--112557--     old: 0x04020400 (strlen              ) R-> (0000.0) 0x580c9742 vgPlain_amd64_linux_REDIR_FOR_strlen
--112557--     new: 0x04020400 (strlen              ) R-> (2007.0) 0x0483bd80 strlen
--112557-- REDIR: 0x401cbe0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ce40 (strcmp)
--112557-- REDIR: 0x4020960 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4840860 (mempcpy)
--112557-- Reading syms from /home/andreabush/app/liblouis_test/lib/liblouis.so.19.0.0
--112557-- Reading syms from /usr/lib/libyaml-0.so.2.0.6
--112557--    object doesn't have a symbol table
--112557-- Reading syms from /usr/lib/libc-2.29.so
--112557-- REDIR: 0x49534e0 (libc.so.6:memmove) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952760 (libc.so.6:strncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953810 (libc.so.6:strcasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952080 (libc.so.6:strcat) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49527c0 (libc.so.6:rindex) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954c70 (libc.so.6:rawmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496d330 (libc.so.6:wmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cda0 (libc.so.6:wcscmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953640 (libc.so.6:mempcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953470 (libc.so.6:bcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49526f0 (libc.so.6:strncmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952130 (libc.so.6:strcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49535a0 (libc.so.6:memset) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cd60 (libc.so.6:wcschr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952650 (libc.so.6:strnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952210 (libc.so.6:strcspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953860 (libc.so.6:strncasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49521b0 (libc.so.6:strcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49539b0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496e610 (libc.so.6:wcsnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952800 (libc.so.6:strpbrk) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49520e0 (libc.so.6:index) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952610 (libc.so.6:strlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49591b0 (libc.so.6:memrchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49538b0 (libc.so.6:strcasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953430 (libc.so.6:memchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496ceb0 (libc.so.6:wcslen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952ac0 (libc.so.6:strspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49537b0 (libc.so.6:stpncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953750 (libc.so.6:stpcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954cb0 (libc.so.6:strchrnul) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953900 (libc.so.6:strncasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4a25a70 (libc.so.6:__strrchr_avx2) redirected to 0x483b790 (rindex)
--112557-- REDIR: 0x4a21580 (libc.so.6:__strncmp_avx2) redirected to 0x483c410 (strncmp)
--112557-- REDIR: 0x4a25c40 (libc.so.6:__strlen_avx2) redirected to 0x483bc60 (strlen)
--112557-- REDIR: 0x494e5d0 (libc.so.6:malloc) redirected to 0x4838710 (malloc)
--112557-- REDIR: 0x4a25880 (libc.so.6:__strchrnul_avx2) redirected to 0x4840390 (strchrnul)
--112557-- REDIR: 0x494ec70 (libc.so.6:free) redirected to 0x4839940 (free)
--112557-- REDIR: 0x4a290d0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x483f790 (memset)
--112557-- REDIR: 0x4a28c50 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x483f8a0 (memmove)
--112557-- REDIR: 0x4a28c30 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x48404a0 (mempcpy)
--112557-- REDIR: 0x4a27180 (libc.so.6:__strcpy_avx2) redirected to 0x483bdb0 (strcpy)
--112557-- REDIR: 0x4a26100 (libc.so.6:__strcat_avx2) redirected to 0x483b940 (strcat)
Cannot resolve table 'foobar.ctb'
1 errors found.
en-ueb-g1.ctb,foobar.ctb could not be compiled
==112557== 
==112557== HEAP SUMMARY:
==112557==     in use at exit: 0 bytes in 0 blocks
==112557==   total heap usage: 15 allocs, 15 frees, 73,450 bytes allocated
==112557== 
==112557== All heap blocks were freed -- no leaks are possible
==112557== 
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",@egli @bertfrees Why Travis fails? Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,855,2019-09-16T13:17:52Z,2019-11-13T15:14:30Z,2019-11-13T15:14:30Z,MERGED,True,3,2,1,https://github.com/aaclause,Avoid a memory leak when several tables are specified with some of them that can't be resolved,3,['needs fixup'],https://github.com/liblouis/liblouis/pull/855,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/855#issuecomment-531895653,"Warning: I'm not totally confident for this patch, (I'm a beginner in C), so please review it carefully. :)
Fixes #854
Valgrind reports

With current releases: see #854
With this patch: see below

$ echo ""test""|valgrind --track-origins=yes --leak-check=full --show-leak-kinds=all -v ~/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== Memcheck, a memory error detector
==112557== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==112557== Using Valgrind-3.14.0-3a3000290b-20181009X and LibVEX; rerun with -h for copyright info
==112557== Command: /home/andreabush/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== 
--112557-- Valgrind options:
--112557--    --track-origins=yes
--112557--    --leak-check=full
--112557--    --show-leak-kinds=all
--112557--    -v
--112557-- Contents of /proc/version:
--112557--   Linux version 5.2.13-arch1-1-ARCH (builduser@heftig-49962) (gcc version 9.1.0 (GCC)) #1 SMP PREEMPT Fri Sep 6 17:52:33 UTC 2019
--112557-- 
--112557-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--112557-- Page sizes: currently 4096, max supported 4096
--112557-- Valgrind library directory: /usr/lib/valgrind
--112557-- Reading syms from /home/andreabush/app/liblouis_test/bin/lou_translate
--112557-- Reading syms from /usr/lib/ld-2.29.so
--112557-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--112557--    object doesn't have a dynamic symbol table
--112557-- Scheduler: using generic scheduler lock implementation.
--112557-- Reading suppressions file: /usr/lib/valgrind/default.supp
==112557== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-112557-by-andreabush-on-???
==112557== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-112557-by-andreabush-on-???
==112557== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-112557-by-andreabush-on-???
==112557== 
==112557== TO CONTROL THIS PROCESS USING vgdb (which you probably
==112557== don't want to do, unless you know exactly what you're doing,
==112557== or are doing some strange experiment):
==112557==   /usr/lib/valgrind/../../bin/vgdb --pid=112557 ...command...
==112557== 
==112557== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==112557==   /path/to/gdb /home/andreabush/app/liblouis_test/bin/lou_translate
==112557== and then give GDB the following command
==112557==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=112557
==112557== --pid is optional if only one valgrind process is running
==112557== 
--112557-- REDIR: 0x4020400 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9742 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--112557-- REDIR: 0x40201d0 (ld-linux-x86-64.so.2:index) redirected to 0x580c975c (vgPlain_amd64_linux_REDIR_FOR_index)
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==112557== WARNING: new redirection conflicts with existing -- ignoring it
--112557--     old: 0x04020400 (strlen              ) R-> (0000.0) 0x580c9742 vgPlain_amd64_linux_REDIR_FOR_strlen
--112557--     new: 0x04020400 (strlen              ) R-> (2007.0) 0x0483bd80 strlen
--112557-- REDIR: 0x401cbe0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ce40 (strcmp)
--112557-- REDIR: 0x4020960 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4840860 (mempcpy)
--112557-- Reading syms from /home/andreabush/app/liblouis_test/lib/liblouis.so.19.0.0
--112557-- Reading syms from /usr/lib/libyaml-0.so.2.0.6
--112557--    object doesn't have a symbol table
--112557-- Reading syms from /usr/lib/libc-2.29.so
--112557-- REDIR: 0x49534e0 (libc.so.6:memmove) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952760 (libc.so.6:strncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953810 (libc.so.6:strcasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952080 (libc.so.6:strcat) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49527c0 (libc.so.6:rindex) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954c70 (libc.so.6:rawmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496d330 (libc.so.6:wmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cda0 (libc.so.6:wcscmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953640 (libc.so.6:mempcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953470 (libc.so.6:bcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49526f0 (libc.so.6:strncmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952130 (libc.so.6:strcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49535a0 (libc.so.6:memset) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cd60 (libc.so.6:wcschr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952650 (libc.so.6:strnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952210 (libc.so.6:strcspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953860 (libc.so.6:strncasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49521b0 (libc.so.6:strcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49539b0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496e610 (libc.so.6:wcsnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952800 (libc.so.6:strpbrk) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49520e0 (libc.so.6:index) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952610 (libc.so.6:strlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49591b0 (libc.so.6:memrchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49538b0 (libc.so.6:strcasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953430 (libc.so.6:memchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496ceb0 (libc.so.6:wcslen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952ac0 (libc.so.6:strspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49537b0 (libc.so.6:stpncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953750 (libc.so.6:stpcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954cb0 (libc.so.6:strchrnul) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953900 (libc.so.6:strncasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4a25a70 (libc.so.6:__strrchr_avx2) redirected to 0x483b790 (rindex)
--112557-- REDIR: 0x4a21580 (libc.so.6:__strncmp_avx2) redirected to 0x483c410 (strncmp)
--112557-- REDIR: 0x4a25c40 (libc.so.6:__strlen_avx2) redirected to 0x483bc60 (strlen)
--112557-- REDIR: 0x494e5d0 (libc.so.6:malloc) redirected to 0x4838710 (malloc)
--112557-- REDIR: 0x4a25880 (libc.so.6:__strchrnul_avx2) redirected to 0x4840390 (strchrnul)
--112557-- REDIR: 0x494ec70 (libc.so.6:free) redirected to 0x4839940 (free)
--112557-- REDIR: 0x4a290d0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x483f790 (memset)
--112557-- REDIR: 0x4a28c50 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x483f8a0 (memmove)
--112557-- REDIR: 0x4a28c30 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x48404a0 (mempcpy)
--112557-- REDIR: 0x4a27180 (libc.so.6:__strcpy_avx2) redirected to 0x483bdb0 (strcpy)
--112557-- REDIR: 0x4a26100 (libc.so.6:__strcat_avx2) redirected to 0x483b940 (strcat)
Cannot resolve table 'foobar.ctb'
1 errors found.
en-ueb-g1.ctb,foobar.ctb could not be compiled
==112557== 
==112557== HEAP SUMMARY:
==112557==     in use at exit: 0 bytes in 0 blocks
==112557==   total heap usage: 15 allocs, 15 frees, 73,450 bytes allocated
==112557== 
==112557== All heap blocks were freed -- no leaks are possible
==112557== 
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",Was something wrong with code formatting. I've fixed it (pushed a commit).,True,{'HEART': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,855,2019-09-16T13:17:52Z,2019-11-13T15:14:30Z,2019-11-13T15:14:30Z,MERGED,True,3,2,1,https://github.com/aaclause,Avoid a memory leak when several tables are specified with some of them that can't be resolved,3,['needs fixup'],https://github.com/liblouis/liblouis/pull/855,https://github.com/aaclause,4,https://github.com/liblouis/liblouis/pull/855#issuecomment-533324777,"Warning: I'm not totally confident for this patch, (I'm a beginner in C), so please review it carefully. :)
Fixes #854
Valgrind reports

With current releases: see #854
With this patch: see below

$ echo ""test""|valgrind --track-origins=yes --leak-check=full --show-leak-kinds=all -v ~/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== Memcheck, a memory error detector
==112557== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==112557== Using Valgrind-3.14.0-3a3000290b-20181009X and LibVEX; rerun with -h for copyright info
==112557== Command: /home/andreabush/app/liblouis_test/bin/lou_translate en-ueb-g1.ctb,foobar.ctb
==112557== 
--112557-- Valgrind options:
--112557--    --track-origins=yes
--112557--    --leak-check=full
--112557--    --show-leak-kinds=all
--112557--    -v
--112557-- Contents of /proc/version:
--112557--   Linux version 5.2.13-arch1-1-ARCH (builduser@heftig-49962) (gcc version 9.1.0 (GCC)) #1 SMP PREEMPT Fri Sep 6 17:52:33 UTC 2019
--112557-- 
--112557-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--112557-- Page sizes: currently 4096, max supported 4096
--112557-- Valgrind library directory: /usr/lib/valgrind
--112557-- Reading syms from /home/andreabush/app/liblouis_test/bin/lou_translate
--112557-- Reading syms from /usr/lib/ld-2.29.so
--112557-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--112557--    object doesn't have a dynamic symbol table
--112557-- Scheduler: using generic scheduler lock implementation.
--112557-- Reading suppressions file: /usr/lib/valgrind/default.supp
==112557== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-112557-by-andreabush-on-???
==112557== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-112557-by-andreabush-on-???
==112557== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-112557-by-andreabush-on-???
==112557== 
==112557== TO CONTROL THIS PROCESS USING vgdb (which you probably
==112557== don't want to do, unless you know exactly what you're doing,
==112557== or are doing some strange experiment):
==112557==   /usr/lib/valgrind/../../bin/vgdb --pid=112557 ...command...
==112557== 
==112557== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==112557==   /path/to/gdb /home/andreabush/app/liblouis_test/bin/lou_translate
==112557== and then give GDB the following command
==112557==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=112557
==112557== --pid is optional if only one valgrind process is running
==112557== 
--112557-- REDIR: 0x4020400 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9742 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--112557-- REDIR: 0x40201d0 (ld-linux-x86-64.so.2:index) redirected to 0x580c975c (vgPlain_amd64_linux_REDIR_FOR_index)
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--112557-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==112557== WARNING: new redirection conflicts with existing -- ignoring it
--112557--     old: 0x04020400 (strlen              ) R-> (0000.0) 0x580c9742 vgPlain_amd64_linux_REDIR_FOR_strlen
--112557--     new: 0x04020400 (strlen              ) R-> (2007.0) 0x0483bd80 strlen
--112557-- REDIR: 0x401cbe0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ce40 (strcmp)
--112557-- REDIR: 0x4020960 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4840860 (mempcpy)
--112557-- Reading syms from /home/andreabush/app/liblouis_test/lib/liblouis.so.19.0.0
--112557-- Reading syms from /usr/lib/libyaml-0.so.2.0.6
--112557--    object doesn't have a symbol table
--112557-- Reading syms from /usr/lib/libc-2.29.so
--112557-- REDIR: 0x49534e0 (libc.so.6:memmove) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952760 (libc.so.6:strncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953810 (libc.so.6:strcasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952080 (libc.so.6:strcat) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49527c0 (libc.so.6:rindex) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954c70 (libc.so.6:rawmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496d330 (libc.so.6:wmemchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cda0 (libc.so.6:wcscmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953640 (libc.so.6:mempcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953470 (libc.so.6:bcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49526f0 (libc.so.6:strncmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952130 (libc.so.6:strcmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49535a0 (libc.so.6:memset) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496cd60 (libc.so.6:wcschr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952650 (libc.so.6:strnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952210 (libc.so.6:strcspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953860 (libc.so.6:strncasecmp) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49521b0 (libc.so.6:strcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49539b0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496e610 (libc.so.6:wcsnlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952800 (libc.so.6:strpbrk) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49520e0 (libc.so.6:index) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952610 (libc.so.6:strlen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49591b0 (libc.so.6:memrchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49538b0 (libc.so.6:strcasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953430 (libc.so.6:memchr) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x496ceb0 (libc.so.6:wcslen) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4952ac0 (libc.so.6:strspn) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x49537b0 (libc.so.6:stpncpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953750 (libc.so.6:stpcpy) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4954cb0 (libc.so.6:strchrnul) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4953900 (libc.so.6:strncasecmp_l) redirected to 0x482e1c0 (_vgnU_ifunc_wrapper)
--112557-- REDIR: 0x4a25a70 (libc.so.6:__strrchr_avx2) redirected to 0x483b790 (rindex)
--112557-- REDIR: 0x4a21580 (libc.so.6:__strncmp_avx2) redirected to 0x483c410 (strncmp)
--112557-- REDIR: 0x4a25c40 (libc.so.6:__strlen_avx2) redirected to 0x483bc60 (strlen)
--112557-- REDIR: 0x494e5d0 (libc.so.6:malloc) redirected to 0x4838710 (malloc)
--112557-- REDIR: 0x4a25880 (libc.so.6:__strchrnul_avx2) redirected to 0x4840390 (strchrnul)
--112557-- REDIR: 0x494ec70 (libc.so.6:free) redirected to 0x4839940 (free)
--112557-- REDIR: 0x4a290d0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x483f790 (memset)
--112557-- REDIR: 0x4a28c50 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x483f8a0 (memmove)
--112557-- REDIR: 0x4a28c30 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x48404a0 (mempcpy)
--112557-- REDIR: 0x4a27180 (libc.so.6:__strcpy_avx2) redirected to 0x483bdb0 (strcpy)
--112557-- REDIR: 0x4a26100 (libc.so.6:__strcat_avx2) redirected to 0x483b940 (strcat)
Cannot resolve table 'foobar.ctb'
1 errors found.
en-ueb-g1.ctb,foobar.ctb could not be compiled
==112557== 
==112557== HEAP SUMMARY:
==112557==     in use at exit: 0 bytes in 0 blocks
==112557==   total heap usage: 15 allocs, 15 frees, 73,450 bytes allocated
==112557== 
==112557== All heap blocks were freed -- no leaks are possible
==112557== 
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==112557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",@bertfrees Thanks! Indeed it's better this way. Why make it simple when we can make it complicated? :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/856,See #848,See #848,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/856#issuecomment-532131790,See #848,"Current state (with commit 0ec16fb):

Seems there is no memory leak
Python bindings issues not solved
All memory is not freed

Below the report of my tests used in #848 (using a small Python script):
Test 1: “😂” -> KO
$ echo ""\xD83D\xDE02""|lou_translate en-ueb-g1.ctb,test.cti
""<face with tears of joy"">

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""😂"")
('', [], [], -1)

Debug infos (valgrind -> 0 errors from 0 contexts (suppressed: 0 from 0)
)
$ echo ""\xD83D\xDE02""|lou_trace en-ueb-g1.ctb,test.cti
""<face with tears of joy"">
1.	correct	""😂""	""(face with tears of joy)""
2.	punctuation	(	5-126
3.	lowercase	f	124
4.	lowercase	a	1
5.	lowercase	c	14
6.	lowercase	e	15
7.	space	 	0
8.	lowercase	w	2456
9.	lowercase	i	24
10.	lowercase	t	2345
11.	lowercase	h	125
12.	space	 	0
13.	lowercase	t	2345
14.	lowercase	e	15
15.	lowercase	a	1
16.	lowercase	r	1235
17.	lowercase	s	234
18.	space	 	0
19.	lowercase	o	135
20.	lowercase	f	124
21.	space	 	0
22.	lowercase	j	245
23.	lowercase	o	135
24.	lowercase	y	13456
25.	punctuation	)	5-345
$ echo ""\xD83D\xDE02""|valgrind --leak-check=full --show-leak-kinds=all lou_trace en-ueb-g1.ctb,test.cti
==29703== Memcheck, a memory error detector
==29703== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29703== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==29703== Command: lou_trace en-ueb-g1.ctb,test.cti
==29703== 
==29703== 
==29703== HEAP SUMMARY:
==29703==     in use at exit: 247,930 bytes in 24 blocks
==29703==   total heap usage: 149 allocs, 125 frees, 998,866 bytes allocated
==29703== 
==29703== 40 bytes in 1 blocks are still reachable in loss record 1 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x485C69B: initStringBufferPool (lou_translateString.c:70)
==29703==    by 0x485C69B: _lou_translateWithTracing (lou_translateString.c:1199)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 46 bytes in 1 blocks are still reachable in loss record 2 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x4852B2C: lou_getTable (compileTranslationTable.c:4269)
==29703==    by 0x10966A: main (lou_trace.c:351)
==29703== 
==29703== 46 bytes in 1 blocks are still reachable in loss record 3 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x4852B78: lou_getTable (compileTranslationTable.c:4279)
==29703==    by 0x10966A: main (lou_trace.c:351)
==29703== 
==29703== 74 bytes in 10 blocks are still reachable in loss record 4 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x4851348: compileRule.constprop.0 (compileTranslationTable.c:2909)
==29703==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29703==    by 0x4852A4F: compileTable (compileTranslationTable.c:4155)
==29703==    by 0x4852A4F: lou_getTable (compileTranslationTable.c:4263)
==29703==    by 0x10966A: main (lou_trace.c:351)
==29703== 
==29703== 2,056 bytes in 1 blocks are still reachable in loss record 5 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x48531CC: _lou_allocMem (compileTranslationTable.c:4341)
==29703==    by 0x485B4AE: _lou_translateWithTracing (lou_translateString.c:1131)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 2,056 bytes in 1 blocks are still reachable in loss record 6 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x485328E: _lou_allocMem (compileTranslationTable.c:4380)
==29703==    by 0x4853739: getStringBuffer (lou_translateString.c:84)
==29703==    by 0x485B747: _lou_translateWithTracing (lou_translateString.c:1201)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 2,056 bytes in 1 blocks are still reachable in loss record 7 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x485328E: _lou_allocMem (compileTranslationTable.c:4380)
==29703==    by 0x4853739: getStringBuffer (lou_translateString.c:84)
==29703==    by 0x485C3EE: _lou_translateWithTracing (lou_translateString.c:1249)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 4,112 bytes in 1 blocks are still reachable in loss record 8 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x4853213: _lou_allocMem (compileTranslationTable.c:4351)
==29703==    by 0x485B532: _lou_translateWithTracing (lou_translateString.c:1140)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 4,112 bytes in 1 blocks are still reachable in loss record 9 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x48532E5: _lou_allocMem (compileTranslationTable.c:4393)
==29703==    by 0x485B61F: _lou_translateWithTracing (lou_translateString.c:1174)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 4,112 bytes in 1 blocks are still reachable in loss record 10 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x48530CD: _lou_allocMem (compileTranslationTable.c:4407)
==29703==    by 0x485B656: _lou_translateWithTracing (lou_translateString.c:1177)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 4,112 bytes in 1 blocks are still reachable in loss record 11 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x4853125: _lou_allocMem (compileTranslationTable.c:4421)
==29703==    by 0x485B67D: _lou_translateWithTracing (lou_translateString.c:1179)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 8,224 bytes in 1 blocks are still reachable in loss record 12 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x485316B: _lou_allocMem (compileTranslationTable.c:4360)
==29703==    by 0x485B559: _lou_translateWithTracing (lou_translateString.c:1142)
==29703==    by 0x109C9F: main_loop (lou_trace.c:259)
==29703==    by 0x109C9F: main (lou_trace.c:355)
==29703== 
==29703== 17,992 bytes in 1 blocks are still reachable in loss record 13 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x4852D3A: allocateDisplayTable (compileTranslationTable.c:498)
==29703==    by 0x4852D3A: compileTable (compileTranslationTable.c:4135)
==29703==    by 0x4852D3A: lou_getTable (compileTranslationTable.c:4263)
==29703==    by 0x10966A: main (lou_trace.c:351)
==29703== 
==29703== 69,632 bytes in 1 blocks are still reachable in loss record 14 of 15
==29703==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29703==    by 0x109697: main_loop (lou_trace.c:248)
==29703==    by 0x109697: main (lou_trace.c:355)
==29703== 
==29703== 129,260 bytes in 1 blocks are still reachable in loss record 15 of 15
==29703==    at 0x483AD7B: realloc (vg_replace_malloc.c:826)
==29703==    by 0x484B317: allocateSpaceInTranslationTable (compileTranslationTable.c:417)
==29703==    by 0x484C1D7: addRule.constprop.0 (compileTranslationTable.c:932)
==29703==    by 0x484CCB3: compileCharDef.constprop.0 (compileTranslationTable.c:2558)
==29703==    by 0x484E116: compileRule.constprop.0 (compileTranslationTable.c:2632)
==29703==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29703==    by 0x4851A52: includeFile (compileTranslationTable.c:4105)
==29703==    by 0x4851A52: compileRule.constprop.0 (compileTranslationTable.c:2676)
==29703==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29703==    by 0x4852A4F: compileTable (compileTranslationTable.c:4155)
==29703==    by 0x4852A4F: lou_getTable (compileTranslationTable.c:4263)
==29703==    by 0x10966A: main (lou_trace.c:351)
==29703== 
==29703== LEAK SUMMARY:
==29703==    definitely lost: 0 bytes in 0 blocks
==29703==    indirectly lost: 0 bytes in 0 blocks
==29703==      possibly lost: 0 bytes in 0 blocks
==29703==    still reachable: 247,930 bytes in 24 blocks
==29703==         suppressed: 0 bytes in 0 blocks
==29703== 
==29703== For counts of detected and suppressed errors, rerun with: -v
==29703== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Test 2: “a 😂” -> OK
$ echo ""a \xD83D\xDE02""|lou_translate en-ueb-g1.ctb,test.cti
a ""<face with tears of joy"">

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""a 😂"")
('a ""<face with tears of joy"">', [0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 1, 2, 2], 0)

Test 3: “😂 b” -> OK
$ echo ""\xD83D\xDE02 b""|lou_translate en-ueb-g1.ctb,test.cti
""<face with tears of joy""> b

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""😂 b"")
('""<face with tears of joy""> b', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3], [0, 0, 26, 27], 0)

Test 4: “a 😂 b” -> OK
$ echo ""a \xD83D\xDE02 b""|lou_translate en-ueb-g1.ctb,test.cti
a ""<face with tears of joy""> b

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""a 😂 b"")
('a ""<face with tears of joy""> b', [0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 5], [0, 1, 2, 2, 28, 29], 0)

Test 5: “a 😂” -> OK
$ echo ""a \xD83D\xDE02""|lou_translate en-ueb-g1.ctb,test.cti
a ""<face with tears of joy"">

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""a 😂"")
('a ""<face with tears of joy"">', [0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 1, 2, 2], 0)

Test 6: “😂 b” -> OK
$ echo ""\xD83D\xDE02 b""|lou_translate en-ueb-g1.ctb,test.cti
""<face with tears of joy""> b

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""😂 b"")
('""<face with tears of joy""> b', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3], [0, 0, 26, 27], 0)

Test 7: “a 😂 b” -> OK
$ echo ""a \xD83D\xDE02 b""|lou_translate en-ueb-g1.ctb,test.cti
a ""<face with tears of joy""> b

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""a 😂 b"")
('a ""<face with tears of joy""> b', [0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 5], [0, 1, 2, 2, 28, 29], 0)

Test 8: “before 😂” -> OK
$ echo ""before \xD83D\xDE02""|lou_translate en-ueb-g1.ctb,test.cti
before ""<face with tears of joy"">

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""before 😂"")
('before ""<face with tears of joy"">', [0, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7], [0, 1, 2, 3, 4, 5, 6, 7, 7], 0)

Test 9: “😂 after” -> OK
$ echo ""\xD83D\xDE02 after""|lou_translate en-ueb-g1.ctb,test.cti
""<face with tears of joy""> after

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""😂 after"")
('""<face with tears of joy""> after', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 4, 5, 6, 7], [0, 0, 26, 27, 28, 29, 30, 31], 0)

Test 10: “before 😂 after” -> OK
$ echo ""before \xD83D\xDE02 after""|lou_translate en-ueb-g1.ctb,test.cti
before ""<face with tears of joy""> after

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""before 😂 after"")
('before ""<face with tears of joy""> after', [0, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13, 14], [0, 1, 2, 3, 4, 5, 6, 7, 7, 33, 34, 35, 36, 37, 38], 0)

Test 11: “🤣” -> KO
$ echo ""\xd83e\xdd23""|lou_translate en-ueb-g1.ctb,test.cti
""<rolling on the floor laughing"">

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""🤣"")
('', [], [], -1)

Debug infos (valgrind -> 0 errors from 0 contexts (suppressed: 0 from 0)
)
$ echo ""\xd83e\xdd23""|lou_trace en-ueb-g1.ctb,test.cti
""<rolling on the floor laughing"">
1.	correct	""🤣""	""(rolling on the floor laughing)""
2.	punctuation	(	5-126
3.	lowercase	r	1235
4.	lowercase	o	135
5.	lowercase	l	123
6.	lowercase	l	123
7.	lowercase	i	24
8.	lowercase	n	1345
9.	lowercase	g	1245
10.	space	 	0
11.	lowercase	o	135
12.	lowercase	n	1345
13.	space	 	0
14.	lowercase	t	2345
15.	lowercase	h	125
16.	lowercase	e	15
17.	space	 	0
18.	lowercase	f	124
19.	lowercase	l	123
20.	lowercase	o	135
21.	lowercase	o	135
22.	lowercase	r	1235
23.	space	 	0
24.	lowercase	l	123
25.	lowercase	a	1
26.	lowercase	u	136
27.	lowercase	g	1245
28.	lowercase	h	125
29.	lowercase	i	24
30.	lowercase	n	1345
31.	lowercase	g	1245
32.	punctuation	)	5-345
$ echo ""\xd83e\xdd23""|valgrind --leak-check=full --show-leak-kinds=all lou_trace en-ueb-g1.ctb,test.cti
==29739== Memcheck, a memory error detector
==29739== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29739== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==29739== Command: lou_trace en-ueb-g1.ctb,test.cti
==29739== 
==29739== 
==29739== HEAP SUMMARY:
==29739==     in use at exit: 247,930 bytes in 24 blocks
==29739==   total heap usage: 149 allocs, 125 frees, 998,943 bytes allocated
==29739== 
==29739== 40 bytes in 1 blocks are still reachable in loss record 1 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x485C69B: initStringBufferPool (lou_translateString.c:70)
==29739==    by 0x485C69B: _lou_translateWithTracing (lou_translateString.c:1199)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 46 bytes in 1 blocks are still reachable in loss record 2 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x4852B2C: lou_getTable (compileTranslationTable.c:4269)
==29739==    by 0x10966A: main (lou_trace.c:351)
==29739== 
==29739== 46 bytes in 1 blocks are still reachable in loss record 3 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x4852B78: lou_getTable (compileTranslationTable.c:4279)
==29739==    by 0x10966A: main (lou_trace.c:351)
==29739== 
==29739== 74 bytes in 10 blocks are still reachable in loss record 4 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x4851348: compileRule.constprop.0 (compileTranslationTable.c:2909)
==29739==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29739==    by 0x4852A4F: compileTable (compileTranslationTable.c:4155)
==29739==    by 0x4852A4F: lou_getTable (compileTranslationTable.c:4263)
==29739==    by 0x10966A: main (lou_trace.c:351)
==29739== 
==29739== 2,056 bytes in 1 blocks are still reachable in loss record 5 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x48531CC: _lou_allocMem (compileTranslationTable.c:4341)
==29739==    by 0x485B4AE: _lou_translateWithTracing (lou_translateString.c:1131)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 2,056 bytes in 1 blocks are still reachable in loss record 6 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x485328E: _lou_allocMem (compileTranslationTable.c:4380)
==29739==    by 0x4853739: getStringBuffer (lou_translateString.c:84)
==29739==    by 0x485B747: _lou_translateWithTracing (lou_translateString.c:1201)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 2,056 bytes in 1 blocks are still reachable in loss record 7 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x485328E: _lou_allocMem (compileTranslationTable.c:4380)
==29739==    by 0x4853739: getStringBuffer (lou_translateString.c:84)
==29739==    by 0x485C3EE: _lou_translateWithTracing (lou_translateString.c:1249)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 4,112 bytes in 1 blocks are still reachable in loss record 8 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x4853213: _lou_allocMem (compileTranslationTable.c:4351)
==29739==    by 0x485B532: _lou_translateWithTracing (lou_translateString.c:1140)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 4,112 bytes in 1 blocks are still reachable in loss record 9 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x48532E5: _lou_allocMem (compileTranslationTable.c:4393)
==29739==    by 0x485B61F: _lou_translateWithTracing (lou_translateString.c:1174)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 4,112 bytes in 1 blocks are still reachable in loss record 10 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x48530CD: _lou_allocMem (compileTranslationTable.c:4407)
==29739==    by 0x485B656: _lou_translateWithTracing (lou_translateString.c:1177)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 4,112 bytes in 1 blocks are still reachable in loss record 11 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x4853125: _lou_allocMem (compileTranslationTable.c:4421)
==29739==    by 0x485B67D: _lou_translateWithTracing (lou_translateString.c:1179)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 8,224 bytes in 1 blocks are still reachable in loss record 12 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x485316B: _lou_allocMem (compileTranslationTable.c:4360)
==29739==    by 0x485B559: _lou_translateWithTracing (lou_translateString.c:1142)
==29739==    by 0x109C9F: main_loop (lou_trace.c:259)
==29739==    by 0x109C9F: main (lou_trace.c:355)
==29739== 
==29739== 17,992 bytes in 1 blocks are still reachable in loss record 13 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x4852D3A: allocateDisplayTable (compileTranslationTable.c:498)
==29739==    by 0x4852D3A: compileTable (compileTranslationTable.c:4135)
==29739==    by 0x4852D3A: lou_getTable (compileTranslationTable.c:4263)
==29739==    by 0x10966A: main (lou_trace.c:351)
==29739== 
==29739== 69,632 bytes in 1 blocks are still reachable in loss record 14 of 15
==29739==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29739==    by 0x109697: main_loop (lou_trace.c:248)
==29739==    by 0x109697: main (lou_trace.c:355)
==29739== 
==29739== 129,260 bytes in 1 blocks are still reachable in loss record 15 of 15
==29739==    at 0x483AD7B: realloc (vg_replace_malloc.c:826)
==29739==    by 0x484B317: allocateSpaceInTranslationTable (compileTranslationTable.c:417)
==29739==    by 0x484C1D7: addRule.constprop.0 (compileTranslationTable.c:932)
==29739==    by 0x484CCB3: compileCharDef.constprop.0 (compileTranslationTable.c:2558)
==29739==    by 0x484E116: compileRule.constprop.0 (compileTranslationTable.c:2632)
==29739==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29739==    by 0x4851A52: includeFile (compileTranslationTable.c:4105)
==29739==    by 0x4851A52: compileRule.constprop.0 (compileTranslationTable.c:2676)
==29739==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29739==    by 0x4852A4F: compileTable (compileTranslationTable.c:4155)
==29739==    by 0x4852A4F: lou_getTable (compileTranslationTable.c:4263)
==29739==    by 0x10966A: main (lou_trace.c:351)
==29739== 
==29739== LEAK SUMMARY:
==29739==    definitely lost: 0 bytes in 0 blocks
==29739==    indirectly lost: 0 bytes in 0 blocks
==29739==      possibly lost: 0 bytes in 0 blocks
==29739==    still reachable: 247,930 bytes in 24 blocks
==29739==         suppressed: 0 bytes in 0 blocks
==29739== 
==29739== For counts of detected and suppressed errors, rerun with: -v
==29739== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Test 12: “a 🤣” -> KO
$ echo ""a \xd83e\xdd23""|lou_translate en-ueb-g1.ctb,test.cti
a ""<rolling on the floor laughing"">

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""a 🤣"")
('a ', [0, 1], [0, 1], 0)

Debug infos (valgrind -> 0 errors from 0 contexts (suppressed: 0 from 0)
)
$ echo ""a \xd83e\xdd23""|lou_trace en-ueb-g1.ctb,test.cti
a ""<rolling on the floor laughing"">
1.	correct	""🤣""	""(rolling on the floor laughing)""
2.	lowercase	a	1
3.	space	 	0
4.	punctuation	(	5-126
5.	lowercase	r	1235
6.	lowercase	o	135
7.	lowercase	l	123
8.	lowercase	l	123
9.	lowercase	i	24
10.	lowercase	n	1345
11.	lowercase	g	1245
12.	space	 	0
13.	lowercase	o	135
14.	lowercase	n	1345
15.	space	 	0
16.	lowercase	t	2345
17.	lowercase	h	125
18.	lowercase	e	15
19.	space	 	0
20.	lowercase	f	124
21.	lowercase	l	123
22.	lowercase	o	135
23.	lowercase	o	135
24.	lowercase	r	1235
25.	space	 	0
26.	lowercase	l	123
27.	lowercase	a	1
28.	lowercase	u	136
29.	lowercase	g	1245
30.	lowercase	h	125
31.	lowercase	i	24
32.	lowercase	n	1345
33.	lowercase	g	1245
34.	punctuation	)	5-345
$ echo ""a \xd83e\xdd23""|valgrind --leak-check=full --show-leak-kinds=all lou_trace en-ueb-g1.ctb,test.cti
==29748== Memcheck, a memory error detector
==29748== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29748== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==29748== Command: lou_trace en-ueb-g1.ctb,test.cti
==29748== 
==29748== 
==29748== HEAP SUMMARY:
==29748==     in use at exit: 247,930 bytes in 24 blocks
==29748==   total heap usage: 149 allocs, 125 frees, 998,983 bytes allocated
==29748== 
==29748== 40 bytes in 1 blocks are still reachable in loss record 1 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x485C69B: initStringBufferPool (lou_translateString.c:70)
==29748==    by 0x485C69B: _lou_translateWithTracing (lou_translateString.c:1199)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 46 bytes in 1 blocks are still reachable in loss record 2 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x4852B2C: lou_getTable (compileTranslationTable.c:4269)
==29748==    by 0x10966A: main (lou_trace.c:351)
==29748== 
==29748== 46 bytes in 1 blocks are still reachable in loss record 3 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x4852B78: lou_getTable (compileTranslationTable.c:4279)
==29748==    by 0x10966A: main (lou_trace.c:351)
==29748== 
==29748== 74 bytes in 10 blocks are still reachable in loss record 4 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x4851348: compileRule.constprop.0 (compileTranslationTable.c:2909)
==29748==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29748==    by 0x4852A4F: compileTable (compileTranslationTable.c:4155)
==29748==    by 0x4852A4F: lou_getTable (compileTranslationTable.c:4263)
==29748==    by 0x10966A: main (lou_trace.c:351)
==29748== 
==29748== 2,056 bytes in 1 blocks are still reachable in loss record 5 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x48531CC: _lou_allocMem (compileTranslationTable.c:4341)
==29748==    by 0x485B4AE: _lou_translateWithTracing (lou_translateString.c:1131)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 2,056 bytes in 1 blocks are still reachable in loss record 6 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x485328E: _lou_allocMem (compileTranslationTable.c:4380)
==29748==    by 0x4853739: getStringBuffer (lou_translateString.c:84)
==29748==    by 0x485B747: _lou_translateWithTracing (lou_translateString.c:1201)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 2,056 bytes in 1 blocks are still reachable in loss record 7 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x485328E: _lou_allocMem (compileTranslationTable.c:4380)
==29748==    by 0x4853739: getStringBuffer (lou_translateString.c:84)
==29748==    by 0x485C3EE: _lou_translateWithTracing (lou_translateString.c:1249)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 4,112 bytes in 1 blocks are still reachable in loss record 8 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x4853213: _lou_allocMem (compileTranslationTable.c:4351)
==29748==    by 0x485B532: _lou_translateWithTracing (lou_translateString.c:1140)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 4,112 bytes in 1 blocks are still reachable in loss record 9 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x48532E5: _lou_allocMem (compileTranslationTable.c:4393)
==29748==    by 0x485B61F: _lou_translateWithTracing (lou_translateString.c:1174)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 4,112 bytes in 1 blocks are still reachable in loss record 10 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x48530CD: _lou_allocMem (compileTranslationTable.c:4407)
==29748==    by 0x485B656: _lou_translateWithTracing (lou_translateString.c:1177)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 4,112 bytes in 1 blocks are still reachable in loss record 11 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x4853125: _lou_allocMem (compileTranslationTable.c:4421)
==29748==    by 0x485B67D: _lou_translateWithTracing (lou_translateString.c:1179)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 8,224 bytes in 1 blocks are still reachable in loss record 12 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x485316B: _lou_allocMem (compileTranslationTable.c:4360)
==29748==    by 0x485B559: _lou_translateWithTracing (lou_translateString.c:1142)
==29748==    by 0x109C9F: main_loop (lou_trace.c:259)
==29748==    by 0x109C9F: main (lou_trace.c:355)
==29748== 
==29748== 17,992 bytes in 1 blocks are still reachable in loss record 13 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x4852D3A: allocateDisplayTable (compileTranslationTable.c:498)
==29748==    by 0x4852D3A: compileTable (compileTranslationTable.c:4135)
==29748==    by 0x4852D3A: lou_getTable (compileTranslationTable.c:4263)
==29748==    by 0x10966A: main (lou_trace.c:351)
==29748== 
==29748== 69,632 bytes in 1 blocks are still reachable in loss record 14 of 15
==29748==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29748==    by 0x109697: main_loop (lou_trace.c:248)
==29748==    by 0x109697: main (lou_trace.c:355)
==29748== 
==29748== 129,260 bytes in 1 blocks are still reachable in loss record 15 of 15
==29748==    at 0x483AD7B: realloc (vg_replace_malloc.c:826)
==29748==    by 0x484B317: allocateSpaceInTranslationTable (compileTranslationTable.c:417)
==29748==    by 0x484C1D7: addRule.constprop.0 (compileTranslationTable.c:932)
==29748==    by 0x484CCB3: compileCharDef.constprop.0 (compileTranslationTable.c:2558)
==29748==    by 0x484E116: compileRule.constprop.0 (compileTranslationTable.c:2632)
==29748==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29748==    by 0x4851A52: includeFile (compileTranslationTable.c:4105)
==29748==    by 0x4851A52: compileRule.constprop.0 (compileTranslationTable.c:2676)
==29748==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29748==    by 0x4852A4F: compileTable (compileTranslationTable.c:4155)
==29748==    by 0x4852A4F: lou_getTable (compileTranslationTable.c:4263)
==29748==    by 0x10966A: main (lou_trace.c:351)
==29748== 
==29748== LEAK SUMMARY:
==29748==    definitely lost: 0 bytes in 0 blocks
==29748==    indirectly lost: 0 bytes in 0 blocks
==29748==      possibly lost: 0 bytes in 0 blocks
==29748==    still reachable: 247,930 bytes in 24 blocks
==29748==         suppressed: 0 bytes in 0 blocks
==29748== 
==29748== For counts of detected and suppressed errors, rerun with: -v
==29748== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Test 13: “🤣 b” -> KO
$ echo ""\xd83e\xdd23 b""|lou_translate en-ueb-g1.ctb,test.cti
""<rolling on the floor laughing""> b

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""🤣 b"")
('""<rolling on the floor ', [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [], -1)

Debug infos (valgrind -> 0 errors from 0 contexts (suppressed: 0 from 0)
)
$ echo ""\xd83e\xdd23 b""|lou_trace en-ueb-g1.ctb,test.cti
""<rolling on the floor laughing""> b
1.	correct	""🤣""	""(rolling on the floor laughing)""
2.	punctuation	(	5-126
3.	lowercase	r	1235
4.	lowercase	o	135
5.	lowercase	l	123
6.	lowercase	l	123
7.	lowercase	i	24
8.	lowercase	n	1345
9.	lowercase	g	1245
10.	space	 	0
11.	lowercase	o	135
12.	lowercase	n	1345
13.	space	 	0
14.	lowercase	t	2345
15.	lowercase	h	125
16.	lowercase	e	15
17.	space	 	0
18.	lowercase	f	124
19.	lowercase	l	123
20.	lowercase	o	135
21.	lowercase	o	135
22.	lowercase	r	1235
23.	space	 	0
24.	lowercase	l	123
25.	lowercase	a	1
26.	lowercase	u	136
27.	lowercase	g	1245
28.	lowercase	h	125
29.	lowercase	i	24
30.	lowercase	n	1345
31.	lowercase	g	1245
32.	punctuation	)	5-345
33.	space	 	0
34.	lowercase	b	12
$ echo ""\xd83e\xdd23 b""|valgrind --leak-check=full --show-leak-kinds=all lou_trace en-ueb-g1.ctb,test.cti
==29757== Memcheck, a memory error detector
==29757== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29757== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==29757== Command: lou_trace en-ueb-g1.ctb,test.cti
==29757== 
==29757== 
==29757== HEAP SUMMARY:
==29757==     in use at exit: 247,930 bytes in 24 blocks
==29757==   total heap usage: 149 allocs, 125 frees, 998,983 bytes allocated
==29757== 
==29757== 40 bytes in 1 blocks are still reachable in loss record 1 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x485C69B: initStringBufferPool (lou_translateString.c:70)
==29757==    by 0x485C69B: _lou_translateWithTracing (lou_translateString.c:1199)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 46 bytes in 1 blocks are still reachable in loss record 2 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x4852B2C: lou_getTable (compileTranslationTable.c:4269)
==29757==    by 0x10966A: main (lou_trace.c:351)
==29757== 
==29757== 46 bytes in 1 blocks are still reachable in loss record 3 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x4852B78: lou_getTable (compileTranslationTable.c:4279)
==29757==    by 0x10966A: main (lou_trace.c:351)
==29757== 
==29757== 74 bytes in 10 blocks are still reachable in loss record 4 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x4851348: compileRule.constprop.0 (compileTranslationTable.c:2909)
==29757==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29757==    by 0x4852A4F: compileTable (compileTranslationTable.c:4155)
==29757==    by 0x4852A4F: lou_getTable (compileTranslationTable.c:4263)
==29757==    by 0x10966A: main (lou_trace.c:351)
==29757== 
==29757== 2,056 bytes in 1 blocks are still reachable in loss record 5 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x48531CC: _lou_allocMem (compileTranslationTable.c:4341)
==29757==    by 0x485B4AE: _lou_translateWithTracing (lou_translateString.c:1131)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 2,056 bytes in 1 blocks are still reachable in loss record 6 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x485328E: _lou_allocMem (compileTranslationTable.c:4380)
==29757==    by 0x4853739: getStringBuffer (lou_translateString.c:84)
==29757==    by 0x485B747: _lou_translateWithTracing (lou_translateString.c:1201)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 2,056 bytes in 1 blocks are still reachable in loss record 7 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x485328E: _lou_allocMem (compileTranslationTable.c:4380)
==29757==    by 0x4853739: getStringBuffer (lou_translateString.c:84)
==29757==    by 0x485C3EE: _lou_translateWithTracing (lou_translateString.c:1249)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 4,112 bytes in 1 blocks are still reachable in loss record 8 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x4853213: _lou_allocMem (compileTranslationTable.c:4351)
==29757==    by 0x485B532: _lou_translateWithTracing (lou_translateString.c:1140)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 4,112 bytes in 1 blocks are still reachable in loss record 9 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x48532E5: _lou_allocMem (compileTranslationTable.c:4393)
==29757==    by 0x485B61F: _lou_translateWithTracing (lou_translateString.c:1174)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 4,112 bytes in 1 blocks are still reachable in loss record 10 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x48530CD: _lou_allocMem (compileTranslationTable.c:4407)
==29757==    by 0x485B656: _lou_translateWithTracing (lou_translateString.c:1177)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 4,112 bytes in 1 blocks are still reachable in loss record 11 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x4853125: _lou_allocMem (compileTranslationTable.c:4421)
==29757==    by 0x485B67D: _lou_translateWithTracing (lou_translateString.c:1179)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 8,224 bytes in 1 blocks are still reachable in loss record 12 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x485316B: _lou_allocMem (compileTranslationTable.c:4360)
==29757==    by 0x485B559: _lou_translateWithTracing (lou_translateString.c:1142)
==29757==    by 0x109C9F: main_loop (lou_trace.c:259)
==29757==    by 0x109C9F: main (lou_trace.c:355)
==29757== 
==29757== 17,992 bytes in 1 blocks are still reachable in loss record 13 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x4852D3A: allocateDisplayTable (compileTranslationTable.c:498)
==29757==    by 0x4852D3A: compileTable (compileTranslationTable.c:4135)
==29757==    by 0x4852D3A: lou_getTable (compileTranslationTable.c:4263)
==29757==    by 0x10966A: main (lou_trace.c:351)
==29757== 
==29757== 69,632 bytes in 1 blocks are still reachable in loss record 14 of 15
==29757==    at 0x483877F: malloc (vg_replace_malloc.c:299)
==29757==    by 0x109697: main_loop (lou_trace.c:248)
==29757==    by 0x109697: main (lou_trace.c:355)
==29757== 
==29757== 129,260 bytes in 1 blocks are still reachable in loss record 15 of 15
==29757==    at 0x483AD7B: realloc (vg_replace_malloc.c:826)
==29757==    by 0x484B317: allocateSpaceInTranslationTable (compileTranslationTable.c:417)
==29757==    by 0x484C1D7: addRule.constprop.0 (compileTranslationTable.c:932)
==29757==    by 0x484CCB3: compileCharDef.constprop.0 (compileTranslationTable.c:2558)
==29757==    by 0x484E116: compileRule.constprop.0 (compileTranslationTable.c:2632)
==29757==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29757==    by 0x4851A52: includeFile (compileTranslationTable.c:4105)
==29757==    by 0x4851A52: compileRule.constprop.0 (compileTranslationTable.c:2676)
==29757==    by 0x48527ED: compileFile.constprop.0 (compileTranslationTable.c:4050)
==29757==    by 0x4852A4F: compileTable (compileTranslationTable.c:4155)
==29757==    by 0x4852A4F: lou_getTable (compileTranslationTable.c:4263)
==29757==    by 0x10966A: main (lou_trace.c:351)
==29757== 
==29757== LEAK SUMMARY:
==29757==    definitely lost: 0 bytes in 0 blocks
==29757==    indirectly lost: 0 bytes in 0 blocks
==29757==      possibly lost: 0 bytes in 0 blocks
==29757==    still reachable: 247,930 bytes in 24 blocks
==29757==         suppressed: 0 bytes in 0 blocks
==29757== 
==29757== For counts of detected and suppressed errors, rerun with: -v
==29757== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Test 14: “a 🤣 b” -> OK
$ echo ""a \xd83e\xdd23 b""|lou_translate en-ueb-g1.ctb,test.cti
a ""<rolling on the floor laughing""> b

Using Python binding:
>>> louis.translate(['en-ueb-g1.ctb', 'test.cti'], ""a 🤣 b"")
('a ""<rolling on the floor laughing""> b', [0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 5], [0, 1, 2, 2, 35, 36], 0)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/aaclause,3,https://github.com/liblouis/liblouis/pull/856#issuecomment-532626867,See #848,"@michaelDCurran That's what I had thought too. But I've seen that malloc+memset is more used than calloc in the project:
[andreabush@archaac liblouis]$ grep --include \*.c -ri ""malloc""|wc -l
166
[andreabush@archaac liblouis]$ grep --include \*.c -ri ""memset""|wc -l
31
[andreabush@archaac liblouis]$ grep --include \*.c -ri ""calloc""|wc -l
7",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/856#issuecomment-554964766,See #848,@Andre9642 is this still a draft or is it ready for review?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/856#issuecomment-555010000,See #848,@Andre9642 Also I'm still wondering what actually changed compared to how it was before. What explains that the memory leak is fixed now?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/aaclause,6,https://github.com/liblouis/liblouis/pull/856#issuecomment-555421753,See #848,"@Andre9642 is this still a draft or is it ready for review?

Still a draft, initial issue is not solved. Any help is welcome (currently I don't have time to work on this and would really  like to see that corrected for the next version...).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/856#issuecomment-779274507,See #848,"The plan is to add some Python tests for the Python bindings issue.
We'll merge this PR because it fixes some valgrind issues. The commit message needs to be changed though, because it does not fix issue #848, only part of it. @Andre9642 can you do this? Alternatively you could split up #848 into two separate issues.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/aaclause,8,https://github.com/liblouis/liblouis/pull/856#issuecomment-779658161,See #848,@bertfrees Sorry but I probably won't be able to do it until the end of this week. Feel free to do it when you can (I don't want to block anything). Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/856#issuecomment-779726266,See #848,@Andre9642 End of the week is perfectly fine.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/aaclause,10,https://github.com/liblouis/liblouis/pull/856#issuecomment-783173867,See #848,"I rebased the branch against master and changed the first commit message.
For reference, here are my test files (also available in attachment):
test.cti
noback correct ""\xd83d\xde02"" ""(face\swith\stears\sof\sjoy)""
noback correct ""\xd83e\xdd23"" ""(rolling\son\sthe\sfloor\slaughing)""
noback correct ""\xd83d\xde03"" ""(grinning\sface\swith\sbig\seyes)""


test.py (output in markdown)
#!/usr/bin/env python3
import sys
import subprocess
import louis

tests = {
    ""😂"": r""\xD83D\xDE02"",
    ""😂😂"": r""\xD83D\xDE02\xD83D\xDE02"",
}

vars = [
    ""{}"",
    ""a {}"", ""{} b"", ""a {} b"",
    ""before {}"", ""{} after"", ""before {} after"",
]

err = 0
i = 0
tables = ""en-ueb-g1.ctb,test.cti""

for k, v in tests.items():
    for var in vars:
        i += 1
        lou_translateCmd = f""echo \""{var.format(v)}\""|lou_translate {tables}""
        lou_translateOut = subprocess.Popen(
            lou_translateCmd,
            shell=True,
            stdout=subprocess.PIPE).stdout.read().decode()
        py_cmd = f""louis.translate({tables.split(',')}, \""{var.format(k)}\"")""
        py_out = eval(py_cmd)
        ok = py_out[0].strip() == lou_translateOut.strip()
        res = ""OK"" if ok else ""KO""
        if not ok:
            lou_traceCmd = f""echo \""{var.format(v)}\""|lou_trace {tables}""
            lou_traceOut = subprocess.Popen(
                lou_traceCmd, shell=True, stdout=subprocess.PIPE).stdout.read().decode()
            lou_traceCmdLeak = f""echo \""{var.format(v)}\""|valgrind --leak-check=full --show-leak-kinds=all lou_trace {tables}""
            lou_traceOutLeak = subprocess.Popen(
                lou_traceCmdLeak, shell=True, stdout=subprocess.PIPE,
                stderr=subprocess.PIPE).stderr.read().decode()
            sumarry = lou_traceOutLeak[lou_traceOutLeak.index(
                ""ERROR SUMMARY: "") + 15:]
        print((
            f""# Test {i}: “{var.format(k)}” -> {res}\n""
            f""```\n$ {lou_translateCmd}\n{lou_translateOut}```\n""
            f""\nUsing Python:\n\n```\n>>> {py_cmd}\n{py_out}\n```""
        ))
        if not ok:
            print(
                f""\n<details><summary>Debug infos (valgrind -> {sumarry})</summary>\n\n```\n$ {lou_traceCmd}\n{lou_traceOut}$ {lou_traceCmdLeak}\n{lou_traceOutLeak}```\n</details>"")
            err += 1
        print(""\n"")

print(""\nSummary: %d errors (%.2f%%), %d success (%.2f%%), %d total"" %
      (err, err / i * 100, i - err, (i - err) / i * 100, i))
sys.exit(int(err > 0))

With commit 530b7c9, all tests fail. With c0b820c only 30 %.
See liblouis_tests.zip (full outputs included).
EDIT: I've just seen that my Python script contains the following line in duplicate:
    ""a {}"", ""{} b"", ""a {} b"",

As a result, 3 tests are duplicated. It doesn't change much though.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/856#issuecomment-783277314,See #848,@Andre9642 Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,856,2019-09-17T08:26:21Z,2021-03-03T13:18:11Z,2021-06-02T14:41:02Z,MERGED,True,7,10,2,https://github.com/aaclause,Fix some valgrind issues,2,[],https://github.com/liblouis/liblouis/pull/856,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/856#issuecomment-853086637,See #848,"OK, I think I see where the valgrind issues are coming from (or at least some of them):
In lou_trace.c some memory is allocated for the rules and never freed up.
Also I believe that before exiting the memory for table is not freed. lou_free is invoked alright, but afaik that doesn't free the memory used for a table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,857,2019-09-17T17:29:04Z,2019-11-18T11:46:49Z,2019-11-18T11:46:49Z,MERGED,True,4,1,1,https://github.com/aaclause,Python bindings: uses the appropriate encoding to encode/decode paths,1,['Python'],https://github.com/liblouis/liblouis/pull/857,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/857,"Fixes #698
@leonardder: ping","Fixes #698
@leonardder: ping",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,857,2019-09-17T17:29:04Z,2019-11-18T11:46:49Z,2019-11-18T11:46:49Z,MERGED,True,4,1,1,https://github.com/aaclause,Python bindings: uses the appropriate encoding to encode/decode paths,1,['Python'],https://github.com/liblouis/liblouis/pull/857,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/857#issuecomment-532347943,"Fixes #698
@leonardder: ping","Let's keep the python binding Py2 compatible for now, and then for Liblouis 3.13, I think it is safe to drop Python 2 compatibility.

Hmmm. In these changes, there is no dedicated code for Python 2.
Also, on Windows, ""mbcs"" is used until python 3.5.x, after it's UTF-8. See PEP 529.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,857,2019-09-17T17:29:04Z,2019-11-18T11:46:49Z,2019-11-18T11:46:49Z,MERGED,True,4,1,1,https://github.com/aaclause,Python bindings: uses the appropriate encoding to encode/decode paths,1,['Python'],https://github.com/liblouis/liblouis/pull/857,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/857#issuecomment-532526887,"Fixes #698
@leonardder: ping","My comments re python 2 were about the python wrapper in general, not
specific to this issue/pull request.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,859,2019-09-17T18:19:43Z,2019-11-22T13:12:23Z,2019-11-22T13:12:23Z,MERGED,True,1,0,1,https://github.com/SylvainBrisebois,Add missing header to build with uClibc as C Library,1,['build system'],https://github.com/liblouis/liblouis/pull/859,https://github.com/SylvainBrisebois,1,https://github.com/liblouis/liblouis/pull/859,This is to fix the issue : #858,This is to fix the issue : #858,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,859,2019-09-17T18:19:43Z,2019-11-22T13:12:23Z,2019-11-22T13:12:23Z,MERGED,True,1,0,1,https://github.com/SylvainBrisebois,Add missing header to build with uClibc as C Library,1,['build system'],https://github.com/liblouis/liblouis/pull/859,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/859#issuecomment-532590852,This is to fix the issue : #858,Patch looks harmless enough. @SylvainBrisebois any idea why this works as is under gcc? And next question is this going to work under mingw?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,859,2019-09-17T18:19:43Z,2019-11-22T13:12:23Z,2019-11-22T13:12:23Z,MERGED,True,1,0,1,https://github.com/SylvainBrisebois,Add missing header to build with uClibc as C Library,1,['build system'],https://github.com/liblouis/liblouis/pull/859,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/859#issuecomment-532592323,This is to fix the issue : #858,"Oh, and we should probably use the gnulib module for sys/stat.h to smooth out some of the platform differences. But then again lou_compare will probably be moved to the test dir and loose some of its importance.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/860,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/860#issuecomment-536193568,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","Ok, there seems to be a format issue, but other than that, I guess I am ready for review.
Other things we could do in this PR:

Explain in the documentation that only one rule is applied for each position in each pass, unless ""_"" is used to look behind.
during back-translation, context can't handle character attributes of dot patterns, while pass 2, 3 and 4 can. See test. Should not be too difficult to fix.
There are two functions with the name of ""translatePass"", one in lou_translateString.c and another one in lou_backTranslateString.c. They should probably be named for_translatePass and back_translatePass to avoid confusion.
in lou_translateString.c, posIncremented is declared in the function _lou_translateWithTracing and passed as a pointer down the function chain. However, as far as I can see, the variable itself is never checked or used for anything. I think posIncremented should be local variables where possible and only passed down as a pointer when necessary.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/860#issuecomment-536576179,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.",@BueVest Did you close it by accident?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/860#issuecomment-536607184,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","Sorry, that definitely wasn't on purpose. Don't know how I happened to do that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/860#issuecomment-555207596,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","I've looked at this. I changed some things that I didn't like (will push it later), but there is something that I don't know what to do with. The changes in backTranslateString look wrong to me, but more importantly I suspect this function was already wrong to begin with. I don't understand why passSelectRule is called under ""processing after replacement"". I'd like to sort that out before we fix the endless looping issue for back-translation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/860#issuecomment-558746398,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","I have pushed my changes to another branch: master...buevest#558. Check it out.
@BueVest Would it be OK for you if we only merge the forward-translation part for now?
Regarding the rename from translatePass to for_translatePass and back_translatePass, actually I would argue to remove ""for"" or ""back"" from the names of all the (static) functions in lou_translateString.c and lou_backTranslateString.c, rather than adding it to more functions, because there can be no name conflicts and it is obvious from the file you are currently looking it whether you're dealing with forward or backward translation. Does that make sense?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/860#issuecomment-558754200,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","Yes, that would be ok. I just noticed that some functions have the for_ or back_ prefix, and some don’t. So, I wanted to take the opportunity to have the function names follow more similar rules. But if these functions are only visible from within their own source file anyway, then it would be ok.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/860#issuecomment-585825548,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","Hm, seems like parts of this PR has been merged and the back-translation is still missing. How do we disentangle this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/860#issuecomment-585842557,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","This is the part that is missing: 198ab5e^...c37580a
198ab5e and c37580a can probably be included, but e007d66 is not OK (see FIXMEs).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/860#issuecomment-587939207,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.",I created a new PR for 198ab5e and c37580a: #898. I would just drop the last commit. We've got a test in multipass-backward.yaml that reminds us of the issue.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/860#issuecomment-588147224,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.",In other words you are saying that we can close this PR?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/860#issuecomment-588153351,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","I would. But please put the milestone back to 3.12, since the second part is now addressed by the new PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,860,2019-09-22T19:02:30Z,2020-02-19T10:57:31Z,2020-02-19T10:57:32Z,CLOSED,False,156,27,5,https://github.com/BueVest,Fix #558 and 717,12,[],https://github.com/liblouis/liblouis/pull/860,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/860#issuecomment-588161732,"Experimentally forced the position forward in passDoAction(), but seems to be more complex than just that.
Addresses issue #558 and #717.","OK, thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,864,2019-10-14T20:41:12Z,2019-11-18T13:33:07Z,2019-11-26T13:47:54Z,MERGED,True,350,316,2,https://github.com/bertfrees,Eliminate some global variables,3,['refactoring'],https://github.com/liblouis/liblouis/pull/864,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/864,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,864,2019-10-14T20:41:12Z,2019-11-18T13:33:07Z,2019-11-26T13:47:54Z,MERGED,True,350,316,2,https://github.com/bertfrees,Eliminate some global variables,3,['refactoring'],https://github.com/liblouis/liblouis/pull/864,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/864#issuecomment-541956553,,Apparently this segfaults with gcc. Worked fine with clang.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/lukaszgo1,1,https://github.com/liblouis/liblouis/pull/866,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.","This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/lukaszgo1,2,https://github.com/liblouis/liblouis/pull/866#issuecomment-552431914,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.",@egli @bertfrees  Would it be possible to include these fixes into 3.12?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/866#issuecomment-555442935,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.","@lukaszgo1 Probably, yes. But we still need to review the PR properly. Will keep you informed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/866#issuecomment-558639556,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.",I've squashed the commits and force-pushed.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/866#issuecomment-558640989,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.","@lukaszgo1 I looked at the changes. I'm missing a test file for the computer braille table. Would it possible to add that before the release? The changes to the Greek letter in the computer braille table look a bit suspicious to me because a single Greek letter is now translated to two braille cells, which is unusual for computer braille. This is also the case for the ""less than"" and ""greater than"" signs. Can you explain?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/866#issuecomment-558643427,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.",@lukaszgo1 Can you also add your copyright to the tables and test files please?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/lukaszgo1,7,https://github.com/liblouis/liblouis/pull/866#issuecomment-558644831,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.","The problem is that there is no official standard for Polish computer braille. Before this PR someone had decided how Greek letters, less than, and greater than sign would be represented. I believe that is such cases it is better to use the same definitions which are used in the literary table.  While it might be unusual users would at least recognize the symbol. In case of less than and greater than there also often used in coniunction with dash to create simple arrows -- with the previous translation this meaning was lost.
Regarding tests is it really necessary to provide test  for every single changed character? This is really time consuming.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/866#issuecomment-558650109,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.","It would be nice if this explanation would be present in the tests too. Especially when there is no official standard it is important to explain why certain choices have been made.

Regarding tests is it really necessary to provide test for every single changed character?

Ideally yes. It's mostly just copy-pasting from the table, so I would say it's little effort for what we gain from it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/lukaszgo1,9,https://github.com/liblouis/liblouis/pull/866#issuecomment-559180448,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.",Is there any standard copyright header which should be used in LibLouis files?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/866#issuecomment-559183900,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.","Pl-Pl-g1.utb and pl-pl-comp8.ctb already contain a header with copyright lines. Just add your name to it. For test files you can use for example this:
# Copyright © 2019 by ...
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved. This file is offered as-is,
# without any warranty.
#
# ----------------------------------------------------------------------------------------------",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/lukaszgo1,11,https://github.com/liblouis/liblouis/pull/866#issuecomment-560015713,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.",@bertfrees Done. Sorry for the delay.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,866,2019-11-10T20:23:36Z,2019-12-02T10:06:07Z,2021-02-15T13:15:49Z,MERGED,True,159,65,4,https://github.com/lukaszgo1,Additional fixes to Polish grade 1,2,['tables'],https://github.com/liblouis/liblouis/pull/866,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/866#issuecomment-560111732,"This PR implements the following:

Closes #804
Removes some unneeded mitnum symbols from the Polish Grade 1.
Fixes some symbols which weren't defined according to the specification.
Makes it possible to type dot from a braille keyboard.
Adds Greek letters  and some commonly used math operators to both Grade 1 and computer braille table,

I've added tests for the first wave of changes - creating them for simple characters such as Greek letters makes no sense in my opinion.","No problem, it was still in time. Everything looks good now. Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,867,2019-11-18T13:18:16Z,2020-02-19T09:43:57Z,2020-02-19T09:44:02Z,MERGED,True,732,685,20,https://github.com/bertfrees,nocross as prefix opcode,4,['enhancement'],https://github.com/liblouis/liblouis/pull/867,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/867,"Hi @BueVest I've implemented #111. Could you please test if this does what you expect?
Other things to do:

 Update documentation
 Test lou_maketable","Hi @BueVest I've implemented #111. Could you please test if this does what you expect?
Other things to do:

 Update documentation
 Test lou_maketable",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,867,2019-11-18T13:18:16Z,2020-02-19T09:43:57Z,2020-02-19T09:44:02Z,MERGED,True,732,685,20,https://github.com/bertfrees,nocross as prefix opcode,4,['enhancement'],https://github.com/liblouis/liblouis/pull/867,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/867#issuecomment-587932764,"Hi @BueVest I've implemented #111. Could you please test if this does what you expect?
Other things to do:

 Update documentation
 Test lou_maketable",@egli I fixed the two remaining issues.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,871,2019-11-25T13:05:02Z,2019-11-27T15:22:32Z,2019-11-27T15:22:36Z,MERGED,True,11,8,3,https://github.com/egli,Fixes to Norwegian Liblouis' 8dot braille,3,['tables'],https://github.com/liblouis/liblouis/pull/871,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/871,"Thanks to Oddvar Øyan Oddvar.Oyan@statped.no, I've been made aware that there were errors in the Norwegian Liblouis' 8dot braille table in regards to 4 sami characters, capital and small letters S and Z with caron.","Thanks to Oddvar Øyan Oddvar.Oyan@statped.no, I've been made aware that there were errors in the Norwegian Liblouis' 8dot braille table in regards to 4 sami characters, capital and small letters S and Z with caron.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,871,2019-11-25T13:05:02Z,2019-11-27T15:22:32Z,2019-11-27T15:22:36Z,MERGED,True,11,8,3,https://github.com/egli,Fixes to Norwegian Liblouis' 8dot braille,3,['tables'],https://github.com/liblouis/liblouis/pull/871,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/871#issuecomment-558146549,"Thanks to Oddvar Øyan Oddvar.Oyan@statped.no, I've been made aware that there were errors in the Norwegian Liblouis' 8dot braille table in regards to 4 sami characters, capital and small letters S and Z with caron.",See https://www.freelists.org/post/liblouis-liblouisxml/Changes-to-the-Norwegian-8dot-braille-table,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,871,2019-11-25T13:05:02Z,2019-11-27T15:22:32Z,2019-11-27T15:22:36Z,MERGED,True,11,8,3,https://github.com/egli,Fixes to Norwegian Liblouis' 8dot braille,3,['tables'],https://github.com/liblouis/liblouis/pull/871,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/871#issuecomment-559019284,"Thanks to Oddvar Øyan Oddvar.Oyan@statped.no, I've been made aware that there were errors in the Norwegian Liblouis' 8dot braille table in regards to 4 sami characters, capital and small letters S and Z with caron.","@egli Just for the record. It was you who changed the tests, right?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,871,2019-11-25T13:05:02Z,2019-11-27T15:22:32Z,2019-11-27T15:22:36Z,MERGED,True,11,8,3,https://github.com/egli,Fixes to Norwegian Liblouis' 8dot braille,3,['tables'],https://github.com/liblouis/liblouis/pull/871,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/871#issuecomment-559113106,"Thanks to Oddvar Øyan Oddvar.Oyan@statped.no, I've been made aware that there were errors in the Norwegian Liblouis' 8dot braille table in regards to 4 sami characters, capital and small letters S and Z with caron.","Yes, it was.
It was pretty annoying as I couldn't see the differences in the test_suite.log because I seem to have only a 6dot braille font installed",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,872,2019-11-25T13:30:49Z,2019-11-27T10:29:19Z,2019-11-27T14:46:09Z,MERGED,True,7,23,1,https://github.com/egli,"Remove the second, undocumented argument to lou_translate",1,['refactoring'],https://github.com/liblouis/liblouis/pull/872,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/872,"lou_translate has had an undocumented feature to directly specify a file to translate instead of piping it in via stdin. This code crashes if a non-existing file is passed in (see #849).
This PR takes a different approach at preventing this crash than the previous PR (#850).
In the spirit of less is more, instead of making the code more tamper-proof and documenting it, we simply remove this feature.
The behaviour can easily be had by using lou_translate foo.tbl < bar.txt
Fixes #849
Supercedes #850","lou_translate has had an undocumented feature to directly specify a file to translate instead of piping it in via stdin. This code crashes if a non-existing file is passed in (see #849).
This PR takes a different approach at preventing this crash than the previous PR (#850).
In the spirit of less is more, instead of making the code more tamper-proof and documenting it, we simply remove this feature.
The behaviour can easily be had by using lou_translate foo.tbl < bar.txt
Fixes #849
Supercedes #850",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/873,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,2,https://github.com/liblouis/liblouis/pull/873#issuecomment-558530270,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870",@dkager: Could you have a quick review as well?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/873#issuecomment-558559031,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","Quick question, how do I perform a single test? Running all these tests over and over again is a bit useless. I recall there's a method, but couldn't find it documented that quickly.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/873#issuecomment-558559994,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870",make check TESTS=braille-specs/nl-comp8_harness,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/aaclause,5,https://github.com/liblouis/liblouis/pull/873#issuecomment-558561756,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","@leonardder you can also use lou_checkyaml with .yaml file in argument.
Also, maybe you should remove the following  commented lines:
# space	 x0009 0		character tabulation
# space \x000a 0		line feed (LF)
# space \x000b 0		line tabulation
# space \x000c 0		form feed (FF)
# space \x000d 0		carriage return (CR)
# space \s     0		space
#space \x00a0 0		no-break space",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,6,https://github.com/liblouis/liblouis/pull/873#issuecomment-558563205,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","I have the following test:
  - - Röntgen. Jan zei: De bal was ín!.
    - ⡗⢪⠝⠞⠛⠑⠝⠲ ⡚⠁⠝ ⠵⠑⠊⠒ ⣆⡙⠑ ⠃⠁⠇ ⠺⠁⠎ ⢌⠝⠖⣰⠲

it fails as follows: lou_checkyaml:./braille-specs/nl-comp8_harness.yaml:49: Word expected
Probably because of the colon in the string. How could I escape that?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,7,https://github.com/liblouis/liblouis/pull/873#issuecomment-558563473,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","@bertfrees, thanks for your assistance
@Andre9642: I will remove those indeed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/873#issuecomment-558564489,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","You could escape it with a backslash, but it's nicer to enclose the whole string with single or double quotes.
- - ""Röntgen. Jan zei: De bal was ín!.""
  - ⡗⢪⠝⠞⠛⠑⠝⠲ ⡚⠁⠝ ⠵⠑⠊⠒ ⣆⡙⠑ ⠃⠁⠇ ⠺⠁⠎ ⢌⠝⠖⣰⠲",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,9,https://github.com/liblouis/liblouis/pull/873#issuecomment-558566114,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","Thanks again. I think checks are going to pass now, at least locally they ran fine.
I assume that by default, the yaml tests are run forwards and backwards, unless you explicitly state so in the flags?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/aaclause,10,https://github.com/liblouis/liblouis/pull/873#issuecomment-558568007,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","According the documentation , if no flags are defined forward translation is assumed",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,11,https://github.com/liblouis/liblouis/pull/873#issuecomment-558568816,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","Thanks Andre.
There's currently a test failing regarding the javascript build, but that failure seems unrelated to my pr, unless I""m missing something.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,12,https://github.com/liblouis/liblouis/pull/873#issuecomment-558664598,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","I'm sorry for the huge bunch of fixup in this. I'd advise squash merging this, or I can rebase this beforehand.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/873#issuecomment-558666075,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870",Yes I was planning to do some squashing. But if you want to do it that's even better.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/873#issuecomment-559018809,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","I rebased the branch, fixed the typo and added a NEWS file. However I was denied access to your branch so I pushed it here.
@leonardder Before we merge this, is there anything else I should put in the NEWS file? Something like ""don't publish the table in your products yet""?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,873,2019-11-26T08:58:43Z,2019-11-27T14:33:14Z,2019-11-27T14:33:14Z,MERGED,True,222,1,6,https://github.com/leonardder,Dutch 8 dot braille table draft,2,['tables'],https://github.com/liblouis/liblouis/pull/873,https://github.com/leonardder,15,https://github.com/liblouis/liblouis/pull/873#issuecomment-559060305,"This adds a table for the 8 dot Dutch Computer Braille standard, which is currently in draft.
Closes #870","I can't follow why you aren't allowed to push, as I have allow edits from maintainers turned on.
News is OK to me, it's clearly stated that this is a draft.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,874,2019-11-27T10:41:27Z,2019-12-02T10:16:27Z,2019-12-02T10:20:05Z,MERGED,True,63,30,6,https://github.com/bertfrees,Raise error if a dot pattern can not be displayed,2,['enhancement'],https://github.com/liblouis/liblouis/pull/874,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/874,fixes issue #750,fixes issue #750,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,874,2019-11-27T10:41:27Z,2019-12-02T10:16:27Z,2019-12-02T10:20:05Z,MERGED,True,63,30,6,https://github.com/bertfrees,Raise error if a dot pattern can not be displayed,2,['enhancement'],https://github.com/liblouis/liblouis/pull/874,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/874#issuecomment-559035983,fixes issue #750,While working on this issue I noticed that there are several places where the (forward and backward) translation depend on the display table. Obviously this should be fixed at some point if we want to separate display and translation completely.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,874,2019-11-27T10:41:27Z,2019-12-02T10:16:27Z,2019-12-02T10:20:05Z,MERGED,True,63,30,6,https://github.com/bertfrees,Raise error if a dot pattern can not be displayed,2,['enhancement'],https://github.com/liblouis/liblouis/pull/874,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/874#issuecomment-559036978,fixes issue #750,"OK hold on some tests are failing, let me fix that first.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,874,2019-11-27T10:41:27Z,2019-12-02T10:16:27Z,2019-12-02T10:20:05Z,MERGED,True,63,30,6,https://github.com/bertfrees,Raise error if a dot pattern can not be displayed,2,['enhancement'],https://github.com/liblouis/liblouis/pull/874,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/874#issuecomment-559050018,fixes issue #750,Tests are fixed.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,876,2019-11-27T18:42:08Z,2019-12-02T09:59:46Z,2019-12-02T10:04:37Z,MERGED,True,107,52,4,https://github.com/bertfrees,Fix endless loop,9,[],https://github.com/liblouis/liblouis/pull/876,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/876,"Fixes #558 for forward translation.
This is the part of #860 that deals with forward translation only, and without the function renaming.","Fixes #558 for forward translation.
This is the part of #860 that deals with forward translation only, and without the function renaming.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,878,2019-11-30T22:26:11Z,2019-12-02T09:53:02Z,2019-12-02T11:23:40Z,MERGED,True,3135,842,2,https://github.com/school510587,Update zh-tw.ctb version to 2019-11,1,[],https://github.com/liblouis/liblouis/pull/878,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/878,"Summary of changes:

Add U+2039 and U+203A, a pair of single angle quotations.
Further improvements in Chinese translation.
Remove unnecessary testcases from zh-tw.yaml.

Reviewers:

Coscell Kao coscell@gmail.com
特種兵 afreettears@gmail.com
黃偉豪 hurt.nzsmr@gmail.com
Victor Cai surfer0627@gmail.com","Summary of changes:

Add U+2039 and U+203A, a pair of single angle quotations.
Further improvements in Chinese translation.
Remove unnecessary testcases from zh-tw.yaml.

Reviewers:

Coscell Kao coscell@gmail.com
特種兵 afreettears@gmail.com
黃偉豪 hurt.nzsmr@gmail.com
Victor Cai surfer0627@gmail.com",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,879,2019-12-01T20:10:47Z,2019-12-02T15:51:35Z,2019-12-02T15:51:36Z,MERGED,True,322,66,9,https://github.com/BueVest,Update to the Danish tables,15,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/879,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/879,Should be ready for merge,Should be ready for merge,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,879,2019-12-01T20:10:47Z,2019-12-02T15:51:35Z,2019-12-02T15:51:36Z,MERGED,True,322,66,9,https://github.com/BueVest,Update to the Danish tables,15,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/879,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/879#issuecomment-560365197,Should be ready for merge,"@BueVest Thanks but I'm missing some tests. I think I know what you're gonna say: it's highly experimental, and there is no standard for it. But still, there could be tests for at least the part of the table that is defined in a standard, and even for the other stuff there could be tests even if it is subject to change. Also there are some changes in the grade 2 tables beside the inclusion of da-dk-8miscChars.cti.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,879,2019-12-01T20:10:47Z,2019-12-02T15:51:35Z,2019-12-02T15:51:36Z,MERGED,True,322,66,9,https://github.com/BueVest,Update to the Danish tables,15,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/879,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/879#issuecomment-560410503,Should be ready for merge,@BueVest OK you know what maybe we can include it in 3.12 anyway if you promise to add the missing tests soon? We can trust you.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,879,2019-12-01T20:10:47Z,2019-12-02T15:51:35Z,2019-12-02T15:51:36Z,MERGED,True,322,66,9,https://github.com/BueVest,Update to the Danish tables,15,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/879,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/879#issuecomment-560412038,Should be ready for merge,"I am making some Unicode tests. Apart from the Unicode chars, the only thing that has changed is correcting a bug where one or two lines had not been changed from sufword to begword.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,879,2019-12-01T20:10:47Z,2019-12-02T15:51:35Z,2019-12-02T15:51:36Z,MERGED,True,322,66,9,https://github.com/BueVest,Update to the Danish tables,15,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/879,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/879#issuecomment-560414277,Should be ready for merge,OK moved to 3.12. Yeah the sufword/begword is what I meant. In da-dk-g28l.ctb it's more than one or two lines. I thought it's a bit weird that this would not be covered by your extensive test suite.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,879,2019-12-01T20:10:47Z,2019-12-02T15:51:35Z,2019-12-02T15:51:36Z,MERGED,True,322,66,9,https://github.com/BueVest,Update to the Danish tables,15,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/879,https://github.com/BueVest,6,https://github.com/liblouis/liblouis/pull/879#issuecomment-560420331,Should be ready for merge,Promise!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,883,2019-12-05T11:21:24Z,2020-02-17T13:33:04Z,2020-02-17T13:33:05Z,MERGED,True,1,1,1,https://github.com/aaclause,Fixes #882,1,['Python'],https://github.com/liblouis/liblouis/pull/883,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/883,Fixes #882,Fixes #882,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,883,2019-12-05T11:21:24Z,2020-02-17T13:33:04Z,2020-02-17T13:33:05Z,MERGED,True,1,1,1,https://github.com/aaclause,Fixes #882,1,['Python'],https://github.com/liblouis/liblouis/pull/883,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/883#issuecomment-562089035,Fixes #882,"I don't know anything about the Python bindings. @egli, @leonardder, can you have a look?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,884,2019-12-05T11:51:07Z,2020-02-18T13:37:35Z,2020-02-18T13:37:35Z,MERGED,True,2,1,1,https://github.com/amigadave,A couple of small Coverity fixes,2,[],https://github.com/liblouis/liblouis/pull/884,https://github.com/amigadave,1,https://github.com/liblouis/liblouis/pull/884,"When doing some packaging for RHEL 8, I came across these issues as reported by Coverity. I have not done much testing other than running the test suite, and I do not know liblouis well, so a careful look over the changes is probably in order. Thanks!","When doing some packaging for RHEL 8, I came across these issues as reported by Coverity. I have not done much testing other than running the test suite, and I do not know liblouis well, so a careful look over the changes is probably in order. Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,884,2019-12-05T11:51:07Z,2020-02-18T13:37:35Z,2020-02-18T13:37:35Z,MERGED,True,2,1,1,https://github.com/amigadave,A couple of small Coverity fixes,2,[],https://github.com/liblouis/liblouis/pull/884,https://github.com/amigadave,2,https://github.com/liblouis/liblouis/pull/884#issuecomment-562192131,"When doing some packaging for RHEL 8, I came across these issues as reported by Coverity. I have not done much testing other than running the test suite, and I do not know liblouis well, so a careful look over the changes is probably in order. Thanks!","It is probably true that the memory locations overlap but afaik the memcpy is only doing a byte shift so to speak. That seems OK. But I guess memmove cannot hurt.

The copy method on some platforms changed in glibc 2.13 (and any C library is free to do the same thing), so that the order in which the copy occurred was reversed (I think to copy from the end of the memory area and to work backwards to the beginning). As it's not possible to rely on the direction of the memcpy() implementation, memmove() definitely seems the better choice.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,889,2019-12-17T20:06:38Z,2020-02-18T14:06:22Z,2020-02-18T14:13:09Z,MERGED,True,199,268,4,https://github.com/bertfrees,Fix issue 886,6,[],https://github.com/liblouis/liblouis/pull/889,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/889,Fixes #886,Fixes #886,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,889,2019-12-17T20:06:38Z,2020-02-18T14:06:22Z,2020-02-18T14:13:09Z,MERGED,True,199,268,4,https://github.com/bertfrees,Fix issue 886,6,[],https://github.com/liblouis/liblouis/pull/889,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/889#issuecomment-567090673,Fixes #886,"What happened to insertBrailleIndicators?

I took it apart. It is now insertLetterSign + insertNumberSign.

I can hardly believe that you replace all this code.

There was a lot of dead code in insertBrailleIndicators, probably due to Mike's reimplementation of emphasis indicators and because he didn't clean up the code.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,891,2020-01-02T14:18:05Z,2020-01-17T10:48:44Z,2020-01-17T10:52:11Z,MERGED,True,9,3,1,https://github.com/sthibaul,Align translation rules on 64bit,1,[],https://github.com/liblouis/liblouis/pull/891,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/891,"rules use 64bit fields, so we need to align them on 64bit on architectures
which require it (e.g. sparc64), and that will also make other architectures
slightly faster.
Fixes #890","rules use 64bit fields, so we need to align them on 64bit on architectures
which require it (e.g. sparc64), and that will also make other architectures
slightly faster.
Fixes #890",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/893,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/893#issuecomment-588300531,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","Yes, of course.

However, I need to rebase on the latest master in order to do that and then update my remote “origin” branch to be merged. This is something that always goes wrong for me, ending up with me having to delete the remote branch and recreating it from local.

Can any of you tell me what is the best way to rebase the feature branch and then push the rebased branch?

Sorry for the inconvenience.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/893#issuecomment-588320670,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","Hi Bue. Why do you want to do a rebase? Is there something specific from master that you need? If you always get in trouble when you try it, better just don't do it, right?
Doing a rebase is not so hard though. You just make sure you have fetched all the latest stuff from upstream:
git fetch origin

(assuming the remote named ""origin"" is this repository), you make sure you are on the branch that you want to rebase, and then you do:
git rebase origin/master

Nothing more to it.
Then in order to push your rebased branch you need to use the ""force-with-lease"" option:
git push --force-with-lease BueVest buevest_dk2003:buevest_dk2003

(assuming the remote named ""BueVest"" is your cloned repository).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/893#issuecomment-588421131,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","Hi Bert,

I need to do the rebase in order to get the correct structure for the NEWS entry of version 3.13. The NEWS file on my branch ends at version 3.12.

Since I am working on a cloned repo, I need to do the following:

*	Git fetch upstream master
*	Git checkout mybranch
*	Git rebase master
*	Git push origin mybranch

Or something like that. But I run into trouble when I try to push my rebased master to origin, since it is not able to fast-forward.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/893#issuecomment-588431956,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","Just add it somewhere at the top of the NEWS file. We'll make sure it ends up at the correct place.
As I said you need to use push --force-with-lease.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/BueVest,6,https://github.com/liblouis/liblouis/pull/893#issuecomment-591451766,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","Ok, what does one usually do then? Just right the current year, i.e. 2020?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/893#issuecomment-591502887,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","Well, since I have been working continuously on the tables, I guess I will just keep 2014-2020, according to your comment in #908. I just didn’t update the messages before now, and I wouldn’t know what years to exclude in the list.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/BueVest,8,https://github.com/liblouis/liblouis/pull/893#issuecomment-592156241,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","You wrote:

@bertfrees requested changes on this pull request.

See comments in the code.

—

Ok, I have made some changes. If anything is still missing, could you please make a list? It is a bit difficult to browse the code on github and find comments.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/893#issuecomment-592187503,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.",Thanks. No that was the only comment I had.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/893#issuecomment-592187764,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.",Are there still things you want to add?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/BueVest,11,https://github.com/liblouis/liblouis/pull/893#issuecomment-592436919,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.","No, there is nothing critical. I will continue my work for the release after this one. It is more important for me to get the German tables in a mergeable state.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,893,2020-02-16T21:52:29Z,2020-02-28T11:31:45Z,2020-02-28T11:32:27Z,CLOSED,False,0,0,0,https://github.com/BueVest,"Various updates to the Danish tables, mostly tests",0,['tables'],https://github.com/liblouis/liblouis/pull/893,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/893#issuecomment-592474420,"If I get more time before the release date, there are still a few things I would like to add. Otherwise, ready to merge.",Merged in b765bff,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,894,2020-02-17T09:31:17Z,2020-02-28T08:07:57Z,2020-02-28T10:35:59Z,MERGED,True,280,201,15,https://github.com/bertfrees,Use emphletter to mark every letter in certain cases,2,['enhancement'],https://github.com/liblouis/liblouis/pull/894,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/894,"Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.","Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,894,2020-02-17T09:31:17Z,2020-02-28T08:07:57Z,2020-02-28T10:35:59Z,MERGED,True,280,201,15,https://github.com/bertfrees,Use emphletter to mark every letter in certain cases,2,['enhancement'],https://github.com/liblouis/liblouis/pull/894,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/894#issuecomment-586900283,"Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.",Documentation needs to be updated.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,894,2020-02-17T09:31:17Z,2020-02-28T08:07:57Z,2020-02-28T10:35:59Z,MERGED,True,280,201,15,https://github.com/bertfrees,Use emphletter to mark every letter in certain cases,2,['enhancement'],https://github.com/liblouis/liblouis/pull/894,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/894#issuecomment-587405612,"Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.",I've got some more stuff coming up if this PR gets merged. Notably a fix for #713. I think we should do it in time because it will break Attila's table so I need him to make some changes to it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,894,2020-02-17T09:31:17Z,2020-02-28T08:07:57Z,2020-02-28T10:35:59Z,MERGED,True,280,201,15,https://github.com/bertfrees,Use emphletter to mark every letter in certain cases,2,['enhancement'],https://github.com/liblouis/liblouis/pull/894,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/894#issuecomment-587406094,"Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.",Or I could also add the #713 fix to this PR?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,894,2020-02-17T09:31:17Z,2020-02-28T08:07:57Z,2020-02-28T10:35:59Z,MERGED,True,280,201,15,https://github.com/bertfrees,Use emphletter to mark every letter in certain cases,2,['enhancement'],https://github.com/liblouis/liblouis/pull/894,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/894#issuecomment-587522208,"Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.","I could also add the #713 fix to this PR?

To me it looks like #713 depends on this PR but is more of a problem with a table. So I'd keep the two separate",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,894,2020-02-17T09:31:17Z,2020-02-28T08:07:57Z,2020-02-28T10:35:59Z,MERGED,True,280,201,15,https://github.com/bertfrees,Use emphletter to mark every letter in certain cases,2,['enhancement'],https://github.com/liblouis/liblouis/pull/894,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/894#issuecomment-587530266,"Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.","OK fine, I can also just base the other PR on this PR (if it's not merged yet tonight).
It's not just a problem with the table though. I had to do another somewhat related bug fix.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,894,2020-02-17T09:31:17Z,2020-02-28T08:07:57Z,2020-02-28T10:35:59Z,MERGED,True,280,201,15,https://github.com/bertfrees,Use emphletter to mark every letter in certain cases,2,['enhancement'],https://github.com/liblouis/liblouis/pull/894,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/894#issuecomment-592242617,"Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.",Documentation is updated.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,894,2020-02-17T09:31:17Z,2020-02-28T08:07:57Z,2020-02-28T10:35:59Z,MERGED,True,280,201,15,https://github.com/bertfrees,Use emphletter to mark every letter in certain cases,2,['enhancement'],https://github.com/liblouis/liblouis/pull/894,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/894#issuecomment-592398792,"Remove feature (which was added by Bue in #331) to mark every capital letter with capsletter by defining capsnocont (and not defining begcapsword). In hindsight this was really a hack.
Instead, this behavior can now be enabled by simply not defining begcaps (and begcapsword). It now also works the same way for other emphasis.
In addition, also use capsletter when begcapsword is defined but endcapsword is not, and emphasis ends in the middle of a word. This fixes issue #791.",@bertfrees can you give me a small summary of these changes that I can put in a NEWS entry?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/896,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/lukaszgo1,2,https://github.com/liblouis/liblouis/pull/896#issuecomment-587473952,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","I'm afraid that using locale.getpreferredencoding to decode path would fail in the situation in which someone has the new Unicode support enabled in Windows and is using Python < 3.8. In 3.7 and earlier cp65001 is not mapped to UTF8, and probably encoding would fail. This is a bit theoretical I  do not have means to test this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/896#issuecomment-587499328,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","We only have to encode paths, not decode.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/896#issuecomment-588133926,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Are you sure we can drop support for Python2? Generally I see the liblouis users base as a fairly conservative crowd that does not like change very much. Obviously NVDA is one of the major users of the Python bindings and they have migrated but there might be others.
I am not particularly opinionated about this, but I'm just wondering if all the users of the Python bindings are ready for Python3.
Come to think of it, there is some code in python/examples that I created 10 years ago and never touched since. This should probably be tested and ported to Python3",True,{'THUMBS_UP': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,5,https://github.com/liblouis/liblouis/pull/896#issuecomment-588159165,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Are you sure we can drop support for Python2? Generally I see the liblouis users base as a fairly conservative crowd that does not like change very much.

Well, we can never be sure, but I'd assume that the conservative people who stick to old versions of Python might also stick to old versions of liblouis. The only people I can think of is them using older linux distributions while building Liblouis from source. All major linux distributions seem to offer Python3 as their defaults now.

Obviously NVDA is one of the major users of the Python bindings and they have migrated but there might be others.

I believe Orca is also Python 3 now?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/aaclause,6,https://github.com/liblouis/liblouis/pull/896#issuecomment-588159362,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Personally, I'm reluctant to drop the Python 2 compatibility, at least for this version. Is it really necessary?
We can maintain Python 2 and 3 with a reasonable effort, and IMO there's no particular reason to do without.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,7,https://github.com/liblouis/liblouis/pull/896#issuecomment-588204791,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Personally, I can't afford it to test every change in the wrapper against Python 2.
I think I'll leave this pr as is, but leave it as draft so it won't go in 3.13. We could backport the other changes to a separate pr for 3.13, but I'm afraid I won't have time for that yet, as my holidays are over 😂
May be @lukaszgo1 or @Andre9642 is interested to do this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/aaclause,8,https://github.com/liblouis/liblouis/pull/896#issuecomment-588245247,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Personally, I can't afford it to test every change in the wrapper against Python 2.

I understand.

May be @lukaszgo1 or @Andre9642 is interested to do this?

OK for me 😆.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/896#issuecomment-591358214,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","What is the status of this PR? Here is what I gather:

As far as I can tell #895 has been solved by #900
we are not fixing #877 in this release. There is an deprecation warning in the release notes for this release however
The sys.getfilesystemencoding() problem has been solved by #895 afaik
The type annotations have not gone in afaik
Are the issues regarding getTypeformForEmphClass and compileString also fixed by #895?

So what's left seems to be the dropping of Python2 support and the type annotations. Is that correct? Should this go in a separate PR or should we keep this one?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,10,https://github.com/liblouis/liblouis/pull/896#issuecomment-591362057,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","So what's left seems to be the dropping of Python2 support and the type annotations. Is that correct? Should this go in a separate PR or should we keep this one?

Yes, this is true. I can update this pr if you desire. Alternatively, we can close it and keep it in mind when we'll ever have to reconsider dropping Python 2 support again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/896#issuecomment-591443579,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","I can update this pr if you desire. Alternatively, we can close it and keep it in mind when we'll ever have to reconsider dropping Python 2 support again.

IMHO the best would be to open a new PR that drops support for Python2, maybe yet another one that adds type annotations. That way we can discuss them individually and if possible merge them in time for the 3.14 release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/896#issuecomment-633477181,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642",@leonardder can you move the changes that drop support for Python2 into a separate PR please?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,13,https://github.com/liblouis/liblouis/pull/896#issuecomment-633480379,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","I won't have time to do that before this release, I""m afraid.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/896#issuecomment-679106432,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642",@leonardder do you have time to move the changes that drop support for Python2 into a separate PR please?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,15,https://github.com/liblouis/liblouis/pull/896#issuecomment-679263960,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Ii can do that before the release after the next release, as I have a
week off in October.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/896#issuecomment-679868242,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","@leonardder OK, excellent. I'd appreciate that. I'll move it to the next release then",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/egli,17,https://github.com/liblouis/liblouis/pull/896#issuecomment-727873743,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642",@leonardder any progress on this front?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,18,https://github.com/liblouis/liblouis/pull/896#issuecomment-727875469,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Ugh, to be very honest, I had forgotten about this one. Let me see what I can do this week. If I can't, I'm afraid we have to skip this for another release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,19,https://github.com/liblouis/liblouis/pull/896#issuecomment-731348675,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Due to several merge conflicts, this is going to take me more time than I expected and currently have. Also given the request to split things up, it's probably quicker to go through the diff and apply all the desired changes one by one by hand.
There should be some additional days off in december, but that's too late for the release. Could you poke me again around New years eve if I forget?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,20,https://github.com/liblouis/liblouis/pull/896#issuecomment-731387370,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642","Never mind, it turns out that mainly Git was going mad with the conflicts.
It seemed easier to me to go with the python 2 dropping in this pr and when that's done, I will open a new pr that adds the annotations.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,896,2020-02-18T13:26:42Z,2020-11-25T12:27:56Z,2020-11-25T12:52:28Z,MERGED,True,8,10,1,https://github.com/leonardder,Drop Python 2 support,1,"['refactoring', 'Python']",https://github.com/liblouis/liblouis/pull/896,https://github.com/leonardder,21,https://github.com/liblouis/liblouis/pull/896#issuecomment-732885234,"Fixes #895
Closes #877
This pr addresses the following:

It removes Python 2 support, as Python 2 is no longer maintained by Python. This way, we no longer have to bother about maintaining compatibility
Rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1. I think this more closely resembles what liblouis expects from us.
It adds type annotations to the several functions
It fixes two issues in the wrapper:

getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one
The same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis



I'm opening this as draft, as it requires some testing, but I intend it to be finished before 3.13.
cc @Andre9642",Noticed that this was still a draft,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,897,2020-02-18T20:31:00Z,2020-02-28T10:41:55Z,2020-02-28T11:35:38Z,CLOSED,False,315,229,18,https://github.com/bertfrees,Use begemphword/endemphword for single letters when emphletter is not defined,6,[],https://github.com/liblouis/liblouis/pull/897,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/897,"Fixes issue #713

 Maybe needs a note in the documentation","Fixes issue #713

 Maybe needs a note in the documentation",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,897,2020-02-18T20:31:00Z,2020-02-28T10:41:55Z,2020-02-28T11:35:38Z,CLOSED,False,315,229,18,https://github.com/bertfrees,Use begemphword/endemphword for single letters when emphletter is not defined,6,[],https://github.com/liblouis/liblouis/pull/897,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/897#issuecomment-587807100,"Fixes issue #713

 Maybe needs a note in the documentation","@hammera I fixed a bug, but now hu-hu-g2_harness.yaml is failing.
It looks like the special rules for handling roman numbers need to be updated. I they they are meant to work around the bug, but now this results in a double caps indicator.
Could you please have a look?

  This is the test log
Input:    'I. Augustus császár.'
Expected: '⠨⠊⠄ ⠁⠥⠛⠥⠎⠞⠥⠎ ⠩⠈⠱⠈⠗⠄' (length 19)
Received: '⠨⠨⠊⠄ ⠁⠥⠛⠥⠎⠞⠥⠎ ⠩⠈⠱⠈⠗⠄' (length 20)
Diff:     Expected '⠊' but received '⠨' in index 1
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:16: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A hibát az okozza, hogy eltűnt a parancsikon.'
Expected: '⠂⠓⠊⠃⠈⠞ ⠁⠣ ⠕⠅⠕⠣⠣⠁⠂⠓ ⠑⠇⠞⠾⠝⠞ ⠂⠏⠁⠗⠁⠝⠩⠊⠅⠕⠝⠄' (length 38)
Received: '⠨⠂⠓⠊⠃⠈⠞ ⠁⠣ ⠕⠅⠕⠣⠣⠁⠂⠓ ⠑⠇⠞⠾⠝⠞ ⠂⠏⠁⠗⠁⠝⠩⠊⠅⠕⠝⠄' (length 39)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:37: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A háromszög a és b oldala egyenlő.'
Expected: '⠂⠓⠈⠗⠕⠍⠱⠟⠛ ⠁ ⠡ ⠃ ⠕⠇⠙⠁⠇⠁ ⠑⠹⠑⠝⠇⠻⠄' (length 30)
Received: '⠨⠂⠓⠈⠗⠕⠍⠱⠟⠛ ⠁ ⠡ ⠃ ⠕⠇⠙⠁⠇⠁ ⠑⠹⠑⠝⠇⠻⠄' (length 31)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:41: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A történet pikantériáját az adja, hogy mégis eltűnik a parancsikon.'
Expected: '⠂⠞⠟⠗⠞⠡⠝⠑⠞ ⠏⠊⠅⠁⠝⠞⠡⠗⠊⠈⠚⠈⠞ ⠁⠣ ⠁⠙⠚⠁⠂⠓ ⠍⠡⠛⠊⠎ ⠑⠇⠞⠾⠝⠊⠅ ⠂⠏⠁⠗⠁⠝⠩⠊⠅⠕⠝⠄' (length 60)
Received: '⠨⠂⠞⠟⠗⠞⠡⠝⠑⠞ ⠏⠊⠅⠁⠝⠞⠡⠗⠊⠈⠚⠈⠞ ⠁⠣ ⠁⠙⠚⠁⠂⠓ ⠍⠡⠛⠊⠎ ⠑⠇⠞⠾⠝⠊⠅ ⠂⠏⠁⠗⠁⠝⠩⠊⠅⠕⠝⠄' (length 61)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:44: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A költő az alábbi sorokat írta naplójába'
Expected: '⠂⠅⠟⠇⠞⠻ ⠁⠣ ⠁⠇⠈⠃⠃⠊ ⠎⠕⠗⠕⠅⠁⠞ ⠌⠗⠞⠁ ⠝⠁⠏⠇⠪⠚⠈⠃⠁' (length 39)
Received: '⠨⠂⠅⠟⠇⠞⠻ ⠁⠣ ⠁⠇⠈⠃⠃⠊ ⠎⠕⠗⠕⠅⠁⠞ ⠌⠗⠞⠁ ⠝⠁⠏⠇⠪⠚⠈⠃⠁' (length 40)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:55: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A vállal ige nem rövidítendő.'
Expected: '⠂⠧⠈⠇⠇⠁⠇ ⠊⠛⠑ ⠝ ⠗⠙⠌⠞⠑⠝⠙⠻⠄' (length 23)
Received: '⠨⠂⠧⠈⠇⠇⠁⠇ ⠊⠛⠑ ⠝ ⠗⠙⠌⠞⠑⠝⠙⠻⠄' (length 24)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:57: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A gyártó két év garanciát vállal a termékre.'
Expected: '⠂⠹⠈⠗⠞⠪ ⠅⠡⠞ ⠡⠧ ⠛⠁⠗⠁⠝⠉⠊⠈⠞ ⠧⠈⠇⠇⠁⠇ ⠂⠞⠑⠗⠍⠡⠅⠗⠑⠄' (length 41)
Received: '⠨⠂⠹⠈⠗⠞⠪ ⠅⠡⠞ ⠡⠧ ⠛⠁⠗⠁⠝⠉⠊⠈⠞ ⠧⠈⠇⠇⠁⠇ ⠂⠞⠑⠗⠍⠡⠅⠗⠑⠄' (length 42)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:58: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A kolléga részt vállal a feladatban.'
Expected: '⠂⠅⠕⠇⠇⠡⠛⠁ ⠗⠡⠱⠞ ⠧⠈⠇⠇⠁⠇ ⠂⠋⠑⠇⠁⠙⠁⠞⠃⠄' (length 31)
Received: '⠨⠂⠅⠕⠇⠇⠡⠛⠁ ⠗⠡⠱⠞ ⠧⠈⠇⠇⠁⠇ ⠂⠋⠑⠇⠁⠙⠁⠞⠃⠄' (length 32)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:63: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A gyártó átvállal minden költséget.'
Expected: '⠂⠹⠈⠗⠞⠪ ⠈⠞⠧⠈⠇⠇⠁⠇ ⠍⠙⠑⠝ ⠅⠟⠇⠞⠎⠡⠛⠑⠞⠄' (length 31)
Received: '⠨⠂⠹⠈⠗⠞⠪ ⠈⠞⠧⠈⠇⠇⠁⠇ ⠍⠙⠑⠝ ⠅⠟⠇⠞⠎⠡⠛⠑⠞⠄' (length 32)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:70: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A Volt egy mértékegység.'
Expected: '⠂⠧⠕⠇⠞ ⠑⠹ ⠍⠡⠗⠞⠡⠅⠑⠹⠎⠡⠛⠄' (length 21)
Received: '⠨⠂⠧⠕⠇⠞ ⠑⠹ ⠍⠡⠗⠞⠡⠅⠑⠹⠎⠡⠛⠄' (length 22)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:76: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A volt külügyminiszter'
Expected: '⠂⠧⠞ ⠅⠷⠇⠷⠹⠍⠊⠝⠊⠱⠞⠑⠗' (length 17)
Received: '⠨⠂⠧⠞ ⠅⠷⠇⠷⠹⠍⠊⠝⠊⠱⠞⠑⠗' (length 18)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:77: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1

Input:    'A feszültség 220 volt körül járt.'
Expected: '⠂⠋⠑⠱⠷⠇⠞⠎⠡⠛ ⠼⠃⠃⠚ ⠧⠕⠇⠞ ⠅⠟⠗⠷⠇ ⠚⠈⠗⠞⠄' (length 32)
Received: '⠨⠂⠋⠑⠱⠷⠇⠞⠎⠡⠛ ⠼⠃⠃⠚ ⠧⠕⠇⠞ ⠅⠟⠗⠷⠇ ⠚⠈⠗⠞⠄' (length 33)
Diff:     Expected '⠂' but received '⠨' in index 0
lou_checkyaml:./braille-specs/hu-hu-g2_harness.yaml:78: Failure
Table: /Users/bert/src/liblouis/src/liblouis/tables/hu-hu-g2.ctb
Display table: checkyaml_inline_table_at_line_1",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,897,2020-02-18T20:31:00Z,2020-02-28T10:41:55Z,2020-02-28T11:35:38Z,CLOSED,False,315,229,18,https://github.com/bertfrees,Use begemphword/endemphword for single letters when emphletter is not defined,6,[],https://github.com/liblouis/liblouis/pull/897,https://github.com/hammera,3,https://github.com/liblouis/liblouis/pull/897#issuecomment-588183824,"Fixes issue #713

 Maybe needs a note in the documentation","Bert, not only roman numbers related testcases producing now failing result with hu-hu-g2_harness.yaml file now.
The hungarian grade2 table rules is very complicated when need putting the capsign indicator (46 dot combination).
When a single letter or a name beginning with capital letter, not need putting the capsign indicator (46 dot combination).
Look for example the following testcases:
Input:    'I. Augustus császár.'
Expected: '⠨⠊⠄ ⠁⠥⠛⠥⠎⠞⠥⠎ ⠩⠈⠱⠈⠗⠄' (length 19)
Received: '⠨⠨⠊⠄ ⠁⠥⠛⠥⠎⠞⠥⠎ ⠩⠈⠱⠈⠗⠄' (length 20)
Diff:     Expected '⠊' but received '⠨' in index 1
Expected output is right, because before roman numbers always need putting the capsign indicator when after a single letter follow up a dot character.
Another testcase, when not need putting the capsign indicator:
Input:    'A hibát az okozza, hogy eltűnt a parancsikon.'
Expected: '⠂⠓⠊⠃⠈⠞ ⠁⠣ ⠕⠅⠕⠣⠣⠁⠂⠓ ⠑⠇⠞⠾⠝⠞ ⠂⠏⠁⠗⠁⠝⠩⠊⠅⠕⠝⠄' (length 38)
Received: '⠨⠂⠓⠊⠃⠈⠞ ⠁⠣ ⠕⠅⠕⠣⠣⠁⠂⠓ ⠑⠇⠞⠾⠝⠞ ⠂⠏⠁⠗⠁⠝⠩⠊⠅⠕⠝⠄' (length 39)
Diff:     Expected '⠂' but received '⠨' in index 0
etc, etc.
So, when in hungarian grade 2 braille have an a character, or another single letter, not need putting the capsign indicator, except roman numbers.
If a word is a capital word (for example the BERT, USB-kábel words), need putting one 46 dot prefix before beginning the word, this is doing the begcapsword 46 rule.
So:
What need doing the hu-hu-g2.ctb table now? This context rules I think right with you show me.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,897,2020-02-18T20:31:00Z,2020-02-28T10:41:55Z,2020-02-28T11:35:38Z,CLOSED,False,315,229,18,https://github.com/bertfrees,Use begemphword/endemphword for single letters when emphletter is not defined,6,[],https://github.com/liblouis/liblouis/pull/897,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/897#issuecomment-588191760,"Fixes issue #713

 Maybe needs a note in the documentation","OK I think I understand. Capital letters are not indicated unless in a fully capitalized word (of more than one letter), or if a single capital letter represents a roman number (I, V, X, L, C, D or M). Correct?
What we could do is define a ""dummy"" capsletter that we can then remove in a second pass, and add some special rules to handle the single roman numbers.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,897,2020-02-18T20:31:00Z,2020-02-28T10:41:55Z,2020-02-28T11:35:38Z,CLOSED,False,315,229,18,https://github.com/bertfrees,Use begemphword/endemphword for single letters when emphletter is not defined,6,[],https://github.com/liblouis/liblouis/pull/897,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/897#issuecomment-588202221,"Fixes issue #713

 Maybe needs a note in the documentation","@hammera If I add the following rules, all except one test pass:
capsletter 46a
noback pass2 @46a ?

This is the failed test:
Input:    'Vakok Világa'
Expected: '⠧⠁⠅⠕⠅ ⠧⠊⠇⠈⠛⠁' (length 12)
Received: '⠧⠁⠅⠕⠅ ⠧⠛⠁' (length 9)

So there are clearly some side effects. A session with lou_trace learns me this is the problematic rule:
pass2 @1236-1-13-135-13-0-1236-24-123-4-1245 @1236-1-13-135-13-0-1236-24-123-4-1245

If I change it into:
pass2 @1236-1-13-135-13$s$s.@1236-24-123-4-1245 @1236-1-13-135-13-0-1236-24-123-4-1245

... and I add the rule space \xe000 46a to give the hidden capsletter the space attribute, the test passes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,897,2020-02-18T20:31:00Z,2020-02-28T10:41:55Z,2020-02-28T11:35:38Z,CLOSED,False,315,229,18,https://github.com/bertfrees,Use begemphword/endemphword for single letters when emphletter is not defined,6,[],https://github.com/liblouis/liblouis/pull/897,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/897#issuecomment-590246203,"Fixes issue #713

 Maybe needs a note in the documentation",@hammera Shall I apply this fix or do you wanna have a closer look first?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,897,2020-02-18T20:31:00Z,2020-02-28T10:41:55Z,2020-02-28T11:35:38Z,CLOSED,False,315,229,18,https://github.com/bertfrees,Use begemphword/endemphword for single letters when emphletter is not defined,6,[],https://github.com/liblouis/liblouis/pull/897,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/897#issuecomment-592460009,"Fixes issue #713

 Maybe needs a note in the documentation","@hammera I'm just going to apply this fix, OK?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,897,2020-02-18T20:31:00Z,2020-02-28T10:41:55Z,2020-02-28T11:35:38Z,CLOSED,False,315,229,18,https://github.com/bertfrees,Use begemphword/endemphword for single letters when emphletter is not defined,6,[],https://github.com/liblouis/liblouis/pull/897,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/897#issuecomment-592475313,"Fixes issue #713

 Maybe needs a note in the documentation",Merged in 773d34,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,898,2020-02-18T22:27:41Z,2020-02-19T13:25:21Z,2020-02-19T13:25:26Z,MERGED,True,52,4,2,https://github.com/bertfrees,Fix endless loop in makeCorrections and translatePass (backTranslateString.c),4,[],https://github.com/liblouis/liblouis/pull/898,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/898,This is the part of #860 that was not included yet and is OK to include.,This is the part of #860 that was not included yet and is OK to include.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,898,2020-02-18T22:27:41Z,2020-02-19T13:25:21Z,2020-02-19T13:25:26Z,MERGED,True,52,4,2,https://github.com/bertfrees,Fix endless loop in makeCorrections and translatePass (backTranslateString.c),4,[],https://github.com/liblouis/liblouis/pull/898,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/898#issuecomment-588172548,This is the part of #860 that was not included yet and is OK to include.,"@egli I addressed all your remarks, and checks pass again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,899,2020-02-20T11:30:36Z,2020-02-24T09:09:22Z,2020-02-24T09:09:35Z,MERGED,True,12,0,1,https://github.com/bertfrees,Enable sponsor button,1,['task'],https://github.com/liblouis/liblouis/pull/899,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/899,"I've added Liblouis to IssueHunt: https://issuehunt.io/r/liblouis/liblouis. This enables us or anyone else to put bounties on specific issues. I haven't installed the IssueHunt app on the repo yet. This is needed in order to enjoy all of the features such as bounty requests, bot commenting, automatic PR submission and automatic rewarding, but I'll wait a bit with that.
If we add this YAML file it should create a sponsor button. Later we can add more stuff to it, e.g. I'm planning to sign up with GitHub Sponsors.","I've added Liblouis to IssueHunt: https://issuehunt.io/r/liblouis/liblouis. This enables us or anyone else to put bounties on specific issues. I haven't installed the IssueHunt app on the repo yet. This is needed in order to enjoy all of the features such as bounty requests, bot commenting, automatic PR submission and automatic rewarding, but I'll wait a bit with that.
If we add this YAML file it should create a sponsor button. Later we can add more stuff to it, e.g. I'm planning to sign up with GitHub Sponsors.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,900,2020-02-22T17:15:46Z,2020-02-26T10:24:05Z,2020-02-26T10:24:05Z,MERGED,True,285,118,2,https://github.com/aaclause,"Python bindings: always use mbcs on windows to encode file path, `getTypeformForEmphClass` fix and clean up",5,['Python'],https://github.com/liblouis/liblouis/pull/900,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/900,"This PR fixes #895: rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1.
Also, fixes another bug, thanks to @leonardder: getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.","This PR fixes #895: rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1.
Also, fixes another bug, thanks to @leonardder: getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,900,2020-02-22T17:15:46Z,2020-02-26T10:24:05Z,2020-02-26T10:24:05Z,MERGED,True,285,118,2,https://github.com/aaclause,"Python bindings: always use mbcs on windows to encode file path, `getTypeformForEmphClass` fix and clean up",5,['Python'],https://github.com/liblouis/liblouis/pull/900,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/900#issuecomment-590244451,"This PR fixes #895: rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1.
Also, fixes another bug, thanks to @leonardder: getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.","@lukaszgo1 I have some concerns about locale.getpreferredencoding. 😟
According the documentation:

On some systems, it is necessary to invoke setlocale() to obtain the user preferences, so this function is not thread-safe.
If invoking setlocale is not necessary or desired, do_setlocale should be set to False.

Should we set do_setlocale to False?
On my main Linux machine, I have the following results:
[andreabush@archaac ~]$ python -c ""import locale;print(locale.getpreferredencoding())""
UTF-8
[andreabush@archaac ~]$ python2 -c ""import locale;print(locale.getpreferredencoding())""
UTF-8
[andreabush@archaac ~]$ python2 -c ""import locale;print(locale.getpreferredencoding(False))""
ANSI_X3.4-1968
[andreabush@archaac ~]$ python -c ""import locale;print(locale.getpreferredencoding(False))""
UTF-8

Where 'ANSI_X3.4-1968' come from?
On Windows, I get 'cp1252' or 'cp65001' but 'cp1252' is not 'mbcs'.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,900,2020-02-22T17:15:46Z,2020-02-26T10:24:05Z,2020-02-26T10:24:05Z,MERGED,True,285,118,2,https://github.com/aaclause,"Python bindings: always use mbcs on windows to encode file path, `getTypeformForEmphClass` fix and clean up",5,['Python'],https://github.com/liblouis/liblouis/pull/900,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/900#issuecomment-590308657,"This PR fixes #895: rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1.
Also, fixes another bug, thanks to @leonardder: getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.","@Andre9642 If I understand your comment above you are still working on this PR, so I'm waiting with the merge. Is that correct?",True,{'THUMBS_UP': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,900,2020-02-22T17:15:46Z,2020-02-26T10:24:05Z,2020-02-26T10:24:05Z,MERGED,True,285,118,2,https://github.com/aaclause,"Python bindings: always use mbcs on windows to encode file path, `getTypeformForEmphClass` fix and clean up",5,['Python'],https://github.com/liblouis/liblouis/pull/900,https://github.com/lukaszgo1,4,https://github.com/liblouis/liblouis/pull/900#issuecomment-590369055,"This PR fixes #895: rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1.
Also, fixes another bug, thanks to @leonardder: getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.",@Andre9642 I've suggested locale.getpreferredencoding in #895 only as a way to detect if Unicode for wordwide word is enabled on Windows or not. I am not experienced enough to say what happens if encoding it returns can be used to decode/encode path.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,900,2020-02-22T17:15:46Z,2020-02-26T10:24:05Z,2020-02-26T10:24:05Z,MERGED,True,285,118,2,https://github.com/aaclause,"Python bindings: always use mbcs on windows to encode file path, `getTypeformForEmphClass` fix and clean up",5,['Python'],https://github.com/liblouis/liblouis/pull/900,https://github.com/aaclause,5,https://github.com/liblouis/liblouis/pull/900#issuecomment-590606969,"This PR fixes #895: rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1.
Also, fixes another bug, thanks to @leonardder: getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.","@lukaszgo1 thank for your clarifying.
Maybe something like the following is better:
fileSystemEncoding = ""mbcs"" if sys.platform == ""win32"" and locale.getpreferredencoding() != ""cp65001"" else ""UTF-8""
Also, if needed, fileSystemEncoding can be redefined via louis.fileSystemEncoding = ""<anotherEncoding>"". Perhaps we should add a function for that (to avoid wrong encodings), something like:
def setFileSystemEncoding(enc):
	global fileSystemEncoding
	try:
		codecs.lookup(enc)
		fileSystemEncoding = enc
	except LookupError: return False
	return True

@leonardder any thought?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,900,2020-02-22T17:15:46Z,2020-02-26T10:24:05Z,2020-02-26T10:24:05Z,MERGED,True,285,118,2,https://github.com/aaclause,"Python bindings: always use mbcs on windows to encode file path, `getTypeformForEmphClass` fix and clean up",5,['Python'],https://github.com/liblouis/liblouis/pull/900,https://github.com/leonardder,6,https://github.com/liblouis/liblouis/pull/900#issuecomment-590703204,"This PR fixes #895: rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1.
Also, fixes another bug, thanks to @leonardder: getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.","Hmmm. mbcs is supposed to follow the actual code page of the system, and that's exactly what we want. I think we should do one of the following:

Apply sys._enablelegacywindowsfsencoding()
Use mbcs on windows and sys.getfilesystemencoding() otherwise.

I'd go for the latter, as the former would apply application wide and would therefore also hurt the application that uses the Python binding (e.g. NVDA).
I don't think we need to provide a helper function as you propose.",True,{'THUMBS_UP': ['https://github.com/aaclause']}
liblouis/liblouis,https://github.com/liblouis/liblouis,900,2020-02-22T17:15:46Z,2020-02-26T10:24:05Z,2020-02-26T10:24:05Z,MERGED,True,285,118,2,https://github.com/aaclause,"Python bindings: always use mbcs on windows to encode file path, `getTypeformForEmphClass` fix and clean up",5,['Python'],https://github.com/liblouis/liblouis/pull/900,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/900#issuecomment-590918175,"This PR fixes #895: rather than sys.getfilesystemencoding(), we use locale.getpreferredencoding as advertised by @lukaszgo1.
Also, fixes another bug, thanks to @leonardder: getTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.",@leonardder are you happy with the changes now?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,901,2020-02-23T14:29:11Z,2020-02-24T23:33:46Z,2020-02-24T23:34:02Z,MERGED,True,291,206,4,https://github.com/bertfrees,Improvements to Afrikaans thanks to Christo de Klerk,1,['tables'],https://github.com/liblouis/liblouis/pull/901,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/901,"Fixed back translation of some lower words.
Fixed several contraction errors where contractions are based on pronunciation or occur where compound words join.
Eliminated grade 1 indicator where a single letter follows a single apostrophe to indicate an abbreviated word, e.g. 'k for ek.
Corrected the use of the grade 1 indicator in grade 2 with signs which would conflict with contractions, such as the trademark sign that would conflict with the contraction of tussen.
Fixed the back translation conflict between the UEB circle shape indicator and words containing $= being the contraction for ""alge"".
Made some under the hood improvements to make the table more efficient and easier to maintain.
Cleaned up the grade 1 table.

Don't merge yet, there is an issue I want to sort out first.","Fixed back translation of some lower words.
Fixed several contraction errors where contractions are based on pronunciation or occur where compound words join.
Eliminated grade 1 indicator where a single letter follows a single apostrophe to indicate an abbreviated word, e.g. 'k for ek.
Corrected the use of the grade 1 indicator in grade 2 with signs which would conflict with contractions, such as the trademark sign that would conflict with the contraction of tussen.
Fixed the back translation conflict between the UEB circle shape indicator and words containing $= being the contraction for ""alge"".
Made some under the hood improvements to make the table more efficient and easier to maintain.
Cleaned up the grade 1 table.

Don't merge yet, there is an issue I want to sort out first.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,902,2020-02-24T13:21:28Z,2020-06-02T14:46:47Z,2020-07-25T14:32:09Z,MERGED,True,7656,96,10,https://github.com/bertfrees,New table for grade 2 Malay braille (Malaysia) thanks to Herbert Koh,7,['tables'],https://github.com/liblouis/liblouis/pull/902,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/902,"I think some more tests would be nice, and the existing tests should pass.","I think some more tests would be nice, and the existing tests should pass.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,902,2020-02-24T13:21:28Z,2020-06-02T14:46:47Z,2020-07-25T14:32:09Z,MERGED,True,7656,96,10,https://github.com/bertfrees,New table for grade 2 Malay braille (Malaysia) thanks to Herbert Koh,7,['tables'],https://github.com/liblouis/liblouis/pull/902,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/902#issuecomment-606574485,"I think some more tests would be nice, and the existing tests should pass.","A part of the failing tests is due to the rule hyphen - 36 in en-ueb-chardefs.uti. Apparently this breaks the repword - 123456 rule. This is a bug. EDIT: not really a bug, but created an issue about it: #959
 Another part of the failing tests is due to the missing rule rependword - 25,123456.

With these two issues fixed, there are 31 failing tests left.

 A few of them seem to be due to extra capital marks when the repword rule has been applied. This is a bug.
 The remaining failures might be mistakes in the test data. I'll let Herbert review the test report when the bugs are fixed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,902,2020-02-24T13:21:28Z,2020-06-02T14:46:47Z,2020-07-25T14:32:09Z,MERGED,True,7656,96,10,https://github.com/bertfrees,New table for grade 2 Malay braille (Malaysia) thanks to Herbert Koh,7,['tables'],https://github.com/liblouis/liblouis/pull/902,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/902#issuecomment-633295177,"I think some more tests would be nice, and the existing tests should pass.",29 remaining test failures. I think this is finally ready to be included. I've emailed Herbert about the tests. Hopefully we can do some more improvement before the release.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/903,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/903#issuecomment-590922261,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Hi all!
Please, explain me, what metadata should be added in the table?
ru.ctb is the oficial computer Braille table for Russian language. Now It is used in NVDA and BRLTTY.
ru-compbrl.ctb is only for printing source code of programs, it is no computer Braille.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/Futyn-Maker,3,https://github.com/liblouis/liblouis/pull/903#issuecomment-590978920,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","I added some metadata in my table and changed Braille patterns for some control characters.
You can download it here:
https://www.dropbox.com/s/k1vqvyh2txuyal0/ru.ctb?dl=0
I wait comments.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/903#issuecomment-591129579,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Hello Andrey. I was planning to contact you on the mailing list regarding these issues, but haven't had the time yet. Good thing that you found the Github issue yourself.
Thank you for the updated table with the metadata. The metadata makes sense. The other table by Igor Poretsky is indeed not a real computer braille table, so its metadata is wrong. I will change it.
Now for the other issues...
Do you happen to have documentation of the Russian computer braille code that you implemented in your table? We would like to put it on our website (http://liblouis.org/braille-specs) so that we can link to it from the table.
I saw you made some comments in the table header. Instead of adding more text on top of the existing text, I'd rather have that you change the text so that it explains what is implemented in the table. For example if KOI8-R is not relevant anymore, don't mention it. If you don't follow the American standard for some special characters, don't mention it. Etc.
Finally, could I ask you to summarize your change in a few lines? We will then include that in the release notes.
Thanks,
Bert",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/Futyn-Maker,5,https://github.com/liblouis/liblouis/pull/903#issuecomment-591447423,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Hi Bert!
As far as I know, documentation on Russian computer braille does not exist. I was guided by those definitions which is accepted in JAWS, TSS, DBT and some other braille programs. The Russians who work with Braille know these definitions.
I fixed the comments. You can download the table here:
https://www.dropbox.com/s/k1vqvyh2txuyal0/en.ctb?dl=0
The text document with information about the changes can be downloaded here:
https://www.dropbox.com/s/abhbejn9xjhiyk8/Release%20notes.txt?dl=0
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/903#issuecomment-591607022,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Hi Andrey.

As far as I know, documentation on Russian computer braille does not exist.

OK. I assumed that because you said before that ""ru.ctb is the official computer Braille table for Russian language"", this would be documentation somewhere.
Thank you for fixing the comments. I have committed the latest version of the table now.
Can I put you as the current maintainer of the table?
One more thing before we can merge: some tests are failing, notably tests/braille-specs/spaces.yaml. This indicates that the translation and back-translation of space characters in your table has changed. I need to know whether this was intentional or by accident. Also, when you have confirmed that the behavior is correct, we should move these tests from the spaces.yaml file to a dedicated test file for Russian. These are the failing tests:
Input:    '\x0009'
Expected: '⢪'
Received: dot 9

Input:    '\x000a'
Expected: '⣠'
Received: '⣀'

Input:    '\x000b'
Expected: '⣼'
Received: dot 9

Input:    '\x000c'
Expected: '⡧'
Received: '⠀'

Input:    '\x000d'
Expected: '⢘'
Received: '⠀'

Input:    '\x00a0'
Expected: '\x0020'
Received: virtual dot pattern ""a""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/903#issuecomment-591616856,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Hello Bert!
Yes, I've changed space symbols. I was guided by other computer Braille tables. Besides, I received several messages from Russians. They complain that old definition, for example, for character tabulation makes difficults to read some texts.
Of course, You can put me as current maintainer of the table. Tell me, please, if It obliges Me to something.
Sorry for having a lot of questions. It is first time when I'm fixing Braille code in Liblouis.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/903#issuecomment-591630652,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Being the table maintainer just means that you are the contact person when other people have questions, find issues or have suggestions. You are expected to respond to messages basically, and hopefully you can also do improvements to the table when needed.
Regarding the spaces, I just wanted to be sure you did everything on purpose and you double-checked, because the handling of spaces is often something that is overlooked. Notably the back-translation.
I've added a new test file called ""ru.yaml"" (in the tests/braille-specs folder) with the space related tests. Feel free to add more tests to it. The more tests the better because it protects the table against future regressions.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/903#issuecomment-591631045,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","@DaveMielke Since you wrote the table originally, maybe you want to review it before we merge?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/Futyn-Maker,10,https://github.com/liblouis/liblouis/pull/903#issuecomment-591636395,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Of course, I'm ready to read suggestions and improve the table, especially since I know Russian well, so users of the table can write to me without experiencing a language barrier.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/DaveMielke,11,https://github.com/liblouis/liblouis/pull/903#issuecomment-591642249,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","[quoted lines by Bert Frees on 2020/02/26 at 12:37 -0800]

@DaveMielke Since you wrote the table originally, maybe you want to review it before we merge?
I don't recall having worked on LibLouis's Russian table. If it oriinally came
from brltty then I may have tidied it up, or something, but, even then,
wouldn't have developed it. I certainly don't mind working together with
someone who knows Russian well in case such a person feels that I may be a
better table modifier.
…
-- 
I believe the Bible to be the very Word of God: http://Mielke.cc/bible/
Dave Mielke            | 2213 Fox Crescent | WebHome: http://Mielke.cc/
EMail: Dave@Mielke.cc  | Ottawa, Ontario   | Twitter: @Dave_Mielke
Phone: +1 613 726 0014 | Canada  K2A 1H7   |",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/903#issuecomment-591643790,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.",OK thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/Futyn-Maker,13,https://github.com/liblouis/liblouis/pull/903#issuecomment-593379289,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.",I'm glad to see It. Thanks :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/Futyn-Maker,14,https://github.com/liblouis/liblouis/pull/903#issuecomment-593539498,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Hello again!
In my table, already after the release, i've seen following:
#-maintainer-name: Sergiy Moskalets
I don't mind working with somebody other together, but i want to know if it was error.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/903#issuecomment-593540809,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Sorry, copy-paste error. I will fix it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/Futyn-Maker,16,https://github.com/liblouis/liblouis/pull/903#issuecomment-594764819,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Hello!
I think it's a good idea to continue this topic to say about fixes of my table.
I've fixed some mistakes. Thanks to Russian members of NVDA community who tell me about errors.
https://www.dropbox.com/s/k1vqvyh2txuyal0/ru.ctb?dl=0
Please, tell me if I can put improving table directly in Liblouis files. I haven't experience working with GitHub.
Probably the changing table can be included only in next release...
Andrey.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,903,2020-02-24T13:53:04Z,2020-03-02T12:15:27Z,2020-03-04T19:36:37Z,MERGED,True,592,116,9,https://github.com/bertfrees,Updates to ru.ctb by Andrey Yakuboy,7,"['tables', 'needs test', 'needs metadata']",https://github.com/liblouis/liblouis/pull/903,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/903#issuecomment-594782897,"See email Improving Russian computer Braille table

 We need some tests, and
 we need to figure out the metadata. This table, which was originally written by Hans Schou and Dave Mielke, has no metadata yet, and it is not included in any other table either. Currently the ""official"" Russian table are ru-litbrl.ctb and ru-compbrl.ctb.
 We also need a reference to documentation of the Russian computer braille code.","Next release, yes. I have created a ticket: #915. I will create a PR with your new file later.
You can also make a PR yourself if you want. There is an article on the wiki about it: https://github.com/liblouis/liblouis/wiki/How-to-contribute#how-can-i-submit-my-changes-so-that-they-can-be-included-in-the-next-release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,904,2020-02-24T22:09:31Z,2020-02-26T11:37:19Z,2020-02-26T11:39:50Z,MERGED,True,238,58,6,https://github.com/bertfrees,Add new opcode rependword,2,['enhancement'],https://github.com/liblouis/liblouis/pull/904,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/904,"With this opcode you can indicate that a part of a word between a start and end mark is repeated. With the existing repword opcode you could only repeat a whole word.
This fixes issue #787
Also fixed some small issue with the existing repword opcode.","With this opcode you can indicate that a part of a word between a start and end mark is repeated. With the existing repword opcode you could only repeat a whole word.
This fixes issue #787
Also fixed some small issue with the existing repword opcode.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,904,2020-02-24T22:09:31Z,2020-02-26T11:37:19Z,2020-02-26T11:39:50Z,MERGED,True,238,58,6,https://github.com/bertfrees,Add new opcode rependword,2,['enhancement'],https://github.com/liblouis/liblouis/pull/904,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/904#issuecomment-591111332,"With this opcode you can indicate that a part of a word between a start and end mark is repeated. With the existing repword opcode you could only repeat a whole word.
This fixes issue #787
Also fixed some small issue with the existing repword opcode.","Since no one else is using repword anyway

repword and rependword are both needed for Malay braille.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,904,2020-02-24T22:09:31Z,2020-02-26T11:37:19Z,2020-02-26T11:39:50Z,MERGED,True,238,58,6,https://github.com/bertfrees,Add new opcode rependword,2,['enhancement'],https://github.com/liblouis/liblouis/pull/904,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/904#issuecomment-591358991,"With this opcode you can indicate that a part of a word between a start and end mark is repeated. With the existing repword opcode you could only repeat a whole word.
This fixes issue #787
Also fixed some small issue with the existing repword opcode.","Since no one else is using repword anyway

repword and rependword are both needed for Malay braille.

Ah, OK, I guess we have to add the new opcode then",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,908,2020-02-26T12:05:21Z,2020-02-26T13:37:58Z,2020-08-27T13:47:43Z,MERGED,True,102,22,3,https://github.com/JakeKyle,Tables/urdu,6,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/908,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/908,"Changing definition of \x0624 (Waw with hamza above) from dots 1256 to dots 3-2456 following advice from proof reader.
Adding 2 character versions of letter plus diactric (previously only the one character versions defined):

Adding definition of \x0653 (Madda above) to enable use in 2 character combinations
Adding 2 character version of Alef with Madda above
Adding 2 character version Yeh with Hamza above

Adding contractions to take into account new character definitions mentioned above
Updating YAML test of Urdu Grade 2 table in the light of the above.","Changing definition of \x0624 (Waw with hamza above) from dots 1256 to dots 3-2456 following advice from proof reader.
Adding 2 character versions of letter plus diactric (previously only the one character versions defined):

Adding definition of \x0653 (Madda above) to enable use in 2 character combinations
Adding 2 character version of Alef with Madda above
Adding 2 character version Yeh with Hamza above

Adding contractions to take into account new character definitions mentioned above
Updating YAML test of Urdu Grade 2 table in the light of the above.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,908,2020-02-26T12:05:21Z,2020-02-26T13:37:58Z,2020-08-27T13:47:43Z,MERGED,True,102,22,3,https://github.com/JakeKyle,Tables/urdu,6,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/908,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/908#issuecomment-591395950,"Changing definition of \x0624 (Waw with hamza above) from dots 1256 to dots 3-2456 following advice from proof reader.
Adding 2 character versions of letter plus diactric (previously only the one character versions defined):

Adding definition of \x0653 (Madda above) to enable use in 2 character combinations
Adding 2 character version of Alef with Madda above
Adding 2 character version Yeh with Hamza above

Adding contractions to take into account new character definitions mentioned above
Updating YAML test of Urdu Grade 2 table in the light of the above.",Looks good but I noticed the tables have no copyright lines yet. Maybe now is a good time to add them?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,908,2020-02-26T12:05:21Z,2020-02-26T13:37:58Z,2020-08-27T13:47:43Z,MERGED,True,102,22,3,https://github.com/JakeKyle,Tables/urdu,6,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/908,https://github.com/JakeKyle,3,https://github.com/liblouis/liblouis/pull/908#issuecomment-591407041,"Changing definition of \x0624 (Waw with hamza above) from dots 1256 to dots 3-2456 following advice from proof reader.
Adding 2 character versions of letter plus diactric (previously only the one character versions defined):

Adding definition of \x0653 (Madda above) to enable use in 2 character combinations
Adding 2 character version of Alef with Madda above
Adding 2 character version Yeh with Hamza above

Adding contractions to take into account new character definitions mentioned above
Updating YAML test of Urdu Grade 2 table in the light of the above.","Looks good but I noticed the tables have no copyright lines yet. Maybe now is a good time to add them?

@bertfrees Not sure what you mean. They both have:
""Copyright (C) 2018 Compass Braille""
Is something more needed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,908,2020-02-26T12:05:21Z,2020-02-26T13:37:58Z,2020-08-27T13:47:43Z,MERGED,True,102,22,3,https://github.com/JakeKyle,Tables/urdu,6,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/908,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/908#issuecomment-591409047,"Changing definition of \x0624 (Waw with hamza above) from dots 1256 to dots 3-2456 following advice from proof reader.
Adding 2 character versions of letter plus diactric (previously only the one character versions defined):

Adding definition of \x0653 (Madda above) to enable use in 2 character combinations
Adding 2 character version of Alef with Madda above
Adding 2 character version Yeh with Hamza above

Adding contractions to take into account new character definitions mentioned above
Updating YAML test of Urdu Grade 2 table in the light of the above.","Ah, sorry missed that. The date should be updated though. The list should contain each year in which you have made nontrivial changes to the table. So it should become:
""Copyright (C) 2018, 2020 Compass Braille""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,908,2020-02-26T12:05:21Z,2020-02-26T13:37:58Z,2020-08-27T13:47:43Z,MERGED,True,102,22,3,https://github.com/JakeKyle,Tables/urdu,6,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/908,https://github.com/JakeKyle,5,https://github.com/liblouis/liblouis/pull/908#issuecomment-591418022,"Changing definition of \x0624 (Waw with hamza above) from dots 1256 to dots 3-2456 following advice from proof reader.
Adding 2 character versions of letter plus diactric (previously only the one character versions defined):

Adding definition of \x0653 (Madda above) to enable use in 2 character combinations
Adding 2 character version of Alef with Madda above
Adding 2 character version Yeh with Hamza above

Adding contractions to take into account new character definitions mentioned above
Updating YAML test of Urdu Grade 2 table in the light of the above.",@bertfrees thanks for the advice - updated,True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,909,2020-02-27T13:05:07Z,2020-02-27T15:08:38Z,2020-02-27T15:09:17Z,MERGED,True,104,83,1,https://github.com/bertfrees,Rework documentation of emphasis opcodes,1,['documentation'],https://github.com/liblouis/liblouis/pull/909,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/909,"I've removed all mentionings of ""context"" because I don't think it was a useful concept to explain emphasis indication, and moreover it was not clear what it meant. Now I speak of ""scope"" instead.
I've changed the section about fallback behavior a bit because it was too simplistic and not accurate.
I've removed the ""Symbol"" section because it made no sense to me and I have no idea where you got that from. If you remember what this was about we can add a section again.

Next (when this is merged) I will update the documentation for #897 and #894.","I've removed all mentionings of ""context"" because I don't think it was a useful concept to explain emphasis indication, and moreover it was not clear what it meant. Now I speak of ""scope"" instead.
I've changed the section about fallback behavior a bit because it was too simplistic and not accurate.
I've removed the ""Symbol"" section because it made no sense to me and I have no idea where you got that from. If you remember what this was about we can add a section again.

Next (when this is merged) I will update the documentation for #897 and #894.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,909,2020-02-27T13:05:07Z,2020-02-27T15:08:38Z,2020-02-27T15:09:17Z,MERGED,True,104,83,1,https://github.com/bertfrees,Rework documentation of emphasis opcodes,1,['documentation'],https://github.com/liblouis/liblouis/pull/909,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/909#issuecomment-591973128,"I've removed all mentionings of ""context"" because I don't think it was a useful concept to explain emphasis indication, and moreover it was not clear what it meant. Now I speak of ""scope"" instead.
I've changed the section about fallback behavior a bit because it was too simplistic and not accurate.
I've removed the ""Symbol"" section because it made no sense to me and I have no idea where you got that from. If you remember what this was about we can add a section again.

Next (when this is merged) I will update the documentation for #897 and #894.","The only thing I don't like that much is the term scope.

Actually I only use it a few times (5) in the text. It does not have such a central place in the explanation (like ""context"" had). Is it really too computer-sciency? I wasn't aware. But then again, if you are reading the Liblouis manual you are expected know terms like that, no?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,910,2020-02-28T14:23:46Z,2020-02-28T15:24:26Z,2020-02-28T18:32:12Z,MERGED,True,91,16,2,https://github.com/school510587,Update zh-tw.ctb version to 2020-02,1,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/910,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/910,"It is a minor update of this table. Except the issue of adding emoticons, other rules are stable in principle. That is, if no change is made, zh-tw.ctb update may be absent from some future releases of liblouis.
Summary of changes:

Add some more Chinese translation exception rules.
Update copyright declarations.

Reviewers:

Coscell Kao <coscell@gmail.com>
Victor Cai <surfer0627@gmail.com>","It is a minor update of this table. Except the issue of adding emoticons, other rules are stable in principle. That is, if no change is made, zh-tw.ctb update may be absent from some future releases of liblouis.
Summary of changes:

Add some more Chinese translation exception rules.
Update copyright declarations.

Reviewers:

Coscell Kao <coscell@gmail.com>
Victor Cai <surfer0627@gmail.com>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,913,2020-03-01T13:22:42Z,2020-05-29T14:24:09Z,2020-05-29T14:24:13Z,MERGED,True,208,48,8,https://github.com/bertfrees,Test display tables with lou_checkyaml,5,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/913,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/913,Fixes #816,Fixes #816,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,913,2020-03-01T13:22:42Z,2020-05-29T14:24:09Z,2020-05-29T14:24:13Z,MERGED,True,208,48,8,https://github.com/bertfrees,Test display tables with lou_checkyaml,5,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/913,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/913#issuecomment-593148658,Fixes #816,"One thing I did not think about is that a display table can map multiple characters to the same dot pattern (when decoding) and multiple dot patterns to the same character (when encoding), as demonstrated by this test:
table: |
  display a 2
  display A 2
  display a 1
  sign X 78
  nofor context @2 ""X""
  noback context ""X"" @1@2
flags: {testmode: forward}
tests:
  - - X
    - aa
flags: {testmode: backward}
tests:
  - - Aa
    - XX

This means that there should be two (or three) modes: one to test the ""forward"" behavior of the display table and one to test the ""backward"" behavior (and one for both).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,913,2020-03-01T13:22:42Z,2020-05-29T14:24:09Z,2020-05-29T14:24:13Z,MERGED,True,208,48,8,https://github.com/bertfrees,Test display tables with lou_checkyaml,5,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/913,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/913#issuecomment-593348239,Fixes #816,"The modes could be named display, displayForward and displayBackward. However the problem is that what ""forward"" and ""backward"" mean in the context of a display table is ambiguous.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,913,2020-03-01T13:22:42Z,2020-05-29T14:24:09Z,2020-05-29T14:24:13Z,MERGED,True,208,48,8,https://github.com/bertfrees,Test display tables with lou_checkyaml,5,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/913,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/913#issuecomment-622938843,Fixes #816,"a display table can map multiple characters to the same dot pattern (when decoding) and multiple dot patterns to the same character (when encoding)

Thinking about this again, multiple dot patterns mapping to the same character should really not be a allowed unless the dot patterns have the same ""real base"", meaning that they must be identical when the virtual dots are cut off.
When this is not true the compiler should throw an error. I've created #947.
@egli Can you please review?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,913,2020-03-01T13:22:42Z,2020-05-29T14:24:09Z,2020-05-29T14:24:13Z,MERGED,True,208,48,8,https://github.com/bertfrees,Test display tables with lou_checkyaml,5,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/913,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/913#issuecomment-633245698,Fixes #816,@egli I updated the documentation.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,913,2020-03-01T13:22:42Z,2020-05-29T14:24:09Z,2020-05-29T14:24:13Z,MERGED,True,208,48,8,https://github.com/bertfrees,Test display tables with lou_checkyaml,5,"['enhancement', 'test framework']",https://github.com/liblouis/liblouis/pull/913,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/913#issuecomment-635871377,Fixes #816,"LGTM, @bertfrees can we merge this",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,914,2020-03-02T10:57:26Z,2020-03-02T13:52:20Z,2020-03-02T13:52:25Z,MERGED,True,47,15,3,https://github.com/bertfrees,Fix bug in returned inlen (back-translation),1,[],https://github.com/liblouis/liblouis/pull/914,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/914,fixes #770,fixes #770,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,916,2020-03-07T13:52:05Z,2020-03-28T20:15:54Z,2020-03-28T20:15:54Z,CLOSED,False,12,12,1,https://github.com/Futyn-Maker,Improving Russian computer Braille table,4,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/916,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/916,"Hello!
I've fixed some errors in my table.","Hello!
I've fixed some errors in my table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,917,2020-03-22T13:04:06Z,2020-04-27T13:45:33Z,2020-04-27T13:45:39Z,MERGED,True,596,521,8,https://github.com/bertfrees,Further separate display from translation,3,['refactoring'],https://github.com/liblouis/liblouis/pull/917,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/917,"Don't take into account any display rules during translation.

In three cases I just removed some dead code because for character definition rules dotslen is always > 0.
In two cases, namely for printing escape sequences for undefined characters and for handling the ""no_translate"" typeform, display rules are now ignored. Only character definitions (that map to a single dot) are taken into account.

See #307.","Don't take into account any display rules during translation.

In three cases I just removed some dead code because for character definition rules dotslen is always > 0.
In two cases, namely for printing escape sequences for undefined characters and for handling the ""no_translate"" typeform, display rules are now ignored. Only character definitions (that map to a single dot) are taken into account.

See #307.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,917,2020-03-22T13:04:06Z,2020-04-27T13:45:33Z,2020-04-27T13:45:39Z,MERGED,True,596,521,8,https://github.com/bertfrees,Further separate display from translation,3,['refactoring'],https://github.com/liblouis/liblouis/pull/917,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/917#issuecomment-606531518,"Don't take into account any display rules during translation.

In three cases I just removed some dead code because for character definition rules dotslen is always > 0.
In two cases, namely for printing escape sequences for undefined characters and for handling the ""no_translate"" typeform, display rules are now ignored. Only character definitions (that map to a single dot) are taken into account.

See #307.",@egli Any remarks about the changes?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,920,2020-04-02T20:44:21Z,2020-06-02T09:06:07Z,2020-06-02T09:06:07Z,MERGED,True,1452,1,7,https://github.com/BueVest,Add tests for German and add missing noletsign rules,3,['tables'],https://github.com/liblouis/liblouis/pull/920,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/920,Currently WIP.,Currently WIP.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,920,2020-04-02T20:44:21Z,2020-06-02T09:06:07Z,2020-06-02T09:06:07Z,MERGED,True,1452,1,7,https://github.com/BueVest,Add tests for German and add missing noletsign rules,3,['tables'],https://github.com/liblouis/liblouis/pull/920,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/920#issuecomment-610559059,Currently WIP.,"On hold, waiting for feedback on #921",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,920,2020-04-02T20:44:21Z,2020-06-02T09:06:07Z,2020-06-02T09:06:07Z,MERGED,True,1452,1,7,https://github.com/BueVest,Add tests for German and add missing noletsign rules,3,['tables'],https://github.com/liblouis/liblouis/pull/920,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/920#issuecomment-636186004,Currently WIP.,I've cleaned up the branch. Tests pass and almost ready to merge. Only missing a NEWS entry.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,920,2020-04-02T20:44:21Z,2020-06-02T09:06:07Z,2020-06-02T09:06:07Z,MERGED,True,1452,1,7,https://github.com/BueVest,Add tests for German and add missing noletsign rules,3,['tables'],https://github.com/liblouis/liblouis/pull/920,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/920#issuecomment-637067025,Currently WIP.,Updated NEWS file. Hope I got it right.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,920,2020-04-02T20:44:21Z,2020-06-02T09:06:07Z,2020-06-02T09:06:07Z,MERGED,True,1452,1,7,https://github.com/BueVest,Add tests for German and add missing noletsign rules,3,['tables'],https://github.com/liblouis/liblouis/pull/920,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/920#issuecomment-637089180,Currently WIP.,Thank you. Fine with me.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,927,2020-04-17T16:01:03Z,2020-04-27T13:21:04Z,2020-04-27T13:21:04Z,CLOSED,False,0,0,0,https://github.com/Futyn-Maker,Some corrections and improvements in ru.ctb,0,['tables'],https://github.com/liblouis/liblouis/pull/927,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/927,"Hi all!
This is the fixed version of ru.ctb
Fix diacritics, some letters of the Greek alphabet and Hebrew. Add some cyrillic letters. Several minor bugs were fixed. Comments were changed.
Stay healthy!
Andrey","Hi all!
This is the fixed version of ru.ctb
Fix diacritics, some letters of the Greek alphabet and Hebrew. Add some cyrillic letters. Several minor bugs were fixed. Comments were changed.
Stay healthy!
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,927,2020-04-17T16:01:03Z,2020-04-27T13:21:04Z,2020-04-27T13:21:04Z,CLOSED,False,0,0,0,https://github.com/Futyn-Maker,Some corrections and improvements in ru.ctb,0,['tables'],https://github.com/liblouis/liblouis/pull/927,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/927#issuecomment-615368793,"Hi all!
This is the fixed version of ru.ctb
Fix diacritics, some letters of the Greek alphabet and Hebrew. Add some cyrillic letters. Several minor bugs were fixed. Comments were changed.
Stay healthy!
Andrey",Hi @Futyn-Maker. Thanks for the update. Would you mind updating the NEWS file? Just explain very briefly what this change does. Also if you have some more time before the release you are welcome to work on the ru.yaml test. It's a bit empty in there.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,927,2020-04-17T16:01:03Z,2020-04-27T13:21:04Z,2020-04-27T13:21:04Z,CLOSED,False,0,0,0,https://github.com/Futyn-Maker,Some corrections and improvements in ru.ctb,0,['tables'],https://github.com/liblouis/liblouis/pull/927,https://github.com/Futyn-Maker,3,https://github.com/liblouis/liblouis/pull/927#issuecomment-615377102,"Hi all!
This is the fixed version of ru.ctb
Fix diacritics, some letters of the Greek alphabet and Hebrew. Add some cyrillic letters. Several minor bugs were fixed. Comments were changed.
Stay healthy!
Andrey","Where I can find news file?
Speaking about the test, i'm not sure what I should add there. My table is the simple computer Braille code. It doesn't contains difficult rules and more unstandard constructions. In this table, one symbol is one braille cell. This table is going to be simple always.
OK, if You think that it's so necessary, i'll add tests to check general symbols (Russian and English texts, digits, general punctuation) later. But I don't think that I or anybody will use it, because this table very simple, although so large.
Now I'm trying to improve ru-litbrl.ctb, although I haven't enough time to do it now. I'm writing test for it, because it's a difficult table with lots of rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,927,2020-04-17T16:01:03Z,2020-04-27T13:21:04Z,2020-04-27T13:21:04Z,CLOSED,False,0,0,0,https://github.com/Futyn-Maker,Some corrections and improvements in ru.ctb,0,['tables'],https://github.com/liblouis/liblouis/pull/927,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/927#issuecomment-615384379,"Hi all!
This is the fixed version of ru.ctb
Fix diacritics, some letters of the Greek alphabet and Hebrew. Add some cyrillic letters. Several minor bugs were fixed. Comments were changed.
Stay healthy!
Andrey","The NEWS file is right there in the root directory of the project.
The YAML file for a computer braille table will indeed be very straightforward. Yet it is useful, to guard against regressions. That said, if you have limited time and also want to work on the tests for ru-litbrl.ctb, please give that priority because that is much more important.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,927,2020-04-17T16:01:03Z,2020-04-27T13:21:04Z,2020-04-27T13:21:04Z,CLOSED,False,0,0,0,https://github.com/Futyn-Maker,Some corrections and improvements in ru.ctb,0,['tables'],https://github.com/liblouis/liblouis/pull/927,https://github.com/Futyn-Maker,5,https://github.com/liblouis/liblouis/pull/927#issuecomment-615923205,"Hi all!
This is the fixed version of ru.ctb
Fix diacritics, some letters of the Greek alphabet and Hebrew. Add some cyrillic letters. Several minor bugs were fixed. Comments were changed.
Stay healthy!
Andrey","Hi Bert! How i should edit the news file?
Here is:


Noteworthy changes in release 3.13.0 (2020-03-02)


Should I insert description of my changes upper? Need I make something new section?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,927,2020-04-17T16:01:03Z,2020-04-27T13:21:04Z,2020-04-27T13:21:04Z,CLOSED,False,0,0,0,https://github.com/Futyn-Maker,Some corrections and improvements in ru.ctb,0,['tables'],https://github.com/liblouis/liblouis/pull/927,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/927#issuecomment-616110905,"Hi all!
This is the fixed version of ru.ctb
Fix diacritics, some letters of the Greek alphabet and Hebrew. Add some cyrillic letters. Several minor bugs were fixed. Comments were changed.
Stay healthy!
Andrey","You may insert this new section:
* Noteworthy changes in release 3.14.0 (2020-06-01)
** Braille table improvements
- ...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,927,2020-04-17T16:01:03Z,2020-04-27T13:21:04Z,2020-04-27T13:21:04Z,CLOSED,False,0,0,0,https://github.com/Futyn-Maker,Some corrections and improvements in ru.ctb,0,['tables'],https://github.com/liblouis/liblouis/pull/927,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/927#issuecomment-619981345,"Hi all!
This is the fixed version of ru.ctb
Fix diacritics, some letters of the Greek alphabet and Hebrew. Add some cyrillic letters. Several minor bugs were fixed. Comments were changed.
Stay healthy!
Andrey",Merged in d0c4468,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/928,"First shot at solving #473 and #202 .
Comments or changes welcome.","First shot at solving #473 and #202 .
Comments or changes welcome.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/928#issuecomment-616497869,"First shot at solving #473 and #202 .
Comments or changes welcome.","Very good additions for the UEB specific opcodes. Another improvement could be to explain a bit more what ""standing alone"" means practically. You already say that:

A ""standing alone"" sequence can be thought of as a word in a very broad sence.

and later you say:

This again determines whether word contractions, part word contractions or nocontractsign should be applied.

but I'm still not sure I know what exactly the consequences are. Does it mean that it changes the behavior of the word opcode? The documentation of the word opcode is:

Replace the characters with the dot pattern if they are a word, that is, are surrounded by whitespace and/or punctuation.

For the capitalization opcodes, because these are almost completely the same as the emphasis opcodes, I was actually thinking about making the documentation for these very short and refer to their ""emph"" counterparts, and explain the differences if needed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/928#issuecomment-616522154,"First shot at solving #473 and #202 .
Comments or changes welcome.","Oh, I forgot one thing: You often say ""Note: something important"". In other places of the documentation we use
@strong{Note:} 
Maybe we should use that here as well.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/928#issuecomment-616635819,"First shot at solving #473 and #202 .
Comments or changes welcome.",The references as well as some of the other text has been copied straight from the wiki.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/928#issuecomment-616645158,"First shot at solving #473 and #202 .
Comments or changes welcome.","To tell the truth, I also was and still am a little in doubt, but that is how I read tests/ueb/input-ueb-02-stand_alone.txt (why not yaml tests?)

I will try to test some more with and without seqdelimiter and explain it more fully, perhaps quote an example from the UEB tests.



Concerning capitalization, I think it would be ok to make a reference to the emphasis doc, but it is a larger and more complicated subject than caps. So, I think the doc of caps should still be “standing alone”. There is some discussion in the wiki about the difference between caps and emphasis, but I am not sure it ever comes to a real conclusion.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/928#issuecomment-616648116,"First shot at solving #473 and #202 .
Comments or changes welcome.","This again determines whether word contractions, part word contractions or nocontractsign should be applied.

I just discovered in the code that seqdelimiter only has an effect on word and contraction (and nocontractsign).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/928#issuecomment-616656702,"First shot at solving #473 and #202 .
Comments or changes welcome.","So, I think the doc of caps should still be “standing alone”.

I just think that if we want to make the documentation of capitalization complete and yet make it stand on its own, that would lead to a lot of repetition. Capitalization is really just a special case of emphasis and I think the documentation should express that. I do think the user should be able to roughly understand what the ""caps"" opcodes do without having to jump to other sections. For that reason I suggested to include a brief explanation of the opcode. But for the fine details one would have to read the ""emph"" counterpart.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/928#issuecomment-622933085,"First shot at solving #473 and #202 .
Comments or changes welcome.","I have cleaned up the branch a bit. I am planning the merge the first 4 commits already and then we can think some more about the caps stuff.
@egli You approved the PR, but you had several comments. Can you check that they have been addressed?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/BueVest,9,https://github.com/liblouis/liblouis/pull/928#issuecomment-622999911,"First shot at solving #473 and #202 .
Comments or changes welcome.","I think I addressed all the comments from @egli, but if I have forgotten anything, please tell me.

Concerning caps etc.,I tested the various caps features some more, but can’t really get them to work as I expected. If we require tests from table authors, there might be something to say for requiring documentation when new features are implemented.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/928#issuecomment-623014071,"First shot at solving #473 and #202 .
Comments or changes welcome.","What is it that does not work as expected?
We are already providing documentation for all new features.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/928#issuecomment-623876970,"First shot at solving #473 and #202 .
Comments or changes welcome.","I pushed a few slight texinfo cleanups (put standing alone consistently in emph and drop the emph from the node name, as node names should not contain any macros as far as I know)
So as far as I'm concerned we can merge.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/928#issuecomment-623879591,"First shot at solving #473 and #202 .
Comments or changes welcome.",The only thing remaining seems to be the discussion about the seqdelimiter in the yaml test .,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/928#issuecomment-623931073,"First shot at solving #473 and #202 .
Comments or changes welcome.",@egli Thanks. Merged everything except the begcaps/endcaps commit and the capitalization.yaml commit: e4a3793.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,928,2020-04-19T21:57:40Z,2020-05-05T10:27:00Z,2020-05-05T10:27:00Z,CLOSED,False,14,10,2,https://github.com/BueVest,Buevest docs2006,2,['documentation'],https://github.com/liblouis/liblouis/pull/928,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/928#issuecomment-623960633,"First shot at solving #473 and #202 .
Comments or changes welcome.",@bertfrees thanks for merging. I guess we can close this PR then,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,929,2020-04-20T15:23:24Z,2020-04-21T06:59:25Z,2020-04-21T06:59:32Z,MERGED,True,13,7,2,https://github.com/egli,Increase LETSIGNSIZE to 256,1,"['enhancement', 'refactoring', 'needs news']",https://github.com/liblouis/liblouis/pull/929,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/929,"and at the same time decrease LETSIGNSIZE for noletsignbefore and
noletsignafter (by introducing two more constants LETSIGNBEFORESIZE
and LETSIGNAFTERSIZE.
This will allow for 256 letsign characters while keeping the size of
the table the same because we decrease the size of the noLetsignBefore
and noLetsignAfter array.
This fixes #529 in a simplistic but good enough way and helps with #921.","and at the same time decrease LETSIGNSIZE for noletsignbefore and
noletsignafter (by introducing two more constants LETSIGNBEFORESIZE
and LETSIGNAFTERSIZE.
This will allow for 256 letsign characters while keeping the size of
the table the same because we decrease the size of the noLetsignBefore
and noLetsignAfter array.
This fixes #529 in a simplistic but good enough way and helps with #921.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,931,2020-04-21T11:21:02Z,2020-04-22T06:46:17Z,2020-04-22T06:46:17Z,MERGED,True,6,1137,7,https://github.com/BueVest,Buevest delete tables2006,6,[],https://github.com/liblouis/liblouis/pull/931,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/931,Solves #814 and also deletes two obsolete Danish Tables.,Solves #814 and also deletes two obsolete Danish Tables.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,931,2020-04-21T11:21:02Z,2020-04-22T06:46:17Z,2020-04-22T06:46:17Z,MERGED,True,6,1137,7,https://github.com/BueVest,Buevest delete tables2006,6,[],https://github.com/liblouis/liblouis/pull/931,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/931#issuecomment-617120031,Solves #814 and also deletes two obsolete Danish Tables.,I guess tables/Makefile.am needs some updating.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,931,2020-04-21T11:21:02Z,2020-04-22T06:46:17Z,2020-04-22T06:46:17Z,MERGED,True,6,1137,7,https://github.com/BueVest,Buevest delete tables2006,6,[],https://github.com/liblouis/liblouis/pull/931,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/931#issuecomment-617120630,Solves #814 and also deletes two obsolete Danish Tables.,"Oops, sorry. Be there in a sec.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/BAUM-Engineering,1,https://github.com/liblouis/liblouis/pull/935,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/935#issuecomment-618389742,,"I have a few concerns. Firstly what Andrey said in #934 (comment):

I don't know about the Uzbek Braille rules, but I know that Russian grade 1 table is full of bugs and mistakes.

Secondly, you say that the table is based on Russian grade 1, but the right thing to do in that case would be to include a Russian table file. The way it is done now is that a whole lot of rules were copied from one file to the other. I recognize this immediately because it has been done a lot before. This way you may copy a lot of bugs (which is apparently the case according to Andrey). The other drawbacks are that this leads to a lot of duplication, and that fixes to the table where the rules were copied from will not have a positive effect on your table.
The best approach to writing a table is:

Start by creating a test file, which is a list of input strings and expected translations: this will be the ""contract"" for the table.
If you want to base your table on another one, include it with the include opcode.
Add rules that are specific to the newly implemented braille code until the all the tests pass.

Finally, a question: is your application available to the public, and if yes: it is already listed here: https://github.com/liblouis/liblouis/wiki/Products-that-use-Liblouis? If not, do you want to add it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/Futyn-Maker,3,https://github.com/liblouis/liblouis/pull/935#issuecomment-618662876,,"If You want to base the table on Russian braille, I recommend to:
include ru-litbrl.ctb
Although this tables contains some mistakes, it's more correct than ru-ru-g1.utb
Besides, I maybe improve this table later and it'll be more right.
If NVDA didn't use ru-ru-g1.utb as only literary table for Russian Braille, I'd suggest to delete it.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/935#issuecomment-623408630,,"@BAUM-Engineering can you adress the issues that @bertfrees lists above, namely

include a russian table instead of copy and pasting it
figure out which russian table to base on

I would like to include this in the upcoming release but we need the issues resolved before we can do that.
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/BAUM-Engineering,5,https://github.com/liblouis/liblouis/pull/935#issuecomment-625181725,,"Hello again.
I did the modifications in the Uzbek table:

Included ru.tbl (which has ru-litbrl).
Created some tests in YAML.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/935#issuecomment-625204566,,"Thanks, this look much, much better!
One thing that is still missing is some table metadata. This is uncontracted braille, right? Would you happen to have some documentation about the implemented braille code?
And have you seen my question above regarding https://github.com/liblouis/liblouis/wiki/Products-that-use-Liblouis?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/935#issuecomment-625215919,,@BAUM-Engineering Which name and email address can we use for the copyright notice and contact info?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/935#issuecomment-625217509,,I have cleaned up the branch a bit and added a few commits of my own. (Note that I have force-pushed it.) Currently the test is not working yet. The table does not compile because of the pass5 rule (there is no pass 5).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/BAUM-Engineering,9,https://github.com/liblouis/liblouis/pull/935#issuecomment-625687545,,"Hello.
Thank you for correcting my mistakes (eg. not including the metadata).
I've fixed the problem with the pass5 rule.
Regarding to copyright notice, our contact details are:

e-mail: liblouis@baum.ro
name: BAUM Engineering

We are already on the list of ""Products-that-use-Liblouis"", we are working for Index Braille.
I'm attaching in this comment the documentation that the client sent us to use.
Documentation_Uzbek.pdf",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,935,2020-04-23T11:51:44Z,2020-05-08T13:21:55Z,2020-05-08T13:21:56Z,MERGED,True,113,1,8,https://github.com/BAUM-Engineering,Add uzbek table based on Russian.,10,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/935,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/935#issuecomment-625712698,,"OK thanks very much.
I don't think it makes sense to put that document up on our website. It's a bit brief :-) Looks like it came from an email or something.
I've converted it into a comment in the YAML file.
Updated the branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/937,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/937#issuecomment-619759667,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Oops. I've created the new branch special for these commits, but the old commits are here... I cannot find out how to delete it :( Sorry",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/937#issuecomment-619821897,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",@Futyn-Maker It's OK. Thanks for making the PR.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/937#issuecomment-619843351,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","@Futyn-Maker Nice test. I'll see if I can make some of the tests pass.
Note to @egli: I rebased the branch and pushed it here (couldn't push it to Andrey's branch).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,5,https://github.com/liblouis/liblouis/pull/937#issuecomment-619853228,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Thanks.
The most needful things is putting dot 6 before punctuations after fractions, put dots 34 before superscripts and 16 before subscripts. Also the big problems are indicating capital letters of different alphabets and direct speech and dialogs.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/937#issuecomment-622928923,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",@Futyn-Maker I don't know if I will be able to look at it before the next release. I have some other tasks on my list. But you may have some luck asking again on the mailing list if anyone else is prepared to help.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/937#issuecomment-622929957,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","OK, thanks. I'll write to list bit later.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/937#issuecomment-680930414,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",I have rebased this on master: https://github.com/liblouis/liblouis/compare/ru-litbrl,True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,9,https://github.com/liblouis/liblouis/pull/937#issuecomment-680947517,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","OK, thanks. Now i haven't enough time to continue working on this table, I hope, I'll try it later.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,10,https://github.com/liblouis/liblouis/pull/937#issuecomment-717369756,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Hello @bertfrees!
I've decided to connect ru-litbrl.ctb and ru-math.ctb. I've removed tests that are don't relevant anymore, moreover, I've achieved some progress with indication of capital letters. Now I have only one problem: the first Cyrillic capital letter after Latin letter isn't indicated like in the test ""HaH"".
The problem is that it's tthree context-rules which don't work together.
I'll very glad if You help me with it.
Thanks!
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/937#issuecomment-717385484,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",How come those tests not relevant anymore?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,12,https://github.com/liblouis/liblouis/pull/937#issuecomment-717397178,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","How come those tests not relevant anymore?

First of all, I've temporarily gave up from creating the Russian math table. It should be done within the LiblouisUDTML and MathPlayer, but it's more difficult.
In addition, I've removing tests of direct speech because of difficulties of this rule in our Braille system.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/937#issuecomment-734486906,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","@Futyn-Maker I have worked on the context rules. All your tests pass now. Check out my branch: https://github.com/liblouis/liblouis/compare/ru-litbrl. Note that I also moved ru-litbrl.yaml into ru.yaml.
The bad news is that a bunch of other tables that are based on ru-litbrl.ctb have failing tests. Maybe you can have a look first? These are the problematic tests. Some are duplicates.


Bashkir (ba.yaml)


Input:    'Айгөл арып, хәлдән тайып мәктәптән ҡайтып керҙе.'
Expected: '⠁⠯⠛⠣⠇ ⠁⠗⠮⠏⠂⠓⠜⠇⠙⠜⠝ ⠞⠁⠯⠮⠏ ⠍⠜⠅⠞⠜⠏⠞⠜⠝ ⠩⠁⠯⠞⠮⠏ ⠅⠑⠗⠬⠑⠲'
Received: '⠘⠁⠯⠛⠣⠇ ⠁⠗⠮⠏⠂⠓⠜⠇⠙⠜⠝ ⠞⠁⠯⠮⠏ ⠍⠜⠅⠞⠜⠏⠞⠜⠝ ⠩⠁⠯⠞⠮⠏ ⠅⠑⠗⠬⠑⠲'


Input:    'Этот подъём был круче, тяжелее прежнего.'
Expected: '⠪⠞⠕⠞ ⠏⠕⠙⠷⠡⠍ ⠃⠮⠇ ⠅⠗⠥⠟⠑⠂⠞⠫⠚⠑⠇⠑⠑ ⠏⠗⠑⠚⠝⠑⠛⠕⠲'
Received: '⠘⠪⠞⠕⠞ ⠏⠕⠙⠷⠡⠍ ⠃⠮⠇ ⠅⠗⠥⠟⠑⠂⠞⠫⠚⠑⠇⠑⠑ ⠏⠗⠑⠚⠝⠑⠛⠕⠲'


Input:    '1, 3, 5, 7, 11, 13, 17, 19, 23'
Expected: '⠼⠁⠂⠼⠉⠂⠼⠑⠂⠼⠛⠂⠼⠁⠁⠂⠼⠁⠉⠂⠼⠁⠛⠂⠼⠁⠊⠂⠼⠃⠉'
Received: '⠼⠁⠠⠂⠼⠉⠠⠂⠼⠑⠠⠂⠼⠛⠠⠂⠼⠁⠁⠠⠂⠼⠁⠉⠠⠂⠼⠁⠛⠠⠂⠼⠁⠊⠠⠂⠼⠃⠉'




Ukrainian (uk.yaml)


Input:    'Вона мріє про зів’яле листя на ґанку, але її мрії не збуваються.'
Expected: '⠺⠕⠝⠁ ⠍⠗⠽⠜ ⠏⠗⠕ ⠵⠽⠺⠄⠫⠇⠑ ⠇⠊⠎⠞⠫ ⠝⠁ ⠻⠁⠝⠅⠥⠂⠁⠇⠑ ⠹⠹ ⠍⠗⠽⠹ ⠝⠑ ⠵⠃⠥⠺⠁⠳⠞⠾⠎⠫⠲'
Received: '⠘⠺⠕⠝⠁ ⠍⠗⠽⠜ ⠏⠗⠕ ⠵⠽⠺⠄⠫⠇⠑ ⠇⠊⠎⠞⠫ ⠝⠁ ⠻⠁⠝⠅⠥⠂⠁⠇⠑ ⠹⠹ ⠍⠗⠽⠹ ⠝⠑ ⠵⠃⠥⠺⠁⠳⠞⠾⠎⠫⠲'


Input:    'Этот подъём был круче, тяжелее прежнего.'
Expected: '⠪⠞⠕⠞ ⠏⠕⠙⠷⠡⠍ ⠃⠮⠇ ⠅⠗⠥⠟⠑⠂⠞⠫⠚⠑⠇⠑⠑ ⠏⠗⠑⠚⠝⠑⠛⠕⠲'
Received: '⠘⠪⠞⠕⠞ ⠏⠕⠙⠷⠡⠍ ⠃⠮⠇ ⠅⠗⠥⠟⠑⠂⠞⠫⠚⠑⠇⠑⠑ ⠏⠗⠑⠚⠝⠑⠛⠕⠲'


Input:    '1, 3, 5, 7, 11, 13, 17, 19, 23'
Expected: '⠼⠁⠂⠼⠉⠂⠼⠑⠂⠼⠛⠂⠼⠁⠁⠂⠼⠁⠉⠂⠼⠁⠛⠂⠼⠁⠊⠂⠼⠃⠉'
Received: '⠼⠁⠠⠂⠼⠉⠠⠂⠼⠑⠠⠂⠼⠛⠠⠂⠼⠁⠁⠠⠂⠼⠁⠉⠠⠂⠼⠁⠛⠠⠂⠼⠁⠊⠠⠂⠼⠃⠉'




Uzbek (uz.yaml)


Input:    'Hayirli kech'
Expected: '⠹⠁⠯⠊⠗⠇⠊⠀⠅⠑⠉⠹'
Received: '⠨⠹⠁⠯⠊⠗⠇⠊⠀⠅⠑⠉⠹'


Input:    'Рождество байрамингиз қутлуғ бўлсин'
Expected: '⠗⠕⠚⠙⠑⠎⠞⠺⠕⠀⠃⠁⠯⠗⠁⠍⠊⠝⠛⠊⠵⠀⠽⠥⠞⠇⠥⠻⠀⠃⠧⠇⠎⠊⠝'
Received: '⠘⠗⠕⠚⠙⠑⠎⠞⠺⠕⠀⠃⠁⠯⠗⠁⠍⠊⠝⠛⠊⠵⠀⠽⠥⠞⠇⠥⠻⠀⠃⠧⠇⠎⠊⠝'




There is one more, namely spaces.yaml. The failing tests in this file are all about the Russian table though. I have therefore moved them to ru.yaml.


Input:    '\x0009'
Expected: virtual dot 9
Received: ' ' (space)


Input:    '\x00a0'
Expected: virtual dot a
Received: ' ' (space)


Input:    '\x000c'
Expected: ' ' (space)
Received: '⠄⡳⠭⠴⠴⠴⠉⠄'",True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,14,https://github.com/liblouis/liblouis/pull/937#issuecomment-734661948,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","@bertfrees Great! Many thanks for improve the table, it seems to work as expected now.
Speaking about the test, yes, it are, of course, failur because we've changed the alphabet indicators. I hope I'll find time today to correct these tests. Should I creat new PR with master branch?
And also, about spaces. As I understand, tests you've written about is about ru.ctb (computer braille). They aren't relevant for ru-litbrl.ctb.
Today I should add metadata, some other symbols (arrows and additional letters) and look at test-files of other tables.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,15,https://github.com/liblouis/liblouis/pull/937#issuecomment-734695004,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","And one another thing. What about the license? As I know, this table is licensed by LGPL version 3, while other tables are licensed by LGPL 2.1. I understand about the licenses badly, do we have any problems connected with it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/937#issuecomment-734785571,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Speaking about the test, yes, it are, of course, failur because we've changed the alphabet indicators. I hope I'll find time today to correct these tests.

So were all these tests wrong before, and they have been fixed by your change? How should I interpret this? Where the tests wrong because the creator wanted them to pass even though Liblouis behaved wrong, or did the rules actually change?
I mean, the changes seem reasonable. And I fully trust you that you are doing the right thing. I just have a slight difficulty with not knowing whether this is actually based on the rules that are taught to the majority of the Russian population. So I would really like to see this backed by some documentation.
I'm also not quite sure that we can just change the tests for all the other tables that are based on Russian. For example, in Uzbekistan apparently no capital indicators are used. This is mentioned explicitly in the test file.

Should I creat new PR with master branch?

Best would be if you could base your new changes on my latest version. It's possible to just use the same PR if you force push your new branch. Or you can merge your current Tables/Russian branch with my branch, and then do a simple push. If all this is too difficult you may also create a new PR.

And also, about spaces. As I understand, tests you've written about is about ru.ctb (computer braille). They aren't relevant for ru-litbrl.ctb.

No, they were written for ru-litbrl.ctb (or ru.tbl, which is basically the same). The space tests for ru.ctb had already been moved to ru.yaml before.

And one another thing. What about the license? As I know, this table is licensed by LGPL version 3, while other tables are licensed by LGPL 2.1. I understand about the licenses badly, do we have any problems connected with it?

We'd have to ask Igor Poretsky for permission because as I see it, the table is still for a big part his work.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,17,https://github.com/liblouis/liblouis/pull/937#issuecomment-734811318,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","So were all these tests wrong before, and they have been fixed by your change? How should I interpret this? Where the tests wrong because the creator wanted them to pass even though Liblouis behaved wrong, or did the rules actually change?
I mean, the changes seem reasonable. And I fully trust you that you are doing the right thing. I just have a slight difficulty with not knowing whether this is actually based on the rules that are taught to the majority of the Russian population. So I would really like to see this backed by some documentation.
I'm also not quite sure that we can just change the tests for all the other tables that are based on Russian. For example, in Uzbekistan apparently no capital indicators are used. This is mentioned explicitly in the test file.

To be honest, it's really difficult story.
First of all, I should say that Russian Braille is documented weakly. In fact, we have only Mass-braille distribution guide which is about imbossing paper-books.
This guide say that we shouldn't indicate capital letters in most cases, where it's obvious. According to it, capital mode is need to figure out Ambiguities.
But the problem is that computer can't find the places where it's neccesary to put the capital indicator. So I think it's better to indicate capital letters anywhere than we'd totally ignore them. Besides, the same system is using on IOS by years.
Speaking about other languages based on the Russian Braille, i don't think they have any different rules. The problem is that there's almost no any documents. The attitute to capital letters were formed many years ago, but now, when we have computers and Braille displays, it's no so Unambiguously.
I know quite many people who always indicates capital letters when writing, even on paper, but now I can't sure that they consist of a majority.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/937#issuecomment-734818707,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Thanks for the information, that clarifies things for me. I find it quite astonishing that for such a huge country like Russia there is so limited documentation. But OK, it's the way it is...
It would be helpful if you could include this explanation (the reasons for wanting to indicate capitals or not indicate them) in the YAML files. Preferably I would like to keep both the tests with and without capital indication. The tests that don't pass can then be commented out (or marked as failing).
From what I understand, maybe there is even the need for two versions of the Russian table? It sounds like there are people who would rather not have capitals indicated, especially when we're talking about braille on paper.
We also make this distinction in Danish, and recently also for German.
What do you think?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,19,https://github.com/liblouis/liblouis/pull/937#issuecomment-734827505,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","From what I understand, maybe there is even the need for two versions of the Russian table? It sounds like there are people who would rather not have capitals indicated, especially when we're talking about braille on paper.
We also make this distinction in Danish, and recently also for German.
What do you think?

Yes, It makes sense, although nobody uses Liblouis-based programs for preparation texts for imbosing in Russia - all libraries work with the DBT. The majority of the table's users is the NVDA and JAWS users with Braille displays.
Now I run the survey in Russian communities and ask people if they prefer read texts with capitalizing or not. Maybe, if opinions differ a lot, I'll make the other version of this table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/937#issuecomment-734830984,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","The majority of the table's users is the NVDA and JAWS users with Braille displays.

But still, since there are so many Russians, I bet there are also a lot of people who want to stick to what they're used to, even when using a computer.
Also we don't just need to accept the Duxbury domination. Liblouis is used for production of braille on paper in many countries so why not Russia?

Now I run the survey in Russian communities

Great idea. Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,21,https://github.com/liblouis/liblouis/pull/937#issuecomment-734985420,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Well, I've got about 7 opinions that capitalizing is necessary and only one that uppercase letters shouldn't be indicated. I suggest including the version with indicating upercases in this release and than think about creating an altirnative table.
I've also written to Igor Poretsky, let's hope he'll give an answer. :)
I'll push the table here bit later. I want to add Greek mode and some symbols.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,22,https://github.com/liblouis/liblouis/pull/937#issuecomment-735280662,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Well, I've found the new problem (yes, another one!) and created two new tests which now is failure.
@bertfrees Can You explaine why the rule always ,\s 2 doesn't work after capital letters? I find it quite strange, it is the ""always""-rule.
About other changes. I've added the Greek mode to indicate Greek letters, too. I've also bit changed the rule and the test of capitalizing cyrillics, because in fact, the word which consists of several capital Cyrillic letters should be marked with 45-45. I've also added tests without capitalizing.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,23,https://github.com/liblouis/liblouis/pull/937#issuecomment-735289109,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Can You explaine why the rule always ,\s 2 doesn't work after capital letters?

Hmm, it's because of the ""Exit uppercase mode"" rules that I added. As a matter of fact, this was messing up all the always rules and other translation rules. I have fixed it now.",True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,24,https://github.com/liblouis/liblouis/pull/937#issuecomment-735290058,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Great! Many thanks, while I don't understand all aspects of Liblouis's working.
Should I add in other languages' test-files the same tests, without capitalizing?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,25,https://github.com/liblouis/liblouis/pull/937#issuecomment-735290840,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","@bertfrees You've removed the swapcd updigit class, is it a mistake?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,26,https://github.com/liblouis/liblouis/pull/937#issuecomment-735291061,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Should I add in other languages' test-files the same tests, without capitalizing?

Yes, would be great.

You've removed the swapcd updigit class, is it a mistake?

No, I removed it because the class is no longer used anywhere.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,27,https://github.com/liblouis/liblouis/pull/937#issuecomment-735291711,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","No, I removed it because the attribute is no longer used anywhere.

noback context $d %updigit#2=0
This rule are still in the table (I see in your branch). Can I just remove?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,28,https://github.com/liblouis/liblouis/pull/937#issuecomment-735294584,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Oops, that was a mistake. I meant to remove it. But now I notice it doesn't work without this rule. Don't understand what is happening. OK, you can put back the updigit class. But it shouldn't be in the ""Exit uppercase mode"" section.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,29,https://github.com/liblouis/liblouis/pull/937#issuecomment-735299259,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","I've pushed Your changes here, but with putting back updigit-class.
It doesn't seem to have any problems now...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,30,https://github.com/liblouis/liblouis/pull/937#issuecomment-735310114,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","I also have some problems with others tests due to virtual dot 9. We don't use it in ru-litbrl.ctb anymore, MB remove it from other tables based on it, too? I have failurs tests due to this...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/poretsky,31,https://github.com/liblouis/liblouis/pull/937#issuecomment-735338149,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Of course, I have no objections concerning licensing and re-licensing
of this stuff. But I am absolutely disagree that these tables are
generally not used for braille embossing preparation. I started this
work just to get a versatile braille printing technology and up to the
moment use it exclusively for this purpose. Moreover, as far as I
know, Everest braille embossers manufactured by Index Braille include
Liblouis software along with its tables as embedded braille
preparation means.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,32,https://github.com/liblouis/liblouis/pull/937#issuecomment-735361790,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","@poretsky Hello and thank You for your answer!
When I was talking about this problem, I meaned libraries and other printing-houses. Of course, I know that, for example, in Linux-systems Liblouis-based programs is the only way to prepare texts for embossing. But now Your table is included in a lot of others, that people use with Braille displays and I think it's necessary to do these changes due to this fact. Your comment proves that we need two different tables.
Excepted indication of capital letters and adding new symbols, this table have other changes. For example, the dot 6 after digits and before punctuations.
I also don't know how often the Liblouis-based programs for working with texts are updated and if it is possible to change default tables easy.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,33,https://github.com/liblouis/liblouis/pull/937#issuecomment-735362764,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Basically, we have another table which now is used by NVDA - ru-ru-g1.utb. This table was created by Viewplus for TSS, but contains a lot of bugs.
I could copy recycled ru-litbrl.ctb to this table, but I think we'll have problems with copyright in this case, right?
Initially I was working with ru-litbrl.ctb because this table had already contained a lot of needful rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,34,https://github.com/liblouis/liblouis/pull/937#issuecomment-735372957,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",I'm looking at the Uzbek test-file... It seems they really not use capitalizing... It's really hard to know more when there're no any documents.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,35,https://github.com/liblouis/liblouis/pull/937#issuecomment-735375044,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","OK I think the best way forward is to create two versions of the Russian table. Then we can base Uzbek, etc. on the version without capital indication for now. (This can be changed later, but we need more time to discuss it with the maintainers of those tables.)
The version with capital indication should include the other one and add some rules to it. From what I have seen from the table this should be doable and not much work. Copying ru-litbrl.ctb and modifying the copy would also be possible, there are no copyright issues with this, however from the perspective of maintainability it is a bad idea.
Regarding your concern about the time it could take for your improvements to end up in products: The manufacturers need to be encouraged to update Liblouis frequently, and to pick the tables that suit their product best in case there are multiple variants of a table. This is not an issue specific to Russian. If you fear that braille displays that currently use the default ru-litbrl.ctb might not switch to the new variant, you should make it very clear in the release notes that the new table is more suited for braille displays than the current one.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,36,https://github.com/liblouis/liblouis/pull/937#issuecomment-735375407,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",By the way the metadata for the table with capital indicators should be #+variant: detailed. We have discussed the same issue in the context of other languages and this is one of the things that came out of that discussion.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,37,https://github.com/liblouis/liblouis/pull/937#issuecomment-735376521,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Regarding your concern about the time it could take for your improvements to end up in products: The manufacturers need to be encouraged to update Liblouis frequently, and to pick the tables that suit their product best in case there are multiple variants of a table. This is not an issue specific to Russian. If you fear that braille displays that currently use the default ru-litbrl.ctb might not switch to the new variant, you should make it very clear in the release notes that the new table is more suited for braille displays than the current one.

Anyway, I'm going to open an issue at least in NVDA to replace ru-ru-g1.utb with ru-litbrl.ctb in the GUI. We'll have to make something with ru-ru-g1.utb than - either remove or modify it... The problem that a lot of programs are Abandonware now.
I'm also not sure what table should be main - with capitalizing or not. I mean what table should include in the second table. I think the table with indication of capitals rather be more popular than without it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,38,https://github.com/liblouis/liblouis/pull/937#issuecomment-735391061,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",It's the correction of tests and tables. I've remove the virtual dot 9 and corrected tests. While I don't know what to do with the Uzbek table and test-file.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,39,https://github.com/liblouis/liblouis/pull/937#issuecomment-735462747,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","I'm also not sure what table should be main - with capitalizing or not. [...] I think the table with indication of capitals rather be more popular than without it.

It's not really a question about main or secondary. They are just two variants.

I mean what table should include in the second table.

This is another question. This is about what is most practical. It's probably more practical to include the table without capitalization in the table with capitalization.

I've remove the virtual dot 9.

I hadn't even noticed you had removed the dot 9 in ru-litbrl.ctb. Why did you do that? I thought it was a useful feature.

While I don't know what to do with the Uzbek table and test-file.

As I said before I would not change the behavior of the Uzbek, Ukraïnian (and maybe even Bashkir) for now. This can be sorted out later.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,40,https://github.com/liblouis/liblouis/pull/937#issuecomment-735560077,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","I hadn't even noticed you had removed the dot 9 in ru-litbrl.ctb. Why did you do that? I thought it was a useful feature.

And what for is it needed for table with forward flag? I think it's an just excess.

As I said before I would not change the behavior of the Uzbek, Ukraïnian (and maybe even Bashkir) for now. This can be sorted out later.

The addition difficulty with the Uzbek Braille is the fact that they use latin alphabet, too. As for the Ukrainian Braille, it's really as close as possible to the Russian Braille and problems with capitalizing is the same. I can speak nothing about the Bashkir one.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,41,https://github.com/liblouis/liblouis/pull/937#issuecomment-735703408,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","And what for is it needed for table with forward flag? I think it's an just excess.

I don't think it was just excess, it was nice to have. Admittedly it slightly complicated the table (but really only slightly), but it gave you additional information on what the braille dots represented. It allowed you to use the ru-ru.dis display table to render Cyrillic and Latin differently.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,42,https://github.com/liblouis/liblouis/pull/937#issuecomment-735710904,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","I don't think it was just excess, it was nice to have. Admittedly it slightly complicated the table (but really only slightly), but it gave you additional information on what the braille dots represented. It allowed you to use the ru-ru.dis display table to render Cyrillic and Latin differently.

TBH, I've never understood the philosophy of display-codes and where it is used... I've remove the dot 9 with removing dot 7 from capital letters (that allowed us to remove the excess context-rule), but if You think the virtual dot 9 is important, I'll put it back. I just saw it in few tables, if at all.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,43,https://github.com/liblouis/liblouis/pull/937#issuecomment-735787118,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","It allowed you to use the ru-ru.dis display table to render Cyrillic and Latin differently.

I meant ru-letters.dis.
I'm gonna try to make this PR ready for today's release, but I'm not sure I'm gonna make it. There's really not much time left.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,44,https://github.com/liblouis/liblouis/pull/937#issuecomment-735838732,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","@Futyn-Maker I updated my branch. Please have a final look before we merge and release it.
The only thing that is missing now is an entry in the NEWS file. Could you help me? You didn't explain in very much detail what you did. Can you summarize?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,45,https://github.com/liblouis/liblouis/pull/937#issuecomment-735902964,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","@bertfrees As for me, it's fantastic!  I thought we'd needed much more time to do two versions of the table, but You've really done it fast and well, many thanks for Your help :)
As for news, I think we can be limited with common phrases because changes is very large.

The table has been recycled a lot according to actual rules of the Russian Braille. A lot of new symbols and rules were added and many bugs were fixed, now it is more convenient for Braille displays' users.

If You aren't against, I'll refrain from commiting something here.
As I see, You've removed ru-ru-g1.utb, I'm absolutely agree with this solution.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,46,https://github.com/liblouis/liblouis/pull/937#issuecomment-735908748,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Hmm, actually I was thinking about something slightly less general. That is also the problem with your commits. I wasn't really able to distill from your commit messages what actually changed.
We don't need to be specific about which symbols were added. But it would be nice to have an idea about which rules were missing.
It should also be very explicitly mentioned that there is a new table with indication of capitals, which we recommend for braille display users. It should be clear that these particular changes are not automatically included upon updating.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,47,https://github.com/liblouis/liblouis/pull/937#issuecomment-735933663,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",I hope I forget nothing here.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,48,https://github.com/liblouis/liblouis/pull/937#issuecomment-735937628,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,49,https://github.com/liblouis/liblouis/pull/937#issuecomment-735985060,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","And yet I've forgotten about this including, while it's quite important.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,50,https://github.com/liblouis/liblouis/pull/937#issuecomment-736017473,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey","Well, it have finally been done! My congratulations on the release! And thank You very much for help, I've never done these changes without it. :)
I close this PR due to conflicts. If it's necessary to improve the table, I'll open new one.
Thanks!
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,51,https://github.com/liblouis/liblouis/pull/937#issuecomment-736018229,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",Thank you for your patience!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/bertfrees,52,https://github.com/liblouis/liblouis/pull/937#issuecomment-736018927,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",Merged in 64f68aa.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,937,2020-04-27T06:31:56Z,2020-11-30T20:15:20Z,2020-11-30T20:22:27Z,CLOSED,False,1177,181,9,https://github.com/Futyn-Maker,Russian literary braille table,12,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/937,https://github.com/Futyn-Maker,53,https://github.com/liblouis/liblouis/pull/937#issuecomment-736020959,"Hi all!
Now I'm working to improve ru-litbrl.ctb, but I understand that I need help.
What have I already done?

I've recycled ru-litbrl.ctb very a lot. Now it's more correct;
I've created the new table - ""ru-math.ctb"". Russian Braille math system is separate of international system - it's bit same as Marburg, but we have a lot of different things. Now this table contains definetions and rules for Unicode math operators, fractions, superscripts, subscripts and more.
I've written small test (22 tests) to ru-litbrl.ctb. It describes Russian literary and math rules.

What I haven't been able to do?
Now I have 10 failure tests out of 22. It includes checking indicating of capital letters, direct and dialog speech and math rules.
I cannot fix it because I don't understand about working context/correct and multipass opcodes. I read documentation, but my experiments with these opcodes were failure. Maybe I didn't understand documentation correct because I'm not very well in English.
I'll glad if somebody will explaine me about making difficult rules or help to fixed it in my table.
Andrey",I should say You the same :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,945,2020-04-30T12:09:45Z,2020-05-01T12:14:34Z,2020-05-01T12:14:40Z,MERGED,True,0,3,2,https://github.com/bertfrees,Fix metadata of German computer braille table,1,[],https://github.com/liblouis/liblouis/pull/945,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/945,This fixes commit a3566ab,This fixes commit a3566ab,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,946,2020-04-30T22:18:26Z,2020-05-03T10:22:49Z,2020-05-03T10:23:25Z,CLOSED,False,0,0,0,https://github.com/bertfrees,Add index-names column to display-names file,0,[],https://github.com/liblouis/liblouis/pull/946,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/946,"Add index-names column to display-names file and check that they match what is in the tables. For now don't generate the index-names yet (should be easy to add).
Also check that all tables with metadata are listed in the display-names file.","Add index-names column to display-names file and check that they match what is in the tables. For now don't generate the index-names yet (should be easy to add).
Also check that all tables with metadata are listed in the display-names file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,946,2020-04-30T22:18:26Z,2020-05-03T10:22:49Z,2020-05-03T10:23:25Z,CLOSED,False,0,0,0,https://github.com/bertfrees,Add index-names column to display-names file,0,[],https://github.com/liblouis/liblouis/pull/946,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/946#issuecomment-622310307,"Add index-names column to display-names file and check that they match what is in the tables. For now don't generate the index-names yet (should be easy to add).
Also check that all tables with metadata are listed in the display-names file.",Hold on I'm going to add one more commit.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,946,2020-04-30T22:18:26Z,2020-05-03T10:22:49Z,2020-05-03T10:23:25Z,CLOSED,False,0,0,0,https://github.com/bertfrees,Add index-names column to display-names file,0,[],https://github.com/liblouis/liblouis/pull/946,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/946#issuecomment-623087577,"Add index-names column to display-names file and check that they match what is in the tables. For now don't generate the index-names yet (should be easy to add).
Also check that all tables with metadata are listed in the display-names file.",I'm gonna leave that commit for a next PR. Merged in 6d731a6.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,951,2020-05-03T18:04:58Z,2020-05-29T14:06:33Z,2020-06-02T09:34:56Z,MERGED,True,862,685,55,https://github.com/bertfrees,Merge class and attribute,9,['cleanup'],https://github.com/liblouis/liblouis/pull/951,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/951,Fixes #472,Fixes #472,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,951,2020-05-03T18:04:58Z,2020-05-29T14:06:33Z,2020-06-02T09:34:56Z,MERGED,True,862,685,55,https://github.com/bertfrees,Merge class and attribute,9,['cleanup'],https://github.com/liblouis/liblouis/pull/951,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/951#issuecomment-633288172,Fixes #472,@egli Updated documentation,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,951,2020-05-03T18:04:58Z,2020-05-29T14:06:33Z,2020-06-02T09:34:56Z,MERGED,True,862,685,55,https://github.com/bertfrees,Merge class and attribute,9,['cleanup'],https://github.com/liblouis/liblouis/pull/951,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/951#issuecomment-635425438,Fixes #472,"""Hackish"" is not the right word. It's just not fully unified yet. The reason I already explained: it's the combination of two things:

the pattern syntax requires attribute to be named as a number 0-7
and the pattern code currently requires that the attribute values are stored at a fixed location in the table

Coming up with a new syntax is not in scope for this issue, and rewriting the code seemed like a hell of a job and would be a waste of time because we will need to rewrite it anyway when we unify the context and match opcodes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,951,2020-05-03T18:04:58Z,2020-05-29T14:06:33Z,2020-06-02T09:34:56Z,MERGED,True,862,685,55,https://github.com/bertfrees,Merge class and attribute,9,['cleanup'],https://github.com/liblouis/liblouis/pull/951,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/951#issuecomment-635959874,Fixes #472,Removed the Travis commit and created new PR: #960,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,951,2020-05-03T18:04:58Z,2020-05-29T14:06:33Z,2020-06-02T09:34:56Z,MERGED,True,862,685,55,https://github.com/bertfrees,Merge class and attribute,9,['cleanup'],https://github.com/liblouis/liblouis/pull/951,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/951#issuecomment-635981460,Fixes #472,@bertfrees I changed the wording. Can you approve so I can merge? Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,951,2020-05-03T18:04:58Z,2020-05-29T14:06:33Z,2020-06-02T09:34:56Z,MERGED,True,862,685,55,https://github.com/bertfrees,Merge class and attribute,9,['cleanup'],https://github.com/liblouis/liblouis/pull/951,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/951#issuecomment-635982415,Fixes #472,"I can not approve my own PR, but: ""approved"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,951,2020-05-03T18:04:58Z,2020-05-29T14:06:33Z,2020-06-02T09:34:56Z,MERGED,True,862,685,55,https://github.com/bertfrees,Merge class and attribute,9,['cleanup'],https://github.com/liblouis/liblouis/pull/951,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/951#issuecomment-637391866,Fixes #472,Could it be that the code doesn't allow for attribute names such as foo1? Maybe we should have a yaml test for that.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,951,2020-05-03T18:04:58Z,2020-05-29T14:06:33Z,2020-06-02T09:34:56Z,MERGED,True,862,685,55,https://github.com/bertfrees,Merge class and attribute,9,['cleanup'],https://github.com/liblouis/liblouis/pull/951,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/951#issuecomment-637403207,Fixes #472,It still works for before/after but you'll get a warning. In theory it's not allowed.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,953,2020-05-05T10:30:15Z,2021-02-15T15:04:42Z,2021-03-05T16:30:41Z,MERGED,True,14,10,2,https://github.com/bertfrees,"Fix documentation of ""caps"" opcodes",2,['documentation'],https://github.com/liblouis/liblouis/pull/953,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/953,"Part of #928 that was not merged yet. There was a discussion going on about how to best do it. We want it to kind of stand on its own but at the same time don't create too much duplication with the ""emph"" opcodes (see #928 (comment)).","Part of #928 that was not merged yet. There was a discussion going on about how to best do it. We want it to kind of stand on its own but at the same time don't create too much duplication with the ""emph"" opcodes (see #928 (comment)).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,953,2020-05-05T10:30:15Z,2021-02-15T15:04:42Z,2021-03-05T16:30:41Z,MERGED,True,14,10,2,https://github.com/bertfrees,"Fix documentation of ""caps"" opcodes",2,['documentation'],https://github.com/liblouis/liblouis/pull/953,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/953#issuecomment-727872634,"Part of #928 that was not merged yet. There was a discussion going on about how to best do it. We want it to kind of stand on its own but at the same time don't create too much duplication with the ""emph"" opcodes (see #928 (comment)).",Let's do #1006 first,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,953,2020-05-05T10:30:15Z,2021-02-15T15:04:42Z,2021-03-05T16:30:41Z,MERGED,True,14,10,2,https://github.com/bertfrees,"Fix documentation of ""caps"" opcodes",2,['documentation'],https://github.com/liblouis/liblouis/pull/953,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/953#issuecomment-727941464,"Part of #928 that was not merged yet. There was a discussion going on about how to best do it. We want it to kind of stand on its own but at the same time don't create too much duplication with the ""emph"" opcodes (see #928 (comment)).",Agree. Perhaps then we can clarify how these opcodes do or don't function simularly.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/BAUM-Engineering,1,https://github.com/liblouis/liblouis/pull/955,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/955#issuecomment-628564687,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","@BAUM-Engineering Great, thank you! Looks already pretty good, but I noticed a few issues. I have made some comments in the code, and I'll list some other here:

Good that you have added a few tests. Thanks. What I'm missing from the tests however is some punctuation. The he-int-g1.utb table contains a whole lot of punctuation marks. These are clearly taken from en-us-g1.ctb, with a couple of modification here and there (I haven't checked the exact differences). For maintainability it is important that we can see why these definitions need to be in this table rather than simply including en-us-g1.ctb. Even better would be of course if we indeed include en-us-g1.ctb and add overriding rules for those punctuation marks that are different.
The changes in he.ctb need an attribuation. We should know who is responsible for the change and who we need to contact in case there is discussion about it later. This is best done with a copyright line. It would also be good if the corresponding tests have the same copyright notice: see how it's done in the Uzbek YAML file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/BAUM-Engineering,3,https://github.com/liblouis/liblouis/pull/955#issuecomment-629041675,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Thank for your response.
We understand the issues and we'll get in touch with the creator of the table to give us more details about what it's the table intention. Afterwards we'll fix the problems following your guidelines.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/BAUM-Engineering,4,https://github.com/liblouis/liblouis/pull/955#issuecomment-631270191,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Hello,

I've modified the 6 dot table to be like Greek internationalized.
Added copyright to the 8 dot table.


Even better would be of course if we indeed include en-us-g1.ctb and add overriding rules for those punctuation marks that are different.

I have studied the mix table, the rules were clearly taken from en-us-g1 table, but there are major changes made with the punctuations. In my opinion if we are trying to override them, the result would be almost the same ( i mean the dimension of the table).
This is the message that we've got from the table creator:

Because here in Israel we use 3 languages (sometimes 4 with Russian..) in a lot of documents and
In writing, the heb table contains heb, arb and eng  .
Some of the punctuation  in this large 3 languages table conflict with other language.
so here in the library for the blind and in the ministry of education set together and decide how this multi language table should  be.
This tables are results of their decisions…

Also I wrote these lines in YAML test also.
An another problem what is bothering me and I didn't find the solution yet is in the Travis CI build, the compiling always fail when the check-format script is executed. Do you have any idea how should I solve this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/955#issuecomment-631726764,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Thanks for looking into the issues. And thanks for the additional tests.
Good that we have a description of the table now. However I'm not sure that your conclusion is the right one. When I read the description I don't see how this table resembles grc-international-en.utb.

This braille code isn't used in Greece. It's based on a braille code developed by scholars to facilitate their study of classical and biblical Greek.

The new Hebrew table on the other hand is actually used in Israel and it supports multi-language documents.
Couldn't this table just be called ""Hebrew braille"", possibly with the mentioning that it's specifically for use in Israel? I mean, is there another braille code in use that is the ""real"" 6-dot Hebrew braille?
The YAML test contains only Hebrew if I'm not mistaken? Given that this table is all about supporting multi-language texts, wouldn't it make sense to add some Arabic and English too?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/BAUM-Engineering,6,https://github.com/liblouis/liblouis/pull/955#issuecomment-632071742,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.",Thank you for your detailed review. Sadly I can't answer for all these questions and I will need to get in touch again with the table creator. Could you please tell me if there are any other questions from the review or can I write the series of questions to the author?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/955#issuecomment-632075500,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Thank you, it would be great if you could pass along these questions. I'm especially interested to know about whether this should be considered the Hebrew standard for literary braille, or whether it is only relevant for Israel, and/or whether there are other standards that are not covered by Liblouis yet.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/955#issuecomment-632610406,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","An another problem what is bothering me and I didn't find the solution yet is in the Travis CI build, the compiling always fail when the check-format script is executed. Do you have any idea how should I solve this?

It's was not because of check-format. It was because of the script that checks the metadata in tables. Seems to be fixed now.",True,{'THUMBS_UP': ['https://github.com/BAUM-Engineering']}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/BAUM-Engineering,9,https://github.com/liblouis/liblouis/pull/955#issuecomment-633516739,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Hello,
I've discussed with the original tabel creator and cleared some issues/questions.
He told me that the 6 dot mix table is used only in Israel (fact proved also by a perkins documentation, ""World Braille Usage"").
We agreed that I will make the necessary modifications to include the tables and if everything is defined right, I will send back the modified tables to him to recheck the functionality before merge.
Of course if it is good for you also.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/955#issuecomment-633555262,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Thanks for the update. I'll add a reference to World Braille Usage, and I might update the table metadata.
I'll add some more comments inline to make sure you didn't make any mistakes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/955#issuecomment-633948041,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","@BAUM-Engineering I added the following to the NEWS file:

New uncontracted multi-language braille table for Hebrew, Arabic and English. Thanks to BAUM Engineering.

But I would also like to say something about the changes to the 8-dot table. How would you describe it in a single sentence?
I was also wondering: are you sure there is no one else that you want to give credit in the table? You said the table was created by one of your clients. Is it unimportant who that is?
By the way I did some changes to the branch and rebased it. Is it OK if I push it?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/BAUM-Engineering,12,https://github.com/liblouis/liblouis/pull/955#issuecomment-634583690,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Hello @bertfrees,
I did some modifications in the 6 dot table: deleted the duplicate definitions, changed some opcodes. Hopefully I didn't omit other things and the table is still functional (the YAML tests are still working, but as I said I will send the table to a recheck).

But I would also like to say something about the changes to the 8-dot table. How would you describe it in a single sentence?

I sent a message to Mr. Erez (the tabel creator), currently I'm waiting for an answer. I will edit here, in this comment!

The editing:
The answer I got is the following:

The modification was made due to a numbers of different  braille tables that was in use in Israel.
4 years ago there was a meeting with all the parties and they were working together to establish one braille table that contain all 3 languages.
This table was made to meet all parties satisfaction and needs.
Some characters in past was conflict with other characters from different languages and so on…

In a single sentence, maybe: ""The modifications were made to satisfy the requirements of all three languages which are used in Israel.""


I was also wondering: are you sure there is no one else that you want to give credit in the table? You said the table was created by one of your clients. Is it unimportant who that is?

If you consider it's a good idea, we can include:

Erez Kugler from ""TSR GAASH""
email: erez@tsr-gaash.com
http://www.tsr-gaash.com


By the way I did some changes to the branch and rebased it. Is it OK if I push it?

Sure, it's OK. Thanks for helping me!
One question. Can I send the 6 dot table for a recheck?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/955#issuecomment-636208989,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Hopefully I didn't omit other things and the table is still functional [...]

Yes, hopefully. The best way to find out is to improve the test coverage as much as possible.

The answer I got is the following [...]

Thanks. You are sure that this is about the 8-dot table? So that means the 8-dot table, just like the 6-dot table, is also specific to Israel with its three languages. There is currently a note in table header that says the following. Is this still accurate?

This table is based on the new unified Hebrew Braille code standard that was put together on January 2014 after a conference with all of the specialists in this field in Israel. It includes improved representation of Hebrew letters, special letters that are called Nikud, and punctuation symbols. The old Braille standard is not relevant any more.

It doesn't explicitly mention the 3-languages issue. I don't think Mr. Kugler is talking about the same meeting because that was 6 years ago, not 4. If there was another revision a few years later that people ought to know about maybe the note should be updated? It would also be incredibly helpful if there was some (official) document that we can refer to.
Update: I just noticed that I was in contact with Mr. Kugler a couple of years ago about the multi-language 8-dot table, and I asked him for a reference document back then already. I received some Excel sheet from him I wasn't sure what to do with. I guess it's better than nothing so I'll link to it from the table.
Back then he also asked me whether his multi-language Israeli table should replace the existing Hebrew table. Eventually we ended up just fixing a couple of small things in the table and he said the multi-language tables would come later. This happened in PR #554.
I'm now more leaning towards creating a new 8-dot table instead of modifying Adi Kushnir's  table. That table might have become obsolete after 2016, but we're not sure, so better safe than sorry.

If you consider it's a good idea, we can include: Erez Kugler from ""TSR GAASH"" [...]

Yeah, I think they deserve the credit, don't you? I'll update the table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,955,2020-05-14T08:27:11Z,2020-06-02T11:38:03Z,2020-06-02T11:38:04Z,MERGED,True,707,23,11,https://github.com/BAUM-Engineering,Added new uncontracted Hebrew 6 dot table and new braille signs to the 8dot table.,4,['tables'],https://github.com/liblouis/liblouis/pull/955,https://github.com/BAUM-Engineering,14,https://github.com/liblouis/liblouis/pull/955#issuecomment-636509527,"Hello again,
One of our clients created a new Hebrew mix uncontracted 6 dot table and did some modifications to the existing 8 dot table.
They asked us to include their table to the official liblouis release.
I've created some YAML tests for both of these and included them in the Makefile also.","Hello,
I've sent the 6 dot table for a final recheck. Excepting a minor problem with number sign (this is fixed now)., he didn't notice other problems.
In our perspective the tables are ready for the release.

Yeah, I think they deserve the credit, don't you? I'll update the table.

Yes, sure. They deserve it.

I received some Excel sheet from him I wasn't sure what to do with. I guess it's better than nothing so I'll link to it from the table.

Unfortunately i have neither got an official document :(.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/956,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954","The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/956#issuecomment-629130274,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954","Thanks Leonard.
If this will be the final version I think a reference in the table and test to the specification would be appropriate. #+version and #-display-name also need update.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/956#issuecomment-633565517,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",@leonardder Planning more changes this week?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/956#issuecomment-633571050,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",@dkager Do you have time to look at these changes to the 8-dot table before the end of the week?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/dkager,5,https://github.com/liblouis/liblouis/pull/956#issuecomment-633571857,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",Yes. Apologies for the delay.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/dkager,6,https://github.com/liblouis/liblouis/pull/956#issuecomment-634096415,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",Looks good!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/leonardder,7,https://github.com/liblouis/liblouis/pull/956#issuecomment-636066853,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954","@bertfrees the Dutch braille authority agreed on making this the final 2020.1 version. We're currently working on a public specification document, but I'm afraid it won't be ready before the release.
Do you have any additional requests to change things?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/956#issuecomment-636102239,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954","Thanks!

Do you have any additional requests to change things?

An update of nl-comp8_harness.yaml would be nice.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/leonardder,9,https://github.com/liblouis/liblouis/pull/956#issuecomment-636636990,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954","I updated nl-comp8_harness.yaml and added nl-comp8-for_harness.yaml for greek braille, which is added for forward translation only.
I'm afraid I don't have any pending time to add more tests just yet. May be for the next release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/956#issuecomment-636894777,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954","Thanks! If you change that ""may be for the next release"" to ""certainly for the next release"", it's fine :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/leonardder,11,https://github.com/liblouis/liblouis/pull/956#issuecomment-636917097,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",That's certainly my intention.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/956#issuecomment-636927138,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",#964,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/956#issuecomment-636931074,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",@leonardder Your test actually revealed a bug in the table: the word-final position variant of the sigma seems to be missing. Do you want to fix that before I merge?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/956#issuecomment-636932565,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",Or I can do it if you confirm the test is correct and the table is wrong.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/leonardder,15,https://github.com/liblouis/liblouis/pull/956#issuecomment-636976585,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954","I believe the final sigma was left out from the spec on purpose, so the test was wrong and I have removed it. I will discuss this with the Responsible people. @dkager do you know why this was done?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/dkager,16,https://github.com/liblouis/liblouis/pull/956#issuecomment-637521975,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",See my post on the mailing list. In short: we only included those characters that are relevant to maths. My knowledge of Greek and maths is not good enough to know if final sigma belongs to the maths world as well.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,956,2020-05-15T08:16:19Z,2020-06-02T09:52:07Z,2020-10-28T14:26:17Z,MERGED,True,56,16,4,https://github.com/leonardder,Updates to Dutch 8 dot table,3,"['tables', 'needs metadata', 'cleanup']",https://github.com/liblouis/liblouis/pull/956,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/956#issuecomment-637536241,"The Dutch 8 dot braille working group of the Dutch braille authority have changed their braille table draft. This draft will likely be equal to the final version.
I'd like to have a review from @dkager as well.
Closes #954",I don't remember if I ever stumbled upon that variant of the sigma in my math classes. Probably not.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,957,2020-05-19T11:34:13Z,2020-05-25T10:26:45Z,2020-05-25T10:26:45Z,MERGED,True,97,0,6,https://github.com/Futyn-Maker,New Ukrainian computer braille table based on russian computer code,7,['tables'],https://github.com/liblouis/liblouis/pull/957,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/957,"Hi all!
We made the Ukrainian computer braille table based on Russian computer braille code.
Unfortunately, the second contributor isn't regestered on GitHub, but his name and Email are in the copyright section of table.
Andrey","Hi all!
We made the Ukrainian computer braille table based on Russian computer braille code.
Unfortunately, the second contributor isn't regestered on GitHub, but his name and Email are in the copyright section of table.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,957,2020-05-19T11:34:13Z,2020-05-25T10:26:45Z,2020-05-25T10:26:45Z,MERGED,True,97,0,6,https://github.com/Futyn-Maker,New Ukrainian computer braille table based on russian computer code,7,['tables'],https://github.com/liblouis/liblouis/pull/957,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/957#issuecomment-631706012,"Hi all!
We made the Ukrainian computer braille table based on Russian computer braille code.
Unfortunately, the second contributor isn't regestered on GitHub, but his name and Email are in the copyright section of table.
Andrey",@Futyn-Maker Many thanks. There doesn't seem to be a test for the hryvnia sign. Wouldn't that be a logical thing to do? Otherwise there are no issues. There are still a few things to do but nothing for you to worry about. Should get included in release 3.14.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,957,2020-05-19T11:34:13Z,2020-05-25T10:26:45Z,2020-05-25T10:26:45Z,MERGED,True,97,0,6,https://github.com/Futyn-Maker,New Ukrainian computer braille table based on russian computer code,7,['tables'],https://github.com/liblouis/liblouis/pull/957,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/957#issuecomment-631711524,"Hi all!
We made the Ukrainian computer braille table based on Russian computer braille code.
Unfortunately, the second contributor isn't regestered on GitHub, but his name and Email are in the copyright section of table.
Andrey",I have pushed my changes to your branch.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,957,2020-05-19T11:34:13Z,2020-05-25T10:26:45Z,2020-05-25T10:26:45Z,MERGED,True,97,0,6,https://github.com/Futyn-Maker,New Ukrainian computer braille table based on russian computer code,7,['tables'],https://github.com/liblouis/liblouis/pull/957,https://github.com/Futyn-Maker,4,https://github.com/liblouis/liblouis/pull/957#issuecomment-631735765,"Hi all!
We made the Ukrainian computer braille table based on Russian computer braille code.
Unfortunately, the second contributor isn't regestered on GitHub, but his name and Email are in the copyright section of table.
Andrey","Thanks.
What's sense to rename it into 'uk-comp.utb'? I'm not against, but want to know what is the differences of 'ctb' and 'utb'?
I've added new test. I forgot about Hryvnia sign at first.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,957,2020-05-19T11:34:13Z,2020-05-25T10:26:45Z,2020-05-25T10:26:45Z,MERGED,True,97,0,6,https://github.com/Futyn-Maker,New Ukrainian computer braille table based on russian computer code,7,['tables'],https://github.com/liblouis/liblouis/pull/957,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/957#issuecomment-631754908,"Hi all!
We made the Ukrainian computer braille table based on Russian computer braille code.
Unfortunately, the second contributor isn't regestered on GitHub, but his name and Email are in the copyright section of table.
Andrey","The c is for ""contracted"", the u is for ""uncontracted"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,957,2020-05-19T11:34:13Z,2020-05-25T10:26:45Z,2020-05-25T10:26:45Z,MERGED,True,97,0,6,https://github.com/Futyn-Maker,New Ukrainian computer braille table based on russian computer code,7,['tables'],https://github.com/liblouis/liblouis/pull/957,https://github.com/Futyn-Maker,6,https://github.com/liblouis/liblouis/pull/957#issuecomment-632346270,"Hi all!
We made the Ukrainian computer braille table based on Russian computer braille code.
Unfortunately, the second contributor isn't regestered on GitHub, but his name and Email are in the copyright section of table.
Andrey","@bertfrees I'll change the test in the afternoon, it's already too late now :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,958,2020-05-22T09:17:09Z,2020-06-01T18:57:08Z,2020-06-01T18:58:07Z,MERGED,True,2270,1456,12,https://github.com/bertfrees,Improvements to Arabic by Ikrami Ahmad,2,['tables'],https://github.com/liblouis/liblouis/pull/958,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/958,"with assistance from Bert.

Add a lot of new symbols (algebra, geometry, Greek, etc.) to the grade 1 table.
Change some symbols for less conflicts with grade 2.
Implement letter sign / grade 1 indicator to cancel numbers and inhibit contractions when in grade 2.
Improve back-translation.","with assistance from Bert.

Add a lot of new symbols (algebra, geometry, Greek, etc.) to the grade 1 table.
Change some symbols for less conflicts with grade 2.
Implement letter sign / grade 1 indicator to cancel numbers and inhibit contractions when in grade 2.
Improve back-translation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,960,2020-05-29T12:48:45Z,2020-06-12T09:57:35Z,2020-06-12T09:57:43Z,MERGED,True,3,3,2,https://github.com/bertfrees,Build documentation on Travis,3,['build system'],https://github.com/liblouis/liblouis/pull/960,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/960,I would expect the build to fail after adding the apt-get install texinfo but it doesn't.,I would expect the build to fail after adding the apt-get install texinfo but it doesn't.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,960,2020-05-29T12:48:45Z,2020-06-12T09:57:35Z,2020-06-12T09:57:43Z,MERGED,True,3,3,2,https://github.com/bertfrees,Build documentation on Travis,3,['build system'],https://github.com/liblouis/liblouis/pull/960,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/960#issuecomment-635964387,I would expect the build to fail after adding the apt-get install texinfo but it doesn't.,Why do you think the build should fail? If you look at the travis output you'll see that makeinfo is found and the documentation is built. There is a warning about one heading but that is just a warning no error.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,960,2020-05-29T12:48:45Z,2020-06-12T09:57:35Z,2020-06-12T09:57:43Z,MERGED,True,3,3,2,https://github.com/bertfrees,Build documentation on Travis,3,['build system'],https://github.com/liblouis/liblouis/pull/960,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/960#issuecomment-635965140,I would expect the build to fail after adding the apt-get install texinfo but it doesn't.,"It does say ""checking for makeinfo version >= 5... yes"" now (it didn't used to do), and it says ""Making all in doc"", but there is no error. There is a warning though. Maybe the latest version of makeinfo is just more forgiving than my version.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,960,2020-05-29T12:48:45Z,2020-06-12T09:57:35Z,2020-06-12T09:57:43Z,MERGED,True,3,3,2,https://github.com/bertfrees,Build documentation on Travis,3,['build system'],https://github.com/liblouis/liblouis/pull/960,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/960#issuecomment-635973630,I would expect the build to fail after adding the apt-get install texinfo but it doesn't.,"ah, I get it your version gives an error. Didn't realize that as I have the new version and it always worked for me.
But if the new version is happy then all is well :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,960,2020-05-29T12:48:45Z,2020-06-12T09:57:35Z,2020-06-12T09:57:43Z,MERGED,True,3,3,2,https://github.com/bertfrees,Build documentation on Travis,3,['build system'],https://github.com/liblouis/liblouis/pull/960,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/960#issuecomment-635983134,I would expect the build to fail after adding the apt-get install texinfo but it doesn't.,Well I still pushed the fix to make the warning go away.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,962,2020-05-31T16:43:15Z,2020-06-02T11:41:31Z,2020-06-02T11:41:31Z,CLOSED,False,147,143,2,https://github.com/aaclause,fr-bfu-g2.ctb: disables problematic rules + fixes 2 warnings,4,['tables'],https://github.com/liblouis/liblouis/pull/962,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/962,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,962,2020-05-31T16:43:15Z,2020-06-02T11:41:31Z,2020-06-02T11:41:31Z,CLOSED,False,147,143,2,https://github.com/aaclause,fr-bfu-g2.ctb: disables problematic rules + fixes 2 warnings,4,['tables'],https://github.com/liblouis/liblouis/pull/962,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/962#issuecomment-636499525,,"I made several tests with the following script (provide one or more files in arguments):
Script
#!/usr/bin/env python3
import louis
import sys
from threading import Thread


def threaded(*args):
	fn, kwargs = args
	if not isinstance(kwargs, dict): raise TypeError(""Wrong type"")
	fn(**kwargs)
if len(sys.argv) < 2:
	print(""Please provide at least one file"")
	sys.exit()

for fp in sys.argv[1:]:
	f = open(fp, ""r"", encoding=""UTF-8"")
	for iline, line in enumerate(f, 1):
		i = 0
		while i < len(line):
			cursorPos = i
			kwargs = {
				""tableList"": [""fr-bfu-g2.ctb""],
				""mode"": louis.dotsIO|louis.compbrlAtCursor,
				""inbuf"": line,
				""cursorPos"": cursorPos
			}
			thread = Thread(target = threaded, args = (louis.translate, kwargs))
			thread.start()
			thread.join(0.5)
			if thread.is_alive():
				print(f""! {fp} -> error at line {iline}, col {cursorPos+1}:\n{kwargs['inbuf'].strip()}\n! Blocked"", end=""!"", flush=True)
				sys.exit(0)
			i += 1
	f.close()
	print(f""{fp} -> done ({iline}, {i})"")

 
Before
$ cat fail.txt
tests:
: a.b
a 0://
a 0.doc
a.docx
a 9.txt
https://github.com/

$ ./lou_checkfreeze fail.txt a.txt b.txt
/usr/local/share/liblouis/tables/fr-bfu-g2.ctb:61: warning: Invalid attribute name: must be a digit between 0 and 7 or a word containing only letters and digits
/usr/local/share/liblouis/tables/fr-bfu-g2.ctb:63: warning: Invalid attribute name: must be a digit between 0 and 7 or a word containing only letters and digits
2 warnings issued
! fail.txt -> error at line 2, col 2:
: a.b
! Blocked!

After
$ ./lou_checkfreeze fail.txt a.txt b.txt
fail.txt -> done (8, 1)
a.txt -> done (800, 14)
b.txt -> done (1250, 48)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,962,2020-05-31T16:43:15Z,2020-06-02T11:41:31Z,2020-06-02T11:41:31Z,CLOSED,False,147,143,2,https://github.com/aaclause,fr-bfu-g2.ctb: disables problematic rules + fixes 2 warnings,4,['tables'],https://github.com/liblouis/liblouis/pull/962,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/962#issuecomment-637010606,,Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,962,2020-05-31T16:43:15Z,2020-06-02T11:41:31Z,2020-06-02T11:41:31Z,CLOSED,False,147,143,2,https://github.com/aaclause,fr-bfu-g2.ctb: disables problematic rules + fixes 2 warnings,4,['tables'],https://github.com/liblouis/liblouis/pull/962,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/962#issuecomment-637421905,,"I'm OK with your choice but I do not like the change of the attribute name.

It's not a bug. I was actually happy that Andre included that change (creating a new PR for it seems unneeded because it's such a minor thing).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,962,2020-05-31T16:43:15Z,2020-06-02T11:41:31Z,2020-06-02T11:41:31Z,CLOSED,False,147,143,2,https://github.com/aaclause,fr-bfu-g2.ctb: disables problematic rules + fixes 2 warnings,4,['tables'],https://github.com/liblouis/liblouis/pull/962,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/962#issuecomment-637484051,,Merged in 6d87402.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,965,2020-06-02T11:50:08Z,2020-08-28T14:54:33Z,2020-08-28T14:54:34Z,CLOSED,False,15,3,2,https://github.com/egli,Check faulty attribute name,2,[],https://github.com/liblouis/liblouis/pull/965,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/965,"This PR

fixes the error message for an invalid attribute name and
adds a test containing an invalid attribute name

The test with the invalid attribute name isn't so nice as the error message is not properly caught by the test framework. It fails later on and adds some garbage to the test-suite.log. TBH I'm not sure if we should use this test as is.","This PR

fixes the error message for an invalid attribute name and
adds a test containing an invalid attribute name

The test with the invalid attribute name isn't so nice as the error message is not properly caught by the test framework. It fails later on and adds some garbage to the test-suite.log. TBH I'm not sure if we should use this test as is.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,965,2020-06-02T11:50:08Z,2020-08-28T14:54:33Z,2020-08-28T14:54:34Z,CLOSED,False,15,3,2,https://github.com/egli,Check faulty attribute name,2,[],https://github.com/liblouis/liblouis/pull/965,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/965#issuecomment-637547457,"This PR

fixes the error message for an invalid attribute name and
adds a test containing an invalid attribute name

The test with the invalid attribute name isn't so nice as the error message is not properly caught by the test framework. It fails later on and adds some garbage to the test-suite.log. TBH I'm not sure if we should use this test as is.","Hm, weird the tests pass localy",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,965,2020-06-02T11:50:08Z,2020-08-28T14:54:33Z,2020-08-28T14:54:34Z,CLOSED,False,15,3,2,https://github.com/egli,Check faulty attribute name,2,[],https://github.com/liblouis/liblouis/pull/965,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/965#issuecomment-637551883,"This PR

fixes the error message for an invalid attribute name and
adds a test containing an invalid attribute name

The test with the invalid attribute name isn't so nice as the error message is not properly caught by the test framework. It fails later on and adds some garbage to the test-suite.log. TBH I'm not sure if we should use this test as is.","Hmm, error makes sense though.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,965,2020-06-02T11:50:08Z,2020-08-28T14:54:33Z,2020-08-28T14:54:34Z,CLOSED,False,15,3,2,https://github.com/egli,Check faulty attribute name,2,[],https://github.com/liblouis/liblouis/pull/965,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/965#issuecomment-637559516,"This PR

fixes the error message for an invalid attribute name and
adds a test containing an invalid attribute name

The test with the invalid attribute name isn't so nice as the error message is not properly caught by the test framework. It fails later on and adds some garbage to the test-suite.log. TBH I'm not sure if we should use this test as is.","OK, maybe we can't use the yaml test but the fixed error message should go in the release",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,965,2020-06-02T11:50:08Z,2020-08-28T14:54:33Z,2020-08-28T14:54:34Z,CLOSED,False,15,3,2,https://github.com/egli,Check faulty attribute name,2,[],https://github.com/liblouis/liblouis/pull/965,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/965#issuecomment-679014783,"This PR

fixes the error message for an invalid attribute name and
adds a test containing an invalid attribute name

The test with the invalid attribute name isn't so nice as the error message is not properly caught by the test framework. It fails later on and adds some garbage to the test-suite.log. TBH I'm not sure if we should use this test as is.",See also #875,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,965,2020-06-02T11:50:08Z,2020-08-28T14:54:33Z,2020-08-28T14:54:34Z,CLOSED,False,15,3,2,https://github.com/egli,Check faulty attribute name,2,[],https://github.com/liblouis/liblouis/pull/965,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/965#issuecomment-682565075,"This PR

fixes the error message for an invalid attribute name and
adds a test containing an invalid attribute name

The test with the invalid attribute name isn't so nice as the error message is not properly caught by the test framework. It fails later on and adds some garbage to the test-suite.log. TBH I'm not sure if we should use this test as is.",See #988 for a simple c-based test,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,965,2020-06-02T11:50:08Z,2020-08-28T14:54:33Z,2020-08-28T14:54:34Z,CLOSED,False,15,3,2,https://github.com/egli,Check faulty attribute name,2,[],https://github.com/liblouis/liblouis/pull/965,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/965#issuecomment-682659836,"This PR

fixes the error message for an invalid attribute name and
adds a test containing an invalid attribute name

The test with the invalid attribute name isn't so nice as the error message is not properly caught by the test framework. It fails later on and adds some garbage to the test-suite.log. TBH I'm not sure if we should use this test as is.",Superseded by  #985 and #988,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,970,2020-06-14T18:01:53Z,,2022-03-28T17:08:04Z,OPEN,False,6623,0,6,https://github.com/BueVest,English grade 3,42,"['tables', 'needs metadata', 'wip', 'needs news']",https://github.com/liblouis/liblouis/pull/970,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/970,Work in progress.,Work in progress.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,970,2020-06-14T18:01:53Z,,2022-03-28T17:08:04Z,OPEN,False,6623,0,6,https://github.com/BueVest,English grade 3,42,"['tables', 'needs metadata', 'wip', 'needs news']",https://github.com/liblouis/liblouis/pull/970,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/970#issuecomment-779116773,Work in progress.,@BueVest is this ready for review?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,970,2020-06-14T18:01:53Z,,2022-03-28T17:08:04Z,OPEN,False,6623,0,6,https://github.com/BueVest,English grade 3,42,"['tables', 'needs metadata', 'wip', 'needs news']",https://github.com/liblouis/liblouis/pull/970,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/970#issuecomment-791392612,Work in progress.,"No, sorry, but when I started actually using the table, I found out that there is still some way to go with the patterns for vocal omission.

I will try to get some volunteers to help testing and then I hope it will be ready in June.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/975,"To fix and test issues in #974
Also to try to get back translation working better.","To fix and test issues in #974
Also to try to get back translation working better.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/975#issuecomment-655404485,"To fix and test issues in #974
Also to try to get back translation working better.","I agree with Christian, and a copyright line in the YAML test would also be nice.
Also, because the table is not a top-level table, but included in other tables, it is a good idea to run your tests on all those tables that include this one. And preferably use the query syntax (rather than pointing to the table file directly).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/JakeKyle,3,https://github.com/liblouis/liblouis/pull/975#issuecomment-655441662,"To fix and test issues in #974
Also to try to get back translation working better.","@bertfrees
As a general principal do you think a long list of words is a valuable test? I could generate such a list - much longer than this - fairly simply whereas writing specific tests to test each rule will be a lot more time consuming especially as I too don't know the language or have an easy way of typing it in.
I guess I am asking your advice on the best way to focus my efforts to give the most value given my limitations.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/975#issuecomment-655448206,"To fix and test issues in #974
Also to try to get back translation working better.","Yes, a long list of words is definitely valuable. We already have a lot of such ""dictionary tests"". The longer those lists the better (with the limitation of course that somebody should be ably to verify it, or in case it is not verified, somebody should be able to assess whether a table change has a positive or negative effect). Ideally there should be a combination of dictionary tests and tests that target specific braille rules. The latter kind should ideally have some explanation, so that the test file reads nicely. Dictionary tests do not need any explanation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/JakeKyle,5,https://github.com/liblouis/liblouis/pull/975#issuecomment-658667796,"To fix and test issues in #974
Also to try to get back translation working better.","@bertfrees
I have just replaced my initial yaml test on malayalam.cti with a much more comprehensive one on top-level ml.tbl table using query syntax. Hopefully this is better?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/975#issuecomment-658707534,"To fix and test issues in #974
Also to try to get back translation working better.","Brilliant, thanks a lot.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/975#issuecomment-665166785,"To fix and test issues in #974
Also to try to get back translation working better.","@JakeKyle One final request: can you add a short summary of the changes in the NEWS file? Also will you add that copyright line in malayalam.cti?
We'll wait a bit for Dipendra to reply before merging this. Have you heard back from him?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/JakeKyle,8,https://github.com/liblouis/liblouis/pull/975#issuecomment-667149814,"To fix and test issues in #974
Also to try to get back translation working better.","@bertfrees
I have developed table and test further so that all the tests pass in both directions where possible.
I have added copyright to malayalam.cti - is this OK wording?
I am emailing Dipendra again plus other email addresses on original table (I didn't email them all previously)
I made a bit of a mess up when committing (I'm not an expert on Github) - I didn't mean to change anything on the Makefiles so let me know if I need to rectify something here.
I will write something for NEWS soon.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/975#issuecomment-671309099,"To fix and test issues in #974
Also to try to get back translation working better.","Thank you. Don't worry about the git mess, I'll fix it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/975#issuecomment-679005367,"To fix and test issues in #974
Also to try to get back translation working better.",Nothing from Dipendra?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/JakeKyle,11,https://github.com/liblouis/liblouis/pull/975#issuecomment-679038304,"To fix and test issues in #974
Also to try to get back translation working better.",@bertfrees No nothing - I've emailed him twice and on 2 different addresses.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,975,2020-07-07T14:35:28Z,2020-08-25T13:09:43Z,2020-08-25T13:09:44Z,MERGED,True,4034,33,5,https://github.com/JakeKyle,Tables/malayalam,4,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/975,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/975#issuecomment-679040944,"To fix and test issues in #974
Also to try to get back translation working better.",OK then we'll just proceed with this.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,976,2020-07-21T08:31:56Z,2020-08-25T14:14:45Z,2020-08-25T14:14:45Z,MERGED,True,26,10,3,https://github.com/BAUM-Engineering,Fixes for Hebrew 6 dot table,4,['tables'],https://github.com/liblouis/liblouis/pull/976,https://github.com/BAUM-Engineering,1,https://github.com/liblouis/liblouis/pull/976,"Hello contributors!
Mr. Erez Kugler has reported to us a few other problems regarding the Hebrew 6 dot table (he-IL.utb).
The first problem was caused by wrong opcodes, braille patterns and the missing numsign for the digits.
The second issue was about wrong character converted regarding the following letters:
letter     \xfb44   1234       # HEBREW LETTER PE WITH DAGESH
letter     \xfb3b  13           # HEBREW LETTER KAF WITH DAGESH
letter     \xfb31   12           # HEBREW LETTER BET WITH DAGESH
letter     \xfb2b  156         # HEBREW LETTER SHIN WITH SIN DOT
The solution for both of the problems were included in this pull request.
Best regards,
BAUM Engineering","Hello contributors!
Mr. Erez Kugler has reported to us a few other problems regarding the Hebrew 6 dot table (he-IL.utb).
The first problem was caused by wrong opcodes, braille patterns and the missing numsign for the digits.
The second issue was about wrong character converted regarding the following letters:
letter     \xfb44   1234       # HEBREW LETTER PE WITH DAGESH
letter     \xfb3b  13           # HEBREW LETTER KAF WITH DAGESH
letter     \xfb31   12           # HEBREW LETTER BET WITH DAGESH
letter     \xfb2b  156         # HEBREW LETTER SHIN WITH SIN DOT
The solution for both of the problems were included in this pull request.
Best regards,
BAUM Engineering",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,976,2020-07-21T08:31:56Z,2020-08-25T14:14:45Z,2020-08-25T14:14:45Z,MERGED,True,26,10,3,https://github.com/BAUM-Engineering,Fixes for Hebrew 6 dot table,4,['tables'],https://github.com/liblouis/liblouis/pull/976,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/976#issuecomment-663867605,"Hello contributors!
Mr. Erez Kugler has reported to us a few other problems regarding the Hebrew 6 dot table (he-IL.utb).
The first problem was caused by wrong opcodes, braille patterns and the missing numsign for the digits.
The second issue was about wrong character converted regarding the following letters:
letter     \xfb44   1234       # HEBREW LETTER PE WITH DAGESH
letter     \xfb3b  13           # HEBREW LETTER KAF WITH DAGESH
letter     \xfb31   12           # HEBREW LETTER BET WITH DAGESH
letter     \xfb2b  156         # HEBREW LETTER SHIN WITH SIN DOT
The solution for both of the problems were included in this pull request.
Best regards,
BAUM Engineering",Hi @BAUM-Engineering. Thank you! Would it be possible to add some tests that show which issues have been fixed please?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,976,2020-07-21T08:31:56Z,2020-08-25T14:14:45Z,2020-08-25T14:14:45Z,MERGED,True,26,10,3,https://github.com/BAUM-Engineering,Fixes for Hebrew 6 dot table,4,['tables'],https://github.com/liblouis/liblouis/pull/976,https://github.com/BAUM-Engineering,3,https://github.com/liblouis/liblouis/pull/976#issuecomment-671291520,"Hello contributors!
Mr. Erez Kugler has reported to us a few other problems regarding the Hebrew 6 dot table (he-IL.utb).
The first problem was caused by wrong opcodes, braille patterns and the missing numsign for the digits.
The second issue was about wrong character converted regarding the following letters:
letter     \xfb44   1234       # HEBREW LETTER PE WITH DAGESH
letter     \xfb3b  13           # HEBREW LETTER KAF WITH DAGESH
letter     \xfb31   12           # HEBREW LETTER BET WITH DAGESH
letter     \xfb2b  156         # HEBREW LETTER SHIN WITH SIN DOT
The solution for both of the problems were included in this pull request.
Best regards,
BAUM Engineering","Hello again @bertfrees ! As requested, I have added the yaml test for this issue but unfortunately some errors were raised. The first one might have been with the lack of new line at the end of the document. But now I do not know why Travis refuses to compile. Do you have any idea what might be the problem?
Thank you!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,976,2020-07-21T08:31:56Z,2020-08-25T14:14:45Z,2020-08-25T14:14:45Z,MERGED,True,26,10,3,https://github.com/BAUM-Engineering,Fixes for Hebrew 6 dot table,4,['tables'],https://github.com/liblouis/liblouis/pull/976,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/976#issuecomment-671325910,"Hello contributors!
Mr. Erez Kugler has reported to us a few other problems regarding the Hebrew 6 dot table (he-IL.utb).
The first problem was caused by wrong opcodes, braille patterns and the missing numsign for the digits.
The second issue was about wrong character converted regarding the following letters:
letter     \xfb44   1234       # HEBREW LETTER PE WITH DAGESH
letter     \xfb3b  13           # HEBREW LETTER KAF WITH DAGESH
letter     \xfb31   12           # HEBREW LETTER BET WITH DAGESH
letter     \xfb2b  156         # HEBREW LETTER SHIN WITH SIN DOT
The solution for both of the problems were included in this pull request.
Best regards,
BAUM Engineering","Thanks for the tests. I have moved them to the he-IL.yaml file. How the translation used to be isn't important so I've left out that part.
One final thing: can I ask you to explain the change briefly in the NEWS file?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,976,2020-07-21T08:31:56Z,2020-08-25T14:14:45Z,2020-08-25T14:14:45Z,MERGED,True,26,10,3,https://github.com/BAUM-Engineering,Fixes for Hebrew 6 dot table,4,['tables'],https://github.com/liblouis/liblouis/pull/976,https://github.com/BAUM-Engineering,5,https://github.com/liblouis/liblouis/pull/976#issuecomment-671338795,"Hello contributors!
Mr. Erez Kugler has reported to us a few other problems regarding the Hebrew 6 dot table (he-IL.utb).
The first problem was caused by wrong opcodes, braille patterns and the missing numsign for the digits.
The second issue was about wrong character converted regarding the following letters:
letter     \xfb44   1234       # HEBREW LETTER PE WITH DAGESH
letter     \xfb3b  13           # HEBREW LETTER KAF WITH DAGESH
letter     \xfb31   12           # HEBREW LETTER BET WITH DAGESH
letter     \xfb2b  156         # HEBREW LETTER SHIN WITH SIN DOT
The solution for both of the problems were included in this pull request.
Best regards,
BAUM Engineering",Thank you for your help. I have added some information regarding the fixes into the NEWS file.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,976,2020-07-21T08:31:56Z,2020-08-25T14:14:45Z,2020-08-25T14:14:45Z,MERGED,True,26,10,3,https://github.com/BAUM-Engineering,Fixes for Hebrew 6 dot table,4,['tables'],https://github.com/liblouis/liblouis/pull/976,https://github.com/BAUM-Engineering,6,https://github.com/liblouis/liblouis/pull/976#issuecomment-671756337,"Hello contributors!
Mr. Erez Kugler has reported to us a few other problems regarding the Hebrew 6 dot table (he-IL.utb).
The first problem was caused by wrong opcodes, braille patterns and the missing numsign for the digits.
The second issue was about wrong character converted regarding the following letters:
letter     \xfb44   1234       # HEBREW LETTER PE WITH DAGESH
letter     \xfb3b  13           # HEBREW LETTER KAF WITH DAGESH
letter     \xfb31   12           # HEBREW LETTER BET WITH DAGESH
letter     \xfb2b  156         # HEBREW LETTER SHIN WITH SIN DOT
The solution for both of the problems were included in this pull request.
Best regards,
BAUM Engineering","@bertfrees , I have rephrased the information added in the NEWS file, but I saw that you added the ""needs fixup"" label. Is there anything else I can do?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,976,2020-07-21T08:31:56Z,2020-08-25T14:14:45Z,2020-08-25T14:14:45Z,MERGED,True,26,10,3,https://github.com/BAUM-Engineering,Fixes for Hebrew 6 dot table,4,['tables'],https://github.com/liblouis/liblouis/pull/976,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/976#issuecomment-671783283,"Hello contributors!
Mr. Erez Kugler has reported to us a few other problems regarding the Hebrew 6 dot table (he-IL.utb).
The first problem was caused by wrong opcodes, braille patterns and the missing numsign for the digits.
The second issue was about wrong character converted regarding the following letters:
letter     \xfb44   1234       # HEBREW LETTER PE WITH DAGESH
letter     \xfb3b  13           # HEBREW LETTER KAF WITH DAGESH
letter     \xfb31   12           # HEBREW LETTER BET WITH DAGESH
letter     \xfb2b  156         # HEBREW LETTER SHIN WITH SIN DOT
The solution for both of the problems were included in this pull request.
Best regards,
BAUM Engineering","Thanks! No, the label is just something for me. There is nothing else you need to do.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,977,2020-07-28T17:02:49Z,2020-08-25T13:30:01Z,2020-08-25T13:30:11Z,MERGED,True,286,77,3,https://github.com/bertfrees,Improvements to Malay table and test by Herbert Koh,1,['tables'],https://github.com/liblouis/liblouis/pull/977,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/977,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,978,2020-08-14T13:26:49Z,2020-08-18T08:46:16Z,2020-08-24T14:26:46Z,CLOSED,False,18,0,1,https://github.com/sanjaymsh,Added support for ppc64le build on travis-ci,6,['build system'],https://github.com/liblouis/liblouis/pull/978,https://github.com/sanjaymsh,1,https://github.com/liblouis/liblouis/pull/978,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/179737691 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!","Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/179737691 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,978,2020-08-14T13:26:49Z,2020-08-18T08:46:16Z,2020-08-24T14:26:46Z,CLOSED,False,18,0,1,https://github.com/sanjaymsh,Added support for ppc64le build on travis-ci,6,['build system'],https://github.com/liblouis/liblouis/pull/978,https://github.com/sanjaymsh,2,https://github.com/liblouis/liblouis/pull/978#issuecomment-675348149,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/179737691 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!",Closing this pull request as it has some bugs to fix to.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,978,2020-08-14T13:26:49Z,2020-08-18T08:46:16Z,2020-08-24T14:26:46Z,CLOSED,False,18,0,1,https://github.com/sanjaymsh,Added support for ppc64le build on travis-ci,6,['build system'],https://github.com/liblouis/liblouis/pull/978,https://github.com/sanjaymsh,3,https://github.com/liblouis/liblouis/pull/978#issuecomment-675349378,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/179737691 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!",I will raise another PR soon for this change.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,980,2020-08-21T14:28:55Z,2020-08-25T12:39:36Z,2020-08-25T12:39:46Z,MERGED,True,90,61,3,https://github.com/bertfrees,Improvements to Afrikaans thanks to Christo de Klerk,1,['tables'],https://github.com/liblouis/liblouis/pull/980,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/980,"Fixed correct handling of the ŉ character (0x149)
Prevent contraction of

""self"" in ""selfoon"", ""selfone"",
""ui"" in words and names like ""quisling"", ""quidproquo"", ""quiëtis"", ""Quinten"", ""Quintus"",
""er"" in words like ""konstituering"".","Fixed correct handling of the ŉ character (0x149)
Prevent contraction of

""self"" in ""selfoon"", ""selfone"",
""ui"" in words and names like ""quisling"", ""quidproquo"", ""quiëtis"", ""Quinten"", ""Quintus"",
""er"" in words like ""konstituering"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,980,2020-08-21T14:28:55Z,2020-08-25T12:39:36Z,2020-08-25T12:39:46Z,MERGED,True,90,61,3,https://github.com/bertfrees,Improvements to Afrikaans thanks to Christo de Klerk,1,['tables'],https://github.com/liblouis/liblouis/pull/980,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/980#issuecomment-678320883,"Fixed correct handling of the ŉ character (0x149)
Prevent contraction of

""self"" in ""selfoon"", ""selfone"",
""ui"" in words and names like ""quisling"", ""quidproquo"", ""quiëtis"", ""Quinten"", ""Quintus"",
""er"" in words like ""konstituering"".",Hold off with merging for just a moment. Checking something with Christo...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,980,2020-08-21T14:28:55Z,2020-08-25T12:39:36Z,2020-08-25T12:39:46Z,MERGED,True,90,61,3,https://github.com/bertfrees,Improvements to Afrikaans thanks to Christo de Klerk,1,['tables'],https://github.com/liblouis/liblouis/pull/980,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/980#issuecomment-678331107,"Fixed correct handling of the ŉ character (0x149)
Prevent contraction of

""self"" in ""selfoon"", ""selfone"",
""ui"" in words and names like ""quisling"", ""quidproquo"", ""quiëtis"", ""Quinten"", ""Quintus"",
""er"" in words like ""konstituering"".",OK it's fine.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/983,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary","Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/983#issuecomment-678818401,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary","@BueVest Nice, thank you.
Apparently litdigits6Dots_backward.yaml needs to be adapted. The test suite fails with this error:

lou_checkyaml:./braille-specs/litdigits6Dots_backward.yaml:74: Unexpected Pass",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/983#issuecomment-678822834,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary","Hmm, wonder what that is. I don’t think I changed anything to affect that. I’ll have a look at it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/BueVest,4,https://github.com/liblouis/liblouis/pull/983#issuecomment-678824167,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary","Ok, I wasn’t aware of this test. Fixed now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/983#issuecomment-678990783,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary",Does it make sense to ask @xtstoll to have a look at the code changes (especially the test)?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/BueVest,6,https://github.com/liblouis/liblouis/pull/983#issuecomment-679087906,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary","Yes, that would make sense, especially since the tests reflect the current state of the table. So, they might indicate to someone who is more fluent in Portuguese than me if something else needs fixing. I think Cristina is getting these messages, since you mentioned her.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/983#issuecomment-680073490,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary","I cleaned up the branch a bit, improved the NEWS entry, and rebased on master.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/983#issuecomment-681854472,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary","@xtstoll Cristina, would you mind verifying this test file that Bue made please? That is, if you can make sense of it. Just to double-check that Bue understood everything correctly. Thanks.
https://github.com/liblouis/liblouis/blob/96b58487e3641f2c7e8e873d331daa4c842c7d99/tests/braille-specs/pt-g1.yaml",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,983,2020-08-23T12:57:45Z,2020-08-31T09:51:48Z,2020-10-14T20:44:24Z,MERGED,True,229,12,4,https://github.com/BueVest,"Portuguese characters o, ç, ó and õ",5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/983,https://github.com/xtstoll,9,https://github.com/liblouis/liblouis/pull/983#issuecomment-684116824,"Fixes #982  and #757 . Adds yaml tests to pt-g1. Marks pt-g1.ctb as a table for both directions.




IssueHunt Summary",@BueVest - sorry for the delay. It was a busy week. I looked over your 5 commits. All good! Thanks again!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,984,2020-08-25T14:30:36Z,2020-08-26T11:45:08Z,2020-08-26T14:31:22Z,MERGED,True,19,0,7,https://github.com/bertfrees,"Add ""unicode-form"" metadata field to Norwegian tables",1,[],https://github.com/liblouis/liblouis/pull/984,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/984,"Input of Norwegian tables is expected to be normalized to NFC (fully composed).
Fixes #923","Input of Norwegian tables is expected to be normalized to NFC (fully composed).
Fixes #923",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,985,2020-08-26T09:55:19Z,2020-08-26T13:40:49Z,2020-08-26T13:40:53Z,MERGED,True,2,3,1,https://github.com/egli,Fix the warning given for invalid attribute names,2,[],https://github.com/liblouis/liblouis/pull/985,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/985,"It should contain only letters and no digits
This is the uncontested part of #965 that can go in","It should contain only letters and no digits
This is the uncontested part of #965 that can go in",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,986,2020-08-27T07:20:17Z,2020-08-27T09:53:45Z,2020-08-27T09:53:45Z,MERGED,True,10,0,3,https://github.com/BueVest,Bullets for en-US,3,[],https://github.com/liblouis/liblouis/pull/986,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/986,This should fix #42 .,This should fix #42 .,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,986,2020-08-27T07:20:17Z,2020-08-27T09:53:45Z,2020-08-27T09:53:45Z,MERGED,True,10,0,3,https://github.com/BueVest,Bullets for en-US,3,[],https://github.com/liblouis/liblouis/pull/986,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/986#issuecomment-681689171,This should fix #42 .,@BueVest thanks for the PR. Would you mind writing a little NEWS entry?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,986,2020-08-27T07:20:17Z,2020-08-27T09:53:45Z,2020-08-27T09:53:45Z,MERGED,True,10,0,3,https://github.com/BueVest,Bullets for en-US,3,[],https://github.com/liblouis/liblouis/pull/986,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/986#issuecomment-681734862,This should fix #42 .,Of course not. Just thought it was too insignificant to mention.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/IbraamNasif,1,https://github.com/liblouis/liblouis/pull/987,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/IbraamNasif,2,https://github.com/liblouis/liblouis/pull/987#issuecomment-682663901,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","I tested swap function very good and in all tests success, now.
I could remove xfail if needed.
what do you mean write rule in table
I understood make it for any future liblouis updates on context upcode or similar",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/IbraamNasif,3,https://github.com/liblouis/liblouis/pull/987#issuecomment-682683091,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","I think it's multi language table
so will have conflict to backward Braille dots into which language
now for example
ا = a = ⲁ Braille 1

if this not leading to conflict I don't mind
also, main goal to let blind people able to read Coptic",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/IbraamNasif,4,https://github.com/liblouis/liblouis/pull/987#issuecomment-682695118,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","as my previous reply
table set to be forward translation
  at least Coptic should have: Coptic, Arabic, and English

  if there's no issues on table now, could we approve it as forward translation and try to handle this next release?

  waiting your comments, to push once if possible
    god bless",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/987#issuecomment-682704430,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","Hi @IbraamNasif sorry I just went in directly and ""fixed"" what I thought had to be done: This was mostly integrating with the build system and the meta data. I hope I did it correctly",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/987#issuecomment-682713280,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","@IbraamNasif very good first PR!
Can I ask you if there is a reference document somewhere that describes coptic braille?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/IbraamNasif,7,https://github.com/liblouis/liblouis/pull/987#issuecomment-683135223,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","yes, many thanks for your efforts",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/IbraamNasif,8,https://github.com/liblouis/liblouis/pull/987#issuecomment-683214560,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","thanks Christian & Bert for valuable notes
really its first pr, and first time use git via screen-reader.
about reference document for Coptic Braille:
Coptic language is based on the Greek alphabet + eight more letters derived from Ancient Egyptian Demotic script. The whole alphabet is used as the Coptic/Egyptian alphabet.
In Braille, we used the standard form of the Greek letters in addition to eight newly formed letters specific to the extra eight Coptic letters.
When we started writing the first Coptic transcriber to emboss Coptic Braille in 2009 we searched but found no authentic documents. Coptic alphabet was merely handed down from one generation of Church's cantors to the next. Most probably, it originated during the 1930's or before it as some Canters said ...   At the time, a cantor would write down whatever he needed manually. But there was no establishment, ecclesiastical or academic, that printed Coptic in Braille.
FYI: The Bishopric of Youth, under the auspices of His Grace, Bishop Mousa, of the Coptic Orthodox Church, is an official Coptic organization.
dears:  for backward translation, I could handle it later if it possible, just I'm a little confusing but will try it practically, as I thought that 3 languages will make conflict, but if it depend in backward on first language in table will be great and helpful ...
just my main goal as mentioned today in another reply; let people able to use Coptic in church's liturgy.
hopefully you approve it for this release if there's no technical issues, & will improve it in Later release.
many thanks
@egli
@bertfrees",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/987#issuecomment-683678839,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli","Added a NEWS entry, added the table to the Makefile in tables and merged",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,987,2020-08-28T03:01:28Z,2020-08-31T09:43:33Z,2020-09-05T11:30:07Z,MERGED,True,340,125,5,https://github.com/IbraamNasif,Coptic Table,6,"['tables', 'needs doc']",https://github.com/liblouis/liblouis/pull/987,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/987#issuecomment-683679057,"this is Coptic Egypt computer braille table and Yaml test file.
i said Coptic multi language as we plan to add many languages as we can to be used with Coptic and Arabic which mainly used in Coptic Churches.
thanks
@bertfrees
@egli",Should be in the upcoming release. Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,988,2020-08-28T13:19:38Z,2020-08-28T14:52:38Z,2020-08-31T08:54:48Z,MERGED,True,61,1,7,https://github.com/egli,Add a test for the handling of invalid attribute names,1,[],https://github.com/liblouis/liblouis/pull/988,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/988,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,989,2020-08-28T13:27:16Z,2020-08-31T08:54:12Z,2020-08-31T08:54:40Z,MERGED,True,13,7,1,https://github.com/egli,Make the targets for building windows more idiomatic,1,[],https://github.com/liblouis/liblouis/pull/989,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/989,for example add a clean target for them,for example add a clean target for them,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,996,2020-09-10T23:40:57Z,2021-04-19T09:00:08Z,2021-04-19T09:00:08Z,CLOSED,False,14,0,2,https://github.com/sanjaymsh,Added support for ppc64le build on Travis-ci,2,"['waiting', 'build system']",https://github.com/liblouis/liblouis/pull/996,https://github.com/sanjaymsh,1,https://github.com/liblouis/liblouis/pull/996,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/183814760 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!","Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/183814760 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,996,2020-09-10T23:40:57Z,2021-04-19T09:00:08Z,2021-04-19T09:00:08Z,CLOSED,False,14,0,2,https://github.com/sanjaymsh,Added support for ppc64le build on Travis-ci,2,"['waiting', 'build system']",https://github.com/liblouis/liblouis/pull/996,https://github.com/sanjaymsh,2,https://github.com/liblouis/liblouis/pull/996#issuecomment-690791892,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/183814760 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!","@Siddhesh-Ghadi , @seth-priya , @gerrith3 Please review this PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,996,2020-09-10T23:40:57Z,2021-04-19T09:00:08Z,2021-04-19T09:00:08Z,CLOSED,False,14,0,2,https://github.com/sanjaymsh,Added support for ppc64le build on Travis-ci,2,"['waiting', 'build system']",https://github.com/liblouis/liblouis/pull/996,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/996#issuecomment-779084170,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/183814760 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!","@sanjaymsh sorry to say, but we will be dropping support for travis as they no longer provide free CI for open source projects.
Would it be possible to migrate your build to github actions?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,996,2020-09-10T23:40:57Z,2021-04-19T09:00:08Z,2021-04-19T09:00:08Z,CLOSED,False,14,0,2,https://github.com/sanjaymsh,Added support for ppc64le build on Travis-ci,2,"['waiting', 'build system']",https://github.com/liblouis/liblouis/pull/996,https://github.com/sanjaymsh,4,https://github.com/liblouis/liblouis/pull/996#issuecomment-779087564,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/183814760 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!","@egli currently there is no support for GH.
Thanks!!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,996,2020-09-10T23:40:57Z,2021-04-19T09:00:08Z,2021-04-19T09:00:08Z,CLOSED,False,14,0,2,https://github.com/sanjaymsh,Added support for ppc64le build on Travis-ci,2,"['waiting', 'build system']",https://github.com/liblouis/liblouis/pull/996,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/996#issuecomment-779136135,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/183814760 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!",@sanjaymsh As far as I know under github you can provide your own runner to run the tests. Maybe you could provide a runner that runs the test suite under power pc?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,996,2020-09-10T23:40:57Z,2021-04-19T09:00:08Z,2021-04-19T09:00:08Z,CLOSED,False,14,0,2,https://github.com/sanjaymsh,Added support for ppc64le build on Travis-ci,2,"['waiting', 'build system']",https://github.com/liblouis/liblouis/pull/996,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/996#issuecomment-822300810,"Hi,
I have added support for ppc64le build on travis-ci in the branch . The travis-ci build log can be tracked on the link :https://travis-ci.com/github/sanjay-cpu/liblouis/builds/183814760 . I believe it is ready for the final review and merge.
Please have a look on it and if everything looks fine for you then please approve it for merge.
Thanks !!",Closing as we dropped support for Travis,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1000,2020-10-10T08:20:21Z,2020-10-15T09:39:58Z,2020-10-15T09:39:58Z,MERGED,True,122,55,10,https://github.com/martinq,Corrected US English (EBAE) emphasis definitions,5,['tables'],https://github.com/liblouis/liblouis/pull/1000,https://github.com/martinq,1,https://github.com/liblouis/liblouis/pull/1000,"As per prior discussion with @bertfrees and @johnjboyer (see https://www.freelists.org/post/liblouis-liblouisxml/Question-regarding-emphasis-indicator-in-table-enusg1ctb,5) , I am submitting corrections to the US English EBAE emphasis definitions. These changes are imported into tables for US English G1, US English interline, and IN English G1, but might be further applicable to other braille systems based upon EBAE.
Tests have been included, some of which are adapted from the relevant chapter of the EBAE manual: http://www.brailleauthority.org/formats/2011manual-web/formats05.html","As per prior discussion with @bertfrees and @johnjboyer (see https://www.freelists.org/post/liblouis-liblouisxml/Question-regarding-emphasis-indicator-in-table-enusg1ctb,5) , I am submitting corrections to the US English EBAE emphasis definitions. These changes are imported into tables for US English G1, US English interline, and IN English G1, but might be further applicable to other braille systems based upon EBAE.
Tests have been included, some of which are adapted from the relevant chapter of the EBAE manual: http://www.brailleauthority.org/formats/2011manual-web/formats05.html",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1000,2020-10-10T08:20:21Z,2020-10-15T09:39:58Z,2020-10-15T09:39:58Z,MERGED,True,122,55,10,https://github.com/martinq,Corrected US English (EBAE) emphasis definitions,5,['tables'],https://github.com/liblouis/liblouis/pull/1000,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1000#issuecomment-706740660,"As per prior discussion with @bertfrees and @johnjboyer (see https://www.freelists.org/post/liblouis-liblouisxml/Question-regarding-emphasis-indicator-in-table-enusg1ctb,5) , I am submitting corrections to the US English EBAE emphasis definitions. These changes are imported into tables for US English G1, US English interline, and IN English G1, but might be further applicable to other braille systems based upon EBAE.
Tests have been included, some of which are adapted from the relevant chapter of the EBAE manual: http://www.brailleauthority.org/formats/2011manual-web/formats05.html","Excellent!
Only a couple of suggestions:

Let's name the file ""en-us-emphasis.uti"" (because it is an ""include"" file, hence the ""i"", and it's not specific to contracted braille, hence the ""c"" instead of ""u"").
I'd like to avoid creating more test files than necessary. So maybe combine en-us-emphasis_harness.yaml and en-us-g2-end-emphasis_harness.yaml?
We need a sentence in the NEWS file explaining what you changed. I could probably do it but I think you can explain better.
Oh, and can you please add a copyright line with your name (or the name of your organisation) and the year (2020) in all the table and test files that you touched? Possibly with a mentioning of what you did.
And if your name is not in the AUTHORS file yet, you may add it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1000,2020-10-10T08:20:21Z,2020-10-15T09:39:58Z,2020-10-15T09:39:58Z,MERGED,True,122,55,10,https://github.com/martinq,Corrected US English (EBAE) emphasis definitions,5,['tables'],https://github.com/liblouis/liblouis/pull/1000,https://github.com/martinq,3,https://github.com/liblouis/liblouis/pull/1000#issuecomment-707244575,"As per prior discussion with @bertfrees and @johnjboyer (see https://www.freelists.org/post/liblouis-liblouisxml/Question-regarding-emphasis-indicator-in-table-enusg1ctb,5) , I am submitting corrections to the US English EBAE emphasis definitions. These changes are imported into tables for US English G1, US English interline, and IN English G1, but might be further applicable to other braille systems based upon EBAE.
Tests have been included, some of which are adapted from the relevant chapter of the EBAE manual: http://www.brailleauthority.org/formats/2011manual-web/formats05.html","@bertfrees, thanks for the review! I've made the requested changes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1000,2020-10-10T08:20:21Z,2020-10-15T09:39:58Z,2020-10-15T09:39:58Z,MERGED,True,122,55,10,https://github.com/martinq,Corrected US English (EBAE) emphasis definitions,5,['tables'],https://github.com/liblouis/liblouis/pull/1000,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1000#issuecomment-708989831,"As per prior discussion with @bertfrees and @johnjboyer (see https://www.freelists.org/post/liblouis-liblouisxml/Question-regarding-emphasis-indicator-in-table-enusg1ctb,5) , I am submitting corrections to the US English EBAE emphasis definitions. These changes are imported into tables for US English G1, US English interline, and IN English G1, but might be further applicable to other braille systems based upon EBAE.
Tests have been included, some of which are adapted from the relevant chapter of the EBAE manual: http://www.brailleauthority.org/formats/2011manual-web/formats05.html",Looks like the CI actually ran and passed: https://travis-ci.org/github/liblouis/liblouis/builds/735102176,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1000,2020-10-10T08:20:21Z,2020-10-15T09:39:58Z,2020-10-15T09:39:58Z,MERGED,True,122,55,10,https://github.com/martinq,Corrected US English (EBAE) emphasis definitions,5,['tables'],https://github.com/liblouis/liblouis/pull/1000,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1000#issuecomment-708996136,"As per prior discussion with @bertfrees and @johnjboyer (see https://www.freelists.org/post/liblouis-liblouisxml/Question-regarding-emphasis-indicator-in-table-enusg1ctb,5) , I am submitting corrections to the US English EBAE emphasis definitions. These changes are imported into tables for US English G1, US English interline, and IN English G1, but might be further applicable to other braille systems based upon EBAE.
Tests have been included, some of which are adapted from the relevant chapter of the EBAE manual: http://www.brailleauthority.org/formats/2011manual-web/formats05.html","Well, make distcheck fails because en-us-emphasis.uti is not mentioned in tables/Makefile.am",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1000,2020-10-10T08:20:21Z,2020-10-15T09:39:58Z,2020-10-15T09:39:58Z,MERGED,True,122,55,10,https://github.com/martinq,Corrected US English (EBAE) emphasis definitions,5,['tables'],https://github.com/liblouis/liblouis/pull/1000,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1000#issuecomment-709045927,"As per prior discussion with @bertfrees and @johnjboyer (see https://www.freelists.org/post/liblouis-liblouisxml/Question-regarding-emphasis-indicator-in-table-enusg1ctb,5) , I am submitting corrections to the US English EBAE emphasis definitions. These changes are imported into tables for US English G1, US English interline, and IN English G1, but might be further applicable to other braille systems based upon EBAE.
Tests have been included, some of which are adapted from the relevant chapter of the EBAE manual: http://www.brailleauthority.org/formats/2011manual-web/formats05.html","OK, perfect",True,{'THUMBS_UP': ['https://github.com/martinq']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1001,2020-10-12T16:24:58Z,2020-10-16T20:06:51Z,2020-10-16T20:07:26Z,CLOSED,False,0,0,0,https://github.com/bertfrees,Bring some more structure in the tests,0,['cleanup'],https://github.com/liblouis/liblouis/pull/1001,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1001,"Bring tests around a certain topic together in a single file.
Collect all regression tests that don't belong anywhere else in one file.
Move language specific tests to the braille-specs directory.
Add comments.","Bring tests around a certain topic together in a single file.
Collect all regression tests that don't belong anywhere else in one file.
Move language specific tests to the braille-specs directory.
Add comments.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1001,2020-10-12T16:24:58Z,2020-10-16T20:06:51Z,2020-10-16T20:07:26Z,CLOSED,False,0,0,0,https://github.com/bertfrees,Bring some more structure in the tests,0,['cleanup'],https://github.com/liblouis/liblouis/pull/1001,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1001#issuecomment-710536058,"Bring tests around a certain topic together in a single file.
Collect all regression tests that don't belong anywhere else in one file.
Move language specific tests to the braille-specs directory.
Add comments.",Merged: 1c7f6b6,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/JuniGobi,1,https://github.com/liblouis/liblouis/pull/1005,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/tc-dl,2,https://github.com/liblouis/liblouis/pull/1005#issuecomment-709887731,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".",i have verified all added characters are correct.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1005#issuecomment-709954034,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","Hi Yunir.
Thank you very much for your contribution! The tables themselves look very decent to me. However there is some other stuff around it that has to be taken care.
Below are the things that need to be addressed before we can accept the patch. We can take care of the last 3 items, but if you could have a look at the first two. Thanks!


 Test data is required for the new tables. A list of words, sentences, etc. with their corresponding braille translations which serve both as regression tests and as documentation. You can read more about it on the wiki. We can help you with the syntax, but the data needs to come from you or @tc-dl.


 Some reference to (official or unofficial) documentation about the implemented braille codes would be nice.


 Your name should be added to AUTHORS.


 Some makefiles need updating.


 Travis currently fails because of this:
./generate display-names >generate.log 2>generate.log
Makefile:9: recipe for target 'check' failed
make: *** [check] Error 1
Table not in list: /home/travis/build/liblouis/liblouis/extra/generate-display-names/../../tables/ba-comp.utb
Table not in list: /home/travis/build/liblouis/liblouis/extra/generate-display-names/../../tables/ba.utb

@egli: The Travis notifications apparently don't work anymore.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/tc-dl,4,https://github.com/liblouis/liblouis/pull/1005#issuecomment-710765657,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","Hi Bert.
I think I'll be done with the test by Monday.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/JuniGobi,5,https://github.com/liblouis/liblouis/pull/1005#issuecomment-712701706,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".",Hi. We added a yaml test file on demand for the first item of list. We do not completely understand the requirements for the second point. Please clarify our actions.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1005#issuecomment-712760920,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","Thanks @JuniGobi

We do not completely understand the requirements for the second point. Please clarify our actions.

I am talking about this TODO comment:
# TODO: Please add a reference to official documentation about
# the implemented braille code. Preferably submit the documents
# to https://github.com/liblouis/braille-specs.

Is there some documentation of the Bashkir braille code that this table is based on? If it exists and it is publicly available, we should refer to it from the table and tests. It does not necessarily have to be official. Some documentation is better than nothing. If no such documentation exist, we should explain in the table were the data in the table came from: from one person, from a institution, ...?
By the way, who is Rustam Churagulov? Is it you, @tc-dl? It would also be nice to have a maintainer email address in the file. Someone who can be contacted when changes are needed or need to be verified.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/1005#issuecomment-712772826,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","Hello everybody! As I'm the maintainer of the Russian computer Braille table, I should say couple of words about Bashkir computer Braille table.
You've added new Bashkir symbols which are no in the Russian alphabet, but some of these conflict with Russian punctuations (brackets, for example). You've also added virtual dots 9 at these symbols, but anyway, the back translation of punctuation have been broken in Your table. I think the back translation in the computer Braille is important for users, so try to change some of punctuation characters like in uk-comp.utb. Although I understand that there're more additional letters in Bashkir language than in the Ukrainian and it could be difficult...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/Futyn-Maker,8,https://github.com/liblouis/liblouis/pull/1005#issuecomment-712780802,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","Correcting myself, of course, the problem is that additional Bashkir letters cannot be inputed, not punctuations...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/tc-dl,9,https://github.com/liblouis/liblouis/pull/1005#issuecomment-712931076,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","I will probably give up computer braille. as it is unnecessary and I have no permanent access to a braille display due to covid-19. to test input, the school does not have such displays.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1005#issuecomment-712933439,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","If a table is not intended for back-translation, it should not have the direction: both metadata.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/Futyn-Maker,11,https://github.com/liblouis/liblouis/pull/1005#issuecomment-712955830,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","Basically, I could add Bashkir letters in the Russian computer table only for reading (forward translation), but if You want to provide of inputing these letters, You have to change the punctuations...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/tc-dl,12,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716143160,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","also as an option, but if you provide the input so that before the punctuation symbols there is, for example, a third or sixth dot?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/Futyn-Maker,13,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716144069,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".",I'm afraid You'll get conflict with one-cell-patterns...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/tc-dl,14,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716146493,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".",then I think the only way out is to add letters to the Russian computer table for reading.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/JuniGobi,15,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716171613,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","Hey.
Here's what we found. There is no official document on the documentation of the Bashkir Braille code, but there is a web page on the official information portal of the Republic of Bashkortostan, or rather the city of the capital. To retell it very briefly, this page describes the biography of a person who first created the code for the Bashkir language, now the whole republic uses this code. The creator's name is Makarim Tukhvatshin. He invented the Bashkir Louis Braille dotted font in the early 60s.
https://ufacity.info/press/news/349170.html
Those punctuation marks that have been replaced from the Russian layout are recorded by changing the layout to Russian. Just like we put the ""ampersand"", ""at"" or ""tilde"" characters on the Russian layout, switching to the English layout. When reading, it is easy to determine the correct interpretation of the code based on the position and context.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/tc-dl,16,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716172574,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".",I got a braille display for testing. and found that Latin characters are being entered on the literary table. how can i fix this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/Futyn-Maker,17,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716185218,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","I got a braille display for testing. and found that Latin characters are being entered on the literary table. how can i fix this?

It's the problem of Russian literary Braille table. It's not intended for back translation, only for reading. And it's difficult to make it usable for inputing...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/tc-dl,18,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716329220,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","understandably. will you add Bashkir characters to the Russian computer table for output? at the moment I definitely will not be able to make a replacement for symbols, I need a consultation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/Futyn-Maker,19,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716335117,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","will you add Bashkir characters to the Russian computer table for output? at the moment I definitely will not be able to make a replacement for symbols, I need a consultation.

Yes, I'll add them tonight. Speaking about Russian literary Braille table, I'm going to provide some improvements soon, but it won't be used for input. Anyway, if You want to help me with Russian literary table technically, we can discuss it...
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/tc-dl,20,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716349163,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".",ok how can i try to help while there is a braille display.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/Futyn-Maker,21,https://github.com/liblouis/liblouis/pull/1005#issuecomment-716352970,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","ok how can i try to help while there is a braille display.

See #937. These problems are also relevant.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/1005#issuecomment-733174663,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","there is a web page on the official information portal of the Republic of Bashkortostan, or rather the city of the capital. To retell it very briefly, this page describes the biography of a person who first created the code for the Bashkir language, now the whole republic uses this code. The creator's name is Makarim Tukhvatshin. He invented the Bashkir Louis Braille dotted font in the early 60s.
https://ufacity.info/press/news/349170.html

Thanks but this doesn't say anything about Bashkir braille code itself. I'll mention the name of the inventor in the test file as a piece of trivia.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/JuniGobi,23,https://github.com/liblouis/liblouis/pull/1005#issuecomment-733444650,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".","there is a web page on the official information portal of the Republic of Bashkortostan, or rather the city of the capital. To retell it very briefly, this page describes the biography of a person who first created the code for the Bashkir language, now the whole republic uses this code. The creator's name is Makarim Tukhvatshin. He invented the Bashkir Louis Braille dotted font in the early 60s.
https://ufacity.info/press/news/349170.html

Thanks but this doesn't say anything about Bashkir braille code itself. I'll mention the name of the inventor in the test file as a piece of trivia.

Yes, it really is, there is nothing else, and thank you very much! Thanks everyone!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1005,2020-10-16T07:42:51Z,2020-11-25T18:33:00Z,2020-11-25T18:33:00Z,CLOSED,False,839,404,7,https://github.com/JuniGobi,Adding new language files (Bashkir),9,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1005,https://github.com/bertfrees,24,https://github.com/liblouis/liblouis/pull/1005#issuecomment-733662510,"Adding the Bashkir language.
New files:

""ba.utb"";
""ba-comp.utb"".",Replaced by #1027.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1006,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1006#issuecomment-710554048,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.",@josteinaj I changed some tests for Norwegian (not the table). Would you mind having a look at https://github.com/liblouis/liblouis/pull/1006/files#diff-531a3730363a4ab7232b5933f0e0a94668637586bdf712cd740307062cdc704f?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1006#issuecomment-710560970,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.",@garconvacher I also did a small change to the French table: see commit b4604c1. Could you verify please?,True,{'THUMBS_UP': ['https://github.com/garconvacher']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1006#issuecomment-710787353,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","@dkager Some Dutch tests were fixed but one was broken. To me the new result makes sense. What do you think?

  
    
      liblouis/tests/braille-specs/nl-g0_harness.yaml
    
    
        Lines 207 to 209
      in
      ab4f0fe
    
  
  
    

        
          
           - - Zie refertes D-NE004W, D-NB007B en D-NB007BDK. 
        

        
          
             - ⠨⠵⠊⠑ ⠗⠑⠋⠑⠗⠞⠑⠎ ⠨⠙⠤⠘⠝⠑⠼⠚⠚⠙⠨⠺⠂ ⠨⠙⠤⠘⠝⠃⠼⠚⠚⠛⠨⠃ ⠑⠝ ⠨⠙⠤⠘⠝⠃⠼⠚⠚⠛⠘⠃⠙⠅⠲ 
        

        
          
             - xfail: ""'D-NE004W, D-NB007B' is now seen as 6 words (so that phrase indication is used): 'D', 'NE', 'W', 'D', 'NB' and 'B'""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1006#issuecomment-711343099,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","@torchtrust I found a strange test that was added by you in 2015:

  
    
      liblouis/tests/braille-specs/en-ueb-g1_harness.yaml
    
    
         Line 36
      in
      1c7f6b6
    
  
  
    

        
          
           - [Ææ, ⠠⠁⠠⠘⠖⠑⠁⠘⠖⠑] 
        
    
  


The dots 6-1-6 at the beginning, is that correct?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/josteinaj,6,https://github.com/liblouis/liblouis/pull/1006#issuecomment-715280761,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","@bertfrees By just skimming through the changes in no_typeform_harness.yaml I think it looks good, but I'll check with Kari to be sure.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/garconvacher,7,https://github.com/liblouis/liblouis/pull/1006#issuecomment-716375570,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","@garconvacher I also did a small change to the French table: see commit b4604c1. Could you verify please?

@bertfrees, I can't do tests at the moment but it's match the french braille code.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1006#issuecomment-719446500,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","@dkager What do you think about the ""Zie refertes D-NE004W, D-NB007B en D-NB007BDK."" test? ""D-NE004W, D-NB007B"" is now seen as 6 words (so that phrase indication is used): ""D"", ""NE"", ""W"", ""D"", ""NB"" and ""B"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1006#issuecomment-719447743,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","@egli Please review. It's a really big improvement, if I may say so myself.",True,{'LAUGH': ['https://github.com/egli']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1006#issuecomment-720407020,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","Afaikt you are replacing the binary way of handling emphasis with a more flexible system.

Not sure what you mean by binary, but there is still a strict distinction between what we call ""permanent"" indication on the one hand, and word/phrase level indication on the other hand. Very little has changed for permanent indication.

I think we should have some doc though

Yes, I have to add some. But note that apart from the no noemphmodechars there is not all that much that changed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/dkager,11,https://github.com/liblouis/liblouis/pull/1006#issuecomment-722238811,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","Sorry for the delays! Regarding this test:
https://github.com/liblouis/liblouis/blob/ab4f0fee3329a1ce5c97738f83a90ab5ec436509/tests/braille-specs/nl-g0_harness.yaml#L207-L209
I understand the description in the xfail, but think it would be good to ask Dorine in ‘t Veld (Dedicon) or another 6-dot braille expert from the Braille Autoriteit working group.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/josteinaj,12,https://github.com/liblouis/liblouis/pull/1006#issuecomment-727828103,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.",@bertfrees: Kari approves: snaekobbi#10 (comment),True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/1006#issuecomment-731357335,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","I've sent Dorine a message on Monday. I think whatever the outcome, I'm going to merge this PR because I think overall the Dutch table is definitely improved. Several issues where fixed, only this one border case is possibly (not certainly) a regression.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/dkager,14,https://github.com/liblouis/liblouis/pull/1006#issuecomment-731987394,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.",Sounds sane.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/1006#issuecomment-733106889,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.",@egli I have updated the doc. Can you quickly check again?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1006,2020-10-16T20:09:25Z,2020-11-30T15:49:29Z,2020-11-30T15:49:39Z,MERGED,True,1126,552,19,https://github.com/bertfrees,Various improvements to emphasis handling,25,['enhancement'],https://github.com/liblouis/liblouis/pull/1006,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/1006#issuecomment-733685102,"This contains quite a lot. Best look at the commit logs to see what exactly. In short, I added a new opcode called noemphchars, improved the code readability, and harmonized the behavior of caps vs. emph on the one hand and begemph/endemph mode vs. begendword etc. on the other hand.
Fixes the following issues:

#713 (comment)
#779
#780
#905
#944
#998
#1002 (at least partly)

Only thing missing is a little update to the documentation.
Travis status doesn't show up anymore apparently but tests pass on Travis.","@egli Good change, although combining multiple links in a single ""(see ... and ...)"" doesn't always work out that nice I think (sometimes it does). But I won't be picky.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1008,2020-10-19T14:43:55Z,2020-11-25T12:46:02Z,2021-01-08T14:49:26Z,MERGED,True,692,404,3,https://github.com/JakeKyle,Tables/urdu,12,['tables'],https://github.com/liblouis/liblouis/pull/1008,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/1008,"This is to fix issue #992
Also many other general improvements to Urdu grade 1 and 2 tables.
Yaml test extended to demonstrate improvements and fixed issue.
@bertfrees I couldn't get --verbose working on the Windows binary of lou_checkyaml. My reason for wanting it is because I find in Urdu multiple ways of spelling some words in the print which go to one Braille word. Obviously back translation will fail in all but 1 of the spellings. So I keep all the alternatives together but mark all the expected failures as {xfail: ""BT""}. I wanted to check that the failure was due only to the back translation and not in the forward translation but found that these tests would not show as failures even if the failure was in forward translation. Therefore I found I needed to repeat all these tests in forward mode only. Is there a better way of doing this? Should --verbose be working? and would it help me - by negating the need to repeat tests - if it was?","This is to fix issue #992
Also many other general improvements to Urdu grade 1 and 2 tables.
Yaml test extended to demonstrate improvements and fixed issue.
@bertfrees I couldn't get --verbose working on the Windows binary of lou_checkyaml. My reason for wanting it is because I find in Urdu multiple ways of spelling some words in the print which go to one Braille word. Obviously back translation will fail in all but 1 of the spellings. So I keep all the alternatives together but mark all the expected failures as {xfail: ""BT""}. I wanted to check that the failure was due only to the back translation and not in the forward translation but found that these tests would not show as failures even if the failure was in forward translation. Therefore I found I needed to repeat all these tests in forward mode only. Is there a better way of doing this? Should --verbose be working? and would it help me - by negating the need to repeat tests - if it was?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1008,2020-10-19T14:43:55Z,2020-11-25T12:46:02Z,2021-01-08T14:49:26Z,MERGED,True,692,404,3,https://github.com/JakeKyle,Tables/urdu,12,['tables'],https://github.com/liblouis/liblouis/pull/1008,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1008#issuecomment-712245330,"This is to fix issue #992
Also many other general improvements to Urdu grade 1 and 2 tables.
Yaml test extended to demonstrate improvements and fixed issue.
@bertfrees I couldn't get --verbose working on the Windows binary of lou_checkyaml. My reason for wanting it is because I find in Urdu multiple ways of spelling some words in the print which go to one Braille word. Obviously back translation will fail in all but 1 of the spellings. So I keep all the alternatives together but mark all the expected failures as {xfail: ""BT""}. I wanted to check that the failure was due only to the back translation and not in the forward translation but found that these tests would not show as failures even if the failure was in forward translation. Therefore I found I needed to repeat all these tests in forward mode only. Is there a better way of doing this? Should --verbose be working? and would it help me - by negating the need to repeat tests - if it was?","Looks very nice! I'll have a deeper look later.
The verbose option doesn't appear to work for me either. So it's not a Windows issue.
But anyway, I think that xfail is not so useful in combination with bothDirections mode. The way you did it, repeating the tests that pass for forward direction, is also the way I would have done it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1008,2020-10-19T14:43:55Z,2020-11-25T12:46:02Z,2021-01-08T14:49:26Z,MERGED,True,692,404,3,https://github.com/JakeKyle,Tables/urdu,12,['tables'],https://github.com/liblouis/liblouis/pull/1008,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1008#issuecomment-727867985,"This is to fix issue #992
Also many other general improvements to Urdu grade 1 and 2 tables.
Yaml test extended to demonstrate improvements and fixed issue.
@bertfrees I couldn't get --verbose working on the Windows binary of lou_checkyaml. My reason for wanting it is because I find in Urdu multiple ways of spelling some words in the print which go to one Braille word. Obviously back translation will fail in all but 1 of the spellings. So I keep all the alternatives together but mark all the expected failures as {xfail: ""BT""}. I wanted to check that the failure was due only to the back translation and not in the forward translation but found that these tests would not show as failures even if the failure was in forward translation. Therefore I found I needed to repeat all these tests in forward mode only. Is there a better way of doing this? Should --verbose be working? and would it help me - by negating the need to repeat tests - if it was?",@JakeKyle is this ready to go in?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1008,2020-10-19T14:43:55Z,2020-11-25T12:46:02Z,2021-01-08T14:49:26Z,MERGED,True,692,404,3,https://github.com/JakeKyle,Tables/urdu,12,['tables'],https://github.com/liblouis/liblouis/pull/1008,https://github.com/JakeKyle,4,https://github.com/liblouis/liblouis/pull/1008#issuecomment-728048602,"This is to fix issue #992
Also many other general improvements to Urdu grade 1 and 2 tables.
Yaml test extended to demonstrate improvements and fixed issue.
@bertfrees I couldn't get --verbose working on the Windows binary of lou_checkyaml. My reason for wanting it is because I find in Urdu multiple ways of spelling some words in the print which go to one Braille word. Obviously back translation will fail in all but 1 of the spellings. So I keep all the alternatives together but mark all the expected failures as {xfail: ""BT""}. I wanted to check that the failure was due only to the back translation and not in the forward translation but found that these tests would not show as failures even if the failure was in forward translation. Therefore I found I needed to repeat all these tests in forward mode only. Is there a better way of doing this? Should --verbose be working? and would it help me - by negating the need to repeat tests - if it was?",@egli Yes ready now,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1010,2020-10-20T10:37:48Z,2020-11-17T09:58:41Z,2021-01-08T16:13:39Z,MERGED,True,12,1,2,https://github.com/JakeKyle,Tables/malayalam,2,['tables'],https://github.com/liblouis/liblouis/pull/1010,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/1010,This is to fix and test issue #1009,This is to fix and test issue #1009,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1010,2020-10-20T10:37:48Z,2020-11-17T09:58:41Z,2021-01-08T16:13:39Z,MERGED,True,12,1,2,https://github.com/JakeKyle,Tables/malayalam,2,['tables'],https://github.com/liblouis/liblouis/pull/1010,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1010#issuecomment-712762624,This is to fix and test issue #1009,Looks good to me. Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1015,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/1015#issuecomment-720070774,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","@bertfrees I think You can merge it. I've taken the definitions from corresponding tables, so, it should be correct. I don't know what's the problem with news-file...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/tc-dl,3,https://github.com/liblouis/liblouis/pull/1015#issuecomment-720072494,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",I'll check back later. will these Bashkir braille tables be published?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1015#issuecomment-720408627,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",@Futyn-Maker Can you explain how this relates to the other PR (the Bashkir one)?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,5,https://github.com/liblouis/liblouis/pull/1015#issuecomment-720418184,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","Can you explain how this relates to the other PR (the Bashkir one)?

We've figured out that it doesn't make sense to add the Bashkir computer Braille table, because it's impossible to provide the back translation of the special Bashkir symbols. I've decided to add this symbols into Russian computer Braille table to provide reading (forward translation) of these. As a bonus, I've added special symbols for Uzbek language.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1015#issuecomment-720421837,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",So can I take the tests from the other PR and apply them here?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/tc-dl,7,https://github.com/liblouis/liblouis/pull/1015#issuecomment-720426730,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","yes, you don't need to add Bashkir computer braille. Will the literature table be published?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1015#issuecomment-720430337,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",I don't know. Let's hope so.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,9,https://github.com/liblouis/liblouis/pull/1015#issuecomment-720442354,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",@bertfrees I've added the missing symbols in the table and updated the test-file adding test for Bashkir symbols. I think You need to delete the Bashkir computer table and the test for it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/1015#issuecomment-727865662,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",Move tests from #1005 to this PR.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,11,https://github.com/liblouis/liblouis/pull/1015#issuecomment-727869022,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",@egli I think all You need is to remove tests for computer Braille table from #1005. I've already added test for Bashkir symbols to ru.yaml.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/JuniGobi,12,https://github.com/liblouis/liblouis/pull/1015#issuecomment-728118167,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","Hello!
What should be done next? Who can fix the conflict in the files? Please help us.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/1015#issuecomment-728170359,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",@JuniGobi I'm taking care of it. If I have more questions I will let you know.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733185034,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","@Futyn-Maker I'd rather not just remove those tests, I'd like to keep them and run them against your improved Russian table. I just tried this and I'm getting the following failures. Can you and @tc-dl clarify? Can you tell me for each of these whether (a) the failure is expected because of limitations of the table, (b) there is a mistake in the table, (c) the test is wrong, or (d) the Russian and Bashkir braille codes differ in these areas.
The first issue is a back-translation issue. The forward translation is correct:
Input:    '⡅⠣⠬⠣⠝⠀⠅⠣⠝⠙⠜⠗⠀⠧⠮⠥⠮⠝⠁⠠⠀⠫⠏⠗⠁⠩⠞⠁⠗⠀⠧⠁⠗⠻⠁⠫⠠⠀⠅⠜⠯⠑⠋⠞⠜⠗⠀⠧⠁⠻⠮⠱⠩⠁⠀⠞⠁⠗⠞⠮⠇⠁⠄'
Expected: 'Көҙөн көндәр һыуына, япраҡтар һарғая, кәйефтәр һағышҡа тартыла.'
Received: 'К(`(н к(нд)р ўыуына, япра%тар ўарая, к)йефт)р ўаыш%а тартыла.'
The two next examples are not forward translated correctly:
Input:    '(~)'
Expected: '⢔⢶⡢'
Received: '⠣⠻⠜'
Input:    'example@domain.com'
Expected: '⢑⢭⢁⢍⢏⢇⢑⣔⢙⢕⢍⢁⢊⢝⠄⢉⢕⢍'
Received: '⢑⢭⢁⢍⢏⢇⢑⡜⢙⢕⢍⢁⢊⢝⠄⢉⢕⢍'
Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,15,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733211141,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","@bertfrees Hello!
The problem is that @JuniGobi seems to base the Bashkir test on uk.yaml. It doesn't contains any unique tests excepted test № 1 in Your previous comment, I've included this test in ru.yaml. So we have following:

It was figured out that we can't provide the back translation of Bashkir symbols, so the first test should be only with forward flag;
The remaining failur tests are because of changing punctuations in Ukrainian computer Braille table. As I've written above, this Bashkir test was totally copied from uk.yaml without any changes, excepted adding test for Bashkir symbols as the first test.

According to these facts, I suggest following:

remove all tests connected with Bashkir computer Braille table from ba.yaml as it doesn't contains any unique tests anymore;
Remove the Bashkir computer Braille table at all (we've discussed it above in this issue);
Add the Bashkir literary table with tests for it;
Merge this PR. :-)

Thanks and sorry for confusions, I just want to do it better.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733223152,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","It was figured out that we can't provide the back translation of Bashkir symbols, so the first test should be only with forward flag;

OK, will do. This is clearly not optimal though, right? How useful is a braille code if there are letter in the alphabet that don't have a dedicated braille pattern?

remove all tests connected with Bashkir computer Braille table from ba.yaml as it doesn't contains any unique tests anymore;

I don't think it's a real problem if the same tests exists in multiple braille-specs files, if those files are for different languages. If needed we can clean this up later. I'd rather keep a few too many tests than throw away relevant stuff.
It is a however a problem if test data was committed that is not correct. That's why I want to double check with @tc-dl and @JuniGobi . Please tell me, was this a mistake or intended?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,17,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733229319,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","OK, will do. This is clearly not optimal though, right? How useful is a braille code if there are letter in the alphabet that don't have a dedicated braille pattern?

We have what we have... The problem is because of conflicts with punctuations. There aren't any document which discribes the Bashkir Braille code. Impossibility of providing the back translation is cause I suggest removing the Bashkir computer Braille table and adding this symbols in the Russian table. Bashkir-language-speaking people could read their texts by using the Russian table (we speak about computer Braille code).

I don't think it's a real problem if the same tests exists in multiple braille-specs files, if those files are for different languages. If needed we can clean this up later. I'd rather keep a few too many tests than throw away relevant stuff.

Of course, but if we aren't going to include ba-comp.utb, what does these tests make sense? You seem couldn't connect it with any table.
But if You'd prefer not to remove these ones, it's necessary to do two things:

Move the first test into forward section;
Remove tests which I've created specially for Ukrainian computer Braille table. They aren't relevant for Bashkir tables...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733232940,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","Of course, but if we aren't going to include ba-comp.utb, what does these tests make sense? You seem couldn't connect it with any table.

I connect the test with the Russian computer table for now.

Remove tests which I've created specially for Ukrainian computer Braille table. They aren't relevant for Bashkir tables...

No, I don't think so either, but allow me to double check this with the people that committed the test file. And if it was indeed a mistake, like we both suspect, the test should be corrected rather than removed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,19,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733236816,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","No, I don't think so either, but allow me to double check this with the people that committed the test file. And if it was indeed a mistake, like we both suspect, the test should be corrected rather than removed.

OK. But I think these tests below are excessive at all:
Input: '(~)'
Expected: '⢔⢶⡢'
Received: '⠣⠻⠜'
Input: 'example@domain.com'
Expected: '⢑⢭⢁⢍⢏⢇⢑⣔⢙⢕⢍⢁⢊⢝⠄⢉⢕⢍'
Received: '⢑⢭⢁⢍⢏⢇⢑⡜⢙⢕⢍⢁⢊⢝⠄⢉⢕⢍'

They were created specially to fix changing of punctuations in the Ukrainian Braille table. There're no any changes in Bashkir code.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733242253,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",It doesn't matter. It improves the test coverage. It would also be better if the Russian test file would have tests for these characters.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,21,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733512726,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","Well, it's possible to correct the Bashkir test by copying tests from ru.yaml which I've made now.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/tc-dl,22,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733526837,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","yes, all files were made from Ukrainian table. the test file was added last. To be honest, I did not quite understand it, but I also tried to do it by analogy. I created braille tables after reading the documentation through a translator because I practically do not speak English, so I think that maybe I missed something, or I misunderstood. what is missing in the test file?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,23,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733642706,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","@Futyn-Maker Great, thanks.
@tc-dl OK thanks, that explains it. You can just tell me in all honesty when you don't fully understand something. I'm just gonna go with whatever Andrey tells me to do now. If there are issues with the table you can just talk to him, then there is also no language barrier.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/Futyn-Maker,24,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733658143,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey","Yes, I know Russian and can answer the questions here or by mailto:andrewia2002@yandex.ru. @bertfrees I think correcting the Bashkir test is the last thing we need, right?
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,25,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733659694,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",Yes I'm finalizing things now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1015,2020-10-26T11:15:23Z,2020-11-25T18:33:08Z,2020-11-25T18:33:08Z,CLOSED,False,166,11,3,https://github.com/Futyn-Maker,Improvements to the Russian computer braille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1015,https://github.com/bertfrees,26,https://github.com/liblouis/liblouis/pull/1015#issuecomment-733662367,"Hello!
I've added new characters for Bashkir and Uzbek languages. Now it is possible to read texts on these languages by this table. @tc-dl please check the correctness.
Andrey",Replaced by #1027.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/1016,"Added additional tests. Still a work in progress
Closes #964","Added additional tests. Still a work in progress
Closes #964",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/leonardder,2,https://github.com/liblouis/liblouis/pull/1016#issuecomment-719718068,"Added additional tests. Still a work in progress
Closes #964",Any reason why the checks don't seem to run?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1016#issuecomment-719720924,"Added additional tests. Still a work in progress
Closes #964","I don't know what happened. The tests  do run but lately the results don't show up on Github anymore.
You have to look on the Travis website: https://travis-ci.org/github/liblouis/liblouis/jobs/739620637.
The YAML file has syntax errors. There is a ""-"" missing before ""Monetary symbols"" and ""Arrows"".",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/leonardder,4,https://github.com/liblouis/liblouis/pull/1016#issuecomment-719724273,"Added additional tests. Still a work in progress
Closes #964","Ah, thanks for pointing out.
I didn't have a working build environment the other day, but now I have, so I should be able to test locally.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1016#issuecomment-733590398,"Added additional tests. Still a work in progress
Closes #964",@leonardder Still work in progress?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/leonardder,6,https://github.com/liblouis/liblouis/pull/1016#issuecomment-733610023,"Added additional tests. Still a work in progress
Closes #964","I think it is ok for now, unless you think some additional things have to be added?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1016#issuecomment-733614782,"Added additional tests. Still a work in progress
Closes #964","Hadn't looked at it yet in detail because it had the ""wip"" label. But checking now... looks good!
Oh maybe one thing... a link to the standard. But I'll take care of it. I noticed that https://github.com/liblouis/braille-specs/tree/master/dutch also needs to be updated. It still lists 2017 as the latest version of the 6-dot standard, and it doesn't list the 8-dot standard yet.
Thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/leonardder,8,https://github.com/liblouis/liblouis/pull/1016#issuecomment-733624810,"Added additional tests. Still a work in progress
Closes #964","Oh maybe one thing... a link to the standard. But I'll take care of it.

Thanks for that.

I noticed that https://github.com/liblouis/braille-specs/tree/master/dutch also needs to be updated. It still lists 2017 as the latest version of the 6-dot standard, and it doesn't list the 8-dot standard yet.

May be we could just link to the braille-autoriteit webpage as provider of the most recent standards?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1016,2020-10-28T14:26:45Z,2020-11-25T18:00:30Z,2020-11-25T18:00:30Z,MERGED,True,23,1,2,https://github.com/leonardder,Add more tests for Dutch 8 dot computer braille,2,[],https://github.com/liblouis/liblouis/pull/1016,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1016#issuecomment-733626793,"Added additional tests. Still a work in progress
Closes #964","Yeah, I'll do that. I'm gonna keep the overview though. It's nice and useful for referencing a specific version.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1017,2020-10-29T06:02:47Z,2021-06-07T07:42:21Z,2021-06-07T07:42:56Z,CLOSED,False,0,0,0,https://github.com/njsch,Update En-GB Braille Forward and Back-translation tables.,0,['tables'],https://github.com/liblouis/liblouis/pull/1017,https://github.com/njsch,1,https://github.com/liblouis/liblouis/pull/1017,"Closes #972.  Currently for viewing but not review purposes.  I have only updated meta data for the grade 2 table - hopefully I did it right.  Intending to fix back-translational issues if possible but this will be a fairly experimental work-in-progress and there is no guarantee that the opcodes will help to fix everything found to be wrong with the table thus far.
FYI @bertfrees, @torchtrust","Closes #972.  Currently for viewing but not review purposes.  I have only updated meta data for the grade 2 table - hopefully I did it right.  Intending to fix back-translational issues if possible but this will be a fairly experimental work-in-progress and there is no guarantee that the opcodes will help to fix everything found to be wrong with the table thus far.
FYI @bertfrees, @torchtrust",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1017,2020-10-29T06:02:47Z,2021-06-07T07:42:21Z,2021-06-07T07:42:56Z,CLOSED,False,0,0,0,https://github.com/njsch,Update En-GB Braille Forward and Back-translation tables.,0,['tables'],https://github.com/liblouis/liblouis/pull/1017,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1017#issuecomment-779134686,"Closes #972.  Currently for viewing but not review purposes.  I have only updated meta data for the grade 2 table - hopefully I did it right.  Intending to fix back-translational issues if possible but this will be a fairly experimental work-in-progress and there is no guarantee that the opcodes will help to fix everything found to be wrong with the table thus far.
FYI @bertfrees, @torchtrust",@njsch any news on this?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1017,2020-10-29T06:02:47Z,2021-06-07T07:42:21Z,2021-06-07T07:42:56Z,CLOSED,False,0,0,0,https://github.com/njsch,Update En-GB Braille Forward and Back-translation tables.,0,['tables'],https://github.com/liblouis/liblouis/pull/1017,https://github.com/njsch,3,https://github.com/liblouis/liblouis/pull/1017#issuecomment-780224448,"Closes #972.  Currently for viewing but not review purposes.  I have only updated meta data for the grade 2 table - hopefully I did it right.  Intending to fix back-translational issues if possible but this will be a fairly experimental work-in-progress and there is no guarantee that the opcodes will help to fix everything found to be wrong with the table thus far.
FYI @bertfrees, @torchtrust","@egli, sorry for the delay - been busy.  James B and I haven't worked on this for a while as we've both been preoccupied.  I would like to move forward but I have some concerns similar to that of some others about the productivity of the update.  The problem is that the now legacy en-gb g2 table in particular demonstrates one of the reasons why UEB was developed, namely that computers cannot always algorithmically cope with aspects of Braille codes that are very subjectively context-dependent in interpretation.  For the table in question, a good example of this would be dots 256.  Within a purely numerical context it represents a dollar sign; but with an alphanumeric context, it can represent any one of either a period, or a double D, or a contraction prefix representing “dis”.  The latter two considerations in particular make it very difficult to figure out what rules would be viable for the former in forward and / or back-translation.
This is one of several examples demonstrating why forward, let alone back, translation has always been so sloppy in this table.  I don't know if there is anything at all that anyone can do about this.
For reasons of quality control and good practice, I am happy to indefinitely close this PR and associated issue if you want me to, with the goal of re-opening it / them at a future date.  But I would like to get this working if possible so I have left it open.  Again, sorry for not actively communicating about this.
One of the issues is that I still do not fully understand why @bertfreez was concerned about some of my command-line tests and some other tests that James put into the YAML file.  I would like to move on but by convention, we need to clarify the tests first.  What have we done wrong that is causing the fragmentation? If the tests are not to be in a separate .yml file then where do you want them to go?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1017,2020-10-29T06:02:47Z,2021-06-07T07:42:21Z,2021-06-07T07:42:56Z,CLOSED,False,0,0,0,https://github.com/njsch,Update En-GB Braille Forward and Back-translation tables.,0,['tables'],https://github.com/liblouis/liblouis/pull/1017,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1017#issuecomment-780450870,"Closes #972.  Currently for viewing but not review purposes.  I have only updated meta data for the grade 2 table - hopefully I did it right.  Intending to fix back-translational issues if possible but this will be a fairly experimental work-in-progress and there is no guarantee that the opcodes will help to fix everything found to be wrong with the table thus far.
FYI @bertfrees, @torchtrust","No, don't close the issue. We can merge only the tests. They are valuable by themselves.
The only remark I had was that I would add them to an existing file instead of creating yet another YAML file for en-GB. (In fact I would merge this new file with en-GB-g2_harness.yaml and en-GB-g2_backward.yaml and name it en-GB-g2.yaml.)
We should also add James' and/or your name.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1017,2020-10-29T06:02:47Z,2021-06-07T07:42:21Z,2021-06-07T07:42:56Z,CLOSED,False,0,0,0,https://github.com/njsch,Update En-GB Braille Forward and Back-translation tables.,0,['tables'],https://github.com/liblouis/liblouis/pull/1017,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1017#issuecomment-848660479,"Closes #972.  Currently for viewing but not review purposes.  I have only updated meta data for the grade 2 table - hopefully I did it right.  Intending to fix back-translational issues if possible but this will be a fairly experimental work-in-progress and there is no guarantee that the opcodes will help to fix everything found to be wrong with the table thus far.
FYI @bertfrees, @torchtrust",I'm gonna merge the tests.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1017,2020-10-29T06:02:47Z,2021-06-07T07:42:21Z,2021-06-07T07:42:56Z,CLOSED,False,0,0,0,https://github.com/njsch,Update En-GB Braille Forward and Back-translation tables.,0,['tables'],https://github.com/liblouis/liblouis/pull/1017,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1017#issuecomment-854011504,"Closes #972.  Currently for viewing but not review purposes.  I have only updated meta data for the grade 2 table - hopefully I did it right.  Intending to fix back-translational issues if possible but this will be a fairly experimental work-in-progress and there is no guarantee that the opcodes will help to fix everything found to be wrong with the table thus far.
FYI @bertfrees, @torchtrust","@egli I've merged en-GB-g2_backward.yaml and en-GB-g2_harness.yaml, then added James Bowden's tests and added xfail.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1017,2020-10-29T06:02:47Z,2021-06-07T07:42:21Z,2021-06-07T07:42:56Z,CLOSED,False,0,0,0,https://github.com/njsch,Update En-GB Braille Forward and Back-translation tables.,0,['tables'],https://github.com/liblouis/liblouis/pull/1017,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1017#issuecomment-855682166,"Closes #972.  Currently for viewing but not review purposes.  I have only updated meta data for the grade 2 table - hopefully I did it right.  Intending to fix back-translational issues if possible but this will be a fairly experimental work-in-progress and there is no guarantee that the opcodes will help to fix everything found to be wrong with the table thus far.
FYI @bertfrees, @torchtrust",Merged the tests in fdb9061.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/1019,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1019#issuecomment-720431175,,Great work Bue. I presume this is work in progress?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/1019#issuecomment-720433845,,"Yep, I just didn't get to label it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1019#issuecomment-734487182,,@BueVest Not work in progress anymore?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/1019#issuecomment-734496947,,"Oh yes, definitely. I have just been busy with a new firmware for the Polaris note-taker and a couple of other projects. I expect it to be ready for the next release along with English grade 3.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1019#issuecomment-734499460,,OK I guess then we can put it in the 3.16 milestone? File direction_comments_temp.txt still needs to be deleted I presume?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/BueVest,7,https://github.com/liblouis/liblouis/pull/1019#issuecomment-734812960,,"Sorry, I did mean the March release, i.e. 3.17. Concerning the file, I don't know where the info should go, or if it is relevant to have in the repo. At least, I will keep a local copy, so I know why I marked any table like I did.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1019#issuecomment-779235085,,"@BueVest I'd like to get rid of the direction_comments_temp.txt file.
I'm not sure the info is relevant enough to keep. But since you plan to keep the file locally anyway, I think that means it's important enough and we should keep it in the repo. However I don't want the separate file, I think there should be comments above the ""#+direction"" lines. For example:
# Marked 'forward' by BVA because there are no tests for backward translation.
#+direction: forward",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1019#issuecomment-779235506,,"@BueVest Oh, and can I assume it's OK if I squash everything into a single commit?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/BueVest,10,https://github.com/liblouis/liblouis/pull/1019#issuecomment-779320830,,"Yes, I never meant to keep the file in its current form. However, the info is relevant when table authors start asking why the h… their table has been marked such and such. Putting the info in the tables themselves is a good idea, perhaps along with a note in the news that table authors are more than welcome to change the flag if they feel it should be something different.

And yes, you are welcome to merge it all in one commit.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1019#issuecomment-783269092,,"@BueVest Not sure what the plan is now. Do you want to add these comments in the tables?
And yes, we can put something in the NEWS file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/BueVest,12,https://github.com/liblouis/liblouis/pull/1019#issuecomment-783365764,,I’ll see if I can finish it today or tomorrow. It shouldn’t take too long.,True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/1019#issuecomment-789699386,,@BueVest is there any news on this front?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/BueVest,14,https://github.com/liblouis/liblouis/pull/1019#issuecomment-790956058,,"Should be ok now. The tables already state the nature of the metadata, so there is no need for a long explanation in the news file. Could I ask you to please add a simple entry as I don’t think I have the current news file on this branch?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1019,2020-11-02T11:57:17Z,2021-03-05T15:36:52Z,2021-03-05T16:34:11Z,MERGED,True,225,2,76,https://github.com/BueVest,Mark tables with direction flag (Buevest #973),1,[],https://github.com/liblouis/liblouis/pull/1019,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/1019#issuecomment-791365029,,Great Bue! I'll rebase this branch onto master now (and squash as previously agreed).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1020,2020-11-13T08:15:32Z,2021-02-15T11:28:26Z,2021-02-15T12:24:19Z,CLOSED,False,324,0,6,https://github.com/BAUM-Engineering,New norwegian 6dot table,6,"['invalid', 'tables']",https://github.com/liblouis/liblouis/pull/1020,https://github.com/BAUM-Engineering,1,https://github.com/liblouis/liblouis/pull/1020,"Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering","Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1020,2020-11-13T08:15:32Z,2021-02-15T11:28:26Z,2021-02-15T12:24:19Z,CLOSED,False,324,0,6,https://github.com/BAUM-Engineering,New norwegian 6dot table,6,"['invalid', 'tables']",https://github.com/liblouis/liblouis/pull/1020,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1020#issuecomment-726711574,"Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering","Oh no, we can't have two tables for Norwegian 6-dot uncontracted. Unless there are two different Norwegian standards/variants, but to my knowledge this is not the case.
I think we need to get some more information from your client regarding which standard he is requesting. Is it the standard that is documented at http://liblouis.org/braille-specs/norwegian, or something else? If it is the same, we need to find out where the errors are and correct the existing table, rather than adding a new table. We have a quite extensive test file at https://github.com/liblouis/liblouis/blob/master/tests/braille-specs/no_harness.yaml. There are tests for the percent sign. There are also tests for the plus sign, some of which are failing (in math context).
If your client is actually requesting a different standard we need to figure out where in Norway and by whom it is used. In this case it might be appropriate to add a new table. However, it is not acceptable to copy the Danish table. Either the Norwegian code it is based on the Danish braille code, in which case the Danish table should be included (with an include rule), or it is a standard on itself that happens to match Danish very closely, in which case there needs to be more complete test data, and then the table should be constructed from that test file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1020,2020-11-13T08:15:32Z,2021-02-15T11:28:26Z,2021-02-15T12:24:19Z,CLOSED,False,324,0,6,https://github.com/BAUM-Engineering,New norwegian 6dot table,6,"['invalid', 'tables']",https://github.com/liblouis/liblouis/pull/1020,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1020#issuecomment-726712300,"Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering",CC @KariRudjord @josteinaj. Maybe this rings a bell?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1020,2020-11-13T08:15:32Z,2021-02-15T11:28:26Z,2021-02-15T12:24:19Z,CLOSED,False,324,0,6,https://github.com/BAUM-Engineering,New norwegian 6dot table,6,"['invalid', 'tables']",https://github.com/liblouis/liblouis/pull/1020,https://github.com/KariRudjord,4,https://github.com/liblouis/liblouis/pull/1020#issuecomment-727786068,"Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering","According to the norwegian ""Håndbok i litterær punktskrift"" provided by Offentlig utvalg for punktskrift  OUP) - the public committee for braille in Norway - the present presentation in Liblouis for 6-dot braille is correct for the signs mentioned.
+ (plus) is 235
% (percent) is 46-356
The table is available online:
http://www.punktskriftutvalget.no/utvalgt/wp-content/uploads/handbok_litterar_punktskrift.html#operatorer-regnetegn
Lars Bjørndal Lars.Bjorndal@statped.no can be contacted for questions. He is member of OUP an the one who put the norwegian table into Liblouis some years ago.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1020,2020-11-13T08:15:32Z,2021-02-15T11:28:26Z,2021-02-15T12:24:19Z,CLOSED,False,324,0,6,https://github.com/BAUM-Engineering,New norwegian 6dot table,6,"['invalid', 'tables']",https://github.com/liblouis/liblouis/pull/1020,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1020#issuecomment-727844819,"Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering",Thanks @KariRudjord,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1020,2020-11-13T08:15:32Z,2021-02-15T11:28:26Z,2021-02-15T12:24:19Z,CLOSED,False,324,0,6,https://github.com/BAUM-Engineering,New norwegian 6dot table,6,"['invalid', 'tables']",https://github.com/liblouis/liblouis/pull/1020,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1020#issuecomment-779133215,"Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering",@BAUM-Engineering what should we do with this? Apparently according to the standards the existing table is correct? Do we still need a new table?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1020,2020-11-13T08:15:32Z,2021-02-15T11:28:26Z,2021-02-15T12:24:19Z,CLOSED,False,324,0,6,https://github.com/BAUM-Engineering,New norwegian 6dot table,6,"['invalid', 'tables']",https://github.com/liblouis/liblouis/pull/1020,https://github.com/BAUM-Engineering,7,https://github.com/liblouis/liblouis/pull/1020#issuecomment-779157778,"Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering","Hello @egli ,
Sorry for neglecting this pull request, we forget about it.
Yes, the table seems to be adequate to the standards, the problem was on our side.
Briefly, wrong table was attached to the braille printer, thus the translations were wrong. It was misleading that this table was shown to be used,  but in fact another one was selected.
This pull request should be rejected!
Best regards,
BAUM Engineering",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1020,2020-11-13T08:15:32Z,2021-02-15T11:28:26Z,2021-02-15T12:24:19Z,CLOSED,False,324,0,6,https://github.com/BAUM-Engineering,New norwegian 6dot table,6,"['invalid', 'tables']",https://github.com/liblouis/liblouis/pull/1020,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1020#issuecomment-779159796,"Greetings,
We've had in the past similar pull requests, where we've added some corrected tables based on other table. The situation is not quite different in the actual case. We have a request to add a working norwegian 6-dot table.
The client reported that the current table with these specifications is not working, so instead they used Danish table da-dk-g16.ctb. This table is working fine for them, except two characters and space rules:
"" %sign, should be 246, 356
+sign, should be 45, 235""
Currently we have no contact person for the new table because is not established yet, but we will add the person also.
We are open to your suggestions/solutions to solve this problem in the best way.
Thank you in advance,
BAUM Engineering",@BAUM-Engineering Thanks. Will close the PR now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1023,2020-11-20T08:37:18Z,2021-09-14T09:36:41Z,2021-09-14T10:12:07Z,CLOSED,False,42521,10273,1,https://github.com/kenyyuen,Improve Chinese Hong Kong Cantonese braille Translation Table,1,"['waiting', 'tables', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/1023,https://github.com/kenyyuen,1,https://github.com/liblouis/liblouis/pull/1023,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1023,2020-11-20T08:37:18Z,2021-09-14T09:36:41Z,2021-09-14T10:12:07Z,CLOSED,False,42521,10273,1,https://github.com/kenyyuen,Improve Chinese Hong Kong Cantonese braille Translation Table,1,"['waiting', 'tables', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/1023,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1023#issuecomment-731248940,,"Hi @kenyyuen. Thank you for this patch. Could you please explain a bit more in depth in which way exactly the table was improved? We'd like to include some lines in our release notes about it, so that users know what to expect.
I noticed that the table header was changed quite drastically. Notably the copyright lines. Some names disappeared. Also the year 2015 was added but to my knowledge no change has been made to this table since 2009. Was all this intentional?
Would it be possible to include an email address in the table header, so that people have someone to contact in case there is feedback?
It would be great if you could have a look at the metadata that we put in this file. I wrote it, but I need someone who can actually know (you) to verify it. I also put a ""TODO"" in there:

Please add a reference to official documentation about the implemented braille code.

If any such official documentation, or unofficial is fine too, exists, please point us to it.
Finally, if you happen to have data that could be used to create a regression test file (maybe the same data that was used to create the table), please consider adding such a test. The Taïwan table also has it: https://github.com/liblouis/liblouis/blob/master/tests/braille-specs/zh-tw.yaml.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1023,2020-11-20T08:37:18Z,2021-09-14T09:36:41Z,2021-09-14T10:12:07Z,CLOSED,False,42521,10273,1,https://github.com/kenyyuen,Improve Chinese Hong Kong Cantonese braille Translation Table,1,"['waiting', 'tables', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/1023,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1023#issuecomment-779131844,,@kenyyuen what is the status of this?,True,{'CONFUSED': ['https://github.com/tyleemaker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1023,2020-11-20T08:37:18Z,2021-09-14T09:36:41Z,2021-09-14T10:12:07Z,CLOSED,False,42521,10273,1,https://github.com/kenyyuen,Improve Chinese Hong Kong Cantonese braille Translation Table,1,"['waiting', 'tables', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/1023,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1023#issuecomment-849478724,,@kenyyuen is this PR ready to go in? Do you have answers to the questions that @bertfrees is asking? Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1023,2020-11-20T08:37:18Z,2021-09-14T09:36:41Z,2021-09-14T10:12:07Z,CLOSED,False,42521,10273,1,https://github.com/kenyyuen,Improve Chinese Hong Kong Cantonese braille Translation Table,1,"['waiting', 'tables', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/1023,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1023#issuecomment-906373929,,"Hi, I'd like to clean up the open PRs. There hasn't been much activity on this particular PR lately. Please try to move it forward otherwise I will close it after the next release. If you do not have any time now but you feel that we need to come back to this issue at a later point you can always re-open it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1024,2020-11-23T12:21:12Z,2020-11-25T12:43:20Z,2020-11-25T17:42:55Z,CLOSED,False,422,93,11,https://github.com/jrbowden,More UEB work,93,['tables'],https://github.com/liblouis/liblouis/pull/1024,https://github.com/jrbowden,1,https://github.com/liblouis/liblouis/pull/1024,"This pull request:

Adds the checkmark U+2713
Fixes the emdash U+2014 (fix #811)
Fixes right single quote used as apostrophe between letters
Adds some more accented letters.","This pull request:

Adds the checkmark U+2713
Fixes the emdash U+2014 (fix #811)
Fixes right single quote used as apostrophe between letters
Adds some more accented letters.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1024,2020-11-23T12:21:12Z,2020-11-25T12:43:20Z,2020-11-25T17:42:55Z,CLOSED,False,422,93,11,https://github.com/jrbowden,More UEB work,93,['tables'],https://github.com/liblouis/liblouis/pull/1024,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1024#issuecomment-732165915,"This pull request:

Adds the checkmark U+2713
Fixes the emdash U+2014 (fix #811)
Fixes right single quote used as apostrophe between letters
Adds some more accented letters.",Only last 7 commits are new.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1024,2020-11-23T12:21:12Z,2020-11-25T12:43:20Z,2020-11-25T17:42:55Z,CLOSED,False,422,93,11,https://github.com/jrbowden,More UEB work,93,['tables'],https://github.com/liblouis/liblouis/pull/1024,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1024#issuecomment-733118308,"This pull request:

Adds the checkmark U+2713
Fixes the emdash U+2014 (fix #811)
Fixes right single quote used as apostrophe between letters
Adds some more accented letters.","Took the 7 new commits, cleaned up the commit messages a bit and push to this new branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1024,2020-11-23T12:21:12Z,2020-11-25T12:43:20Z,2020-11-25T17:42:55Z,CLOSED,False,422,93,11,https://github.com/jrbowden,More UEB work,93,['tables'],https://github.com/liblouis/liblouis/pull/1024,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1024#issuecomment-733683988,"This pull request:

Adds the checkmark U+2713
Fixes the emdash U+2014 (fix #811)
Fixes right single quote used as apostrophe between letters
Adds some more accented letters.",Merged in ead2156,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1025,2020-11-24T17:49:49Z,2020-11-25T12:20:12Z,2020-11-25T12:20:20Z,MERGED,True,70,65,3,https://github.com/bertfrees,Fix for issue #881,2,[],https://github.com/liblouis/liblouis/pull/1025,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1025,Fix for issue #881.,Fix for issue #881.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1025,2020-11-24T17:49:49Z,2020-11-25T12:20:12Z,2020-11-25T12:20:20Z,MERGED,True,70,65,3,https://github.com/bertfrees,Fix for issue #881,2,[],https://github.com/liblouis/liblouis/pull/1025,https://github.com/aaclause,2,https://github.com/liblouis/liblouis/pull/1025#issuecomment-733282639,Fix for issue #881.,Thanks a lot for the fix!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1026,2020-11-24T22:07:14Z,2020-11-27T12:00:42Z,2020-11-27T12:00:48Z,MERGED,True,22,109,2,https://github.com/bertfrees,Improve and greatly simplify implementation of UEB numeric space,1,[],https://github.com/liblouis/liblouis/pull/1026,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1026,"Fixes #1012
@mehgcap @jrbowden @MikeGray-APH This might interest you guys.","Fixes #1012
@mehgcap @jrbowden @MikeGray-APH This might interest you guys.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1027,2020-11-25T11:54:14Z,2020-11-25T18:24:17Z,2020-11-25T18:32:40Z,MERGED,True,202,16,12,https://github.com/bertfrees,Bashkir and Uzbek,3,['tables'],https://github.com/liblouis/liblouis/pull/1027,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1027,This replaces PRs #1015 and #1005.,This replaces PRs #1015 and #1005.,True,{'HOORAY': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1028,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.","We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1028#issuecomment-733880305,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.",@HenriApperloo Is this change OK for you?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1028#issuecomment-733880897,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.",@leonardder I'm not sure if Mr. Fleizach also contacted you? I haven't touched the computer braille table yet.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/leonardder,4,https://github.com/liblouis/liblouis/pull/1028#issuecomment-733885122,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.","I'm happy for both tables to be changed to LGPL 2.1. I'm also allowed to speak on behalf of Babbage B.V. with regard to this.
If @HenriApperloo doesn't check his Github frequently, I""m happy to try and get in touch with him if that helps you. Actually, having consent from the director of the CBB should be ok.
I assume that LGPL 2.1 is a blocker for Apple to include these tables in iOS?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1028#issuecomment-733894184,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.","Yes I assume so. This has been an long-standing issue. I'm personally not too happy with the change – IMO 3 is better than 2.1 – but there was a general consensus within the Liblouis community that we want to do this in order to get maximum exposure, so I follow.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/leonardder,6,https://github.com/liblouis/liblouis/pull/1028#issuecomment-737855264,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.",Just received consent by phone from @HenriApperloo that he is happy with the change.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1028#issuecomment-737886992,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.",@leonardder Thank you!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1028#issuecomment-738754484,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.","I updated the wiki page for licensing, but I think I don't quite get for which tables we got permission by Dedicon. Maybe my list of consenting copyright holders in not correct (https://github.com/liblouis/liblouis/wiki/Licensing-of-liblouis-tables#copyright-holders-to-ask)?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1028#issuecomment-738757624,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.","Shouldn't that list of consenting copyright holders be per table?
Anyway, we have official consent from Dedicon for this PR. For the other PR, if we assume Davy can speak on behalf of his organization, things are also OK.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1028,2020-11-25T18:29:35Z,2021-02-15T13:30:04Z,2021-02-15T13:30:10Z,MERGED,True,4,4,4,https://github.com/bertfrees,Change license of Dutch uncontracted braille table to LGPL 2.1,2,[],https://github.com/liblouis/liblouis/pull/1028,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/1028#issuecomment-738758869,"We got this request from Chris Fleizach, iOS Accessibility Manager at Apple. Bert Frees, Paul Rambags and Davy Kager all gave their permission. We haven't heard from Henri Apperloo (CBB).
See also #26.","Shouldn't that list of consenting copyright holders be per table?

Well, in that case I guess yes :-). So far copyright holders gave their consent for all their work.

Anyway, we have official consent from Dedicon for this PR. For the other PR, if we assume Davy can speak on behalf of his organization, things are also OK.

OK, I guess I can update the wiki page after the PRs go in.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1030,2020-11-26T16:59:25Z,2020-11-27T11:59:15Z,2020-11-27T12:01:05Z,MERGED,True,57,23,8,https://github.com/bertfrees,Update < and > symbols in the Arabic tables thanks to Ikrami Ahmad,1,['tables'],https://github.com/liblouis/liblouis/pull/1030,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1030,Also added references to the Unified Arabic Braille Project website.,Also added references to the Unified Arabic Braille Project website.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1031,2020-11-27T06:14:47Z,2020-11-27T07:05:42Z,2020-11-27T07:05:49Z,CLOSED,False,23,0,1,https://github.com/egli,Try gh actions for ci,1,[],https://github.com/liblouis/liblouis/pull/1031,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1031,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1031,2020-11-27T06:14:47Z,2020-11-27T07:05:42Z,2020-11-27T07:05:49Z,CLOSED,False,23,0,1,https://github.com/egli,Try gh actions for ci,1,[],https://github.com/liblouis/liblouis/pull/1031,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1031#issuecomment-734681120,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,Replaced by #1032,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1032,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734768821,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,Nice,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734792190,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"Well, this was a little experiment to see how far I would get. I'm quite happy with the result so far. It looks not as hard as I had anticipated and I think we could migrate to it. The two mingw based cross-compile builds should also be pretty straight-forward to port, either as a Dockerimage (see https://docs.github.com/en/free-pro-team@latest/actions/creating-actions/creating-a-docker-container-action) or just running inside the Ubuntu image",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734799199,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"The three builds that you have already done are the most important. It is rather rare that a MinGW build will fail if the other builds pass. Same with the JavaScript build. It is important that it is built and deployed, but it's OK if we need to wait a day.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734896394,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"Wow, even mingw works now",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734896938,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,Wow you've been busy. Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734897691,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,I see you have skipped the deploying of artifacts for now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734898218,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"How does it work for pull requests? Does it check only the branch, or does it also check the auto-merged branch, like Travis does?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734899730,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"I see you have skipped the deploying of artifacts for now.

Yes that is an extra step that you can do at the end",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734900017,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"How does it work for pull requests? Does it check only the branch, or does it also check the auto-merged branch, like Travis does?

Hm, that I do not know",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734900445,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"Well, not so important, if you want to be sure you can always rebase or merge and then push to the branch again for a final check. It's not always auto-mergeable anyway.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734901183,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"Yes that is an extra step that you can do at the end

Did you mean me?
As far as I'm concerned we can use Travis for that for now. We disable everything except MinGW and JS.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,13,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734989118,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"Yes that is an extra step that you can do at the end

Did you mean me?

No I meant that the artifact storing can be added fairly easily, once you have the artifacts. I can do that. Afaikt all you do is to add something along the following to the jobs:
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: name-of-artifact
          path: |
            path-to-artifact
            !dist/**/*.md
see https://docs.github.com/en/free-pro-team@latest/actions/guides/storing-workflow-data-as-artifacts

As far as I'm concerned we can use Travis for that for now. We disable everything except MinGW and JS.

OK, I was thinking we could even use the artifact stuff to store the nightly builds, so that part would no longer be needed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/1032#issuecomment-734989660,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,You mean not upload them to releases?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,15,https://github.com/liblouis/liblouis/pull/1032#issuecomment-735451478,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"So I added the upload-artifact which stores the built binaries in ""artifacts"" as described in Storing workflow data as artifacts. These artifacts will be deleted after a ""retention period"", which is 90 days by default. For nightly builds (or builds for each commit rather) this seems like a useful feature to have.
To upload them to a release we could use the upload-a-release-asset action. But then we need a release to upload to. I guess we could use the one that is used now. It's a bit hidden though. But this artifact thing seems even more hidden.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/1032#issuecomment-735463434,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"90 days sounds perfect for us as we release every 90 days. Although, maybe it's a bit overkill to save an artifact for each and every commit. Currently we only keep the last commit.
If we can make the artifact of the last commit easy to find we could use this instead of the special ""snapshot"" tag.
Does the ""upload-a-release-asset"" action also have an easy way to delete assets?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/1032#issuecomment-737129261,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"If we can make the artifact of the last commit easy to find we could use this instead of the special ""snapshot"" tag.

@egli As far as I understand this is not fixed yet. https://github.com/liblouis/liblouis/releases/snapshot is not updated anymore and http://liblouis.org/downloads still points to this link.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,18,https://github.com/liblouis/liblouis/pull/1032#issuecomment-737160951,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"As far as I understand this is not fixed yet. https://github.com/liblouis/liblouis/releases/snapshot is not updated anymore and http://liblouis.org/downloads still points to this link.

OK, I had hoped that the artifacts would be easily discoverable, but they aren't really. So I guess instead of uploading the zip to the artifacts we should upload it to the shapshot release page (using the upload-a-release-asset action).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1032,2020-11-27T06:18:40Z,2020-11-30T22:04:06Z,2021-03-03T15:45:51Z,MERGED,True,196,10,5,https://github.com/egli,Try gh actions for ci,14,[],https://github.com/liblouis/liblouis/pull/1032,https://github.com/egli,19,https://github.com/liblouis/liblouis/pull/1032#issuecomment-789810988,based on the starter-workflow to build C projects from https://github.com/actions/starter-workflows/tree/main/ci,"I think they changed the discoverability of the artifacts. It is slightly better now, see https://github.com/liblouis/liblouis/actions/runs/618007033 for example.
As for the asset upload I was thinking of something along the lines of my upload-release-asset action, that I created for daisyproducer2",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1033,2020-11-30T21:00:42Z,2020-12-01T11:49:11Z,2020-12-01T16:03:54Z,MERGED,True,0,11,1,https://github.com/sthibaul,tests: Drop reference to the removed ru-ru-g1 table,2,['needs fixup'],https://github.com/liblouis/liblouis/pull/1033,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1033,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1033,2020-11-30T21:00:42Z,2020-12-01T11:49:11Z,2020-12-01T16:03:54Z,MERGED,True,0,11,1,https://github.com/sthibaul,tests: Drop reference to the removed ru-ru-g1 table,2,['needs fixup'],https://github.com/liblouis/liblouis/pull/1033,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1033#issuecomment-736064511,,Thanks. I blame our CI system which isn't functioning properly.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1035,2020-12-03T10:39:32Z,2020-12-07T08:27:17Z,2020-12-07T08:27:28Z,MERGED,True,1,1,1,https://github.com/leonardder,Change license of Dutch 8 dot computer braille table to LGPL 2.1,2,['needs fixup'],https://github.com/liblouis/liblouis/pull/1035,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/1035,"See also #26, #1028.
Contribution by Babbage dates back to the time that I worked there. No Babbage contributions have been made after I left the organisation.","See also #26, #1028.
Contribution by Babbage dates back to the time that I worked there. No Babbage contributions have been made after I left the organisation.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1035,2020-12-03T10:39:32Z,2020-12-07T08:27:17Z,2020-12-07T08:27:28Z,MERGED,True,1,1,1,https://github.com/leonardder,Change license of Dutch 8 dot computer braille table to LGPL 2.1,2,['needs fixup'],https://github.com/liblouis/liblouis/pull/1035,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1035#issuecomment-738130563,"See also #26, #1028.
Contribution by Babbage dates back to the time that I worked there. No Babbage contributions have been made after I left the organisation.","For the grade 0 table we have permission from everyone including Dedicon (Paul Rambags, I can forward you the email), see the https://github.com/liblouis/liblouis/pull/1028/files.
The computer braille table is much newer than the https://github.com/liblouis/liblouis/wiki/Licensing-of-liblouis-tables page and AFAIK done by Leonard, not sure why Dedicon is listed there.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1035,2020-12-03T10:39:32Z,2020-12-07T08:27:17Z,2020-12-07T08:27:28Z,MERGED,True,1,1,1,https://github.com/leonardder,Change license of Dutch 8 dot computer braille table to LGPL 2.1,2,['needs fixup'],https://github.com/liblouis/liblouis/pull/1035,https://github.com/leonardder,3,https://github.com/liblouis/liblouis/pull/1035#issuecomment-738137114,"See also #26, #1028.
Contribution by Babbage dates back to the time that I worked there. No Babbage contributions have been made after I left the organisation.","Dedicon is listed in the dutch 8 dot table, but only because @dkager contributed to the table on behalf of them. @dkager agreed with the license change, so I guess that's fine.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1035,2020-12-03T10:39:32Z,2020-12-07T08:27:17Z,2020-12-07T08:27:28Z,MERGED,True,1,1,1,https://github.com/leonardder,Change license of Dutch 8 dot computer braille table to LGPL 2.1,2,['needs fixup'],https://github.com/liblouis/liblouis/pull/1035,https://github.com/dkager,4,https://github.com/liblouis/liblouis/pull/1035#issuecomment-738616014,"See also #26, #1028.
Contribution by Babbage dates back to the time that I worked there. No Babbage contributions have been made after I left the organisation.","I only agreed to the change for 6-dot, but have no problem with 8-dot either.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1037,2020-12-03T15:29:01Z,2020-12-03T16:07:06Z,2020-12-03T16:07:11Z,MERGED,True,39,39,3,https://github.com/egli,Change the license of the tables by Igor B. Poretsky to LGPLv2.1,1,[],https://github.com/liblouis/liblouis/pull/1037,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1037,Fixes #1036,Fixes #1036,True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1039,2020-12-11T10:37:42Z,2021-01-18T14:40:26Z,2021-01-18T19:32:45Z,MERGED,True,58,0,1,https://github.com/egli,Port the emscripten build to gh actions,18,[],https://github.com/liblouis/liblouis/pull/1039,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1039,"Building and testing seems to work well. Uploading to the snapshot release worked the first time, but seems to fail now.","Building and testing seems to work well. Uploading to the snapshot release worked the first time, but seems to fail now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1039,2020-12-11T10:37:42Z,2021-01-18T14:40:26Z,2021-01-18T19:32:45Z,MERGED,True,58,0,1,https://github.com/egli,Port the emscripten build to gh actions,18,[],https://github.com/liblouis/liblouis/pull/1039,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1039#issuecomment-743287543,"Building and testing seems to work well. Uploading to the snapshot release worked the first time, but seems to fail now.",@egli If an asset with a name already exists it will not simply be overwritten. The last build worked because I removed it manually.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1039,2020-12-11T10:37:42Z,2021-01-18T14:40:26Z,2021-01-18T19:32:45Z,MERGED,True,58,0,1,https://github.com/egli,Port the emscripten build to gh actions,18,[],https://github.com/liblouis/liblouis/pull/1039,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1039#issuecomment-749019235,"Building and testing seems to work well. Uploading to the snapshot release worked the first time, but seems to fail now.","This action seems to have a bug. According to the source code it should delete existing assets, but alas it does not.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1039,2020-12-11T10:37:42Z,2021-01-18T14:40:26Z,2021-01-18T19:32:45Z,MERGED,True,58,0,1,https://github.com/egli,Port the emscripten build to gh actions,18,[],https://github.com/liblouis/liblouis/pull/1039,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1039#issuecomment-749021187,"Building and testing seems to work well. Uploading to the snapshot release worked the first time, but seems to fail now.",Hmm too bad. Any idea which action we could use to delete an asset?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1039,2020-12-11T10:37:42Z,2021-01-18T14:40:26Z,2021-01-18T19:32:45Z,MERGED,True,58,0,1,https://github.com/egli,Port the emscripten build to gh actions,18,[],https://github.com/liblouis/liblouis/pull/1039,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1039#issuecomment-749034622,"Building and testing seems to work well. Uploading to the snapshot release worked the first time, but seems to fail now.","OK, that one seems to work. Obscure provider though.",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1041,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/1041#issuecomment-753307199,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","This commit makes some new definitions for different variants of symbols. Perfectly, It's necessary to do some work related to #1043, if it's possible at all.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,3,https://github.com/liblouis/liblouis/pull/1041#issuecomment-765611187,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Hello!
I found some bugs connected with processing of capital letters and some punctuation symbols (see changed ru.yaml). I hope I've managed to correct all problems that I've found, but I'm not sure if it's the best way to do it, I completely don't understand why some rules doesn't work by default...
I've also added some emoji-symbols. But I don't know if it can results in problems. @bertfrees how many apps now use 16-bit-compiled Liblouis? Symbols that I've add are the 20-bit Unicode characters. I tested it on NVDA, works fine, but they're not super important, so I can remove it back if there're any problems with compatibility.
Also, some quotes and other signs have been added.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,4,https://github.com/liblouis/liblouis/pull/1041#issuecomment-765612554,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Hmm, what are the problems with GitHub actions?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1041#issuecomment-766643719,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Hmm, what are the problems with GitHub actions?

Hm, looking at the logs it seems that the tables do not compile with ucs2. And for some reason when testing make distcheck with ucs4 it seems to invoke configure without --enable-ucs4 and consequently fails also.
The basic problem is that these new tables do not work with UCS2. At the moment there is no way to run the test suite only for UCS4. We could add some trickery to the Makefiles to run some tests only if UCS4 is enabled but this is finicky.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,6,https://github.com/liblouis/liblouis/pull/1041#issuecomment-766717155,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","@egli Is it because of adding emoji-symbols which are 20-bit Unicode characters? I can remove them, but the same problem in #1046.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/1041#issuecomment-770407246,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Well, I've commented out strings with emoji definitions, but despite this, it has been failur again! I don't know if I can add new commits in this PR and in #1046...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,8,https://github.com/liblouis/liblouis/pull/1041#issuecomment-778820895,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Hello!
I've completely changed the processing of spacing. All spacing rules, such is passing space after comma and math symbols are implemented by using correct opcode. It can look more difficult, but it works better.
All OK, but I have 1 failure test with error ""Unexpected pass"". @bertfrees can You explaine meaning of this?
The problem with cross-compiling, as I see, is still relevant: some automatic checks in this PR are failure...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779021499,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","All OK, but I have 1 failure test with error ""Unexpected pass"". @bertfrees can You explaine meaning of this?

Unexpected pass means that a test that was marked as expected failure (xfail) actually passed. Presumably you fixed the table but the test is still marked as xfail. Just remove the xfail if the test now passes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779251815,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","@Futyn-Maker This PR looks very good! Only comment I have is that there are quite a lot of changes done to the table in comparison with the number of tests that were added. I'd like to see a bit more work done on this before the release, if possible. For instance the math and other symbols that you added, the spacing related stuff that you reworked, and the swapping of accents and letters.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779255156,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Regarding the emoji, Christian and I discussed it and our plan was to just leave out the Russian table from the 16-bit distribution. I don't know how many application use it. Our plan was to simply leave out certain tables in order to encourage the transition to 32-bit Liblouis. But if you are afraid that this way some users will miss out on your improvements, maybe you can create a separate table that does not not include the emoji (which we will include in the 16-bit version)?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779275563,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","The basic problem is that these new tables do not work with UCS2. At the moment there is no way to run the test suite only for UCS4. We could add some trickery to the Makefiles to run some tests only if UCS4 is enabled but this is finicky.

I was wrong about that. There is a way to run some (YAML) tests only for UCS4, see tests/Makefile.am. Just add something along the line of the following (and remove the other entry for ru.yaml above:
if HAVE_UCS4
dist_braille_specs_TESTS +=				\
	braille-specs/hu-hu-g1-hyph_harness.yaml        \
        braille-specs/ru.yaml
endif",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,13,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779291306,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Hello @egli and @bertfrees! Thanks for answers.

I'd like to see a bit more work done on this before the release, if possible.

OK, I'll do it during this week.

Regarding the emoji, Christian and I discussed it and our plan was to just leave out the Russian table from the 16-bit distribution.

HM, emoji is not very important. I think I'll temporarily give up from adding these. These strings now is commented out, but I don't understand why errors are still in PR...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,14,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779368652,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey",I've created three additional attributes because I need separate processing of dashes for dialogs and direct speech. Everything seems to be OK.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779397812,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey",@Futyn-Maker Something went wrong. I can't view your last commit. Git says it's a binary file.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,16,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779411822,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Very strange... I see it as a binary file in the commit, but it can be read in my branch. Can you see it here?https://github.com/Futyn-Maker/liblouis/blob/master/tables/ru-litbrl.ctb",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,17,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779879016,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","Damn, I don't know why it's shown as a binary file... When choosing the file and click ""raw"", all OK.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/1041#issuecomment-779882023,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey",No worries I can fix it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,19,https://github.com/liblouis/liblouis/pull/1041#issuecomment-782599367,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey",This is to set the Cyrillic mode after Latins and Greeks. Early it worked only in ru-litbrl-detailed.utb only for uppercase letters. I'll provide the couple of additional tests bit later.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/1041#issuecomment-783322099,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","@Futyn-Maker You changed the PR to ""ready for review"", I presume that means no more changes are coming and we can merge? Could you please summarize the changes? I don't think your initial summary is complete anymore.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,21,https://github.com/liblouis/liblouis/pull/1041#issuecomment-783329448,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey","You changed the PR to ""ready for review"", I presume that means no more changes are coming and we can merge?

Well, I'm not going to make any changes in tables, yes.

Could you please summarize the changes?

I'll add NEWS-file soon here.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/1041#issuecomment-783330291,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey",Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1041,2020-12-18T18:22:52Z,2021-02-23T16:11:09Z,2021-02-23T16:11:09Z,MERGED,True,293,107,5,https://github.com/Futyn-Maker,Update the Russian and Ukrainian tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1041,https://github.com/Futyn-Maker,23,https://github.com/liblouis/liblouis/pull/1041#issuecomment-783476279,"Hello! It's the improving of the ru-litbrl.ctb. Here's what I've done:

I've added two correction rules to fix the problem with ignoring always-rule after capital letters;
I've added Old-Slavac letters to provide the possibility of reading Old-Russian texts. We haven't got any official system of definitions for these letters, but I think it's better than nothing, moreover, I've added a refrence to the file which describes the system that is used in this table;
Due to some Old-Russian letters conflicts with modern Ukrainian ones, I've moved the ukrainian letters before including the Russian table in uk.utb;
Finally, I've added the new test for Old-Russian text.

I would like not to merge it before release day as I can push other changes later. I'm creating the PR now to discuss possible issues. The NEWS-file will be updated later, I think few days before release.
Andrey",Note that this news for both this PR and #1046.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1042,2020-12-21T13:55:21Z,2021-02-15T13:31:43Z,2021-02-15T13:31:46Z,MERGED,True,40,0,1,https://github.com/egli,Add a Python example how to translate html,3,['documentation'],https://github.com/liblouis/liblouis/pull/1042,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1042,Thanks to Jake Kyle,Thanks to Jake Kyle,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1044,2020-12-30T17:06:57Z,2021-02-16T08:44:21Z,2021-09-04T18:39:16Z,MERGED,True,120,74,9,https://github.com/lukaszgo1,Various fixes to Polish tables,7,[],https://github.com/liblouis/liblouis/pull/1044,https://github.com/lukaszgo1,1,https://github.com/liblouis/liblouis/pull/1044,"This PR:

Adds em dash to both computer and literary Polish tables
Removes some definitions which made it impossible to back translate quoted strings from the Grade 1 table
Fixes back translation of capital M and adds test for back translation of all Latin capital letters for  Grade 1 table.","This PR:

Adds em dash to both computer and literary Polish tables
Removes some definitions which made it impossible to back translate quoted strings from the Grade 1 table
Fixes back translation of capital M and adds test for back translation of all Latin capital letters for  Grade 1 table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1044,2020-12-30T17:06:57Z,2021-02-16T08:44:21Z,2021-09-04T18:39:16Z,MERGED,True,120,74,9,https://github.com/lukaszgo1,Various fixes to Polish tables,7,[],https://github.com/liblouis/liblouis/pull/1044,https://github.com/lukaszgo1,2,https://github.com/liblouis/liblouis/pull/1044#issuecomment-774491318,"This PR:

Adds em dash to both computer and literary Polish tables
Removes some definitions which made it impossible to back translate quoted strings from the Grade 1 table
Fixes back translation of capital M and adds test for back translation of all Latin capital letters for  Grade 1 table.",It looks like this is not in the 3.17 milestone. Is there anything to be done on my side to ensure this gets into the next release? cc @egli @bertfrees,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1044,2020-12-30T17:06:57Z,2021-02-16T08:44:21Z,2021-09-04T18:39:16Z,MERGED,True,120,74,9,https://github.com/lukaszgo1,Various fixes to Polish tables,7,[],https://github.com/liblouis/liblouis/pull/1044,https://github.com/lukaszgo1,3,https://github.com/liblouis/liblouis/pull/1044#issuecomment-774492880,"This PR:

Adds em dash to both computer and literary Polish tables
Removes some definitions which made it impossible to back translate quoted strings from the Grade 1 table
Fixes back translation of capital M and adds test for back translation of all Latin capital letters for  Grade 1 table.",I don't think CI failure is caused by this work.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1044,2020-12-30T17:06:57Z,2021-02-16T08:44:21Z,2021-09-04T18:39:16Z,MERGED,True,120,74,9,https://github.com/lukaszgo1,Various fixes to Polish tables,7,[],https://github.com/liblouis/liblouis/pull/1044,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1044#issuecomment-779193299,"This PR:

Adds em dash to both computer and literary Polish tables
Removes some definitions which made it impossible to back translate quoted strings from the Grade 1 table
Fixes back translation of capital M and adds test for back translation of all Latin capital letters for  Grade 1 table.",@lukaszgo1 I noticed you are not listed in the AUTHORS file yet. Can you add yourself please?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1044,2020-12-30T17:06:57Z,2021-02-16T08:44:21Z,2021-09-04T18:39:16Z,MERGED,True,120,74,9,https://github.com/lukaszgo1,Various fixes to Polish tables,7,[],https://github.com/liblouis/liblouis/pull/1044,https://github.com/lukaszgo1,5,https://github.com/liblouis/liblouis/pull/1044#issuecomment-779206124,"This PR:

Adds em dash to both computer and literary Polish tables
Removes some definitions which made it impossible to back translate quoted strings from the Grade 1 table
Fixes back translation of capital M and adds test for back translation of all Latin capital letters for  Grade 1 table.",@bertfrees I've added additional test. I'm in listed in authors already.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1044,2020-12-30T17:06:57Z,2021-02-16T08:44:21Z,2021-09-04T18:39:16Z,MERGED,True,120,74,9,https://github.com/lukaszgo1,Various fixes to Polish tables,7,[],https://github.com/liblouis/liblouis/pull/1044,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1044#issuecomment-779223236,"This PR:

Adds em dash to both computer and literary Polish tables
Removes some definitions which made it impossible to back translate quoted strings from the Grade 1 table
Fixes back translation of capital M and adds test for back translation of all Latin capital letters for  Grade 1 table.","You're right, sorry, I was looking at an old version of AUTHORS. It's got your old email address though.
Thanks for the test. I'll add some more context (something about it not being handled the same as a double quotation mark).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1044,2020-12-30T17:06:57Z,2021-02-16T08:44:21Z,2021-09-04T18:39:16Z,MERGED,True,120,74,9,https://github.com/lukaszgo1,Various fixes to Polish tables,7,[],https://github.com/liblouis/liblouis/pull/1044,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1044#issuecomment-779304841,"This PR:

Adds em dash to both computer and literary Polish tables
Removes some definitions which made it impossible to back translate quoted strings from the Grade 1 table
Fixes back translation of capital M and adds test for back translation of all Latin capital letters for  Grade 1 table.","It's got your old email address though.

Hmm never mind, you did that already but I missed it :/",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1045,2021-01-11T22:19:14Z,2021-03-03T15:26:55Z,2021-03-03T15:26:55Z,MERGED,True,45,0,3,https://github.com/AdamKorcz,Added fuzzer and OSS-fuzz build script,2,[],https://github.com/liblouis/liblouis/pull/1045,https://github.com/AdamKorcz,1,https://github.com/liblouis/liblouis/pull/1045,"Moving fuzzer and OSS-fuzz build script upstream as agreed here: #338 (comment)
@egli FYI","Moving fuzzer and OSS-fuzz build script upstream as agreed here: #338 (comment)
@egli FYI",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1046,2021-01-16T16:24:24Z,2021-03-04T15:54:22Z,2021-03-04T15:54:22Z,MERGED,True,178,5,9,https://github.com/Futyn-Maker,Adding new Belorussian braille tables,5,['tables'],https://github.com/liblouis/liblouis/pull/1046,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1046,"Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey","Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1046,2021-01-16T16:24:24Z,2021-03-04T15:54:22Z,2021-03-04T15:54:22Z,MERGED,True,178,5,9,https://github.com/Futyn-Maker,Adding new Belorussian braille tables,5,['tables'],https://github.com/liblouis/liblouis/pull/1046,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/1046#issuecomment-761591277,"Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey","Oops. I've thought that commits from my preveous PR not be indexed here, I'm sorry. I'm really damny of GitHub :(",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1046,2021-01-16T16:24:24Z,2021-03-04T15:54:22Z,2021-03-04T15:54:22Z,MERGED,True,178,5,9,https://github.com/Futyn-Maker,Adding new Belorussian braille tables,5,['tables'],https://github.com/liblouis/liblouis/pull/1046,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1046#issuecomment-779268199,"Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey",@Futyn-Maker is this PR dependent on #1041? Will the errors go away if the other PR is merged first?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1046,2021-01-16T16:24:24Z,2021-03-04T15:54:22Z,2021-03-04T15:54:22Z,MERGED,True,178,5,9,https://github.com/Futyn-Maker,Adding new Belorussian braille tables,5,['tables'],https://github.com/liblouis/liblouis/pull/1046,https://github.com/Futyn-Maker,4,https://github.com/liblouis/liblouis/pull/1046#issuecomment-779295268,"Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey","is this PR dependent on #1041? Will the errors go away if the other PR is merged first?

I hope, yes. Errors in this PR have appeared after errors in #1041.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1046,2021-01-16T16:24:24Z,2021-03-04T15:54:22Z,2021-03-04T15:54:22Z,MERGED,True,178,5,9,https://github.com/Futyn-Maker,Adding new Belorussian braille tables,5,['tables'],https://github.com/liblouis/liblouis/pull/1046,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1046#issuecomment-784335005,"Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey","I rebased this PR on master. Hope I did everything right.
There are failures in uk.yaml and bel.yaml.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1046,2021-01-16T16:24:24Z,2021-03-04T15:54:22Z,2021-03-04T15:54:22Z,MERGED,True,178,5,9,https://github.com/Futyn-Maker,Adding new Belorussian braille tables,5,['tables'],https://github.com/liblouis/liblouis/pull/1046,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1046#issuecomment-784336911,"Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey","Failure in bel.yaml was due to formatting error. I fixed it.
@Futyn-Maker Can you look at the failure in uk.yaml?
Input:    'Вона мріє про зів’яле листя на ґанку, але її мрії не збуваються.'
Expected: '⠺⠕⠝⠁ ⠍⠗⠽⠜ ⠏⠗⠕ ⠵⠽⠺⠄⠫⠇⠑ ⠇⠊⠎⠞⠫ ⠝⠁ ⠻⠁⠝⠅⠥⠂⠁⠇⠑ ⠹⠹ ⠍⠗⠽⠹ ⠝⠑ ⠵⠃⠥⠺⠁⠳⠞⠾⠎⠫⠲' (length 63)
Received: '⠺⠕⠝⠁ ⠍⠗⠊⠌⠑⠌⠌ ⠏⠗⠕ ⠵⠊⠌⠺⠄⠫⠇⠑ ⠇⠊⠎⠞⠫ ⠝⠁ ⠻⠁⠝⠅⠥⠂⠁⠇⠑ ⠊⠌⠌⠊⠌⠌ ⠍⠗⠊⠌⠊⠌⠌ ⠝⠑ ⠵⠃⠥⠺⠁⠳⠞⠾⠎⠫⠲' (length 74)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1046,2021-01-16T16:24:24Z,2021-03-04T15:54:22Z,2021-03-04T15:54:22Z,MERGED,True,178,5,9,https://github.com/Futyn-Maker,Adding new Belorussian braille tables,5,['tables'],https://github.com/liblouis/liblouis/pull/1046,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/1046#issuecomment-784341413,"Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey",@bertfrees Run the test with fixed uk.utb table from #1041. I've done necessary corrections connected with changes in ru-litbrl.ctb.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1046,2021-01-16T16:24:24Z,2021-03-04T15:54:22Z,2021-03-04T15:54:22Z,MERGED,True,178,5,9,https://github.com/Futyn-Maker,Adding new Belorussian braille tables,5,['tables'],https://github.com/liblouis/liblouis/pull/1046,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1046#issuecomment-784345740,"Hello!
These are two Belorussian braille tables - for literary and computer braille. They/re based on the Russian braille code.
I'll add the NEWS-file with https://github.com/pull/1041 later, this can be merged without news.
Andrey","OK, I didn't rebase correctly. It was hard to figure out what were actual changes and what were accidental reverts.
All good now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1048,2021-02-15T13:58:51Z,2021-03-04T20:13:42Z,2021-03-04T20:13:42Z,MERGED,True,2,339,14,https://github.com/egli,Drop travis as we've migrated to gh actions,4,['build system'],https://github.com/liblouis/liblouis/pull/1048,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1048,See #1021 and #1032,See #1021 and #1032,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1048,2021-02-15T13:58:51Z,2021-03-04T20:13:42Z,2021-03-04T20:13:42Z,MERGED,True,2,339,14,https://github.com/egli,Drop travis as we've migrated to gh actions,4,['build system'],https://github.com/liblouis/liblouis/pull/1048,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1048#issuecomment-779258559,See #1021 and #1032,@egli I believe we still need to change mingw.yml to upload the MinGW artifacts to the snapshot releases page. See #1032 (comment).,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1048,2021-02-15T13:58:51Z,2021-03-04T20:13:42Z,2021-03-04T20:13:42Z,MERGED,True,2,339,14,https://github.com/egli,Drop travis as we've migrated to gh actions,4,['build system'],https://github.com/liblouis/liblouis/pull/1048,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1048#issuecomment-790710226,See #1021 and #1032,"OK, upload of the mingw artifacts to the snapshot release works",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1050,2021-02-21T18:38:22Z,2021-03-05T16:21:29Z,2021-03-05T16:26:11Z,MERGED,True,99,3,4,https://github.com/aaclause,tables/fr-bfu-comp6: favor @ in backtranslate for ⠜ (insted of æ),5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1050,https://github.com/aaclause,1,https://github.com/liblouis/liblouis/pull/1050,"æ is used in some French words (e.g. curriculum vitæ, et cætera, ex æquo,, nævus, tænia, Lætitia). In French braille 6-dots, the pattern is ⠜, as for that of @ and ä (not used in French words).
Currently, liblouis gives us æ in backtranslate:
$ lou_translate -v
lou_translate (Liblouis) 3.16.1
Copyright (C) 2019 ViewPlus Technologies, Inc. and JJB Software, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John J. Boyer.
$ echo ""⠋⠕⠕⠜⠃⠁⠗⠲⠉⠕⠍""|lou_translate -b fr-bfu-comp6.utb
fooæbar.com
$

It would be more convenient to get @ (according my experience and other some people). For example, it's very frustrating with the Braille Screen Input on iOS when we want to write an email address.
So this PR suggests to favor @ in backtranslate for ⠜. This is the behavior adopted by Duxbury tables. Also I added some tests.
CC @garconvacher, @MichelSuch","æ is used in some French words (e.g. curriculum vitæ, et cætera, ex æquo,, nævus, tænia, Lætitia). In French braille 6-dots, the pattern is ⠜, as for that of @ and ä (not used in French words).
Currently, liblouis gives us æ in backtranslate:
$ lou_translate -v
lou_translate (Liblouis) 3.16.1
Copyright (C) 2019 ViewPlus Technologies, Inc. and JJB Software, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John J. Boyer.
$ echo ""⠋⠕⠕⠜⠃⠁⠗⠲⠉⠕⠍""|lou_translate -b fr-bfu-comp6.utb
fooæbar.com
$

It would be more convenient to get @ (according my experience and other some people). For example, it's very frustrating with the Braille Screen Input on iOS when we want to write an email address.
So this PR suggests to favor @ in backtranslate for ⠜. This is the behavior adopted by Duxbury tables. Also I added some tests.
CC @garconvacher, @MichelSuch",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1050,2021-02-21T18:38:22Z,2021-03-05T16:21:29Z,2021-03-05T16:26:11Z,MERGED,True,99,3,4,https://github.com/aaclause,tables/fr-bfu-comp6: favor @ in backtranslate for ⠜ (insted of æ),5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1050,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1050#issuecomment-783242509,"æ is used in some French words (e.g. curriculum vitæ, et cætera, ex æquo,, nævus, tænia, Lætitia). In French braille 6-dots, the pattern is ⠜, as for that of @ and ä (not used in French words).
Currently, liblouis gives us æ in backtranslate:
$ lou_translate -v
lou_translate (Liblouis) 3.16.1
Copyright (C) 2019 ViewPlus Technologies, Inc. and JJB Software, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John J. Boyer.
$ echo ""⠋⠕⠕⠜⠃⠁⠗⠲⠉⠕⠍""|lou_translate -b fr-bfu-comp6.utb
fooæbar.com
$

It would be more convenient to get @ (according my experience and other some people). For example, it's very frustrating with the Braille Screen Input on iOS when we want to write an email address.
So this PR suggests to favor @ in backtranslate for ⠜. This is the behavior adopted by Duxbury tables. Also I added some tests.
CC @garconvacher, @MichelSuch",By the way I noticed there isn't a copyright line in this table yet.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1050,2021-02-21T18:38:22Z,2021-03-05T16:21:29Z,2021-03-05T16:26:11Z,MERGED,True,99,3,4,https://github.com/aaclause,tables/fr-bfu-comp6: favor @ in backtranslate for ⠜ (insted of æ),5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1050,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1050#issuecomment-783286364,"æ is used in some French words (e.g. curriculum vitæ, et cætera, ex æquo,, nævus, tænia, Lætitia). In French braille 6-dots, the pattern is ⠜, as for that of @ and ä (not used in French words).
Currently, liblouis gives us æ in backtranslate:
$ lou_translate -v
lou_translate (Liblouis) 3.16.1
Copyright (C) 2019 ViewPlus Technologies, Inc. and JJB Software, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John J. Boyer.
$ echo ""⠋⠕⠕⠜⠃⠁⠗⠲⠉⠕⠍""|lou_translate -b fr-bfu-comp6.utb
fooæbar.com
$

It would be more convenient to get @ (according my experience and other some people). For example, it's very frustrating with the Braille Screen Input on iOS when we want to write an email address.
So this PR suggests to favor @ in backtranslate for ⠜. This is the behavior adopted by Duxbury tables. Also I added some tests.
CC @garconvacher, @MichelSuch","No copyright and license in the YAML test either. @Andre9642 Mind if we add something like this?
# Copyright © 2018, 2021 by André-Abush Clause <dev@andreabc.net>
# Copyright © 2019 by Ludovic Oger <oger.ludovic@gmail.com>
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved. This file is offered as-is,
# without any warranty.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1050,2021-02-21T18:38:22Z,2021-03-05T16:21:29Z,2021-03-05T16:26:11Z,MERGED,True,99,3,4,https://github.com/aaclause,tables/fr-bfu-comp6: favor @ in backtranslate for ⠜ (insted of æ),5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1050,https://github.com/aaclause,4,https://github.com/liblouis/liblouis/pull/1050#issuecomment-783316696,"æ is used in some French words (e.g. curriculum vitæ, et cætera, ex æquo,, nævus, tænia, Lætitia). In French braille 6-dots, the pattern is ⠜, as for that of @ and ä (not used in French words).
Currently, liblouis gives us æ in backtranslate:
$ lou_translate -v
lou_translate (Liblouis) 3.16.1
Copyright (C) 2019 ViewPlus Technologies, Inc. and JJB Software, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John J. Boyer.
$ echo ""⠋⠕⠕⠜⠃⠁⠗⠲⠉⠕⠍""|lou_translate -b fr-bfu-comp6.utb
fooæbar.com
$

It would be more convenient to get @ (according my experience and other some people). For example, it's very frustrating with the Braille Screen Input on iOS when we want to write an email address.
So this PR suggests to favor @ in backtranslate for ⠜. This is the behavior adopted by Duxbury tables. Also I added some tests.
CC @garconvacher, @MichelSuch","No problem for me. It's the same for fr-bfu-comp8.yaml and fr-bfu-g2.yaml. Also Michel Such had helped me about fr-bfu-g2.yaml, please include him :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1050,2021-02-21T18:38:22Z,2021-03-05T16:21:29Z,2021-03-05T16:26:11Z,MERGED,True,99,3,4,https://github.com/aaclause,tables/fr-bfu-comp6: favor @ in backtranslate for ⠜ (insted of æ),5,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1050,https://github.com/aaclause,5,https://github.com/liblouis/liblouis/pull/1050#issuecomment-783862435,"æ is used in some French words (e.g. curriculum vitæ, et cætera, ex æquo,, nævus, tænia, Lætitia). In French braille 6-dots, the pattern is ⠜, as for that of @ and ä (not used in French words).
Currently, liblouis gives us æ in backtranslate:
$ lou_translate -v
lou_translate (Liblouis) 3.16.1
Copyright (C) 2019 ViewPlus Technologies, Inc. and JJB Software, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John J. Boyer.
$ echo ""⠋⠕⠕⠜⠃⠁⠗⠲⠉⠕⠍""|lou_translate -b fr-bfu-comp6.utb
fooæbar.com
$

It would be more convenient to get @ (according my experience and other some people). For example, it's very frustrating with the Braille Screen Input on iOS when we want to write an email address.
So this PR suggests to favor @ in backtranslate for ⠜. This is the behavior adopted by Duxbury tables. Also I added some tests.
CC @garconvacher, @MichelSuch","Looks good. ""@"" as the default sounds like a good idea. But shouldn't there ideally be some rules (word rules) to handle æ correctly also?

That's actually a very good idea, I'll add it. :)
For reference ⬇️
Words/locutions containing æ:

æchmea
ægithale
ægocère
ægopodium
ægosome
ælie
ænigmatite
æolidia
æolis
æschne
æthuse
althæa
anabæna
angræcum
archæocète
balæniceps
cæcal
cæcale
cæcaux
cæcilius
cæcotrophie
cæcum
cælostat
cæsine
chænichthys
chamæcyparis
chamædorea
cratægus
cuphæa
curriculum vitæ
dracæna
élæagnacées
elæagnus
elæis
enterobacteriaceæ
et cætera
ex æquo
ex æquo et bono
furcræa
grællsia
lælia
læliocattleya
lætilia
linnæa
lonchæa
microsphæra
nævo-cellulaire
nævus
penæus
pygære
sphærotheca
suæda
tæniasis
tropæloacées

Words/locutions containing ä:

län
Länder
ländler
minnesänger
skärgård
tjäle",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1052,"Before we can merge these we need the following

 yaml tests
 approval of the license","Before we can merge these we need the following

 yaml tests
 approval of the license",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1052#issuecomment-786514131,"Before we can merge these we need the following

 yaml tests
 approval of the license","We should also

 fix metadata (including display names)
 include a reference to a specification
 fix table names (e.g. bg-lit-6dots.ctb is not contracted braille. Table name could be simplified to bg.utb for instance)
 eliminate bg-chardefs.cti
 Rumyana seems to have taken some inspiration from the Russian table, but the Russian table has since been improved (notably to the multipass rules). So maybe some improvements can be done to the Bulgarian table.
 mention new tables in NEWS
 what is Rumyana's colleague's name? shouldn't it be mentioned in the table?
 add Rumyana and his colleague to AUTHORS",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1052#issuecomment-786528223,"Before we can merge these we need the following

 yaml tests
 approval of the license",Ugh. Now I see that there was already a bg.ctb for computer braille.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1052#issuecomment-786554158,"Before we can merge these we need the following

 yaml tests
 approval of the license","Ugh. Now I see that there was already a bg.ctb for computer braille.

So?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1052#issuecomment-786584254,"Before we can merge these we need the following

 yaml tests
 approval of the license",Dunno. Now the rename action just felt useless.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1052#issuecomment-787733081,"Before we can merge these we need the following

 yaml tests
 approval of the license","Rumyana writes:

Hi Christian,
Thanks for your immediate answer.
Thanks also for removing the files which were already in liblouis. I forgot to delete them from the folder.
Of course, I agree to license my work under the LGPLv2.1+.
I’m not a programmer, I’m only a proof-reader. I’ve tested my table on the braille displays with the JAWS and NVDA. With them they work correctly. I don’t know whether they’ll work also with braille printers. Our hope is to achieve that.
I don’t know about YAML tests and what its mean.
Please excuse me, but I don’t know about PR too. Please explain to me what is it and where I can read about it. If it is very difficult, I can ask my colleague for help.
Thanks a lot again
Rumyana",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/1052#issuecomment-800863941,"Before we can merge these we need the following

 yaml tests
 approval of the license","Hi Rumyana
I would like to integrate the Bulgarian 6 dot tables. In that context I have a few questions:

Is there an official specification for Bulgarian 6 dot braille?
Can you give me a few tests in the form of word and corresponding braille? This can be a text file, a csv or any format you desire.
The last point isn't really a question, more of a note: As far as I can tell your table is partly based on the Russian table. Now some of the multipass rules in the russian tables had problems which recently were fixed. You might want to check again if some of your context rules need to be adapted.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1052#issuecomment-800864949,"Before we can merge these we need the following

 yaml tests
 approval of the license","Rumyana writes:

Hi, Christian,
Thank you for your attention to my table.
I'll try to answer to your questions.

I'm working as a proof-reader about 30 years and now I've included in the table a lot of standard braille signs and rules, so that the table provides very pleasant reading as a normal braille book. All letters, signs and punctuation are official Bulgarian braille code.
Excuse me, but I don't understand what I have to do for testing you want. What it mean? Do you have I send some bulgarian text or to do another thing? Unfortunately, I'm not a programmer and I have problem with your terminology. Please tell me what I have to do.
Yes, our table is based on the Russian table as a pattern, but we've created our own rules and they work properly according our usage of capital letters, numbers, quotes, dashes, etc.

Thank you again and excuse me, that I don't answer properly.
Best regards,
Rumyana",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/1052#issuecomment-849471384,"Before we can merge these we need the following

 yaml tests
 approval of the license",Sent him another mail explaining what kind of test data we would like to have.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1052#issuecomment-849483124,"Before we can merge these we need the following

 yaml tests
 approval of the license",Thanks!!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/1052#issuecomment-851476537,"Before we can merge these we need the following

 yaml tests
 approval of the license","Rumyana writes:

Thank you for your valuable help. I read for yaml tests and yaml files. I can make some tests using the Russian yaml file and writing some examples according to ours rules. For example, dialogs and mixing digits and letters. The problem is that I can't run yaml test and can't understand whether it is true or failed. If you want I can write the file and send to you for testing. If there is any errors, please write me back to think how to fix them. Maybe I have to send my table again. I've  included the file braille-patterns.cti to display unicode symbols for braille dot patterns. Will you include it for me?
Please excuse me for my incorrect English.

Then later:

I've send you some small test. Please check if it is correct.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,12,https://github.com/liblouis/liblouis/pull/1052#issuecomment-851504680,"Before we can merge these we need the following

 yaml tests
 approval of the license",@bertfrees what's the problem with display-names again? I really need to know how to handle this problem.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/1052#issuecomment-852130033,"Before we can merge these we need the following

 yaml tests
 approval of the license","See the log file: the script to generate display names suggest ""Bulgarian braille"" instead of ""Bulgarian uncontracted braille"". The reasoning is that when there are no contractions there are no different grades to choose from so the name of the table should not mention contraction grades at all. To reach consistency across all tables the display-name and index-name metadata in the table should be fixed (and the display-names index file should be updated accordingly).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,14,https://github.com/liblouis/liblouis/pull/1052#issuecomment-853709573,"Before we can merge these we need the following

 yaml tests
 approval of the license","Rumyana writes:

I'm very happy that the tests are correct.
I think there isn't a problem with renaming the file.
Unfortunately, I can't send you the link to electronic document about Bulgarian braille code.
We've created the Braille system for all braille signs - letters, punctuation, mathematical and chemical symbols, but I don't have an electronic variant of it.
Thank you very much for help.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/1052#issuecomment-853766422,"Before we can merge these we need the following

 yaml tests
 approval of the license",Do we have some more info about the display table?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,16,https://github.com/liblouis/liblouis/pull/1052#issuecomment-853802340,"Before we can merge these we need the following

 yaml tests
 approval of the license","Do we have some more info about the display table?

No, not that I'd know of. Is the question about the intended encoding or whether it is needed as an include in the table?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/1052#issuecomment-853803271,"Before we can merge these we need the following

 yaml tests
 approval of the license",The intended character set.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,18,https://github.com/liblouis/liblouis/pull/1052#issuecomment-853815661,"Before we can merge these we need the following

 yaml tests
 approval of the license","The intended character set.

I'll ask him",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1052,2021-02-26T08:10:43Z,2021-06-07T13:44:03Z,2021-06-07T13:44:03Z,MERGED,True,435,0,9,https://github.com/egli,Bulgarian 6 dot tables by Rumyana Kamenska,18,"['tables', 'needs metadata']",https://github.com/liblouis/liblouis/pull/1052,https://github.com/egli,19,https://github.com/liblouis/liblouis/pull/1052#issuecomment-854424895,"Before we can merge these we need the following

 yaml tests
 approval of the license","Rumyana writes:

I don't know whether I can explain this enough clearly. I wrote the display file according to Bulgarian braille code that is set in our printers. I wanted to test my table and I think that is the only way to achieve this.
I don't pay attention to the explanation in display file. Maybe I have to delete some lines and add that it is Bulgarian braille code. But I don't know how to do it now.
If there is another problem with the display file, it'll be difficult to me to handle it alone and perhaps the table can't be included in this release.
Best regards,
Rumyana",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1053,2021-03-03T15:04:29Z,2021-03-16T12:33:02Z,2021-03-16T12:33:03Z,CLOSED,False,10,7,2,https://github.com/egli,"Revert ""Fix some valgrind issues""",1,[],https://github.com/liblouis/liblouis/pull/1053,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1053,"This apparently causes problems in the emscripten build
Reverts #856","This apparently causes problems in the emscripten build
Reverts #856",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1053,2021-03-03T15:04:29Z,2021-03-16T12:33:02Z,2021-03-16T12:33:03Z,CLOSED,False,10,7,2,https://github.com/egli,"Revert ""Fix some valgrind issues""",1,[],https://github.com/liblouis/liblouis/pull/1053,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1053#issuecomment-790910081,"This apparently causes problems in the emscripten build
Reverts #856",The fact that the test still fail even with the reverted code would indicate that the failure has nothing to do with the actual code change. In other words this reversion and this PR seems futile.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1053,2021-03-03T15:04:29Z,2021-03-16T12:33:02Z,2021-03-16T12:33:03Z,CLOSED,False,10,7,2,https://github.com/egli,"Revert ""Fix some valgrind issues""",1,[],https://github.com/liblouis/liblouis/pull/1053,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1053#issuecomment-800220392,"This apparently causes problems in the emscripten build
Reverts #856",As this PR doesn't fix the problem we are closing it,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1054,2021-03-04T15:15:39Z,2021-04-16T08:22:48Z,2021-04-16T08:23:10Z,CLOSED,False,90,70,3,https://github.com/bertfrees,Update fa-ir-comp8.ctb thanks to Saed Bidar,2,"['tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/1054,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1054,"To do:

 We need a summary of the changes.
 Ask if Mohammadreza Rashad agrees with the changes.
 fa-ir-comp8-harness.yaml is failing. Since it is a generated test we probably just need to regenerate it.
 It would be nice to have a non-generated test file too.

The two FIXME's in the table need to be addressed:

 Verify the metadata.
 Add a reference to documentation about the braille code.
 It would also be nice to have a name and email address of the table maintainer.","To do:

 We need a summary of the changes.
 Ask if Mohammadreza Rashad agrees with the changes.
 fa-ir-comp8-harness.yaml is failing. Since it is a generated test we probably just need to regenerate it.
 It would be nice to have a non-generated test file too.

The two FIXME's in the table need to be addressed:

 Verify the metadata.
 Add a reference to documentation about the braille code.
 It would also be nice to have a name and email address of the table maintainer.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1054,2021-03-04T15:15:39Z,2021-04-16T08:22:48Z,2021-04-16T08:23:10Z,CLOSED,False,90,70,3,https://github.com/bertfrees,Update fa-ir-comp8.ctb thanks to Saed Bidar,2,"['tables', 'needs test', 'needs metadata', 'stale', 'needs news']",https://github.com/liblouis/liblouis/pull/1054,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1054#issuecomment-790759096,"To do:

 We need a summary of the changes.
 Ask if Mohammadreza Rashad agrees with the changes.
 fa-ir-comp8-harness.yaml is failing. Since it is a generated test we probably just need to regenerate it.
 It would be nice to have a non-generated test file too.

The two FIXME's in the table need to be addressed:

 Verify the metadata.
 Add a reference to documentation about the braille code.
 It would also be nice to have a name and email address of the table maintainer.",I've sent him an email.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1055,2021-03-05T11:31:35Z,2021-03-08T10:55:54Z,2021-03-08T10:55:55Z,MERGED,True,98,41,4,https://github.com/JakeKyle,Improvements to Urdu tables and added tests.,2,[],https://github.com/liblouis/liblouis/pull/1055,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/1055,"@egli @bertfrees
I realise this might be too short notice for release on March 8th release but some important updates to Urdu tables and tests following further input from Urdu Braille proof reader in Pakistan:

Dot 4 not dot 1 used for SUPERSCRIPT ALEF (\x0670).
Revised definition for ARABIC LIGATURE ALLAH ISOLATED FORM (\xFDF2).
Contraction dots 135 no longer used for ٹھ. Use uncontracted 246-236 instead. 135 and 5-135 still used as word signs.
Contraction 35 used for ان and اِن whether as a whole word or within a word
Contraction 36 used for بے not for بی at the beginning of words.
Contraction 136 used for اَور and اور
Dots 3-3 used for repeated words (not 6-6 as previously)","@egli @bertfrees
I realise this might be too short notice for release on March 8th release but some important updates to Urdu tables and tests following further input from Urdu Braille proof reader in Pakistan:

Dot 4 not dot 1 used for SUPERSCRIPT ALEF (\x0670).
Revised definition for ARABIC LIGATURE ALLAH ISOLATED FORM (\xFDF2).
Contraction dots 135 no longer used for ٹھ. Use uncontracted 246-236 instead. 135 and 5-135 still used as word signs.
Contraction 35 used for ان and اِن whether as a whole word or within a word
Contraction 36 used for بے not for بی at the beginning of words.
Contraction 136 used for اَور and اور
Dots 3-3 used for repeated words (not 6-6 as previously)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1055,2021-03-05T11:31:35Z,2021-03-08T10:55:54Z,2021-03-08T10:55:55Z,MERGED,True,98,41,4,https://github.com/JakeKyle,Improvements to Urdu tables and added tests.,2,[],https://github.com/liblouis/liblouis/pull/1055,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1055#issuecomment-791386030,"@egli @bertfrees
I realise this might be too short notice for release on March 8th release but some important updates to Urdu tables and tests following further input from Urdu Braille proof reader in Pakistan:

Dot 4 not dot 1 used for SUPERSCRIPT ALEF (\x0670).
Revised definition for ARABIC LIGATURE ALLAH ISOLATED FORM (\xFDF2).
Contraction dots 135 no longer used for ٹھ. Use uncontracted 246-236 instead. 135 and 5-135 still used as word signs.
Contraction 35 used for ان and اِن whether as a whole word or within a word
Contraction 36 used for بے not for بی at the beginning of words.
Contraction 136 used for اَور and اور
Dots 3-3 used for repeated words (not 6-6 as previously)","Hi @JakeKyle. Looks excellent. When a PR has no issues, it's not a problem if it's short notice. I'm sure it'll end up in the release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1056,2021-03-05T21:53:26Z,2021-03-08T07:29:45Z,2021-03-17T16:34:38Z,MERGED,True,1,3,1,https://github.com/AdamKorcz,Update oss-fuzz build file,1,['build system'],https://github.com/liblouis/liblouis/pull/1056,https://github.com/AdamKorcz,1,https://github.com/liblouis/liblouis/pull/1056,This PR provides some needed changes for the OSS-fuzz build script.,This PR provides some needed changes for the OSS-fuzz build script.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1056,2021-03-05T21:53:26Z,2021-03-08T07:29:45Z,2021-03-17T16:34:38Z,MERGED,True,1,3,1,https://github.com/AdamKorcz,Update oss-fuzz build file,1,['build system'],https://github.com/liblouis/liblouis/pull/1056,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1056#issuecomment-792537906,This PR provides some needed changes for the OSS-fuzz build script.,"@AdamKorcz thanks for the patch. While we're at it can you also enhance the README in fuzzing, see #338 (comment)? Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1056,2021-03-05T21:53:26Z,2021-03-08T07:29:45Z,2021-03-17T16:34:38Z,MERGED,True,1,3,1,https://github.com/AdamKorcz,Update oss-fuzz build file,1,['build system'],https://github.com/liblouis/liblouis/pull/1056,https://github.com/AdamKorcz,3,https://github.com/liblouis/liblouis/pull/1056#issuecomment-801230674,This PR provides some needed changes for the OSS-fuzz build script.,"@AdamKorcz thanks for the patch. While we're at it can you also enhance the README in fuzzing, see #338 (comment)? Thanks

Yes. I will add a bit more in the next few days.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1057,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/1057#issuecomment-792851454,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Hm, I've found that this rule:
noback context !#1=0[]%uppercyrillic #1=0#2=1
results in non-indication of capital Cyrillic letters after Latins and Greeks (I've added two tests). Now I'm thinking what to do...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,3,https://github.com/liblouis/liblouis/pull/1057#issuecomment-792992439,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","@bertfrees Can I look the history of ru-litbrl.ctb in #1041 if I've already removed the old fork? I'd like to check my first idea about the Cyrillic mode, maybe it would work OK...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,4,https://github.com/liblouis/liblouis/pull/1057#issuecomment-797408517,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Not sure that that's the best idea, but I've repeated letters' attributes in ru-litbrl-detailed.utb and move including of ru-litbrl.ctb after general rules. It seems to solve the problem with non-indication of capital letters after Latins and Greeks.
But there's still the problem with digits.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1057#issuecomment-797502593,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Hmm, I don't think this the best solution. Now we're reintroducing some of the complexity that we got just rid of, aren't we?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,6,https://github.com/liblouis/liblouis/pull/1057#issuecomment-797532710,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Now we're reintroducing some of the complexity that we got just rid of, aren't we?

Yes, but I don't see another ways to solve it. There're rules which conflict with each other, so we need give them a priority",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1057#issuecomment-797534398,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Yes, it indeed looks like a priority issue. But that can be fixed. I haven't looked into the issue closely yet, but I'm sure it can be solved.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,8,https://github.com/liblouis/liblouis/pull/1057#issuecomment-797548050,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Well, I'll try to find another way, but now we have what we have.
Anyway, the most difficult problem in digits as I can't imagine what can result in this...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,9,https://github.com/liblouis/liblouis/pull/1057#issuecomment-798765442,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","If I remove the swapcd class with digits, there're double number sign after capital letters. It looks like ""exit uppercase mode"" rules are the cause of it, but I don't understand how 'numsign' and these 'context' rules are related. Lou_trace doesn't give any useful information as it says nothing about braille indicators, such as 'numsign' at all.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1057#issuecomment-799753457,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Hmm, I think it would be good to get rid of that %updigit rule, if possible. There is a weird interaction between this and the other context rules that causes the numsign to be suppressed in certain cases and that makes the table hard to comprehend. But maybe it's not possible without the rule.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,11,https://github.com/liblouis/liblouis/pull/1057#issuecomment-799910793,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Yes, I'm absolutely agree, but OMG, why context-rules make number sign double?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/1057#issuecomment-800106580,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","I could be wrong, but I don't think it's the context rules that make a double numsign. It's the other way around, context rules may suppress a numsign that is otherwise added.",True,{'CONFUSED': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,13,https://github.com/liblouis/liblouis/pull/1057#issuecomment-800128385,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Well,we have double numsign only after capital letters. If I remove ""exit uppercase mode"" rules, there is no double numsign. So these rules are cause of it, aren't they?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/1057#issuecomment-800131014,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Yes, you could say that indirectly they are the cause.",True,{'CONFUSED': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/1057#issuecomment-813638648,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","@Futyn-Maker I managed to fix all the failing tests. I forced-pushed my branch over yours. Please have look.
I haven't found a better alternative for your missing capital sign bug fix. It's not so great because it adds some duplication. But on the other hand it does fix the issue.
There are also some other commits in there that are not directly related to the Russian table. Never mind them. It's just some stuff I worked on while investigating the issues in the Russian table.",True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,16,https://github.com/liblouis/liblouis/pull/1057#issuecomment-813827186,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Hello @bertfrees! Many thanks for fixing, it seems to work good. While I don't see other problems.
Now I also want to add more accented letters in ru-litbrl.ctb, I think, in the next week.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/1057#issuecomment-821139570,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks",Rebased onto master.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,18,https://github.com/liblouis/liblouis/pull/1057#issuecomment-847982239,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks",I'm ready to merge it.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,19,https://github.com/liblouis/liblouis/pull/1057#issuecomment-848086914,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks",@Futyn-Maker Can you help us with the NEWS entry?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/1057#issuecomment-848105729,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks",Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/1057#issuecomment-848646059,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","@Futyn-Maker We noticed your table does not have a license yet. Can we add one? The same as ru-litbrl.ctb, that means LGPL 2.1.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/Futyn-Maker,22,https://github.com/liblouis/liblouis/pull/1057#issuecomment-848762123,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks","Ah, I forgot about this... Sorry, already fixed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1057,2021-03-06T21:34:43Z,2021-05-26T18:15:29Z,2021-05-26T18:15:30Z,MERGED,True,72,14,4,https://github.com/Futyn-Maker,Problems in ru-litbrl-detailed.utb,6,['tables'],https://github.com/liblouis/liblouis/pull/1057,https://github.com/bertfrees,23,https://github.com/liblouis/liblouis/pull/1057#issuecomment-848763691,"Hello!
It has been figured out that there's the bug in digits in ru-litbrl-detailed.utb. There's the test which shows it (passing number sign in some cases).
The problem is in updigit-class, but if we just remove it, the double number signs would appear. @bertfrees do You have any ideas how to fix it?
Thanks",Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1058,2021-03-12T14:45:42Z,2021-03-12T15:55:06Z,2021-06-08T09:31:09Z,CLOSED,False,740,0,18,https://github.com/hammera,Debian,4,[],https://github.com/liblouis/liblouis/pull/1058,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/1058,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1058,2021-03-12T14:45:42Z,2021-03-12T15:55:06Z,2021-06-08T09:31:09Z,CLOSED,False,740,0,18,https://github.com/hammera,Debian,4,[],https://github.com/liblouis/liblouis/pull/1058,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1058#issuecomment-797536824,,Hi Attila. Can you explain what this PR does?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1058,2021-03-12T14:45:42Z,2021-03-12T15:55:06Z,2021-06-08T09:31:09Z,CLOSED,False,740,0,18,https://github.com/hammera,Debian,4,[],https://github.com/liblouis/liblouis/pull/1058,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1058#issuecomment-797540503,,Maybe it was a mistake. I don't think we want to maintain the debian packaging in the liblouis repo,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1058,2021-03-12T14:45:42Z,2021-03-12T15:55:06Z,2021-06-08T09:31:09Z,CLOSED,False,740,0,18,https://github.com/hammera,Debian,4,[],https://github.com/liblouis/liblouis/pull/1058,https://github.com/hammera,4,https://github.com/liblouis/liblouis/pull/1058#issuecomment-797579819,,"Absolute true, Only I doed a mistake pull request.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1060,2021-04-05T14:14:11Z,2021-05-27T10:48:13Z,2021-05-27T10:48:16Z,MERGED,True,1578,2,11,https://github.com/bertfrees,New table for isiXhosa and isiZulu,3,['tables'],https://github.com/liblouis/liblouis/pull/1060,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1060,created by Christo de Klerk and Laurent Cadet de Fontenay at the request and under the auspices of the South African Braille Authority.,created by Christo de Klerk and Laurent Cadet de Fontenay at the request and under the auspices of the South African Braille Authority.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1060,2021-04-05T14:14:11Z,2021-05-27T10:48:13Z,2021-05-27T10:48:16Z,MERGED,True,1578,2,11,https://github.com/bertfrees,New table for isiXhosa and isiZulu,3,['tables'],https://github.com/liblouis/liblouis/pull/1060,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1060#issuecomment-848641742,created by Christo de Klerk and Laurent Cadet de Fontenay at the request and under the auspices of the South African Braille Authority.,"I'll move the license up, but it would be nice if #1069 is merged first.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1060,2021-04-05T14:14:11Z,2021-05-27T10:48:13Z,2021-05-27T10:48:16Z,MERGED,True,1578,2,11,https://github.com/bertfrees,New table for isiXhosa and isiZulu,3,['tables'],https://github.com/liblouis/liblouis/pull/1060,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1060#issuecomment-849532386,created by Christo de Klerk and Laurent Cadet de Fontenay at the request and under the auspices of the South African Braille Authority.,Licence check wasn't even failing but I moved the licenses up anyway.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1065,2021-04-09T11:52:27Z,2021-04-16T12:27:24Z,2021-04-16T12:27:28Z,MERGED,True,55,14,2,https://github.com/bertfrees,Various fixes to lou_trace,4,"['bug', 'enhancement']",https://github.com/liblouis/liblouis/pull/1065,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1065,"some rules were printed even though they were not applied
use %xxx syntax to render single custom attribute in multipass expression
support multipass rules with reference to swap rule
fix rendering of multipass rules with attributes","some rules were printed even though they were not applied
use %xxx syntax to render single custom attribute in multipass expression
support multipass rules with reference to swap rule
fix rendering of multipass rules with attributes",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1066,2021-04-09T12:10:58Z,2021-04-14T20:08:26Z,2021-04-14T20:08:55Z,MERGED,True,704,714,4,https://github.com/bertfrees,Major update to grade 2 Afrikaans table thanks to Christo de Klerk,2,['tables'],https://github.com/liblouis/liblouis/pull/1066,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1066,"The table now implements the new Afrikaans rules adopted and implemented recently by the South African Braille Authority (SABA). The rule changes simplify and rationalise the rules, especially those based on pronunciation. 571 of the list of 25912 test words were impacted by the changes and all have been corrected.","The table now implements the new Afrikaans rules adopted and implemented recently by the South African Braille Authority (SABA). The rule changes simplify and rationalise the rules, especially those based on pronunciation. 571 of the list of 25912 test words were impacted by the changes and all have been corrected.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1066,2021-04-09T12:10:58Z,2021-04-14T20:08:26Z,2021-04-14T20:08:55Z,MERGED,True,704,714,4,https://github.com/bertfrees,Major update to grade 2 Afrikaans table thanks to Christo de Klerk,2,['tables'],https://github.com/liblouis/liblouis/pull/1066,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1066#issuecomment-816638792,"The table now implements the new Afrikaans rules adopted and implemented recently by the South African Braille Authority (SABA). The rule changes simplify and rationalise the rules, especially those based on pronunciation. 571 of the list of 25912 test words were impacted by the changes and all have been corrected.",I intend to also add a reference to the Afrikaans rule book in BRF format that Christo sent me.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1066,2021-04-09T12:10:58Z,2021-04-14T20:08:26Z,2021-04-14T20:08:55Z,MERGED,True,704,714,4,https://github.com/bertfrees,Major update to grade 2 Afrikaans table thanks to Christo de Klerk,2,['tables'],https://github.com/liblouis/liblouis/pull/1066,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1066#issuecomment-817154732,"The table now implements the new Afrikaans rules adopted and implemented recently by the South African Braille Authority (SABA). The rule changes simplify and rationalise the rules, especially those based on pronunciation. 571 of the list of 25912 test words were impacted by the changes and all have been corrected.",Depends on liblouis/braille-specs#12.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1067,2021-04-14T13:16:38Z,2021-04-14T14:18:14Z,2021-04-14T14:19:28Z,MERGED,True,33,11,1,https://github.com/egli,Add documentation for begcomp and endcomp again,2,"['documentation', 'needs news']",https://github.com/liblouis/liblouis/pull/1067,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1067,See #1059,See #1059,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1068,2021-04-16T08:52:37Z,2021-04-16T11:44:04Z,2021-04-16T11:44:27Z,MERGED,True,10,0,1,https://github.com/bertfrees,Github workflow to run metadata test,1,['build system'],https://github.com/liblouis/liblouis/pull/1068,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1068,Fixes #1061,Fixes #1061,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1068,2021-04-16T08:52:37Z,2021-04-16T11:44:04Z,2021-04-16T11:44:27Z,MERGED,True,10,0,1,https://github.com/bertfrees,Github workflow to run metadata test,1,['build system'],https://github.com/liblouis/liblouis/pull/1068,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1068#issuecomment-821056840,Fixes #1061,@egli Seems to work.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1069,2021-04-16T14:22:23Z,2021-05-27T09:15:37Z,2021-05-27T09:15:43Z,MERGED,True,73,16,4,https://github.com/egli,Add an action to check for tables with non-standard licenses,4,[],https://github.com/liblouis/liblouis/pull/1069,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1069,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1069,2021-04-16T14:22:23Z,2021-05-27T09:15:37Z,2021-05-27T09:15:43Z,MERGED,True,73,16,4,https://github.com/egli,Add an action to check for tables with non-standard licenses,4,[],https://github.com/liblouis/liblouis/pull/1069,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1069#issuecomment-821215807,,"tables/es-g2.ctb LGPL: need to check more lines or move license up
 tables/ethio-g1.ctb UNKNOWN: email sent
 tables/ru-litbrl-detailed.utb UNKNOWN
 tables/zh-hk.ctb UNKNOWN",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1069,2021-04-16T14:22:23Z,2021-05-27T09:15:37Z,2021-05-27T09:15:43Z,MERGED,True,73,16,4,https://github.com/egli,Add an action to check for tables with non-standard licenses,4,[],https://github.com/liblouis/liblouis/pull/1069,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1069#issuecomment-821227419,,Don't know what to do with these tables. Especially with zh-hk.ctb we'll never find the authors. But just delete it seems a bit extreme.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1069,2021-04-16T14:22:23Z,2021-05-27T09:15:37Z,2021-05-27T09:15:43Z,MERGED,True,73,16,4,https://github.com/egli,Add an action to check for tables with non-standard licenses,4,[],https://github.com/liblouis/liblouis/pull/1069,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1069#issuecomment-821267210,,I have good hopes we can solve it for the two other. And zh-hk.ctb we can just exclude with grep.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1069,2021-04-16T14:22:23Z,2021-05-27T09:15:37Z,2021-05-27T09:15:43Z,MERGED,True,73,16,4,https://github.com/egli,Add an action to check for tables with non-standard licenses,4,[],https://github.com/liblouis/liblouis/pull/1069,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1069#issuecomment-848646047,,Just assume the license is fine for the ethio-g1.ctb and zh-hk.ctb tables,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1069,2021-04-16T14:22:23Z,2021-05-27T09:15:37Z,2021-05-27T09:15:43Z,MERGED,True,73,16,4,https://github.com/egli,Add an action to check for tables with non-standard licenses,4,[],https://github.com/liblouis/liblouis/pull/1069,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1069#issuecomment-848748032,,Never got an answer from Tamru E. Belay,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1070,2021-04-19T08:47:51Z,2021-06-07T13:34:09Z,2021-06-07T13:34:22Z,CLOSED,False,0,0,0,https://github.com/BAUM-Engineering,"Uzbek grade 1 letter, capital and other signs fix",0,['tables'],https://github.com/liblouis/liblouis/pull/1070,https://github.com/BAUM-Engineering,1,https://github.com/liblouis/liblouis/pull/1070,"Greetings,
The same person who last date gave me the necessary rules to create the Uzbek table, now contacted me again to do some improvements for:

Capital sign for Roman numbers.
Signs (math, parentheses and other).
sh, ch behaviours inside a word.
g and o with different accent marks.

For this time I've got a complete document which describes both Cyrillic and Latin characters(+signs) and how should they act in different environments/use cases.
The client tested and approved the table and he said it's ready to go, and I can proceed to this pull request.
I have also repaired some of the YAML tests and added new ones.
Best regards,
BAUM Engineering","Greetings,
The same person who last date gave me the necessary rules to create the Uzbek table, now contacted me again to do some improvements for:

Capital sign for Roman numbers.
Signs (math, parentheses and other).
sh, ch behaviours inside a word.
g and o with different accent marks.

For this time I've got a complete document which describes both Cyrillic and Latin characters(+signs) and how should they act in different environments/use cases.
The client tested and approved the table and he said it's ready to go, and I can proceed to this pull request.
I have also repaired some of the YAML tests and added new ones.
Best regards,
BAUM Engineering",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1070,2021-04-19T08:47:51Z,2021-06-07T13:34:09Z,2021-06-07T13:34:22Z,CLOSED,False,0,0,0,https://github.com/BAUM-Engineering,"Uzbek grade 1 letter, capital and other signs fix",0,['tables'],https://github.com/liblouis/liblouis/pull/1070,https://github.com/BAUM-Engineering,2,https://github.com/liblouis/liblouis/pull/1070#issuecomment-823110866,"Greetings,
The same person who last date gave me the necessary rules to create the Uzbek table, now contacted me again to do some improvements for:

Capital sign for Roman numbers.
Signs (math, parentheses and other).
sh, ch behaviours inside a word.
g and o with different accent marks.

For this time I've got a complete document which describes both Cyrillic and Latin characters(+signs) and how should they act in different environments/use cases.
The client tested and approved the table and he said it's ready to go, and I can proceed to this pull request.
I have also repaired some of the YAML tests and added new ones.
Best regards,
BAUM Engineering","For this time I've got a complete document which describes both Cyrillic and Latin characters(+signs) and how should they act in different environments/use cases.

Why are you mentioning this? Do you think there should there be a reference to this document in the table/test code?

Not necessary, it's not an official document but I wanted to assure you the modifications are legit.
I looked through your comments and served some explanations what were my thoughts when I edited the table (unfortunately not recently, so I may miss something out).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1070,2021-04-19T08:47:51Z,2021-06-07T13:34:09Z,2021-06-07T13:34:22Z,CLOSED,False,0,0,0,https://github.com/BAUM-Engineering,"Uzbek grade 1 letter, capital and other signs fix",0,['tables'],https://github.com/liblouis/liblouis/pull/1070,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1070#issuecomment-855934261,"Greetings,
The same person who last date gave me the necessary rules to create the Uzbek table, now contacted me again to do some improvements for:

Capital sign for Roman numbers.
Signs (math, parentheses and other).
sh, ch behaviours inside a word.
g and o with different accent marks.

For this time I've got a complete document which describes both Cyrillic and Latin characters(+signs) and how should they act in different environments/use cases.
The client tested and approved the table and he said it's ready to go, and I can proceed to this pull request.
I have also repaired some of the YAML tests and added new ones.
Best regards,
BAUM Engineering",Merged in fac757f,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1072,2021-04-21T18:47:05Z,2021-05-26T17:59:21Z,2021-05-26T17:59:30Z,MERGED,True,4,1,2,https://github.com/bertfrees,Don't ignore last line if no new line at end of file,1,[],https://github.com/liblouis/liblouis/pull/1072,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1072,fixes #1071,fixes #1071,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1072,2021-04-21T18:47:05Z,2021-05-26T17:59:21Z,2021-05-26T17:59:30Z,MERGED,True,4,1,2,https://github.com/bertfrees,Don't ignore last line if no new line at end of file,1,[],https://github.com/liblouis/liblouis/pull/1072,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1072#issuecomment-824656325,fixes #1071,"But what's wrong with how I did it? Nothing is silently ignored, and we don't need an error.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1073,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.","Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/1073#issuecomment-826382199,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.","Everything seems to be OK with these files, I don't know why the check is failur again...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1073#issuecomment-826542803,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.",@bertfrees any idea why the metadata test is failing?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1073#issuecomment-826614373,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.",Needs rebasing when #1057 is merged.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1073#issuecomment-826619339,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.","any idea why the metadata test is failing?

Yes, the log tells you what's wrong. It detected that the 3 new tables are not tested yet. I'll fix it.
Table not in list: /home/runner/work/liblouis/liblouis/extra/generate-display-names/../../tables/kk.utb
Table not in list: /home/runner/work/liblouis/liblouis/extra/generate-display-names/../../tables/sah.utb
Table not in list: /home/runner/work/liblouis/liblouis/extra/generate-display-names/../../tables/tt.utb",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1073#issuecomment-826666626,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.",@Futyn-Maker Well done! Ready to go into the next release. Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/1073#issuecomment-827572124,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.","Thanks. I've learnt that when adding table, I should change these files.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/Futyn-Maker,8,https://github.com/liblouis/liblouis/pull/1073#issuecomment-832016074,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.","@bertfrees Hello!
Basically, I can add ""Braille codes of the national languages of Russia"" in the repo with braille specs, but it's the OCR-solved-scan, not a true electronic publication. It seems to be readable, but not perfect. Do you accept such references?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1073#issuecomment-832107129,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.","We already have some image PDFs, without any OCR applied. I think it can go in with a warning.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1073#issuecomment-848653613,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.","merge liblouis/braille-specs#13
 add a reference to it in this PR
 rebase onto #1057
 fix 9a57e74",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/Futyn-Maker,11,https://github.com/liblouis/liblouis/pull/1073#issuecomment-848774234,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.",What is the problem with my last commit? What should be fixed?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1073,2021-04-25T19:22:31Z,2021-05-31T17:08:30Z,2021-05-31T17:08:30Z,MERGED,True,352,0,12,https://github.com/Futyn-Maker,"New tables for Kazakh, Tatar and Yakut braille",3,['tables'],https://github.com/liblouis/liblouis/pull/1073,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/1073#issuecomment-848789941,"Hello!
These are three new tables, tests and news.
Note that there's no the ISO 639-1 code for Yakut language, so I've used ISO 639-2 (sah).
Hope everything is OK.","Line endings were changed, which makes it very hard to see what the actual change was. Don't worry about it, I'll take care of it during the merge.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1075,2021-05-05T07:52:49Z,2021-05-31T17:33:13Z,2021-05-31T17:33:14Z,MERGED,True,23,3,3,https://github.com/BAUM-Engineering,Apostrophe update in En-US computer braille,3,['tables'],https://github.com/liblouis/liblouis/pull/1075,https://github.com/BAUM-Engineering,1,https://github.com/liblouis/liblouis/pull/1075,"Hello again,
We've got a report that apostrophes are not translated correctly. As I saw the table contains just one type of apostrophe, but the client wanted to use ""right single quotation mark"" and ""acute accent"" for the same purpose.
I've added two more definitions for those.","Hello again,
We've got a report that apostrophes are not translated correctly. As I saw the table contains just one type of apostrophe, but the client wanted to use ""right single quotation mark"" and ""acute accent"" for the same purpose.
I've added two more definitions for those.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1075,2021-05-05T07:52:49Z,2021-05-31T17:33:13Z,2021-05-31T17:33:14Z,MERGED,True,23,3,3,https://github.com/BAUM-Engineering,Apostrophe update in En-US computer braille,3,['tables'],https://github.com/liblouis/liblouis/pull/1075,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1075#issuecomment-848659000,"Hello again,
We've got a report that apostrophes are not translated correctly. As I saw the table contains just one type of apostrophe, but the client wanted to use ""right single quotation mark"" and ""acute accent"" for the same purpose.
I've added two more definitions for those.",@BAUM-Engineering Thanks. Would it be possible to add something to en-us-comp6.yaml? Also the copyright lines in en-us-comp6.ctb need to be updated. We'll then include it in release 3.18.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1075,2021-05-05T07:52:49Z,2021-05-31T17:33:13Z,2021-05-31T17:33:14Z,MERGED,True,23,3,3,https://github.com/BAUM-Engineering,Apostrophe update in En-US computer braille,3,['tables'],https://github.com/liblouis/liblouis/pull/1075,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1075#issuecomment-850244250,"Hello again,
We've got a report that apostrophes are not translated correctly. As I saw the table contains just one type of apostrophe, but the client wanted to use ""right single quotation mark"" and ""acute accent"" for the same purpose.
I've added two more definitions for those.",@BAUM-Engineering Thank you.,True,{'THUMBS_UP': ['https://github.com/BAUM-Engineering']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1077,2021-05-26T15:12:40Z,2021-06-04T13:29:41Z,2021-06-04T13:29:47Z,MERGED,True,187,5,9,https://github.com/egli,Tests from #848,6,[],https://github.com/liblouis/liblouis/pull/1077,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1077,"This PR is basically the tests that are mentioned in #848 as Python unittests and YAML tests.
Both the Python and the YAML tests all fail. I do not understand why. Is there a mistake in them?","This PR is basically the tests that are mentioned in #848 as Python unittests and YAML tests.
Both the Python and the YAML tests all fail. I do not understand why. Is there a mistake in them?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1077,2021-05-26T15:12:40Z,2021-06-04T13:29:41Z,2021-06-04T13:29:47Z,MERGED,True,187,5,9,https://github.com/egli,Tests from #848,6,[],https://github.com/liblouis/liblouis/pull/1077,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1077#issuecomment-848868918,"This PR is basically the tests that are mentioned in #848 as Python unittests and YAML tests.
Both the Python and the YAML tests all fail. I do not understand why. Is there a mistake in them?",You're not using the decomposed form of the unicode characters.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1077,2021-05-26T15:12:40Z,2021-06-04T13:29:41Z,2021-06-04T13:29:47Z,MERGED,True,187,5,9,https://github.com/egli,Tests from #848,6,[],https://github.com/liblouis/liblouis/pull/1077,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1077#issuecomment-848870133,"This PR is basically the tests that are mentioned in #848 as Python unittests and YAML tests.
Both the Python and the YAML tests all fail. I do not understand why. Is there a mistake in them?","table: |
  include tables/en-ueb-g1.ctb
  noback correct ""\xd83d\xde02"" ""(face\swith\stears\sof\sjoy)""
  noback correct ""\xd83e\xdd23"" ""(rolling\son\sthe\sfloor\slaughing)""
  noback correct ""\xd83d\xde03"" ""(grinning\sface\swith\sbig\seyes)""
flags: {testmode: forward}
tests:
  - - ""\\xD83D\\xDE02""
    - ""\""<face with tears of joy\"">""
  - - ""a \\xD83D\\xDE02""
    - ""a \""<face with tears of joy\"">""
  - - ""\\xD83D\\xDE02 b""
    - ""\""<face with tears of joy\""> b""
  - - ""a \\xD83D\\xDE02 b""
    - ""a \""<face with tears of joy\""> b""
  - - ""before \\xD83D\\xDE02""
    - ""before \""<face with tears of joy\"">""
  - - ""\\xD83D\\xDE02 after""
    - ""\""<face with tears of joy\""> after""
  - - ""before \\xD83D\\xDE02 after""
    - ""before \""<face with tears of joy\""> after""
  - - ""\\xD83E\\xDD23""
    - ""\""<rolling on the floor laughing\"">""
  - - ""a \\xD83E\\xDD23""
    - ""a \""<rolling on the floor laughing\"">""
  - - ""\\xD83E\\xDD23 b""
    - ""\""<rolling on the floor laughing\""> b""
  - - ""a \\xD83E\\xDD23 b""
    - ""a \""<rolling on the floor laughing\""> b""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1077,2021-05-26T15:12:40Z,2021-06-04T13:29:41Z,2021-06-04T13:29:47Z,MERGED,True,187,5,9,https://github.com/egli,Tests from #848,6,[],https://github.com/liblouis/liblouis/pull/1077,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1077#issuecomment-854551457,"This PR is basically the tests that are mentioned in #848 as Python unittests and YAML tests.
Both the Python and the YAML tests all fail. I do not understand why. Is there a mistake in them?",Looks like all the yaml tests pass. So this seems to be a problem in the python bindings.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1077,2021-05-26T15:12:40Z,2021-06-04T13:29:41Z,2021-06-04T13:29:47Z,MERGED,True,187,5,9,https://github.com/egli,Tests from #848,6,[],https://github.com/liblouis/liblouis/pull/1077,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1077#issuecomment-854551864,"This PR is basically the tests that are mentioned in #848 as Python unittests and YAML tests.
Both the Python and the YAML tests all fail. I do not understand why. Is there a mistake in them?",I guess this could go in despite that fact that it just adds more tests and doesn't fix anything,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1078,2021-05-27T10:24:20Z,2021-12-06T09:52:18Z,2021-12-07T10:45:41Z,MERGED,True,1623,16,8,https://github.com/jrbowden,Further UEB improvements,12,['tables'],https://github.com/liblouis/liblouis/pull/1078,https://github.com/jrbowden,1,https://github.com/liblouis/liblouis/pull/1078,"Fixes #1013 for example no.7, Op.35, p.324
The case for symbols dot numbers is not included, more discussion needed as there are no examples in the rulebooks.
Two tests which were marked as fail have been reinstated.","Fixes #1013 for example no.7, Op.35, p.324
The case for symbols dot numbers is not included, more discussion needed as there are no examples in the rulebooks.
Two tests which were marked as fail have been reinstated.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1078,2021-05-27T10:24:20Z,2021-12-06T09:52:18Z,2021-12-07T10:45:41Z,MERGED,True,1623,16,8,https://github.com/jrbowden,Further UEB improvements,12,['tables'],https://github.com/liblouis/liblouis/pull/1078,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1078#issuecomment-849531951,"Fixes #1013 for example no.7, Op.35, p.324
The case for symbols dot numbers is not included, more discussion needed as there are no examples in the rulebooks.
Two tests which were marked as fail have been reinstated.","Thanks James. The new rules don't belong in en-ueb-chardefs.uti I think. I think I know why you did it. The decpoint rule would otherwise take precendence. But still, I don't think it's right. I'd like to find another solution. Maybe we don't need the decpoint rule?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1078,2021-05-27T10:24:20Z,2021-12-06T09:52:18Z,2021-12-07T10:45:41Z,MERGED,True,1623,16,8,https://github.com/jrbowden,Further UEB improvements,12,['tables'],https://github.com/liblouis/liblouis/pull/1078,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1078#issuecomment-902565210,"Fixes #1013 for example no.7, Op.35, p.324
The case for symbols dot numbers is not included, more discussion needed as there are no examples in the rulebooks.
Two tests which were marked as fail have been reinstated.",@jrbowden what is the status on this PR? Is it ready for review?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1078,2021-05-27T10:24:20Z,2021-12-06T09:52:18Z,2021-12-07T10:45:41Z,MERGED,True,1623,16,8,https://github.com/jrbowden,Further UEB improvements,12,['tables'],https://github.com/liblouis/liblouis/pull/1078,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1078#issuecomment-919054642,"Fixes #1013 for example no.7, Op.35, p.324
The case for symbols dot numbers is not included, more discussion needed as there are no examples in the rulebooks.
Two tests which were marked as fail have been reinstated.","James confirmed to me that this is ready to be included in a release. In case he adds more stuff, he will leave it in a state in which it can be released.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1078,2021-05-27T10:24:20Z,2021-12-06T09:52:18Z,2021-12-07T10:45:41Z,MERGED,True,1623,16,8,https://github.com/jrbowden,Further UEB improvements,12,['tables'],https://github.com/liblouis/liblouis/pull/1078,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1078#issuecomment-986268689,"Fixes #1013 for example no.7, Op.35, p.324
The case for symbols dot numbers is not included, more discussion needed as there are no examples in the rulebooks.
Two tests which were marked as fail have been reinstated.","@jrbowden I rebased this branch and made a few minor comments. Could you have a look?
We're also missing a NEWS entry. Could you help us summarize the changes you made?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1080,2021-05-31T09:30:59Z,2021-06-04T07:52:21Z,2021-06-04T07:52:25Z,MERGED,True,7,6,3,https://github.com/egli,Small fix to Italian computer braille thanks to Simone Dal Maso,4,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/1080,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1080,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1080,2021-05-31T09:30:59Z,2021-06-04T07:52:21Z,2021-06-04T07:52:25Z,MERGED,True,7,6,3,https://github.com/egli,Small fix to Italian computer braille thanks to Simone Dal Maso,4,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/1080,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1080#issuecomment-854435394,,I asked Simone for test files but got no answer so far,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/accessmind,1,https://github.com/liblouis/liblouis/pull/1082,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.","Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.",True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/accessmind,2,https://github.com/liblouis/liblouis/pull/1082#issuecomment-851598783,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.",fixes #1081,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/accessmind,3,https://github.com/liblouis/liblouis/pull/1082#issuecomment-853853679,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.","Hello,
Thanks for the questions and the comment. My name is Adi Kushnir. Below are my answers:

1.  In the previous table, Baum just committed it to the project but TSR-Gaash (Erez Kugler) wrote the incorrect table. We can add Baum to the file back if we need. The table was approved by all the people, I was the technical offer and they were testers.
2.  He.CTB – this is an old table, that does not really reflect the current Hebrew standard for Computer Braille and should be removed. Agreed by Pavel Kaplan (one of the Braille experts who was testing my work) and myself. The current he.CTB table is incorrect, has lots of errors, input does not work, etc. Please set this to he and make it the only available Hebrew Computer Braille table. I will later add literary tables as well. Now working on them.
3.  I have emailed the CEO of the Central library for the blind (Amos Beer) and on Sunday he will write an official email to me with approval that he is giving me backup and that this is the official standard. There is no official website of the CLFB that has this standard published. I will send the email as soon as I receive it on Sunday. I hope this will help.

Adi Kushnir",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1082#issuecomment-854675268,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.","OK, as far as I'm concerned we can remove Baum Engineering from author-name, so we can leave this
I will remove the old he table, so we leave yours as the one with the he locale
If there is no URL to a standard then that's how it is. If there is a standards document (possibly even available under some URL) we could link to it from the braille-specs project",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/accessmind,5,https://github.com/liblouis/liblouis/pull/1082#issuecomment-854678152,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.","3. No, there is no official URL. If you want I will provide an approval letter from the library on Sunday.
Adi Kushnir",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1082#issuecomment-854713855,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.","With the he.ctb table gone I changed the tests to use the new table. Now I get a failure in the test suite:
Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /home/runner/work/liblouis/liblouis/tables/he-IL.utb (27)
Best match: /home/runner/work/liblouis/liblouis/tables/he-IL-comp8.utb (19)
Input:    'שלט המטבע שלנו הוא ₪'
Expected: '⠩⠇⠞ ⠓⠍⠞⠧⠫ ⠩⠇⠝⠺ ⠓⠺⠁ ⡈' (length 20)
Received: '⠩⠇⠞ ⠓⠍⠞⠧⠫ ⠩⠇⠝⠺ ⠓⠺⠁ ⢩' (length 20)
Diff:     Expected '⡈' but received '⢩' in index 19
lou_checkyaml:./braille-specs/he-IL.yaml:71: Failure
Table: /home/runner/work/liblouis/liblouis/tables/he-IL-comp8.utb
Display table: unicode-without-blank.dis

FAILURE (14 tests, 1 failure)
FAIL braille-specs/he-IL.yaml (exit status: 1)

@accessmind doyou have any idea what the problem is? Is the test correct, i.e. isd the expected translation of  'שלט המטבע שלנו הוא ₪' really '⠩⠇⠞ ⠓⠍⠞⠧⠫ ⠩⠇⠝⠺ ⠓⠺⠁ ⡈' ? Or should it be '⠩⠇⠞ ⠓⠍⠞⠧⠫ ⠩⠇⠝⠺ ⠓⠺⠁ ⢩'?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/1082#issuecomment-856012821,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.",@bertfrees I don't get it. Both strings in the display-names index file seem to match what it says in the table. Where is the problem?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1082#issuecomment-856066504,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.","Hi @accessmind
I have a few remaining questions:

What is the problem with the failing test that I mentioned? Is the test wrong?
Are the references to the World Braille Usage (3rd edition), page 74 and the documents in http://liblouis.org/braille-specs/hebrew still correct?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1082#issuecomment-856118938,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.","Additional question:

@accessmind Should we list you as the maintainer / main contact person of the table?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1082,2021-05-31T16:38:12Z,2021-06-07T16:07:43Z,2021-06-11T09:40:32Z,MERGED,True,266,260,8,https://github.com/accessmind,Fixed Hebrew 8-dot computer table as per issue 1081.,12,['needs metadata'],https://github.com/liblouis/liblouis/pull/1082,https://github.com/accessmind,10,https://github.com/liblouis/liblouis/pull/1082#issuecomment-859451898,"Fixed Hebrew 8-dot computer Braille table. See issues #1081.  The following changes have been made:

Fixed Hebrew input to properly work. It did not work at all before.
Added Russian support which is critical for the Israeli market.
Added special European characters which are needed for the Israeli market.
Fixed Arabic support.
Fixed some symbols to comply with the Israeli standard for computer Braille.
Changed display name from Israeli Multilingual to just indicate Hebrew. This is the proper way to display the table to not confuse people.","Hello. Sorry for not responding, I had a complicated personal issue to deal with during the last week and I was not able to work. I will review all the tests and questions today and I’ll respond with all needed info, but yes, I should be mentioned as the contact person and maintainer for the Hebrew table. Also working on Grade 1 now that I will submit after we get this one done.
Adi Kushnir



,

[Fabrikam]
HTML Disclaimer Title

This message contains confidential information and is intended only for the individual(s) addressed in the message. If you aren't the named addressee, you should not disseminate, distribute, or copy this e-mail. If you aren't the intended recipient, you aren'tified that disclosing, distributing, or copying this e-mail is strictly prohibited.

Fabrikam, Inc. <http://www.fabrikam.com>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1083,2021-06-03T06:56:43Z,2021-06-07T09:46:26Z,2021-06-07T09:46:29Z,MERGED,True,143,153,2,https://github.com/bertfrees,Eliminate lastToken variable,2,"['refactoring', 'needs news']",https://github.com/liblouis/liblouis/pull/1083,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1083,What the title says. Simple refactoring.,What the title says. Simple refactoring.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1083,2021-06-03T06:56:43Z,2021-06-07T09:46:26Z,2021-06-07T09:46:29Z,MERGED,True,143,153,2,https://github.com/bertfrees,Eliminate lastToken variable,2,"['refactoring', 'needs news']",https://github.com/liblouis/liblouis/pull/1083,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1083#issuecomment-853702360,What the title says. Simple refactoring.,"Oh, btw, this just has to have a NEWS entry. This is absolutely genius! I don't care if it is not user visible.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1083,2021-06-03T06:56:43Z,2021-06-07T09:46:26Z,2021-06-07T09:46:29Z,MERGED,True,143,153,2,https://github.com/bertfrees,Eliminate lastToken variable,2,"['refactoring', 'needs news']",https://github.com/liblouis/liblouis/pull/1083,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1083#issuecomment-853768994,What the title says. Simple refactoring.,You think so? 😊 I was just gonna sneak this in without a NEWS entry.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1083,2021-06-03T06:56:43Z,2021-06-07T09:46:26Z,2021-06-07T09:46:29Z,MERGED,True,143,153,2,https://github.com/bertfrees,Eliminate lastToken variable,2,"['refactoring', 'needs news']",https://github.com/liblouis/liblouis/pull/1083,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1083#issuecomment-853800143,What the title says. Simple refactoring.,Well I think it is brilliant and I think we are allowed to talk about it if we (well you really) do good stuff,True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1083,2021-06-03T06:56:43Z,2021-06-07T09:46:26Z,2021-06-07T09:46:29Z,MERGED,True,143,153,2,https://github.com/bertfrees,Eliminate lastToken variable,2,"['refactoring', 'needs news']",https://github.com/liblouis/liblouis/pull/1083,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1083#issuecomment-853969937,What the title says. Simple refactoring.,@egli I don't really now how to put this in NEWS. Have you got inspiration?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1084,2021-06-03T10:06:30Z,2021-06-07T12:20:08Z,2021-06-07T12:20:12Z,MERGED,True,1184,98,18,https://github.com/bertfrees,"New table for the Sesotho, Setswana and Sepedi languages",2,['tables'],https://github.com/liblouis/liblouis/pull/1084,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1084,"thanks to Christo de Klerk and the South African Braille Authority.
fixes #1076","thanks to Christo de Klerk and the South African Braille Authority.
fixes #1076",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1084,2021-06-03T10:06:30Z,2021-06-07T12:20:08Z,2021-06-07T12:20:12Z,MERGED,True,1184,98,18,https://github.com/bertfrees,"New table for the Sesotho, Setswana and Sepedi languages",2,['tables'],https://github.com/liblouis/liblouis/pull/1084,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1084#issuecomment-853810946,"thanks to Christo de Klerk and the South African Braille Authority.
fixes #1076","3 locales, contracted and uncontracted for each.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1084,2021-06-03T10:06:30Z,2021-06-07T12:20:08Z,2021-06-07T12:20:12Z,MERGED,True,1184,98,18,https://github.com/bertfrees,"New table for the Sesotho, Setswana and Sepedi languages",2,['tables'],https://github.com/liblouis/liblouis/pull/1084,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1084#issuecomment-853815080,"thanks to Christo de Klerk and the South African Braille Authority.
fixes #1076","3 locales, contracted and uncontracted for each.

OK, I figured as much. OK then fine with me.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1084,2021-06-03T10:06:30Z,2021-06-07T12:20:08Z,2021-06-07T12:20:12Z,MERGED,True,1184,98,18,https://github.com/bertfrees,"New table for the Sesotho, Setswana and Sepedi languages",2,['tables'],https://github.com/liblouis/liblouis/pull/1084,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1084#issuecomment-853816100,"thanks to Christo de Klerk and the South African Braille Authority.
fixes #1076","Don't merge yet, I have asked Christo a few questions and am waiting for his answer.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1084,2021-06-03T10:06:30Z,2021-06-07T12:20:08Z,2021-06-07T12:20:12Z,MERGED,True,1184,98,18,https://github.com/bertfrees,"New table for the Sesotho, Setswana and Sepedi languages",2,['tables'],https://github.com/liblouis/liblouis/pull/1084,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1084#issuecomment-855872544,"thanks to Christo de Klerk and the South African Braille Authority.
fixes #1076",@egli OK I'm gonna merge now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1088,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.","I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1088#issuecomment-876210631,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.",Hi @bertfrees a bit busy right now. Can I look at it July 12th?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1088#issuecomment-877285088,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.","Yes no problem.
By the way I have another PR coming up that is based on these changes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1088#issuecomment-886046007,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.",@egli I'd like to merge this now. I've got other PRs in the queue.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1088#issuecomment-886522549,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.","Hi Bert, was away. I'll try to look at it today.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1088#issuecomment-886565576,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.",Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1088#issuecomment-904096440,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.",I've added some more commits. @egli Can you please review again?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1088#issuecomment-904814275,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.",Perhaps you have not seen the last (4th) commit: b008fb2.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1088#issuecomment-908226669,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.",@egli For now I removed that last commit that I was not fully happy with. Instead I pushed a commit that only deals with the possible segmentation faults.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1088,2021-06-21T12:09:22Z,2021-08-31T10:13:42Z,2021-08-31T16:41:01Z,MERGED,True,1294,1458,6,https://github.com/bertfrees,Refactoring of compileTranslationTable.c,10,"['bug', 'refactoring', 'tables']",https://github.com/liblouis/liblouis/pull/1088,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1088#issuecomment-909402210,"I start with some code cleanup and refactoring, and then I move on to making the compilation functions more strict by not ignoring compilation errors and aborting immediately when the first error is found. The error reporting has also been improved a bit. Thanks to these changes I was able to find a bug in the code and two errors in the tables. I fixed the bug and the two rules are commented out for now. I think I managed to fix them (locally) but would like the table authors to confirm this, and also add tests for these rules.","Oops, also merged that commit I wanted to skip. Fixed it now: this is the final merge: e46f36c.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1090,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/1090#issuecomment-885257978,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.",And what I constantly do wrong to fail checks? I can't understand the log :(,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/aaclause,3,https://github.com/liblouis/liblouis/pull/1090#issuecomment-885467862,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","According to the log, the following test fails:
Input:    '⠼⠃⠂⠑⠠⠂⠼⠉⠂⠛⠠⠂⠼⠋⠂⠃⠠⠲'
Expected: '2,5, 3,7, 6,2.' (length 14)
Received: '2,е, 3,г, 6,б.' (length 14)
Diff:     Expected '5' but received 'е' in index 2

You can mark the test as expected failure using xfail flag. xfail: true
HTH,",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/Futyn-Maker,4,https://github.com/liblouis/liblouis/pull/1090#issuecomment-885522163,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","I didn't know that failing yaml-tests results in failurs in building-tests, thanks.
Yes, this test is failure for reasons I wrote below, but it's necessary to solve the problem, so I haven't marked it with xfail.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1090#issuecomment-886584845,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","@Futyn-Maker Nice work!
I'm not sure whether the midnum thing is indeed a bug, but I've created the following minimal test case to show the issue:
display: tables/unicode.dis
table: |
  include tables/litdigits6Dots.uti
  punctuation , 2
  midnum , 2
  numsign 3456
flags: {testmode: bothDirections}
tests:
  - - ""2,5""
    - ""⠼⠃⠂⠑""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1090#issuecomment-886586144,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.",Possibly related: #479 and/or #805,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/1090#issuecomment-886592471,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","@bertfrees Hello!
Input:    '⠼⠃⠂⠑'
Expected: '2,5' (length 3)
Received: '2,\15/' (length 6)
Diff:     Expected '5' but received '\' in index 2

The other strange thing is that 'decpoint' opcode also doesn't work when back translating... I've replaced 'midnum' with 'decpoint' in your test and checked.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/Futyn-Maker,8,https://github.com/liblouis/liblouis/pull/1090#issuecomment-886649913,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","I wanted to try to solve the problem by using 'numericmodechars' opcode, like in UEB:
numsign 3456  number sign, just a dots operand
numericmodechars ,

But it results in the error:
Liblouis\bin\\share\liblouis\tables/ru-litbrl.ctb:38: error: Numeric mode character undefined

Why?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1090#issuecomment-886653166,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","Cool, that seems to work for me. That also makes the midnum , 2 rule obsolete:
display: tables/unicode.dis
table: |
  include tables/litdigits6Dots.uti
  punctuation , 2
  numsign 3456
  numericmodechars ,
flags: {testmode: bothDirections}
tests:
  - - ""2,5""
    - ""⠼⠃⠂⠑""
I think you need to make sure that the numericmodechars rules comes after punctuation , 2.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/Futyn-Maker,10,https://github.com/liblouis/liblouis/pull/1090#issuecomment-886667799,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","Well, I've made so:
noback	midnum	,	2	# # Don't use decpoint because of conflicts with capital letters
nofor	numericmodechars	,

Decimals have begun be translated correct, but I've got four failing tests:
Input:    'А, 1'
Expected: '⠘⠁⠂⠼⠁' (length 5)
Received: '⠘⠁⠼⠂⠁' (length 5)
Diff:     Expected '⠂' but received '⠼' in index 2
lou_checkyaml.exe:ru.yaml:144: Failure
Table: D:\Liblouis\bin\\share\liblouis\tables/ru-litbrl-detailed.utb
Display table: checkyaml_inline_table_at_line_50

Input:    '0:24 07.03.2021'
Expected: '⠼⠚⠒⠼⠃⠙ ⠼⠚⠛⠲⠼⠚⠉⠲⠼⠃⠚⠃⠁' (length 20)
Received: '⠼⠚⠒⠼⠼⠃⠙ ⠼⠚⠛⠲⠼⠼⠚⠉⠲⠼⠼⠃⠚⠃⠁' (length 23)
Diff:     Expected '⠃' but received '⠼' in index 4
lou_checkyaml.exe:ru.yaml:158: Failure
Table: D:\Liblouis\bin\\share\liblouis\tables/ru-litbrl-detailed.utb
Display table: checkyaml_inline_table_at_line_50

Best match: D:\Liblouis\bin\\share\liblouis\tables/ru-litbrl.ctb (39)
Input:    'А, 1'
Expected: '⠁⠂⠼⠁' (length 4)
Received: '⠁⠼⠂⠁' (length 4)
Diff:     Expected '⠂' but received '⠼' in index 1
lou_checkyaml.exe:ru.yaml:274: Failure
Table: D:\Liblouis\bin\\share\liblouis\tables/ru-litbrl.ctb
Display table: checkyaml_inline_table_at_line_50

Best match: D:\Liblouis\bin\\share\liblouis\tables/ru-litbrl-detailed.utb (49)
FAILURE (108 tests, 4 failures)

It looks like 'nofor' opcode is ignored!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1090#issuecomment-886673074,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.","nobackand nofor are not applicable on all opcodes.
Try midendnumericmodechars instead of numericmodechars.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1090,2021-07-22T21:24:56Z,2021-08-20T10:43:15Z,2021-08-20T10:43:15Z,MERGED,True,377,147,4,https://github.com/Futyn-Maker,Ru-litbrl.ctb: supporting back translation,1,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1090,https://github.com/Futyn-Maker,12,https://github.com/liblouis/liblouis/pull/1090#issuecomment-886687950,"I'm trying to add support of back translation for the Russian literary braille code. It's quite difficult because it's necessary to translate of letters of different alphabets.
Everything seems to be OK, excepted translation of decimals. I don't know why, but 'midnum' opcode doesn't work as expected when back translating. lou_trace shows that this opcode works, but after the decimal comma we have a letter instead of a digit. While I haven't figured out how to fix it.
The tests for back translation are also provided. Now one is failure, with decimals.",It seems to work OK now. But i think the bug with back translation of decpoint and midnum still should be fixed. It would allow to add such rules without difficulties. Thanks for help!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1091,2021-07-26T08:40:52Z,2021-08-23T20:43:46Z,2021-08-23T20:43:52Z,MERGED,True,72,70,5,https://github.com/bertfrees,Uppercase pattern of uplow should never be used if a capital sign was inserted,1,['bug'],https://github.com/liblouis/liblouis/pull/1091,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1091,"For some reason uppercase patterns with more than one cell were being
used instead of the lowercase patterns. I think this is a bug.
@BueVest Some Danish tests, notably for Greek letters, had to be marked with
xfail because the tables rely on this bug. Could you have a look please? Note that I'm also working on a new feature to indicate foreign alphabets such as Greek, so if you want you could also wait for that feature.","For some reason uppercase patterns with more than one cell were being
used instead of the lowercase patterns. I think this is a bug.
@BueVest Some Danish tests, notably for Greek letters, had to be marked with
xfail because the tables rely on this bug. Could you have a look please? Note that I'm also working on a new feature to indicate foreign alphabets such as Greek, so if you want you could also wait for that feature.",True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1091,2021-07-26T08:40:52Z,2021-08-23T20:43:46Z,2021-08-23T20:43:52Z,MERGED,True,72,70,5,https://github.com/bertfrees,Uppercase pattern of uplow should never be used if a capital sign was inserted,1,['bug'],https://github.com/liblouis/liblouis/pull/1091,https://github.com/BueVest,2,https://github.com/liblouis/liblouis/pull/1091#issuecomment-886546595,"For some reason uppercase patterns with more than one cell were being
used instead of the lowercase patterns. I think this is a bug.
@BueVest Some Danish tests, notably for Greek letters, had to be marked with
xfail because the tables rely on this bug. Could you have a look please? Note that I'm also working on a new feature to indicate foreign alphabets such as Greek, so if you want you could also wait for that feature.","Hmm, I don't think it is a bug. As you are saying, I am relying on this feature. AFAICS, you are removing a feature without any alternative in place. Exactly what problem is this solving?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1091,2021-07-26T08:40:52Z,2021-08-23T20:43:46Z,2021-08-23T20:43:52Z,MERGED,True,72,70,5,https://github.com/bertfrees,Uppercase pattern of uplow should never be used if a capital sign was inserted,1,['bug'],https://github.com/liblouis/liblouis/pull/1091,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1091#issuecomment-886564141,"For some reason uppercase patterns with more than one cell were being
used instead of the lowercase patterns. I think this is a bug.
@BueVest Some Danish tests, notably for Greek letters, had to be marked with
xfail because the tables rely on this bug. Could you have a look please? Note that I'm also working on a new feature to indicate foreign alphabets such as Greek, so if you want you could also wait for that feature.","@BueVest The alternative is to not rely on it and write rules similar to the ones in the section ""Multi-pass opcodes for converting the virtual capsletter sign @f into dot 7"".
It's just too obscure and illogical to be considered a feature in my opinion. It's not documented and it doesn't make sense to me.
The reason I stumbled on this is because I am removing the possibility to specify an uppercase and lowercase pattern at the same time with the uplow opcode (a PR will follow later). Either the dot patterns are the same and you define a capsletter to indicate capitals, or the dot patterns are not the same, in which case you use separate uppercase and lowercase rules instead of uplow rules.
The idea of this change is to make Liblouis tables more comprehensible, and also to be able to generalize uplow to the aforementioned feature to indicate foreign alphabets.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1091,2021-07-26T08:40:52Z,2021-08-23T20:43:46Z,2021-08-23T20:43:52Z,MERGED,True,72,70,5,https://github.com/bertfrees,Uppercase pattern of uplow should never be used if a capital sign was inserted,1,['bug'],https://github.com/liblouis/liblouis/pull/1091,https://github.com/Futyn-Maker,4,https://github.com/liblouis/liblouis/pull/1091#issuecomment-886579573,"For some reason uppercase patterns with more than one cell were being
used instead of the lowercase patterns. I think this is a bug.
@BueVest Some Danish tests, notably for Greek letters, had to be marked with
xfail because the tables rely on this bug. Could you have a look please? Note that I'm also working on a new feature to indicate foreign alphabets such as Greek, so if you want you could also wait for that feature.",Does it mean that now I need to replace 'uplow' with 'uppercase' and 'lowercase' in tables that i'm maintaining?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1091,2021-07-26T08:40:52Z,2021-08-23T20:43:46Z,2021-08-23T20:43:52Z,MERGED,True,72,70,5,https://github.com/bertfrees,Uppercase pattern of uplow should never be used if a capital sign was inserted,1,['bug'],https://github.com/liblouis/liblouis/pull/1091,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1091#issuecomment-886588710,"For some reason uppercase patterns with more than one cell were being
used instead of the lowercase patterns. I think this is a bug.
@BueVest Some Danish tests, notably for Greek letters, had to be marked with
xfail because the tables rely on this bug. Could you have a look please? Note that I'm also working on a new feature to indicate foreign alphabets such as Greek, so if you want you could also wait for that feature.","@Futyn-Maker I'm taking care of the refactoring, so you don't need to worry about it. The only issue I encountered and couldn't fix myself was in the Danish tables.",True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1091,2021-07-26T08:40:52Z,2021-08-23T20:43:46Z,2021-08-23T20:43:52Z,MERGED,True,72,70,5,https://github.com/bertfrees,Uppercase pattern of uplow should never be used if a capital sign was inserted,1,['bug'],https://github.com/liblouis/liblouis/pull/1091,https://github.com/BueVest,6,https://github.com/liblouis/liblouis/pull/1091#issuecomment-886891266,"For some reason uppercase patterns with more than one cell were being
used instead of the lowercase patterns. I think this is a bug.
@BueVest Some Danish tests, notably for Greek letters, had to be marked with
xfail because the tables rely on this bug. Could you have a look please? Note that I'm also working on a new feature to indicate foreign alphabets such as Greek, so if you want you could also wait for that feature.","Sorry, I wasn't aware that it depended on dotslen. yes, then it makes sense to view it as a bug. I will fix the Danish tables accordingly.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1092,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?","The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1092#issuecomment-889153289,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?","Added tests for case indication, hyphens and ellipsis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1092#issuecomment-891695092,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?",Hi @bertfrees unfortunately @mixa72 just went on vacation for two weeks. We'll look at this when he gets back,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1092#issuecomment-891707781,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?",@egli OK. You could maybe also verify some of the tests using dtbook2sbsform? Or if you already have tests for these cases this would be a good opportunity to port them to YAML?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1092#issuecomment-900535881,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?",Added tests for grade 2 contraction issues.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1092#issuecomment-901822729,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?",@bertfrees are you saying the blista has tables that fix at least some of these issues?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1092#issuecomment-902022298,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?","are you saying the blista has tables that fix at least some of these issues?

That's right.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1092#issuecomment-902486576,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?","are you saying the blista has tables that fix at least some of these issues?

That's right.

Nice",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/egli,9,https://github.com/liblouis/liblouis/pull/1092#issuecomment-902748068,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?","So I asked Mischa about the handling of names at SBS. He looked it up in the Systematik and of course there are 3 ways to do it: The way blista does it, the way we do it and another way. I guess they could not agree so they allowed everything. Make it easy for the braille learner!
So how does SBS translate names?
When a name has capitals inside such as McDonalds or McCartney then we switch to grade 0 and announce all capitals with $. We do not however announce the grade change
- # When a name has capitals inside such as McDonalds or McCartney then we switch to grade 0 
  # and announce all capitals with `$`. We do not announce the grade change
  - McCartney
  - ""$mc$cartney""
For all other names we use a weird bastard of g2 where some contractions, namely zweiformige Kürzungen, probably contractions that result in two braille cells, are not allowed. It is not g1 or g0 however.
- # the name of the singer Travi Deutscher would be contracted to ""d57""
  # but since it is a name it is contracted to ""d2t57""
  - Deutscher
  - d2t57",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1092#issuecomment-906529909,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?",@egli Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1092,2021-07-27T16:30:43Z,2021-09-02T08:20:50Z,2021-09-02T08:20:50Z,MERGED,True,1072,457,12,https://github.com/bertfrees,Add tests for various issues in German,7,['tables'],https://github.com/liblouis/liblouis/pull/1092,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1092#issuecomment-908176826,"The test data was provided by Marcel Bothe from the Deutsche Blindenstudienanstalt e.V. (blista).
There are tests for:

quotation marks
case indication
hyphens
ellipsis
grade 2 contractions

Blista has their own tables that address these issues, but I asked them to report the issues so that Liblouis can be improved.
@egli @mixa72 could you please go over these tests and indicate whether you translate them the same way or differently?",Rebased onto master and added a few more tests for contraction issues. @egli Shall I merge it now?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1093,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.","The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1093#issuecomment-900527130,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.",@egli Any comments?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1093#issuecomment-906268029,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.","The plan is to disable the feature but leave it in the code and add a way to disable it, programmatically, or manually.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1093#issuecomment-977796012,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.","I've disabled the feature, but also the macro.yaml test. Ideally we should be able to keep running the test. I think the idea we had was to create a new Github workflow where we enable the feature (possibly by changing some #define) and run all tests including macro.yaml.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1093#issuecomment-977803162,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.",I've created a #define to do the enabling/disabling now.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1093#issuecomment-984560737,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.",@egli OK to merge this one?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/1093#issuecomment-985413607,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.","Hi @bertfrees
I'm looking at adding something to configure.ac that would add a #define WITH_MACRO to config.h. I remember that we did not want a config option. Why was that?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1093#issuecomment-985422672,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.","I remember that we did not want a config option. Why was that?

Because then it wouldn't really be a ""hidden"" feature anymore. But I'm not really against it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1093#issuecomment-985617285,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.",@egli Thanks!,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/1093#issuecomment-985737442,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.","Oh, and come to think of it
macro foo
bar $1
eom

macro bar
foo $1
eom

foo hahahahaha

is also pretty bad. Just disallowing a macro to call itself will not help. Do we know the depth of the call stack somehow?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/egli,11,https://github.com/liblouis/liblouis/pull/1093#issuecomment-986043737,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.",In order to detect cycles in the macro expansion we would have to keep track of the call stack. If we hit a macro that is already in the call stack (somewhere further up) then we hit a cycle and we terminate the macro expansion with an error.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,12,https://github.com/liblouis/liblouis/pull/1093#issuecomment-986234528,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.","macro foo
bar $1
eom
macro bar
foo $1
eom

This will result in a segmentation fault actually.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1093,2021-08-06T19:39:53Z,2021-12-06T13:49:25Z,2021-12-06T13:50:38Z,MERGED,True,359,9,8,https://github.com/bertfrees,Add macro feature,4,"['enhancement', 'needs doc']",https://github.com/liblouis/liblouis/pull/1093,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/1093#issuecomment-986234607,"The syntax is explained in the test. It's a very minimalist mechanism to perform string substitutions, with positional arguments. It's similar to e.g. user-defined functions in Make. To use a macro it needs to be defined in the same file, before the call.
Limitations:

A macro is a multiline thing so can't be created using the compileString function. A consequence of this is that you can't define macros in YAML (because checkyaml uses compileString) to compile inline tables.

To do:

The documentation needs to be updated.

Credit goes out to Mike Gray who originally came up with the macro idea.","@egli Thanks for all the suggestions. I think most of them are valid, I just think it's a tiny bit late (I created the PR on August 6) and also I don't know how much more work I want to put into a feature that won't even be visible. I thought maybe we could tweak the code further when we actually plan to introduce a macro feature. Presumably we need to improve the feature anyway before we are comfortable enough with it. We might even need to rewrite the code completely.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1094,2021-08-11T08:46:40Z,2021-08-18T05:41:28Z,2021-08-18T05:41:28Z,MERGED,True,1,1,1,https://github.com/leonardder,Fix nmake build,1,[],https://github.com/liblouis/liblouis/pull/1094,https://github.com/leonardder,1,https://github.com/liblouis/liblouis/pull/1094,"I fixed the nmake build by changing cl into clang-cl. In other words, it's now using clang as we do in NVDA. Newer versions of visual studio 2019 add LLVM to the path of the tools command prompt, so the procedure for building liblouis with nmake now works again.","I fixed the nmake build by changing cl into clang-cl. In other words, it's now using clang as we do in NVDA. Newer versions of visual studio 2019 add LLVM to the path of the tools command prompt, so the procedure for building liblouis with nmake now works again.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1100,Related to #911,Related to #911,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1022268834,Related to #911,"So I replaced the g0-core table with the bidi table. Most tests pass with some exceptions:

 The tests involving '§'. @BueVest has removed these rules but there are tests for them. Have to check with @mixa72
 some tests involving mixed numbers and letters no longer work. I suspect that somehow the letters after the number are not contracted any more. Don't understand that one and have to check with @mixa72
 there is a problem with 'ck' in g2. This might be due to some weird pass2 rules (https://github.com/liblouis/liblouis/blob/bidi-merge/tables/de-g0-core.uti#L762)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1022379692,Related to #911,"OK, the problem with ck in g2 is gone. There are still some weird pass2 rules though.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1022538407,Related to #911,"@egli Already did a round of reviewing. I know it's still a draft, but still, my remarks could be useful.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1024222919,Related to #911,"So I managed to get rid of de-g0-bidi-core.uti, i.e. replace it with de-g0-bidi.utb.
There are still some problems remaining:

The translation of stuff like 'kW kVA hPa' now fails. I don't really understand how that worked before
The context+pass2 trick for single capital letters doesn't work for Æ, as we define the lowercase æ only for forward translation, as that we get problems with backwards translating ae otherwise.
There is a problem with words like '8fach' that wasn't there before

FAIL: braille-specs/de-g0-bidi-specs
====================================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /home/egli/src/liblouis/tables/de-g0-bidi.utb (18)
Input:    'kW kVA hPa'
Expected: '⠅⠘⠺ ⠅⠘⠧⠁ ⠓⠨⠏⠁' (length 13)
Received: '⠅⣿⠨⠺ ⠅⠘⠧⠁ ⠓⠨⠏⠁' (length 14)
Diff:     Expected '⠘' but received '⣿' in index 1
lou_checkyaml:./braille-specs/de-g0-bidi-specs.yaml:216: Failure
Table: /home/egli/src/liblouis/tables/de-g0-bidi.utb
Display table: unicode-without-blank.dis

Input:    'Æ'
Expected: '⠨⠁⠑' (length 3)
Received: '⠘⠁⠑' (length 3)
Diff:     Expected '⠨' but received '⠘' in index 0

FAIL: braille-specs/de-g1
=========================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /home/egli/src/liblouis/tables/de-g1.ctb (19)
Input:    '8fach'
Expected: '⠼⠓⠠⠋⠁⠹' (length 6)
Received: '⠼⠓⠠⠋⠁⠉⠓' (length 7)
Diff:     Expected '⠹' but received '⠉' in index 5
lou_checkyaml:./braille-specs/de-g1.yaml:451: Failure
Table: /home/egli/src/liblouis/tables/de-g1.ctb
Display table: unicode-without-blank.dis",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1033831223,Related to #911,"I managed to fix the forward translation of Æ with a context rule. I suspect that this is just for a workaround around a bug in the base opcode where the lowercase char is defined with a noback prefix
I also managed to fix the 'kW' problem with some more pass3 trickery
all that's left now are problems with missing contraction after a number to character change

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /home/egli/src/liblouis/tables/de-g1.ctb (19)
Input:    '8fach'
Expected: '⠼⠓⠠⠋⠁⠹' (length 6)
Received: '⠼⠓⠠⠋⠁⠉⠓' (length 7)
Diff:     Expected '⠹' but received '⠉' in index 5
lou_checkyaml:./braille-specs/de-g1.yaml:451: Failure
Table: /home/egli/src/liblouis/tables/de-g1.ctb
Display table: unicode-without-blank.dis",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1035154416,Related to #911,Hi @BueVest why does Æ need  to be indicated with 46 whereas all the other single capital letters are indicated with 45? Is that test case really correct? See https://github.com/liblouis/liblouis/blob/bidi-merge/tests/braille-specs/de-g0-bidi-specs.yaml#L258,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1060768042,Related to #911,@bertfrees any idea why generateDisplayName fails,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1060773944,Related to #911,"@bertfrees any idea why generateDisplayName fails

Just run make in that directory and check generate.log. We should let Github upload the log file if that test fails.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/egli,10,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1060776494,Related to #911,"make
go get golang.org/x/text/language/display
go: downloading golang.org/x/text v0.3.7
go build -buildmode=c-archive displayLanguage.go
displayLanguage.go:5:2: no required module provides package golang.org/x/text/language: go.mod file not found in current directory or any parent directory; see 'go help modules'
displayLanguage.go:6:2: no required module provides package golang.org/x/text/language/display: go.mod file not found in current directory or any parent directory; see 'go help modules'
make: *** [Makefile:19: displayLanguage.h] Error 1",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1100,2021-08-20T15:30:15Z,2022-03-07T15:27:23Z,2022-03-07T15:27:23Z,MERGED,True,809,1047,25,https://github.com/egli,"Integrate regular and ""bidi"" German tables",25,['tables'],https://github.com/liblouis/liblouis/pull/1100,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1100#issuecomment-1060791319,Related to #911,"../../tables/de-g1-detailed.ctb: German, partially contracted, back-translatable != German, partially contracted, detailed
   cat ../../tables/de-g1-detailed.ctb | sed 's/^\(#-index-name: *\).*$/\1German, partially contracted, detailed/g' > ../../tables/de-g1-detailed.ctb.tmp
   mv ../../tables/de-g1-detailed.ctb.tmp ../../tables/de-g1-detailed.ctb
../../tables/de-g1-detailed.ctb: German partially contracted braille (back-translatable) != German partially contracted braille (detailed)
   cat ../../tables/de-g1-detailed.ctb | sed 's/^\(#-display-name: *\).*$/\1German partially contracted braille (detailed)/g' > ../../tables/de-g1-detailed.ctb.tmp
   mv ../../tables/de-g1-detailed.ctb.tmp ../../tables/de-g1-detailed.ctb",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1102,2021-08-24T10:15:42Z,2021-08-24T15:31:59Z,2021-08-24T15:31:59Z,MERGED,True,144,72,4,https://github.com/JakeKyle,Tables/urdu,3,['tables'],https://github.com/liblouis/liblouis/pull/1102,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/1102,A few minor updates to Urdu tables and tests. Mostly to cater for spelling variations found in source text.,A few minor updates to Urdu tables and tests. Mostly to cater for spelling variations found in source text.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1102,2021-08-24T10:15:42Z,2021-08-24T15:31:59Z,2021-08-24T15:31:59Z,MERGED,True,144,72,4,https://github.com/JakeKyle,Tables/urdu,3,['tables'],https://github.com/liblouis/liblouis/pull/1102,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1102#issuecomment-904521917,A few minor updates to Urdu tables and tests. Mostly to cater for spelling variations found in source text.,"Hi @JakeKyle, this looks great. Just see my comment about the xfails.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1102,2021-08-24T10:15:42Z,2021-08-24T15:31:59Z,2021-08-24T15:31:59Z,MERGED,True,144,72,4,https://github.com/JakeKyle,Tables/urdu,3,['tables'],https://github.com/liblouis/liblouis/pull/1102,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1102#issuecomment-904739052,A few minor updates to Urdu tables and tests. Mostly to cater for spelling variations found in source text.,Rebased onto master,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1103,The patch is discussed with NLB.,The patch is discussed with NLB.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1103#issuecomment-905464371,The patch is discussed with NLB.,@KariRudjord @josteinaj Lars wants to do some updates to the Norwegian Liblouis table. I thought you might be interested in seeing the changes.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1103#issuecomment-905465203,The patch is discussed with NLB.,"Oops I missed the comment from Lars:

The patch is discussed with NLB.

So I guess you already know about it :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/josteinaj,4,https://github.com/liblouis/liblouis/pull/1103#issuecomment-906196009,The patch is discussed with NLB.,"Hi.
I have no technical objections to this patch, but @KariRudjord should be the one to approve this on behalf on NLB, and she hasn't gone through the changes yet. I don't know if she'll have time to do it or not.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1103#issuecomment-907027754,The patch is discussed with NLB.,"@larsbjorndal what is the correct translation of ""oe""? Is it '⠕⠑', i.e. 135-15?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/larsbjorndal,6,https://github.com/liblouis/liblouis/pull/1103#issuecomment-907071631,The patch is discussed with NLB.,"Is it the two letters o and e (oe) or a anything else, e.g. what unicode value is it?
…
On Fri, Aug 27, 2021 at 08:31:58AM +0000, Christian Egli wrote:
 @larsbjorndal what is the correct translation of ""oe""? Is it '⠕⠑', i.e.
 135-15?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/larsbjorndal,7,https://github.com/liblouis/liblouis/pull/1103#issuecomment-907126963,The patch is discussed with NLB.,"I've looked more deeply into it, and conferred with the handbook fro the Norwegian braille authority. The together written oe is defined as dots 346 in the section 2.2.3, which is about letters in Norse and Icelandic.

The letter ǫ,  1eb, LATIN SMALL LETTER O WITH OGONEK, is translated into dots 346. We Also Have Ǫ, which is 6-346.

Even though the Sami alphabets has priority in the Norwegian 6 dots braille system over Norse/Icelandic, we may define these characters as they don't seem to break anything.

Hope this helps.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1103#issuecomment-907685046,The patch is discussed with NLB.,"Is it the two letters o and e (oe) or a anything else, e.g. what unicode value is it?

Sorry I mean just the two letters o and e",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1103,2021-08-25T11:29:36Z,2021-08-30T11:46:13Z,2021-08-30T11:46:21Z,MERGED,True,74,46,5,https://github.com/egli,Fix/upgrade the Norwegian 6 dots braille table and subtables.,7,['tables'],https://github.com/liblouis/liblouis/pull/1103,https://github.com/larsbjorndal,9,https://github.com/liblouis/liblouis/pull/1103#issuecomment-907850045,The patch is discussed with NLB.,"You wrote:
   Is it the two letters o and e (oe) or a anything else, e.g. what
   unicode value is it?

 Sorry I mean just the two letters o and e
Thanks - oe is 135-15.

Lars",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1105,2021-08-30T09:34:04Z,2021-08-31T09:29:18Z,2021-08-31T09:29:27Z,MERGED,True,1332,1,9,https://github.com/bertfrees,New table for Tshivenda,1,['tables'],https://github.com/liblouis/liblouis/pull/1105,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1105,thanks to Christo de Klerk and the South African Braille Authority.,thanks to Christo de Klerk and the South African Braille Authority.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1106,2021-08-30T10:08:19Z,2021-08-31T10:00:06Z,2021-08-31T10:00:15Z,MERGED,True,25,6,3,https://github.com/bertfrees,Arabic computer braille: back-translate 256 to Latin full stop,1,['tables'],https://github.com/liblouis/liblouis/pull/1106,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1106,Thanks to Ikrami Ahmad.,Thanks to Ikrami Ahmad.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1108,2021-08-31T16:22:08Z,2021-09-01T09:19:38Z,2021-09-01T09:27:03Z,MERGED,True,48,25,3,https://github.com/lukaszgo1,Remove wrong rules using literal opcode from the Polish grade 1 table and add tests showing the correct behavior,2,['tables'],https://github.com/liblouis/liblouis/pull/1108,https://github.com/lukaszgo1,1,https://github.com/liblouis/liblouis/pull/1108,"As discussed in #1096 Polish grade 1 table contains a few rules using literal opcode which causes wrong translations. I've removed these rules and for each one added tests demonstrating correct translation.
If this needs to be noted in the news file perhaps something like:
""Translations of url's and file names has been improved in Polish grade 1 table""
will do for a change log entry.","As discussed in #1096 Polish grade 1 table contains a few rules using literal opcode which causes wrong translations. I've removed these rules and for each one added tests demonstrating correct translation.
If this needs to be noted in the news file perhaps something like:
""Translations of url's and file names has been improved in Polish grade 1 table""
will do for a change log entry.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1108,2021-08-31T16:22:08Z,2021-09-01T09:19:38Z,2021-09-01T09:27:03Z,MERGED,True,48,25,3,https://github.com/lukaszgo1,Remove wrong rules using literal opcode from the Polish grade 1 table and add tests showing the correct behavior,2,['tables'],https://github.com/liblouis/liblouis/pull/1108,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1108#issuecomment-909409099,"As discussed in #1096 Polish grade 1 table contains a few rules using literal opcode which causes wrong translations. I've removed these rules and for each one added tests demonstrating correct translation.
If this needs to be noted in the news file perhaps something like:
""Translations of url's and file names has been improved in Polish grade 1 table""
will do for a change log entry.",I did a small modification to your PR and approved.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1109,2021-08-31T18:46:47Z,2021-09-03T08:23:37Z,2021-09-03T08:23:37Z,MERGED,True,758,11,9,https://github.com/Futyn-Maker,Fix the ru-litbrl.ctb and add new contraction table,6,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1109,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1109,"I've improved back translation in Russian uncontracted braille table and fixed some problems with two-code-points symbols.
There's also new braille table for Russian contracted braille. Although we don't use contracted braille officially and not many people know it, the system of contracted braille was developed. This table is an experiment and may not be perfect as there's no data to test it and compare with. So mistakes will be fixed in next releases as well as users will find them.","I've improved back translation in Russian uncontracted braille table and fixed some problems with two-code-points symbols.
There's also new braille table for Russian contracted braille. Although we don't use contracted braille officially and not many people know it, the system of contracted braille was developed. This table is an experiment and may not be perfect as there's no data to test it and compare with. So mistakes will be fixed in next releases as well as users will find them.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1109,2021-08-31T18:46:47Z,2021-09-03T08:23:37Z,2021-09-03T08:23:37Z,MERGED,True,758,11,9,https://github.com/Futyn-Maker,Fix the ru-litbrl.ctb and add new contraction table,6,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1109,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1109#issuecomment-910510629,"I've improved back translation in Russian uncontracted braille table and fixed some problems with two-code-points symbols.
There's also new braille table for Russian contracted braille. Although we don't use contracted braille officially and not many people know it, the system of contracted braille was developed. This table is an experiment and may not be perfect as there's no data to test it and compare with. So mistakes will be fixed in next releases as well as users will find them.","@egli That's why I added the needs fixup label. Andrey doesn't need to worry about that. It's my fault, I redid the merge of #1088.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1109,2021-08-31T18:46:47Z,2021-09-03T08:23:37Z,2021-09-03T08:23:37Z,MERGED,True,758,11,9,https://github.com/Futyn-Maker,Fix the ru-litbrl.ctb and add new contraction table,6,"['tables', 'back-translation']",https://github.com/liblouis/liblouis/pull/1109,https://github.com/Futyn-Maker,3,https://github.com/liblouis/liblouis/pull/1109#issuecomment-910522274,"I've improved back translation in Russian uncontracted braille table and fixed some problems with two-code-points symbols.
There's also new braille table for Russian contracted braille. Although we don't use contracted braille officially and not many people know it, the system of contracted braille was developed. This table is an experiment and may not be perfect as there's no data to test it and compare with. So mistakes will be fixed in next releases as well as users will find them.","I've made ""Fetch upstream"" before pushing my commits. Don't know why Bert's commits are in this PR...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1110,2021-09-06T14:41:35Z,2021-11-24T12:22:59Z,2021-11-24T12:23:05Z,MERGED,True,163,4,3,https://github.com/bertfrees,Add more tests for the issues in German emphasis handling,1,[],https://github.com/liblouis/liblouis/pull/1110,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1110,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1110,2021-09-06T14:41:35Z,2021-11-24T12:22:59Z,2021-11-24T12:23:05Z,MERGED,True,163,4,3,https://github.com/bertfrees,Add more tests for the issues in German emphasis handling,1,[],https://github.com/liblouis/liblouis/pull/1110,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1110#issuecomment-976675569,,Forwarded it to @mixa72 so he can check,True,{'THUMBS_UP': ['https://github.com/mixa72']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1110,2021-09-06T14:41:35Z,2021-11-24T12:22:59Z,2021-11-24T12:23:05Z,MERGED,True,163,4,3,https://github.com/bertfrees,Add more tests for the issues in German emphasis handling,1,[],https://github.com/liblouis/liblouis/pull/1110,https://github.com/mixa72,3,https://github.com/liblouis/liblouis/pull/1110#issuecomment-977688617,,Seems fine.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1111,2021-09-08T13:09:31Z,2021-09-28T09:43:59Z,2021-09-28T09:47:51Z,MERGED,True,40,23,5,https://github.com/lukaszgo1,Small fixes to Polish G1,5,['tables'],https://github.com/liblouis/liblouis/pull/1111,https://github.com/lukaszgo1,1,https://github.com/liblouis/liblouis/pull/1111,"This pull request:

Uses correct representation of indexes for squared, cubed etc.
Used correct representation for fractions (I haven't added any new to the table just made sure that one present are shown according to the specification)
Changes symbol used for underscore from dots 46 to 6 (the former has been too similar to capital letter sign confusing users)

While at i I've also updated metadata of the table. The change from ""grade 1"" to ""literary"" is necessary since in Poland Grade 1 means the first level of contractions and the current table does not implement any contractions. Also ""grade 1"" in itself means nothing since there are two standards of contractions in Poland so with the former description it was not clear which one this table implements.","This pull request:

Uses correct representation of indexes for squared, cubed etc.
Used correct representation for fractions (I haven't added any new to the table just made sure that one present are shown according to the specification)
Changes symbol used for underscore from dots 46 to 6 (the former has been too similar to capital letter sign confusing users)

While at i I've also updated metadata of the table. The change from ""grade 1"" to ""literary"" is necessary since in Poland Grade 1 means the first level of contractions and the current table does not implement any contractions. Also ""grade 1"" in itself means nothing since there are two standards of contractions in Poland so with the former description it was not clear which one this table implements.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1111,2021-09-08T13:09:31Z,2021-09-28T09:43:59Z,2021-09-28T09:47:51Z,MERGED,True,40,23,5,https://github.com/lukaszgo1,Small fixes to Polish G1,5,['tables'],https://github.com/liblouis/liblouis/pull/1111,https://github.com/lukaszgo1,2,https://github.com/liblouis/liblouis/pull/1111#issuecomment-915344802,"This pull request:

Uses correct representation of indexes for squared, cubed etc.
Used correct representation for fractions (I haven't added any new to the table just made sure that one present are shown according to the specification)
Changes symbol used for underscore from dots 46 to 6 (the former has been too similar to capital letter sign confusing users)

While at i I've also updated metadata of the table. The change from ""grade 1"" to ""literary"" is necessary since in Poland Grade 1 means the first level of contractions and the current table does not implement any contractions. Also ""grade 1"" in itself means nothing since there are two standards of contractions in Poland so with the former description it was not clear which one this table implements.","It seems the last failure is not caused by this work. The log says:
FAIL: yaml/partialTrans
=======================

wine client error:0: recvmsg: Connection reset by peer
FAIL yaml/partialTrans.yaml (exit status: 1)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1111,2021-09-08T13:09:31Z,2021-09-28T09:43:59Z,2021-09-28T09:47:51Z,MERGED,True,40,23,5,https://github.com/lukaszgo1,Small fixes to Polish G1,5,['tables'],https://github.com/liblouis/liblouis/pull/1111,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1111#issuecomment-915349317,"This pull request:

Uses correct representation of indexes for squared, cubed etc.
Used correct representation for fractions (I haven't added any new to the table just made sure that one present are shown according to the specification)
Changes symbol used for underscore from dots 46 to 6 (the former has been too similar to capital letter sign confusing users)

While at i I've also updated metadata of the table. The change from ""grade 1"" to ""literary"" is necessary since in Poland Grade 1 means the first level of contractions and the current table does not implement any contractions. Also ""grade 1"" in itself means nothing since there are two standards of contractions in Poland so with the former description it was not clear which one this table implements.",Yeah no idea what that is. I've tried to re-run the checks but same result...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1112,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/1112#issuecomment-962612992,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","I think ru-ru.dis can be removed because it's useless. It was used in the outdated ru-ru-g1.utb which was removed in 3.17
@bertfrees what do you think?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1112#issuecomment-962644706,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","OK if you think ru-ru.dis can be deleted, please do.
To test display tables we have a special ""display"" testmode. Could you use that? See for example de-eurobrl6.yaml.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,4,https://github.com/liblouis/liblouis/pull/1112#issuecomment-962684882,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","@bertfrees Don't understand how it works, to be honest. I need to check if translation using this display table and the Russian braille translation tables is correct. Display mode doesn't allow to set a translation table, as I see.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1112#issuecomment-962686870,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Hmm, I guess you're right. The ""display"" test mode currently does not support virtual dots yet.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1112#issuecomment-977695833,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.",Hi @Futyn-Maker is this ready to be merged?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/1112#issuecomment-977699492,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Hello! I think yes, it can. I don't know what's wrong with automatic tests again, but it seems to be the usual situation for my PRs :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1112#issuecomment-979089774,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Well, because of the changes in tables/ru-litbrl.ctb we get failures in tables/uz-g1.utb:
FAIL: braille-specs/uz
======================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /home/runner/work/liblouis/liblouis/tables/uz-g1.utb (19)
Input:    'o’o`o‘'
Expected: '⠧⠧⠧' (length 3)
Received: '⠕⠄⠧⠧' (length 4)
Diff:     Expected '⠧' but received '⠕' in index 0
lou_checkyaml:./braille-specs/uz.yaml:43: Failure
Table: /home/runner/work/liblouis/liblouis/tables/uz-g1.utb
Display table: ru-unicode.dis

Input:    '° % () {} []'
Expected: '⠨⠴⠀⠼⠚⠴⠀⠶⠶⠀⠣⠜⠀⠣⠜' (length 15)
Received: '⠨⠴⠼⠚⠴⠀⠶⠶⠀⠣⠜⠀⠣⠜' (length 14)
Diff:     Expected '⠀' but received '⠼' in index 2
lou_checkyaml:./braille-specs/uz.yaml:49: Failure
Table: /home/runner/work/liblouis/liblouis/tables/uz-g1.utb
Display table: ru-unicode.dis

FAILURE (12 tests, 2 failures)
FAIL braille-specs/uz.yaml (exit status: 1)

@Futyn-Maker can you have a look at those failures? Thanks",True,{'CONFUSED': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,9,https://github.com/liblouis/liblouis/pull/1112#issuecomment-979106081,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Hmm, the first problem can be solved by adding in the Uzbek table rules like that:
always o' 1236

(with an apostrophe, not with right tick). But I don't know if it's normal. In facct, even in the English words an apostrophe and the right tick are interchangeable... @BAUM-Engineering what do you think?
About the second problem, it looks  like Russian rules of processing spaces conflict with Uzbek ones. Although I admit this test just hasn't took into account these rules, but I absolutely don't know Uzbek braille rules.... It's necessary to get comments from the creator of the table.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,10,https://github.com/liblouis/liblouis/pull/1112#issuecomment-979997846,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","By the way, I've noticed that in the second failing test there're simply symbols separated by the space that cannot be a real case of use. I think we can just separate degree sign and % into two tests or write some real example, something like a math expression. Because if the Uzbek braille system uses Russian (Soviet) mathematical system, the processing space rules should be similar.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1112#issuecomment-980012482,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Yes, you're probably right.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,12,https://github.com/liblouis/liblouis/pull/1112#issuecomment-981066802,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","OK, I believe that it solves all problems, but it would be nice if @BAUM-Engineering will look at this.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,13,https://github.com/liblouis/liblouis/pull/1112#issuecomment-983057794,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Last two commits are a result of my thoughts that a translatable string can start with spaces (for example, new paragraph, center alignment in file conversion software, etc.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,14,https://github.com/liblouis/liblouis/pull/1112#issuecomment-985994693,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.",Is it going to merged? I'd like this changes to be included in 3.20 which is on monday,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/1112#issuecomment-986251932,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.",@Futyn-Maker Does the NEWS file also cover your last few commits?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,16,https://github.com/liblouis/liblouis/pull/1112#issuecomment-986252756,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Yes, these commits are just minor fixes of things that have already done",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/Futyn-Maker,17,https://github.com/liblouis/liblouis/pull/1112#issuecomment-986260644,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Don't understand about a separate commit. This display-table came with the separate commit as the part of this PR.
Secondly, ru-brf.dis includes en-us-brf.dis, isn't it? Or what you mean?
The story with ru-brf.dis is similar to ru-unicode.dis: we need a display table that would help to translate Cyrillic texts (with virtual dots) to the BrailleAscii, like in Braille Unicode (ru-unicode.dis).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1112,2021-09-18T16:01:01Z,2021-12-05T17:06:09Z,2021-12-05T17:06:09Z,MERGED,True,284,458,10,https://github.com/Futyn-Maker,Improvements to the Russian braille,16,['tables'],https://github.com/liblouis/liblouis/pull/1112,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/1112#issuecomment-986262641,"I continue to work on Russian braille tables. Now I've done following:

If the period sign (.) are after digits at the beginning of a string, dot 6 isn't inserted between last digit and period. It's for items' numbers of numbered lists.
I'd had to disable back translation for French letters because of conflicts with punctuations.
I've added dot 9 to the Old Church Slavonic letters because these are Cyrillic letters, too.

Keeping as a draft before preparation to the next release will start.","Sorry, I meant in a separate PR (not commit). It's fine though. I'm just going to create a separate NEWS entry for it.

Secondly, ru-brf.dis includes en-us-brf.dis, isn't it? Or what you mean?

I completely missed that, apologies!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1115,2021-09-27T16:16:43Z,2021-09-28T09:24:33Z,2021-09-28T09:24:38Z,MERGED,True,204,163,3,https://github.com/bertfrees,"Revert ""Store the offset of a rule/character/CharDotsMapping in the struct""",1,[],https://github.com/liblouis/liblouis/pull/1115,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1115,This commit was included accidentally.,This commit was included accidentally.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1115,2021-09-27T16:16:43Z,2021-09-28T09:24:33Z,2021-09-28T09:24:38Z,MERGED,True,204,163,3,https://github.com/bertfrees,"Revert ""Store the offset of a rule/character/CharDotsMapping in the struct""",1,[],https://github.com/liblouis/liblouis/pull/1115,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1115#issuecomment-928976552,This commit was included accidentally.,It was included by accident.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1115,2021-09-27T16:16:43Z,2021-09-28T09:24:33Z,2021-09-28T09:24:38Z,MERGED,True,204,163,3,https://github.com/bertfrees,"Revert ""Store the offset of a rule/character/CharDotsMapping in the struct""",1,[],https://github.com/liblouis/liblouis/pull/1115,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1115#issuecomment-928988043,This commit was included accidentally.,But it seems to make the code simpler. OTOH the whole offset thing seems questionable. Didn't we say that if properly allocated we would not have the problem with offsets and moving locations?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1115,2021-09-27T16:16:43Z,2021-09-28T09:24:33Z,2021-09-28T09:24:38Z,MERGED,True,204,163,3,https://github.com/bertfrees,"Revert ""Store the offset of a rule/character/CharDotsMapping in the struct""",1,[],https://github.com/liblouis/liblouis/pull/1115,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1115#issuecomment-929003901,This commit was included accidentally.,"Slightly simpler maybe but not as much as I had hoped. And yeah it's just questionable.
Anyway, I thought because it was included by accident it just seems right to revert it. (We can still decide later we like it after all.)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1116,2021-09-27T16:53:35Z,2021-09-28T09:32:58Z,2021-09-28T09:33:08Z,MERGED,True,15,5,2,https://github.com/bertfrees,Fix bug discovered by Dang Hoai Phúc,1,['bug'],https://github.com/liblouis/liblouis/pull/1116,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1116,"See https://www.freelists.org/post/liblouis-liblouisxml/SV-Translate-Combined-Cap-Letters,2
An always rule starting with an undefined character would not work when that character was given an attribute (with the ""attribute"" opcode).
Related to commit bdaeb4c.","See https://www.freelists.org/post/liblouis-liblouisxml/SV-Translate-Combined-Cap-Letters,2
An always rule starting with an undefined character would not work when that character was given an attribute (with the ""attribute"" opcode).
Related to commit bdaeb4c.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1119,2021-10-16T01:47:57Z,2021-11-25T21:37:18Z,2021-11-25T21:37:18Z,MERGED,True,13665,0,8,https://github.com/brlat,New table for Japanese Braille Kanji(Kantenji),2,['tables'],https://github.com/liblouis/liblouis/pull/1119,https://github.com/brlat,1,https://github.com/liblouis/liblouis/pull/1119,I want to add Japanese Braille Kanji(Kantenji) table. How can I improve this table and test files? Thanks.,I want to add Japanese Braille Kanji(Kantenji) table. How can I improve this table and test files? Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1119,2021-10-16T01:47:57Z,2021-11-25T21:37:18Z,2021-11-25T21:37:18Z,MERGED,True,13665,0,8,https://github.com/brlat,New table for Japanese Braille Kanji(Kantenji),2,['tables'],https://github.com/liblouis/liblouis/pull/1119,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1119#issuecomment-944952821,I want to add Japanese Braille Kanji(Kantenji) table. How can I improve this table and test files? Thanks.,"To do (for maintainers):

 squash all brlat's commits into one
 merge YAML files into one
 add the new table to extra/generate-display-names/display-names
 fix/add metadata
 use metadata in tests
 cleanup table header
 update Makefiles
 NEWS entry
 Add Kensaku Y. to AUTHORS",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1119,2021-10-16T01:47:57Z,2021-11-25T21:37:18Z,2021-11-25T21:37:18Z,MERGED,True,13665,0,8,https://github.com/brlat,New table for Japanese Braille Kanji(Kantenji),2,['tables'],https://github.com/liblouis/liblouis/pull/1119,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1119#issuecomment-978048831,I want to add Japanese Braille Kanji(Kantenji) table. How can I improve this table and test files? Thanks.,@egli I'm done with the cleanup. Can you also review?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1120,2021-10-16T15:36:16Z,2021-11-24T11:17:34Z,2021-11-24T11:17:40Z,MERGED,True,0,27,2,https://github.com/bertfrees,Delete some unused and non-functioning opcodes,1,['cleanup'],https://github.com/liblouis/liblouis/pull/1120,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1120,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1120,2021-10-16T15:36:16Z,2021-11-24T11:17:34Z,2021-11-24T11:17:40Z,MERGED,True,0,27,2,https://github.com/bertfrees,Delete some unused and non-functioning opcodes,1,['cleanup'],https://github.com/liblouis/liblouis/pull/1120,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1120#issuecomment-961769785,,@egli Any objections to this one?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1121,2021-10-16T16:10:53Z,2021-11-05T10:07:00Z,2021-11-05T10:07:21Z,MERGED,True,30,0,3,https://github.com/bertfrees,Implement German downgrade indicator,1,['tables'],https://github.com/liblouis/liblouis/pull/1121,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1121,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1121,2021-10-16T16:10:53Z,2021-11-05T10:07:00Z,2021-11-05T10:07:21Z,MERGED,True,30,0,3,https://github.com/bertfrees,Implement German downgrade indicator,1,['tables'],https://github.com/liblouis/liblouis/pull/1121,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1121#issuecomment-961768968,,Not sure if this needs a NEWS entry...,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1122,2021-11-02T17:45:14Z,2021-11-24T12:30:11Z,2021-11-24T12:33:23Z,MERGED,True,11,0,5,https://github.com/lukaszgo1,Add Unicode minus symbol to Polish tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1122,https://github.com/lukaszgo1,1,https://github.com/liblouis/liblouis/pull/1122,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1122,2021-11-02T17:45:14Z,2021-11-24T12:30:11Z,2021-11-24T12:33:23Z,MERGED,True,11,0,5,https://github.com/lukaszgo1,Add Unicode minus symbol to Polish tables,1,['tables'],https://github.com/liblouis/liblouis/pull/1122,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1122#issuecomment-977827210,,Rebased and added NEWS entry.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1123,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.",True,{'EYES': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/Futyn-Maker,2,https://github.com/liblouis/liblouis/pull/1123#issuecomment-962494736,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.",I've noticed that Russian literary braille tables haven't been changed according to these fixes? Should I do it?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/Futyn-Maker,3,https://github.com/liblouis/liblouis/pull/1123#issuecomment-962494984,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","As for me, interesting changes, but I don't fully understand how it works, without documentation. Will wait.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1123#issuecomment-962499428,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","I've noticed that Russian literary braille tables haven't been changed according to these fixes? Should I do it?

Not sure what you mean. I've made the necessary changes to all tables in order to make them valid and to make all the tests pass. Is something missing?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/Futyn-Maker,5,https://github.com/liblouis/liblouis/pull/1123#issuecomment-962500537,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","Oh, I'm sorry if that's the case. I just haven't seen, for example, ru-litbrl.ctb among ""files changed"" in this PR, so I decided to clarify.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1123#issuecomment-962503577,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.",ru-litbrl.ctb is among the changed files :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/Futyn-Maker,7,https://github.com/liblouis/liblouis/pull/1123#issuecomment-968361538,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","Wow! Looks amazing!
The only question: will mode indecators work with back translation?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1123#issuecomment-968377418,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","will mode indecators work with back translation?

No, not at the moment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/hammera,9,https://github.com/liblouis/liblouis/pull/1123#issuecomment-969310341,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","Bert, please send me a private mail if base opcode is merged.
Hungarian tables using the uplow opcodes (15 rules affected now my local branch with hu-chardefs.cti file), and special rules have the grade1 and grade2 tables the single capital letter beginning word handling and uppercase words handling.
Please send me what files changed final merge the hungarian tablesto put my feature branch your changes.

Now I working improving hungarian braille input with hungarian grade1 and improving the backtranslation quality.
In hungarian grade 1 braille, when a word containing one capital letter, we use the dot 46 indicator before the word (for example person names)
If a word is uppercase, the begcaps indicator is 46-46 in hungarian grade1 language, the grade 1 standard not declare unfortunately an endcapsword marker indicator  dot combination. Now, without base and macro related changes, for example the KÁBEL word braile dot46-46-13-4-12-4-123 combination right backtranslated the KÁBEL word, another example the USB-kábel word. this situation the backtranslation is perfect too, bot lou_backtranslate and real braille input with a braille keyboard for example with JAWS For Windows.
An another example is MEV, MEV-től (megaelectronvolt).
If for example a word containing mixed uppercase and lowercase word, before all uppercase letters need putting the dot 46 combination. A typical example the metrics marks (MHz, GHz). This situation now the hungarian grade 1 language the unicode braille otput looks now right:
lou_trace  unicode.dis,hu-hu-g1.ctb
MHz
⠨⠍⠨⠓⠣

uppercase	M	134
uppercase	H	125
lowercase	z	126

GHz
⠨⠛⠨⠓⠣

uppercase	G	1245
uppercase	H	125
lowercase	z	126
Now, backtranslation this situation works perfect too, both normal contracted braille and braille input with a braille keyboard, for example with JAWS:
Command and results:
lou_trace -b hu-hu-g1.ctb
MHz
lowercase	m	134
lowercase	h	125
lowercase	z	126

GHz

lowercase	g	1245
lowercase	h	125
lowercase	z	126

megabyte, megabyte-től, GHz-től (MB, MB-től uppercase test and a not full uppercase word test):
⠨⠨⠍⠃
MB

lowercase	m	134
lowercase	b	12
⠨⠨⠍⠃⠤⠞⠁⠇

MB-tal

lowercase	m	134
lowercase	b	12
hyphen	-	36
lowercase	t	2345
lowercase	a	1
lowercase	l	123
⠨⠍⠨⠓⠣⠤⠣⠑⠇

MHz-zel

lowercase	m	134
lowercase	h	125
lowercase	z	126
hyphen	-	36
lowercase	z	126
lowercase	e	15
lowercase	l	123

The hungarian grade2 standard is little different:
If a word not full uppercase, we not using the dot 46 combination to mark capital letters, except for example the roman numbers (I. Chris, II. Chris, etc).
See few examples to how very complex unfortunately the hungarian grade2 standard:
lou_trace unicode.dis,hu-hu-g2.ctb
Attila
⠁⠞⠞⠊⠇⠁

uppercase	A	1
lowercase	t	2345
lowercase	t	2345
lowercase	i	24
lowercase	l	123
lowercase	a	1
pass2	@46a	?

I. Chris
⠨⠊⠄⠀⠉⠓⠗⠊⠎

context	[%oneromannumber]"".""	@46-24
always	.	3
space	 	0
uppercase	C	14
lowercase	h	125
lowercase	r	1235
lowercase	i	24
lowercase	s	234
pass2	@46a	?
pass2	@46a	?

II. chris
⠨⠊⠊⠄⠀⠉⠓⠗⠊⠎

context	$U[%oneromannumber]"".""	@24
always	.	3
space	 	0
lowercase	c	14
lowercase	h	125
lowercase	r	1235
lowercase	i	24
lowercase	s	234

XX. Chris
⠨⠭⠭⠄⠀⠉⠓⠗⠊⠎

context	$U[%tenromannumber]"".""	@1346
always	.	3
space	 	0
uppercase	C	14
lowercase	h	125
lowercase	r	1235
lowercase	i	24
lowercase	s	234
pass2	@46a	?

Look now some backtranslation tests this examples related (sorry, but your name will be backtranslated lowercase, because one capital letter beginning words we not using dot 46 combination the grade2 standard, after examples you will be understand why have this rule):
The used command is lou_trace unicode.dis,hu-hu-g2.ctb -b:
⠁⠞⠞⠊⠇⠁
attila

lowercase	a	1
lowercase	t	2345
lowercase	t	2345
lowercase	i	24
lowercase	l	123
lowercase	a	1

⠨⠊⠄⠀⠉⠓⠗⠊⠎
I. chris

lowercase	i	24
punctuation	.	3
space	 	0
lowercase	c	14
lowercase	h	125
lowercase	r	1235
lowercase	i	24
lowercase	s	234

⠨⠊⠊⠄⠀⠉⠓⠗⠊⠎
II. chris

lowercase	i	24
lowercase	i	24
punctuation	.	3
space	 	0
lowercase	c	14
lowercase	h	125
lowercase	r	1235
lowercase	i	24
lowercase	s	234

⠨⠭⠭⠄⠀⠉⠓⠗⠊⠎
XX. chris

lowercase	x	1346
lowercase	x	1346
punctuation	.	3
space	 	0
lowercase	c	14
lowercase	h	125
lowercase	r	1235
lowercase	i	24
lowercase	s	234

What the situation when need forward translating a full uppercase word?
Simple, in hungarian grade2 braille I don't no why, but need using only one dot 46 dot combination with begcapsword indicator.
If a mixed word containing uppercase and lovercase letters, for example MHz, GHz related words, in grade 2 braille we now need use only one capsign 46 dot indicator, because now not determine an accepted standard this situation Hungarian Braille Committee.
Look for example the USB, USB-kábel, and the MHz output forward and backward translation examples:
Forward translation command is lou_trace unicode.dis,hu-hu-g2.ctb
USB
⠨⠥⠎⠃

uppercase	U	136
uppercase	S	234
uppercase	B	12

USB-kábel
⠨⠥⠎⠃⠤⠅⠈⠃⠑⠇

uppercase	U	136
uppercase	S	234
uppercase	B	12
hyphen	-	36
lowercase	k	13
lowercase	á	4
lowercase	b	12
lowercase	e	15
lowercase	l	123

MHz
⠍⠓⠣

uppercase	M	134
uppercase	H	125
lowercase	z	126
pass2	@46a	?
pass2	@46a	?

So you see, because now not determine an accepted standard this situation Hungarian Braille Committee (what happen when a word containing mixed uppercase and lovercase letters), now need cutting the normal capsign indicator this type mixed words and one capital beginning letter words. For example with hungarian grade 2 the MHz, GHz words will be not backtranslated right.
Look now the examples backtranslation results, the command is lou_trace hu-hu-g2.ctb, the backtranslation will be not right:
⠨⠥⠎⠃
USBAN

lowercase	u	136
lowercase	s	234
endword	ban	12
⠨⠥⠎⠃⠤⠅⠈⠃⠑⠇
USBAN-kábel
lowercase	u	136
lowercase	s	234
endword	ban	12
hyphen	-	36
lowercase	k	13
lowercase	á	4
lowercase	b	12
lowercase	e	15
lowercase	l	123
⠍⠓⠣
mhoz
lowercase	m	134
endword	hoz	125-126
The ban and hoz endword parts is suffix rules, only possible fixing this type situations with nofor correct [""USBAN""] ""USB"" type rules I think.
The MHz style cases not possible fixing.

I now working with hungarian Braille input rules extending, I would like sending finalized changes before 3.20 release date with pull request.
The large change set have more testcase files, fix various issues with hungarian words backtranslation for example with cscs and ccs letters, szsz and ssz letters containing words, improve hungarian braille input with more situations.
Now, the 3.20 release date is absolute sure december 6 (not the publication date in the homepage, in the github release tagging and finalizing date)? I think the 3.18 or 3.17 release released in github a few days earlier the determined list announcement date schedule. :-):-)
Chris, Bert, what the final date before release publication when you have time looking a sent pull request and commit the changes?
The hungarian future large change set test modification I checking my local system  few large yaml test file with containing 575494 words.
Automated way I generated hungarian grade1 table a bothDirecctions yaml file with looking the forward and backward translation rules, now, already only I think 400 testcases are broken.
Unfortunatelly the yaml file is very big to push the upstream repository (38 MB).
I generated the grade 2 table only a forward translation yaml file this way too.
Now, after I think the midendnumericmodechars change, if a number follow letters, Liblouis doesn't use always rules defined dot combinations.
If a word containing for example tv2-csoport (containing number and any always defined rules in the translation table), the forward translation not happening right.
I open prewious an issue this type problem and attach a short testcase, but don't remember the issue number.
Look few wrong and good forward translation:
Wrong forward translations:
1-csatlakozó
⠼⠁⠤⠉⠎⠁⠞⠇⠁⠅⠕⠣⠪

litdigit	1	1
hyphen	-	36
lowercase	c	14
lowercase	s	234
lowercase	a	1
lowercase	t	2345
lowercase	l	123
lowercase	a	1
lowercase	k	13
lowercase	o	135
lowercase	z	126
lowercase	ó	246

tv2-csoport
⠞⠧⠼⠃⠤⠉⠎⠕⠏⠕⠗⠞

lowercase	t	2345
lowercase	v	1236
litdigit	2	12
hyphen	-	36
lowercase	c	14
lowercase	s	234
lowercase	o	135
lowercase	p	1234
lowercase	o	135
lowercase	r	1235
lowercase	t	2345

1gyakorlat
⠼⠁⠠⠛⠽⠁⠅⠕⠗⠇⠁⠞

litdigit	1	1
endnum	g	6-1245
lowercase	y	13456
lowercase	a	1
lowercase	k	13
lowercase	o	135
lowercase	r	1235
lowercase	l	123
lowercase	a	1
lowercase	t	2345

1-csúcs
⠼⠁⠤⠉⠎⠬⠉⠎
The interesting think is following:
the cs, gy letters are defined the hu-hu-g1.ctb table with always rules.
Good translation with my local branch this type words, but I need add more endnum rules and context rules to handle now this situations:
lou_trace unicode.dis,hu-hu-g1.ctb
1-csatlakozó
⠼⠁⠤⠩⠁⠞⠇⠁⠅⠕⠣⠪

litdigit	1	1
endnum	-cs	36-146
lowercase	a	1
lowercase	t	2345
lowercase	l	123
lowercase	a	1
lowercase	k	13
lowercase	o	135
lowercase	z	126
lowercase	ó	246
pass3	$D[@36-146-6]%notaccentedletters.	@36-146

tv2-csoport
⠞⠧⠼⠃⠤⠩⠕⠏⠕⠗⠞

lowercase	t	2345
lowercase	v	1236
litdigit	2	12
endnum	-cs	36-146
lowercase	o	135
lowercase	p	1234
lowercase	o	135
lowercase	r	1235
lowercase	t	2345

1gyakorlat
⠼⠁⠹⠁⠅⠕⠗⠇⠁⠞

litdigit	1	1
endnum	gy	1456
lowercase	a	1
lowercase	k	13
lowercase	o	135
lowercase	r	1235
lowercase	l	123
lowercase	a	1
lowercase	t	2345
pass2	$D.[@6-1456]	@1456

1-csúcs
⠼⠁⠤⠩⠬⠩

litdigit	1	1
endnum	-csúcs	36-146-346-146

Look the backward translation, one word not backtranslated right, but I don't no why, this is true the original table too:
lou_trace unicode.dis,hu-hu-g1.ctb -b
⠼⠁⠤⠩⠁⠞⠇⠁⠅⠕⠣⠪
1-csatlakozó

pass3	$D[@36-146]%notaccentedletters.	@36-146
litdigit	1	1
hyphen	-	36
always	cs	146
lowercase	a	1
lowercase	t	2345
lowercase	l	123
lowercase	a	1
lowercase	k	13
lowercase	o	135
lowercase	z	126
lowercase	ó	246

⠞⠧⠼⠃⠤⠩⠕⠏⠕⠗⠞
tv2-csoport

lowercase	t	2345
lowercase	v	1236
litdigit	2	12
endnum	-cs	36-146
lowercase	o	135
lowercase	p	1234
lowercase	o	135
lowercase	r	1235
lowercase	t	2345

⠼⠁⠹⠁⠅⠕⠗⠇⠁⠞
141korlat

litdigit	1	1
digit	4	1456
litdigit	1	1
lowercase	k	13
lowercase	o	135
lowercase	r	1235
lowercase	l	123
lowercase	a	1
lowercase	t	2345

⠼⠁⠤⠩⠬⠩
1-csúcs

litdigit	1	1
endnum	-csúcs	36-146-346-146

You remember the forward translation, the gy rule is defined with endnum gy rule.
An another example the 10szer word, the sz letter pair is defined with endnum sz 156 (because after a number the always sz 156 rule not execute liblouis),.
Look forward and backward translation:
Forward translation:
10szer
⠼⠁⠚⠱⠑⠗

litdigit	1	1
litdigit	0	245
endnum	sz	156
lowercase	e	15
lowercase	r	1235

10-szer
⠼⠁⠚⠤⠱⠑⠗

litdigit	1	1
litdigit	0	245
endnum	-sz	36-156
lowercase	e	15
lowercase	r	1235
pass2	$D.[@36-156-6]%notaccentedletters.	@36-156

Backward translation:
lou_trace unicode.dis,hu-hu-g1.ctb -b
⠼⠁⠚⠱⠑⠗
1055r

litdigit	1	1
litdigit	0	245
digit	5	156
litdigit	5	15
lowercase	r	1235
⠼⠁⠚⠤⠱⠑⠗

10-szer

litdigit	1	1
litdigit	0	245
hyphen	-	36
always	sz	156
lowercase	e	15
lowercase	r	1235


Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,10,https://github.com/liblouis/liblouis/pull/1123#issuecomment-970171475,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","Hi Attila,
Sure, I'll let you know when it is merged. But it might be close to the release date, so there will be little time to do additional changes. My change should however not cause any changes in behavior. At least that is the intention, and all the existing tests still pass.
I'm not sure your other comments about improving back-translation are related to my change. Did I break something?
I'm sorry but I didn't read your whole comment. I feel this is a bit too technical for me and I don't have time to go into such detail about individual braille tables. Please let me know if you think my base opcode change broke something. I'm not sure if you just want to inform us about what you are doing, or if you need help with something? If you need help, could you please make each question as specific as possible?
Yes, the release date will be like we announced. But be sure to make any pull requests on time! Don't wait for the ""base opcode"" PR to be merged.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1123#issuecomment-970172604,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","@egli Don't forget to look at this PR. I really need it to go in, and I want to know in time if you have requests.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/hammera,12,https://github.com/liblouis/liblouis/pull/1123#issuecomment-970225954,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","Hy bert,
You not broke anything.
I wrote this comment, because I see this part the discussion:
I think Chris wrote few days earlyer:
""The only question: will mode indecators work with back translation?""
You wrote:
""No, not at the moment.""
I dont no this change related what mode indicators affected. Capsletter, begcapsword, endcapsword indicators?


The wroted examples related I have only one question:
why backtranslated now wrong now the master branch for example thre 1gyakorlat word with 141gyakorlat, when the gy letter defined with always gy 1456 rule and endnum gy 1456 rule.
With hu-chardefs.cti file include following files with uses the 1456 and 1 dot combination:
digits6DotsPlusDot6.uti
I using the nocontratsign 6 rule and numericnocontchars abcdefghij- rules my local feature branch.
In hungarian language after a number have a g letter, need presenting the dot6 combination, but if have the gy letters, need cutting this dot combination because gy not meaning number digit with hungarian language.
So:
how can possible handling elegant backtranslate this situation if a table maintainer using numericmodechars opcode, numericnocontchars rule and always opcode defined rules not executed after a number?
Only enough to look the last forward and backward translation example with I wrote.

Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/1123#issuecomment-970238960,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","The mode indicators will not work in back-translation, however the caps indicators (which are now a special case of mode indicators), still work as before, also in back-translation.
To answer your question with the ""1gyakorlat"" example: it would help if you could point us to a failing test and if needed the branch that contains your latest work in progress.
You said your YAML file is too big to commit to the upstream repository. Would it be possible to commit a fraction of it? For instance, if you would keep every 10th test, the file would the 10 times smaller.
But anyway, can we move this discussion to another issue or PR?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/1123#issuecomment-977888827,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.",We should drop commit 6e09ee8. We decided to do it in the next release: #1117.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,15,https://github.com/liblouis/liblouis/pull/1123#issuecomment-978005262,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","@egli To answer your question why characters need to be linked (based on each other):
For uppercase mode, it is quite clear:

To have case insensitive translation rules
To have case insensitive hyphenation patterns
To know which letters do not have an uppercase counterpart, because

these letters do not cancel uppercase mode
it influences how word boundaries are determined (together with spaces and capsmodechars)



For modes in general, it is maybe less clear.

Does not apply to the more general case for now (and it will probably stay that way)
Does not apply either
Also applies to the more general case. Initially I just did this to stay as close as possible to how uppercase is handled. Later on it turned out it was actually really useful to implement the Dutch requirement (#1051).

To summarize, mode indication could in theory also have worked through attributes only, without basing characters on each other. But the behavior would have been slightly different.
By the way, you will see that the PR for #1051 doesn't use the base opcode at all (but it does use the new mode indicator opcodes of course). This was not the plan, but I had misinterpreted the requirements. Luckily it was easy to implement it correctly thanks to the aforementioned feature (3.).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/1123#issuecomment-978137082,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","After rebasing to master I found a bug, which I fixed. Also noticed that #963 was fixed by this PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,17,https://github.com/liblouis/liblouis/pull/1123#issuecomment-984560518,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","Rebased, and the tables don't use the macro feature anymore.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/1123#issuecomment-986257724,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.",@egli As I mentioned before I added some new warnings when certain rules override other rules. This is causing a lot of noise because many tables don't care about overriding rules (and in some cases it is done intentionally). Not sure what to do in order to suppress the warnings? Make them into debug messages maybe?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/egli,19,https://github.com/liblouis/liblouis/pull/1123#issuecomment-986284134,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","Make them into debug messages maybe?

I would, yes",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,20,https://github.com/liblouis/liblouis/pull/1123#issuecomment-986288145,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.",Already did it :),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/hammera,21,https://github.com/liblouis/liblouis/pull/1123#issuecomment-986834026,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","@bertfrees, what change with hungarian braille tables related, only the hu-chardefs.cti file affected?
I final check now with braille input extending related change with extend_braille_input feature branch, but before merge this base opcode change my feature branch, I would like known what parts need me modifying the feature branch my hungarian tables, or what conflicts I need resolve with subtable files.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/bertfrees,22,https://github.com/liblouis/liblouis/pull/1123#issuecomment-986847109,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.",@hammera I've already dealt with the conflicts. I've rebased your branch and force-pushed it. It was indeed only the hu-chardefs.cti file that was affected.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1123,2021-11-05T10:02:57Z,2021-12-06T13:57:42Z,2021-12-06T16:28:58Z,MERGED,True,9102,4137,127,https://github.com/bertfrees,"""base"" opcode",15,['enhancement'],https://github.com/liblouis/liblouis/pull/1123,https://github.com/egli,23,https://github.com/liblouis/liblouis/pull/1123#issuecomment-986857408,"This PR:

Removes the uplow upcode.
Introduces a more low-level base opcode that can be used, together with some other opcodes, to replace uplow. The base opcode links one character to another, usually an uppercase to a lowercase. But it is more general as it can work with any character attribute, not only uppercase.

This fixes issue #702 (comment).
To do:

 documentation
 the macro feature was used to refactor the tables, but we'll disable the feature so the tables need more refactoring

@egli I'd like you to review this already even though the documentation is not finished yet, because I really want this (and #1051) to go into the next release.","@bertfrees could you add some sort of a NEWS entry for this? Maybe under ""New features"" and/or under ""Backwards incompatible changes""",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1124,fixes #1064,fixes #1064,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1124#issuecomment-972769545,fixes #1064,@egli What do you think about this change?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1124#issuecomment-976604959,fixes #1064,"There is one issue I haven't solved yet: if there are multiple fields with the same key, the lou_getTableInfo function will only get the first one (first in alphabetic order). @egli How would you solve this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1124#issuecomment-976625184,fixes #1064,"There is one issue I haven't solved yet: if there are multiple fields with the same key, the lou_getTableInfo function will only get the first one (first in alphabetic order). @egli How would you solve this?

Dang good question. I was going to say that lou_getTableInfo should return a list or an array now. This looks doable in lou_tableInfo.c, but not so straight-forward in extra/generate-display-names/generate.c",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1124#issuecomment-976642017,fixes #1064,Actually the array should also be sorted by appearance in the table I think. This way extra/generate-display-names/generate.c can e.g. get the first locale entry and generate the table name based on that.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1124#issuecomment-1012159762,fixes #1064,"@egli I changed my mind about lou_getTableInfo. For now I'm just returning the first occuring matching field, rather than the first in alphabetical order, or a list of all the matching fields.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1124#issuecomment-1013216187,fixes #1064,Updated documentation.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/bertfrees,8,https://github.com/liblouis/liblouis/pull/1124#issuecomment-1044508629,fixes #1064,@egli Could you please review again?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1124,2021-11-07T18:37:27Z,2022-02-21T13:35:14Z,2022-02-21T13:35:19Z,MERGED,True,81,25,10,https://github.com/bertfrees,Allow multiple values metadata fields with the same key in one table,5,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1124,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1124#issuecomment-1044732269,fixes #1064,Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1130,2021-11-18T11:18:13Z,2021-11-25T14:19:08Z,2021-11-25T14:19:14Z,MERGED,True,9,0,1,https://github.com/bertfrees,Some more tests for German translation issues in grade 2,2,['tables'],https://github.com/liblouis/liblouis/pull/1130,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1130,thanks to Marcel Bothe.,thanks to Marcel Bothe.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1130,2021-11-18T11:18:13Z,2021-11-25T14:19:08Z,2021-11-25T14:19:14Z,MERGED,True,9,0,1,https://github.com/bertfrees,Some more tests for German translation issues in grade 2,2,['tables'],https://github.com/liblouis/liblouis/pull/1130,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1130#issuecomment-977691170,thanks to Marcel Bothe.,Christian forwarded it to Mischa.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1132,2021-11-24T11:18:43Z,2021-11-24T14:00:17Z,2021-11-24T14:00:19Z,MERGED,True,31,0,3,https://github.com/bertfrees,Add test for issue #963,1,[],https://github.com/liblouis/liblouis/pull/1132,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1132,"dot 7 capitalization indicator remains active when it shouldn't
See #963","dot 7 capitalization indicator remains active when it shouldn't
See #963",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1134,2021-11-27T10:25:14Z,2021-12-01T08:10:57Z,2021-12-01T08:16:04Z,MERGED,True,1623,393,2,https://github.com/school510587,Update zh-tw.ctb version 2021-11,1,['tables'],https://github.com/liblouis/liblouis/pull/1134,https://github.com/school510587,1,https://github.com/liblouis/liblouis/pull/1134,"Summary of changes:

Complete translation of CJK Radicals Supplement
Change the default braille pattern of 蛤 to ⠗⠜⠂ for various reasons available here in Chinese
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Add a math symbol ◊ (⠫⠓)

Reviewers:

Coscell Kao <coscell@gmail.com>
林宇慶 <kevin82222@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
黃偉豪 <hurt.nzsmr@gmail.com>
陳鵬安 <andy72039@gmail.com>","Summary of changes:

Complete translation of CJK Radicals Supplement
Change the default braille pattern of 蛤 to ⠗⠜⠂ for various reasons available here in Chinese
Correct the default braille pattern of many Chinese characters
Add various Chinese phrases involving exceptions of braille patterns
Add a math symbol ◊ (⠫⠓)

Reviewers:

Coscell Kao <coscell@gmail.com>
林宇慶 <kevin82222@gmail.com>
嘯傲俠羽 <crazy@mail.batol.net>
黃偉豪 <hurt.nzsmr@gmail.com>
陳鵬安 <andy72039@gmail.com>",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/1136,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,2,https://github.com/liblouis/liblouis/pull/1136#issuecomment-984922034,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Hy Chris,
I temporary marked now two testcase with xfail: true flag, the log file showed another two testcases is I fixed.
The 141gyakorlat and 141Gyakorlat words will not surprise me, but I don't no how possible fix these issue part with multipass operator.
Before midendnumericmodechars, numericnocontchars opcode related change, this type word doesn't producing problems.
If you or Bert not have any idea this type word backtranslation fixing, We mark these two testcase with xfail flag now with backtranslation testcase?
Forward translation is OK.
Look the lou_trace unicode.dis,hu-hu-g1.ctb output:
1gyakorlat
⠼⠁⠹⠁⠅⠕⠗⠇⠁⠞
1.    litdigit    1    1
2.    endnum    gy    1456
3.    lowercase    a    1
4.    lowercase    k    13
5.    lowercase    o    135
6.    lowercase    r    1235
7.    lowercase    l    123
8.    lowercase    a    1
9.    lowercase    t    2345
10.    pass2    $D.[@6-1456]    @1456

1Gyakorlat
⠼⠁⠨⠹⠁⠅⠕⠗⠇⠁⠞
1.    litdigit    1    1
2.    endnum    gy    1456
3.    lowercase    a    1
4.    lowercase    k    13
5.    lowercase    o    135
6.    lowercase    r    1235
7.    lowercase    l    123
8.    lowercase    a    1
9.    lowercase    t    2345

Look the backtranslation output what happening now, the test syntax is lou_trace -b unicode.dis,hu-hu-g1.ctb -b command:
⠼⠁⠹⠁⠅⠕⠗⠇⠁⠞
141korlat
1.    litdigit    1    1
2.    digit    4    1456
3.    litdigit    1    1
4.    lowercase    k    13
5.    lowercase    o    135
6.    lowercase    r    1235
7.    lowercase    l    123
8.    lowercase    a    1
9.    lowercase    t    2345

⠼⠁⠨⠹⠁⠅⠕⠗⠇⠁⠞
14akorlat
1.    litdigit    1    1
2.    digit    4    1456
3.    lowercase    a    1
4.    lowercase    k    13
5.    lowercase    o    135
6.    lowercase    r    1235
7.    lowercase    l    123
8.    lowercase    a    1
9.    lowercase    t    2345

The 1456 dot combination is defined with the digits6DotsPlusDot6.uti file the digit operator code, usual, similar with other languages braille tables this file included with hu-chardefs.cti file, after the latinLetterDef6Dots.uti file.
Possible this include file producing the problem, but if I comment outh this file include, I get following dot combination the gy letter if I not using the unicode.dis file:
⠹
The digits6DotsPlusDot6.uti file defined with following dots:
digit        0      346
digit        1      16
digit        2      126
digit        3      146
digit        4      1456
digit        5      156
digit        6      1246
digit        7      12456
digit        8      1256
digit        9      246

The digit 0 dot combination marking hungarian language with ú character, the digit 1 dot combination is é character, the digit 2 dot combination is z character, the digit 3 dot combination marking with cs letter combination, the digit 4 is the gy letter pair, the digit 5 is the sz letter pair, the digit 6 is ny letter pair, the digit 7 is the ő letter, the digit 8 is the ty letter, the digit 9 is the ó letter.
I think only affected with the numericnocontchars defined letters, cs, gy and sz letter too, because need using same dot combination both forward and backward translation with the digits6DotsPlusDot6.uti file dots.
Temporary now mark fail this two testcases, the another two testcase I already fixed.
When you would like close the release commit date period?
I think the release schedule date is december 6TH, but I don't nou you and Bert how many time required to generate final release builds, writing announcements with publicating future the homepage, etc.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,3,https://github.com/liblouis/liblouis/pull/1136#issuecomment-984944857,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Perfect, important checks are passed, only with Win32 and Win64 related builds are waiting status report.

Build for win32 Expected — Waiting for status to be reported
Required
Build for win64 Expected — Waiting for status to be reported
Required",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,4,https://github.com/liblouis/liblouis/pull/1136#issuecomment-985446642,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@egli, can you tell me an end date until you accept changes to a pull request before Liblouis version 3.20 is officially released?
So, what the last date to I have possibility send commits this pull request before master branch merge to you and you Bert have enough time to work another requests reviewing?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,5,https://github.com/liblouis/liblouis/pull/1136#issuecomment-986094388,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Perfect, all important checks are passed, only with .github/workflows/mingw.yml file related actions waiting with status report.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1136#issuecomment-986845523,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","I've rebased the branch so that now only 10 commits remain (the 13 other commits were merge commits). I also dealt with the few uplow rules that are not allowed anymore (after #1123).
Still I'm having a hard time understanding what exactly changed in each of the remaining 10 commits. I have the feeling the various changes are spread all over the commits. I'm tempted to squash everything into a single commit.
Thanks for the summary but I don't think we can include it like this in the NEWS file. I can't understand it. How do we deal with this?
Even though I don't understand much of it, it looks like you did a massive improvement, so thanks!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1136#issuecomment-986857605,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","I like the many tests that you have added, but I'm missing some explanation in the test files of what is being tested and why the tests have been divided into different files the way they have.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1136#issuecomment-986982846,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.",@hammera sorry we are running out of time. We are moving this to the next milestone.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,9,https://github.com/liblouis/liblouis/pull/1136#issuecomment-986986982,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@bertfrees, I think resolved all issues. The hu.tbl, hu-hu-g1.ctb, hu-hu-g2.ctb files not containing the include hyph_hu_HU.dic line.
With testcases related:
The braille-specs/hu-hu-g1_braille_input_forward.yaml and hu-hu-g1_braille_input_backward.yaml files testing the special hungarian braille input typing related dot combination rules if a word or a number containg for example special consonants (a cscs letter, a gygy letter, a ggy letter, etc).
The hu-hu-g1-numbers_forward.yaml, hu-hu-g1-numbers_backward.yaml and hu-hu-g1-numbers_both.yaml testing collected mixed numbers and letters containing words forward and backward translation.
Now, all variations are tested with three test files, only forward translation, only backward translation, and the new doed bothDirection mode lou_checkyaml mode.
The hu-hu-g2.ctb table related the hu-hu-g2-numbers_forward.yaml and hu-hu-g2-numbers_backward.yaml file testing the collected hungarian suffixes if after have end of a number (for example 1-ben, 2-ben, 2-ből, etc).
@egli, very sorry to not land this modification in the 3.20 release, because the backtranslation quality and braille input are drastical better now.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,10,https://github.com/liblouis/liblouis/pull/1136#issuecomment-987050794,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@chris or @bertfrees, please send me private what the best practice easyest your work with reviewing related if need merging the base branch the extend_braille_input branch if happened a larger change (for example now the base opcode change afternoon).
Usual, I used following method previous when I see a change the master branch:

In Github site I fetch and merge master branch my fork,
If not have bigger change, I simple ran following commands in extend_braille_input branch (of course command line already configured the Liblouis upstream repository master branch with an upstream named repository trackingbranch):

git fetch upstream
git merge upstream/master


Final, if not have merge conflicts the extend_braille_input branch, and all testcases works perfect, I do gith push command.

If not need any modification, please don't forgot to commit this pull request changes before 3.21 release.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1136#issuecomment-987270940,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@hammera So sorry we had to disappoint you. It was all just a bit late notice. I didn't have the chance until this afternoon to look at your changes, and there were other things on our plate as well.
I have rebased the branch again and force-pushed the result.
The best way to deal with changes in the master branch when working on a feature branch is simply to ignore the changes on master I think, and also to try to keep your feature branches short-lived. If there are any conflict to solve, we will try to deal with it ourselves first, and only if needed we will ask help from you. In the case of the ""base-opcode"" change, the conflicts were easy to solve for me.
Whenever I do a force-push, it's best to just reset your branch to it. First, make sure you are on your feature branch and you have no local changes that were not committed and pushed yet, then reset your local branch to the remote branch. For example, in this case (assuming the ""origin"" remote points to ""git@github.com:hammera/liblouis.git""):
git fetch origin
git reset --hard origin/extend_braille_input

Thanks for the explanation of the different test files.

... files testing the special hungarian braille input typing related dot combination rules ...

What do you mean with ""braille input""? I associate braille input with back-translation.
Regarding having ""forward"", ""backward"" and ""both"" files: couldn't you just have a single file that uses the ""bothDirections"" mode?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,12,https://github.com/liblouis/liblouis/pull/1136#issuecomment-988095815,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@bert, you wrote:

So sorry we had to disappoint you. It was all just a bit late notice. I didn't have the chance until this afternoon to look at your changes, and there were other things on our plate as well.

No matter, no problem. Absolute understand and respect with you and @egli, both two need doing hard work before release prep, and possible need revieving more pull requests before release prep.
My purpose last week friday to I finalize this feature before december 5 afternoon, but because last week sunday I must need reviewed saturday and sunday a larger local backtranslation result possible failure list, unfortunatelly I done only sunday evening the final backtranslation correct rule definition commit and the final quality verifycation.
Now, the forward and backward translation quality result is following with a local 560495 words containing yaml database:
Forward translation result, this file is perfect, because forward translation happening.
Backvard translation result:
I think have only 50 failures, this failures typical grammar check rule change related failures, not hungarian backward translation related failures. Some words with containing ssz or szsz characters grammar check result are acceptable both (for example the ésszerű old grammar check rule and észszerű word part grammar check). Because hungarian grade1 and grade2 braille need marking the szsz letters and ssz letters forward translation the 156-156 dot combination (not have possibility to add a dot marker to determine when need backtranslating this situation this dot combination with szsz and when need backtranslating this dot combination with ssz letters). So, we forward translation not have possibility to use in hungarian braille standard a different dot combination with szsz letters, and an another dot combination the ssz letters (virtual dots this situation not help resolve this problem, multipass rules are similar not resolves this situation too).
Liblouis of course doesn't possible determining what backtranslation result are right (for example ésszerű and észszerű). Liblouis is not a braille grammar checker, not this is the purpose the project. :-):-)
You wrote:

Thanks for the explanation of the different test files.
What do you mean with braille input? I associate braille input with back-translation.

In hungarian language we says braille input (braille typing the correct english word I think) when the user typing a phisical refreshable braille display, or typing a normal PC keyboard a program with supports six dot braille input mode typing.
For example, JAWS For Windows uses Liblouis with normal forward braille presentation, and lot of languages uses Liblouis to support braille input (braille typing) with for example a Focus Blue 40 or 80 display.
To provide possibility to hungarian users have possibility correct hungarian language typing all special letter consonants combinations with forward translation are equals dot combination mark the final braille presenting, we need use more lot of noback and nofor multipass operator codes with use first a special dot combination (for example the cscs letter pair with 146-5-146), and final need forward presenting the typed dot combination with 146-146 dot combination to support official hungarian braille standard with braille presentation.
So, both two terminology are correct, with you wrote (braille input are only backward translation), but the hungarian language terminology braille input meaning more thing.
hu-hu-g1_braille_input.cti file containing various rules with provide possibility to we have possibility support hungarian language typing a refreshable braille display any program, with uses Liblouis the braille typing input implementation supporting purpose, independent the user typing the braille dot combination a refreshable braille display, or the typing happening a phisical PC keyboard for example the asdfghjk letters.
Sorry if me english not alwais grammar check right.
Jaws already supports braille input using Liblouis a refreshable braille display with contracted braille, NVDA and Orca unfortunatelly not using yet Liblouis to supports braille typing implementation, hopefully once will be this is change and this implementation supporting are once happening, and both Windows, Linux, and for example Android if the platform available screen reader uses Liblouis to supports braille typing implementation, hungarian visually impaired people will be have equals possibility to typing braille keyboard with contracted braille text, independent the used platform, screen reader or operating system.
NVDA and orca now simple uses Liblouis to support  with contracted text forward translation presenting purpose.
The hu-hu-g1_braille_input_forward.yaml file simulates the normal PC keyboard typing normal write text various testcases, and the hu-hu-g1_braille_input_backward.yaml file simulates the braille display typing testing, with the special consonant letter pair dot combination (for example the cscs letter pair containing word backtranslation verification with 1456-5-1456 unicode braille input).
This situation not have possibility to reduce this testcases only with bothDirections mode yaml file.
You wrote:

Regarding having ""forward"", ""backward"" and ""both"" files: couldn't you just have a
single file that uses the ""bothDirections"" mode?

Thanks the suggestion, this is acceptable. When I generated this forward and backward direction simulation testcases, the bothDirections yaml operator mode yet not awailable.
I will doing this change the numbers testcases related, this is will reduce the source code size and repository quota size.
With testcase size limit and a testcase file tests numbers limit related:
What test file limit are acceptable you and Chris? I not remember already, but for example few danish test files containing large numbers have testcases, sure have purpose this:
-rw-r--r-- 1 root root 10824454 jún    8 18:17 da-dk-g26-dictionary_harness.yaml (236432 tests)
-rw-r--r-- 1 root root 10845794 jún    8 18:17 da-dk-g28-dictionary_harness.yaml (237771 tests)
-rw-r--r-- 1 root root 11937115 jún    8 18:17 da-dk-g16-dictionary_harness.yaml (237375 tests)
-rw-r--r-- 1 root root 11975331 jún    8 18:17 da-dk-g18-dictionary_harness.yaml (239203 tests)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,13,https://github.com/liblouis/liblouis/pull/1136#issuecomment-988127048,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Regarding having ""forward"", ""backward"" and ""both"" files: couldn't you just have a single file that uses the ""bothDirections"" mode?

This is done now, only I keep grade 1 tables related the tests/braille-specs/hu-hu-g1-numbers_both.yaml file.
@bertfrees, thanks the suggestion.
Attila",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,14,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1030139204,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Hi Chris and bert,
I adapted only with following changes from master branch into tables/hu-chardefs.cti file, with already you doed into master branch with invisible characters related:
letter \x007f 456
punctuation \x0085 3-3-3
Have another changes with I need applying into extend_braille_input branch with hungarian table files related?
Into tables/hu-exceptionwords.cti file I added one exceptions only.
Because in march with Whispero will refres into Liblouis latest release the JAWS For Windows 2022 beta release, and since 2022 january 10TH Whispero affecting only officialy Liblouis Github repository awailable table updates, critical important to land the hungarian braille input fix into the 3.21 release. The Liblouis 3.21 release date is March 07TH I think, but I don't no when will be updating in march the update from Vhispero to the JAWS release. Hopefully will waiting the march 07 awailable Liblouis 3.21 release before the Liblouis upgrade, the Jaws For Windows estimated final release date I think is 2022. april.
So, before march 07 please merge the extend_braille_input branch content into master branch.
We have more than one month to doing you requested fixups, please give me a list what can need fixing the extend_braille_input branch before merge.
Thank you your patient,
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,15,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1036451353,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@bertfrees or @egli, future possible will be have a little a merge conflict when the master branch merge happening, I don't no how can possible resolve this conflict into tables/hu-chardefs.cti file, so ask a little help to I again see the feature branch the checks result when pushing a final change.
I show a little diff output after I tryed apply this fix from master branch into extend_braille_input branch:
diff --git a/tables/hu-chardefs.cti b/tables/hu-chardefs.cti
index af893d3d..01998da5 100644
--- a/tables/hu-chardefs.cti
+++ b/tables/hu-chardefs.cti
@@ -60,7 +60,7 @@ punctuation	\\	5-16	REVERSE SOLIDUS
 punctuation	]	234567	RIGHT SQUARE BRACKET
 punctuation	~	2346	TILDE
 punctuation	^	5-124	CIRCUMFLEX ACCENT
-letter � 456
+letter \x007f 456
 punctuation _ 6-36
 punctuation          _ 456           #95    _  LOW LINE
 punctuation	`	345	GRAVE ACCENT
@@ -233,7 +233,7 @@ punctuation — 36-36
 lowercase ä 26
 punctuation · 3 MIDDLE DOT
 punctuation § 3456-1236
-punctuation � 3-3-3
+punctuation \x0085 3-3-3
 letter ç 14
 letter þ 245
 letter ø 12345

This conflict is related only I think with following commit when future happening the merge into master branch:
commit 0ae4e899d04cc095573c0de0a27cf6106caf66f8
Author: Christian Egli <christian.egli@sbs.ch>
Date:   Tue Dec 14 09:19:33 2021 +0100

    Use hex instead of invisible chars
    
    such as ""Delete"" or ""Next Line (NEL)""

diff --git a/tables/hu-chardefs.cti b/tables/hu-chardefs.cti
index 7777a9a4..d90db8ef 100644
--- a/tables/hu-chardefs.cti
+++ b/tables/hu-chardefs.cti
@@ -59,7 +59,7 @@ punctuation	]	234567	RIGHT SQUARE BRACKET
 punctuation	~	2346	TILDE
 
 punctuation	^	2346	CIRCUMFLEX ACCENT
-letter � 456
+letter \x007f 456
 punctuation _ 6-36
 punctuation          _ 456           #95    _  LOW LINE
 punctuation	`	345	GRAVE ACCENT
@@ -230,7 +230,7 @@ punctuation — 36-36
 lowercase ä 26
 punctuation · 3 MIDDLE DOT
 punctuation § 3456-1236
-punctuation � 3-3-3
+punctuation \x0085 3-3-3
 letter ç 14
 letter þ 245
 letter ø 12345

I simple rewert now this change into extend_braille_input branch? In upstream master branch lot of thinks are changed, now the checks in github site doesn't running in this pull request.
My machine if I exporting the LOU_TABLEPATH with usr/src/liblouis/tables directory, all hungarian tests are passed.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,16,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1041731710,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","I think now not need adding new rules into hungarian table files.
Future need adding a larger testcase file with containing the special consonants related words testcases, but this is not important now the 3.21 release.
With news file related I think enough following short sentence:
Improved forward, backward and braille typing translation quality with hungarian grade 1 and grade 2 tables, and adapted new hungarian braille standard changes related rules.
I see only this request the todo list this pull request related (need NEWS file).
We have estimated 18 days before 3.21 release.
Take care and have a nice day,
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,17,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1046825367,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@bertfrees or @egli, possible help me resolve the tables/hu-chardefs.cti file merge conflicts to I see the checks result the base branch? Because both master branch and extend_braille_input branch containing changes with tables/hu-chardefs.cti file related,
Now need possible a rebase.
Lot of braille dots are changed since 2020, with the master branch not containing yet.
A diff patch with compatible the master branch:
diff --git a/tables/hu-chardefs.cti b/tables/hu-chardefs.cti
index d90db8ef..01998da5 100644
--- a/tables/hu-chardefs.cti
+++ b/tables/hu-chardefs.cti
@@ -27,6 +27,8 @@
 space \x001b 1b escape character for html back-translation
 space \x00a0 a
 include spaces.uti
+space \e 1b
+space \f 0
 punctuation	\x2007 0	FIGURE SPACE
 punctuation	\x202f 0	NARROW NO-BREAK SPACE
 
@@ -42,7 +44,7 @@ punctuation	,	2	COMMA
 punctuation	-	36	HYPHEN-MINUS
 punctuation − 36	Added u+2212 simbol
 punctuation	/	256	SOLIDUS
-
+punctuation ­ 36
 punctuation	.	3	FULL STOP
 sign # 3456
 punctuation	:	25	COLON
@@ -54,11 +56,10 @@ punctuation	>	45	GREATER-THAN SIGN
 punctuation	?	26	QUESTION MARK
 
 punctuation	[	123567	LEFT SQUARE BRACKET
-punctuation	\\	347	REVERSE SOLIDUS
+punctuation	\\	5-16	REVERSE SOLIDUS
 punctuation	]	234567	RIGHT SQUARE BRACKET
 punctuation	~	2346	TILDE
-
-punctuation	^	2346	CIRCUMFLEX ACCENT
+punctuation	^	5-124	CIRCUMFLEX ACCENT
 letter \x007f 456
 punctuation _ 6-36
 punctuation          _ 456           #95    _  LOW LINE
@@ -76,15 +77,18 @@ lowercase ű	23456
 lowercase ö 12345
 lowercase õ 12456
 lowercase û 23456
+lowercase q 12346
 lowercase z 126
 punctuation & 5-12346
 letter q 12346
 punctuation	{	12356	LEFT CURLY BRACKET
-punctuation	|	34	VERTICAL LINE
+punctuation	|	5-1245	VERTICAL LINE
 punctuation	}	23456	RIGHT CURLY BRACKET
 punctuation	""	4	QUOTATION MARK
 include latinLetterDef6Dots.uti
 include digits6DotsPlusDot6.uti
+lowercase q 12346
+lowercase z 126
 punctuation	─	2356	BOX DRAWINGS LIGHT HORIZONTAL
 punctuation	━	2356	BOX DRAWINGS HEAVY HORIZONTAL
 punctuation	│	123456	BOX DRAWINGS LIGHT VERTICAL
@@ -205,7 +209,6 @@ punctuation	╴	2356	BOX DRAWINGS LIGHT LEFT
 punctuation	╵	123456	BOX DRAWINGS LIGHT UP
 punctuation	╶	2356	BOX DRAWINGS LIGHT RIGHT
 punctuation	╷	2356	BOX DRAWINGS LIGHT DOWN
-#punctuation	%	2356	BOX DRAWINGS HEAVY LEFT
 punctuation	╹	123456	BOX DRAWINGS HEAVY UP
 punctuation	╺	2356	BOX DRAWINGS HEAVY RIGHT
 punctuation	╻	2356	BOX DRAWINGS HEAVY DOWN
@@ -224,7 +227,7 @@ punctuation “ 236
 punctuation ” 356
 punctuation „ 1268
 sign • 26
-punctuation ś 26
+letter ś 234
 letter ź 134568
 punctuation — 36-36
 lowercase ä 26
@@ -239,18 +242,33 @@ punctuation º 0
 punctuation \x001e 36	If I replace this sequence with normal unicode character, lou_checktable present an error message
 letter è 15
 letter ê 15
-uppercase Æ 4-1 LATIN CAPITAL LETTER AE LATIN CAPITAL LETTER A E 
+#uppercase Æ 4-1 LATIN CAPITAL LETTER AE LATIN CAPITAL LETTER A E 
 sign € 56-15
 letter ﬀ 0
 letter ﬁ 0
 letter ﬂ 0
 letter ﬃ 0
 letter ﬄ 0
-letter ţ 0
-letter ş 0
+letter ţ 2345
+letter ş 234
 letter ř 1235
 letter à 4
-letter ñ 1345
+lowercase ñ 1345
+letter ć 14
+letter ě 15
+letter â 1
+letter č 14
+letter ę 15
+letter ğ 1245
+letter ń 1345
+letter ň 1345
+letter š 234
+letter ž 126
+
+noback always \x0075\x030b 23456
+noback always o\x030b 12456
+noback always u\x0308 123456
+noback always o\x0308 12345
 
 # Uppercase letters
 base uppercase Á á
@@ -263,3 +281,4 @@ base uppercase Ő ő
 base uppercase Ű ű	LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
 base uppercase Ö ö
 base uppercase Õ õ
+base uppercase Û û

The extend_braille_input branch only following change missing, with Chris already doed the master branch:
diff --git a/tables/hu-chardefs.cti b/tables/hu-chardefs.cti
index af893d3d..01998da5 100644
--- a/tables/hu-chardefs.cti
+++ b/tables/hu-chardefs.cti
@@ -60,7 +60,7 @@ punctuation	\\	5-16	REVERSE SOLIDUS
 punctuation	]	234567	RIGHT SQUARE BRACKET
 punctuation	~	2346	TILDE
 punctuation	^	5-124	CIRCUMFLEX ACCENT
-letter � 456
+letter \x007f 456
 punctuation _ 6-36
 punctuation          _ 456           #95    _  LOW LINE
 punctuation	`	345	GRAVE ACCENT
@@ -233,7 +233,7 @@ punctuation — 36-36
 lowercase ä 26
 punctuation · 3 MIDDLE DOT
 punctuation § 3456-1236
-punctuation � 3-3-3
+punctuation \x0085 3-3-3
 letter ç 14
 letter þ 245
 letter ø 12345

Because the master branch are radical change, please write me a best practice how possible I resolve this situation the merge conflict to this pull request landing right to the 3.21 release.
Table files will be not change before release creation, because have estimated I think two weeks before release publication.
I tried merge the master branch the extend_braille_input branch, only have merge conflict the tables/hu-chardefs.cti file related, other changes are merged right.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,18,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1047961154,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@egli, thank you the merge conflict resolve.
Only the Win32 and Win64 builds github actions is not running automatically, other changes check github actions are right ran succesfully.
Win32 and Win64 Ubuntu github actions .github/workflows/mingw.yml file used ubuntu-latest image is still buggy github side?
To I learn future how possible resolve this type merge conflict if both master branch and my feature branch modified simultanaous:
What can I need doing future to prevent this type merge conflits if both master branch an another developer and both the feature branch working equals hungarian table files?
For example, you doed now a simple commit the master branch, but I not merged always the master branch my feature branch to not disturb you and @bertfrees with lot of merge commits,.
What the best technique this situation?
I configured my fork with command line the upstream github liblouis repository url with
git add upstream git@github.com:liblouis/liblouis
In 2021, I always doed my feature branch If I see a bigger change with master branch with following commands:
git fetch upstream
git merge upstream/master
git push
But this practice resulted with 2021. december lot of unneed merge commits before the 3.20 release date.
With Master branch I alwais fetch upstream and merge changes in homepage, so my fork master branch is up to date.
So, my purpose if I future make a bigger pull request for you or Bert (not the last month before the actual release, because the last month you and Bert have lot of works), you only need revieving the pull request related changes, and not must seeing the lot of „Merge master branch upstream/master into extend_braille_input branch” type trivial commits. :-):-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,19,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1049911363,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@hammera You really shouldn't worry too much about such conflicts. That's something for us to worry about. The way you have done it the last 3 months is fine. If you really want to help, you may consider doing a merge with master (but only if there are actual conflicts). But again, no obligation. Even better is to rebase your branch onto master, if you know how to do that.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,20,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1050782118,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@bertfrees, I partially done this type changes.
Your hyphenation related requests is I already resolved both hu.tbl and hu-hu-g2.ctb, very sorry, I forgot december 7. remove this line both two metadata table parts.
With the todo lines the case is following:
The quoted sensible data related lines I checked and removed both hu.tbl andhu-hu-g2.ctb metadata part.
Have only a little remaining part, what need doing if a braille standard description and implementation specification is not awailable with english language?
Unfortunately, the regulations for full and short writing in Hungarian are only available in Hungarian language on the Braille Committee sub-page of the Hungarian Association of the Blind and Visually Impaired, not in English language. I very sorry this, too complex translating the both two hungarian rule set with english language. Some time, independent with my primary language is hungarian, If from the committee requested me a new word abbreviation with some time need abbreviate, some time not, me difficult to understand too this type request if I not get from the committee with examples and exceptions. :-):-)
For example, some need time abbreviate a letter part, some time not, for example some time need abbreviate the „de” part with „d„ letter, but if for example the „de” part have with „Rio De Janeiro” capital, need using full braille output forward translation result with table language level, not grade2 language. This is the beautiful with Liblouis table language feature, very flexible.
So what your openion this situation? We should keep now the remaining TODO entries or take them out from metadata fields before the push?
Please, look following diff output before I commit to squash more changes if you found any another cleanup change, I would like doing one push this changes.
Need fixup or cleaning another part the subtables level your openion, or we have the finalize part?
Have you a nice day,
Attila
diff --git a/tables/hu-hu-g2.ctb b/tables/hu-hu-g2.ctb
index 5693f75a..ad72b041 100644
--- a/tables/hu-hu-g2.ctb
+++ b/tables/hu-hu-g2.ctb
@@ -11,19 +11,13 @@
 # Marked as ""direction:forward"" by Bue Vester-Andersen
 # as tests only run forward.
 #+direction:both
-#+hyphenation:yes
-#
-# TODO: Please correct the metadata above. It is not meant to be
-# accurate nor complete. It hasn't been verified by the table
-# author yet. It is merely an attempt by the liblouis maintainers
-# to get some sensible initial values in place.
 #
 # TODO: Please add a reference to official documentation about
 # the implemented braille code. Preferably submit the documents
 # to https://github.com/liblouis/braille-specs.
 # -----------
 #
-#  Copyright (C) 2017-2021 Attila Hammer from IT Foundation for the Visually Impaired - Hungary. www.infoalap.hu
+#  Copyright (C) 2017-2022 Attila Hammer from IT Foundation for the Visually Impaired - Hungary. www.infoalap.hu
 #
 #  This file is part of liblouis.
 #
diff --git a/tables/hu.tbl b/tables/hu.tbl
index ea7b497e..38b2fa2c 100644
--- a/tables/hu.tbl
+++ b/tables/hu.tbl
@@ -11,11 +11,6 @@
 # Marked as ""direction:both"" by Bue Vester-Andersen
 # as tests run both forward and backward
 #+direction:both
-#+hyphenation:yes
-# TODO: Please correct the metadata above. It is not meant to be
-# accurate nor complete. It hasn't been verified by the table
-# author yet. It is merely an attempt by the liblouis maintainers
-# to get some sensible initial values in place.
 # TODO: Please add a reference to official documentation about
 # the implemented braille code. Preferably submit the documents
 # to https://github.com/liblouis/braille-specs.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,21,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1050822404,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Hi Attila,
No need to say sorry, that's what the review process is for :)
The diff looks fine, please commit it. You don't need to worry about creating too many commits because I'm planning to squash the whole PR into a single commit anyway.
Regarding the remaining TODO (""Please add a reference to official documentation...""): if documentation is only available in Hungarian, that is totally fine. It is normal. All of the documentation we have gathered on http://liblouis.org/braille-specs/ is only available in the native languages. Some people provide a translation of the table of contents, but that is not required.
Regarding the ""braille_input_forward"" and ""braille_input_backward"" YAML tests: thank you for your explanation (in the comment that you did on 7 December). I have to admit that I only read it today. I didn't read it before because the comment was too long. I'm sorry. When I see long emails or Github comments I get demotivated and defer reading them or never read them at all.
I also have to admit that even though I tried, I couldn't understand your explanation. I think it's partly because of the language barrier. I know you try hard to be understandable, but it's still a problem.
I'll do one more attempt to understand it :-). If I still don't get it, I'll just accept that. We know that you are doing very good work and we have a lot of trust in you. When I ask about these kinds of things, it's not because I don't trust you but because I like to understand things and because I'm concerned about other people not being able to understand your tables and tests.
So: am I right in saying that the ""hu-hu-g1_braille_input"" table recognizes special dot patterns (like dot 5) typed by the user in order to help Liblouis with back-translating the braille correctly? I think I understood that part, but what is still unclear to me is why this table needs to affect forward translation too? Why do we need the ""noback"" rules?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,22,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1051049362,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","eHi Bert,
You wrote your comment:

Regarding the remaining TODO (""Please add a reference to official documentation...""): if documentation is only available in Hungarian, that is totally fine. It is normal. All of the documentation we have gathered on http://liblouis.org/braille-specs/ is only available in the native languages. Some people provide a translation of the table of contents, but that is not required.

How can possible send the rule documents link with you wrote URL? This is a Github repository, or have a form the webpage with possible fill the required informations?
Of course I welcome share you and Chris the required informations, feel free you use this informations.
The Hungarian Braille Committee official subpage is following:
The Hungarian Braille Committee official subpage
I write you the downloadable hungarian language awailable documents. Following two documents are standard braille embossers printable USA Braille formatted .brf extension documents, with possible use free the unchanged format. This documents are wrapped with Windows CRLF line wrap:

Braille Alphabet Book (first part, USA BRF document, formatted with Windows line wrap)
Braille Alphabet Book (second part, USA BRF document, formatted with Windows line wrap)

Hungarian language used braille dots (an EXCEL table, with containing in 12 worksheet the various braille rules):
Hungarian language used braille dots (an EXCEL table, with containing in 12 worksheet the various braille rules)
I translate you what worksheet what type rules containing:

worksheet: Table of contents
worksheet: hungarian full braille writing braille dots.
worksheet: the 10 special computer characters dots combination with changed since 2019, this changes are implemented now. Why need this? For example, before 2019, official the \ character and é letters are marked equals with 16 dot combination, and impossible to detecting a reader person the difference both forward and backward translation. The change was fortunately approved by the Hungarian Braille Commission, and the Excel table are described this rules.
worksheet: The grade 2 braille rules (the simplest rule definition book). The hungarian braille grade 2 are have two variations: the simplest variation (little grade 2, with described the EXCEL table), this type rule set only containing minimal number of grades, and large grade 2, with more complex, and usual using with braille books and publications. The Hungarian Braille Commission asked me and colleagues to implement in 2017 the large grade2 set. If you would like fill your homepage the large grade2 rule set, I will send you the proper large word document.
worksheet: Hungarian mathematics braille rules (not need yet implementing, not requested the implementation with the Braille Commission). With screen readers I think uses the basic full braille writing mathematical dots with forward translation, and if  screen reader supports this, math ML content presents with nemeth braille specification. The last think I am not full sure, because mathematics content related I not need doed any change, but my colleague with uses JAWS with a Focus Braille display, wrote me he right typed nemeth braille dots he's phisical Focus 40 Braille display. I don't no how possible this, because in Liblouis source tree developer community removed the tables/nemeth.ctb file, this file only awailable with LiblouisUTDML. Possible Whispero simple copyed to the own table directory with nemeth.ctb file from LiblouisUTDML, Liblouis tables directory containing only nemethdefs.cti file.
worksheet: In music usable hungarian notation braille dot combinations  (482 dot combinations). Not need implementing yet, the Hungarian Braille Commissee not requested the implementation.
worksheet: hungarian unicode braille dot combinations (I think 587 dot combinations), not need checking this sheet, because this is a very large worksheet.
worksheet: Euro unicode braille worksheet with I think oldest time used with JAWS 12.0 mixed USA unicode braille. Not need doing this sheet anything.
worksheet: similar with the prewious sheet, this seet I think containing only with european unicode braille characters. Very large worksheet. Not need doing this sheet anything.
worksheet: Similar with the previous two pages, I think this is only the eight dots USA unicode computer braille, with oldest time used with JAWS 12.0. This is a very large worksheet. Not need doing anything this sheet related.
worksheet: Hungarian braille dots with need using in chess game (25 dot combinations). I don't no why have this sheet in this Excel table, Hungarian Braille Commission not requested yet the implementation.
worksheet: Hungarian braille dots with need using in hungarian Braille cards (33 dot combinations). I don't no why have this sheet in this Excel table, Hungarian Braille Commission not requested yet the implementation.


Summary collection of decisions concerning Braille adopted by the presidency of the Hungarian National Association of the Blind and Visually Impaired
The medicine boxes braille standards collection documents (dot sizes, line lengths, etc.)

Marburg Medium standard
The Marburg Medium standard specifies the following parameters for the size of Braille dots and their spacing:

Diameter of a point: 1.6 mm
The distance between the centers of two points inside a letter (horizontally): 2.5 mm
Distance between the centers of two points within a letter (vertically): 2.5 mm
The distance between the same point of two letters within a word is 6 mm
Distance between the same point of two letters if there is a space between the two letters: 12 mm
Line spacing (between the same point of two letters): 10 mm

Sorry the long comment, but lot of informations awailable with hungarian language Braille related.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,23,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1051076713,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Hi Bert,
You wrote:

I also have to admit that even though I tried, I couldn't understand your explanation. I think it's partly because of the language barrier. I know you try hard to be understandable, but it's still a problem.
I'll do one more attempt to understand it :-). If I still don't get it, I'll just accept that. We know that you are doing very good work and we have a lot of trust in you. When I ask about these kinds of things, it's not because I don't trust you but because I like to understand things and because I'm concerned about other people not being able to understand your tables and tests.

I understand you, this is not problem me with you wrote this. Possible this is have because if I would like writing english answers, I thinking with my answer with hungarian grammar rules and sentence words order, but the english language is some time shorter and simple. My second language only with english, and usual not have possibility to speak anybody with primary english language. Usual I trying checking with forward and backward with my answers with Google Translator both hungarian to english and english to hungarian, but Google is not a primary english language talking person.

So: am I right in saying that the ""hu-hu-g1_braille_input"" table recognizes special dot patterns (like dot 5) typed by the user in order to help Liblouis with back-translating the braille correctly? I think I understood that part, but what is still unclear to me is why this table needs to affect forward translation too? Why do we need the ""noback"" rules?

Absolute you understand right this subtable purpose. When I 2018 begun implementing this type rules, My colleagues tested with this rules with phisical Braille displays, some time experienced need this type rules both two combinations to JAWS backtranslate right the text to for example in Word Text Editor from braille dots to normal texts. Me not logical this experience.
I examine this question the next development cickle, to really need the noback rules, or only enough keep the nofor, pass2, pass3 and pass4 rules.
Fortunatelly already have more bigger testcase files to examine this question without a phisical braille keyboard containing braille display, unfortunately in Linux only I have possibility testing this dots forward and backward translation with lou_translate utility.
My machine not have Windows, and I not using JAWS Screen Readers, I using Linux and Orca screen reader.
I have only an old Alwa Satellite 370 Braille display, with not have phisical braille keyboard.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,24,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1051138517,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Of course I welcome share you and Chris the required informations, feel free you use this informations.

Thanks. I've created this Github issue: #1164. Are the braille input rules also documented somewhere?

I examine this question the next development cickle, to really need the noback rules, or only enough keep the nofor, pass2, pass3 and pass4 rules.

OK. It just doesn't seem logical to me that a sub-table who's purpose is solely to support special braille input also contains rules that influence the forward translation. It seems to me that either those rules are not needed, or they are in the wrong table. A good way to check if you did it correctly is the following: if you comment out the include hu-hu-g1_braille_input.cti lines in hu-hu-g1.ctb and hu-hu-g2.ctb, all YAML tests except hu-hu-g1_braille_input_backward.yaml should still pass.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,25,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1051226695,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Hi Bert,
Unfortunatelly the braille input rules related reserved dot combinations is not documented yet an URL level, I will doing you next development cicle a documentation this type rules related.
Possible I will doing you a simple Excel table the normal character, forward translation unicode braille output with screen readers presents the users braille display, for example the 146-5-146 dot combination need presents the user braille display with 146-146 dot combination, similar with the ccs letter 146-146 dot combination), perhaps the table last column will containing what phisical keys need press the user braille display to type the proper text a text editor.
Your request inspirated me, independent to the hungarian users already known this type dots, developer perspective not matter if describe dots a table.
An example table:
Normal text, Forward translation braille text, Dot combinations (phisical dot combinations with need press a braille display)
cscs, ⠩⠩, ⠩⠐⠩
ccs, ⠩⠩, ⠩⠩
Sorry to now not doed a proper three column markdown style table, I little tired now, and not remember head what style tags need using between columns.
So, I propose you if I, you and Chris found a proper tagged column structure, I will you doing a developer documentation.
Have a nice day, and I would like thank you the suggestion.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,26,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1052042349,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@bertfrees or @egli, I have only a last question, I think we ready this pull request related If not need table level cleanup anything before final merge this development cicle:
For example, when I sent yesterday Bert the proper hungarian braille related links, I detected to the hungarian alphabet book is coded the Hungarian Braille Commissee with standard USa Braille format (possible this purpose is provide compatibility with non hungarian table uses braille embossers). Now, the situation is following:
In hungarian tables only the braille-patterns.cti file is included to presents braille displays right with unicode braille output (I think this is the purpose this subtable file), and the forward translation braille output is sending the braille displays with Orca with BRLTTY Python BRLAPI binding the six dot euro braille brf compatible output. Orca doesn't use yet Liblouis Python bindings with backward translation.
When I need looking the hungarian braille alphabet book,, in BRLTTY preferences menu I must need change the text table with en_us table, and in braille presentation preferences I need change the braille style from 8 dots computer braille to six dots computer braille to right read a text editor the hungarian braille alphabet book the USA Braille compatible document version.
With normal include level operation I have possibility in next development cicle to include any subtable before or after braille-patterns.cti, to right presents Windows and Linux awailable screen readers both six doth euro braille output, unicode braille output (similar with now already right happening with braille-patterns.cti file), and USA braille output? Full braille output mode and grade2 braille mode we In hungary uses six dot braille presentation, only with computer braille uses 8 dots braille presentation if turned off any screen reader the contraction braille feature. This is the Braille Commissee request oldest time.
So, my purpose to not need turn off contracted braille feature with any screen reader when need presenting an USA braille coded .brf extension document with any text editor, but I think this is not Liblouis side need resolve issue, I think screen readers need resolve this feature and in preferences UI need provide a combo box to the user have possibility to what subtable sends the final generated braille output, Euro Braille, USA Braille, or Unicode Braille? For example, if Orca level turned on this feature, selected any contraction table, only need doing a third combo box for example „Braille coding:” label, and the possible values are Euro Braille, Unicode Braille, and USA Braille. Liblouis only doing the forward translation, but final Orca sends the translated braille output with BRLTTY the Python BRL api the real device hardware. In table list when Orca executes lou_translate function, only need add the proper .dis file before real selected contraction table, for example table=[""unicode.dis"",hu-hu-g1.ctb] style code.
I seeing correct the situation?
I see very lot of .dis extension file into tables directory, and don't no what ,.dis subtable what the purpose. Display table list:
bg.dis (this situation not relevant)
da-dk-octobraille.dis (ditto)
de-de.dis (ditto)
de-eurobrl6.dis(six dots euro braille output, this type output uses the hungarian braille tables default, not need include this dis file)
de-eurobrl6u.dis (What the difference with two tables?)
en-us-brf.dis (possible need me this table include?)
es-new.dis (not relevant)
es-old.dis (ditto)
hu-backtranslate-correction.dis (active included)
nl-BE.dis (not relevant I think)
no-no-braillo-047-01.dis (not relevant I think)
no-no.dis (ditto)
no-no-generic.dis (ditto)
ru-brf.dis (ditto)
ru-letters.dis (ditto)
ru-unicode.dis (ditto)
se-se.dis (ditto)
text_nabcc.dis (ditto)
unicode.dis (I think this table the space character is marked with dot 0 character)
unicode-without-blank.dis (what the difference?)
uni-text.dis (what doing this subtable?)
us-table.dis (possible me need this?)
wordcx.dis (what doing this table?)

Have a nice day,
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,27,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1055548449,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","@hammera You're doing unnecessary merges again. It's not helpful. Just ignore everything we do on our master branch, unless it is actually relevant for your PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,28,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1055866534,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","[...]
I seeing correct the situation?

I'm sorry, I didn't understand what you are trying to say. I think I understood your problem, but not the solution you are proposing.
Liblouis could be used for reading braille in a BRF file by back-translating with the table ""en-us-brf.dis,unicode-braille.utb"". Of course a display table (en-us-brf.dis in my example) needs to be chosen that matches the character set of the BRF file.

I see very lot of .dis extension file into tables directory, and don't no what ,.dis subtable what the purpose.

"".dis"" (display) tables are for declaring the character set of the braille. That is their only purpose. They  map dot patterns to characters. Some (or most) tables include a display table, but this is something we've been wanting to change. Selecting the display table should be done independently from selecting the translation table. They are two different things. Liblouis should not decide which display tables belongs to which translation table. That is up to (the user of) the application (screen reader for example) that uses Liblouis.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,29,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1055904575,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","I have rebased the branch onto the latest master, squashed everything into a single commit and added a NEWS entry.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,30,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1056783182,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Hi bert,
You correct understood my question, and I absolute understand your answer. Thank you your and Chris suggestions, the hard review related work and the future merge commit to the master branch.
You wrote:

Liblouis could be used for reading braille in a BRF file by back-translating with the table ""en-us-brf.dis,unicode-braille.utb"". Of course a display table (en-us-brf.dis in my example) needs to be chosen that matches the character set of the BRF file.

This is clear for me, I don't no prewious only the proper display table name with exactly equals the hungarian alphabet book usa braille character set.
My purpose previous only search a solution to the hungarian grade 1 braille and grade 2 braille tables and Orca screen reader to right automatically presents any .brf document, independent the character set is USA braille, euro braille or unicode braille when the user opening a .brf document with a text editor. Unicode braille characters already presents right the user braille display since 2012 (I think mesar suggested me to add the include the braille-patterns.cti file, similar with other tables).
But I am not sure right ydea to include the en-us-brf.dis and for example with unicode-braille.utb file.
You confirmed this with following comment part:

Some (or most) tables include a display table, but this is something we've been wanting to change. Selecting the display table should be done independently from selecting the translation table. They are two different things. Liblouis should not decide which display tables belongs to which translation table. That is up to (the user of) the application (screen reader for example) that uses Liblouis.

I will consult Joanmarye Digs (Orca screen reader developer), and if she accepts this solution, I trying to doing an enhancement request for Orca and try implementing a new combo box for example „Braille output character set” in Orca preferences dialog the Braille tab under the „Contraction table” combo box. If I remember right, NVDA already awailable this possibility, and I think JAWS For Windows presents right out of the box with both three type braille standard documents, but I am not full sure this. Unfortunatelly now Orca level already UI and feature freeze time period, because near the GNOME 42 release, but when beginning the next version development, I have chance this question for Joanie for an e-mail. I already opened other UI modifications pull requests the braille page related.
This is the correct solution, you confirmed this, thanks.
I request only to when you or Chris would like change to Liblouis tables not include .dis tables if this is not need, keep only the hu-backtranslate-corrections.dis and braille-patterns.cti include lines the three hungarian .ctb tables.
Can I help the friday you doed issue: #1164  related work to you and Chris have enough free time revieving another pull requests? Or we scheduling the next 3.22 milestone this issue related work when I doing you the hungarian Braille input rules development documentation?
The 3.22 release milestone I think hungarian braille table related need following milestone elements future:

Table cleanup (your suggestion to examine need keeping the noback translation rules into hu-hu-g1_braille_input.cti file, or enough only the nofor type rules to provide equals good backtranslation quality to decrease into hu-hu-g1_braille_input.cti file the rule numbers and easyest future the maintenance),
If the issue: #1164 is final not ready the 3.21 milestone, need fixing this issue the 3.22 milestone,
Need doing an english language developer documentation into proper hungarian braille tables subpage, because braille input rules yet is not documented, only hungarian language the forward translation braille documentation is awailable both full braille and grade2 braille. I linked Hungarian Braille Commissee subpage and translated you the downloadable documents sections, and described downloadable documents link an another comment.

I will trying assign this issues if accessible the Braille specs subpage source code.
This webpage part source code awailable in Liblouis static website repository?
These milestones are completely acceptable goals for me, I feel able to help you achieve these milestones to make your job easier.
Have you and Chris nice day,
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,31,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1056821910,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Ok, I found the right source repository with you stores the braille specs subpage documents.
If you tells me a suggestion what structure stores for example the hungarian/README.MD file the six downloadable hungarian language documents list and the hungarian forward translation Excel table awailable 12 english language translated worksheets list, I will doing a hungarian/README.MD file and format the document with proper markdown document format.
Wonderful, easyest done this milestone element, and after review the change fixes future the #1164 issue, the 3.22 release only need working the noback rule examinations into hu-hu-g1_braille_input.cti file and need I write you a developer documentation the hungarian braille input rules related.
A good structure with developer documentation is for example normal special consonant character (for example cscs), forward translation unicode braille output (⠩⠩ dot combination), braille display phisical dot combination with backtranslate a text editor to cscs letter (⠩⠐⠩ dot combination).
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,32,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1057451666,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","The 3.22 release milestone I think hungarian braille table related need following milestone elements future:

Table cleanup (your suggestion to examine need keeping the noback translation rules into hu-hu-g1_braille_input.cti file, or enough only the nofor type rules to provide equals good backtranslation quality to decrease into hu-hu-g1_braille_input.cti file the rule numbers and easyest future the maintenance),
If the issue: #1164 is final not ready the 3.21 milestone, need fixing this issue the 3.22 milestone,
Need doing an english language developer documentation into proper hungarian braille tables subpage, because braille input rules yet is not documented, only hungarian language the forward translation braille documentation is awailable both full braille and grade2 braille. I linked Hungarian Braille Commissee subpage and translated you the downloadable documents sections, and described downloadable documents link an another comment.


Yes, that seems right. Thanks. Except for the last item, I suggest that you write the documentation for the special braille input rules in Hungarian. See also my comment regarding this in liblouis/braille-specs#15.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/hammera,33,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1058010671,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","Hi Bert,
I seeed your answer the 3.22 release milestone list related, thanks the answer. The detailed developer documentation I will writing with hungarian language the braille input rules related, thanks the suggestion.
If I not need doing any work this pull request related, Please merge you doed squashed commit to the master branch.
Perhaps still buggy with Github win32 and win64 mingw builds related ubuntu-latest image (affected this issue the .github/workflows/mingw.yml file), because this two checks always waiting status to be reported flag.
Other importanter checks are passed right.
Unfortunatelly again not up to date my branch, because base master branch again changed. Now I not want doing upstream fetch and merge commits to my feature branch, except if not have a merge conflict the latest closed pull request related.
I think we every questions cleared, and if I remember right and not forgot anything, we done and finished all task this pull request related. This pull request is merge ready, you and Chris are doed very hard work the reviewing related, because this change is a very large pull request:

Test files related checks are passed right, except build for Win32 and Win64 related Github action (always this two task shows waiting status to be reported result. Note: the .github/workflows/mingw.yml file running is not disabled already? Other pull requests this workflow file shows similar status report.)
In tuesday you rebased the branch to the latest master branch, and added a NEWS entry. Thank you this, because I not used yet this command. I will reading the git rebase command and git merge command tutorial articles, oldest time I used only the git fetch and git merge commands.
We cleared other thinks (hungarian future subpage related informations and next 3.22 release milestone elements, this is related with issue #1164, and I already doed this an another pull request. This future change related only to the hungarian tables if future will awailable the hungarian subpage braille specification URL).

When this issue is fixed, in hu.tbl, hu-hu-comp8.ctb and hu-hu-g2.ctb need changing following part:
„# TODO: Please add a reference to official documentation about
# the implemented braille code. Preferably submit the documents
# to https://github.com/liblouis/braille-specs.”

Thank you your and Chris doed hard work, the 3.21 Liblouis release will be a fantastic release.
Without you and Chris this is impossible.
Have you and Chris nice day, don't forgot to rest a little. :-):-)
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1136,2021-12-02T13:47:54Z,2022-03-04T16:31:56Z,2022-03-04T16:31:57Z,MERGED,True,18758,215,20,https://github.com/hammera,Extend braille input and fix hungarian tables backtranslation quality,1,['tables'],https://github.com/liblouis/liblouis/pull/1136,https://github.com/bertfrees,34,https://github.com/liblouis/liblouis/pull/1136#issuecomment-1058404521,"Hy anybody,
I doed lot of changes with hungarian grade1 and grade2 Braille related since 3.10.0 release.
Summary:

Extend the hungarian grade1 braille input, produce with better typing quality with a braille display with hungarian visually impaired people with focus Braille displays, this style braille input rules already using with JAWS for Windows the hungarian visually impaired people,
Add more testcases, to test hungarian braille tables quality detailed when a code change happening,
Improve backtranslation quality with hungarian grade 1 and hungarian grade 2 tables, typical with special consonants containing words (szsz or ssz letters for example, this letters have equals dot combinations in hungarian grade1 and grade2 tables),
Implement new hungarian braille markup standard few characters related, with dot combination marking is changed (for example the \ character, | character, etc).

If this is possible, please merge these changes with Liblouis 3.20.0 release.","If I not need doing any work this pull request related, Please merge you doed squashed commit to the master branch.

Yes, I will merge very soon.

Unfortunatelly again not up to date my branch, because base master branch again changed. Now I not want doing upstream fetch and merge commits to my feature branch, except if not have a merge conflict the latest closed pull request related.

It is absolutely no problem if the master branch has newer commits. At the time of merging I simply rebase your branch onto master.

Have you and Chris nice day, don't forgot to rest a little. :-):-)

Haha, same to you ;-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1137,2021-12-06T12:59:09Z,2021-12-06T14:16:30Z,2021-12-06T14:16:34Z,MERGED,True,288,506,14,https://github.com/bertfrees,"Common table for Dutch, and implement alphabet change marker",4,['tables'],https://github.com/liblouis/liblouis/pull/1137,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1137,Fixes #34 and #1051,Fixes #34 and #1051,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1139,2021-12-07T14:57:44Z,2021-12-07T15:35:10Z,2022-02-25T14:40:25Z,MERGED,True,3,3,1,https://github.com/egli,Some minor stylistic doc improvements,1,['documentation'],https://github.com/liblouis/liblouis/pull/1139,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1139,that a native speaker suggested,that a native speaker suggested,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1140,2021-12-08T16:02:16Z,2022-01-14T15:05:25Z,2022-01-14T15:05:25Z,MERGED,True,2,1,1,https://github.com/proguest1942,Fix a warning produced by using assign value,1,[],https://github.com/liblouis/liblouis/pull/1140,https://github.com/proguest1942,1,https://github.com/liblouis/liblouis/pull/1140,Use assign value as if condition better to wrap within parentheses. This can also fix a warning.,Use assign value as if condition better to wrap within parentheses. This can also fix a warning.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1142,2021-12-10T09:50:19Z,,2022-03-28T17:08:04Z,OPEN,False,30,3,2,https://github.com/bertfrees,"Dutch: add extra emphasis classes to distinguish between bold, italic and underline",1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/1142,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1142,fixes #1141,fixes #1141,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1142,2021-12-10T09:50:19Z,,2022-03-28T17:08:04Z,OPEN,False,30,3,2,https://github.com/bertfrees,"Dutch: add extra emphasis classes to distinguish between bold, italic and underline",1,"['waiting', 'tables']",https://github.com/liblouis/liblouis/pull/1142,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1142#issuecomment-990796745,fixes #1141,@PaulRambags Could you please check whether this will do? Not sure I got it all right. Maybe some more unit tests are needed. I've also asked @dkager for a review.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1143,2021-12-13T09:14:11Z,2022-01-12T10:59:44Z,2022-01-12T11:00:03Z,MERGED,True,408,413,19,https://github.com/egli,Table mostly whitespace fixes,7,"['tables', 'cleanup']",https://github.com/liblouis/liblouis/pull/1143,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1143,"These are mostly minor fixes to the tables, such as lower casing hex numbers and virtual dots, miscellaneous white space fixes, etc","These are mostly minor fixes to the tables, such as lower casing hex numbers and virtual dots, miscellaneous white space fixes, etc",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1144,2021-12-21T21:13:22Z,2022-01-14T15:04:09Z,2022-01-14T15:04:28Z,MERGED,True,780,67,19,https://github.com/BueVest,"Fixed emphasis, section sign and and dash between numbers",2,['tables'],https://github.com/liblouis/liblouis/pull/1144,https://github.com/BueVest,1,https://github.com/liblouis/liblouis/pull/1144,Should be ready for merge.,Should be ready for merge.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1144,2021-12-21T21:13:22Z,2022-01-14T15:04:09Z,2022-01-14T15:04:28Z,MERGED,True,780,67,19,https://github.com/BueVest,"Fixed emphasis, section sign and and dash between numbers",2,['tables'],https://github.com/liblouis/liblouis/pull/1144,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1144#issuecomment-1000359454,Should be ready for merge.,"@BueVest Looks good, thanks. But could you elaborate a bit on what you mean by ""... to work with translation software""?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1144,2021-12-21T21:13:22Z,2022-01-14T15:04:09Z,2022-01-14T15:04:28Z,MERGED,True,780,67,19,https://github.com/BueVest,"Fixed emphasis, section sign and and dash between numbers",2,['tables'],https://github.com/liblouis/liblouis/pull/1144,https://github.com/BueVest,3,https://github.com/liblouis/liblouis/pull/1144#issuecomment-1000512921,Should be ready for merge.,"Yes, it could be deleted, and I will do so if you want me to. I left it standing, because there has been and still is some doubt about that particular rule. The Danish Braille code is sometimes a bit lacking in formal definition. Also, I am currently working on tables for the new 2021 revision of the Danish Braille code, so these tables are going to become obsolete anyway at some point.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1144,2021-12-21T21:13:22Z,2022-01-14T15:04:09Z,2022-01-14T15:04:28Z,MERGED,True,780,67,19,https://github.com/BueVest,"Fixed emphasis, section sign and and dash between numbers",2,['tables'],https://github.com/liblouis/liblouis/pull/1144,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1144#issuecomment-1000514671,Should be ready for merge.,"OK, then it's fine to keep it. But then maybe add a comment that explains why it is a comment? :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1144,2021-12-21T21:13:22Z,2022-01-14T15:04:09Z,2022-01-14T15:04:28Z,MERGED,True,780,67,19,https://github.com/BueVest,"Fixed emphasis, section sign and and dash between numbers",2,['tables'],https://github.com/liblouis/liblouis/pull/1144,https://github.com/BueVest,5,https://github.com/liblouis/liblouis/pull/1144#issuecomment-1000515414,Should be ready for merge.,"Sorry, I should probably just have written what has changed and not why, i.e. “fixed emphasis, section sign and dash between numbers”.

The Danish tables have, to my knowledge, only been used with screen readers and note-takers, not with actual translation software. However, now I am participating in the development of a Danish “hands-off” Braille translator, which uses Liblouis, so a few overlooked features like emphasis are suddenly being used and various bugs are exposed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1144,2021-12-21T21:13:22Z,2022-01-14T15:04:09Z,2022-01-14T15:04:28Z,MERGED,True,780,67,19,https://github.com/BueVest,"Fixed emphasis, section sign and and dash between numbers",2,['tables'],https://github.com/liblouis/liblouis/pull/1144,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1144#issuecomment-1000519178,Should be ready for merge.,Thanks for the explanation.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1146,2022-01-06T13:16:01Z,2022-01-07T10:04:41Z,2022-02-25T14:40:16Z,MERGED,True,2,2,1,https://github.com/bertfrees,Fix autogen.sh: find command did not work on macOS,1,['build system'],https://github.com/liblouis/liblouis/pull/1146,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1146,Thanks to Ken Perry.,Thanks to Ken Perry.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1148,2022-01-12T14:06:02Z,2022-01-13T09:37:58Z,2022-01-13T09:38:02Z,MERGED,True,35600,4816,245,https://github.com/egli,Update  gnulib,2,['build system'],https://github.com/liblouis/liblouis/pull/1148,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1148,"Update gnulib in both gnulib and in tools/gnulib
the update also recommended to use AC_PROG_CC in configure.ac
while I was at it I also changed the prefered clang-format to version 9 as that is contained in all versions of Ubuntu since 20.04 (which the CI runner is using)","Update gnulib in both gnulib and in tools/gnulib
the update also recommended to use AC_PROG_CC in configure.ac
while I was at it I also changed the prefered clang-format to version 9 as that is contained in all versions of Ubuntu since 20.04 (which the CI runner is using)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1148,2022-01-12T14:06:02Z,2022-01-13T09:37:58Z,2022-01-13T09:38:02Z,MERGED,True,35600,4816,245,https://github.com/egli,Update  gnulib,2,['build system'],https://github.com/liblouis/liblouis/pull/1148,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1148#issuecomment-1011137240,"Update gnulib in both gnulib and in tools/gnulib
the update also recommended to use AC_PROG_CC in configure.ac
while I was at it I also changed the prefered clang-format to version 9 as that is contained in all versions of Ubuntu since 20.04 (which the CI runner is using)","Hold it, I'll remove the clang-format change",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1149,2022-01-13T10:01:39Z,2022-01-13T12:26:07Z,2022-01-13T12:26:11Z,MERGED,True,46,46,9,https://github.com/egli,Prefer clang-format version 9,3,[],https://github.com/liblouis/liblouis/pull/1149,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1149,"Change the preferred clang-format to version 9 as that is contained in all versions of Ubuntu since 20.04 (which the CI runner is using) up to Ubuntu 22.04. Seems like a pretty save bet.
BTW my current dev machine doesn't even have clang-format-7 anymore.","Change the preferred clang-format to version 9 as that is contained in all versions of Ubuntu since 20.04 (which the CI runner is using) up to Ubuntu 22.04. Seems like a pretty save bet.
BTW my current dev machine doesn't even have clang-format-7 anymore.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1150,2022-01-13T14:21:51Z,2022-01-14T14:42:23Z,2022-01-14T14:42:34Z,MERGED,True,4,5565,5,https://github.com/bertfrees,Remove generated files from source control,1,['build system'],https://github.com/liblouis/liblouis/pull/1150,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1150,This fixes commit 543dd01.,This fixes commit 543dd01.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1151,2022-01-18T10:56:20Z,2022-01-18T15:44:32Z,2022-01-18T15:44:39Z,MERGED,True,8,4,3,https://github.com/egli,Correct the latin small letter sharp s in Norwegian,2,['tables'],https://github.com/liblouis/liblouis/pull/1151,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1151,Fixes #1145,Fixes #1145,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1154,2022-02-10T09:12:38Z,2022-02-16T10:21:18Z,2022-04-13T07:20:01Z,MERGED,True,45,91,1,https://github.com/egli,Simplify liblouis Emacs mode and make it actually usefull.,1,[],https://github.com/liblouis/liblouis/pull/1154,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1154,"No longer try to actually parse all the statements. Just highlight
comments, opcodes and prefixes. Also make sure '""' is handled
properly (as plain punctuation), wrapping in comments works correctly.
Lastly there is an attempt to load the mode automatically based on the
magic string ""# liblouis: "" at the beginning of the file.","No longer try to actually parse all the statements. Just highlight
comments, opcodes and prefixes. Also make sure '""' is handled
properly (as plain punctuation), wrapping in comments works correctly.
Lastly there is an attempt to load the mode automatically based on the
magic string ""# liblouis: "" at the beginning of the file.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1154,2022-02-10T09:12:38Z,2022-02-16T10:21:18Z,2022-04-13T07:20:01Z,MERGED,True,45,91,1,https://github.com/egli,Simplify liblouis Emacs mode and make it actually usefull.,1,[],https://github.com/liblouis/liblouis/pull/1154,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1154#issuecomment-1034674327,"No longer try to actually parse all the statements. Just highlight
comments, opcodes and prefixes. Also make sure '""' is handled
properly (as plain punctuation), wrapping in comments works correctly.
Lastly there is an attempt to load the mode automatically based on the
magic string ""# liblouis: "" at the beginning of the file.",This should probably be based on the tree-sitter parser and should be made into a package that can be downloaded from melpa. But for now it is useful as such and helps me with editing the tables.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1154,2022-02-10T09:12:38Z,2022-02-16T10:21:18Z,2022-04-13T07:20:01Z,MERGED,True,45,91,1,https://github.com/egli,Simplify liblouis Emacs mode and make it actually usefull.,1,[],https://github.com/liblouis/liblouis/pull/1154,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1154#issuecomment-1034691316,"No longer try to actually parse all the statements. Just highlight
comments, opcodes and prefixes. Also make sure '""' is handled
properly (as plain punctuation), wrapping in comments works correctly.
Lastly there is an attempt to load the mode automatically based on the
magic string ""# liblouis: "" at the beginning of the file.","This should probably be based on the tree-sitter parser

created issue liblouis/liblouis-mode#1.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1157,2022-02-14T10:41:37Z,2022-02-25T10:54:15Z,2022-02-25T10:54:15Z,CLOSED,False,597,598,5,https://github.com/egli,Make end comments explicit,1,[],https://github.com/liblouis/liblouis/pull/1157,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1157,"i.e. add a '#' even before end comments. This makes parsing easier and removes some irregularities in the grammar (such as no endcomments allowed after multind opcode or # required after the replace opcode)
This patch only fixes four out of around 180 that need to be changed. It was done mostly manually with some Emacs macros. Turns out this approach is way too much work. This change will have to be done in some automated way, i.e. parsing tables with end_comments and emitting fixed tables.","i.e. add a '#' even before end comments. This makes parsing easier and removes some irregularities in the grammar (such as no endcomments allowed after multind opcode or # required after the replace opcode)
This patch only fixes four out of around 180 that need to be changed. It was done mostly manually with some Emacs macros. Turns out this approach is way too much work. This change will have to be done in some automated way, i.e. parsing tables with end_comments and emitting fixed tables.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1158,2022-02-17T09:17:26Z,2022-02-17T13:46:10Z,2022-02-17T13:46:13Z,MERGED,True,0,4,1,https://github.com/bertfrees,Don't mention nemeth.ctb and nemeth_edit.ctb in documentation,1,['documentation'],https://github.com/liblouis/liblouis/pull/1158,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1158,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1159,2022-02-18T08:10:39Z,2022-03-03T07:18:43Z,2022-03-03T07:18:54Z,MERGED,True,18,7,4,https://github.com/egli,Only disable contraction in numeric mode if nocontractsign is actually defined,5,[],https://github.com/liblouis/liblouis/pull/1159,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1159,Fixes #615,Fixes #615,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1159,2022-02-18T08:10:39Z,2022-03-03T07:18:43Z,2022-03-03T07:18:54Z,MERGED,True,18,7,4,https://github.com/egli,Only disable contraction in numeric mode if nocontractsign is actually defined,5,[],https://github.com/liblouis/liblouis/pull/1159,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1159#issuecomment-1056388578,Fixes #615,Don't merge this! This PR is superseded by #1166. Only maybe some of the NEWS entry could be re-used,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1160,2022-02-21T13:42:56Z,2022-02-25T10:02:07Z,2022-02-25T10:02:12Z,MERGED,True,578,447,314,https://github.com/bertfrees,Replace `#+locale` metadata tag with `#+language` and `#+region`,6,[],https://github.com/liblouis/liblouis/pull/1160,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1160,"Things are explained on https://github.com/liblouis/liblouis/wiki/Table-discovery-based-on-table-metadata#standard-metadata-tags.
Commit f129b2a is not really related.","Things are explained on https://github.com/liblouis/liblouis/wiki/Table-discovery-based-on-table-metadata#standard-metadata-tags.
Commit f129b2a is not really related.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1160,2022-02-21T13:42:56Z,2022-02-25T10:02:07Z,2022-02-25T10:02:12Z,MERGED,True,578,447,314,https://github.com/bertfrees,Replace `#+locale` metadata tag with `#+language` and `#+region`,6,[],https://github.com/liblouis/liblouis/pull/1160,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1160#issuecomment-1047912856,"Things are explained on https://github.com/liblouis/liblouis/wiki/Table-discovery-based-on-table-metadata#standard-metadata-tags.
Commit f129b2a is not really related.",@egli Approved?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1161,2022-02-23T22:31:33Z,2022-02-25T09:27:59Z,2022-02-25T09:29:11Z,MERGED,True,145,28,3,https://github.com/bertfrees,Various fixes to mode indicators,5,"['bug', 'enhancement']",https://github.com/liblouis/liblouis/pull/1161,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1161,"Various fixes to the new mode indicators introduced in version 3.20 (#1123):

Fix regression #1152.
Fix the problem that @Futyn-Maker had when trying to use the new feature in the Russian table
Allow implementing numeric mode using the generic mode feature","Various fixes to the new mode indicators introduced in version 3.20 (#1123):

Fix regression #1152.
Fix the problem that @Futyn-Maker had when trying to use the new feature in the Russian table
Allow implementing numeric mode using the generic mode feature",True,{'THUMBS_UP': ['https://github.com/Futyn-Maker']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1163,2022-02-25T13:11:37Z,2022-02-25T14:34:52Z,2022-02-25T14:35:08Z,MERGED,True,482,2,7,https://github.com/egli,Add more tests for German Kurzschrift,3,[],https://github.com/liblouis/liblouis/pull/1163,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1163,"Ported from dtbook2sbsform
Improve the emphasis handling","Ported from dtbook2sbsform
Improve the emphasis handling",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1166,2022-02-28T13:34:08Z,2022-06-02T15:04:41Z,2022-06-02T15:04:46Z,MERGED,True,126,26,21,https://github.com/egli,Add a nonumsign opcode,7,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1166,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1166,"Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass","Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1166,2022-02-28T13:34:08Z,2022-06-02T15:04:41Z,2022-06-02T15:04:46Z,MERGED,True,126,26,21,https://github.com/egli,Add a nonumsign opcode,7,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1166,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1166#issuecomment-1058067181,"Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass",The regression in this PR is due to #1168,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1166,2022-02-28T13:34:08Z,2022-06-02T15:04:41Z,2022-06-02T15:04:46Z,MERGED,True,126,26,21,https://github.com/egli,Add a nonumsign opcode,7,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1166,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1166#issuecomment-1078876659,"Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass",Blocked on #1168.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1166,2022-02-28T13:34:08Z,2022-06-02T15:04:41Z,2022-06-02T15:04:46Z,MERGED,True,126,26,21,https://github.com/egli,Add a nonumsign opcode,7,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1166,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1166#issuecomment-1138813891,"Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass","@egli In #1168 you say:

Incidentally the nonumsign PR makes this problem worse as you now have at least the nonumsign and the nocontractsign mapped to the same dot pattern.

but it seems that isn't the case at all. If you skip commits 1aca69c, ea4b56c and b5737c6, everything works as before, no regressions.

Commit 1aca69c fixes some tests (see commit ea4b56c) that were already marked with xfail before this PR. So if you skip this commit it wouldn't be a regression. Moreover I'm not even sure we can say that ""commit 1aca69c fixes those tests"". To me it looks more of an accident.
Commit b5737c6 does not seem to be needed if commit 1aca69c is not applied.

On the other hand, commit 1aca69c looks quite harmless. Maybe the conclusion is that the regression it results in (namely that in back-translation endcapsword does not work anymore if nocontractsign is defined before endcapsword and has the same dot pattern) is not really a regression?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1166,2022-02-28T13:34:08Z,2022-06-02T15:04:41Z,2022-06-02T15:04:46Z,MERGED,True,126,26,21,https://github.com/egli,Add a nonumsign opcode,7,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1166,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1166#issuecomment-1144789727,"Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass","OK, I dropped b5737c6 and adapted the numericmode yaml test so that it does the test with nonumsign instead of nocontractsign, since it just checks if numeric mode is off anyway. So the tests pass (localy) without the hand-wavy change.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1166,2022-02-28T13:34:08Z,2022-06-02T15:04:41Z,2022-06-02T15:04:46Z,MERGED,True,126,26,21,https://github.com/egli,Add a nonumsign opcode,7,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1166,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1166#issuecomment-1144794434,"Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass",OK great. Let me just squash 511775f with ea4b56c and 2dd0e3c with 875cc42 and then rebase teh branch (I'm merging the internal-opcodes branch first). By the way I think something went wrong in your last commit b321ac1.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1166,2022-02-28T13:34:08Z,2022-06-02T15:04:41Z,2022-06-02T15:04:46Z,MERGED,True,126,26,21,https://github.com/egli,Add a nonumsign opcode,7,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1166,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/1166#issuecomment-1144798610,"Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass","Hm, sorry I think the automated merge (from master, via the web interface) seems to have messed up the hungarian tables. I'll revert",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1166,2022-02-28T13:34:08Z,2022-06-02T15:04:41Z,2022-06-02T15:04:46Z,MERGED,True,126,26,21,https://github.com/egli,Add a nonumsign opcode,7,"['enhancement', 'needs news']",https://github.com/liblouis/liblouis/pull/1166,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1166#issuecomment-1144799186,"Implement the nonumsign opcode
Make the nocontractsign opcode more focused. It no longer indicates the end of numeric mode. All the tables that used it now also use the nonumsign opcode.
Document the new opcode
adapt auxiliary files such as lou_debug and Emacs mode
add a yaml test case and adapt existing yaml tests to also use the nonumsign opcode
Remove the xfails from tests that now pass","Ah, you're on it. I'll let you handle it",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1167,2022-03-02T14:34:15Z,2022-03-03T14:16:37Z,2022-03-03T18:18:14Z,CLOSED,False,14,6,1,https://github.com/egli,Fix the multind opcode handling (or at least try to),5,"['bug', 'back-translation']",https://github.com/liblouis/liblouis/pull/1167,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1167,"The proposed PR #1166 exposes a bug in backtranslation when multind is involved:
$ cat foo.louis 
  display | 456
  display ; 56
  display # 3456
  include tables/latinLetterDef6Dots.uti
  include tables/digits6Dots.uti
  include tables/litdigits6Dots.uti
  include tables/braille-patterns.cti
  numsign            3456
  begcapsword        456
  multind            56 endcapsword nonumsign nocontractsign
  nocontractsign     56    # nocontractsign before endcapsword
  nonumsign          56
  endcapsword        56
  numericnocontchars abcdefghij
$ echo ""|abc;ab"" | ./tools/lou_translate --backward foo.louis
ABCAB
The indicator doesn't terminate all-caps. With this patch it does:
$ echo ""|abc;ab"" | ./tools/lou_translate --backward foo.louis
ABCab
This PR changes the following:

Make backtranslation go though all opcodes that are specified in the multind opcode
Fix a problem in handleMultind in that it was matching for CTO_EndCapsWordRule instead of CTO_EndCapsWord. This causes  to not return an opcode and consequently the endcapsword rule is not applied and the backtranslation stays in all-caps mode.
Do not advance the position while going through the multind opcodes

However a major problem of this PR is that the full test suite doesn't terminate. I think it hangs in da-dk-g28.yaml. Do not know why at the moment.","The proposed PR #1166 exposes a bug in backtranslation when multind is involved:
$ cat foo.louis 
  display | 456
  display ; 56
  display # 3456
  include tables/latinLetterDef6Dots.uti
  include tables/digits6Dots.uti
  include tables/litdigits6Dots.uti
  include tables/braille-patterns.cti
  numsign            3456
  begcapsword        456
  multind            56 endcapsword nonumsign nocontractsign
  nocontractsign     56    # nocontractsign before endcapsword
  nonumsign          56
  endcapsword        56
  numericnocontchars abcdefghij
$ echo ""|abc;ab"" | ./tools/lou_translate --backward foo.louis
ABCAB
The indicator doesn't terminate all-caps. With this patch it does:
$ echo ""|abc;ab"" | ./tools/lou_translate --backward foo.louis
ABCab
This PR changes the following:

Make backtranslation go though all opcodes that are specified in the multind opcode
Fix a problem in handleMultind in that it was matching for CTO_EndCapsWordRule instead of CTO_EndCapsWord. This causes  to not return an opcode and consequently the endcapsword rule is not applied and the backtranslation stays in all-caps mode.
Do not advance the position while going through the multind opcodes

However a major problem of this PR is that the full test suite doesn't terminate. I think it hangs in da-dk-g28.yaml. Do not know why at the moment.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1167,2022-03-02T14:34:15Z,2022-03-03T14:16:37Z,2022-03-03T18:18:14Z,CLOSED,False,14,6,1,https://github.com/egli,Fix the multind opcode handling (or at least try to),5,"['bug', 'back-translation']",https://github.com/liblouis/liblouis/pull/1167,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1167#issuecomment-1057014253,"The proposed PR #1166 exposes a bug in backtranslation when multind is involved:
$ cat foo.louis 
  display | 456
  display ; 56
  display # 3456
  include tables/latinLetterDef6Dots.uti
  include tables/digits6Dots.uti
  include tables/litdigits6Dots.uti
  include tables/braille-patterns.cti
  numsign            3456
  begcapsword        456
  multind            56 endcapsword nonumsign nocontractsign
  nocontractsign     56    # nocontractsign before endcapsword
  nonumsign          56
  endcapsword        56
  numericnocontchars abcdefghij
$ echo ""|abc;ab"" | ./tools/lou_translate --backward foo.louis
ABCAB
The indicator doesn't terminate all-caps. With this patch it does:
$ echo ""|abc;ab"" | ./tools/lou_translate --backward foo.louis
ABCab
This PR changes the following:

Make backtranslation go though all opcodes that are specified in the multind opcode
Fix a problem in handleMultind in that it was matching for CTO_EndCapsWordRule instead of CTO_EndCapsWord. This causes  to not return an opcode and consequently the endcapsword rule is not applied and the backtranslation stays in all-caps mode.
Do not advance the position while going through the multind opcodes

However a major problem of this PR is that the full test suite doesn't terminate. I think it hangs in da-dk-g28.yaml. Do not know why at the moment.","@egli Why does the current version of that test work (without the multind rule)?
display | 456
display ; 56
display # 3456
include tables/latinLetterDef6Dots.uti
include tables/digits6Dots.uti
include tables/litdigits6Dots.uti
include tables/braille-patterns.cti
numsign            3456
begcapsword        456
nocontractsign     56
endcapsword        56
numericnocontchars abcdefghij",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1167,2022-03-02T14:34:15Z,2022-03-03T14:16:37Z,2022-03-03T18:18:14Z,CLOSED,False,14,6,1,https://github.com/egli,Fix the multind opcode handling (or at least try to),5,"['bug', 'back-translation']",https://github.com/liblouis/liblouis/pull/1167,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1167#issuecomment-1058085533,"The proposed PR #1166 exposes a bug in backtranslation when multind is involved:
$ cat foo.louis 
  display | 456
  display ; 56
  display # 3456
  include tables/latinLetterDef6Dots.uti
  include tables/digits6Dots.uti
  include tables/litdigits6Dots.uti
  include tables/braille-patterns.cti
  numsign            3456
  begcapsword        456
  multind            56 endcapsword nonumsign nocontractsign
  nocontractsign     56    # nocontractsign before endcapsword
  nonumsign          56
  endcapsword        56
  numericnocontchars abcdefghij
$ echo ""|abc;ab"" | ./tools/lou_translate --backward foo.louis
ABCAB
The indicator doesn't terminate all-caps. With this patch it does:
$ echo ""|abc;ab"" | ./tools/lou_translate --backward foo.louis
ABCab
This PR changes the following:

Make backtranslation go though all opcodes that are specified in the multind opcode
Fix a problem in handleMultind in that it was matching for CTO_EndCapsWordRule instead of CTO_EndCapsWord. This causes  to not return an opcode and consequently the endcapsword rule is not applied and the backtranslation stays in all-caps mode.
Do not advance the position while going through the multind opcodes

However a major problem of this PR is that the full test suite doesn't terminate. I think it hangs in da-dk-g28.yaml. Do not know why at the moment.","The multind opcode has many problems

the implementation deals with emphasis which as far as I know is generally ignored in back translation
I'm not convinced that they are needed. The documentation states that the back-translation cannot deduce the context properly if there are multiple indicators, i.e. is there a letter after the letter sign. But couldn't this be solved with a larger lookahead?
Many of the ""internal opcodes"", i.e. CTO_*Rule seem to exist solely for the purpose of multind

Having said all this PR does not address any of these problems. Instead it assumes that the multind opcode is for handling multiple opcodes that map to the same dot pattern, which it doesn't. It tries to apply all opcodes that are given for a multind opcode without advancing the position in the input. The implementation seems to drop into an endless loop, probably exactly because of that.
So instead of fixing the multind opcode we should probably address #1168 and in a second step enhance back-translation (if possible) so that the multind opcode is not needed anymore.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1169,2022-03-03T16:35:01Z,2022-03-04T07:42:48Z,2022-03-04T07:59:33Z,MERGED,True,446,6,1,https://github.com/egli,Added all tests from the sbs-braille-tables except computer braille,1,[],https://github.com/liblouis/liblouis/pull/1169,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1169,"The tests are from https://github.com/sbsdev/sbs-braille-tables/blob/master/tests to be .exact
Some tests fail because there are pending patches that need to go upstream.","The tests are from https://github.com/sbsdev/sbs-braille-tables/blob/master/tests to be .exact
Some tests fail because there are pending patches that need to go upstream.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,1,https://github.com/liblouis/liblouis/pull/1172,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,2,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060288702,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","Oooops, looking into fixing make not to fail",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060290193,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.",@pvagner the Makefiles need to be changed as you removed some tables and added some tests as far as I can tell. Do you want me to do that?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,4,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060344936,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.",@egli  I am just doing it right now. Please give me a hour or so and it should hopefully be all okay.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060364995,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","Just in case, here's a patch that fixes the Makefiles:
From 5375d46fe3e97fe38105067a11219b3ccfa37846 Mon Sep 17 00:00:00 2001
From: Christian Egli <...>
Date: Mon, 7 Mar 2022 10:05:31 +0100
Subject: [PATCH] Fix Makefiles

---
 tables/Makefile.am              | 2 --
 tests/Makefile.am               | 1 +
 tests/braille-specs/Makefile.am | 1 +
 3 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/tables/Makefile.am b/tables/Makefile.am
index 7fe006d2..e0791914 100644
--- a/tables/Makefile.am
+++ b/tables/Makefile.am
@@ -326,12 +326,10 @@ table_files = \
 	si-in-g1.utb \
 	sin.cti \
 	sin.utb \
-	sk-chardefs.cti \
 	sk-g1.ctb \
 	sk-sk-g1.utb \
 	sk-sk.utb \
 	sk.tbl \
-	sk-translation.cti \
 	sl-si-comp8.ctb \
 	sl-si-g1.utb \
 	sl.tbl \
diff --git a/tests/Makefile.am b/tests/Makefile.am
index fb37be38..9b08f54f 100644
--- a/tests/Makefile.am
+++ b/tests/Makefile.am
@@ -184,6 +184,7 @@ dist_braille_specs_TESTS =				  \
 	braille-specs/ru.yaml				  \
 	braille-specs/sah.yaml				  \
 	braille-specs/sk-g1_harness.yaml		  \
+	braille-specs/sk.yaml				  \
 	braille-specs/sl-g1.yaml			  \
 	braille-specs/spaces.yaml			  \
 	braille-specs/sr-g1_harness.yaml		  \
diff --git a/tests/braille-specs/Makefile.am b/tests/braille-specs/Makefile.am
index b15ea4a6..ccb19c85 100644
--- a/tests/braille-specs/Makefile.am
+++ b/tests/braille-specs/Makefile.am
@@ -118,6 +118,7 @@ EXTRA_DIST =					\
 	ru.yaml					\
 	sah.yaml				\
 	sk-g1_harness.yaml			\
+	sk.yaml					\
 	sl-g1.yaml				\
 	spaces.yaml				\
 	sr-g1_harness.yaml			\
-- 
2.32.0

Now there are failures in braille-specs/sk-g1_harness",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,6,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060371780,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.",I have chosen to merge all the tests into the one file thus I have only manually applied first change of your patch. Is it okay now please?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,7,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060400996,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","Where do I put news?
Shal I edit NEWS file directly?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060403368,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","Where do I put news? Shall I edit NEWS file directly?

Either that or just put it in a comment here (the reason for putting it here is that quite often there are merge conflicts in the NEWS file, so I find it almost easier to just grab tne news entry from an issue comment)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,9,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060408372,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","Is it okay to just say

Updated slovak braille table according to the specs published by the Braille authority of Slovakia. Improved both forward and back translation of foreign latin characters such as those found in czech, german, polish and french texts. Added forward translation of many missing symbols and extended basic math symbols.

One of the goals of the Braille authority of Slovakia was making reading experience as nice as possible thus forward translation includes many more symbols than back translation. It's why I am proposing such a news entry.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,10,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060635292,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","Is this going to be included in the todays release please?
If yes should I do something else today?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1060694996,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","@pvagner It depends. This PR was created quite last minute and I haven't had time to properly review it yet. If I have some time today to review it before the release is cut, and there are no issues, we'll include it, otherwise it'll be for release 3.22.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,12,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1074901763,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","@bertfrees  When you get a chance, can you please take a look? I'd appreciate at least short summary trying to judge how much work this needs in order to be merged.
Thanks and greetings
Peter",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/bertfrees,13,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1075068886,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.",I'll have a look soon. But I think you can sleep on both ears. I'm sure it does not need much more work and can be included in version 3.22.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/bertfrees,14,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1075340596,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","It would have been nice to have one separate commit that inlines the contents of sk-chardefs.cti and sk-translation.cti in sk-g1.ctb, before the other changes, so that it is easier to see what has actually changed. I'll try to recreate such a commit. For this reason I've added the ""needs fixup"" label.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,15,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1075344531,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","It would have been nice to have one separate commit that inlines the contents of sk-chardefs.cti and sk-translation.cti in sk-g1.ctb, before the other changes, so that it is easier to see what has actually changed. I'll try to recreate such a commit.

Och, that's very difficult to do now since I have tweaked the formatting so the next commit will also include all the changes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/bertfrees,16,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1075347665,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","OK. Well, I'll see what I can do.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/pvagner,17,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1109708875,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.","Dear @bertfrees I just would like to make sure we can make this to upcoming release in june. At first I don't want to rush but at the other hand if that would not be possible because I was unable to do my job, that would be dissapointing.
Is there something I can do to help pass this through?
Will it be necessary to redo the changes incrementally first merging everything into single file and then recreating other changes? Because if this is the only way to proceed I should work on it as soon as possible.
Greetings
Peter",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1172,2022-03-04T09:49:22Z,2022-05-26T11:58:17Z,2022-05-26T11:58:17Z,MERGED,True,1070,471,9,https://github.com/pvagner,Updated Slovak braile table to be inline with the specs and added tests,5,['tables'],https://github.com/liblouis/liblouis/pull/1172,https://github.com/bertfrees,18,https://github.com/liblouis/liblouis/pull/1172#issuecomment-1110128594,"Since september of 2021 we are working to update the Slovak braille table for liblouis. A corresponding guidelines were formalised and released at the end of 2021.
The table has been tested at Matej Hrebenda Slovak Library for the Blind (SKN) in Levoča with support from lead coordinator of Slovak braille authority.
After releasing braille usage guidelines we'd also like to make this available to the general public, so people are able to use their braille devices and applications according to these guidelines.",@pvagner Everything is fine. It will be included.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1173,2022-03-04T09:53:33Z,2022-03-04T14:43:09Z,2022-03-07T12:09:40Z,MERGED,True,276,5,10,https://github.com/egli,Add a German 6-dot computerbraille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1173,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1173,"From the comments in the new table:
# There is no official standard for German 6 dot computer braille. To
# my knowledge there is not even an official standard for 8 dot
# computer braille , see
# http://www.bskdl.org/braillesysteme.html#computer. There is some
# definition for 8-dot at http://braille.ch/computer.htm but I do not
# know how official that is. On the implementation side there is the
# German Eurobraille table in Liblouis.

# So consider this table as a defacto standard as it is used at SBS to
# produce books for the German speaking readers.","From the comments in the new table:
# There is no official standard for German 6 dot computer braille. To
# my knowledge there is not even an official standard for 8 dot
# computer braille , see
# http://www.bskdl.org/braillesysteme.html#computer. There is some
# definition for 8-dot at http://braille.ch/computer.htm but I do not
# know how official that is. On the implementation side there is the
# German Eurobraille table in Liblouis.

# So consider this table as a defacto standard as it is used at SBS to
# produce books for the German speaking readers.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1173,2022-03-04T09:53:33Z,2022-03-04T14:43:09Z,2022-03-07T12:09:40Z,MERGED,True,276,5,10,https://github.com/egli,Add a German 6-dot computerbraille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1173,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1173#issuecomment-1059182713,"From the comments in the new table:
# There is no official standard for German 6 dot computer braille. To
# my knowledge there is not even an official standard for 8 dot
# computer braille , see
# http://www.bskdl.org/braillesysteme.html#computer. There is some
# definition for 8-dot at http://braille.ch/computer.htm but I do not
# know how official that is. On the implementation side there is the
# German Eurobraille table in Liblouis.

# So consider this table as a defacto standard as it is used at SBS to
# produce books for the German speaking readers.","""generate-display-names"" test is failing.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1173,2022-03-04T09:53:33Z,2022-03-04T14:43:09Z,2022-03-07T12:09:40Z,MERGED,True,276,5,10,https://github.com/egli,Add a German 6-dot computerbraille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1173,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1173#issuecomment-1059200219,"From the comments in the new table:
# There is no official standard for German 6 dot computer braille. To
# my knowledge there is not even an official standard for 8 dot
# computer braille , see
# http://www.bskdl.org/braillesysteme.html#computer. There is some
# definition for 8-dot at http://braille.ch/computer.htm but I do not
# know how official that is. On the implementation side there is the
# German Eurobraille table in Liblouis.

# So consider this table as a defacto standard as it is used at SBS to
# produce books for the German speaking readers.","""generate-display-names"" should be fixed now",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1173,2022-03-04T09:53:33Z,2022-03-04T14:43:09Z,2022-03-07T12:09:40Z,MERGED,True,276,5,10,https://github.com/egli,Add a German 6-dot computerbraille table,4,['tables'],https://github.com/liblouis/liblouis/pull/1173,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1173#issuecomment-1059223198,"From the comments in the new table:
# There is no official standard for German 6 dot computer braille. To
# my knowledge there is not even an official standard for 8 dot
# computer braille , see
# http://www.bskdl.org/braillesysteme.html#computer. There is some
# definition for 8-dot at http://braille.ch/computer.htm but I do not
# know how official that is. On the implementation side there is the
# German Eurobraille table in Liblouis.

# So consider this table as a defacto standard as it is used at SBS to
# produce books for the German speaking readers.",I used the button. I hope it's up to your standards :-),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1174,2022-03-04T16:24:09Z,2022-03-07T11:53:49Z,2022-05-30T10:51:56Z,MERGED,True,62,51,3,https://github.com/egli,Upstream sbs changes to de-g*-core,5,['tables'],https://github.com/liblouis/liblouis/pull/1174,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1174,"This PR contains all the improvements from the SBS g*-core tables. Well g1 is identical.
This might be a bit tricky to merge with the bidi branch. Maybe I should apply the patches on top of that branch.","This PR contains all the improvements from the SBS g*-core tables. Well g1 is identical.
This might be a bit tricky to merge with the bidi branch. Maybe I should apply the patches on top of that branch.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/1176,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/hammera,2,https://github.com/liblouis/liblouis/pull/1176#issuecomment-1062090373,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","The tests/braille-specs/hu-hu-g1_special_consonants.yaml testcase file are containing with a larger word list, with contains special hungarian consonants letters (cscs, ccs, gygy, ggy letters, etc). If happening any change into hungarian tables, I easyest verify back translation quality and not do any regression, without I always need checking the very large 565495 words yaml database before push operation.
The committed testcase file size is 2090696 bytes (35910 words), my very large local testcase file size is 38 MB (and containing 560495 words).
If need careful the source repository size, of course I remove the tests/braille-specs/hu-hu-g1_special_consonants.yaml testcase with my branch. I used the bothDirection mode.
Review is not need this commit related, because I added only the tests/Makefile.am with tests/braille-specs/hu-hu-g1_special_consonants.yaml line, and the tests/braille-specs/Makefile.am file I added only the testcase file name.
Proper code lines is following:

tests/braille-specs/Makefile.am:

	braille-specs/hu-hu-g1_special_consonants.yaml		  \


tests/braille-specs/Makefile.am

	hu-hu-g1_special_consonants.yaml			\",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/hammera,3,https://github.com/liblouis/liblouis/pull/1176#issuecomment-1062096399,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","Oops, I wrote wrong the first Makefile.am name, the right  filenames is following:

tests/Makefile.am
tests/braille-specs/Makefile.am

Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/hammera,4,https://github.com/liblouis/liblouis/pull/1176#issuecomment-1105251826,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","Hi Bert or Chris,
Have any ydea why failed the Emscripten / Build liblouis for js (pull_request) workflow?
The workflow ran until 8 minutes.
Please look the log result, other workflows are rans succesfully.
Future the second testcase extending related commit are not need manually reviewing, because I automatically updated the hu-hu-g1_special_consonants.yaml file with new changed words from the word contraction database, and the second commit is a very large squashed commit.
Now, I using following working method:

If I add rule changes into tables directory the hungarian table files, I always use usually the --fixup option and give the first commit identifyer (usual the first marc 7TH doed table changes).
When I extending only automatically a yaml generator program the testcase file, I use too the fixup method, but the second testcase change related commit identifier (the apr 13TH happened commit date).
If happening a branch change or a larger source code change with affecting the main branch and the feature branch, I doing a simple rebase command to prewent disturb merge commits, and do a force-push operation.

What better this situation in interactive rebase? The fixup or squash method? I would like reduce for you the review need commits before final release preparation.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/hammera,5,https://github.com/liblouis/liblouis/pull/1176#issuecomment-1138641456,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","@bertfrees, Thank you the approve and review.
I simple doed only a git fetch upstream, and doed a git rebase upstream/master operation, because see lot of changes in the master branch.
After this, I doed a git push -f command my extend_braille_input feature branch.
So, now not happened any commit the previous reviewed files.
Because in Liblouis list Chris described yesterday the final release date (june 7 I think), we three have possibility talk a hard freeze date?
My purpose only to easyest for you and Chris thing to concentrate other pull requests reviews, now I not looked milestone lists how many opened pull request have in the list. For example we determine june 1, perfect this hard freeze  date?
If after for example june 1 not need, I not will be doing any commits into hungarian tables directory and tests/braille-specs directory except not need doing a critical table fix.
We always known the final release date (this is always happening my since 12 year experience), Chris always describe final release date in Liblouis list estimated three or four weeks before release date. Very easy determine an estimated hard freeze date. For example, if Liblouis maintainers community determine a general hard freeze date (for example release date minus one or two weeks), before this date all wanted pull requests need opening, and usual the most pull requests are 100% ready (or near by ready).
I think usual already this is right happening, I don't no for example since 12 years how many time happened to a table maintainer opened a very large and complex pull request after june 1, for a june 7 date scheduled release. :-):-)
Hopefully not often happening this.
After hard freeze date, hopefully usual pull request authors only commit critical important fixes he's own opened pull request, to easyest the reviewing related works.
This determined rule (hopefully) future easyest the release prep related work, usual the last two week in a Liblouis development cicle a very hard two week.
For example, release date minus six or seven day date general is a good hard freeze date, because usual before when this date happening table maintainers already all wanted pull requests opened, usual lot of pull requests are 100% percent ready, and only need code cleanups before final opened pull requests merge and final release date.
What do you think?
Sorry if my english not full perfect, I little tired now.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/egli,6,https://github.com/liblouis/liblouis/pull/1176#issuecomment-1140872177,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","we have possibility talk a hard freeze date?

Well, I think we are a pretty small team and I'd like to keep things flexible. So I'd rather not add another date that I need to think about. You do a really good job with your PRs and I think we do just fine (even without a hard freeze date). Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/hammera,7,https://github.com/liblouis/liblouis/pull/1176#issuecomment-1140899422,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","@egli, you are right, thanks the answer. Absolute perfect the team collaboration work and the release management related work.
This is previous only an ydea, because I experienced similar organized dates for example bigger dev communitys with integrated translators community (for example GNOME development and l10n community). :-):-)
You are absolute right, Liblouis team community is now a pretty small team, so easy flexible careful the development work without risk the final release date.
Usual how many members active a development cicle? Now I see lot of new members with doed fantastic works with bug fixing related (for example Samuel Thibault, Martin
Gieseking, Robert Scott).
Usual if I see right the team have more table maintainers, and relative small number of developers. Possible because Liblouis code is ofcourse too complex, and not everybody known's experience C or C++ programmer.
Table maintaining is easyer to learning, because with Liblouis have a fantastic and wonderful documentation.
I doing now final cleanup my Pull request, I need looking now a bigger new word list, and final filter duplications my testcase file.
I will doing I think evening a force-push operation, because I see lot of branch changes with affecting a feature branch.
What the last date when you or bert have possibility doing an approve operation? Usual I now doing only git fixup commands the HEAD branch my feature branch (to prevent lot of unneed commits in the history), usual the affected files is tables/hu-backtranslate-word-corrections.cti files and tests/braille-specs/hu-hu-g1_special_consonants.yaml file).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1176#issuecomment-1140928122,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","Oh @hammera, I just merged your PR. Can you do some new changes in a separate PR? Thanks",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1176,2022-03-07T17:09:15Z,2022-05-30T09:01:25Z,2022-05-30T10:08:14Z,MERGED,True,86544,196,14,https://github.com/hammera,tables/hu-exceptionwords.cti: added only one exception,2,['tables'],https://github.com/liblouis/liblouis/pull/1176,https://github.com/hammera,9,https://github.com/liblouis/liblouis/pull/1176#issuecomment-1140963819,"Hi Chris or Bert,
I added only one exception into tables/hu-exceptionwords.cti file, and added three testcase words into tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files.
I known, the 3.21 release is already publicated, congratulation the release. This update is not a critical important change, but if you have a little time, please commit this change the master branch.
Review is absolute easy.
In the tables/hu-exceptionwords.cti file containing only one new line:
begword kosarassz 13-135-234-1-1235-1-234-156	For example kosarassztár, kosarassztárok words
The tests/braille-specs/hu-hu-g1_harness.yaml and tests/braille-specs/hu-hu-g1_backward.yaml files containing only testcases.
Note: I always will continuing hungarian table update related task with extend_braille_input branch, so if you would like, I rename future this branch with hungarian_table_dev or hungarian_table_development branch. Before 3.22 release publication, feel free commit latest available changes this branch.
Attila","Oh, I now see you are merged the latest thursday state of my pull request when I doed I think wednesday or thursday a force-push operation. Thanks the merge, I doing now the prettify cleanups works. :-):-)
Ok Chris, I opening an another pull request the prettifi cleanups related. If fit the approve before june 7 when you publish the 3.22 release, good this, if not, we schedule the prettify cleanup the 3.23 release. So, not matter if not fit now the final prettify cleanup related approve before Liblouis 3.22 release prep, if have more opened pull requests your and bert plates. This is full acceptable, I noot looked yet the milestone list how many another table developers pull requests you need reviewing before june 7 the 3.22 release publication.
I doed between thursday and saturday with 7 fixups commits, but because this is final cleanup works, I not doed yet a force-push operation (not want always doing bigger changes with force-push operation and rebase operation every work day evening), to not disturb you and bert the prettify changes force-push operation related always need review related monotone work. :-):-)
Anyway, Bert, Chris, thanks the merge. Hungarian Braille tables quality stepped again forward again a big, and more opensource products have possibility will be use this hungarian tables improvements changes with will be awailable the future june 7 awailabe the Liblouis 3.22 release.
Thanks the cooperative work.
Fantastic to landed the new hungarian tables improvements the Liblouis 3.22 release.
Please you close this pull request, I go to work, and I will opening a new request the prettifi cleanup related work.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1177,2022-03-10T11:07:17Z,2022-03-10T13:30:06Z,2022-03-10T13:30:10Z,MERGED,True,73,0,3,https://github.com/egli,Fix a problem in German braille with single letters before apostrophe,3,['tables'],https://github.com/liblouis/liblouis/pull/1177,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1177,Fixes sbsdev/sbs-braille-tables#31,Fixes sbsdev/sbs-braille-tables#31,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1179,2022-03-11T15:22:19Z,2022-03-28T17:03:48Z,2022-04-02T09:37:52Z,MERGED,True,48,0,1,https://github.com/sthibaul,Add CI for running usan,1,['build system'],https://github.com/liblouis/liblouis/pull/1179,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1179,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1179,2022-03-11T15:22:19Z,2022-03-28T17:03:48Z,2022-04-02T09:37:52Z,MERGED,True,48,0,1,https://github.com/sthibaul,Add CI for running usan,1,['build system'],https://github.com/liblouis/liblouis/pull/1179,https://github.com/sthibaul,2,https://github.com/liblouis/liblouis/pull/1179#issuecomment-1065218577,,"For now this is only enabling usan, which already passes fine, congrats ;)
For lsan, there are some issues, see #1178
For asan, there are some issues too, see #1180",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1179,2022-03-11T15:22:19Z,2022-03-28T17:03:48Z,2022-04-02T09:37:52Z,MERGED,True,48,0,1,https://github.com/sthibaul,Add CI for running usan,1,['build system'],https://github.com/liblouis/liblouis/pull/1179,https://github.com/sthibaul,3,https://github.com/liblouis/liblouis/pull/1179#issuecomment-1065332113,,"Ah, no, this was missing the halt_on_error flag, there are a couple of undefined behavior issues, I'll submit patches",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1179,2022-03-11T15:22:19Z,2022-03-28T17:03:48Z,2022-04-02T09:37:52Z,MERGED,True,48,0,1,https://github.com/sthibaul,Add CI for running usan,1,['build system'],https://github.com/liblouis/liblouis/pull/1179,https://github.com/sthibaul,4,https://github.com/liblouis/liblouis/pull/1179#issuecomment-1065340134,,"I have added the halt_on_error flag. This is now failing because of a zero-length VLA, fixed by #1181 . When that PR is merged we can rebase this PR.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1179,2022-03-11T15:22:19Z,2022-03-28T17:03:48Z,2022-04-02T09:37:52Z,MERGED,True,48,0,1,https://github.com/sthibaul,Add CI for running usan,1,['build system'],https://github.com/liblouis/liblouis/pull/1179,https://github.com/sthibaul,5,https://github.com/liblouis/liblouis/pull/1179#issuecomment-1080651150,,"Ah, last-minute fix, to use a different log file name.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1181,2022-03-11T17:44:02Z,2022-03-22T07:15:26Z,2022-03-25T18:25:00Z,MERGED,True,1,1,1,https://github.com/sthibaul,Fix zero-length variable-length-array,1,['memory error'],https://github.com/liblouis/liblouis/pull/1181,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1181,"It is an undefined behavior to ask for a variable-length-array with size
0. We thus have to avoid it entirely. Just allocating one element is fine
here.","It is an undefined behavior to ask for a variable-length-array with size
0. We thus have to avoid it entirely. Just allocating one element is fine
here.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/mgieseki,1,https://github.com/liblouis/liblouis/pull/1185,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.","This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/mgieseki,2,https://github.com/liblouis/liblouis/pull/1185#issuecomment-1080990627,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.","I think we need a macro if we want to leave function compilePassOpcode once the maximum string length is reached. Otherwise, another check containing a return statement must be added inside compilePassOpcode.
Maybe it's not necessary to check the index for each single character and we can avoid to introduce the macro. If I counted correctly, there's a maximum number of 7 potentially untested assignments to passInstructions[passIC++] per loop iteration. So it would be sufficient to ensure that there's enough space to hold 7 additional characters at the beginning of the loop body. I.e. replacing line

  
    
      liblouis/liblouis/compileTranslationTable.c
    
    
         Line 1886
      in
      f2251cb
    
  
  
    

        
          
           if (passIC >= MAXSTRING) { 
        
    
  


with
if (passIC >= MAXSTRING-6) {
should also fix the issue, but I haven't tested it properly yet.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1185#issuecomment-1081017647,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.","Like this?
if (!append_instruction_char(passInstructions, &passIC, pass_lookback)) return 0;
I prefer that over a macro.

if (passIC >= MAXSTRING-6)

I could live with this solution too, if it's explained what the ""6"" is, and in such a way that it's obvious the number needs to be updated when we modify compilePassOpcode elsewhere. This probably means explaining the structure of the passInstructions array at the beginning of the function.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/mgieseki,4,https://github.com/liblouis/liblouis/pull/1185#issuecomment-1081051930,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.","Like this?
if (!append_instruction_char(passInstructions, &passIC, pass_lookback)) return 0;

Yes, exactly.

I prefer that over a macro.

Ok, sure. I can adapt the code accordingly. In case you prefer the repetitive checks over a single check at the beginning of the loop body, I'll change the PR that way. If you happen to have already adapted the code yourself, you can of course commit your changes as well.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1185#issuecomment-1081062407,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.","This probably means explaining the structure of the passInstructions array at the beginning of the function.

I've done a first attempt with this table:















_
_
1







_99
_
99







!
!








`
`








~
~








/
/








""foo""
""
3
f
o
o




@12-34-45
@
3
*
*
*




[
[








]
]








#1=99
=
1
99






#1<99
<
1
99






#1<=99
130
1
99






#1>99
>
1
99






#1<=99
131
1
99






#1+
+
1







#1-
-
1







$d
$
*
*
*
*
1
1


$d.
$
*
*
*
*
1
0xffff


$d9
$
*
*
*
*
9
9


$d9-99
$
*
*
*
*
9
99


{foo
{
*
*






}foo
}
*
*






;foo
;
*
*






%foo (character class)
%
*
*
*
*
1
1


%foo.
%
*
*
*
*
1
0xffff


%foo9
%
*
*
*
*
9
9


%foo9-99
%
*
*
*
*
9
99


%foo (swap class)
%
*
*
1
1




%foo.
%
*
*
1
0xffff




%foo9
%
*
*
9
9




%foo9-99
%
*
*
9
99




*
*








?
?








(end of test, begin of action)
32 (space)









(created a new issue for this: #1215)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/mgieseki,6,https://github.com/liblouis/liblouis/pull/1185#issuecomment-1081877548,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.",I've replaced the macro with a function.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/bertfrees,7,https://github.com/liblouis/liblouis/pull/1185#issuecomment-1081886999,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.",Thanks.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/mgieseki,8,https://github.com/liblouis/liblouis/pull/1185#issuecomment-1081930300,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.","Should I run clang-format -i on compileTranslationTable.c in order to fix the format check, or do you take care of this?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1185,2022-03-22T14:59:14Z,2022-05-30T07:05:39Z,2022-05-30T07:11:11Z,MERGED,True,146,61,1,https://github.com/mgieseki,prevent memory overflow in compilePassOpcode,1,['memory error'],https://github.com/liblouis/liblouis/pull/1185,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1185#issuecomment-1081935097,"This is a proposal to fix issue #1171. To prevent writing past the CharsString memory block, I replaced all assignments to passInstructions[passIC++] with macro APPEND_INSTRUCTION_CHAR(ch) that checks the validity of index passIC before assigning a value.
The sample file used to trigger the buffer overflow in #1171 only affects pass_lookback. But since there are a couple of similar sections that append more than one character without checking the index, I adapted all of them. The ""ugly"" macro could be replaced by dedicated index checks to reduce the number of if statements and to speed up the code a bit, but I decided against that to avoid code bloat.","Yes you may do it, otherwise we'll take care of it.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1186,2022-03-25T19:32:54Z,2022-03-28T17:22:12Z,2022-03-28T21:26:47Z,CLOSED,False,12,8,1,https://github.com/sthibaul,Fix memory leak on table compilation error,1,['memory error'],https://github.com/liblouis/liblouis/pull/1186,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1186,"Otherwise we get
/home/samy/brl/translation/liblouis-git/tests/tables/bad.ctb:1: error: opcode 'bad' not defined.
1 errors found.
tests/tables/bad.ctb could not be compiled
=================================================================
==3022215==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 61 byte(s) in 1 object(s) allocated from:
#0 0x7f67684e0545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f676831b31a in __GI___strdup string/strdup.c:42
#2 0x7f676849d47e in compileFile /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4650
#3 0x7f676849d9b1 in compileTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4767
#4 0x7f676849e011 in getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4939
#5 0x7f676849dcb0 in _lou_getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4848
#6 0x7f676849dd0e in lou_getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4860
#7 0x7f676849e165 in lou_checkTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4978
#8 0x55e477d791c2 in main /home/samy/brl/translation/liblouis-git/tests/checkTable.c:29
#9 0x7f67682b47fc in __libc_start_main ../csu/libc-start.c:332
#10 0x55e477d79099 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/checkTable+0x1099)
SUMMARY: LeakSanitizer: 61 byte(s) leaked in 1 allocation(s).
FAIL checkTable (exit status: 23)","Otherwise we get
/home/samy/brl/translation/liblouis-git/tests/tables/bad.ctb:1: error: opcode 'bad' not defined.
1 errors found.
tests/tables/bad.ctb could not be compiled
=================================================================
==3022215==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 61 byte(s) in 1 object(s) allocated from:
#0 0x7f67684e0545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f676831b31a in __GI___strdup string/strdup.c:42
#2 0x7f676849d47e in compileFile /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4650
#3 0x7f676849d9b1 in compileTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4767
#4 0x7f676849e011 in getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4939
#5 0x7f676849dcb0 in _lou_getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4848
#6 0x7f676849dd0e in lou_getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4860
#7 0x7f676849e165 in lou_checkTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4978
#8 0x55e477d791c2 in main /home/samy/brl/translation/liblouis-git/tests/checkTable.c:29
#9 0x7f67682b47fc in __libc_start_main ../csu/libc-start.c:332
#10 0x55e477d79099 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/checkTable+0x1099)
SUMMARY: LeakSanitizer: 61 byte(s) leaked in 1 allocation(s).
FAIL checkTable (exit status: 23)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1186,2022-03-25T19:32:54Z,2022-03-28T17:22:12Z,2022-03-28T21:26:47Z,CLOSED,False,12,8,1,https://github.com/sthibaul,Fix memory leak on table compilation error,1,['memory error'],https://github.com/liblouis/liblouis/pull/1186,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1186#issuecomment-1080937052,"Otherwise we get
/home/samy/brl/translation/liblouis-git/tests/tables/bad.ctb:1: error: opcode 'bad' not defined.
1 errors found.
tests/tables/bad.ctb could not be compiled
=================================================================
==3022215==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 61 byte(s) in 1 object(s) allocated from:
#0 0x7f67684e0545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f676831b31a in __GI___strdup string/strdup.c:42
#2 0x7f676849d47e in compileFile /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4650
#3 0x7f676849d9b1 in compileTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4767
#4 0x7f676849e011 in getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4939
#5 0x7f676849dcb0 in _lou_getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4848
#6 0x7f676849dd0e in lou_getTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4860
#7 0x7f676849e165 in lou_checkTable /home/samy/brl/translation/liblouis-git/liblouis/compileTranslationTable.c:4978
#8 0x55e477d791c2 in main /home/samy/brl/translation/liblouis-git/tests/checkTable.c:29
#9 0x7f67682b47fc in __libc_start_main ../csu/libc-start.c:332
#10 0x55e477d79099 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/checkTable+0x1099)
SUMMARY: LeakSanitizer: 61 byte(s) leaked in 1 allocation(s).
FAIL checkTable (exit status: 23)",Merged in e12a496,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1187,2022-03-25T19:35:24Z,2022-03-28T17:22:16Z,2022-03-28T21:26:06Z,CLOSED,False,2,2,1,https://github.com/sthibaul,lou_findTables: Fix memleak,1,['memory error'],https://github.com/liblouis/liblouis/pull/1187,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1187,"Since the ""for"" loop would always make ""matches"" NULL.
Otherwise we get in tests/findTable.log:
[...]
2 matches found
=================================================================
==3029162==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 24 byte(s) in 1 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b636cc in list_conj /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:58
#2 0x7f6433b652c7 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#3 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#4 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#5 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
Indirect leak of 32 byte(s) in 2 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b65293 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#2 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#3 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#4 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
Indirect leak of 24 byte(s) in 1 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b637f9 in list_conj /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:84
#2 0x7f6433b652c7 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#3 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#4 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#5 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
SUMMARY: LeakSanitizer: 80 byte(s) leaked in 4 allocation(s).
FAIL findTable (exit status: 23)","Since the ""for"" loop would always make ""matches"" NULL.
Otherwise we get in tests/findTable.log:
[...]
2 matches found
=================================================================
==3029162==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 24 byte(s) in 1 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b636cc in list_conj /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:58
#2 0x7f6433b652c7 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#3 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#4 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#5 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
Indirect leak of 32 byte(s) in 2 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b65293 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#2 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#3 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#4 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
Indirect leak of 24 byte(s) in 1 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b637f9 in list_conj /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:84
#2 0x7f6433b652c7 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#3 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#4 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#5 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
SUMMARY: LeakSanitizer: 80 byte(s) leaked in 4 allocation(s).
FAIL findTable (exit status: 23)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1187,2022-03-25T19:35:24Z,2022-03-28T17:22:16Z,2022-03-28T21:26:06Z,CLOSED,False,2,2,1,https://github.com/sthibaul,lou_findTables: Fix memleak,1,['memory error'],https://github.com/liblouis/liblouis/pull/1187,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1187#issuecomment-1080937117,"Since the ""for"" loop would always make ""matches"" NULL.
Otherwise we get in tests/findTable.log:
[...]
2 matches found
=================================================================
==3029162==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 24 byte(s) in 1 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b636cc in list_conj /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:58
#2 0x7f6433b652c7 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#3 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#4 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#5 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
Indirect leak of 32 byte(s) in 2 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b65293 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#2 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#3 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#4 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
Indirect leak of 24 byte(s) in 1 object(s) allocated from:
#0 0x7f6433b92545 in __interceptor_malloc ../../../../src/libsanitizer/lsan/lsan_interceptors.cpp:75
#1 0x7f6433b637f9 in list_conj /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:84
#2 0x7f6433b652c7 in lou_findTables /home/samy/brl/translation/liblouis-git/liblouis/metadata.c:767
#3 0x55c2bddf4291 in main /home/samy/brl/translation/liblouis-git/tests/findTable.c:33
#4 0x7f64339667fc in __libc_start_main ../csu/libc-start.c:332
#5 0x55c2bddf40d9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tests/.libs/findTable+0x10d9)
SUMMARY: LeakSanitizer: 80 byte(s) leaked in 4 allocation(s).
FAIL findTable (exit status: 23)",Merged in e12a496,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1188,2022-03-25T19:36:46Z,2022-03-28T17:22:20Z,2022-03-28T21:26:29Z,CLOSED,False,18,4,3,https://github.com/sthibaul,tests: Fix missing frees,1,['memory error'],https://github.com/liblouis/liblouis/pull/1188,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1188,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1188,2022-03-25T19:36:46Z,2022-03-28T17:22:20Z,2022-03-28T21:26:29Z,CLOSED,False,18,4,3,https://github.com/sthibaul,tests: Fix missing frees,1,['memory error'],https://github.com/liblouis/liblouis/pull/1188,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1188#issuecomment-1080937227,,Merged in e12a496,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1189,2022-03-25T21:07:27Z,2022-03-28T17:22:23Z,2022-03-28T21:27:26Z,CLOSED,False,4,0,1,https://github.com/sthibaul,lou_checkyaml: Add missing free,1,['memory error'],https://github.com/liblouis/liblouis/pull/1189,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1189,table_name was allocated at the beginning of the function,table_name was allocated at the beginning of the function,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1189,2022-03-25T21:07:27Z,2022-03-28T17:22:23Z,2022-03-28T21:27:26Z,CLOSED,False,4,0,1,https://github.com/sthibaul,lou_checkyaml: Add missing free,1,['memory error'],https://github.com/liblouis/liblouis/pull/1189,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1189#issuecomment-1080937285,table_name was allocated at the beginning of the function,Merged in e12a496,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1190,2022-03-25T22:04:12Z,2022-03-28T17:22:28Z,2022-03-28T21:25:49Z,CLOSED,False,7,1,1,https://github.com/sthibaul,customTableResolver: Free returned value,1,['memory error'],https://github.com/liblouis/liblouis/pull/1190,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1190,"Since we return it we don't have a way to free it as soon as possible,
but we can at least free it when called again, which at least silences
lsan.","Since we return it we don't have a way to free it as soon as possible,
but we can at least free it when called again, which at least silences
lsan.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1190,2022-03-25T22:04:12Z,2022-03-28T17:22:28Z,2022-03-28T21:25:49Z,CLOSED,False,7,1,1,https://github.com/sthibaul,customTableResolver: Free returned value,1,['memory error'],https://github.com/liblouis/liblouis/pull/1190,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1190#issuecomment-1080937395,"Since we return it we don't have a way to free it as soon as possible,
but we can at least free it when called again, which at least silences
lsan.",Merged in e12a496,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1191,2022-03-25T22:29:35Z,2022-03-28T17:22:26Z,2022-03-28T21:27:10Z,CLOSED,False,2,0,1,https://github.com/sthibaul,lou_checkyaml: Add missing yaml_event_delete,1,['memory error'],https://github.com/liblouis/liblouis/pull/1191,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1191,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1191,2022-03-25T22:29:35Z,2022-03-28T17:22:26Z,2022-03-28T21:27:10Z,CLOSED,False,2,0,1,https://github.com/sthibaul,lou_checkyaml: Add missing yaml_event_delete,1,['memory error'],https://github.com/liblouis/liblouis/pull/1191,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1191#issuecomment-1080937333,,Merged in e12a496,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1192,2022-03-26T08:44:51Z,2022-03-28T17:29:10Z,2022-03-28T21:27:50Z,CLOSED,False,5,0,1,https://github.com/sthibaul,SwapTest: Fix read overflow,1,['memory error'],https://github.com/liblouis/liblouis/pull/1192,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1192,"SwapTest has to check wheter it overflows the input. Otherwise we get in
tests/braille-specs/da-dk-g16-lit.log:
==43588==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000026712 at pc 0x7f7d9ff57381 bp 0x7fff050fd170 sp 0x7fff050fd168
READ of size 2 at 0x602000026712 thread T0
#0 0x7f7d9ff57380 in swapTest /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:399
#1 0x7f7d9ff5d22e in passDoTest /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:861
#2 0x7f7d9ff552f2 in findForPassRule /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:211
#3 0x7f7d9ff55ac9 in makeCorrections /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:276
#4 0x7f7d9ff6128d in _lou_translate /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:1272
#5 0x55b837c9bdac in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:180
#6 0x55b837c97717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#7 0x55b837c97f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#8 0x55b837c9948a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#9 0x7f7d9fd447fc in __libc_start_main ../csu/libc-start.c:332
#10 0x55b837c914c9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tools/.libs/lou_checkyaml+0x64c9)
0x602000026712 is located 0 bytes to the right of 2-byte region [0x602000026710,0x602000026712)
allocated by thread T0 here:
#0 0x7f7da00777cf in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145
#1 0x55b837c9b8b6 in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:138
#2 0x55b837c97717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#3 0x55b837c97f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#4 0x55b837c9948a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#5 0x7f7d9fd447fc in __libc_start_main ../csu/libc-start.c:332","SwapTest has to check wheter it overflows the input. Otherwise we get in
tests/braille-specs/da-dk-g16-lit.log:
==43588==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000026712 at pc 0x7f7d9ff57381 bp 0x7fff050fd170 sp 0x7fff050fd168
READ of size 2 at 0x602000026712 thread T0
#0 0x7f7d9ff57380 in swapTest /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:399
#1 0x7f7d9ff5d22e in passDoTest /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:861
#2 0x7f7d9ff552f2 in findForPassRule /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:211
#3 0x7f7d9ff55ac9 in makeCorrections /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:276
#4 0x7f7d9ff6128d in _lou_translate /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:1272
#5 0x55b837c9bdac in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:180
#6 0x55b837c97717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#7 0x55b837c97f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#8 0x55b837c9948a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#9 0x7f7d9fd447fc in __libc_start_main ../csu/libc-start.c:332
#10 0x55b837c914c9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tools/.libs/lou_checkyaml+0x64c9)
0x602000026712 is located 0 bytes to the right of 2-byte region [0x602000026710,0x602000026712)
allocated by thread T0 here:
#0 0x7f7da00777cf in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145
#1 0x55b837c9b8b6 in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:138
#2 0x55b837c97717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#3 0x55b837c97f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#4 0x55b837c9948a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#5 0x7f7d9fd447fc in __libc_start_main ../csu/libc-start.c:332",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1192,2022-03-26T08:44:51Z,2022-03-28T17:29:10Z,2022-03-28T21:27:50Z,CLOSED,False,5,0,1,https://github.com/sthibaul,SwapTest: Fix read overflow,1,['memory error'],https://github.com/liblouis/liblouis/pull/1192,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1192#issuecomment-1080943712,"SwapTest has to check wheter it overflows the input. Otherwise we get in
tests/braille-specs/da-dk-g16-lit.log:
==43588==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000026712 at pc 0x7f7d9ff57381 bp 0x7fff050fd170 sp 0x7fff050fd168
READ of size 2 at 0x602000026712 thread T0
#0 0x7f7d9ff57380 in swapTest /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:399
#1 0x7f7d9ff5d22e in passDoTest /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:861
#2 0x7f7d9ff552f2 in findForPassRule /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:211
#3 0x7f7d9ff55ac9 in makeCorrections /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:276
#4 0x7f7d9ff6128d in _lou_translate /home/samy/brl/translation/liblouis-git/liblouis/lou_translateString.c:1272
#5 0x55b837c9bdac in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:180
#6 0x55b837c97717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#7 0x55b837c97f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#8 0x55b837c9948a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#9 0x7f7d9fd447fc in __libc_start_main ../csu/libc-start.c:332
#10 0x55b837c914c9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tools/.libs/lou_checkyaml+0x64c9)
0x602000026712 is located 0 bytes to the right of 2-byte region [0x602000026710,0x602000026712)
allocated by thread T0 here:
#0 0x7f7da00777cf in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145
#1 0x55b837c9b8b6 in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:138
#2 0x55b837c97717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#3 0x55b837c97f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#4 0x55b837c9948a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#5 0x7f7d9fd447fc in __libc_start_main ../csu/libc-start.c:332",Merged in f2251cb,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1193,2022-03-26T08:52:26Z,2022-03-28T17:29:06Z,2022-03-28T21:25:28Z,CLOSED,False,31,28,3,https://github.com/sthibaul,check_base: fix computing input length,1,['memory error'],https://github.com/liblouis/liblouis/pull/1193,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1193,"read_test gives parsed_strlen(word) to read_options, so that it gives it
to read_typeforms, and thus typeform has that length. check_base should
thus also use that length when memcpying it.
Otherwise we get in braille-specs/de-g1.yaml:
==95136==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000f451c at pc 0x7f5603f1b9b0 bp 0x7ffe24c6bc60 sp 0x7ffe24c6b410
READ of size 16 at 0x6020000f451c thread T0
#0 0x7f5603f1b9af in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827
#1 0x5626d22d983b in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:116
#2 0x5626d22d5717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#3 0x5626d22d5f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#4 0x5626d22d748a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#5 0x7f5603c5d7fc in __libc_start_main ../csu/libc-start.c:332
#6 0x5626d22cf4c9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tools/.libs/lou_checkyaml+0x64c9)
0x6020000f451c is located 0 bytes to the right of 12-byte region [0x6020000f4510,0x6020000f451c)
allocated by thread T0 here:
#0 0x7f5603f90987 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154
#1 0x5626d22d37b5 in read_typeforms /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:567
#2 0x5626d22d40c6 in read_options /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:642
#3 0x5626d22d51e7 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:774
#4 0x5626d22d5f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#5 0x5626d22d748a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#6 0x7f5603c5d7fc in __libc_start_main ../csu/libc-start.c:332","read_test gives parsed_strlen(word) to read_options, so that it gives it
to read_typeforms, and thus typeform has that length. check_base should
thus also use that length when memcpying it.
Otherwise we get in braille-specs/de-g1.yaml:
==95136==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000f451c at pc 0x7f5603f1b9b0 bp 0x7ffe24c6bc60 sp 0x7ffe24c6b410
READ of size 16 at 0x6020000f451c thread T0
#0 0x7f5603f1b9af in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827
#1 0x5626d22d983b in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:116
#2 0x5626d22d5717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#3 0x5626d22d5f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#4 0x5626d22d748a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#5 0x7f5603c5d7fc in __libc_start_main ../csu/libc-start.c:332
#6 0x5626d22cf4c9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tools/.libs/lou_checkyaml+0x64c9)
0x6020000f451c is located 0 bytes to the right of 12-byte region [0x6020000f4510,0x6020000f451c)
allocated by thread T0 here:
#0 0x7f5603f90987 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154
#1 0x5626d22d37b5 in read_typeforms /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:567
#2 0x5626d22d40c6 in read_options /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:642
#3 0x5626d22d51e7 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:774
#4 0x5626d22d5f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#5 0x5626d22d748a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#6 0x7f5603c5d7fc in __libc_start_main ../csu/libc-start.c:332",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1193,2022-03-26T08:52:26Z,2022-03-28T17:29:06Z,2022-03-28T21:25:28Z,CLOSED,False,31,28,3,https://github.com/sthibaul,check_base: fix computing input length,1,['memory error'],https://github.com/liblouis/liblouis/pull/1193,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1193#issuecomment-1080943654,"read_test gives parsed_strlen(word) to read_options, so that it gives it
to read_typeforms, and thus typeform has that length. check_base should
thus also use that length when memcpying it.
Otherwise we get in braille-specs/de-g1.yaml:
==95136==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000f451c at pc 0x7f5603f1b9b0 bp 0x7ffe24c6bc60 sp 0x7ffe24c6b410
READ of size 16 at 0x6020000f451c thread T0
#0 0x7f5603f1b9af in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827
#1 0x5626d22d983b in check_base /home/samy/brl/translation/liblouis-git/tools/brl_checks.c:116
#2 0x5626d22d5717 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:807
#3 0x5626d22d5f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#4 0x5626d22d748a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#5 0x7f5603c5d7fc in __libc_start_main ../csu/libc-start.c:332
#6 0x5626d22cf4c9 in _start (/home/samy/ens/projet/1/translation/liblouis-git/tools/.libs/lou_checkyaml+0x64c9)
0x6020000f451c is located 0 bytes to the right of 12-byte region [0x6020000f4510,0x6020000f451c)
allocated by thread T0 here:
#0 0x7f5603f90987 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154
#1 0x5626d22d37b5 in read_typeforms /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:567
#2 0x5626d22d40c6 in read_options /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:642
#3 0x5626d22d51e7 in read_test /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:774
#4 0x5626d22d5f69 in read_tests /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:869
#5 0x5626d22d748a in main /home/samy/brl/translation/liblouis-git/tools/lou_checkyaml.c:1063
#6 0x7f5603c5d7fc in __libc_start_main ../csu/libc-start.c:332",Merged in f2251cb,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1194,2022-03-26T22:48:08Z,2022-04-28T07:11:58Z,2022-04-28T07:11:58Z,MERGED,True,1,1,1,https://github.com/sthibaul,noCompbrlAhead: avoid overflowing input->chars,1,['memory error'],https://github.com/liblouis/liblouis/pull/1194,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1194,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1195,2022-03-26T22:53:29Z,2022-04-28T08:29:21Z,2022-04-28T08:29:22Z,MERGED,True,1,1,1,https://github.com/sthibaul,typeform test: avoid oversized input buffer size,2,['memory error'],https://github.com/liblouis/liblouis/pull/1195,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1195,"inlen is initially set as the mere C string length, lou_translate
expects the number of wide characters, which is actually exactly what
_lou_extParseChars returns.","inlen is initially set as the mere C string length, lou_translate
expects the number of wide characters, which is actually exactly what
_lou_extParseChars returns.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1196,2022-03-28T16:18:01Z,2022-05-25T22:36:17Z,2022-05-25T22:36:22Z,MERGED,True,16,20,5,https://github.com/bertfrees,Eliminate no.tbl,1,['cleanup'],https://github.com/liblouis/liblouis/pull/1196,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1196,"The metadata is moved to no-no-g3.ctb.
I have already applied this patch in release 3.21.0-p1 of liblouis-nar. It was done as a work around for liblouis/liblouis-java#10.
You might argue that this is not so great because it masks a bug that we should try to fix instead. But we've already spend a lot of time trying to fix that bug. And this is a good change anyway because the *.tbl tables were always meant to be temporary.","The metadata is moved to no-no-g3.ctb.
I have already applied this patch in release 3.21.0-p1 of liblouis-nar. It was done as a work around for liblouis/liblouis-java#10.
You might argue that this is not so great because it masks a bug that we should try to fix instead. But we've already spend a lot of time trying to fix that bug. And this is a good change anyway because the *.tbl tables were always meant to be temporary.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1196,2022-03-28T16:18:01Z,2022-05-25T22:36:17Z,2022-05-25T22:36:22Z,MERGED,True,16,20,5,https://github.com/bertfrees,Eliminate no.tbl,1,['cleanup'],https://github.com/liblouis/liblouis/pull/1196,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1196#issuecomment-1081483142,"The metadata is moved to no-no-g3.ctb.
I have already applied this patch in release 3.21.0-p1 of liblouis-nar. It was done as a work around for liblouis/liblouis-java#10.
You might argue that this is not so great because it masks a bug that we should try to fix instead. But we've already spend a lot of time trying to fix that bug. And this is a good change anyway because the *.tbl tables were always meant to be temporary.","You might argue that this is not so great because it masks a bug that we should try to fix instead. But we've already spend a lot of time trying to fix that bug.

What problem is this PR solving? What bug are you referring to?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1196,2022-03-28T16:18:01Z,2022-05-25T22:36:17Z,2022-05-25T22:36:22Z,MERGED,True,16,20,5,https://github.com/bertfrees,Eliminate no.tbl,1,['cleanup'],https://github.com/liblouis/liblouis/pull/1196,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1196#issuecomment-1081572618,"The metadata is moved to no-no-g3.ctb.
I have already applied this patch in release 3.21.0-p1 of liblouis-nar. It was done as a work around for liblouis/liblouis-java#10.
You might argue that this is not so great because it masks a bug that we should try to fix instead. But we've already spend a lot of time trying to fix that bug. And this is a good change anyway because the *.tbl tables were always meant to be temporary.","What bug are you referring to?

liblouis/liblouis-java#10",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1196,2022-03-28T16:18:01Z,2022-05-25T22:36:17Z,2022-05-25T22:36:22Z,MERGED,True,16,20,5,https://github.com/bertfrees,Eliminate no.tbl,1,['cleanup'],https://github.com/liblouis/liblouis/pull/1196,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1196#issuecomment-1081574591,"The metadata is moved to no-no-g3.ctb.
I have already applied this patch in release 3.21.0-p1 of liblouis-nar. It was done as a work around for liblouis/liblouis-java#10.
You might argue that this is not so great because it masks a bug that we should try to fix instead. But we've already spend a lot of time trying to fix that bug. And this is a good change anyway because the *.tbl tables were always meant to be temporary.","Oh, I get it. Reducing the includes avoids this bug. OK, workaround is fine with me",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1197,2022-03-28T21:45:27Z,2022-03-30T14:02:07Z,2022-04-02T09:36:11Z,MERGED,True,96,0,1,https://github.com/sthibaul,Add asan and lsan CI profiles,1,['build system'],https://github.com/liblouis/liblouis/pull/1197,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1197,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1197,2022-03-28T21:45:27Z,2022-03-30T14:02:07Z,2022-04-02T09:36:11Z,MERGED,True,96,0,1,https://github.com/sthibaul,Add asan and lsan CI profiles,1,['build system'],https://github.com/liblouis/liblouis/pull/1197,https://github.com/sthibaul,2,https://github.com/liblouis/liblouis/pull/1197#issuecomment-1081679853,,"The test fails if there are problems, and a mail is sent to the PR submitter with links to the action so they can have a look at logs etc. Also the check shows as failed in the PR and a red cross appears in the pull requests list, so maintainers know they can skip reviewing it until they are fixed.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1197,2022-03-28T21:45:27Z,2022-03-30T14:02:07Z,2022-04-02T09:36:11Z,MERGED,True,96,0,1,https://github.com/sthibaul,Add asan and lsan CI profiles,1,['build system'],https://github.com/liblouis/liblouis/pull/1197,https://github.com/sthibaul,3,https://github.com/liblouis/liblouis/pull/1197#issuecomment-1081680703,,"and when it's a commit on master that brings the failure, people also get notified by mail (I don't remember exactly, but probably the owner(s) of the project and the commit author)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1197,2022-03-28T21:45:27Z,2022-03-30T14:02:07Z,2022-04-02T09:36:11Z,MERGED,True,96,0,1,https://github.com/sthibaul,Add asan and lsan CI profiles,1,['build system'],https://github.com/liblouis/liblouis/pull/1197,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1197#issuecomment-1081808828,,"We should probably move the whole sanitizer tests into a separate workflow and use a build matrix since the workflows are pretty much identical with a few changed options.

Good point. Maybe we should do that before it's merged?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1197,2022-03-28T21:45:27Z,2022-03-30T14:02:07Z,2022-04-02T09:36:11Z,MERGED,True,96,0,1,https://github.com/sthibaul,Add asan and lsan CI profiles,1,['build system'],https://github.com/liblouis/liblouis/pull/1197,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1197#issuecomment-1081813532,,"Well, as far as I know one workflow (usan, #1179) has already been merged to master. This PR contains two more (asan and lsan). That's why I think it's better to keep the two things separate. This PR adds more sanitizer tests and the next PR will move all three tests into a separate workflow and use a build matrix.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1198,2022-03-29T13:59:55Z,2022-05-25T22:44:49Z,2022-05-25T22:44:49Z,MERGED,True,1,1,1,https://github.com/mgieseki,prevent processing of characters beyond the string end,1,['memory error'],https://github.com/liblouis/liblouis/pull/1198,https://github.com/mgieseki,1,https://github.com/liblouis/liblouis/pull/1198,This is a fix for issue #1184.,This is a fix for issue #1184.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1199,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1199#issuecomment-1083314569,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","@egli I just added commit ""part 2"". It solves a lot of xfails but also adds quite a few. Could you please check with Mischa how good or bad these ""regressions"" are?",True,{'THUMBS_UP': ['https://github.com/endorphinbomber']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1199#issuecomment-1084406391,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","- -                     ""auffallen und -steigen ""
    - ""auf'_fallen und '-_steigen ""
    - typeform: { italic: ""   ++++++     ++++++++ ""}
      xfail: ""' missing in front of emphasis indicator""
@egli Before I try to fix this test: are we sure that it should be '-_steigen and not -'_steigen?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1199#issuecomment-1085777431,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","@egli Before I try to fix this test: are we sure that it should be '-_steigen and not -'_steigen?

Not sure. The test was already failing before (in utf-x). Have to check with @mixa72",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/egli,5,https://github.com/liblouis/liblouis/pull/1199#issuecomment-1085851464,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".

I'm not sure I like that approach. I never liked the overly clever use of virtual dots. Maybe in this case they are really needed, I don't know. However I thought there was some functionality in liblouis already that deals with adding dot 6, namely letsign. Shouldn't that work out of the box?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/bertfrees,6,https://github.com/liblouis/liblouis/pull/1199#issuecomment-1085878619,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","So you question the whole idea of virtual dots basically. Because what would you use them for otherwise? I'm not doing something especially clever with them. This is basic usage. This it what virtual dots are all about: adding special ""attributes"" to dots patterns, in order to attach meaning to them for subsequent passes.
I'm not saying that we need to preserve the virtual dots in the output. In fact for now I've changed the commit so that they don't appear in the output. But I think it could be a nice extra. The problem is that currently Liblouis doesn't handle virtual dots in the output very well. For example I think virtual dots should by default be ignored if the display table does not have a mapping for a certain dot pattern with virtual dots.
But internally I really don't think it can be done without them. letsign is useless in this case by the way.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/egli,7,https://github.com/liblouis/liblouis/pull/1199#issuecomment-1088804073,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","I'm totally happy with the second commit (a54cc0f). The first commit I'd like to see less intrusive. You said that dot6 needs to be in front of the emphasis marker anyway if it is inside a word. Regardless of whether there is a contraction in front of it. So I tried to drop all the virtual dot a from the first commit and have a patch that solely deals with emphasis markers inside a word. This seems to do the trick quite well, see the patch below.
However I don't understand why your commit fixes more tests cases. The virtual dot a doesn't seem to be converted to a dot6. Ah, maybe it is the letter attribute that is attached to the fake unicode chars. That must have an effect somehow later. Couldn't that be achieved in a simpler more straight forward way?
diff --git a/tables/de-g0-core.uti b/tables/de-g0-core.uti
index c3b389fd..b8d0b3cc 100644
--- a/tables/de-g0-core.uti
+++ b/tables/de-g0-core.uti
@@ -165,21 +165,25 @@ emphclass bold
 begemphphrase italic 456-456
 endemphphrase italic after 6-3
 lenemphphrase italic 2
-begemphword italic 456
+begemphword italic 456b
 endemphword italic 6-3
 
 begemphphrase bold 456-456
 endemphphrase bold after 6-3
 lenemphphrase bold 2
-begemphword bold 456
+begemphword bold 456b
 endemphword bold 6-3
 
 begemphphrase underline 456-456
 endemphphrase underline after 6-3
 lenemphphrase underline 2
-begemphword underline 456
+begemphword underline 456b
 endemphword underline 6-3
 
+# dot 6 required before emphasis indicator when inside word
+noback pass2 _$l@456b @6-456
+noback pass2 @456b @456
+
 emphclass downgrade
 begemphphrase downgrade 36-3
 endemphphrase downgrade after 6-3
diff --git a/tests/braille-specs/de-g0.yaml b/tests/braille-specs/de-g0.yaml
index bb457790..775b1ac7 100644
--- a/tests/braille-specs/de-g0.yaml
+++ b/tests/braille-specs/de-g0.yaml
@@ -631,11 +631,9 @@ tests:
   - -                     ""Test""
     - ""te'_s'.t""
     - typeform: { italic: ""  + "" }
-      xfail: got ""test"" (no emphasis marks)
   - -                     ""Test""
     - ""t'_es'.t""
     - typeform: { italic: "" ++ "" }
-      xfail: got ""test"" (no emphasis marks)
   # When the first letters of a word are emphasized, a word indicator
   # comes before the letters and a closing indicator after the
   # letters. Only the closing indicator needs a letsign.
@@ -650,11 +648,9 @@ tests:
   - -                     ""Test""
     - ""tes'_t""
     - typeform: { italic: ""   +"" }
-      xfail: got ""tes_t"" (missing letsign)
   - -                     ""Test""
     - ""te'_st""
     - typeform: { italic: ""  ++"" }
-      xfail: got ""te_st"" (missing letsign)
   # When the last letters of a word are emphasized but the full stop
   # that follows is not, a word indicator comes before the letters,
   # and there is no closing indicator.
diff --git a/tests/braille-specs/de-g2-sbs.yaml b/tests/braille-specs/de-g2-sbs.yaml
index a3fcde5b..2880602a 100644
--- a/tests/braille-specs/de-g2-sbs.yaml
+++ b/tests/braille-specs/de-g2-sbs.yaml
@@ -387,22 +387,18 @@ tests:
   - -                     ""blakursiv""
     - ""bla'_kursiv""
     - typeform: { italic: ""   ++++++""}
-      xfail: ""' missing in front of emphasis indicator""
   - -                     ""blakursivblo""
     - ""bla'_kursiv'.blo""
     - typeform: { italic: ""   ++++++   ""}
-      xfail: ""' missing in front of emphasis indicator""
   - -                     ""kursiv...blo""
     - ""_kursiv'....blo""
     - typeform: { italic: ""++++++      ""}
   - -                     ""bla...kursiv""
     - ""bla...'_kursiv""
     - typeform: { italic: ""      ++++++""}
-      xfail: ""' missing in front of emphasis indicator""
   - -                     ""bla...kursiv...blo""
     - ""bla...'_kursiv'....blo""
     - typeform: { italic: ""      ++++++      ""}
-      xfail: ""' missing in front of emphasis indicator""
 
   # Punctuation tests
   # Punctuation after numbers
--",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/egli,8,https://github.com/liblouis/liblouis/pull/1199#issuecomment-1090274605,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","- -                     ""auffallen und -steigen ""
    - ""auf'_fallen und '-_steigen ""
    - typeform: { italic: ""   ++++++     ++++++++ ""}
      xfail: ""' missing in front of emphasis indicator""
@egli Before I try to fix this test: are we sure that it should be '-_steigen and not -'_steigen?

I just talked to @mixa72. This is apparently not handled in the Systematik. You need a ' in front of '-' at the beginning of the word, otherwise it reads as 'ver'. You also need a ' in front of '_' in the middle of a word otherwise it reads as 'lich'. So I guess to be on the save side the test case should really be as follows:
   - -                     ""auffallen und -steigen ""
     - ""auf'_fallen und '-'_steigen ""
     - typeform: { italic: ""   ++++++     ++++++++ ""}
But even @mixa72 told me that this test case is splitting hair and he has never seen this in the wild in 20 years :-)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1199,2022-03-30T12:35:23Z,2022-06-02T11:42:08Z,2022-06-02T11:42:11Z,MERGED,True,348,254,7,https://github.com/bertfrees,Fix some German emphasis issues,3,"['tables', 'needs news']",https://github.com/liblouis/liblouis/pull/1199,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1199#issuecomment-1090463611,"@egli I've started to work on the emphasis issues.
The first issues I'm looking at it the missing dot 6 before the begword marker when it happens inside a word. A lot of failing tests seem to be because of this. My solution involves checking the character before dots 456 (in pass2) and adding dot 6 if it is a letter or a contraction. In order to be able to know whether a dot pattern is a contraction I needed to add a virtual dot. For now I decided to not drop this virtual dot in a later pass and include it in the output. I think this could be useful. The calling application might want to do something special with this extra information. For example, dots 26a will represent the ""or"" contraction while dots 26 will represent the question mark. The calling application might have a braille preview or editor that shows 26a as ""or"" (with some special font) and 26 as ""?"".
Before I continue down this path I'd like to know your thoughts.","However I don't understand why your commit fixes more tests cases. The virtual dot a doesn't seem to be converted to a dot6. Ah, maybe it is the letter attribute that is attached to the fake unicode chars. That must have an effect somehow later. Couldn't that be achieved in a simpler more straight forward way?

It's the most straightforward way I can think of. My patch attaches the letter attribute to all the contraction dot patterns, so that the noback pass2 _$l@456b @6-456 rule also matches dots 456 after a contraction. (I could also have used some custom attribute, and then add noback pass2 _%custom@456b @6-456, but letter seemed appropriate enough.) The fake Unicode chars are needed because you can't attach an attribute to a dot pattern without also attaching it to a text character. I'm not actually using the characters in any rules (other than the character definition rules).

So I guess to be on the save side the test case should really be as follows:
 - -                     ""auffallen und -steigen ""
   - ""auf'_fallen und '-'_steigen ""
   - typeform: { italic: ""   ++++++     ++++++++ ""}

OK, I think I'll add this as a comment to the test case.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1200,2022-03-30T14:25:40Z,2022-03-31T10:27:03Z,2022-03-31T10:27:14Z,MERGED,True,43,148,2,https://github.com/egli,Move the sanitizer into a separate workflow,6,['build system'],https://github.com/liblouis/liblouis/pull/1200,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1200,and use a build matrix for the three sanitizers,and use a build matrix for the three sanitizers,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1200,2022-03-30T14:25:40Z,2022-03-31T10:27:03Z,2022-03-31T10:27:14Z,MERGED,True,43,148,2,https://github.com/egli,Move the sanitizer into a separate workflow,6,['build system'],https://github.com/liblouis/liblouis/pull/1200,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1200#issuecomment-1083245117,and use a build matrix for the three sanitizers,"We could also move the ucs2 and ucs4 into the build matrix, but that makes it a bit more complicated, as you kinda need two variables, one for the configure option (  or --enable-ucs4) and one for the name of the log file artifact (test-suite-${{ ucs }}-${{ matrix.sanitizer }}.log).
So that bit of duplication is OK for now (it was OK all along).",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1200,2022-03-30T14:25:40Z,2022-03-31T10:27:03Z,2022-03-31T10:27:14Z,MERGED,True,43,148,2,https://github.com/egli,Move the sanitizer into a separate workflow,6,['build system'],https://github.com/liblouis/liblouis/pull/1200,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1200#issuecomment-1083659401,and use a build matrix for the three sanitizers,"you kinda need two variables, one for the configure option and one for the name of the log file artifact

But you also have two variables for the three sanitizers, right? What's the problem?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1200,2022-03-30T14:25:40Z,2022-03-31T10:27:03Z,2022-03-31T10:27:14Z,MERGED,True,43,148,2,https://github.com/egli,Move the sanitizer into a separate workflow,6,['build system'],https://github.com/liblouis/liblouis/pull/1200,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1200#issuecomment-1084297010,and use a build matrix for the three sanitizers,"OK, ucs is now also included in the matrix. This makes the workflow quite neat and tidy.
I guess e should also decomplect the main workflow as it does multiple things:

make check for both ucs2 and ucs4
make distcheck
run the metadata test

But I'd suggest this should be part of a different PR
IMHO this PR is ready to go in.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1201,2022-04-01T15:47:11Z,2022-04-05T07:51:47Z,2022-04-05T08:02:43Z,MERGED,True,3,3,2,https://github.com/PaulRambags,Fix in NL table for N with tilde (Ñ),1,['tables'],https://github.com/liblouis/liblouis/pull/1201,https://github.com/PaulRambags,1,https://github.com/liblouis/liblouis/pull/1201,"In the nl-NL-g0.utb table, ""attribute foreign Ñ"" was missing.","In the nl-NL-g0.utb table, ""attribute foreign Ñ"" was missing.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1203,2022-04-13T10:50:50Z,2022-04-13T13:37:45Z,2022-04-13T13:37:45Z,MERGED,True,66,41,7,https://github.com/egli,Ci cleanup,6,"['build system', 'cleanup']",https://github.com/liblouis/liblouis/pull/1203,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1203,"Use a build matrix for the main workflow to build for both ucs2 and ucs4
move the metadata tests to a separate workflow
trigger some workflows only if needed

sanitizer and format check only if C code has changed
table license check only if tables have changed
ignore changes to README and NEWS","Use a build matrix for the main workflow to build for both ucs2 and ucs4
move the metadata tests to a separate workflow
trigger some workflows only if needed

sanitizer and format check only if C code has changed
table license check only if tables have changed
ignore changes to README and NEWS",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1204,2022-04-15T07:43:38Z,2022-05-30T06:50:45Z,2022-05-30T06:55:43Z,MERGED,True,4,5,1,https://github.com/MarioAriasGa,Amend + symbol in en-gb-comp8.ctb,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/1204,https://github.com/MarioAriasGa,1,https://github.com/liblouis/liblouis/pull/1204,"Both + and < symbols have 236 in the same table, which is wrong. The correct for '+' is 235 which is confirmed by this document from UK Association for Accessible Formats in page 24: https://www.ukaaf.org/wp-content/uploads/2020/03/Braille-Computer-Notation-PDF.pdf
As notified by @glenbuck1 on #1087","Both + and < symbols have 236 in the same table, which is wrong. The correct for '+' is 235 which is confirmed by this document from UK Association for Accessible Formats in page 24: https://www.ukaaf.org/wp-content/uploads/2020/03/Braille-Computer-Notation-PDF.pdf
As notified by @glenbuck1 on #1087",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1204,2022-04-15T07:43:38Z,2022-05-30T06:50:45Z,2022-05-30T06:55:43Z,MERGED,True,4,5,1,https://github.com/MarioAriasGa,Amend + symbol in en-gb-comp8.ctb,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/1204,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1204#issuecomment-1111226930,"Both + and < symbols have 236 in the same table, which is wrong. The correct for '+' is 235 which is confirmed by this document from UK Association for Accessible Formats in page 24: https://www.ukaaf.org/wp-content/uploads/2020/03/Braille-Computer-Notation-PDF.pdf
As notified by @glenbuck1 on #1087","TODO: Please add a reference to official documentation about
# the implemented braille code. Preferably submit the documents
# to https://github.com/liblouis/braille-specs.

We would like to have a reference to an official braille specification document in the table file. The document you linked to in your commit message seems appropriate for that end.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1204,2022-04-15T07:43:38Z,2022-05-30T06:50:45Z,2022-05-30T06:55:43Z,MERGED,True,4,5,1,https://github.com/MarioAriasGa,Amend + symbol in en-gb-comp8.ctb,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/1204,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1204#issuecomment-1137053790,"Both + and < symbols have 236 in the same table, which is wrong. The correct for '+' is 235 which is confirmed by this document from UK Association for Accessible Formats in page 24: https://www.ukaaf.org/wp-content/uploads/2020/03/Braille-Computer-Notation-PDF.pdf
As notified by @glenbuck1 on #1087",@egli will create a braille-specs PR.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1204,2022-04-15T07:43:38Z,2022-05-30T06:50:45Z,2022-05-30T06:55:43Z,MERGED,True,4,5,1,https://github.com/MarioAriasGa,Amend + symbol in en-gb-comp8.ctb,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/1204,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1204#issuecomment-1137219661,"Both + and < symbols have 236 in the same table, which is wrong. The correct for '+' is 235 which is confirmed by this document from UK Association for Accessible Formats in page 24: https://www.ukaaf.org/wp-content/uploads/2020/03/Braille-Computer-Notation-PDF.pdf
As notified by @glenbuck1 on #1087","We would like to have a reference to an official braille specification document in the table file. The document you linked to in your commit message seems appropriate for that end.

Done in 2113269",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1204,2022-04-15T07:43:38Z,2022-05-30T06:50:45Z,2022-05-30T06:55:43Z,MERGED,True,4,5,1,https://github.com/MarioAriasGa,Amend + symbol in en-gb-comp8.ctb,2,"['tables', 'needs test']",https://github.com/liblouis/liblouis/pull/1204,https://github.com/bertfrees,5,https://github.com/liblouis/liblouis/pull/1204#issuecomment-1137845335,"Both + and < symbols have 236 in the same table, which is wrong. The correct for '+' is 235 which is confirmed by this document from UK Association for Accessible Formats in page 24: https://www.ukaaf.org/wp-content/uploads/2020/03/Braille-Computer-Notation-PDF.pdf
As notified by @glenbuck1 on #1087",Thanks,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1205,2022-04-15T12:43:11Z,2022-04-26T18:06:25Z,2022-04-26T18:06:28Z,MERGED,True,52,23,2,https://github.com/bertfrees,Enable emscriptem workflow,3,['build system'],https://github.com/liblouis/liblouis/pull/1205,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1205,"Make the emscriptem workflow succeed again
Don't build build-no-tables-utf16.js because we don't publish it
Publish the JS files and the tables to the js-build repository","Make the emscriptem workflow succeed again
Don't build build-no-tables-utf16.js because we don't publish it
Publish the JS files and the tables to the js-build repository",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1206,2022-04-23T08:52:41Z,2022-04-27T06:53:37Z,2022-04-27T06:53:37Z,MERGED,True,8,0,8,https://github.com/sthibaul,CI: allow manual triggers,1,['build system'],https://github.com/liblouis/liblouis/pull/1206,https://github.com/sthibaul,1,https://github.com/liblouis/liblouis/pull/1206,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1206,2022-04-23T08:52:41Z,2022-04-27T06:53:37Z,2022-04-27T06:53:37Z,MERGED,True,8,0,8,https://github.com/sthibaul,CI: allow manual triggers,1,['build system'],https://github.com/liblouis/liblouis/pull/1206,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1206#issuecomment-1108235191,,@sthibaul why do you need manual triggers?,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1206,2022-04-23T08:52:41Z,2022-04-27T06:53:37Z,2022-04-27T06:53:37Z,MERGED,True,8,0,8,https://github.com/sthibaul,CI: allow manual triggers,1,['build system'],https://github.com/liblouis/liblouis/pull/1206,https://github.com/sthibaul,3,https://github.com/liblouis/liblouis/pull/1206#issuecomment-1108265910,,To be able to test a non-master branch.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1206,2022-04-23T08:52:41Z,2022-04-27T06:53:37Z,2022-04-27T06:53:37Z,MERGED,True,8,0,8,https://github.com/sthibaul,CI: allow manual triggers,1,['build system'],https://github.com/liblouis/liblouis/pull/1206,https://github.com/egli,4,https://github.com/liblouis/liblouis/pull/1206#issuecomment-1109643531,,"This could be solved with a less restrictive branch filter.
Out of curiosity: Do you see the trigger button if you are not admin?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1206,2022-04-23T08:52:41Z,2022-04-27T06:53:37Z,2022-04-27T06:53:37Z,MERGED,True,8,0,8,https://github.com/sthibaul,CI: allow manual triggers,1,['build system'],https://github.com/liblouis/liblouis/pull/1206,https://github.com/sthibaul,5,https://github.com/liblouis/liblouis/pull/1206#issuecomment-1109665558,,"This could be solved with a less restrictive branch filter.

Yes but then conversely that would trigger on each and every push in the working branches, which we don't necessarily want, to save energy.

Out of curiosity: Do you see the trigger button if you are not admin?

No, so we don't have to fear people clicking on it and spamming the liblouis CI with results. People can only see the button in their own project.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1207,2022-04-28T16:48:11Z,,2022-05-25T10:24:01Z,OPEN,False,615,1,150,https://github.com/annastan,Adding fuzzer for lou_translateString and lou_backTranslateString,26,[],https://github.com/liblouis/liblouis/pull/1207,https://github.com/annastan,1,https://github.com/liblouis/liblouis/pull/1207,"Hi all,
We are 3 students in IT security ( @annastan, @kmamadoudram, @yocvito) and are currently working on fuzzing liblouis/espeak-ng for a school project with @sthibaul. For liblouis, we have decided to focus on translation/back-translation functions and for now, only the translation fuzzer is available but we will add the back-translation one soon. We come here to show you the work we have done and to try to improve it.
So, what have we done yet ?
Basically, we have used libfuzzer to implements fuzzing on lou_translateString and lou_backTranslateString. The fuzzer just look for an ENV variable containing the table you want to test, avoid liblouis logging and start fuzzing.
If you are already familiar with libfuzzer, then there is no other specific switch than libfuzzer ones to pass to the fuzzer. The only thing you need to care about is configuration but you can find more information on how to use the fuzzer we added in tests/fuzzing/README.md
To check that our fuzzer was actually working, we have used clang coverage and have added the related compiler flags to the liblouis directory sources in makefile.am. We were thus able to see that our fuzzer was, indeed, really reaching a lot of the source code. (more info on coverage in the README.md, currently coverage isn't working well on liblouis fuzzer)
What’s now ?
We will continue to integrate and improve the fuzzers in the next months. It's not entirely ready yet but we will continue to modify it and come back to you to highlights our changes.
Finally, to find bugs, we need relevant corpus files for each table and the good translation mode. We have built a first skeleton of what could be a fuzzer for these functions and have added some scripts to help using it. We are still working on it and will be grateful about any suggestions you could make.
Thank you.","Hi all,
We are 3 students in IT security ( @annastan, @kmamadoudram, @yocvito) and are currently working on fuzzing liblouis/espeak-ng for a school project with @sthibaul. For liblouis, we have decided to focus on translation/back-translation functions and for now, only the translation fuzzer is available but we will add the back-translation one soon. We come here to show you the work we have done and to try to improve it.
So, what have we done yet ?
Basically, we have used libfuzzer to implements fuzzing on lou_translateString and lou_backTranslateString. The fuzzer just look for an ENV variable containing the table you want to test, avoid liblouis logging and start fuzzing.
If you are already familiar with libfuzzer, then there is no other specific switch than libfuzzer ones to pass to the fuzzer. The only thing you need to care about is configuration but you can find more information on how to use the fuzzer we added in tests/fuzzing/README.md
To check that our fuzzer was actually working, we have used clang coverage and have added the related compiler flags to the liblouis directory sources in makefile.am. We were thus able to see that our fuzzer was, indeed, really reaching a lot of the source code. (more info on coverage in the README.md, currently coverage isn't working well on liblouis fuzzer)
What’s now ?
We will continue to integrate and improve the fuzzers in the next months. It's not entirely ready yet but we will continue to modify it and come back to you to highlights our changes.
Finally, to find bugs, we need relevant corpus files for each table and the good translation mode. We have built a first skeleton of what could be a fuzzer for these functions and have added some scripts to help using it. We are still working on it and will be grateful about any suggestions you could make.
Thank you.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1207,2022-04-28T16:48:11Z,,2022-05-25T10:24:01Z,OPEN,False,615,1,150,https://github.com/annastan,Adding fuzzer for lou_translateString and lou_backTranslateString,26,[],https://github.com/liblouis/liblouis/pull/1207,https://github.com/annastan,2,https://github.com/liblouis/liblouis/pull/1207#issuecomment-1112457474,"Hi all,
We are 3 students in IT security ( @annastan, @kmamadoudram, @yocvito) and are currently working on fuzzing liblouis/espeak-ng for a school project with @sthibaul. For liblouis, we have decided to focus on translation/back-translation functions and for now, only the translation fuzzer is available but we will add the back-translation one soon. We come here to show you the work we have done and to try to improve it.
So, what have we done yet ?
Basically, we have used libfuzzer to implements fuzzing on lou_translateString and lou_backTranslateString. The fuzzer just look for an ENV variable containing the table you want to test, avoid liblouis logging and start fuzzing.
If you are already familiar with libfuzzer, then there is no other specific switch than libfuzzer ones to pass to the fuzzer. The only thing you need to care about is configuration but you can find more information on how to use the fuzzer we added in tests/fuzzing/README.md
To check that our fuzzer was actually working, we have used clang coverage and have added the related compiler flags to the liblouis directory sources in makefile.am. We were thus able to see that our fuzzer was, indeed, really reaching a lot of the source code. (more info on coverage in the README.md, currently coverage isn't working well on liblouis fuzzer)
What’s now ?
We will continue to integrate and improve the fuzzers in the next months. It's not entirely ready yet but we will continue to modify it and come back to you to highlights our changes.
Finally, to find bugs, we need relevant corpus files for each table and the good translation mode. We have built a first skeleton of what could be a fuzzer for these functions and have added some scripts to help using it. We are still working on it and will be grateful about any suggestions you could make.
Thank you.",Wrong link for README.md (here is the good one tests/fuzzing/README.md),True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1207,2022-04-28T16:48:11Z,,2022-05-25T10:24:01Z,OPEN,False,615,1,150,https://github.com/annastan,Adding fuzzer for lou_translateString and lou_backTranslateString,26,[],https://github.com/liblouis/liblouis/pull/1207,https://github.com/sthibaul,3,https://github.com/liblouis/liblouis/pull/1207#issuecomment-1112569766,"Hi all,
We are 3 students in IT security ( @annastan, @kmamadoudram, @yocvito) and are currently working on fuzzing liblouis/espeak-ng for a school project with @sthibaul. For liblouis, we have decided to focus on translation/back-translation functions and for now, only the translation fuzzer is available but we will add the back-translation one soon. We come here to show you the work we have done and to try to improve it.
So, what have we done yet ?
Basically, we have used libfuzzer to implements fuzzing on lou_translateString and lou_backTranslateString. The fuzzer just look for an ENV variable containing the table you want to test, avoid liblouis logging and start fuzzing.
If you are already familiar with libfuzzer, then there is no other specific switch than libfuzzer ones to pass to the fuzzer. The only thing you need to care about is configuration but you can find more information on how to use the fuzzer we added in tests/fuzzing/README.md
To check that our fuzzer was actually working, we have used clang coverage and have added the related compiler flags to the liblouis directory sources in makefile.am. We were thus able to see that our fuzzer was, indeed, really reaching a lot of the source code. (more info on coverage in the README.md, currently coverage isn't working well on liblouis fuzzer)
What’s now ?
We will continue to integrate and improve the fuzzers in the next months. It's not entirely ready yet but we will continue to modify it and come back to you to highlights our changes.
Finally, to find bugs, we need relevant corpus files for each table and the good translation mode. We have built a first skeleton of what could be a fuzzer for these functions and have added some scripts to help using it. We are still working on it and will be grateful about any suggestions you could make.
Thank you.","See on https://github.com/yocvito/liblouis/actions, the fuzzing step timed out.  We need to have something that doesn't break in CI :)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1207,2022-04-28T16:48:11Z,,2022-05-25T10:24:01Z,OPEN,False,615,1,150,https://github.com/annastan,Adding fuzzer for lou_translateString and lou_backTranslateString,26,[],https://github.com/liblouis/liblouis/pull/1207,https://github.com/sthibaul,4,https://github.com/liblouis/liblouis/pull/1207#issuecomment-1112570940,"Hi all,
We are 3 students in IT security ( @annastan, @kmamadoudram, @yocvito) and are currently working on fuzzing liblouis/espeak-ng for a school project with @sthibaul. For liblouis, we have decided to focus on translation/back-translation functions and for now, only the translation fuzzer is available but we will add the back-translation one soon. We come here to show you the work we have done and to try to improve it.
So, what have we done yet ?
Basically, we have used libfuzzer to implements fuzzing on lou_translateString and lou_backTranslateString. The fuzzer just look for an ENV variable containing the table you want to test, avoid liblouis logging and start fuzzing.
If you are already familiar with libfuzzer, then there is no other specific switch than libfuzzer ones to pass to the fuzzer. The only thing you need to care about is configuration but you can find more information on how to use the fuzzer we added in tests/fuzzing/README.md
To check that our fuzzer was actually working, we have used clang coverage and have added the related compiler flags to the liblouis directory sources in makefile.am. We were thus able to see that our fuzzer was, indeed, really reaching a lot of the source code. (more info on coverage in the README.md, currently coverage isn't working well on liblouis fuzzer)
What’s now ?
We will continue to integrate and improve the fuzzers in the next months. It's not entirely ready yet but we will continue to modify it and come back to you to highlights our changes.
Finally, to find bugs, we need relevant corpus files for each table and the good translation mode. We have built a first skeleton of what could be a fuzzer for these functions and have added some scripts to help using it. We are still working on it and will be grateful about any suggestions you could make.
Thank you.","In your branch you have some generated files, you need to remove them",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1207,2022-04-28T16:48:11Z,,2022-05-25T10:24:01Z,OPEN,False,615,1,150,https://github.com/annastan,Adding fuzzer for lou_translateString and lou_backTranslateString,26,[],https://github.com/liblouis/liblouis/pull/1207,https://github.com/sthibaul,5,https://github.com/liblouis/liblouis/pull/1207#issuecomment-1113245433,"Hi all,
We are 3 students in IT security ( @annastan, @kmamadoudram, @yocvito) and are currently working on fuzzing liblouis/espeak-ng for a school project with @sthibaul. For liblouis, we have decided to focus on translation/back-translation functions and for now, only the translation fuzzer is available but we will add the back-translation one soon. We come here to show you the work we have done and to try to improve it.
So, what have we done yet ?
Basically, we have used libfuzzer to implements fuzzing on lou_translateString and lou_backTranslateString. The fuzzer just look for an ENV variable containing the table you want to test, avoid liblouis logging and start fuzzing.
If you are already familiar with libfuzzer, then there is no other specific switch than libfuzzer ones to pass to the fuzzer. The only thing you need to care about is configuration but you can find more information on how to use the fuzzer we added in tests/fuzzing/README.md
To check that our fuzzer was actually working, we have used clang coverage and have added the related compiler flags to the liblouis directory sources in makefile.am. We were thus able to see that our fuzzer was, indeed, really reaching a lot of the source code. (more info on coverage in the README.md, currently coverage isn't working well on liblouis fuzzer)
What’s now ?
We will continue to integrate and improve the fuzzers in the next months. It's not entirely ready yet but we will continue to modify it and come back to you to highlights our changes.
Finally, to find bugs, we need relevant corpus files for each table and the good translation mode. We have built a first skeleton of what could be a fuzzer for these functions and have added some scripts to help using it. We are still working on it and will be grateful about any suggestions you could make.
Thank you.","See on https://github.com/yocvito/liblouis/actions, the fuzzing step timed out. We need to have something that doesn't break in CI :)

You can use something like e.g. -seed=1234 -runs=20",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1207,2022-04-28T16:48:11Z,,2022-05-25T10:24:01Z,OPEN,False,615,1,150,https://github.com/annastan,Adding fuzzer for lou_translateString and lou_backTranslateString,26,[],https://github.com/liblouis/liblouis/pull/1207,https://github.com/kmamadoudram,6,https://github.com/liblouis/liblouis/pull/1207#issuecomment-1113946512,"Hi all,
We are 3 students in IT security ( @annastan, @kmamadoudram, @yocvito) and are currently working on fuzzing liblouis/espeak-ng for a school project with @sthibaul. For liblouis, we have decided to focus on translation/back-translation functions and for now, only the translation fuzzer is available but we will add the back-translation one soon. We come here to show you the work we have done and to try to improve it.
So, what have we done yet ?
Basically, we have used libfuzzer to implements fuzzing on lou_translateString and lou_backTranslateString. The fuzzer just look for an ENV variable containing the table you want to test, avoid liblouis logging and start fuzzing.
If you are already familiar with libfuzzer, then there is no other specific switch than libfuzzer ones to pass to the fuzzer. The only thing you need to care about is configuration but you can find more information on how to use the fuzzer we added in tests/fuzzing/README.md
To check that our fuzzer was actually working, we have used clang coverage and have added the related compiler flags to the liblouis directory sources in makefile.am. We were thus able to see that our fuzzer was, indeed, really reaching a lot of the source code. (more info on coverage in the README.md, currently coverage isn't working well on liblouis fuzzer)
What’s now ?
We will continue to integrate and improve the fuzzers in the next months. It's not entirely ready yet but we will continue to modify it and come back to you to highlights our changes.
Finally, to find bugs, we need relevant corpus files for each table and the good translation mode. We have built a first skeleton of what could be a fuzzer for these functions and have added some scripts to help using it. We are still working on it and will be grateful about any suggestions you could make.
Thank you.","First of all ,  thank you for your feedback.
We have taken note of all remarks and we will very soon delete all the extra files as indicated, we will also ensure that all the next commits are in English.
Regarding the link for the README, indeed we made a mistake by putting the link of the espeak one, we have just corrected by putting the correct link.
For the corpus, yes it is possible to have randomly generated input based on the YAML test data that you already have, we will implement this very soon
Unfortunately, the coverage is a clang feature and libfuzzer is for now only implemented by clang, but it could be added by gcc in the future
We have noticed the OSS fuzz integration which is fuzzing brail tables compilation, we will check soon how it really works and if it's possible to add the fuzzer to it.
Best regards",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1209,2022-05-03T09:59:11Z,2022-05-03T11:14:22Z,2022-05-03T11:14:27Z,MERGED,True,0,95,1,https://github.com/egli,Remove the Emacs liblouis-mode,1,[],https://github.com/liblouis/liblouis/pull/1209,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1209,"as it has been moved to a separate repository, see https://github.com/liblouis/liblouis-mode","as it has been moved to a separate repository, see https://github.com/liblouis/liblouis-mode",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/JakeKyle,1,https://github.com/liblouis/liblouis/pull/1211,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.","This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1126455019,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.","I have rebased the branch. The result is a single commit with the description of the pull requests added to the commit message. I have yet to rebase it onto v3.21.
The PR looks very good, but I'm going to review it a bit more in detail later and some request changes will follow.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1126670796,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.",Rebased onto latest master.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/JakeKyle,4,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1127400171,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.","@bertfrees Thank you for all your constructive comments. I will first try to contact Dipendra Manocha to see if he agrees with updates and is happy for me to make them. Interestingly he is mentioned as providing info for Duxbury table.
It may take me a few days!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/JakeKyle,5,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1127777913,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.",Sorry I've messed up my latest commits - will try to resolve,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/JakeKyle,6,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1131712930,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.",Good news I have made contact with Dipendra. I am just trying to clarify a couple of things with him...,True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/JakeKyle,7,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1132696865,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.","Dipendra agreed that there were issues with the punjabi/gurumuki tables. He said they were unvalidated plus see note below regarding upcoming changes. He is happy for me to go ahead with the PR but with a couple of adjustments. He is happy for me quote from our email conversation here:

Definitions to change:
letter \x0A02 3 (not 56) GURUMUKHI SIGN BINDI
DM: Agreed. Also change the following: letter \x0A01 56 (not 3) GURUMUKHI SIGN ADAK BINDI
letter \x0A16 46 (not 24) GURUMUKHI LETTER KHA
DM; Agreed. This was clearly a mistake.
letter \x0A59 1346 (not 46) GURUMUKHI LETTER KHHA
DM: Agreed.
letter \x0A5B 1356 (not 245) GURUMUKHI LETTER ZA
DM: agreed.
Definitions to add:
letter \x0A3C 1 # GURMUKHI SIGN NUKTA: pairin bindi
DM: This is not correct. This character is not used individually in braille. Therefore, as an individual character, we should not assign any braille code to it.
letter \x0A4D 4 # GURMUKHI SIGN VIRAMA
DM: This is fine.
Compound letters to add:
always \x0A16\x0A3C 1346 # KHA + NUKTA = KHHA (same as \x0A59)
DM: this is fine.
always \x0A1C\x0A3C 1356 # JA + NUKTA = ZA (same as \x0A5B)
DM: This is fine
always \x0A2B\x0A3C 124 # PHA + NUKTA = FA (same as \x0A5E)
DM: This is fine
always \x0A32\x0A3C 456 # LA + NUKTA = LLA (same as \x0A33)
DM: This is fine.
always \x0A38\x0A3C 146 # SA + NUKTA = SHA (same as \x0A36)
DM: This is fine.
Halant:
Halant (vowel suppressing character or Virama) should be \x0A4D not \x0A71. This affects all the ""half character"" rules and also the ""Halant"" attribute used in the ""consonent followed by vowel but not matra"" section.
DM: This is correct.
DM: Note, The above are correct as per the braille codes used today. However, Braille Council of India is making few changes in braille code and it is expected that within this year itself few changes will need to be made to Punjabi table too. We will cross that bridge when it comes.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/JakeKyle,8,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1132696970,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.","Regarding \x0A3C this is a diactritic mark only used in combination with other characters but I needed to define it as something/anything perhaps it is better as zero?
letter \x0A3C 0

Regarding the information at the top of the tables I guess I will:

add my name to the list of contributors
only a single ""updated"" date
add the computer readable metadata
keep Dipendra as the maintainer. He agreed that his email address could be updated to the one used in our recent conversation

@bertfrees Regarding the pa.yaml file, I can add explanatory information as you suggest. Is it OK to have it as a Compass Braille file even if I am not maintainer of the tables?

I asked Dipendra for official info/publications from Braille Council of India. He said it is more readily available in hard copy Braille format but he sent me some scans of print pages so I will upload these to liblouis/braille-specs.
He also agreed to let us know when the aforementioned changes to Indian Braille occur.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/bertfrees,9,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1135152416,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.","@JakeKyle Thanks for sorting it out with Dipendra.

Regarding \x0A3C this is a diactritic mark only used in combination with other characters but I needed to define it as something/anything perhaps it is better as zero?

A character definition shouldn't be needed. If I comment it out, the table still compiles, however one tests fails. It seems to be because of this rule in en-in-g1.ctb:
word . 4-256

Instead of the noback letter rule you can also have a attribute rule:
attribute letter \x0A3C


Regarding the pa.yaml file, I can add explanatory information as you suggest. Is it OK to have it as a Compass Braille file even if I am not maintainer of the tables?

Sure, no problem.

I asked Dipendra for official info/publications from Braille Council of India. He said it is more readily available in hard copy Braille format but he sent me some scans of print pages so I will upload these to liblouis/braille-specs.

Great!",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/JakeKyle,10,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1136002730,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.",@bertfrees I think that resolves everything now but let me know if not.,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1211,2022-05-12T15:02:33Z,2022-05-30T10:46:31Z,2022-05-30T10:46:31Z,MERGED,True,3099,213,8,https://github.com/JakeKyle,Tables/gurumuki,6,['tables'],https://github.com/liblouis/liblouis/pull/1211,https://github.com/bertfrees,11,https://github.com/liblouis/liblouis/pull/1211#issuecomment-1137851450,"This is to fix the problems noted in #1014.
In summary it causes the Punjabi Grade 1 table to behave the same as Duxbury Punjabi table in forward translation and more reliably than Duxbury's in back translation.
The results have been tested by Punjabi Braille proofreader from Mission to the Blind, Chennai, India.
All the changes suggested in #1014 have been made including:
letter \x0A02 from 56 to 3 GURUMUKHI SIGN BINDI
Attempts to contact original authors have been fruitless.","@JakeKyle Thanks. Everything fine now! I will merge as soon as @egli gives his approval.

Are there any changes in REAME.org

@egli There are no changes in README.org after my fixup.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1213,2022-05-18T12:21:23Z,2022-05-31T12:37:42Z,2022-05-31T12:43:27Z,MERGED,True,100,6,7,https://github.com/egli,Add a table for German grade 2 with capitalization,5,['tables'],https://github.com/liblouis/liblouis/pull/1213,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1213,"A German grade 2 table with capitalization and detailed accents. To be able to recommend it for back-translation is an other step (look at the result of the back-translation in the YAML test). It probably needs similar rules just for back-translation as @BueVest  added for de-g1-detailed.utb.
Resolves #1212","A German grade 2 table with capitalization and detailed accents. To be able to recommend it for back-translation is an other step (look at the result of the back-translation in the YAML test). It probably needs similar rules just for back-translation as @BueVest  added for de-g1-detailed.utb.
Resolves #1212",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1216,2022-05-25T11:44:25Z,2022-05-30T10:55:12Z,2022-05-30T10:55:22Z,MERGED,True,94,95,1,https://github.com/egli,Move translation context into a struct,1,"['back-translation', 'cleanup']",https://github.com/liblouis/liblouis/pull/1216,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1216,"Translation context such as whether the next char is upper case or whether we are inside an all upper case word, etc is currently stored in a number of global variables. This complicates the API of many of the functions.
This PR moves these state variables into a struct and consequently only has to pass this struct around to the functions which simplifies the calling API of said functions quite a bit.","Translation context such as whether the next char is upper case or whether we are inside an all upper case word, etc is currently stored in a number of global variables. This complicates the API of many of the functions.
This PR moves these state variables into a struct and consequently only has to pass this struct around to the functions which simplifies the calling API of said functions quite a bit.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1216,2022-05-25T11:44:25Z,2022-05-30T10:55:12Z,2022-05-30T10:55:22Z,MERGED,True,94,95,1,https://github.com/egli,Move translation context into a struct,1,"['back-translation', 'cleanup']",https://github.com/liblouis/liblouis/pull/1216,https://github.com/bertfrees,2,https://github.com/liblouis/liblouis/pull/1216#issuecomment-1137854490,"Translation context such as whether the next char is upper case or whether we are inside an all upper case word, etc is currently stored in a number of global variables. This complicates the API of many of the functions.
This PR moves these state variables into a struct and consequently only has to pass this struct around to the functions which simplifies the calling API of said functions quite a bit.","Looks okay except that I find ""TranslationContext"" a bit of a generic name.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1216,2022-05-25T11:44:25Z,2022-05-30T10:55:12Z,2022-05-30T10:55:22Z,MERGED,True,94,95,1,https://github.com/egli,Move translation context into a struct,1,"['back-translation', 'cleanup']",https://github.com/liblouis/liblouis/pull/1216,https://github.com/egli,3,https://github.com/liblouis/liblouis/pull/1216#issuecomment-1140751988,"Translation context such as whether the next char is upper case or whether we are inside an all upper case word, etc is currently stored in a number of global variables. This complicates the API of many of the functions.
This PR moves these state variables into a struct and consequently only has to pass this struct around to the functions which simplifies the calling API of said functions quite a bit.","I know naming is hard, but I thought the name was quite fitting. An other names that I can think of would be TranslationEnvironment. But TranslationContext is better IMHO. Any suggestions?",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1216,2022-05-25T11:44:25Z,2022-05-30T10:55:12Z,2022-05-30T10:55:22Z,MERGED,True,94,95,1,https://github.com/egli,Move translation context into a struct,1,"['back-translation', 'cleanup']",https://github.com/liblouis/liblouis/pull/1216,https://github.com/bertfrees,4,https://github.com/liblouis/liblouis/pull/1216#issuecomment-1140994697,"Translation context such as whether the next char is upper case or whether we are inside an all upper case word, etc is currently stored in a number of global variables. This complicates the API of many of the functions.
This PR moves these state variables into a struct and consequently only has to pass this struct around to the functions which simplifies the calling API of said functions quite a bit.","I thought it was maybe a bit generic, but it's fine.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1217,2022-05-25T16:10:14Z,2022-05-30T07:23:17Z,2022-05-30T07:23:23Z,MERGED,True,8,6,1,https://github.com/egli,Prevent an invalid memory writes in compileRule,1,['memory error'],https://github.com/liblouis/liblouis/pull/1217,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1217,"Thanks to Han Zheng for reporting it
Fixes #1214","Thanks to Han Zheng for reporting it
Fixes #1214",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1218,2022-05-25T22:03:26Z,,2022-05-25T22:11:24Z,OPEN,False,17,19,1,https://github.com/bertfrees,Remove unused function argument,1,['cleanup'],https://github.com/liblouis/liblouis/pull/1218,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1218,,,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1219,2022-05-26T11:53:50Z,2022-05-30T08:25:39Z,2022-05-30T08:25:46Z,MERGED,True,3,6,2,https://github.com/bertfrees,"Remove ""experimental"" label from meta data query API",2,[],https://github.com/liblouis/liblouis/pull/1219,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1219,fixes #1202,fixes #1202,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1220,2022-05-26T14:57:12Z,2022-06-02T12:16:10Z,2022-06-02T12:16:13Z,MERGED,True,73,253,3,https://github.com/bertfrees,Eliminate internal TranslationTableOpcode values,1,['cleanup'],https://github.com/liblouis/liblouis/pull/1220,https://github.com/bertfrees,1,https://github.com/liblouis/liblouis/pull/1220,Fixes #1170,Fixes #1170,True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1221,2022-05-28T23:28:01Z,2022-05-30T07:34:03Z,2022-05-30T07:34:12Z,MERGED,True,8,8,1,https://github.com/risicle,analyzeTable: correctly parenthesize src arg of memcpy calls,1,[],https://github.com/liblouis/liblouis/pull/1221,https://github.com/risicle,1,https://github.com/liblouis/liblouis/pull/1221,"Clang 11 on macos will fail to build 3.21.0's metadata.c otherwise, complaining:
metadata.c:537:13: error: too many arguments provided to function-like macro invocation
                                                                                                sizeof(FeatureWithLineNumber));
                                                                                                ^
/nix/store/c5jrszdq2hy3hj9rpyx3hk9gba60wd1d-Libsystem-1238.60.2/include/secure/_string.h:64:9: note: macro 'memcpy' defined here
#define memcpy(dest, src, len)                                  \
        ^
metadata.c:533:11: note: parentheses are required around macro argument containing braced initializer list
                                                                                memcpy(malloc(sizeof(FeatureWithLineNumber)),

Full build log available at https://hydra.nixos.org/log/jpjrkavb354d98lidivsxv5c8y5li2jc-liblouis-3.21.0.drv","Clang 11 on macos will fail to build 3.21.0's metadata.c otherwise, complaining:
metadata.c:537:13: error: too many arguments provided to function-like macro invocation
                                                                                                sizeof(FeatureWithLineNumber));
                                                                                                ^
/nix/store/c5jrszdq2hy3hj9rpyx3hk9gba60wd1d-Libsystem-1238.60.2/include/secure/_string.h:64:9: note: macro 'memcpy' defined here
#define memcpy(dest, src, len)                                  \
        ^
metadata.c:533:11: note: parentheses are required around macro argument containing braced initializer list
                                                                                memcpy(malloc(sizeof(FeatureWithLineNumber)),

Full build log available at https://hydra.nixos.org/log/jpjrkavb354d98lidivsxv5c8y5li2jc-liblouis-3.21.0.drv",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1222,2022-05-30T18:36:01Z,,2022-06-02T19:11:16Z,OPEN,False,707,2400,3,https://github.com/hammera,"Cleanup: change some rules, and filter duplicated testcases",2,['tables'],https://github.com/liblouis/liblouis/pull/1222,https://github.com/hammera,1,https://github.com/liblouis/liblouis/pull/1222,"Hi Chris or Bert,
Chris request after my hungarian table modifications merge I opening now the cleanup task related pull request.
Chris morning merged the extend_braille_input branch thursday state, between thursday and sunday I doed seven commits.
This is usual cleanups related works, prettify related works and only optimizations.
If before final release fit the time the last state approve and master branch push, good this (prettify words lands the master branch before release prep).
I would like keeping this feature branch with developing purpose, so future not matter if you put this branch in Liblouis repository, similar with other language table development related feature branches.
The updates is only prettify cleanups, not full important critical updates, affect only ten or fifteen founded new words with presents or backtranslated wrong the hungarian braille.
Because I don't known what the last date to do a force push operation before my pull request merging, I not doed every evening a force-push and rebase operation to not disturb you and bert the always need review related works.
I sorted the tests/braille-specs/hu-hu-g1_special_consonants.yaml file the testcase words with alphabet order in Pluma text editor (Pluma vonderful automatically sorts the testcases, and provide possibility to drop the duplicated testcase lines), and because I lot of time rebase the branch content when the master branch is changed, I removed the automatic duplicated testcases with perhaps keeped a previous merge conflicts result.
Previous merged testcase file containing 85794 testcases, filtered testcase file containing only 83981 tests without functional step back.
So, I doed now the prettify cleanups works. :-):-)
If fit the review,  approve and merge before june 7 when you publish the 3.22 release, good this, if not, we schedule the prettify cleanup the 3.23 release and keep opened this pull request with development purposes.
So, not matter if not fit now the final prettify cleanup related approve before Liblouis 3.22 release prep, if have more opened pull requests your and bert plates.
This is full acceptable, before final week the release date is a very hard week.
I noot looked yet the milestone list how many another table developers pull requests you need reviewing before june 7 the 3.22 release publication.
So, now I doed the cleanup, doed a git fetch upstream and a git rebase operation, and a force-push command.
I need looking and proof reading a not processed bigger word list tomorrow, so I don't no when need do a final rebase and force push operation before a next commit and latest merge.
Usual, because my extend_braille_input branch is a table development branch, I always use the git commit --fixup HEAD command, and if happened a branch change, I doing a git rebase -i command and a git push -f command.
This scenario not would like doing every evening, because perhaps you now need concentrate more another language pull requests before release prep.
If have more another table developers opened another language pull requests, I full understand and agree if you says me:
„Hammera, don't commit new changes the extend_braille_input branch. Wait the 3.22 release and 3.23 development cicle open."" :-):-)
Thanks the cooperate work,
Attila","Hi Chris or Bert,
Chris request after my hungarian table modifications merge I opening now the cleanup task related pull request.
Chris morning merged the extend_braille_input branch thursday state, between thursday and sunday I doed seven commits.
This is usual cleanups related works, prettify related works and only optimizations.
If before final release fit the time the last state approve and master branch push, good this (prettify words lands the master branch before release prep).
I would like keeping this feature branch with developing purpose, so future not matter if you put this branch in Liblouis repository, similar with other language table development related feature branches.
The updates is only prettify cleanups, not full important critical updates, affect only ten or fifteen founded new words with presents or backtranslated wrong the hungarian braille.
Because I don't known what the last date to do a force push operation before my pull request merging, I not doed every evening a force-push and rebase operation to not disturb you and bert the always need review related works.
I sorted the tests/braille-specs/hu-hu-g1_special_consonants.yaml file the testcase words with alphabet order in Pluma text editor (Pluma vonderful automatically sorts the testcases, and provide possibility to drop the duplicated testcase lines), and because I lot of time rebase the branch content when the master branch is changed, I removed the automatic duplicated testcases with perhaps keeped a previous merge conflicts result.
Previous merged testcase file containing 85794 testcases, filtered testcase file containing only 83981 tests without functional step back.
So, I doed now the prettify cleanups works. :-):-)
If fit the review,  approve and merge before june 7 when you publish the 3.22 release, good this, if not, we schedule the prettify cleanup the 3.23 release and keep opened this pull request with development purposes.
So, not matter if not fit now the final prettify cleanup related approve before Liblouis 3.22 release prep, if have more opened pull requests your and bert plates.
This is full acceptable, before final week the release date is a very hard week.
I noot looked yet the milestone list how many another table developers pull requests you need reviewing before june 7 the 3.22 release publication.
So, now I doed the cleanup, doed a git fetch upstream and a git rebase operation, and a force-push command.
I need looking and proof reading a not processed bigger word list tomorrow, so I don't no when need do a final rebase and force push operation before a next commit and latest merge.
Usual, because my extend_braille_input branch is a table development branch, I always use the git commit --fixup HEAD command, and if happened a branch change, I doing a git rebase -i command and a git push -f command.
This scenario not would like doing every evening, because perhaps you now need concentrate more another language pull requests before release prep.
If have more another table developers opened another language pull requests, I full understand and agree if you says me:
„Hammera, don't commit new changes the extend_braille_input branch. Wait the 3.22 release and 3.23 development cicle open."" :-):-)
Thanks the cooperate work,
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1222,2022-05-30T18:36:01Z,,2022-06-02T19:11:16Z,OPEN,False,707,2400,3,https://github.com/hammera,"Cleanup: change some rules, and filter duplicated testcases",2,['tables'],https://github.com/liblouis/liblouis/pull/1222,https://github.com/hammera,2,https://github.com/liblouis/liblouis/pull/1222#issuecomment-1142288522,"Hi Chris or Bert,
Chris request after my hungarian table modifications merge I opening now the cleanup task related pull request.
Chris morning merged the extend_braille_input branch thursday state, between thursday and sunday I doed seven commits.
This is usual cleanups related works, prettify related works and only optimizations.
If before final release fit the time the last state approve and master branch push, good this (prettify words lands the master branch before release prep).
I would like keeping this feature branch with developing purpose, so future not matter if you put this branch in Liblouis repository, similar with other language table development related feature branches.
The updates is only prettify cleanups, not full important critical updates, affect only ten or fifteen founded new words with presents or backtranslated wrong the hungarian braille.
Because I don't known what the last date to do a force push operation before my pull request merging, I not doed every evening a force-push and rebase operation to not disturb you and bert the always need review related works.
I sorted the tests/braille-specs/hu-hu-g1_special_consonants.yaml file the testcase words with alphabet order in Pluma text editor (Pluma vonderful automatically sorts the testcases, and provide possibility to drop the duplicated testcase lines), and because I lot of time rebase the branch content when the master branch is changed, I removed the automatic duplicated testcases with perhaps keeped a previous merge conflicts result.
Previous merged testcase file containing 85794 testcases, filtered testcase file containing only 83981 tests without functional step back.
So, I doed now the prettify cleanups works. :-):-)
If fit the review,  approve and merge before june 7 when you publish the 3.22 release, good this, if not, we schedule the prettify cleanup the 3.23 release and keep opened this pull request with development purposes.
So, not matter if not fit now the final prettify cleanup related approve before Liblouis 3.22 release prep, if have more opened pull requests your and bert plates.
This is full acceptable, before final week the release date is a very hard week.
I noot looked yet the milestone list how many another table developers pull requests you need reviewing before june 7 the 3.22 release publication.
So, now I doed the cleanup, doed a git fetch upstream and a git rebase operation, and a force-push command.
I need looking and proof reading a not processed bigger word list tomorrow, so I don't no when need do a final rebase and force push operation before a next commit and latest merge.
Usual, because my extend_braille_input branch is a table development branch, I always use the git commit --fixup HEAD command, and if happened a branch change, I doing a git rebase -i command and a git push -f command.
This scenario not would like doing every evening, because perhaps you now need concentrate more another language pull requests before release prep.
If have more another table developers opened another language pull requests, I full understand and agree if you says me:
„Hammera, don't commit new changes the extend_braille_input branch. Wait the 3.22 release and 3.23 development cicle open."" :-):-)
Thanks the cooperate work,
Attila","@egli, thanks the approve and the review.
Now I looks the lou_checkyaml program the very big local corpus test file results, the forward and backward translation quality accuracy percentage level is excellent, this result is positive surprised me. :-):-)
The determined 3.22 hungarian table milestone purpose is implemented, this is the final testing and cleanup step the 3.22 milestone.
The local corpus test database containing 1732929 collected words. If I remember right the yaml tester program founded only perhaps possible 823 failures from the big corpus test file, with manual me need me verify the test result before the final push and cleanup result merge.
Attila",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1224,2022-06-01T09:01:20Z,,2022-06-02T14:22:47Z,OPEN,False,250,246,2,https://github.com/egli,Enable xfail for only forward or backward tests,1,[],https://github.com/liblouis/liblouis/pull/1224,https://github.com/egli,1,https://github.com/liblouis/liblouis/pull/1224,"This PR fixes #1223
The first commit moves the handling of tests for both directions to lou_checkyaml. That way we can check the individual results for either the forward or backward translation. Ultimately (when supported in the YAML reader) this will allow us mark tests with xfail where only forward or backward translation fails.
This commit just lays the ground work by doing the forward and backward tests individually.
Of course now a lot of tests have unexpected passes where only one of the two directions fail and the other one passes.
The next step would be to enable support for xfail-forward and xfail-backward (or something along that line) in the YAML reader and then ""fixing"" the tests.
Probably documentation needs to be adapted too.
It appears that the test suite is slower now. I suspect that could be because lou_checkyaml is the driver now and more tests data is copied into the test suite. But that is just a hunch.
Ah, and some sanitizer tests trigger now. Need to look into that.
TODO

 enhance lou_checkyaml to support xfail-forward (or something similar)
 Fix tests cases
 Fix documentation
 Fix sanitizer problems
 Move constants to the right places (e.g. DIRECTION_BOTH) to the right places","This PR fixes #1223
The first commit moves the handling of tests for both directions to lou_checkyaml. That way we can check the individual results for either the forward or backward translation. Ultimately (when supported in the YAML reader) this will allow us mark tests with xfail where only forward or backward translation fails.
This commit just lays the ground work by doing the forward and backward tests individually.
Of course now a lot of tests have unexpected passes where only one of the two directions fail and the other one passes.
The next step would be to enable support for xfail-forward and xfail-backward (or something along that line) in the YAML reader and then ""fixing"" the tests.
Probably documentation needs to be adapted too.
It appears that the test suite is slower now. I suspect that could be because lou_checkyaml is the driver now and more tests data is copied into the test suite. But that is just a hunch.
Ah, and some sanitizer tests trigger now. Need to look into that.
TODO

 enhance lou_checkyaml to support xfail-forward (or something similar)
 Fix tests cases
 Fix documentation
 Fix sanitizer problems
 Move constants to the right places (e.g. DIRECTION_BOTH) to the right places",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1224,2022-06-01T09:01:20Z,,2022-06-02T14:22:47Z,OPEN,False,250,246,2,https://github.com/egli,Enable xfail for only forward or backward tests,1,[],https://github.com/liblouis/liblouis/pull/1224,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1224#issuecomment-1144926146,"This PR fixes #1223
The first commit moves the handling of tests for both directions to lou_checkyaml. That way we can check the individual results for either the forward or backward translation. Ultimately (when supported in the YAML reader) this will allow us mark tests with xfail where only forward or backward translation fails.
This commit just lays the ground work by doing the forward and backward tests individually.
Of course now a lot of tests have unexpected passes where only one of the two directions fail and the other one passes.
The next step would be to enable support for xfail-forward and xfail-backward (or something along that line) in the YAML reader and then ""fixing"" the tests.
Probably documentation needs to be adapted too.
It appears that the test suite is slower now. I suspect that could be because lou_checkyaml is the driver now and more tests data is copied into the test suite. But that is just a hunch.
Ah, and some sanitizer tests trigger now. Need to look into that.
TODO

 enhance lou_checkyaml to support xfail-forward (or something similar)
 Fix tests cases
 Fix documentation
 Fix sanitizer problems
 Move constants to the right places (e.g. DIRECTION_BOTH) to the right places","How do we mark a test as failing but only when translating forward?
- [""1"", ""⠼⠁"", {xfail-forward: true}]
- [""1"", ""⠼⠁"", {xfail: {forward:true}}]
The first solution is straight-forward and easy to implement (in the parser). However it has a few semantic problems: What does it mean if a test defines both xfail: and xfail-forward:?
- [""1"", ""⠼⠁"", {xfail: true, xfail-forward: true}]
The second (nested version) would prevent this situation all together.
So I guess we're aiming for the nested version, i.e.
- [""1"", ""⠼⠁"", {xfail: true}]
- [""2"", ""⠼⠃"", {xfail: {forward:true}}]
xfail: can be boolean, a string or a map",True,{'THUMBS_UP': ['https://github.com/bertfrees']}
liblouis/liblouis,https://github.com/liblouis/liblouis,1225,2022-06-01T11:14:04Z,,2022-06-02T11:31:39Z,OPEN,False,182,150,5,https://github.com/Futyn-Maker,Minor improvements to the Russian braille table,7,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/1225,https://github.com/Futyn-Maker,1,https://github.com/liblouis/liblouis/pull/1225,"Hello!
Here're minor, but quite important improvements to ru-litbrl.ctb that I'd like them to be included in 3.22.
Firstly, I've decided to include ru-unicode.dis in ru-litbrl.ctb by default. The problem was that many developers complain on using virtual dots in Cyrillic tables, and they had to make workarounds for working with this tables. Now ru-litbrl.ctb and other Russian-based-tables returns Unicode Braille by default. Distinguishes between Cyrillic and Latin letters still can be established by using ru-letters.dis as the first display table.
Of course I know about ucbrl mode, but quite few developers seem to use it, unfortunately.
Secondly, I've added two missed French letters.
A news entry will come soon.","Hello!
Here're minor, but quite important improvements to ru-litbrl.ctb that I'd like them to be included in 3.22.
Firstly, I've decided to include ru-unicode.dis in ru-litbrl.ctb by default. The problem was that many developers complain on using virtual dots in Cyrillic tables, and they had to make workarounds for working with this tables. Now ru-litbrl.ctb and other Russian-based-tables returns Unicode Braille by default. Distinguishes between Cyrillic and Latin letters still can be established by using ru-letters.dis as the first display table.
Of course I know about ucbrl mode, but quite few developers seem to use it, unfortunately.
Secondly, I've added two missed French letters.
A news entry will come soon.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1225,2022-06-01T11:14:04Z,,2022-06-02T11:31:39Z,OPEN,False,182,150,5,https://github.com/Futyn-Maker,Minor improvements to the Russian braille table,7,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/1225,https://github.com/egli,2,https://github.com/liblouis/liblouis/pull/1225#issuecomment-1143486593,"Hello!
Here're minor, but quite important improvements to ru-litbrl.ctb that I'd like them to be included in 3.22.
Firstly, I've decided to include ru-unicode.dis in ru-litbrl.ctb by default. The problem was that many developers complain on using virtual dots in Cyrillic tables, and they had to make workarounds for working with this tables. Now ru-litbrl.ctb and other Russian-based-tables returns Unicode Braille by default. Distinguishes between Cyrillic and Latin letters still can be established by using ru-letters.dis as the first display table.
Of course I know about ucbrl mode, but quite few developers seem to use it, unfortunately.
Secondly, I've added two missed French letters.
A news entry will come soon.","@Futyn-Maker thanks for the PR. Can you run make check on it and fix the problem in the tests?
FAIL: braille-specs/ru
======================

Tables have not been indexed yet. Indexing LOUIS_TABLEPATH.
Best match: /home/runner/work/liblouis/liblouis/tables/ru.ctb (28)
Best match: /home/runner/work/liblouis/liblouis/tables/ru-litbrl-detailed.utb (59)
Best match: /home/runner/work/liblouis/liblouis/tables/ru-litbrl.ctb (49)
Best match: /home/runner/work/liblouis/liblouis/tables/ru-ru-g1.ctb (48)
Best match: /home/runner/work/liblouis/liblouis/tables/ru-litbrl-detailed.utb (59)
Input:    'Для работы таблицы необходим компонент Liblouis.'
Expected: '⠘DL$ RABOT! TABLIC! NEOBHODIM KOMPONENT ⠨liblouis.' (length 50)
Received: '⠘DL$⠀RABOT!⠀TABLIC!⠀NEOBHODIM⠀KOMPONENT⠀⠨liblouis⠲' (length 50)
Diff:     Expected ' ' but received '⠀' in index 4
lou_checkyaml:./braille-specs/ru.yaml:353: Failure
Table: /home/runner/work/liblouis/liblouis/tables/ru-litbrl-detailed.utb
Display table: ru-letters.dis,ru-litbrl.ctb

Best match: /home/runner/work/liblouis/liblouis/tables/ru-litbrl-detailed.utb (59)
FAILURE (123 tests, 1 failure)
FAIL braille-specs/ru.yaml (exit status: 1)",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1225,2022-06-01T11:14:04Z,,2022-06-02T11:31:39Z,OPEN,False,182,150,5,https://github.com/Futyn-Maker,Minor improvements to the Russian braille table,7,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/1225,https://github.com/bertfrees,3,https://github.com/liblouis/liblouis/pull/1225#issuecomment-1143497755,"Hello!
Here're minor, but quite important improvements to ru-litbrl.ctb that I'd like them to be included in 3.22.
Firstly, I've decided to include ru-unicode.dis in ru-litbrl.ctb by default. The problem was that many developers complain on using virtual dots in Cyrillic tables, and they had to make workarounds for working with this tables. Now ru-litbrl.ctb and other Russian-based-tables returns Unicode Braille by default. Distinguishes between Cyrillic and Latin letters still can be established by using ru-letters.dis as the first display table.
Of course I know about ucbrl mode, but quite few developers seem to use it, unfortunately.
Secondly, I've added two missed French letters.
A news entry will come soon.","It's hard to see what actually changed because you moved around a lot of rules. It would have been better to do the refactoring in one commit, and the actual change (in behavior) in a second commit. (Just keep it in mind for next time.) Also I'd like to see a new test for the change please.

A news entry will come soon.

Thanks.",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1225,2022-06-01T11:14:04Z,,2022-06-02T11:31:39Z,OPEN,False,182,150,5,https://github.com/Futyn-Maker,Minor improvements to the Russian braille table,7,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/1225,https://github.com/Futyn-Maker,4,https://github.com/liblouis/liblouis/pull/1225#issuecomment-1144037577,"Hello!
Here're minor, but quite important improvements to ru-litbrl.ctb that I'd like them to be included in 3.22.
Firstly, I've decided to include ru-unicode.dis in ru-litbrl.ctb by default. The problem was that many developers complain on using virtual dots in Cyrillic tables, and they had to make workarounds for working with this tables. Now ru-litbrl.ctb and other Russian-based-tables returns Unicode Braille by default. Distinguishes between Cyrillic and Latin letters still can be established by using ru-letters.dis as the first display table.
Of course I know about ucbrl mode, but quite few developers seem to use it, unfortunately.
Secondly, I've added two missed French letters.
A news entry will come soon.","@egli Last commit should resolve test failing. Now, when Braille Unicode is used by default, I've manually added display \s 0 to ru-letters.dis",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1225,2022-06-01T11:14:04Z,,2022-06-02T11:31:39Z,OPEN,False,182,150,5,https://github.com/Futyn-Maker,Minor improvements to the Russian braille table,7,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/1225,https://github.com/Futyn-Maker,5,https://github.com/liblouis/liblouis/pull/1225#issuecomment-1144072680,"Hello!
Here're minor, but quite important improvements to ru-litbrl.ctb that I'd like them to be included in 3.22.
Firstly, I've decided to include ru-unicode.dis in ru-litbrl.ctb by default. The problem was that many developers complain on using virtual dots in Cyrillic tables, and they had to make workarounds for working with this tables. Now ru-litbrl.ctb and other Russian-based-tables returns Unicode Braille by default. Distinguishes between Cyrillic and Latin letters still can be established by using ru-letters.dis as the first display table.
Of course I know about ucbrl mode, but quite few developers seem to use it, unfortunately.
Secondly, I've added two missed French letters.
A news entry will come soon.","HM, no, I've noticed it's still being failure because of . (256). It seems I didn't take into account some things when I included ru-unicode.dis...",True,{}
liblouis/liblouis,https://github.com/liblouis/liblouis,1225,2022-06-01T11:14:04Z,,2022-06-02T11:31:39Z,OPEN,False,182,150,5,https://github.com/Futyn-Maker,Minor improvements to the Russian braille table,7,"['tables', 'needs fixup']",https://github.com/liblouis/liblouis/pull/1225,https://github.com/Futyn-Maker,6,https://github.com/liblouis/liblouis/pull/1225#issuecomment-1144113237,"Hello!
Here're minor, but quite important improvements to ru-litbrl.ctb that I'd like them to be included in 3.22.
Firstly, I've decided to include ru-unicode.dis in ru-litbrl.ctb by default. The problem was that many developers complain on using virtual dots in Cyrillic tables, and they had to make workarounds for working with this tables. Now ru-litbrl.ctb and other Russian-based-tables returns Unicode Braille by default. Distinguishes between Cyrillic and Latin letters still can be established by using ru-letters.dis as the first display table.
Of course I know about ucbrl mode, but quite few developers seem to use it, unfortunately.
Secondly, I've added two missed French letters.
A news entry will come soon.",I believe it works and is ready now.,True,{}
