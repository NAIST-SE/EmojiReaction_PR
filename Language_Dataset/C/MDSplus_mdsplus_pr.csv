MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,408,2016-03-08T20:17:52Z,2016-03-08T20:45:32Z,2016-03-14T12:13:25Z,MERGED,True,1,2,1,https://github.com/tfredian,Fix typo in treenode.py referencing _tdishr instead of _treeshr for T…,1,[],https://github.com/MDSplus/mdsplus/pull/408,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/408,…reeBeginTimestampedSegment,…reeBeginTimestampedSegment,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,409,2016-03-10T12:53:46Z,2016-03-11T13:01:49Z,2016-03-14T12:13:24Z,MERGED,True,1,16,3,https://github.com/GabrieleManduchi,Fix MARTE_DEVICE deviceButtons,2,[],https://github.com/MDSplus/mdsplus/pull/409,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/409,More info on device apply error,More info on device apply error,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,409,2016-03-10T12:53:46Z,2016-03-11T13:01:49Z,2016-03-14T12:13:24Z,MERGED,True,1,16,3,https://github.com/GabrieleManduchi,Fix MARTE_DEVICE deviceButtons,2,[],https://github.com/MDSplus/mdsplus/pull/409,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/409#issuecomment-194835988,More info on device apply error,"Gabriele, there was an error in the java if you didn't notice the error from the pull-request-test:
DeviceComponent.java:140: error: fullpath has private access in NodeInfo
System.out.println(""at node: "" + subtree.getInfo(nidData, Tree.context).fullpath);",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,409,2016-03-10T12:53:46Z,2016-03-11T13:01:49Z,2016-03-14T12:13:24Z,MERGED,True,1,16,3,https://github.com/GabrieleManduchi,Fix MARTE_DEVICE deviceButtons,2,[],https://github.com/MDSplus/mdsplus/pull/409,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/409#issuecomment-194846842,More info on device apply error,Now it should compile...,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,410,2016-03-10T16:25:17Z,2016-04-01T12:40:52Z,2017-03-15T11:47:47Z,MERGED,True,34,19,2,https://github.com/zack-vii,jTraverser fixed NullPointerException,1,[],https://github.com/MDSplus/mdsplus/pull/410,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/410,"fixed NullPointerException by handling the value of Tree.curr_node
using getters and setters for a better control and sync selected
TreeNode with curr_node defaulting to TOP if old ref becomes invalid","fixed NullPointerException by handling the value of Tree.curr_node
using getters and setters for a better control and sync selected
TreeNode with curr_node defaulting to TOP if old ref becomes invalid",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,410,2016-03-10T16:25:17Z,2016-04-01T12:40:52Z,2017-03-15T11:47:47Z,MERGED,True,34,19,2,https://github.com/zack-vii,jTraverser fixed NullPointerException,1,[],https://github.com/MDSplus/mdsplus/pull/410,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/410#issuecomment-195345039,"fixed NullPointerException by handling the value of Tree.curr_node
using getters and setters for a better control and sync selected
TreeNode with curr_node defaulting to TOP if old ref becomes invalid","Hi Gab, would you mind testing this patch. It should be an improvement in many ways but also should fix the nullpointerexception",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,410,2016-03-10T16:25:17Z,2016-04-01T12:40:52Z,2017-03-15T11:47:47Z,MERGED,True,34,19,2,https://github.com/zack-vii,jTraverser fixed NullPointerException,1,[],https://github.com/MDSplus/mdsplus/pull/410,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/410#issuecomment-195357156,"fixed NullPointerException by handling the value of Tree.curr_node
using getters and setters for a better control and sync selected
TreeNode with curr_node defaulting to TOP if old ref becomes invalid","Hi Timo,
I will check it in a couple of days.
                 Gabriele

On 11/03/2016 13:13, zack-vii wrote:

Hi Gab, would you mind testing this patch. It should be an improvement
in many ways but also should fix the nullpointerexception
—
Reply to this email directly or view it on GitHub
#410 (comment).


Gabriele Manduchi
Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,410,2016-03-10T16:25:17Z,2016-04-01T12:40:52Z,2017-03-15T11:47:47Z,MERGED,True,34,19,2,https://github.com/zack-vii,jTraverser fixed NullPointerException,1,[],https://github.com/MDSplus/mdsplus/pull/410,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/410#issuecomment-196367380,"fixed NullPointerException by handling the value of Tree.curr_node
using getters and setters for a better control and sync selected
TreeNode with curr_node defaulting to TOP if old ref becomes invalid","Hi Timo,
did you report it on alpha? I got a fresh alpha but I still get the
NullPointerException selecting as first action Setupdevice over a
device. (After clicking on any node, everthing works).
                                 Gabriele

On 11/03/2016 13:13, zack-vii wrote:

Hi Gab, would you mind testing this patch. It should be an improvement
in many ways but also should fix the nullpointerexception
—
Reply to this email directly or view it on GitHub
#410 (comment).


Gabriele Manduchi
Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,410,2016-03-10T16:25:17Z,2016-04-01T12:40:52Z,2017-03-15T11:47:47Z,MERGED,True,34,19,2,https://github.com/zack-vii,jTraverser fixed NullPointerException,1,[],https://github.com/MDSplus/mdsplus/pull/410,https://github.com/MDSplusBuilder,5,https://github.com/MDSplus/mdsplus/pull/410#issuecomment-196370228,"fixed NullPointerException by handling the value of Tree.curr_node
using getters and setters for a better control and sync selected
TreeNode with curr_node defaulting to TOP if old ref becomes invalid","Gabriele,
 You posted this comment on the very pull request that is supposed 

to fix the problem! It's a pull request and therefore by definition not
in alpha! If want to test it follow the instructions found if you click
on the view ""command line instruction"" on the pull request web page.
git checkout -b zack-vii-aa_jtraverser alpha
git pull git://github.com/zack-vii/mdsplus.git aa_jtraverser
-tom
On 3/14/2016 11:26 AM, GabrieleManduchi wrote:

Hi Timo,
did you report it on alpha? I got a fresh alpha but I still get the
NullPointerException selecting as first action Setupdevice over a
device. (After clicking on any node, everthing works).
Gabriele
On 11/03/2016 13:13, zack-vii wrote:

Hi Gab, would you mind testing this patch. It should be an improvement
in many ways but also should fix the nullpointerexception
—
Reply to this email directly or view it on GitHub
#410 (comment).


Gabriele Manduchi
Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it
—
Reply to this email directly or view it on GitHub
#410 (comment).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,410,2016-03-10T16:25:17Z,2016-04-01T12:40:52Z,2017-03-15T11:47:47Z,MERGED,True,34,19,2,https://github.com/zack-vii,jTraverser fixed NullPointerException,1,[],https://github.com/MDSplus/mdsplus/pull/410,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/410#issuecomment-196388371,"fixed NullPointerException by handling the value of Tree.curr_node
using getters and setters for a better control and sync selected
TreeNode with curr_node defaulting to TOP if old ref becomes invalid","Hi Timo,
ok it works now!  Shall I merge?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,410,2016-03-10T16:25:17Z,2016-04-01T12:40:52Z,2017-03-15T11:47:47Z,MERGED,True,34,19,2,https://github.com/zack-vii,jTraverser fixed NullPointerException,1,[],https://github.com/MDSplus/mdsplus/pull/410,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/410#issuecomment-204347979,"fixed NullPointerException by handling the value of Tree.curr_node
using getters and setters for a better control and sync selected
TreeNode with curr_node defaulting to TOP if old ref becomes invalid",it can be merged .. the test failure seems to be a problem with jenkins,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,411,2016-03-11T13:32:20Z,2016-03-22T20:53:17Z,2016-05-03T15:09:46Z,MERGED,True,6,1,1,https://github.com/tfredian,Fix the repo rpm to only remove the signing key if the repo is being …,4,[],https://github.com/MDSplus/mdsplus/pull/411,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/411,…removed and not if it is just being updated.,…removed and not if it is just being updated.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,412,2016-03-15T10:40:30Z,2016-03-15T10:44:25Z,2016-05-24T06:49:17Z,MERGED,True,1,0,1,https://github.com/AndreaRigoni,add missing MdsStreamingDataprovider.java from Makefile.am,1,[],https://github.com/MDSplus/mdsplus/pull/412,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/412,adds missing java source to Makefile.in,adds missing java source to Makefile.in,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,413,2016-03-15T15:14:53Z,2016-03-15T16:29:23Z,2016-03-15T16:29:23Z,CLOSED,False,286,33,36,https://github.com/AndreaRigoni,adds check for JAVA_HOME eventually set JDK_DIR to JAVA_HOME,1,[],https://github.com/MDSplus/mdsplus/pull/413,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/413,"This adds a m4 macro that looks for JAVA_HOME in envs .. JAVA_HOME is the standard variable pointing to the JDK directory installed .. if it doesn't find JAVA_HOME set it test the path of the javac executable.
the following are the default java variable that are usually defined:

JAVA_HOME: must point to installation directory of JDK.
JRE_HOME: must point to installation directory of JRE.
CLASSPATH: contains libraries path which JVM will look for.","This adds a m4 macro that looks for JAVA_HOME in envs .. JAVA_HOME is the standard variable pointing to the JDK directory installed .. if it doesn't find JAVA_HOME set it test the path of the javac executable.
the following are the default java variable that are usually defined:

JAVA_HOME: must point to installation directory of JDK.
JRE_HOME: must point to installation directory of JRE.
CLASSPATH: contains libraries path which JVM will look for.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,413,2016-03-15T15:14:53Z,2016-03-15T16:29:23Z,2016-03-15T16:29:23Z,CLOSED,False,286,33,36,https://github.com/AndreaRigoni,adds check for JAVA_HOME eventually set JDK_DIR to JAVA_HOME,1,[],https://github.com/MDSplus/mdsplus/pull/413,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/413#issuecomment-196908387,"This adds a m4 macro that looks for JAVA_HOME in envs .. JAVA_HOME is the standard variable pointing to the JDK directory installed .. if it doesn't find JAVA_HOME set it test the path of the javac executable.
the following are the default java variable that are usually defined:

JAVA_HOME: must point to installation directory of JDK.
JRE_HOME: must point to installation directory of JRE.
CLASSPATH: contains libraries path which JVM will look for.",Not working everywhere ..,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,414,2016-03-15T17:33:17Z,2016-03-15T17:55:48Z,2016-04-27T09:22:17Z,MERGED,True,402,33,36,https://github.com/AndreaRigoni,Find java home,3,[],https://github.com/MDSplus/mdsplus/pull/414,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/414,This adds a m4 macro that looks for JAVA_HOME in envs .. JAVA_HOME is the standard variable pointing to the JDK directory installed .. if it doesn't find JAVA_HOME set it test the path of the javac executable.,This adds a m4 macro that looks for JAVA_HOME in envs .. JAVA_HOME is the standard variable pointing to the JDK directory installed .. if it doesn't find JAVA_HOME set it test the path of the javac executable.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,415,2016-03-15T20:38:08Z,2016-03-15T21:13:17Z,2016-05-03T15:09:36Z,MERGED,True,200,46,5,https://github.com/joshStillerman,acq devices (and python devices in general) need to raise errors that actmon can display,3,[],https://github.com/MDSplus/mdsplus/pull/415,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/415,"When actions are dispatched if the error does not have a 'status' (ours do, but in general Execptions do not)
PyDoMethod.py sets the status to zero.
when actmon notices that a dispatched action has failed it trys to make a string from the action's status,
which is an integer filled in with the returned status from TreeDoMethod.
So acq.py was raising errors from Non MDSplus things, which were being displayed as 0 - NO MESSAGE For code 0
Now acq.py raises errors which have MDSplus status and strings so ACTMON should be more informative.","When actions are dispatched if the error does not have a 'status' (ours do, but in general Execptions do not)
PyDoMethod.py sets the status to zero.
when actmon notices that a dispatched action has failed it trys to make a string from the action's status,
which is an integer filled in with the returned status from TreeDoMethod.
So acq.py was raising errors from Non MDSplus things, which were being displayed as 0 - NO MESSAGE For code 0
Now acq.py raises errors which have MDSplus status and strings so ACTMON should be more informative.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,416,2016-03-17T12:40:16Z,2016-03-17T14:15:17Z,2016-03-17T14:15:21Z,MERGED,True,8,6,1,https://github.com/tfredian,Change TreeNode.getNodeWild to set default to node and use wildcard s…,1,[],https://github.com/MDSplus/mdsplus/pull/416,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/416,…pec as provided. Also support usage selection.,…pec as provided. Also support usage selection.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,418,2016-03-17T14:24:28Z,2016-03-17T14:52:23Z,2016-09-01T12:50:59Z,MERGED,True,18,9,1,https://github.com/joshStillerman,do not raise generic errors from device methods - actmon can not disp…,1,[],https://github.com/MDSplus/mdsplus/pull/418,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/418,…lay them,…lay them,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,420,2016-03-18T15:07:34Z,2016-03-22T19:55:07Z,2016-03-22T19:55:15Z,MERGED,True,40,14,4,https://github.com/tfredian,Add getenv and setenv to MDSplus module and use it for tests. os.envi…,2,[],https://github.com/MDSplus/mdsplus/pull/420,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/420,…ron does not sync with C environment variables on Windows.,…ron does not sync with C environment variables on Windows.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,421,2016-03-18T16:07:48Z,2016-03-18T18:48:12Z,2016-03-18T18:48:12Z,MERGED,True,2,2,1,https://github.com/GabrieleManduchi,Fix wrong memory size for time context limits,2,[],https://github.com/MDSplus/mdsplus/pull/421,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/421,This was a subtle bug that intermittently prevented correct jScope zooms for large signals,This was a subtle bug that intermittently prevented correct jScope zooms for large signals,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,422,2016-03-18T17:35:32Z,2016-03-18T18:46:07Z,2016-05-03T15:09:38Z,MERGED,True,23,9,1,https://github.com/tfredian,Check for package already on pypi before attempting to build and load,1,[],https://github.com/MDSplus/mdsplus/pull/422,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/422,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,423,2016-03-22T11:36:27Z,2016-03-22T11:39:44Z,2016-03-22T11:39:44Z,MERGED,True,219,93,4,https://github.com/GabrieleManduchi,Dev gm,3,[],https://github.com/MDSplus/mdsplus/pull/423,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/423,Update HM SPECTRO TDI Device,Update HM SPECTRO TDI Device,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,424,2016-03-22T12:49:15Z,2016-03-22T13:34:47Z,2016-05-03T15:09:43Z,MERGED,True,8,0,1,https://github.com/tfredian,Add with statement support to Connection,1,[],https://github.com/MDSplus/mdsplus/pull/424,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/424,"Supports the following syntax:
with MDSplus.Connection('host') as c:
ans=c.get('42')
The connection is opened just for the execution of the with block and then automatically closed.","Supports the following syntax:
with MDSplus.Connection('host') as c:
ans=c.get('42')
The connection is opened just for the execution of the with block and then automatically closed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,425,2016-03-22T12:49:51Z,2016-03-22T13:34:32Z,2016-03-22T19:02:29Z,MERGED,True,8,0,1,https://github.com/tfredian,Add with statement support to Connection,1,[],https://github.com/MDSplus/mdsplus/pull/425,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/425,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,425,2016-03-22T12:49:51Z,2016-03-22T13:34:32Z,2016-03-22T19:02:29Z,MERGED,True,8,0,1,https://github.com/tfredian,Add with statement support to Connection,1,[],https://github.com/MDSplus/mdsplus/pull/425,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/425#issuecomment-199796526,,"Provides:
with MDSplus.Connection as c:
ans=c.get('42')
to close connection after with block.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,426,2016-03-22T18:32:11Z,2016-03-22T19:00:39Z,2016-03-22T19:02:14Z,MERGED,True,13,5,1,https://github.com/tfredian,Fix python package removal,1,[],https://github.com/MDSplus/mdsplus/pull/426,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/426,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,427,2016-03-24T17:59:03Z,2016-03-25T08:01:35Z,2016-05-03T15:09:49Z,MERGED,True,148,0,2,https://github.com/tfredian,Add TreeGetSegmentTimesXd,1,[],https://github.com/MDSplus/mdsplus/pull/427,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/427,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/428,Fix some middes updates for signals with absolute times,Fix some middes updates for signals with absolute times,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203879323,Fix some middes updates for signals with absolute times,This merge is a mess due to the changes in 27db66a. Is there a chance to clean up this merge to its essential changes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203889087,Fix some middes updates for signals with absolute times,"Hi
??????
     I did not make any push directly.....only a pull request 

yesterday with only the right files changed.......    what is happening???
                                         Gabriele

On 31/03/2016 13:05, zack-vii wrote:

This merge is a mess due to the changes in 27db66a
27db66a.
Is there a chance to clean up this merge to its essential changes
—
You are receiving this because you modified the open/close state.
Reply to this email directly or view it on GitHub
#428 (comment)


Gabriele Manduchi
Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203908562,Fix some middes updates for signals with absolute times,"also it should replace """" with ""\"" i.e. ->
recommend to revert this merge and redo a clean one",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203911078,Fix some middes updates for signals with absolute times,"The changes in MdsDataProvider.java simplify to:
        public SimpleWaveData(String in_y, String experiment, long shot)
        {
            this(in_y,null,experiment,shot);
        }

        public SimpleWaveData(String in_y, String in_x, String experiment, long shot)
        {
            this.wd_experiment = experiment;
            this.wd_shot = shot;
            if(checkForAsynchRequest(in_y))
            {
                this.in_y = ""[]"";
                this.in_x = ""[]"";
             }
            else
            {
                this.in_y = in_y;
                this.in_x = in_x;
            }
            v_idx = var_idx;
            var_idx += 2;
            if(segmentMode == SEGMENTED_UNKNOWN)
            {
                Vector args = new Vector();
                String fixedY = in_y.replaceAll(""\\\\"", ""\\\\\\\\"");
                args.addElement(new Descriptor(null, fixedY));
                try {
                    byte[] retData = GetByteArray(""byte(MdsMisc->IsSegmented($))"", args);                              
                    if(retData[0] > 0)
                        segmentMode = SEGMENTED_YES;
                    else
                        segmentMode = SEGMENTED_NO;

                }catch(Exception exc)
                {
                    error = null;
                    segmentMode = SEGMENTED_UNKNOWN;
                }
            }
        }",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203916134,Fix some middes updates for signals with absolute times,"I confess  my ignorance.....I changed only a couple of lines in those
files, and followed the usual procedure I really don't know why git
reports such a huge change.
Tom, any advise?
         Gabriele

On 31/03/2016 14:30, zack-vii wrote:

also it should replace """" with """" i.e. ->
recommend to revert this merge and redo a clean one
—
You are receiving this because you modified the open/close state.
Reply to this email directly or view it on GitHub
#428 (comment)


Gabriele Manduchi
Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203919386,Fix some middes updates for signals with absolute times,"Tom may revert the change but I fear that the next pull request will
present the same issue, despite the fact that only few lines have been
changed.
On 31/03/2016 14:35, zack-vii wrote:

The changes in MdsDataProvider.java simplify to:
     public  SimpleWaveData(String  in_y,String  experiment,long  shot)
     {
         this(in_y,null,experiment,shot);
     }

     public  SimpleWaveData(String  in_y,String  in_x,String  experiment,long  shot)
     {
         this.wd_experiment=  experiment;
         this.wd_shot=  shot;
         if(checkForAsynchRequest(in_y))
         {
             this.in_y=  ""[]"";
             this.in_x=  ""[]"";
          }
         else
         {
             this.in_y=  in_y;
             this.in_x=  in_x;
         }
         v_idx=  var_idx;
         var_idx+=  2;
         if(segmentMode==  SEGMENTED_UNKNOWN)
         {
             Vector  args=  new  Vector();
             String  fixedY=  in_y;
             fixedY.replaceAll(""\\"",""\\\\"");
             args.addElement(new  Descriptor(null, fixedY));
             try  {
                 byte[] retData=  GetByteArray(""byte(MdsMisc->IsSegmented($))"", args);
                 if(retData[0]>  0)
                     segmentMode=  SEGMENTED_YES;
                 else
                     segmentMode=  SEGMENTED_NO;

             }catch(Exception  exc)
             {
                 error=  null;
                 segmentMode=  SEGMENTED_UNKNOWN;
             }
         }
     }

—
You are receiving this because you modified the open/close state.
Reply to this email directly or view it on GitHub
#428 (comment)


Gabriele Manduchi
Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203920178,Fix some middes updates for signals with absolute times,that's alright. GitHub does this sometimes e.g when updating the pull request to the latest head. I usually check the final changelog before I merge and force push a clean rebased version of the committed branch in case the current merge got messed up.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203922278,Fix some middes updates for signals with absolute times,"Ok, I let Tom do it then I will make again a pull request.
On 31/03/2016 14:52, zack-vii wrote:

that's alright. GitHub does this sometimes e.g when updating the pull
request to the latest head. I usually check the final changelog before
I merge and force push a clean rebased version of the committed branch
in case the current merge got messed up.
—
You are receiving this because you modified the open/close state.
Reply to this email directly or view it on GitHub
#428 (comment)


Gabriele Manduchi
Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203922410,Fix some middes updates for signals with absolute times,"I that case your branch probably needs to be rebased to the latest head (after it has been cleaned up) or you should clean it up manually using
git rebase -i <sha-hash>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,428,2016-03-25T13:29:11Z,2016-03-25T14:29:56Z,2016-03-31T13:13:42Z,MERGED,True,6693,6675,3,https://github.com/GabrieleManduchi,Dev gm,5,[],https://github.com/MDSplus/mdsplus/pull/428,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/428#issuecomment-203931155,Fix some middes updates for signals with absolute times,update.. the replaceAll does not work since it is not an in-place operation. in the current implementation it has not effect whatsoever. is it really required. if so i updated the sample code from earlier.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,429,2016-03-29T15:03:54Z,2016-03-29T15:04:07Z,2016-04-01T20:42:35Z,MERGED,True,92,2,1,https://github.com/tfredian,Fix build_debs and add build_windows and publish_windows,1,[],https://github.com/MDSplus/mdsplus/pull/429,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/429,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,430,2016-03-29T16:13:00Z,2016-03-29T16:13:16Z,2016-03-29T16:19:31Z,MERGED,True,1,1,1,https://github.com/tfredian,Increase wait in UdpEventsTest to 10 millisec,1,[],https://github.com/MDSplus/mdsplus/pull/430,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/430,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,431,2016-03-30T17:53:19Z,2016-03-30T18:46:24Z,2016-03-30T18:46:25Z,MERGED,True,3136,3157,47,https://github.com/AndreaRigoni,moved enable-sanitize to m4 file,1,[],https://github.com/MDSplus/mdsplus/pull/431,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/431,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,432,2016-03-31T12:44:31Z,2016-03-31T13:10:21Z,2016-03-31T13:10:21Z,MERGED,True,6652,6693,3,https://github.com/zack-vii,Cleanup 428,2,[],https://github.com/MDSplus/mdsplus/pull/432,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/432,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,432,2016-03-31T12:44:31Z,2016-03-31T13:10:21Z,2016-03-31T13:10:21Z,MERGED,True,6652,6693,3,https://github.com/zack-vii,Cleanup 428,2,[],https://github.com/MDSplus/mdsplus/pull/432,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/432#issuecomment-203917270,,this pull will hopefully cleanup the mess created by GitHub on pull request #428 .,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,433,2016-03-31T13:17:11Z,2016-03-31T13:55:02Z,2016-05-02T23:37:35Z,MERGED,True,1,2,1,https://github.com/zack-vii,fixedY replaceAll is not in-place,1,[],https://github.com/MDSplus/mdsplus/pull/433,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/433,and regexpr requires another level of \escape,and regexpr requires another level of \escape,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,433,2016-03-31T13:17:11Z,2016-03-31T13:55:02Z,2016-05-02T23:37:35Z,MERGED,True,1,2,1,https://github.com/zack-vii,fixedY replaceAll is not in-place,1,[],https://github.com/MDSplus/mdsplus/pull/433,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/433#issuecomment-203949058,and regexpr requires another level of \escape,this is an essential fix for #432,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,434,2016-03-31T21:41:05Z,2016-04-01T20:42:02Z,2016-04-01T20:42:41Z,MERGED,True,172,0,4,https://github.com/joshStillerman,add raspi device - support for camera attached to raspberry pi computer,4,[],https://github.com/MDSplus/mdsplus/pull/434,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/434,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,435,2016-04-01T10:45:28Z,2016-04-01T13:35:42Z,2016-04-01T13:35:42Z,MERGED,True,5,11,1,https://github.com/zack-vii,cleaner __getattr__ for TreeNode,1,[],https://github.com/MDSplus/mdsplus/pull/435,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/435,"removed unreachable code
replaced try-pass with proper check
handle 'nid' in dict by reordering","removed unreachable code
replaced try-pass with proper check
handle 'nid' in dict by reordering",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,435,2016-04-01T10:45:28Z,2016-04-01T13:35:42Z,2016-04-01T13:35:42Z,MERGED,True,5,11,1,https://github.com/zack-vii,cleaner __getattr__ for TreeNode,1,[],https://github.com/MDSplus/mdsplus/pull/435,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/435#issuecomment-204382401,"removed unreachable code
replaced try-pass with proper check
handle 'nid' in dict by reordering",Hi Timo. You might want to rebase this pull request. I was planning to do a major rework of the tree.py and treenode.py after I completed work on the new MDSplus build system Andrea and I have been working on. There are lots of improvements that can be made some of which I had experimented with when I was attempting a python based tdi implementation. Some include huge performance improvements when looping over TreeNodeArrays as well as calling _TreeGetNci directly instead of going through tdi for node properties. Much of the original implementation was done using the easiest path to completion but unfortunately did not end up with very efficient code performance wise. Once this request is rebased I'll take a look and merge but just wanted to give you a heads up on a potential complete rewrite on treenode.py and tree.py (and perhaps others) so you don't spend a lot of time and effort working on this.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,435,2016-04-01T10:45:28Z,2016-04-01T13:35:42Z,2016-04-01T13:35:42Z,MERGED,True,5,11,1,https://github.com/zack-vii,cleaner __getattr__ for TreeNode,1,[],https://github.com/MDSplus/mdsplus/pull/435,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/435#issuecomment-204386382,"removed unreachable code
replaced try-pass with proper check
handle 'nid' in dict by reordering","This is probably what happened to gab as well. It all looks fine and then you do a pull request from you local repo. instead of pushing git syncs and pulls the old un-rebased version from the origin - puff you have the mess. I will not actively ty to improve python then, I just stumbled upon this while writing a subclass of TreeNode.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,436,2016-04-01T19:09:42Z,2016-04-01T19:50:34Z,2016-04-01T20:42:32Z,MERGED,True,2,0,1,https://github.com/tfredian,Make sure numpy array is contigous before making a descriptor for it.,1,[],https://github.com/MDSplus/mdsplus/pull/436,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/436,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,437,2016-04-04T13:56:23Z,2016-04-04T19:28:49Z,2016-09-01T12:51:03Z,MERGED,True,11,6,1,https://github.com/joshStillerman,"add generic extra string args, fix init action",2,[],https://github.com/MDSplus/mdsplus/pull/437,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/437,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,438,2016-04-04T18:21:03Z,2016-04-05T16:42:19Z,2016-05-03T15:09:54Z,MERGED,True,121,43,6,https://github.com/tfredian,Twf add pydevice path devices,7,[],https://github.com/MDSplus/mdsplus/pull/438,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/438,"This pull request adds support for defining MDSplus devices in a MDS_PYDEVICE_PATH search path similar to finding tdi functions in the MDS_PATH search path. After this new feature it will not be necessary to package python devices into an installable python package or install devices in your python site configuration. Simply put a 'devname'.py python file in the MDS_PYDEVICE_PATH directory search path with an uppercase 'devname' class subclassed from the Device class.
The devices configured this way will also be found by applications like the traverser and included in the list of possible devices when adding a device node to a tree.
Before merging this request please do some testing with existing device support to ensure that this new feature does not adversely affect the handling of existing devices.","This pull request adds support for defining MDSplus devices in a MDS_PYDEVICE_PATH search path similar to finding tdi functions in the MDS_PATH search path. After this new feature it will not be necessary to package python devices into an installable python package or install devices in your python site configuration. Simply put a 'devname'.py python file in the MDS_PYDEVICE_PATH directory search path with an uppercase 'devname' class subclassed from the Device class.
The devices configured this way will also be found by applications like the traverser and included in the list of possible devices when adding a device node to a tree.
Before merging this request please do some testing with existing device support to ensure that this new feature does not adversely affect the handling of existing devices.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,439,2016-04-04T20:13:55Z,2016-04-05T16:01:20Z,2016-05-03T15:09:53Z,MERGED,True,11,11,3,https://github.com/joshStillerman,"rename raspi to raspicam, add sudo to trig",3,[],https://github.com/MDSplus/mdsplus/pull/439,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/439,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,440,2016-04-05T07:58:18Z,2016-04-05T12:23:32Z,2016-04-05T12:23:32Z,CLOSED,False,1072,270,9,https://github.com/GabrieleManduchi,Huge signals support,4,[],https://github.com/MDSplus/mdsplus/pull/440,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/440,I have checked the changed files and they appear to be consistent with the real changes I did,I have checked the changed files and they appear to be consistent with the real changes I did,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,440,2016-04-05T07:58:18Z,2016-04-05T12:23:32Z,2016-04-05T12:23:32Z,CLOSED,False,1072,270,9,https://github.com/GabrieleManduchi,Huge signals support,4,[],https://github.com/MDSplus/mdsplus/pull/440,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/440#issuecomment-205772585,I have checked the changed files and they appear to be consistent with the real changes I did,"Hi Gabriele,
In case you didn't already notice, the pull request testing failed in the MingW64 build with the following error:
x86_64-w64-mingw32-gcc -g -O2  -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -fno-strict-aliasing -mno-ms-bitfields -I/buildsrc/include -I/buildsrc/include    -c -o XTreeDefaultResample.o XTreeDefaultResample.c
XTreeDefaultResample.c: In function 'resample':
XTreeDefaultResample.c:295:9: error: unknown type name 'uint'
uint currData, minData, maxData;",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,441,2016-04-05T12:24:20Z,2016-04-05T14:47:10Z,2016-04-05T14:47:10Z,MERGED,True,1072,270,9,https://github.com/GabrieleManduchi,Huge signals,4,[],https://github.com/MDSplus/mdsplus/pull/441,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/441,Removed the forgotten uint,Removed the forgotten uint,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,442,2016-04-06T13:03:55Z,2016-04-14T10:10:26Z,2016-04-14T10:10:26Z,CLOSED,False,110,99,5,https://github.com/GabrieleManduchi,Dev gm,11,[],https://github.com/MDSplus/mdsplus/pull/442,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/442,Huge signals management in jScope,Huge signals management in jScope,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,443,2016-04-11T15:19:46Z,2016-04-11T16:58:49Z,2016-05-03T15:09:55Z,MERGED,True,50,23,2,https://github.com/tfredian,TreeNode instance creation returns a pydevice if node is a pydevice d…,1,[],https://github.com/MDSplus/mdsplus/pull/443,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/443,…evice type.,…evice type.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,444,2016-04-13T08:22:02Z,2016-04-13T12:06:00Z,2016-04-27T09:22:05Z,MERGED,True,100,0,1,https://github.com/AndreaRigoni,added missing m4 macro for sanitize,1,[],https://github.com/MDSplus/mdsplus/pull/444,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/444,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,445,2016-04-14T10:15:15Z,2016-04-15T12:54:22Z,2016-04-15T12:54:22Z,MERGED,True,110,99,5,https://github.com/GabrieleManduchi,Dev gm,12,[],https://github.com/MDSplus/mdsplus/pull/445,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/445,This fixes several bugs in jScope and allows efficient management of huge signals,This fixes several bugs in jScope and allows efficient management of huge signals,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,446,2016-04-14T15:15:58Z,2016-04-14T15:34:40Z,2016-05-03T15:09:56Z,MERGED,True,15,9,1,https://github.com/tfredian,Add thread locking to the get method of a Connection object which wil…,1,[],https://github.com/MDSplus/mdsplus/pull/446,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/446,…l enable multiple threads to use a single connection object safely.,…l enable multiple threads to use a single connection object safely.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,447,2016-04-14T15:18:57Z,2016-04-14T17:40:54Z,2016-05-03T15:09:58Z,MERGED,True,19,12,1,https://github.com/tfredian,Add thread locking to the get method of a Connection object which wil…,1,[],https://github.com/MDSplus/mdsplus/pull/447,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/447,…l enable multiple threads to use a single connection object safely.,…l enable multiple threads to use a single connection object safely.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,448,2016-04-14T17:44:00Z,2016-04-14T20:47:05Z,2016-04-14T20:47:11Z,MERGED,True,40,3,6,https://github.com/tfredian,Add connection tests to python test suite,2,[],https://github.com/MDSplus/mdsplus/pull/448,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/448,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,448,2016-04-14T17:44:00Z,2016-04-14T20:47:05Z,2016-04-14T20:47:11Z,MERGED,True,40,3,6,https://github.com/tfredian,Add connection tests to python test suite,2,[],https://github.com/MDSplus/mdsplus/pull/448,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/448#issuecomment-210080145,,The connection test uses the LOCAL:// protocol which requires the buildroot bin directory to be in the PATH. This appears not to be set correctly when executing the tests in the build and pull-request test jobs so it is not finding the protocol correctly. I'm closing this until the test environment is corrected.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,449,2016-04-15T15:20:58Z,2016-04-15T17:08:49Z,2016-04-15T17:08:53Z,MERGED,True,13,15,2,https://github.com/tfredian,Use SIGTERM to terminate server mdsip process in tunnel protocol inst…,2,[],https://github.com/MDSplus/mdsplus/pull/449,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/449,…ead of SIGABRT which can cause a core dump. Also use just Thread class for connection tests instead of Event class.,…ead of SIGABRT which can cause a core dump. Also use just Thread class for connection tests instead of Event class.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,450,2016-04-15T16:11:51Z,2016-04-15T16:41:36Z,2016-04-15T16:41:36Z,MERGED,True,10,11,2,https://github.com/GabrieleManduchi,Let compression factor be passed by user in makeSegmentMinMax,1,[],https://github.com/MDSplus/mdsplus/pull/450,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/450,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,451,2016-04-18T12:01:28Z,2016-04-19T13:10:30Z,2016-09-01T12:49:45Z,MERGED,True,2,2,1,https://github.com/GabrieleManduchi,Fix memory errors when segments are not multiple of copression factor,1,[],https://github.com/MDSplus/mdsplus/pull/451,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/451,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,453,2016-04-20T13:56:42Z,2016-04-20T14:25:12Z,2016-04-20T14:25:12Z,MERGED,True,214,1,4,https://github.com/joshStillerman,New device support for Princeton Instruments Cameras using PythonForP…,1,[],https://github.com/MDSplus/mdsplus/pull/453,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/453,…icam,…icam,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,454,2016-04-20T16:03:02Z,2016-04-20T16:30:03Z,2016-04-20T16:30:03Z,MERGED,True,58,1,5,https://github.com/joshStillerman,generate new error codes from the XML,2,[],https://github.com/MDSplus/mdsplus/pull/454,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/454,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,455,2016-04-20T17:40:53Z,2016-04-20T17:42:07Z,2016-04-27T09:21:59Z,MERGED,True,102,42,4,https://github.com/AndreaRigoni,fixes needed to pass valgrind tests,1,[],https://github.com/MDSplus/mdsplus/pull/455,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/455,tested on fc_22 and rhel5,tested on fc_22 and rhel5,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,456,2016-04-21T12:46:43Z,2016-04-21T12:47:55Z,2016-04-27T09:21:58Z,MERGED,True,0,4,1,https://github.com/AndreaRigoni,"removed unneded include and pthread usage, this fixes windows copilation",1,[],https://github.com/MDSplus/mdsplus/pull/456,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/456,"Hi Tom, the includes was added for tests on the race condition, but no more needed now.
The fix was simple :-)","Hi Tom, the includes was added for tests on the race condition, but no more needed now.
The fix was simple :-)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,457,2016-04-21T14:51:32Z,2016-04-21T15:24:28Z,2016-04-21T15:24:28Z,MERGED,True,3,3,1,https://github.com/GabrieleManduchi,Fix check for new data availability in streaming management,1,[],https://github.com/MDSplus/mdsplus/pull/457,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/457,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,458,2016-04-22T13:23:53Z,2016-04-22T14:36:30Z,2016-04-22T14:36:30Z,MERGED,True,77,45,1,https://github.com/joshStillerman,Jas add picam device,4,[],https://github.com/MDSplus/mdsplus/pull/458,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/458,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,459,2016-04-22T18:37:27Z,2016-04-22T19:05:28Z,2016-04-25T18:45:29Z,MERGED,True,12081,11796,148,https://github.com/tfredian,Twfbld,413,[],https://github.com/MDSplus/mdsplus/pull/459,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/459,Add new build and testing scenario which uses a trigger jenkins job to checkout the sources to build and test from github and trigger platform specific builds to build and test using a common source directory. The jenkins build jobs build using the trigger jobs sources by doing $(SRCDIR)/configure keeping the build directory ${WORKSPACE} separate from the source directory. A set of jobs can be triggered for all the platforms to try to build and test for that platform. If successful the trigger job can proceed and trigger the same set of jobs instructing it to build installation kits this pass and if all these builds succeed the trigger job can then tag a new release.,Add new build and testing scenario which uses a trigger jenkins job to checkout the sources to build and test from github and trigger platform specific builds to build and test using a common source directory. The jenkins build jobs build using the trigger jobs sources by doing $(SRCDIR)/configure keeping the build directory ${WORKSPACE} separate from the source directory. A set of jobs can be triggered for all the platforms to try to build and test for that platform. If successful the trigger job can proceed and trigger the same set of jobs instructing it to build installation kits this pass and if all these builds succeed the trigger job can then tag a new release.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/460,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None","If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/460#issuecomment-214379072,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None","Hi Timo, Can you give an example of how this might occur? I assume it will happen if you have a Scalar instance that has no _value but not sure how you create one of these short of doing del instance._value.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/460#issuecomment-214428501,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None",If I would know a simple example. It is happening in a multithreaded program. I could debug up to the super.new() line which is probably calling the new of object. breakpoints in the first line of init or getattr are not caught. However if it happens on python 2.7 on both Windows and unix. I will try to generate the issue in a light version,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/460#issuecomment-214445253,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None","hmm its as simple as that the multiprocessing pool cases the error somehow.
if __name__ == '__main__':
  from multiprocessing import pool
  from MDSplus import String
  p=pool.Pool(1)
  # run w/o pool
  print(map(String,['abc','def']))  # results: [""abc"", ""def""]
  # run in pool
  print(p.map(String,['abc','def']))  # stack-overflows on alpha
  # results in [""abc"", ""def""] with the patch applied",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/460#issuecomment-214452189,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None","Strange indeed. Can you try doing a slightly different patch? Might be less likely to get lost when I quickly forget why that code in getattr() was added ;-)
class Scalar(_data.Data):
_value=None",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/460#issuecomment-214457134,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None","hm however would this not throw the error
AttributeError: 'NoneType' object has no attribute '_value'

in the last line of getattr",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/460#issuecomment-214457985,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None",ah no it would not even call getattr right as it is invoked only if the field has not been found,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/tfredian,8,https://github.com/MDSplus/mdsplus/pull/460#issuecomment-214459110,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None",yep. I tested it with your example and seemed to work. Can you try it with your real application to verify that is fixed as well?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,460,2016-04-25T13:18:10Z,2016-04-25T18:16:54Z,2016-04-25T23:43:03Z,MERGED,True,1,0,1,https://github.com/zack-vii,prevent infinite loop (stack),1,[],https://github.com/MDSplus/mdsplus/pull/460,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/460#issuecomment-214564408,"If _value is not defined an infinite loop is generated. This may occur
in new executing line:    return super(Scalar,cls).new(cls).
Not sure if it should throw and AttributeError or just return None",so far it is running normally.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,461,2016-04-26T07:56:00Z,2016-04-26T07:58:58Z,2016-04-26T07:58:58Z,MERGED,True,2,2,1,https://github.com/zack-vii,Aa python,1,[],https://github.com/MDSplus/mdsplus/pull/461,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/461,after name change in #459,after name change in #459,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,463,2016-04-26T10:22:26Z,2016-04-26T12:23:51Z,2016-04-26T12:26:38Z,CLOSED,False,2,0,1,https://github.com/GabrieleManduchi,Fix pending lock in TreeSetXNci,1,[],https://github.com/MDSplus/mdsplus/pull/463,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/463,This change is required to leave NCI unlocked. It did not show using a single thread because that is a recursive lock. However a separate thread of the same process is blocked after the first call to TreeSetXNci,This change is required to leave NCI unlocked. It did not show using a single thread because that is a recursive lock. However a separate thread of the same process is blocked after the first call to TreeSetXNci,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,463,2016-04-26T10:22:26Z,2016-04-26T12:23:51Z,2016-04-26T12:26:38Z,CLOSED,False,2,0,1,https://github.com/GabrieleManduchi,Fix pending lock in TreeSetXNci,1,[],https://github.com/MDSplus/mdsplus/pull/463,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/463#issuecomment-214719645,This change is required to leave NCI unlocked. It did not show using a single thread because that is a recursive lock. However a separate thread of the same process is blocked after the first call to TreeSetXNci,"Hi Gabriele,
Could you resubmit this pull request with a slight change? Instead of adding the unlock inside the if block it seems that simply removing the else block and putting the unlock after the if block would be a cleaner fix for the problem. Agree?

-tom",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,463,2016-04-26T10:22:26Z,2016-04-26T12:23:51Z,2016-04-26T12:26:38Z,CLOSED,False,2,0,1,https://github.com/GabrieleManduchi,Fix pending lock in TreeSetXNci,1,[],https://github.com/MDSplus/mdsplus/pull/463,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/463#issuecomment-214722843,This change is required to leave NCI unlocked. It did not show using a single thread because that is a recursive lock. However a separate thread of the same process is blocked after the first call to TreeSetXNci,"Hi Tom,
right, I reissued the pull request
                             Gabriele

On 26/04/2016 14:11, Tom Fredian wrote:

Hi Gabriele,
|Could you resubmit this pull request with a slight change? Instead of adding the unlock inside the if block it seems that simply removing the else block and putting the unlock after the if block would be a cleaner fix for the problem. Agree?
|
-tom
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#463 (comment)


Gabriele Manduchi
Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,464,2016-04-26T12:25:48Z,2016-04-26T12:39:18Z,2016-05-03T15:09:40Z,MERGED,True,2,3,1,https://github.com/GabrieleManduchi,Better way of fixing the missing UnlockNci,2,[],https://github.com/MDSplus/mdsplus/pull/464,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/464,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,465,2016-04-27T19:36:23Z,2016-04-27T20:23:25Z,2016-04-27T20:23:25Z,MERGED,True,78428,35174,963,https://github.com/kgerickson,Update dev-kge branch from alpha,1614,[],https://github.com/MDSplus/mdsplus/pull/465,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/465,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,465,2016-04-27T19:36:23Z,2016-04-27T20:23:25Z,2016-04-27T20:23:25Z,MERGED,True,78428,35174,963,https://github.com/kgerickson,Update dev-kge branch from alpha,1614,[],https://github.com/MDSplus/mdsplus/pull/465,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/465#issuecomment-215208645,,"Ummm, not sure what to do with this. I guess your dev-kge was a bit out of date? Perhaps you might want to make a new dev-kge branch out of alpha and push that to origin instead of merging 1,614 commits from alpha in to your current dev-kge branch?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,466,2016-04-27T20:57:19Z,2016-04-27T21:13:05Z,2016-04-28T14:17:21Z,MERGED,True,1,1,1,https://github.com/kgerickson,camshr: Fix RemCamStatus function signature warning,1,[],https://github.com/MDSplus/mdsplus/pull/466,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/466,"All of the RemCam* functions take in iosb_in as an unsigned short *.  RemCamStatus takes it in as an unsigned char *, but treats it like an unsigned short *.  Adjust the function definition to take in unsigned short * like the others, removing a warning.","All of the RemCam* functions take in iosb_in as an unsigned short *.  RemCamStatus takes it in as an unsigned char *, but treats it like an unsigned short *.  Adjust the function definition to take in unsigned short * like the others, removing a warning.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,467,2016-04-28T13:55:00Z,2016-04-28T13:58:11Z,2016-04-28T14:17:24Z,MERGED,True,4,6,1,https://github.com/kgerickson,mdsobjects: mdsdata.c: Remove unused variables,1,[],https://github.com/MDSplus/mdsplus/pull/467,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/467,"The ""status"" variable was set but not used in several functions, triggering a warning at -Wall.  Remove.","The ""status"" variable was set but not used in several functions, triggering a warning at -Wall.  Remove.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,468,2016-04-28T14:25:59Z,2016-04-28T15:49:57Z,2016-05-01T21:26:56Z,MERGED,True,1,1,1,https://github.com/kgerickson,tdishr: TdiYaccSubs.c: Remove unused vars,2,[],https://github.com/MDSplus/mdsplus/pull/468,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/468,"In function TdiYacc_IMMEDIATE, remove unused variables len and size","In function TdiYacc_IMMEDIATE, remove unused variables len and size",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,469,2016-04-28T14:32:58Z,2016-04-28T14:51:22Z,2016-09-01T12:49:49Z,MERGED,True,1,1,1,https://github.com/joshStillerman,setup.py needs to import os,1,[],https://github.com/MDSplus/mdsplus/pull/469,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/469,New code that deals with version needs to have os imported to work.,New code that deals with version needs to have os imported to work.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,470,2016-04-28T14:34:43Z,2016-04-28T14:48:43Z,2016-05-01T21:26:27Z,MERGED,True,0,1,1,https://github.com/kgerickson,tdishr TdiCompileDependency.c: Remove unused var,1,[],https://github.com/MDSplus/mdsplus/pull/470,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/470,"Remove status, an unused variable inside an empty function","Remove status, an unused variable inside an empty function",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,473,2016-04-28T18:46:10Z,2016-04-28T20:13:20Z,2016-04-28T20:28:01Z,MERGED,True,1,1,1,https://github.com/kgerickson,javamds/JavaTrav.c: Pass pointers to free without cast,1,[],https://github.com/MDSplus/mdsplus/pull/473,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/473,"The free() function takes in a void* as its argument, so casting from any pointer type to void* is wrong, and this code casted from int* to char*, which is more wrong.  Remove casting entirely.","The free() function takes in a void* as its argument, so casting from any pointer type to void* is wrong, and this code casted from int* to char*, which is more wrong.  Remove casting entirely.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,473,2016-04-28T18:46:10Z,2016-04-28T20:13:20Z,2016-04-28T20:28:01Z,MERGED,True,1,1,1,https://github.com/kgerickson,javamds/JavaTrav.c: Pass pointers to free without cast,1,[],https://github.com/MDSplus/mdsplus/pull/473,https://github.com/kgerickson,2,https://github.com/MDSplus/mdsplus/pull/473#issuecomment-215528213,"The free() function takes in a void* as its argument, so casting from any pointer type to void* is wrong, and this code casted from int* to char*, which is more wrong.  Remove casting entirely.","This build didn't seem to fail because of the file I changed:
In file included from /var/lib/jenkins/workspace/pull-request-test/mdsobjects/labview/mdsdataobjectswrp.cpp:1:0:
/var/lib/jenkins/workspace/pull-request-test/mdsobjects/labview/mdsobjectswrp.h:27:26: fatal error: platdefines.h: No such file or directory
#include  <platdefines.h>
^
compilation terminated.
: recipe for target 'mdsdataobjectswrp.o' failed
Any idea what's going on?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,473,2016-04-28T18:46:10Z,2016-04-28T20:13:20Z,2016-04-28T20:28:01Z,MERGED,True,1,1,1,https://github.com/kgerickson,javamds/JavaTrav.c: Pass pointers to free without cast,1,[],https://github.com/MDSplus/mdsplus/pull/473,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/473#issuecomment-215532332,"The free() function takes in a void* as its argument, so casting from any pointer type to void* is wrong, and this code casted from int* to char*, which is more wrong.  Remove casting entirely.","Working on it. The pull-request-test jenkins job is still having some
problems. Testing the pull request again now. I must have removed the
git submodule init option so the 3rd-party-apis submodule was not pull
in so it couldn't find the matlab headers.
On 4/28/2016 2:57 PM, kgerickson wrote:

This build didn't seem to fail because of the file I changed:
In file included from
/var/lib/jenkins/workspace/pull-request-test/mdsobjects/labview/mdsdataobjectswrp.cpp:1:0:
/var/lib/jenkins/workspace/pull-request-test/mdsobjects/labview/mdsobjectswrp.h:27:26:
fatal error: platdefines.h: No such file or directory
#include
^
compilation terminated.
: recipe for target 'mdsdataobjectswrp.o' failed
Any idea what's going on?
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub
#473 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,474,2016-04-28T19:28:03Z,2016-04-29T17:43:34Z,2016-04-29T18:43:37Z,MERGED,True,1740,1698,5,https://github.com/tfredian,Print out an error and return a failure if unable to get ip address a…,5,[],https://github.com/MDSplus/mdsplus/pull/474,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/474,… socket is bound to. This is to address issue #471,… socket is bound to. This is to address issue #471,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,475,2016-04-28T21:23:59Z,2016-04-29T18:43:05Z,2016-04-29T18:43:10Z,MERGED,True,2,1,1,https://github.com/tfredian,Return status for all valid QACtion operations and return an error if…,2,[],https://github.com/MDSplus/mdsplus/pull/475,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/475,… invalid QAction operation is specified This is to address issue #472,… invalid QAction operation is specified This is to address issue #472,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,476,2016-04-29T14:59:54Z,2016-04-29T16:41:03Z,2016-05-24T06:48:52Z,MERGED,True,6,9,2,https://github.com/AndreaRigoni,fix gif icons path for build directory different from source directory,1,[],https://github.com/MDSplus/mdsplus/pull/476,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/476,"Fixes the wrong path added to the gif icons inside jar files..
Turns out that in jar you can use ""-C dir "" to specify files from different directories","Fixes the wrong path added to the gif icons inside jar files..
Turns out that in jar you can use ""-C dir "" to specify files from different directories",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,477,2016-04-29T20:32:37Z,2016-05-02T17:39:14Z,2016-05-03T15:10:06Z,MERGED,True,2,0,1,https://github.com/tfredian,Set the segmented nci flag when segments are stored in a node,3,[],https://github.com/MDSplus/mdsplus/pull/477,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/477,"The SEGMENTED nci bit was not being set when storing segments in a node so getnci(node,'segments') always returned 0. This pull request is to solve issue #462","The SEGMENTED nci bit was not being set when storing segments in a node so getnci(node,'segments') always returned 0. This pull request is to solve issue #462",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,478,2016-05-01T21:26:04Z,2016-05-02T17:40:28Z,2016-05-02T21:07:47Z,MERGED,True,0,1,1,https://github.com/kgerickson,mdstcpip/IoRoutinesTcp.c: Remove unused var 'one',2,[],https://github.com/MDSplus/mdsplus/pull/478,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/478,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,479,2016-05-02T02:47:59Z,2016-05-02T11:52:51Z,2016-05-02T21:07:48Z,MERGED,True,1,1,1,https://github.com/kgerickson,Update mdsmisc build dep,1,[],https://github.com/MDSplus/mdsplus/pull/479,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/479,"mdsmisc depends on xtreeshr as well as the chain descending from tdishr, so add that to the dependency list helper","mdsmisc depends on xtreeshr as well as the chain descending from tdishr, so add that to the dependency list helper",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,480,2016-05-02T02:53:49Z,2016-05-02T16:50:55Z,2016-05-02T21:07:49Z,MERGED,True,4,3,1,https://github.com/kgerickson,treeshr: Fix use of uninit var,2,[],https://github.com/MDSplus/mdsplus/pull/480,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/480,_TreeGetDatafileSize(): status was used without being initialized properly in the case where we didn't get inside the first conditional to call TreeOpenDatafileR.  Fix by moving the conditional on status inside the conditional right above it.,_TreeGetDatafileSize(): status was used without being initialized properly in the case where we didn't get inside the first conditional to call TreeOpenDatafileR.  Fix by moving the conditional on status inside the conditional right above it.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,481,2016-05-02T02:58:41Z,2016-05-02T17:39:59Z,2016-05-02T21:07:50Z,MERGED,True,5,54,1,https://github.com/kgerickson,Kge mdsmisc cleanup,3,[],https://github.com/MDSplus/mdsplus/pull/481,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/481,Clean up stray variable usage in mdsmisc by removing any that either aren't used at all or are set to a value but then never subsequently read.,Clean up stray variable usage in mdsmisc by removing any that either aren't used at all or are set to a value but then never subsequently read.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,483,2016-05-03T12:49:44Z,2016-05-09T16:20:50Z,2016-05-09T16:20:50Z,CLOSED,False,6,2,1,https://github.com/zack-vii,added optional return value to createPulse,1,[],https://github.com/MDSplus/mdsplus/pull/483,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/483,"only if mode is specified, otherwise behave as before","only if mode is specified, otherwise behave as before",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,483,2016-05-03T12:49:44Z,2016-05-09T16:20:50Z,2016-05-09T16:20:50Z,CLOSED,False,6,2,1,https://github.com/zack-vii,added optional return value to createPulse,1,[],https://github.com/MDSplus/mdsplus/pull/483,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/483#issuecomment-216520136,"only if mode is specified, otherwise behave as before","I don't quite understand the need for this. It seems to be a direct contradiction to what createPulse is supposed to do, namely copy an existing tree instance into a new one with a different shot number. Why would one want or need to add a mode argument to turn createPulse() into a Tree() call?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,483,2016-05-03T12:49:44Z,2016-05-09T16:20:50Z,2016-05-09T16:20:50Z,CLOSED,False,6,2,1,https://github.com/zack-vii,added optional return value to createPulse,1,[],https://github.com/MDSplus/mdsplus/pull/483,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/483#issuecomment-216870673,"only if mode is specified, otherwise behave as before","well, usually you would create a new pulse from the model. and then you are using the new pulse to do actions write data etc. So this would open that new pulse right after creation. if you do not want it to open the pulse, you just omit the mode parameter and nothing has changed compared to the old behavior.
I personally use it quite often when testing cod on a tree. createPulse creates a fresh copy of my sample tree and the following code does something with that copy.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,483,2016-05-03T12:49:44Z,2016-05-09T16:20:50Z,2016-05-09T16:20:50Z,CLOSED,False,6,2,1,https://github.com/zack-vii,added optional return value to createPulse,1,[],https://github.com/MDSplus/mdsplus/pull/483,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/483#issuecomment-216878725,"only if mode is specified, otherwise behave as before","Hmmm, maybe just me but I'm still not convinced that saving one tree=Tree(treename,shot[,mode]) line in the application (which seems to me would make the application more readable) does not warrant adding optional behavior to the createPulse method. Any other opinions out there??? Sorry to be so stubborn.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,483,2016-05-03T12:49:44Z,2016-05-09T16:20:50Z,2016-05-09T16:20:50Z,CLOSED,False,6,2,1,https://github.com/zack-vii,added optional return value to createPulse,1,[],https://github.com/MDSplus/mdsplus/pull/483,https://github.com/kgerickson,5,https://github.com/MDSplus/mdsplus/pull/483#issuecomment-217026156,"only if mode is specified, otherwise behave as before","This would create a fundamentally different createPulse just for python.  While it would be backwards compatible with the concept of createPulse elsewhere, it would introduce an additional paradigm that isn't present in any other language.  This change should not be taken lightly.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,486,2016-05-09T14:23:55Z,2016-05-09T15:39:13Z,2016-05-09T15:39:13Z,MERGED,True,6,93,21,https://github.com/kgerickson,tdishr Unused Warning Cleanup,3,[],https://github.com/MDSplus/mdsplus/pull/486,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/486,"This set of commits removes a lot of unused variables, several set but unused variables, and one unused function from tdishr.","This set of commits removes a lot of unused variables, several set but unused variables, and one unused function from tdishr.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,487,2016-05-09T15:58:09Z,2016-05-09T16:03:29Z,2016-05-09T16:03:30Z,MERGED,True,2,0,1,https://github.com/joshStillerman,need to set the PicamOutputSignal  to EffectivelyExposing,1,[],https://github.com/MDSplus/mdsplus/pull/487,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/487,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,488,2016-05-10T03:10:51Z,2016-05-10T15:00:00Z,2016-05-11T12:14:59Z,CLOSED,False,239,766,40,https://github.com/kgerickson,Kge config cleanup,13,[],https://github.com/MDSplus/mdsplus/pull/488,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/488,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup","Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,488,2016-05-10T03:10:51Z,2016-05-10T15:00:00Z,2016-05-11T12:14:59Z,CLOSED,False,239,766,40,https://github.com/kgerickson,Kge config cleanup,13,[],https://github.com/MDSplus/mdsplus/pull/488,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/488#issuecomment-218185009,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup","CamShr cannot build on windows (not sure about macosx) so the test for the scsi/sg.h header is still needed. Eventually I would like to change camshr to build on windows to provide the remote camac functionality and generate errors if ""camac_server"" env is not set and get rid of remcamshr entirely.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,488,2016-05-10T03:10:51Z,2016-05-10T15:00:00Z,2016-05-11T12:14:59Z,CLOSED,False,239,766,40,https://github.com/kgerickson,Kge config cleanup,13,[],https://github.com/MDSplus/mdsplus/pull/488,https://github.com/kgerickson,3,https://github.com/MDSplus/mdsplus/pull/488#issuecomment-218318785,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup",I modified the branch to remove that commit.  Do I have to resend a new pull request?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,488,2016-05-10T03:10:51Z,2016-05-10T15:00:00Z,2016-05-11T12:14:59Z,CLOSED,False,239,766,40,https://github.com/kgerickson,Kge config cleanup,13,[],https://github.com/MDSplus/mdsplus/pull/488,https://github.com/kgerickson,4,https://github.com/MDSplus/mdsplus/pull/488#issuecomment-218319164,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup","Ok, I just opened a new one",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,488,2016-05-10T03:10:51Z,2016-05-10T15:00:00Z,2016-05-11T12:14:59Z,CLOSED,False,239,766,40,https://github.com/kgerickson,Kge config cleanup,13,[],https://github.com/MDSplus/mdsplus/pull/488,https://github.com/MDSplusBuilder,5,https://github.com/MDSplus/mdsplus/pull/488#issuecomment-218441453,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup","If you push the changes to the branch used to make the original pull
request it will automatically update the pull request and trigger a
pull-request-test jenkins job.
On 5/10/2016 7:12 PM, kgerickson wrote:

I modified the branch to remove that commit. Do I have to resend a new
pull request?
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub
#488 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,488,2016-05-10T03:10:51Z,2016-05-10T15:00:00Z,2016-05-11T12:14:59Z,CLOSED,False,239,766,40,https://github.com/kgerickson,Kge config cleanup,13,[],https://github.com/MDSplus/mdsplus/pull/488,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/488#issuecomment-218441706,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup","Actually if this is the one I closed then you could have reopened it
after pushing changes.
On 5/10/2016 7:12 PM, kgerickson wrote:

I modified the branch to remove that commit. Do I have to resend a new
pull request?
—
You are receiving this because you modified the open/close state.
Reply to this email directly or view it on GitHub
#488 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,489,2016-05-10T04:00:30Z,2016-05-10T16:37:29Z,2016-05-10T23:17:30Z,MERGED,True,1,1,1,https://github.com/kgerickson,mdsshr: Remove double xmllib,3,[],https://github.com/MDSplus/mdsplus/pull/489,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/489,"For some reason, xml libraries were being linked twice in mdsshr.  Remove one.","For some reason, xml libraries were being linked twice in mdsshr.  Remove one.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,489,2016-05-10T04:00:30Z,2016-05-10T16:37:29Z,2016-05-10T23:17:30Z,MERGED,True,1,1,1,https://github.com/kgerickson,mdsshr: Remove double xmllib,3,[],https://github.com/MDSplus/mdsplus/pull/489,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/489#issuecomment-218180150,"For some reason, xml libraries were being linked twice in mdsshr.  Remove one.",I now vaguely remember why there were two XML_LIB's in the link. On the mingw64 build the XML_LIB  has to be placed before the SOCKETLIB because it is using the status lib for xml. I recall I had to try a lot of different combinations to get this to work on windows. What I don't remember is whether the trailing XML_LIB was needed or not. I can't imagine why it would be. Pushing new commit to move XML_LIB to before SOCKETLIB.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,489,2016-05-10T04:00:30Z,2016-05-10T16:37:29Z,2016-05-10T23:17:30Z,MERGED,True,1,1,1,https://github.com/kgerickson,mdsshr: Remove double xmllib,3,[],https://github.com/MDSplus/mdsplus/pull/489,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/489#issuecomment-218216042,"For some reason, xml libraries were being linked twice in mdsshr.  Remove one.",The builds seemed to work after reordering the libs so merging it now.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,490,2016-05-10T17:41:49Z,2016-05-16T17:42:56Z,2016-05-16T17:43:03Z,CLOSED,False,7,7,1,https://github.com/tfredian,Use host environment variable if present for configure --host option,5,[],https://github.com/MDSplus/mdsplus/pull/490,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/490,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,491,2016-05-10T23:14:03Z,2016-05-14T17:41:22Z,2016-05-14T17:41:22Z,MERGED,True,260,719,44,https://github.com/kgerickson,Kge config cleanup,12,[],https://github.com/MDSplus/mdsplus/pull/491,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/491,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup","Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,491,2016-05-10T23:14:03Z,2016-05-14T17:41:22Z,2016-05-14T17:41:22Z,MERGED,True,260,719,44,https://github.com/kgerickson,Kge config cleanup,12,[],https://github.com/MDSplus/mdsplus/pull/491,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/491#issuecomment-219082078,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup","The windows build failed after these changes with the following error:
x86_64-w64-mingw32-gfortran @fflags@ -I/var/lib/jenkins/workspace/pull-request-test/include -I/var/lib/jenkins/workspace/build_windows/64/include    -o /var/lib/jenkins/workspace/build_windows/64/bin_x86_64/mdslib_ftest /var/lib/jenkins/workspace/pull-request-test/mdslib/mdslib_ftest.f -L/var/lib/jenkins/workspace/build_windows/64/bin_x86_64/ -lMdsLib -lMdsIpShr -lTdiShr -lTreeShr -lMdsShr -lm
x86_64-w64-mingw32-gfortran: error: @fflags@: No such file or directory",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,491,2016-05-10T23:14:03Z,2016-05-14T17:41:22Z,2016-05-14T17:41:22Z,MERGED,True,260,719,44,https://github.com/kgerickson,Kge config cleanup,12,[],https://github.com/MDSplus/mdsplus/pull/491,https://github.com/kgerickson,3,https://github.com/MDSplus/mdsplus/pull/491#issuecomment-219095679,"Moderate cleanup of some old configure issues:

Remove support for old platforms and tools
Update automake
General cleanup","Will fix.  FFLAGS needs to become FCFLAGS.  I'll rebase the commit and try
again.
On Fri, May 13, 2016 at 11:46 AM, Tom Fredian notifications@github.com
wrote:

The windows build failed after these changes with the following error:
x86_64-w64-mingw32-gfortran @fflags@
-I/var/lib/jenkins/workspace/pull-request-test/include
-I/var/lib/jenkins/workspace/build_windows/64/include -o
/var/lib/jenkins/workspace/build_windows/64/bin_x86_64/mdslib_ftest
/var/lib/jenkins/workspace/pull-request-test/mdslib/mdslib_ftest.f
-L/var/lib/jenkins/workspace/build_windows/64/bin_x86_64/ -lMdsLib
-lMdsIpShr -lTdiShr -lTreeShr -lMdsShr -lm
x86_64-w64-mingw32-gfortran: error: @fflags@: No such file or directory
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#491 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,493,2016-05-13T13:16:33Z,2016-05-13T17:36:43Z,2016-05-19T12:47:35Z,MERGED,True,6,0,2,https://github.com/tfredian,Put back motif dependency for idlmdswidgets and idlmdsevent,2,[],https://github.com/MDSplus/mdsplus/pull/493,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/493,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,494,2016-05-13T14:31:55Z,2016-05-13T15:38:40Z,2016-05-13T15:38:40Z,MERGED,True,16,36,8,https://github.com/kgerickson,Kge warning quash,14,[],https://github.com/MDSplus/mdsplus/pull/494,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/494,"Cleanup warnings across tdishr, mdsshr, mdsmisc, and mdstcpip","Cleanup warnings across tdishr, mdsshr, mdsmisc, and mdstcpip",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,495,2016-05-13T17:37:30Z,2016-05-14T20:52:19Z,2016-05-24T06:48:47Z,MERGED,True,30,4,9,https://github.com/AndreaRigoni,fixes some suppressions problems for rhel6,1,[],https://github.com/MDSplus/mdsplus/pull/495,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/495,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,496,2016-05-16T15:03:28Z,2016-05-16T17:15:10Z,2016-09-01T12:49:53Z,MERGED,True,91,25,1,https://github.com/joshStillerman,Jas add picam device,2,[],https://github.com/MDSplus/mdsplus/pull/496,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/496,"General fixup of PICAM device
This commit adds support for multiple cameras (searching by serial number)
Renae TEMPERATURE SENSOR_TEMP
Removes STORE_ACTION (acquire which is run by INIT, stores the data)
Changes output signal from EffectivelyExposing to Exposing
NOTE: Still assumes 512 width which is wrong on 2 counts:

some cameras are not 512
some rois do not bin x by 1
TO BE FIXED IN NEXT ROUND !","General fixup of PICAM device
This commit adds support for multiple cameras (searching by serial number)
Renae TEMPERATURE SENSOR_TEMP
Removes STORE_ACTION (acquire which is run by INIT, stores the data)
Changes output signal from EffectivelyExposing to Exposing
NOTE: Still assumes 512 width which is wrong on 2 counts:

some cameras are not 512
some rois do not bin x by 1
TO BE FIXED IN NEXT ROUND !",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,497,2016-05-16T17:49:52Z,2016-05-17T14:14:17Z,2016-05-18T14:01:49Z,MERGED,True,15,6,1,https://github.com/tfredian,Use host environment variable in the --host= configure option,3,[],https://github.com/MDSplus/mdsplus/pull/497,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/497,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,498,2016-05-17T08:49:28Z,2016-05-17T12:06:10Z,2016-05-24T06:48:46Z,MERGED,True,11,9,9,https://github.com/AndreaRigoni,added missing s to suppressionSSSS,1,[],https://github.com/MDSplus/mdsplus/pull/498,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/498,Becaue I mut be tupid !,Becaue I mut be tupid !,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,498,2016-05-17T08:49:28Z,2016-05-17T12:06:10Z,2016-05-24T06:48:46Z,MERGED,True,11,9,9,https://github.com/AndreaRigoni,added missing s to suppressionSSSS,1,[],https://github.com/MDSplus/mdsplus/pull/498,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/498#issuecomment-219698093,Becaue I mut be tupid !,Good find!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,499,2016-05-17T12:29:01Z,2016-05-17T13:32:19Z,2016-06-10T20:01:09Z,MERGED,True,2,2,1,https://github.com/GabrieleManduchi,Fix status check,1,[],https://github.com/MDSplus/mdsplus/pull/499,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/499,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,501,2016-05-17T20:11:51Z,2016-05-18T18:38:33Z,2016-05-18T18:38:33Z,CLOSED,False,19,19,2,https://github.com/zack-vii,python treeshr underscores,2,[],https://github.com/MDSplus/mdsplus/pull/501,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/501,"added missing underscore to TreeFindTagEnd
corrected underscores of function wrappers that do not follow schema.","added missing underscore to TreeFindTagEnd
corrected underscores of function wrappers that do not follow schema.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,501,2016-05-17T20:11:51Z,2016-05-18T18:38:33Z,2016-05-18T18:38:33Z,CLOSED,False,19,19,2,https://github.com/zack-vii,python treeshr underscores,2,[],https://github.com/MDSplus/mdsplus/pull/501,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/501#issuecomment-220119377,"added missing underscore to TreeFindTagEnd
corrected underscores of function wrappers that do not follow schema.","This does not work unfortunately because of the special effect of double underscores when found in a class method definition. See: http://stackoverflow.com/questions/1301346/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python
If you try to run the python tests you will see the following:
status = _treeshr.__TreeCreatePulseFile(self.ctx,shot,0,_C.c_void_p(0))

AttributeError: 'module' object has no attribute '_Tree__TreeCreatePulseFile'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,502,2016-05-18T08:11:36Z,2016-05-18T11:55:22Z,2016-05-24T06:48:41Z,MERGED,True,402,225,41,https://github.com/AndreaRigoni,M4 docker cleanup,3,[],https://github.com/MDSplus/mdsplus/pull/502,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/502,First attempt to cleanup a bit the m4 docker stuff ..,First attempt to cleanup a bit the m4 docker stuff ..,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,503,2016-05-18T18:01:21Z,2016-05-18T18:43:13Z,2016-05-19T12:47:33Z,MERGED,True,18411,0,157,https://github.com/tfredian,Add new build scripts,1,[],https://github.com/MDSplus/mdsplus/pull/503,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/503,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,504,2016-05-20T10:34:42Z,2016-05-20T19:08:52Z,2016-05-20T19:08:52Z,MERGED,True,37,29,2,https://github.com/zack-vii,python treeshr underscores #2,2,[],https://github.com/MDSplus/mdsplus/pull/504,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/504,"add exactly one underscore to the library procedure name
added functions to treeshr to handle the private library calls:

TreeCreatePulseFile
TreeCleanDatafile
TreeCompressDatafile","add exactly one underscore to the library procedure name
added functions to treeshr to handle the private library calls:

TreeCreatePulseFile
TreeCleanDatafile
TreeCompressDatafile",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,505,2016-05-20T14:49:03Z,2016-05-20T17:34:53Z,2016-05-20T17:34:53Z,MERGED,True,640,262,39,https://github.com/AndreaRigoni,added support for multiple testrunner output formats in the same run,1,[],https://github.com/MDSplus/mdsplus/pull/505,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/505,Adding multiple log outputs at once during tests.,Adding multiple log outputs at once during tests.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,506,2016-05-23T09:28:06Z,2016-05-23T16:13:39Z,2016-05-23T16:13:39Z,CLOSED,False,32,16,8,https://github.com/AndreaRigoni,report error status after test-suite,1,[],https://github.com/MDSplus/mdsplus/pull/506,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/506,"Hi Tom,
this should propagate the status out of the make tests ..","Hi Tom,
this should propagate the status out of the make tests ..",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,507,2016-05-23T17:27:37Z,2016-05-23T19:12:02Z,2016-05-23T19:12:02Z,CLOSED,False,62,46,9,https://github.com/AndreaRigoni,Feature multilog,3,[],https://github.com/MDSplus/mdsplus/pull/507,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/507,this fixes testing for the exit statu problem and the python tests in fc17 (missing tap.py),this fixes testing for the exit statu problem and the python tests in fc17 (missing tap.py),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,508,2016-05-23T19:13:09Z,2016-05-23T20:33:11Z,2016-05-24T06:46:59Z,CLOSED,False,65,47,9,https://github.com/AndreaRigoni,Feature multilog,4,[],https://github.com/MDSplus/mdsplus/pull/508,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/508,fix for fc17,fix for fc17,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,509,2016-05-23T20:35:50Z,2016-05-24T06:46:37Z,2016-05-24T06:46:59Z,MERGED,True,65,47,9,https://github.com/AndreaRigoni,Feature multilog,4,[],https://github.com/MDSplus/mdsplus/pull/509,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/509,fix for fc17,fix for fc17,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,510,2016-05-24T13:09:33Z,2016-05-24T13:57:17Z,2016-09-01T12:50:00Z,MERGED,True,20,5,1,https://github.com/joshStillerman,Kill whole process tree when cleaning up,1,[],https://github.com/MDSplus/mdsplus/pull/510,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/510,"python subprocess shell=true  makes a process running cmd.exe
sending commands to it, makes another new process
killing cmd.exe does not kill the other new process, need to kill all the processes in the tree.","python subprocess shell=true  makes a process running cmd.exe
sending commands to it, makes another new process
killing cmd.exe does not kill the other new process, need to kill all the processes in the tree.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,511,2016-05-25T14:30:08Z,2016-05-25T14:31:07Z,2016-05-25T14:31:08Z,MERGED,True,202,201,43,https://github.com/AndreaRigoni,Twfbld fix sanoptions,4,[],https://github.com/MDSplus/mdsplus/pull/511,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/511,"try to fix sanitizer options
clean up of some obsolete statements in m4
adds exitcode=1
disable python tests if ENABLE_SANITIZE=thread","try to fix sanitizer options
clean up of some obsolete statements in m4
adds exitcode=1
disable python tests if ENABLE_SANITIZE=thread",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,512,2016-05-25T16:01:51Z,2016-05-25T16:09:38Z,2016-05-25T16:09:38Z,MERGED,True,30,13,2,https://github.com/AndreaRigoni,another fix .. if link as failing the sanitize was passing through,1,[],https://github.com/MDSplus/mdsplus/pull/512,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/512,"this should skip tests if -fpie is required for sanitize=thread
this seems to happen in ubuntu14","this should skip tests if -fpie is required for sanitize=thread
this seems to happen in ubuntu14",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,513,2016-05-25T16:24:35Z,2016-05-25T20:40:01Z,2016-06-10T20:01:36Z,MERGED,True,17,9,4,https://github.com/joshStillerman,Jas mds cmprs integer overflow,3,[],https://github.com/MDSplus/mdsplus/pull/513,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/513,"Fix integer overflow in MdsCmprs

If subtraction overflows 32 bit 2's compliment, then put in the
flag value.

Previous fix just checked for 0x80000000 (INT_MIN) which some compilers
did not compare well.  Now check for any unexpected change of sign.


add annother test case for compression

Ted G's doubles that were compressing badly due to integer overflow.

Note:
  Data in testing tree should have been not compress_on_put, but it was.
  re-wrote the data in the .compression:* nodes all as not c_on_p

Note Note:
  At least this new test case does not fail even before this fix to the
  code.  This is probably due to integer overflow not returning consistent
  results.","Fix integer overflow in MdsCmprs

If subtraction overflows 32 bit 2's compliment, then put in the
flag value.

Previous fix just checked for 0x80000000 (INT_MIN) which some compilers
did not compare well.  Now check for any unexpected change of sign.


add annother test case for compression

Ted G's doubles that were compressing badly due to integer overflow.

Note:
  Data in testing tree should have been not compress_on_put, but it was.
  re-wrote the data in the .compression:* nodes all as not c_on_p

Note Note:
  At least this new test case does not fail even before this fix to the
  code.  This is probably due to integer overflow not returning consistent
  results.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,514,2016-05-26T14:41:32Z,2016-05-26T15:57:37Z,2016-06-10T20:01:35Z,MERGED,True,3,3,1,https://github.com/joshStillerman,"Use int64_t instead of long long, and change INT_MIN comparison",1,[],https://github.com/MDSplus/mdsplus/pull/514,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/514,"int64_t is more explicit than long long
Change ans < INT_MIN  to ans < -INT_MAX(numerically)
this avoids comaring to 0x80000000 which we have run into trouble
with before.","int64_t is more explicit than long long
Change ans < INT_MIN  to ans < -INT_MAX(numerically)
this avoids comaring to 0x80000000 which we have run into trouble
with before.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,516,2016-05-27T13:06:27Z,2016-05-27T14:07:17Z,2016-06-10T17:40:03Z,MERGED,True,60,54,1,https://github.com/joshStillerman,Updates to import and stored witdh of frames,1,[],https://github.com/MDSplus/mdsplus/pull/516,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/516,"move import PythonForPicam inside acquire method
use the camera width (or the roi width) for the width of the stored data.","move import PythonForPicam inside acquire method
use the camera width (or the roi width) for the width of the stored data.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,517,2016-05-27T14:08:43Z,2016-05-27T15:36:39Z,2016-06-10T17:39:09Z,MERGED,True,1861,639,64,https://github.com/tfredian,Twfbld,40,[],https://github.com/MDSplus/mdsplus/pull/517,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/517,Complete new set of build scripts for making releases and pull request testing.,Complete new set of build scripts for making releases and pull request testing.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,518,2016-05-27T19:30:24Z,2016-05-28T15:38:46Z,2016-06-10T17:39:05Z,MERGED,True,6,3,4,https://github.com/tfredian,Add GIT_COMMIT info to show version and format output,1,[],https://github.com/MDSplus/mdsplus/pull/518,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/518,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,518,2016-05-27T19:30:24Z,2016-05-28T15:38:46Z,2016-06-10T17:39:05Z,MERGED,True,6,3,4,https://github.com/tfredian,Add GIT_COMMIT info to show version and format output,1,[],https://github.com/MDSplus/mdsplus/pull/518,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/518#issuecomment-222245357,,Sorry for all the open and close on this pull request. I made some changes to the pull-request-test job and trying to get it to work. Hopefully will only need to do it again one more time!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,518,2016-05-27T19:30:24Z,2016-05-28T15:38:46Z,2016-06-10T17:39:05Z,MERGED,True,6,3,4,https://github.com/tfredian,Add GIT_COMMIT info to show version and format output,1,[],https://github.com/MDSplus/mdsplus/pull/518,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/518#issuecomment-222247050,,start test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,519,2016-05-28T15:41:35Z,2016-05-29T00:17:46Z,2016-05-29T00:17:51Z,MERGED,True,8,1,1,https://github.com/tfredian,Add --testrelease option,1,[],https://github.com/MDSplus/mdsplus/pull/519,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/519,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,519,2016-05-28T15:41:35Z,2016-05-29T00:17:46Z,2016-05-29T00:17:51Z,MERGED,True,8,1,1,https://github.com/tfredian,Add --testrelease option,1,[],https://github.com/MDSplus/mdsplus/pull/519,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/519#issuecomment-222318328,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,520,2016-05-28T16:23:41Z,2016-05-29T00:18:30Z,2016-05-29T00:18:37Z,MERGED,True,2,2,1,https://github.com/tfredian,"Allow for no test,release or publish option. NOOP",1,[],https://github.com/MDSplus/mdsplus/pull/520,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/520,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,520,2016-05-28T16:23:41Z,2016-05-29T00:18:30Z,2016-05-29T00:18:37Z,MERGED,True,2,2,1,https://github.com/tfredian,"Allow for no test,release or publish option. NOOP",1,[],https://github.com/MDSplus/mdsplus/pull/520,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/520#issuecomment-222318316,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,521,2016-06-07T14:31:38Z,2016-06-09T18:37:05Z,2016-06-09T18:37:05Z,CLOSED,False,0,2,1,https://github.com/zack-vii,"record attribute should return GetNci's ""record""",1,[],https://github.com/MDSplus/mdsplus/pull/521,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/521,otherwise it is misleading,otherwise it is misleading,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,521,2016-06-07T14:31:38Z,2016-06-09T18:37:05Z,2016-06-09T18:37:05Z,CLOSED,False,0,2,1,https://github.com/zack-vii,"record attribute should return GetNci's ""record""",1,[],https://github.com/MDSplus/mdsplus/pull/521,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/521#issuecomment-224909014,otherwise it is misleading,"Unless you discovered some case where the current implementation behaves differently than using getnci(node,""record"") I'm not sure we necessary want to change this. In fact when I get the opportunity to refactor some of the python code I had intended to avoid the use of TDI's getnci entirely. The implementation of TDI's getnci(node,""record""), I believe, is to just call TreeShr->TreeGetRecord to return the data stored in the node so the current python implementation avoids the extra tdi layer of the code.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,521,2016-06-07T14:31:38Z,2016-06-09T18:37:05Z,2016-06-09T18:37:05Z,CLOSED,False,0,2,1,https://github.com/zack-vii,"record attribute should return GetNci's ""record""",1,[],https://github.com/MDSplus/mdsplus/pull/521,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/521#issuecomment-224977561,otherwise it is misleading,"Oh getData() is actually not the same as data() , so the confusion was only on my part. thinking of it would it make sense to turn the attributes into properties since the getter and setter functions are already there?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,521,2016-06-07T14:31:38Z,2016-06-09T18:37:05Z,2016-06-09T18:37:05Z,CLOSED,False,0,2,1,https://github.com/zack-vii,"record attribute should return GetNci's ""record""",1,[],https://github.com/MDSplus/mdsplus/pull/521,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/521#issuecomment-224985358,otherwise it is misleading,"Unfortunately I probably used the wrong name for the getData method which is easily confused with data(). The data() method was intended to return the data as a native numpy scalar or array. My fault but probably too late to change as it may break existing user code. I agree turning many of these ""attributes"" into properties would be much better. Perhaps it makes sense to make note of this and incorporate it into the refactoring of the python code. Unfortunately much of this was developed when I was just started learning python so there are many places where it could be improved. If you have the time when I begin the rewrite I'll make a new branch and do a first pass and then ask you to look over it and we could work on it together.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,521,2016-06-07T14:31:38Z,2016-06-09T18:37:05Z,2016-06-09T18:37:05Z,CLOSED,False,0,2,1,https://github.com/zack-vii,"record attribute should return GetNci's ""record""",1,[],https://github.com/MDSplus/mdsplus/pull/521,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/521#issuecomment-224987050,otherwise it is misleading,"If I have the time, I am happy to do so.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,522,2016-06-09T19:31:09Z,2016-06-09T21:09:24Z,2016-06-10T17:40:01Z,CLOSED,False,100,100,1,https://github.com/joshStillerman,re-indent so it is readable,1,[],https://github.com/MDSplus/mdsplus/pull/522,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/522,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,523,2016-06-10T14:59:52Z,2016-06-10T15:30:51Z,2016-06-10T17:39:04Z,MERGED,True,30,4675,27,https://github.com/tfredian,Cleanup obsolete deploy scripts and add --pypi to trigger.sh,1,[],https://github.com/MDSplus/mdsplus/pull/523,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/523,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,524,2016-06-10T18:11:08Z,2016-06-10T19:46:54Z,2016-06-10T20:01:12Z,MERGED,True,139470,45956,1344,https://github.com/tfredian,Twf promote alpha,2402,[],https://github.com/MDSplus/mdsplus/pull/524,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/524,Promote current alpha branch to stable.,Promote current alpha branch to stable.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,524,2016-06-10T18:11:08Z,2016-06-10T19:46:54Z,2016-06-10T20:01:12Z,MERGED,True,139470,45956,1344,https://github.com/tfredian,Twf promote alpha,2402,[],https://github.com/MDSplus/mdsplus/pull/524,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/524#issuecomment-225277203,Promote current alpha branch to stable.,test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,525,2016-06-10T19:14:27Z,2016-06-10T20:00:04Z,2016-06-10T20:01:10Z,MERGED,True,49,0,1,https://github.com/tfredian,Add testing to macosx,1,[],https://github.com/MDSplus/mdsplus/pull/525,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/525,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,526,2016-06-13T12:46:19Z,2016-06-13T14:22:00Z,2016-06-13T16:55:15Z,MERGED,True,145,156,1,https://github.com/zack-vii,update of QC9200,1,[],https://github.com/MDSplus/mdsplus/pull/526,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/526,added Test action Node as used at OP1.1 at W7X,added Test action Node as used at OP1.1 at W7X,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,526,2016-06-13T12:46:19Z,2016-06-13T14:22:00Z,2016-06-13T16:55:15Z,MERGED,True,145,156,1,https://github.com/zack-vii,update of QC9200,1,[],https://github.com/MDSplus/mdsplus/pull/526,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/526#issuecomment-225572772,added Test action Node as used at OP1.1 at W7X,requires  #527,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,527,2016-06-13T12:47:32Z,2016-06-13T14:21:13Z,2016-06-13T16:54:47Z,MERGED,True,12,2,1,https://github.com/zack-vii,retry disabling node on TreeLOCK_FAILURE,1,[],https://github.com/MDSplus/mdsplus/pull/527,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/527,retry (required eg. if device parts list contains 'disabled' option,retry (required eg. if device parts list contains 'disabled' option,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,528,2016-06-13T12:50:04Z,2016-06-13T14:21:36Z,2016-06-13T16:54:25Z,MERGED,True,3,2,1,https://github.com/zack-vii,return device in Add,1,[],https://github.com/MDSplus/mdsplus/pull/528,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/528,makes thing a lot easier when adding customized devices,makes thing a lot easier when adding customized devices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,529,2016-06-13T12:52:28Z,2016-06-13T14:41:14Z,2016-06-13T16:54:08Z,MERGED,True,11,0,1,https://github.com/zack-vii,conversion for Uint64 date to/from python's time,1,[],https://github.com/MDSplus/mdsplus/pull/529,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/529,convert between seconds since 01/01/1970 and the MDSplus time base,convert between seconds since 01/01/1970 and the MDSplus time base,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,529,2016-06-13T12:52:28Z,2016-06-13T14:41:14Z,2016-06-13T16:54:08Z,MERGED,True,11,0,1,https://github.com/zack-vii,conversion for Uint64 date to/from python's time,1,[],https://github.com/MDSplus/mdsplus/pull/529,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/529#issuecomment-225572624,convert between seconds since 01/01/1970 and the MDSplus time base,"requires verification:

independent of time zone -> _utc1
correct mapping  -> _utc0",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,530,2016-06-13T13:53:00Z,2016-06-13T15:08:17Z,2016-09-01T12:48:23Z,MERGED,True,1,1,1,https://github.com/joshStillerman,calling PyLongAsLong on some 32 bit platforms returns 0xffffffff,1,[],https://github.com/MDSplus/mdsplus/pull/530,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/530,"On some 32 bit systems calling PyLongAsLong to  convert a python Long to a LONG that is then
cast as a pointer to descriptor return 0xFFFFFFFF.
PyLong_AsVoidPtr however does the right thing on both 32 and 64 bit platforms.","On some 32 bit systems calling PyLongAsLong to  convert a python Long to a LONG that is then
cast as a pointer to descriptor return 0xFFFFFFFF.
PyLong_AsVoidPtr however does the right thing on both 32 and 64 bit platforms.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,531,2016-06-13T15:23:02Z,2016-06-13T15:26:15Z,2016-09-01T12:48:24Z,CLOSED,False,2,2,2,https://github.com/joshStillerman,Jas stable fix 32bit tdi to python,483,[],https://github.com/MDSplus/mdsplus/pull/531,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/531,"I tried to branch from stable and then cherry pick push and merge.  I am going to make the pull request, but don’t think you should merge it.  For some reason it is saying there is too much history to even show, yet, it is only saying 2 files have changed.","I tried to branch from stable and then cherry pick push and merge.  I am going to make the pull request, but don’t think you should merge it.  For some reason it is saying there is too much history to even show, yet, it is only saying 2 files have changed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,532,2016-06-13T15:28:16Z,2016-06-13T18:01:15Z,2016-09-01T12:48:24Z,MERGED,True,1,1,1,https://github.com/joshStillerman,calling PyLongAsLong on some 32 bit platforms returns 0xffffffff,1,[],https://github.com/MDSplus/mdsplus/pull/532,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/532,"On some 32 bit systems calling PyLongAsLong to  convert a python Long to a LONG that is then
cast as a pointer to descriptor return 0xFFFFFFFF.
PyLong_AsVoidPtr however does the right thing on both 32 and 64 bit platforms.","On some 32 bit systems calling PyLongAsLong to  convert a python Long to a LONG that is then
cast as a pointer to descriptor return 0xFFFFFFFF.
PyLong_AsVoidPtr however does the right thing on both 32 and 64 bit platforms.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,533,2016-06-13T16:53:40Z,2016-06-13T18:19:18Z,2016-06-13T18:21:53Z,CLOSED,False,3,0,1,https://github.com/zack-vii,add 'tags' to Device.Add,1,[],https://github.com/MDSplus/mdsplus/pull/533,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/533,allows to auto add tags to device nodes,allows to auto add tags to device nodes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,533,2016-06-13T16:53:40Z,2016-06-13T18:19:18Z,2016-06-13T18:21:53Z,CLOSED,False,3,0,1,https://github.com/zack-vii,add 'tags' to Device.Add,1,[],https://github.com/MDSplus/mdsplus/pull/533,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/533#issuecomment-225646561,allows to auto add tags to device nodes,I don't think it is a good idea to define tags in a device implementation. This would make it impossible to add more than one instance of a device with tags defined in a single tree and would also make the tags ambiguous if multiple subtrees contain one of these devices. Even if you made the tag name some expression of the head node of the device it could cause tag duplication problems if the same node name was used when adding multiple instances of the same device type to a tree.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,533,2016-06-13T16:53:40Z,2016-06-13T18:19:18Z,2016-06-13T18:21:53Z,CLOSED,False,3,0,1,https://github.com/zack-vii,add 'tags' to Device.Add,1,[],https://github.com/MDSplus/mdsplus/pull/533,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/533#issuecomment-225664874,allows to auto add tags to device nodes,hm.. true,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,534,2016-06-14T18:25:54Z,2016-06-15T08:37:18Z,2016-06-15T08:37:18Z,MERGED,True,11,10,1,https://github.com/zack-vii,updated defaults and trend fix (private ctx),1,[],https://github.com/MDSplus/mdsplus/pull/534,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/534,"Tree.usePrivateCtx(True) prevents current tree mixup
Is this how you should use it?","Tree.usePrivateCtx(True) prevents current tree mixup
Is this how you should use it?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,536,2016-06-16T14:32:53Z,2016-06-16T15:03:11Z,2016-06-16T19:11:39Z,MERGED,True,8,2,1,https://github.com/tfredian,Fix fromTime implementation to work with python3. Python3 does not su…,1,[],https://github.com/MDSplus/mdsplus/pull/536,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/536,…pport the trailing L syntax on integer values.,…pport the trailing L syntax on integer values.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,537,2016-06-16T15:04:02Z,2016-06-16T15:29:59Z,2016-06-16T19:11:38Z,MERGED,True,18,6,2,https://github.com/tfredian,Twf fix for nonrelease version handling,2,[],https://github.com/MDSplus/mdsplus/pull/537,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/537,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,538,2016-06-16T15:31:14Z,2016-06-16T15:55:48Z,2016-06-16T19:11:28Z,MERGED,True,18,6,2,https://github.com/tfredian,Fix release version handling,1,[],https://github.com/MDSplus/mdsplus/pull/538,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/538,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,539,2016-06-16T15:56:56Z,2016-06-16T16:55:24Z,2016-06-16T19:11:26Z,MERGED,True,0,20,6,https://github.com/tfredian,Remove obsolete tdi functions mentioned in https://github.com/MDSplus…,1,[],https://github.com/MDSplus/mdsplus/pull/539,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/539,…//issues/535,…//issues/535,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,540,2016-06-16T17:34:24Z,2016-06-16T18:16:52Z,2016-06-16T19:11:22Z,MERGED,True,4,3,1,https://github.com/tfredian,Do not prepend library prefix to library string if library string con…,1,[],https://github.com/MDSplus/mdsplus/pull/540,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/540,…tains a full file spec,…tains a full file spec,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,541,2016-06-16T17:34:49Z,2016-06-16T18:32:06Z,2016-06-16T19:11:25Z,MERGED,True,4,3,1,https://github.com/tfredian,Do not prepend library prefix to library string if library string con…,1,[],https://github.com/MDSplus/mdsplus/pull/541,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/541,…tains a full file spec,…tains a full file spec,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,542,2016-06-20T16:13:48Z,2016-06-20T17:05:48Z,2016-09-01T12:48:25Z,MERGED,True,1,1,1,https://github.com/joshStillerman,test for unused wires prevented PXI output of internal clock,1,[],https://github.com/MDSplus/mdsplus/pull/542,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/542,"The test which decided a wire was unused, and no routing commands should be issued
was checking if the source was fpga.  It turns out that in order to get the
internal clock out the back on a PXI line, the source for the clock output must be
fpga.","The test which decided a wire was unused, and no routing commands should be issued
was checking if the source was fpga.  It turns out that in order to get the
internal clock out the back on a PXI line, the source for the clock output must be
fpga.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,543,2016-06-22T15:28:19Z,2016-06-22T18:54:14Z,2016-06-22T18:58:38Z,MERGED,True,10,0,2,https://github.com/zack-vii,added dir function to tree and treenode,1,[],https://github.com/MDSplus/mdsplus/pull/543,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/543,allows easier browsing,allows easier browsing,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,543,2016-06-22T15:28:19Z,2016-06-22T18:54:14Z,2016-06-22T18:58:38Z,MERGED,True,10,0,2,https://github.com/zack-vii,added dir function to tree and treenode,1,[],https://github.com/MDSplus/mdsplus/pull/543,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/543#issuecomment-227843715,allows easier browsing,"Cool -
Should we add more of these?  Like
showData (TCL> show data)
-josh
On 6/22/16 2:54 PM, Tom Fredian wrote:

Merged #543 #543.
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#543 (comment), or mute
the thread
https://github.com/notifications/unsubscribe/AHHQZWZ4XBz3BLOu5qo3EHSd9EFihXVMks5qOYTWgaJpZM4I76Rk.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,544,2016-06-23T13:58:01Z,2016-06-24T17:44:28Z,2016-06-24T17:44:34Z,MERGED,True,5,3,1,https://github.com/joshStillerman,Twf fix mdsshr get set env,2,[],https://github.com/MDSplus/mdsplus/pull/544,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/544,"Added one more fix to this module, could not figure out how to squash the commit.  Probably had to do it before I pushed.","Added one more fix to this module, could not figure out how to squash the commit.  Probably had to do it before I pushed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,544,2016-06-23T13:58:01Z,2016-06-24T17:44:28Z,2016-06-24T17:44:34Z,MERGED,True,5,3,1,https://github.com/joshStillerman,Twf fix mdsshr get set env,2,[],https://github.com/MDSplus/mdsplus/pull/544,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/544#issuecomment-228402226,"Added one more fix to this module, could not figure out how to squash the commit.  Probably had to do it before I pushed.",Closing and opening to trigger a retest. Request test failed on a udp events test which happens intermittently.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,545,2016-06-24T20:05:54Z,2016-06-25T14:24:52Z,2016-09-01T12:48:27Z,MERGED,True,5,3,1,https://github.com/joshStillerman,Fix getenv and setenv for python3 use,1,[],https://github.com/MDSplus/mdsplus/pull/545,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/545,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,546,2016-06-29T16:48:55Z,2016-06-30T14:47:08Z,2016-07-01T00:56:46Z,MERGED,True,1,1,1,https://github.com/zack-vii,typo in constant definitions,1,[],https://github.com/MDSplus/mdsplus/pull/546,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/546,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,546,2016-06-29T16:48:55Z,2016-06-30T14:47:08Z,2016-07-01T00:56:46Z,MERGED,True,1,1,1,https://github.com/zack-vii,typo in constant definitions,1,[],https://github.com/MDSplus/mdsplus/pull/546,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/546#issuecomment-229443608,,"failed on
No 32-bit support for sanitize=thread. Skipping.

=================================================================

Failure: 64-bit santize with address failed

=================================================================

should not be related to the changes.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,546,2016-06-29T16:48:55Z,2016-06-30T14:47:08Z,2016-07-01T00:56:46Z,MERGED,True,1,1,1,https://github.com/zack-vii,typo in constant definitions,1,[],https://github.com/MDSplus/mdsplus/pull/546,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/546#issuecomment-229443940,,yes. We're investigating.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,546,2016-06-29T16:48:55Z,2016-06-30T14:47:08Z,2016-07-01T00:56:46Z,MERGED,True,1,1,1,https://github.com/zack-vii,typo in constant definitions,1,[],https://github.com/MDSplus/mdsplus/pull/546,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/546#issuecomment-229444213,,"I rebased the branch, just in case",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,546,2016-06-29T16:48:55Z,2016-06-30T14:47:08Z,2016-07-01T00:56:46Z,MERGED,True,1,1,1,https://github.com/zack-vii,typo in constant definitions,1,[],https://github.com/MDSplus/mdsplus/pull/546,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/546#issuecomment-229607992,,I assume the test itself or the test environment is buggy.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,546,2016-06-29T16:48:55Z,2016-06-30T14:47:08Z,2016-07-01T00:56:46Z,MERGED,True,1,1,1,https://github.com/zack-vii,typo in constant definitions,1,[],https://github.com/MDSplus/mdsplus/pull/546,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/546#issuecomment-229670129,,Turning off the sanitize tests since they seem to be failing when they should not.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,547,2016-06-30T13:00:48Z,2016-06-30T13:38:34Z,2016-07-30T21:42:01Z,CLOSED,False,23,3,3,https://github.com/tfredian,Zack vii zck constant qe,2,[],https://github.com/MDSplus/mdsplus/pull/547,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/547,Attempt to suppress memory leak detection in threadsafe code which for some reason started showing up when making a minor change to a numeric constant in pull request #546,Attempt to suppress memory leak detection in threadsafe code which for some reason started showing up when making a minor change to a numeric constant in pull request #546,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,548,2016-06-30T13:20:29Z,2016-06-30T16:23:46Z,2016-06-30T16:23:46Z,MERGED,True,7779,372,40,https://github.com/GabrieleManduchi,Add shot number in URL for WebScope,5,[],https://github.com/MDSplus/mdsplus/pull/548,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/548,"Allow shot number be defined optionally in the URL which can be of the form
http://l/mdsplusWsgi/scope?config=&shot=","Allow shot number be defined optionally in the URL which can be of the form
http://l/mdsplusWsgi/scope?config=&shot=",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,549,2016-06-30T16:09:03Z,2016-06-30T18:03:20Z,2016-06-30T18:03:24Z,CLOSED,False,1,0,1,https://github.com/tfredian,Suppress errors from ThreadStatic routines with sanitize=address,1,[],https://github.com/MDSplus/mdsplus/pull/549,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/549,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,550,2016-06-30T18:04:25Z,2016-06-30T18:08:25Z,2016-06-30T18:08:29Z,CLOSED,False,3,0,1,https://github.com/tfredian,Suppress errors from ThreadStatic routines with sanitize=address,2,[],https://github.com/MDSplus/mdsplus/pull/550,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/550,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,551,2016-06-30T18:21:20Z,2016-07-01T11:54:55Z,2016-07-01T11:55:01Z,CLOSED,False,3,11,2,https://github.com/tfredian,Twf fix tree set nci.c and fix suppression,2,[],https://github.com/MDSplus/mdsplus/pull/551,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/551,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,552,2016-06-30T20:47:31Z,2016-06-30T22:00:01Z,2016-07-05T16:51:58Z,MERGED,True,361,7751,37,https://github.com/tfredian,"Revert ""remove race conditiopn when opening trees in java mdsobjects""",1,[],https://github.com/MDSplus/mdsplus/pull/552,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/552,This reverts commit b932f1a.,This reverts commit b932f1a.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,553,2016-07-01T01:03:15Z,2016-07-01T08:20:10Z,2016-07-04T14:46:16Z,MERGED,True,1,4,1,https://github.com/zack-vii,fixed TreeRemoveNodesTags return value,1,[],https://github.com/MDSplus/mdsplus/pull/553,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/553,it should return TreeNormal instead of TreeTNF on success,it should return TreeNormal instead of TreeTNF on success,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,554,2016-07-01T12:04:23Z,2016-07-01T12:29:07Z,2016-07-01T12:29:15Z,MERGED,True,3,0,1,https://github.com/tfredian,Add thread safe and trace to sanitize suppressions,1,[],https://github.com/MDSplus/mdsplus/pull/554,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/554,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,555,2016-07-01T12:33:38Z,2016-07-01T12:58:39Z,2016-07-01T12:58:44Z,MERGED,True,3,0,1,https://github.com/tfredian,Add thread safe and trace to sanitize suppressions,1,[],https://github.com/MDSplus/mdsplus/pull/555,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/555,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,556,2016-07-04T13:52:17Z,2016-07-05T13:15:06Z,2016-07-05T13:15:06Z,MERGED,True,12,0,1,https://github.com/GabrieleManduchi,Remove race condition in mdsobjects java tree open,2,[],https://github.com/MDSplus/mdsplus/pull/556,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/556,I really hope not to make a mess again................................,I really hope not to make a mess again................................,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,559,2016-07-04T18:28:12Z,2016-07-05T13:16:42Z,2016-07-08T17:40:12Z,MERGED,True,1,3,1,https://github.com/zack-vii,use length field for length for all other dtypes,1,[],https://github.com/MDSplus/mdsplus/pull/559,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/559,"allows to send more dtypes correctly e.g. pointers
could not test it since the docker engine does not work","allows to send more dtypes correctly e.g. pointers
could not test it since the docker engine does not work",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,559,2016-07-04T18:28:12Z,2016-07-05T13:16:42Z,2016-07-08T17:40:12Z,MERGED,True,1,3,1,https://github.com/zack-vii,use length field for length for all other dtypes,1,[],https://github.com/MDSplus/mdsplus/pull/559,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/559#issuecomment-230356923,"allows to send more dtypes correctly e.g. pointers
could not test it since the docker engine does not work",compiled it for unix 64 and it works.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,560,2016-07-04T21:42:53Z,2016-07-05T13:17:58Z,2016-07-08T17:40:08Z,MERGED,True,1,1,1,https://github.com/zack-vii,ensure consistent behavior on different platforms,1,[],https://github.com/MDSplus/mdsplus/pull/560,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/560,"%p results in different outputs on unix and windows systems
Windows64: Pointer(0000000000000000)
Unix:      Pointer(nil)

Windows64: Pointer(0001234567890ABC)
Unix:      Pointer(0x1234567890abc)","%p results in different outputs on unix and windows systems
Windows64: Pointer(0000000000000000)
Unix:      Pointer(nil)

Windows64: Pointer(0001234567890ABC)
Unix:      Pointer(0x1234567890abc)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,560,2016-07-04T21:42:53Z,2016-07-05T13:17:58Z,2016-07-08T17:40:08Z,MERGED,True,1,1,1,https://github.com/zack-vii,ensure consistent behavior on different platforms,1,[],https://github.com/MDSplus/mdsplus/pull/560,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/560#issuecomment-230357086,"%p results in different outputs on unix and windows systems
Windows64: Pointer(0000000000000000)
Unix:      Pointer(nil)

Windows64: Pointer(0001234567890ABC)
Unix:      Pointer(0x1234567890abc)",I compiled it on unix64 and it works,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,562,2016-07-05T16:24:11Z,2016-07-05T16:51:12Z,2016-07-05T16:51:15Z,MERGED,True,1,0,1,https://github.com/tfredian,Missing TreeUnLockNci call in _TreeBeginTimestampedSegment,2,[],https://github.com/MDSplus/mdsplus/pull/562,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/562,Prevent thread lock problem with timestamped segments. NCI was not getting properly unlockaed in _TreeBeginTimestampedSegment.,Prevent thread lock problem with timestamped segments. NCI was not getting properly unlockaed in _TreeBeginTimestampedSegment.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,563,2016-07-06T20:17:21Z,2016-07-06T20:50:12Z,2016-08-31T12:08:26Z,MERGED,True,13,0,3,https://github.com/tfredian,Add optional image property on command definitions to enable commands…,1,[],https://github.com/MDSplus/mdsplus/pull/563,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/563,"… to specify a different shared library where the command execution function is found.
This fixes issue #515","… to specify a different shared library where the command execution function is found.
This fixes issue #515",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,564,2016-07-07T14:20:15Z,2016-07-07T14:44:58Z,2016-07-07T14:44:58Z,MERGED,True,468,284,3,https://github.com/GabrieleManduchi,LastFixes for SPIDER Site Acceptance Test,1,[],https://github.com/MDSplus/mdsplus/pull/564,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/564,"Diff checked, all OK!!","Diff checked, all OK!!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,565,2016-07-07T17:58:42Z,2016-07-07T18:27:30Z,2016-07-08T17:40:04Z,MERGED,True,15,5,2,https://github.com/zack-vii,Allow ReadOnly flag in tdi TreeOpen and enable mode in connection,1,[],https://github.com/MDSplus/mdsplus/pull/565,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/565,allows too open tree remotelly with TreeOpen just like locally with Tree,allows too open tree remotelly with TreeOpen just like locally with Tree,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,567,2016-07-07T19:20:22Z,2016-07-07T19:44:59Z,2016-07-07T19:45:06Z,MERGED,True,1,0,1,https://github.com/tfredian,Return a 0 status when exit command issued,1,[],https://github.com/MDSplus/mdsplus/pull/567,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/567,This is a fix for issue #566,This is a fix for issue #566,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,568,2016-07-08T14:44:07Z,2016-07-08T16:30:54Z,2016-07-08T16:53:11Z,MERGED,True,68,0,1,https://github.com/zack-vii,added tdi function that attempts to collect available shot numbers,2,[],https://github.com/MDSplus/mdsplus/pull/568,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/568,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,568,2016-07-08T14:44:07Z,2016-07-08T16:30:54Z,2016-07-08T16:53:11Z,MERGED,True,68,0,1,https://github.com/zack-vii,added tdi function that attempts to collect available shot numbers,2,[],https://github.com/MDSplus/mdsplus/pull/568,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/568#issuecomment-231386970,,Good idea! Need to retest because of intermittent udpevent test failure.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,568,2016-07-08T14:44:07Z,2016-07-08T16:30:54Z,2016-07-08T16:53:11Z,MERGED,True,68,0,1,https://github.com/zack-vii,added tdi function that attempts to collect available shot numbers,2,[],https://github.com/MDSplus/mdsplus/pull/568,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/568#issuecomment-231390362,,"I tried this on C-Mod but we use the shot number digit substitution feature in our archived shots to reduce the number of shots per directory as well as using ~t for the tree names. For example:
cmod_path=alcdata-test::/cmod/trees/test/~t/;alcdata-new::/cmod/trees/new/~t/;alcdata-models::/cmod/trees/models/~t/;/cmod/trees/archives/ih/gf/ed/~t;alcdata-saved::/cmod/trees/saved/~t/
spectroscopy_path=alcdata-test::/cmod/trees/test/~t/;alcdata-new::/cmod/trees/new/~t/;alcdata-models::/cmod/trees/models/~t/;/cmod/trees/archives/ih/gf/ed/~t;alcdata-saved::/cmod/trees/saved/~t/
This might be tricky to deal with though not impossible.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,568,2016-07-08T14:44:07Z,2016-07-08T16:30:54Z,2016-07-08T16:53:11Z,MERGED,True,68,0,1,https://github.com/zack-vii,added tdi function that attempts to collect available shot numbers,2,[],https://github.com/MDSplus/mdsplus/pull/568,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/568#issuecomment-231400790,,hm well this could of course be improved I am not too familiar with the ~replacements. We could merge this and eventually add the support for ~ihgfedcba later. it could probably been dealt with recursively. is it the digits of the shotnumber?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,568,2016-07-08T14:44:07Z,2016-07-08T16:30:54Z,2016-07-08T16:53:11Z,MERGED,True,68,0,1,https://github.com/zack-vii,added tdi function that attempts to collect available shot numbers,2,[],https://github.com/MDSplus/mdsplus/pull/568,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/568#issuecomment-231407107,,Yes these are the digits of the shot number. Will merge this version though and we can see about adding the digit substitution in an enhanced version.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,569,2016-07-08T18:35:33Z,2016-07-08T19:48:32Z,2016-07-08T19:48:34Z,MERGED,True,0,1,1,https://github.com/tfredian,Fix attempt to free memory allocated by alloca in create pulse code w…,2,[],https://github.com/MDSplus/mdsplus/pull/569,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/569,"…hen handling special options such as include,exclude,nomain","…hen handling special options such as include,exclude,nomain",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,570,2016-07-08T18:40:45Z,2016-07-08T19:24:39Z,2016-07-08T19:48:23Z,MERGED,True,0,1,1,https://github.com/tfredian,Fix attempt to free memory allocated by alloca in create pulse code w…,1,[],https://github.com/MDSplus/mdsplus/pull/570,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/570,"…hen handling special options such as include,exclude,nomain","…hen handling special options such as include,exclude,nomain",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,571,2016-07-18T12:50:16Z,2016-07-18T13:40:35Z,2016-09-01T12:48:28Z,MERGED,True,0,1,1,https://github.com/joshStillerman,remove complaint about vinNidOffset - there is no widget for this,1,[],https://github.com/MDSplus/mdsplus/pull/571,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/571,"This parameter was added to the digChansWidget creation with an eye towards having a pull down
menu for the gains.  Never implemented. Been complaining since day 1.","This parameter was added to the digChansWidget creation with an eye towards having a pull down
menu for the gains.  Never implemented. Been complaining since day 1.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,573,2016-07-26T10:35:39Z,2016-07-26T14:35:46Z,2017-09-06T07:40:59Z,CLOSED,False,4824,0,723,https://github.com/GabrieleManduchi,Added support for conenction put signal,1,[],https://github.com/MDSplus/mdsplus/pull/573,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/573,A new directory MDSplus_LV2015 has been added to mdsobjects/labview in order to avoid breaking the previous set of LabVIEW VIs.  This new directory contains the required VIs for writing a signal via Connection object.,A new directory MDSplus_LV2015 has been added to mdsobjects/labview in order to avoid breaking the previous set of LabVIEW VIs.  This new directory contains the required VIs for writing a signal via Connection object.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,573,2016-07-26T10:35:39Z,2016-07-26T14:35:46Z,2017-09-06T07:40:59Z,CLOSED,False,4824,0,723,https://github.com/GabrieleManduchi,Added support for conenction put signal,1,[],https://github.com/MDSplus/mdsplus/pull/573,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/573#issuecomment-235248901,A new directory MDSplus_LV2015 has been added to mdsobjects/labview in order to avoid breaking the previous set of LabVIEW VIs.  This new directory contains the required VIs for writing a signal via Connection object.,"I assume this pull request will add quite a few new files to the installation kits which makes it a good time to inform you about one feature of the new build scripts. When a new release is created, the contents of the rpm's and deb's are checked against the expected contents listed in files found in deploy/packaging/debian|redhat. If you add or remove files from the installation kits you will need to update these files to match what you expect to see in the installers. This can be done manually but it is best to let the build script do it instead. You will need docker running on your system and then issue the following commands:
$ srcdir/deploy/build.sh --os=fc22 --release --updatepkg                   # chose a supported redhat os
$ srcdir/deploy/build.sh --os=ubuntu14 --release --updatepkg          # chose a supported debian os
These commands will build release kits and update the packaging verification files. You can use git diff on these files to make sure the changes are what you anticipated. The changes to these verification files will need to included in the pull request or the builds of new release installer kits will fail since the installer content check will produce an error.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,576,2016-07-29T10:52:06Z,2016-07-30T21:39:34Z,2016-07-30T21:43:07Z,CLOSED,False,278,319,5,https://github.com/zack-vii,Decompile Q and QU as decimal strings human readable,5,[],https://github.com/MDSplus/mdsplus/pull/576,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/576,"using formula ""length * 8 * .29 + 2"" works for 8,16,32,64, bit integers
size:  4, 6, 11, 20, 39
expanding for 128bit integer would require a special treatment of O and OU i.e. +1","using formula ""length * 8 * .29 + 2"" works for 8,16,32,64, bit integers
size:  4, 6, 11, 20, 39
expanding for 128bit integer would require a special treatment of O and OU i.e. +1",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,576,2016-07-29T10:52:06Z,2016-07-30T21:39:34Z,2016-07-30T21:43:07Z,CLOSED,False,278,319,5,https://github.com/zack-vii,Decompile Q and QU as decimal strings human readable,5,[],https://github.com/MDSplus/mdsplus/pull/576,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/576#issuecomment-236221925,"using formula ""length * 8 * .29 + 2"" works for 8,16,32,64, bit integers
size:  4, 6, 11, 20, 39
expanding for 128bit integer would require a special treatment of O and OU i.e. +1","Is the rest due to the fact, that the output has changed. if this commit does not break other stuff I would like to have it sorted out with the test. human readable form of uint64 timestamps is so much better than the hex form.
any comments?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,576,2016-07-29T10:52:06Z,2016-07-30T21:39:34Z,2016-07-30T21:43:07Z,CLOSED,False,278,319,5,https://github.com/zack-vii,Decompile Q and QU as decimal strings human readable,5,[],https://github.com/MDSplus/mdsplus/pull/576,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/576#issuecomment-236225559,"using formula ""length * 8 * .29 + 2"" works for 8,16,32,64, bit integers
size:  4, 6, 11, 20, 39
expanding for 128bit integer would require a special treatment of O and OU i.e. +1",If you change the behavior of MDSplus then you also need to change the tests that depend on the current behavior. While this change is unlikely to cause problems for existing user applications we try to not change existing behavior unless the existing behavior is a bug or there is a very compelling reason to do so. If you click on the details button of the tests you'll get to the jenkins pull request test that failed which contains links to the triggered builds from that trigger job. If you look at the console output of those jobs you'll see which tests failed. Alternatively you can make; make -k tests to test locally.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,576,2016-07-29T10:52:06Z,2016-07-30T21:39:34Z,2016-07-30T21:43:07Z,CLOSED,False,278,319,5,https://github.com/zack-vii,Decompile Q and QU as decimal strings human readable,5,[],https://github.com/MDSplus/mdsplus/pull/576,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/576#issuecomment-236391365,"using formula ""length * 8 * .29 + 2"" works for 8,16,32,64, bit integers
size:  4, 6, 11, 20, 39
expanding for 128bit integer would require a special treatment of O and OU i.e. +1",replaced by #579,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,577,2016-07-29T11:14:55Z,2016-07-29T11:47:52Z,2016-07-29T11:47:57Z,MERGED,True,1,0,1,https://github.com/zack-vii,skip if result is null,1,[],https://github.com/MDSplus/mdsplus/pull/577,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/577,"should fix issue #575
returns * instead","should fix issue #575
returns * instead",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,578,2016-07-29T14:36:25Z,2016-07-29T15:12:07Z,2016-08-31T12:08:21Z,MERGED,True,45,10,3,https://github.com/tfredian,Prevent destruction of data contained in deleted nodes until the edit…,1,[],https://github.com/MDSplus/mdsplus/pull/578,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/578,"… modifications are written.
This addresses #561
See example below:
TCL> set tree main
TCL> create pulse 1
TCL> set tree main/shot=1
TCL> put member 42
TCL> decompile member
42
TCL> verify
Node summary:
Allocated = 7/14
Free      = 7/14
Other     = 0/14
TCL> edit main/shot=1
TCL> delete node member
TCL> verify
Node summary:
Allocated = 6/14
Free      = 7/14
Other     = 1/14
TCL> close/confirm
TCL> set tree main/shot=1
TCL> decompile member
42
TCL> verify
Node summary:
Allocated = 7/14
Free      = 7/14
Other     = 0/14
TCL> edit main/shot=1
TCL> delete node member
TCL> verify
Node summary:
Allocated = 6/14
Free      = 7/14
Other     = 1/14
TCL> write
TCL> verify
Node summary:
Allocated = 6/14
Free      = 8/14
Other     = 0/14","… modifications are written.
This addresses #561
See example below:
TCL> set tree main
TCL> create pulse 1
TCL> set tree main/shot=1
TCL> put member 42
TCL> decompile member
42
TCL> verify
Node summary:
Allocated = 7/14
Free      = 7/14
Other     = 0/14
TCL> edit main/shot=1
TCL> delete node member
TCL> verify
Node summary:
Allocated = 6/14
Free      = 7/14
Other     = 1/14
TCL> close/confirm
TCL> set tree main/shot=1
TCL> decompile member
42
TCL> verify
Node summary:
Allocated = 7/14
Free      = 7/14
Other     = 0/14
TCL> edit main/shot=1
TCL> delete node member
TCL> verify
Node summary:
Allocated = 6/14
Free      = 7/14
Other     = 1/14
TCL> write
TCL> verify
Node summary:
Allocated = 6/14
Free      = 8/14
Other     = 0/14",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,579,2016-07-30T17:00:09Z,2016-07-30T21:38:57Z,2016-07-30T21:39:02Z,MERGED,True,280,320,5,https://github.com/zack-vii,Zck decompileqandqu alt,3,[],https://github.com/MDSplus/mdsplus/pull/579,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/579,"like #576 but eventually with less warnings
better compatibility","like #576 but eventually with less warnings
better compatibility",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,580,2016-08-01T13:35:36Z,2016-08-01T16:35:13Z,2016-08-01T16:35:13Z,MERGED,True,5,5,2,https://github.com/zack-vii,j is not working on windows so we have to live with the warnings,2,[],https://github.com/MDSplus/mdsplus/pull/580,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/580,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,581,2016-08-02T06:08:57Z,2016-08-02T11:25:48Z,2016-08-08T07:20:20Z,MERGED,True,1,1,1,https://github.com/zack-vii,pointer cast to uint64_t was not returning the address,1,[],https://github.com/MDSplus/mdsplus/pull/581,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/581,sorry for all the tags ;),sorry for all the tags ;),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,583,2016-08-03T21:15:58Z,2016-08-05T14:35:02Z,2016-08-10T12:35:09Z,MERGED,True,2,2,1,https://github.com/kgerickson,mdsshr/MdsCompareXd.c: Remove redundant casts,1,[],https://github.com/MDSplus/mdsplus/pull/583,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/583,"memcmp() takes in a size_t as its last argument, and two instances here were passing in unsigned shorts, but for some reason were being explicitly cast from unsigned short to int before being implicitly cast back to size_t (which is typically unsigned long).  So, remove the explicit casts.","memcmp() takes in a size_t as its last argument, and two instances here were passing in unsigned shorts, but for some reason were being explicitly cast from unsigned short to int before being implicitly cast back to size_t (which is typically unsigned long).  So, remove the explicit casts.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,585,2016-08-04T21:57:06Z,2016-08-11T12:52:28Z,2016-08-11T12:54:40Z,MERGED,True,14,28,3,https://github.com/kgerickson,Kge javamds cleanup,5,[],https://github.com/MDSplus/mdsplus/pull/585,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/585,Fix several warnings that indicated actual bugs with undefined behavior,Fix several warnings that indicated actual bugs with undefined behavior,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,586,2016-08-05T15:00:14Z,2016-08-10T12:06:56Z,2016-09-01T12:48:39Z,MERGED,True,12,2,1,https://github.com/GabrieleManduchi,Fix unitiaized variable retPixelSize,1,[],https://github.com/MDSplus/mdsplus/pull/586,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/586,Fix unitialized retPixelSize variable,Fix unitialized retPixelSize variable,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,587,2016-08-09T00:23:56Z,2016-08-09T10:44:24Z,2016-08-10T12:34:52Z,MERGED,True,306,626,23,https://github.com/kgerickson,Kge javascope cleanup,5,[],https://github.com/MDSplus/mdsplus/pull/587,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/587,"This fixes a bunch of stuff in jScope that was revealed by -Xlint:casts and my own code inspection.  Of particular note is that with the help of some people on IRC, I replaced a big chunk of code with simple calls to the Java library.  I think from what I can see that there are many instances of this kind of thing that can be cleaned up.  Also, there's a huge amount of redundant casting that really obfuscates the code.  I removed almost all of it.","This fixes a bunch of stuff in jScope that was revealed by -Xlint:casts and my own code inspection.  Of particular note is that with the help of some people on IRC, I replaced a big chunk of code with simple calls to the Java library.  I think from what I can see that there are many instances of this kind of thing that can be cleaned up.  Also, there's a huge amount of redundant casting that really obfuscates the code.  I removed almost all of it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,588,2016-08-09T14:59:10Z,2016-08-10T12:04:02Z,2016-08-10T12:34:15Z,MERGED,True,4,4,1,https://github.com/kgerickson,tdishr/TdiMath1.c: Use C math PI constants,1,[],https://github.com/MDSplus/mdsplus/pull/588,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/588,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,589,2016-08-09T15:02:01Z,2016-08-10T12:04:42Z,2016-08-10T12:34:12Z,MERGED,True,1,1,1,https://github.com/kgerickson,treeshr/TdiOpen.c: Fix uninit var,1,[],https://github.com/MDSplus/mdsplus/pull/589,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/589,"nomap could possibly be used uninitialized, so set to zero here","nomap could possibly be used uninitialized, so set to zero here",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,590,2016-08-09T15:04:25Z,2016-08-10T12:05:26Z,2016-08-10T12:34:08Z,MERGED,True,2,8,1,https://github.com/kgerickson,tdishr/TdiCull.c: Remove intermediate status var,1,[],https://github.com/MDSplus/mdsplus/pull/590,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/590,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,591,2016-08-09T15:05:45Z,2016-08-10T12:02:38Z,2016-08-10T12:33:41Z,MERGED,True,1,1,1,https://github.com/kgerickson,tdishr/TdiDim.c: Use universal initializer,1,[],https://github.com/MDSplus/mdsplus/pull/591,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/591,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,592,2016-08-10T12:49:16Z,2016-08-10T17:58:51Z,2016-08-12T13:51:52Z,MERGED,True,117,428,49,https://github.com/kgerickson,Fix bug #574,1,[],https://github.com/MDSplus/mdsplus/pull/592,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/592,"Remove redundant mechanisms to propagate socket libraries, and fix the missing dependency on libws2_32 for windows.  This can be further simplified once we agree that Solaris is no longer supported, as that's the only non-windows OS that doesn't include functions like gethostbyname in libc.","Remove redundant mechanisms to propagate socket libraries, and fix the missing dependency on libws2_32 for windows.  This can be further simplified once we agree that Solaris is no longer supported, as that's the only non-windows OS that doesn't include functions like gethostbyname in libc.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,593,2016-08-10T17:36:53Z,2016-08-10T18:02:28Z,2016-08-10T22:56:48Z,MERGED,True,1,3,1,https://github.com/zack-vii,handle DTYPE_T just like DTYPE_POINTER,1,[],https://github.com/MDSplus/mdsplus/pull/593,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/593,"T is a string which is a pointer
Keith is this what you had in mind? works on unix64. could not test elsewhere since i could not yet setup the new docker build.","T is a string which is a pointer
Keith is this what you had in mind? works on unix64. could not test elsewhere since i could not yet setup the new docker build.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,594,2016-08-10T20:17:59Z,2016-08-11T12:20:36Z,2016-08-31T12:08:20Z,MERGED,True,108,30,6,https://github.com/tfredian,Add the ability to define the monitor server as a special value of th…,1,[],https://github.com/MDSplus/mdsplus/pull/594,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/594,"…e keyword event followed by colon followed by name of MDSplus event to use to broadcast action monitor messages to action monitors.
So for example with the C-Mod experiment all the TCL dispatch commands use:
TCL> dispatch/build/monitor=CMOD_MONITOR
TCL> dispatch/phase/monitor=CMOD_MONITOR init
etc.
and the actmon is invoked with:
actmon --monitor=CMOD_MONITOR
Currently CMOD_MONITOR is defined in an environment variable as:
alcdata-new:mdsip_monitor
which causes the dispatch commands to communicate with an mdsip service sending messages about each job dispatched. The actmon depends on the mdsip service handling the monitor message to relay these messages to it and all other running action monitors. If any of these action monitors just stalled this can stall the monitor mdsip service which could in turn stall the dispatch commands. The new feature provided by this pull request allows you do define the ""monitor server"" environment variable in such a way to use udp events to broadcast these monitor messages. If the environment variable for the monitor server begins with event: the dispatch commands will issue MDSplus events using the event name following the event: prefix. For example on C-Mod we will be able to define the monitor server environment variable as:
export CMOD_MONITOR=event:cmod_monitor
This will tell the dispatch commands to issue events with the name cmod_monitor for dispatching event broadcasts and the action monitor will listen for these event notifications.","…e keyword event followed by colon followed by name of MDSplus event to use to broadcast action monitor messages to action monitors.
So for example with the C-Mod experiment all the TCL dispatch commands use:
TCL> dispatch/build/monitor=CMOD_MONITOR
TCL> dispatch/phase/monitor=CMOD_MONITOR init
etc.
and the actmon is invoked with:
actmon --monitor=CMOD_MONITOR
Currently CMOD_MONITOR is defined in an environment variable as:
alcdata-new:mdsip_monitor
which causes the dispatch commands to communicate with an mdsip service sending messages about each job dispatched. The actmon depends on the mdsip service handling the monitor message to relay these messages to it and all other running action monitors. If any of these action monitors just stalled this can stall the monitor mdsip service which could in turn stall the dispatch commands. The new feature provided by this pull request allows you do define the ""monitor server"" environment variable in such a way to use udp events to broadcast these monitor messages. If the environment variable for the monitor server begins with event: the dispatch commands will issue MDSplus events using the event name following the event: prefix. For example on C-Mod we will be able to define the monitor server environment variable as:
export CMOD_MONITOR=event:cmod_monitor
This will tell the dispatch commands to issue events with the name cmod_monitor for dispatching event broadcasts and the action monitor will listen for these event notifications.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,595,2016-08-11T12:46:45Z,2016-08-11T13:12:01Z,2016-08-11T13:12:19Z,MERGED,True,17,1,2,https://github.com/tfredian,Ensure the submodules have been updated before attempting to build.,1,[],https://github.com/MDSplus/mdsplus/pull/595,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/595,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,596,2016-08-11T13:20:03Z,2016-08-11T13:45:17Z,2016-08-11T13:45:21Z,MERGED,True,9,28,16,https://github.com/tfredian,Do not install things like xxx.in etc.,1,[],https://github.com/MDSplus/mdsplus/pull/596,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/596,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,597,2016-08-11T18:35:00Z,2016-08-11T19:02:14Z,2016-08-11T19:02:18Z,MERGED,True,105,16,15,https://github.com/tfredian,Add set readonly command to TCL,1,[],https://github.com/MDSplus/mdsplus/pull/597,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/597,"This adds the feature of making a tree completely readonly. All attempts to write to a tree set readonly will result in an error. This includes changing any node characteristics. Trees that are set readonly will not incur the cost of record locking so may improve data access performance of reading data from trees located on network shared file systems.
New TCL command added:
TCL> SET READONLY [/OFF]
Tree must be opened for edit and written after issuing the SET READONLY command to save the readonly property.","This adds the feature of making a tree completely readonly. All attempts to write to a tree set readonly will result in an error. This includes changing any node characteristics. Trees that are set readonly will not incur the cost of record locking so may improve data access performance of reading data from trees located on network shared file systems.
New TCL command added:
TCL> SET READONLY [/OFF]
Tree must be opened for edit and written after issuing the SET READONLY command to save the readonly property.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,598,2016-08-12T13:51:52Z,2016-08-12T14:35:09Z,2016-08-12T14:35:13Z,MERGED,True,3138,3147,27,https://github.com/tfredian,Fix expected package contents for armhf installers,1,[],https://github.com/MDSplus/mdsplus/pull/598,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/598,"Forgot to update the expected package contents for armhf installers built for raspberrypi. If changes are made to the output of make install which causes changes to the contents of installer packages the expected package contents files in mdsplus/deploy/packaging// to reflect the new contents. The easiest way to do this is to use the following commands:
$ mkdir ~/tmpbuild
$ cd ~/tmpbuild
$ ~/mdsplus/deploy/build.sh --os=fc22 --release --updatepkg #### Update noarch, i686, x86_64
$ ~/mdsplus/deploy/build.sh --os=ubuntu14 --release --updatepkg #### Update i386 and amd64
$ ~/mdsplus/deploy/build.sh --os=raspberrypi --release --updatepkg #### Update armhf
$ cd ~/mdsplus
$ git diff ### to verify contents changes
If all correct, commit the changes and issue a pull request.","Forgot to update the expected package contents for armhf installers built for raspberrypi. If changes are made to the output of make install which causes changes to the contents of installer packages the expected package contents files in mdsplus/deploy/packaging// to reflect the new contents. The easiest way to do this is to use the following commands:
$ mkdir ~/tmpbuild
$ cd ~/tmpbuild
$ ~/mdsplus/deploy/build.sh --os=fc22 --release --updatepkg #### Update noarch, i686, x86_64
$ ~/mdsplus/deploy/build.sh --os=ubuntu14 --release --updatepkg #### Update i386 and amd64
$ ~/mdsplus/deploy/build.sh --os=raspberrypi --release --updatepkg #### Update armhf
$ cd ~/mdsplus
$ git diff ### to verify contents changes
If all correct, commit the changes and issue a pull request.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,599,2016-08-15T14:25:47Z,2016-08-16T19:01:51Z,2016-08-18T19:35:54Z,MERGED,True,0,37,3,https://github.com/kgerickson,config: Remove checks for size of long long,1,[],https://github.com/MDSplus/mdsplus/pull/599,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/599,"I found no uses for SIZEOF_LONG_LONG except in
3rdparty-apis/windows-python27/pyconfig.h, and it is defined locally
there.  So, remove the test, remove the macro from config.h, and
regenerate configure.","I found no uses for SIZEOF_LONG_LONG except in
3rdparty-apis/windows-python27/pyconfig.h, and it is defined locally
there.  So, remove the test, remove the macro from config.h, and
regenerate configure.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,601,2016-08-16T20:26:35Z,2016-08-19T18:15:29Z,2016-08-19T18:15:29Z,CLOSED,False,19714,20077,68,https://github.com/tfredian,Step 1 of removing all compiler warnings using compiler switch -Wall,2,[],https://github.com/MDSplus/mdsplus/pull/601,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/601,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,602,2016-08-17T19:48:47Z,2016-08-17T20:25:08Z,2016-08-18T19:35:52Z,MERGED,True,118,47,53,https://github.com/kgerickson,config: Enable default warnings with option for -Werror,1,[],https://github.com/MDSplus/mdsplus/pull/602,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/602,"Enable default warnings of -Wall for C, C++, and Fortran, with a
configure option to additionally add in -Werror (which by default is
off).  This does not include Java, but that can be done in a followup
patch.","Enable default warnings of -Wall for C, C++, and Fortran, with a
configure option to additionally add in -Werror (which by default is
off).  This does not include Java, but that can be done in a followup
patch.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,603,2016-08-18T18:42:34Z,2016-08-18T19:08:25Z,2016-08-31T12:08:17Z,MERGED,True,13,12,12,https://github.com/tfredian,Fix CFLAGS handling in Makefile.in's,1,[],https://github.com/MDSplus/mdsplus/pull/603,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/603,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,604,2016-08-18T19:09:09Z,2016-08-18T20:04:56Z,2017-05-03T12:19:14Z,MERGED,True,53,7,38,https://github.com/kgerickson,config: Only require specific java versions for mdsobjects,1,[],https://github.com/MDSplus/mdsplus/pull/604,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/604,"We only need to restrict Java environments for the mdsobjects interface,
and only because of older (<=2014) versions of MatLab having a built in
JRE6.  So, to allow jScope and jTraverser to build with (and use
features of) newer versions, only apply the -source, etc. options to the
mdsobjects/java/Makefile.am build.","We only need to restrict Java environments for the mdsobjects interface,
and only because of older (<=2014) versions of MatLab having a built in
JRE6.  So, to allow jScope and jTraverser to build with (and use
features of) newer versions, only apply the -source, etc. options to the
mdsobjects/java/Makefile.am build.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,605,2016-08-19T20:03:25Z,2016-08-22T20:27:27Z,2016-08-31T12:08:11Z,MERGED,True,6,4,1,https://github.com/tfredian,Repair bugs added to update_submodules,1,[],https://github.com/MDSplus/mdsplus/pull/605,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/605,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,606,2016-08-22T16:15:05Z,2016-08-22T18:06:49Z,2016-08-22T18:06:55Z,MERGED,True,62,336,5,https://github.com/tfredian,Use 32-bit index value to find event info instead of using a 32-bit v…,1,[],https://github.com/MDSplus/mdsplus/pull/606,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/606,…alue as a pointer to a struct. Bug caused intermittent segfaults on 64-bit platforms if the address didn't fit in a 32-bit value.,…alue as a pointer to a struct. Bug caused intermittent segfaults on 64-bit platforms if the address didn't fit in a 32-bit value.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,607,2016-08-23T18:03:08Z,2016-08-26T15:09:24Z,2016-08-31T12:08:03Z,MERGED,True,20271,20591,172,https://github.com/tfredian,Twf fix compiler warnings step1,1,[],https://github.com/MDSplus/mdsplus/pull/607,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/607,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,607,2016-08-23T18:03:08Z,2016-08-26T15:09:24Z,2016-08-31T12:08:03Z,MERGED,True,20271,20591,172,https://github.com/tfredian,Twf fix compiler warnings step1,1,[],https://github.com/MDSplus/mdsplus/pull/607,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/607#issuecomment-242763039,,After modifying 172 modules and 20k lines of code the compiler warning throughout MDSplus are now gone! Any new builds will now be using -Werror so if changes to the MDSplus code causes compiler errors the builds will not succeed. When doing development work please use --enable-werror with configure. This will ensure that you are not introducing new compiler warnings.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,610,2016-08-24T19:50:53Z,2016-08-24T20:32:55Z,2016-08-24T20:33:07Z,MERGED,True,6,18,6,https://github.com/tfredian,Fix xinetd config files to have proper directories for the server scr…,1,[],https://github.com/MDSplus/mdsplus/pull/610,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/610,…ipt and logs This should fix issue #609,…ipt and logs This should fix issue #609,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,611,2016-08-25T12:56:12Z,2016-08-25T16:34:39Z,2016-08-31T12:08:10Z,MERGED,True,2,2,1,https://github.com/tfredian,Add compression objects to MdsIpShr static library,1,[],https://github.com/MDSplus/mdsplus/pull/611,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/611,"This is to fix issue #608
It should be noted that the mdsip api now involves dynamically loading the communication protocols defined by the connection string for example: mdsconnect('ssh:twf@data-server-ip-address'). The default tcp connection string for example: mdsconnect('data-server-ip-address') is interpreted the same as mdsconnect('tcp:data-server-ip-address'). When the connection api's are called, mdsip will dynamically load a shared library to provide the communication protocol specified in the connection string. Therefore linking to the static libMdsIpShr.a library is a somewhat questionable strategy since the protocol shared library being used must be present and usable by the application.","This is to fix issue #608
It should be noted that the mdsip api now involves dynamically loading the communication protocols defined by the connection string for example: mdsconnect('ssh:twf@data-server-ip-address'). The default tcp connection string for example: mdsconnect('data-server-ip-address') is interpreted the same as mdsconnect('tcp:data-server-ip-address'). When the connection api's are called, mdsip will dynamically load a shared library to provide the communication protocol specified in the connection string. Therefore linking to the static libMdsIpShr.a library is a somewhat questionable strategy since the protocol shared library being used must be present and usable by the application.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,612,2016-08-30T09:08:29Z,2016-08-30T12:21:01Z,2016-08-31T12:08:02Z,MERGED,True,4581,1689,37,https://github.com/GabrieleManduchi,Iseps updates,7,[],https://github.com/MDSplus/mdsplus/pull/612,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/612,"A bunch of files added/removed/modified in order to align with the latest MDSplus version used for ISEPS commissioning in NBI.  The changes affect only the epics interface, the device_support library (for NI and CAEN support software), tdi/RfxDevices for added devices and the associated dwsetup in javadevices.","A bunch of files added/removed/modified in order to align with the latest MDSplus version used for ISEPS commissioning in NBI.  The changes affect only the epics interface, the device_support library (for NI and CAEN support software), tdi/RfxDevices for added devices and the associated dwsetup in javadevices.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,614,2016-09-01T06:59:15Z,2016-09-01T12:11:55Z,2017-05-03T12:19:13Z,MERGED,True,32,36,8,https://github.com/GabrieleManduchi,Fix packages,1,[],https://github.com/MDSplus/mdsplus/pull/614,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/614,Hopefully this fixes everything......wow!.... not so easy when adding new files. Anyway next time I will have a virtual machine with docker installed ready for this purpose.,Hopefully this fixes everything......wow!.... not so easy when adding new files. Anyway next time I will have a virtual machine with docker installed ready for this purpose.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,615,2016-09-01T13:05:21Z,2016-09-01T13:54:00Z,2016-10-27T11:16:19Z,MERGED,True,3,13,78,https://github.com/zack-vii,Zck tdi cleanup,6,[],https://github.com/MDSplus/mdsplus/pull/615,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/615,"This is open for discussion.
Maybe there is a better way to organize the tdi functions.
I like the idea of putting e.g. all  treeshr wrappers into one folder treeshr.
Maybe one should also discuss a fixed schema how to name functions (e.g. TreeMethod for a TreeShr->Method call, etc.).
Functions that do not follow this schema could be copied to a special 'old' folder whereas the original file is renamed and sorted by the new schema.","This is open for discussion.
Maybe there is a better way to organize the tdi functions.
I like the idea of putting e.g. all  treeshr wrappers into one folder treeshr.
Maybe one should also discuss a fixed schema how to name functions (e.g. TreeMethod for a TreeShr->Method call, etc.).
Functions that do not follow this schema could be copied to a special 'old' folder whereas the original file is renamed and sorted by the new schema.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,616,2016-09-01T14:23:28Z,2016-09-01T14:48:47Z,2016-09-02T18:07:36Z,MERGED,True,146,46,4,https://github.com/tfredian,Include uid's in 32-bit debian packages,1,[],https://github.com/MDSplus/mdsplus/pull/616,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/616,"I discovered that the uid handling in configure.ac caused the install of uid files to be placed in the uid32 directory on 32-bit builds. Like the 64-bit builds, the directory for the uid's should only contain 32 or 64 if the platform truly supports multi architecture package installations. The debian packaging only include files in /uid (not /uid64 or /uid32) so configure.ac was changed to remove the bits field of the directory unless building for a multi-arch platform.","I discovered that the uid handling in configure.ac caused the install of uid files to be placed in the uid32 directory on 32-bit builds. Like the 64-bit builds, the directory for the uid's should only contain 32 or 64 if the platform truly supports multi architecture package installations. The debian packaging only include files in /uid (not /uid64 or /uid32) so configure.ac was changed to remove the bits field of the directory unless building for a multi-arch platform.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,617,2016-09-01T20:29:41Z,2016-09-02T11:53:47Z,2017-05-03T12:19:12Z,MERGED,True,5,1,1,https://github.com/joshStillerman,add case for string array,1,[],https://github.com/MDSplus/mdsplus/pull/617,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/617,"Added a case to MDSarg.m so that if the type is string  and the first dimension is gt 1 it will create a java string array type.
note:  Once APDs are supported this code may change again.","Added a case to MDSarg.m so that if the type is string  and the first dimension is gt 1 it will create a java string array type.
note:  Once APDs are supported this code may change again.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,618,2016-09-02T08:26:23Z,2016-09-02T11:54:01Z,2016-09-02T11:54:01Z,MERGED,True,3,1,2,https://github.com/GabrieleManduchi,Fix pointers,1,[],https://github.com/MDSplus/mdsplus/pull/618,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/618,Fix potential damage from uninitialized pointers,Fix potential damage from uninitialized pointers,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,619,2016-09-02T20:59:35Z,2016-09-02T21:00:07Z,2016-10-31T12:30:32Z,MERGED,True,348,312,4,https://github.com/tfredian,Update package content files,1,[],https://github.com/MDSplus/mdsplus/pull/619,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/619,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,620,2016-09-04T14:23:16Z,2016-09-04T14:48:37Z,2016-09-04T14:48:44Z,MERGED,True,16,16,7,https://github.com/zack-vii,Zck_rfxdevices caenv1740 MARTE fix,2,[],https://github.com/MDSplus/mdsplus/pull/620,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/620,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,621,2016-09-04T22:44:42Z,2016-09-05T00:18:56Z,2016-09-05T00:18:58Z,MERGED,True,3,2,3,https://github.com/zack-vii,mainly missing os,1,[],https://github.com/MDSplus/mdsplus/pull/621,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/621,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,622,2016-09-05T14:14:46Z,2016-09-05T17:28:11Z,2017-05-03T12:19:09Z,MERGED,True,22,1,2,https://github.com/GabrieleManduchi,Fix mdsobjects,3,[],https://github.com/MDSplus/mdsplus/pull/622,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/622,"Ok, not I have understood.....","Ok, not I have understood.....",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,623,2016-09-05T14:15:28Z,2016-09-05T15:22:44Z,2016-09-05T15:22:51Z,MERGED,True,36,4,4,https://github.com/zack-vii,added Adp funs to tdi and adjusted python adp code,2,[],https://github.com/MDSplus/mdsplus/pull/623,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/623,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,624,2016-09-06T02:11:31Z,2016-10-04T12:53:43Z,2016-10-04T18:51:32Z,MERGED,True,805,759,20,https://github.com/zack-vii,Twf refact python local,51,[],https://github.com/MDSplus/mdsplus/pull/624,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/624,"last changes so far I did a rebase attempt to see what has changed. I guess best would be to checkout an fresh offspring of alpha and there checkout mdsobjects/python from the refact-python branch. I did it in
https://github.com/zack-vii/mdsplus/tree/zck_rebased_twf-refact-python
and performed the test the device adding and some other scripts so far without errors that I have not fixed yet. There is one thing with the findPyDevices. the appended \0 is not safely transferred through the numpy lib (it trims the \0 if it ist the last character in the string). This will result in an space instead of the \0 when converting it back to tdi. Not sure if this would cause a problem. one could think of omitting the \0 and handle the trailing spaces on the client side. (e.g. via trim)","last changes so far I did a rebase attempt to see what has changed. I guess best would be to checkout an fresh offspring of alpha and there checkout mdsobjects/python from the refact-python branch. I did it in
https://github.com/zack-vii/mdsplus/tree/zck_rebased_twf-refact-python
and performed the test the device adding and some other scripts so far without errors that I have not fixed yet. There is one thing with the findPyDevices. the appended \0 is not safely transferred through the numpy lib (it trims the \0 if it ist the last character in the string). This will result in an space instead of the \0 when converting it back to tdi. Not sure if this would cause a problem. one could think of omitting the \0 and handle the trailing spaces on the client side. (e.g. via trim)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,624,2016-09-06T02:11:31Z,2016-10-04T12:53:43Z,2016-10-04T18:51:32Z,MERGED,True,805,759,20,https://github.com/zack-vii,Twf refact python local,51,[],https://github.com/MDSplus/mdsplus/pull/624,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/624#issuecomment-246789628,"last changes so far I did a rebase attempt to see what has changed. I guess best would be to checkout an fresh offspring of alpha and there checkout mdsobjects/python from the refact-python branch. I did it in
https://github.com/zack-vii/mdsplus/tree/zck_rebased_twf-refact-python
and performed the test the device adding and some other scripts so far without errors that I have not fixed yet. There is one thing with the findPyDevices. the appended \0 is not safely transferred through the numpy lib (it trims the \0 if it ist the last character in the string). This will result in an space instead of the \0 when converting it back to tdi. Not sure if this would cause a problem. one could think of omitting the \0 and handle the trailing spaces on the client side. (e.g. via trim)","I think the null terminator in the device name list are currently needed by the traverser. I can try to determine what else, if any, are depending is depending on that and change the code to just use strings constructed by trimming the values in the string array. The traverser is just passing a pointer to the offset in the string array as a char * depending on that being a null terminated string. Ugly but cheap in the days when malloc'ing and copying was an expensive operation. ;-)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,624,2016-09-06T02:11:31Z,2016-10-04T12:53:43Z,2016-10-04T18:51:32Z,MERGED,True,805,759,20,https://github.com/zack-vii,Twf refact python local,51,[],https://github.com/MDSplus/mdsplus/pull/624,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/624#issuecomment-247994882,"last changes so far I did a rebase attempt to see what has changed. I guess best would be to checkout an fresh offspring of alpha and there checkout mdsobjects/python from the refact-python branch. I did it in
https://github.com/zack-vii/mdsplus/tree/zck_rebased_twf-refact-python
and performed the test the device adding and some other scripts so far without errors that I have not fixed yet. There is one thing with the findPyDevices. the appended \0 is not safely transferred through the numpy lib (it trims the \0 if it ist the last character in the string). This will result in an space instead of the \0 when converting it back to tdi. Not sure if this would cause a problem. one could think of omitting the \0 and handle the trailing spaces on the client side. (e.g. via trim)","well if one could fix traverser to trim the leading spaces the use of numpy string arrays is very nice. However, the special treatment of the trailing \0 might be tricky.
Also Conglom Dispatch and maybe others do not compile/decompile correctly, atm.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,624,2016-09-06T02:11:31Z,2016-10-04T12:53:43Z,2016-10-04T18:51:32Z,MERGED,True,805,759,20,https://github.com/zack-vii,Twf refact python local,51,[],https://github.com/MDSplus/mdsplus/pull/624,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/624#issuecomment-248399877,"last changes so far I did a rebase attempt to see what has changed. I guess best would be to checkout an fresh offspring of alpha and there checkout mdsobjects/python from the refact-python branch. I did it in
https://github.com/zack-vii/mdsplus/tree/zck_rebased_twf-refact-python
and performed the test the device adding and some other scripts so far without errors that I have not fixed yet. There is one thing with the findPyDevices. the appended \0 is not safely transferred through the numpy lib (it trims the \0 if it ist the last character in the string). This will result in an space instead of the \0 when converting it back to tdi. Not sure if this would cause a problem. one could think of omitting the \0 and handle the trailing spaces on the client side. (e.g. via trim)",fixed the conglom,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,624,2016-09-06T02:11:31Z,2016-10-04T12:53:43Z,2016-10-04T18:51:32Z,MERGED,True,805,759,20,https://github.com/zack-vii,Twf refact python local,51,[],https://github.com/MDSplus/mdsplus/pull/624,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/624#issuecomment-251402421,"last changes so far I did a rebase attempt to see what has changed. I guess best would be to checkout an fresh offspring of alpha and there checkout mdsobjects/python from the refact-python branch. I did it in
https://github.com/zack-vii/mdsplus/tree/zck_rebased_twf-refact-python
and performed the test the device adding and some other scripts so far without errors that I have not fixed yet. There is one thing with the findPyDevices. the appended \0 is not safely transferred through the numpy lib (it trims the \0 if it ist the last character in the string). This will result in an space instead of the \0 when converting it back to tdi. Not sure if this would cause a problem. one could think of omitting the \0 and handle the trailing spaces on the client side. (e.g. via trim)","I inadvertently merged this pull request assuming that it had been tested. With these changes if I try:
cd mdsobjects/python
python setup.py test
it segfaults!
If I revert this branch back to it's state before 772a529
it works fine.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,624,2016-09-06T02:11:31Z,2016-10-04T12:53:43Z,2016-10-04T18:51:32Z,MERGED,True,805,759,20,https://github.com/zack-vii,Twf refact python local,51,[],https://github.com/MDSplus/mdsplus/pull/624,https://github.com/MDSplusBuilder,6,https://github.com/MDSplus/mdsplus/pull/624#issuecomment-251406967,"last changes so far I did a rebase attempt to see what has changed. I guess best would be to checkout an fresh offspring of alpha and there checkout mdsobjects/python from the refact-python branch. I did it in
https://github.com/zack-vii/mdsplus/tree/zck_rebased_twf-refact-python
and performed the test the device adding and some other scripts so far without errors that I have not fixed yet. There is one thing with the findPyDevices. the appended \0 is not safely transferred through the numpy lib (it trims the \0 if it ist the last character in the string). This will result in an space instead of the \0 when converting it back to tdi. Not sure if this would cause a problem. one could think of omitting the \0 and handle the trailing spaces on the client side. (e.g. via trim)","Even weirder... I ran this with valgrind to see if I could find the
error and it did not segfault. It did not pass the tree tests though
because it looks like it is trying to put an zero dtype data type item
into a node instead of deleting the contents of a node and TreePutRecord
complains since that data type is not allowed to be put into a signal
node. Still investigating...
On 10/4/2016 10:21 AM, Tom Fredian wrote:

I inadvertently merged this pull request assuming that it had been
tested. With these changes if I try:
cd mdsobjects/python
python setup.py test
it segfaults!
If I revert this branch back to it's state before 772a529
772a529
it works fine.
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#624 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AI44gZ_x-yFpOdbEyLMmrbHr-KA0O4tUks5qwmEHgaJpZM4J1ZyE.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,624,2016-09-06T02:11:31Z,2016-10-04T12:53:43Z,2016-10-04T18:51:32Z,MERGED,True,805,759,20,https://github.com/zack-vii,Twf refact python local,51,[],https://github.com/MDSplus/mdsplus/pull/624,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/624#issuecomment-251478582,"last changes so far I did a rebase attempt to see what has changed. I guess best would be to checkout an fresh offspring of alpha and there checkout mdsobjects/python from the refact-python branch. I did it in
https://github.com/zack-vii/mdsplus/tree/zck_rebased_twf-refact-python
and performed the test the device adding and some other scripts so far without errors that I have not fixed yet. There is one thing with the findPyDevices. the appended \0 is not safely transferred through the numpy lib (it trims the \0 if it ist the last character in the string). This will result in an space instead of the \0 when converting it back to tdi. Not sure if this would cause a problem. one could think of omitting the \0 and handle the trailing spaces on the client side. (e.g. via trim)",Ok. I pushed a fix for the python segfault. No idea why it just showed up but it was calling TreeFree(ptr) but the argument of TreeFree was not defined to be a c_void_p() so it must have been converting it to an integer. The tests seem to be working now.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,625,2016-09-06T12:36:56Z,2016-09-06T12:37:11Z,2017-03-27T13:22:18Z,MERGED,True,16,0,4,https://github.com/tfredian,Update package content files,1,[],https://github.com/MDSplus/mdsplus/pull/625,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/625,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,626,2016-09-06T18:56:42Z,2016-09-14T13:38:04Z,2016-10-31T12:30:00Z,MERGED,True,2222,1896,379,https://github.com/tfredian,Remove all compiler warnings with using -g -O2 -Wall and -Wextra,2,[],https://github.com/MDSplus/mdsplus/pull/626,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/626,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,626,2016-09-06T18:56:42Z,2016-09-14T13:38:04Z,2016-10-31T12:30:00Z,MERGED,True,2222,1896,379,https://github.com/tfredian,Remove all compiler warnings with using -g -O2 -Wall and -Wextra,2,[],https://github.com/MDSplus/mdsplus/pull/626,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/626#issuecomment-245068443,,Oops... missed ~500 more warnings in the math fortran code.... not done yet.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,627,2016-09-08T16:04:48Z,2016-09-13T14:29:56Z,2019-11-25T10:20:57Z,CLOSED,False,1,1,1,https://github.com/joshStillerman,generating FIT callbacks critical to clean/dirty book keeping,1,[],https://github.com/MDSplus/mdsplus/pull/627,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/627,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,628,2016-09-08T17:17:39Z,2016-09-08T17:45:41Z,2016-09-08T17:45:45Z,MERGED,True,1,1,1,https://github.com/joshStillerman,generating FIT callbacks critical to clean/dirty book keeping,1,[],https://github.com/MDSplus/mdsplus/pull/628,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/628,"FIT callbacks are needed for users of CW_WVEDIT

NOTE: pointer to event data structure that is returned is unused","FIT callbacks are needed for users of CW_WVEDIT

NOTE: pointer to event data structure that is returned is unused",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,629,2016-09-09T12:52:41Z,2016-09-09T13:53:36Z,2016-09-09T13:53:39Z,MERGED,True,12,0,2,https://github.com/zack-vii,added TreeShr->TreeDbid() functions to support tree contexts form tdi interfaces,1,[],https://github.com/MDSplus/mdsplus/pull/629,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/629,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,630,2016-09-12T13:01:23Z,2016-09-12T13:01:43Z,2016-09-12T13:01:43Z,CLOSED,False,24,8,2,https://github.com/tfredian,Disable usage of a TdiGetRecord tdi fun originally added for future s…,1,[],https://github.com/MDSplus/mdsplus/pull/630,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/630,…upport of multishot trend data. Causes recursion of Tdi1Compile which is not supported.,…upport of multishot trend data. Causes recursion of Tdi1Compile which is not supported.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,631,2016-09-12T13:06:56Z,2016-09-12T14:07:51Z,2016-10-31T12:30:22Z,MERGED,True,3,2,2,https://github.com/tfredian,Disable usage of a TdiGetRecord tdi fun originally added for future s…,2,[],https://github.com/MDSplus/mdsplus/pull/631,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/631,…upport of multishot trend data. Causes recursion of Tdi1Compile which is not supported.,…upport of multishot trend data. Causes recursion of Tdi1Compile which is not supported.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,632,2016-09-12T15:36:25Z,2016-09-12T18:02:27Z,2016-09-12T18:04:01Z,MERGED,True,5,2,1,https://github.com/zack-vii,%p has a different representation on unix and windows,2,[],https://github.com/MDSplus/mdsplus/pull/632,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/632,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,632,2016-09-12T15:36:25Z,2016-09-12T18:02:27Z,2016-09-12T18:04:01Z,MERGED,True,5,2,1,https://github.com/zack-vii,%p has a different representation on unix and windows,2,[],https://github.com/MDSplus/mdsplus/pull/632,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/632#issuecomment-246395337,,This failed the pull request tests with compiler warnings which is why it was changed back to %p in the first place. It also seems to be invalid for 32-bit platforms.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,632,2016-09-12T15:36:25Z,2016-09-12T18:02:27Z,2016-09-12T18:04:01Z,MERGED,True,5,2,1,https://github.com/zack-vii,%p has a different representation on unix and windows,2,[],https://github.com/MDSplus/mdsplus/pull/632,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/632#issuecomment-246404210,,assume it will cast 32 bit integer properly to 64bit integer by appending 0x00000000. I guess I could fix the compiler warning by properly casting the pointer.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,632,2016-09-12T15:36:25Z,2016-09-12T18:02:27Z,2016-09-12T18:04:01Z,MERGED,True,5,2,1,https://github.com/zack-vii,%p has a different representation on unix and windows,2,[],https://github.com/MDSplus/mdsplus/pull/632,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/632#issuecomment-246410129,,This still does not seem to be valid for 32-bit. You are casting the in_ptr->pointer as a pointer to a 64-bit integer. On a 32-bit system this pointer would point to a 32-bit pointer so if you treat it as a 64-bit integer you would get the 32-bit pointer plus whatever else is in the next 32-bit's of random memory or possibly a segfault. Unless I'm mistaken to do this correctly you would need to figure out whether you are running on 32-bit or 64-bit and if on 32-bit get the pointer as a 32-bit integer and then cast the 32-bit integer as a 64-bit integer.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,632,2016-09-12T15:36:25Z,2016-09-12T18:02:27Z,2016-09-12T18:04:01Z,MERGED,True,5,2,1,https://github.com/zack-vii,%p has a different representation on unix and windows,2,[],https://github.com/MDSplus/mdsplus/pull/632,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/632#issuecomment-246417742,,"Hm same holds for the current implementation
e.g. you could deserialize a 32 bit pointer on a 64 bit machine and vice versa.
serializein(Byte_Unsigned([4,0,51,1,8,0,0,0,1,2,3,4]))
Pointer(0000135504030201)

this could become an issue when using mdsip, I will adjust the implementation to cast based on the in_ptr.length.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,632,2016-09-12T15:36:25Z,2016-09-12T18:02:27Z,2016-09-12T18:04:01Z,MERGED,True,5,2,1,https://github.com/zack-vii,%p has a different representation on unix and windows,2,[],https://github.com/MDSplus/mdsplus/pull/632,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/632#issuecomment-246424450,,"this one does the trick ?!
serializein(Byte_Unsigned([4,0,51,1,8,0,0,0,1,2,3,4,5,6,7,8]))
Pointer(0x4030201)
serializein(Byte_Unsigned([8,0,51,1,8,0,0,0,1,2,3,4,5,6,7,8]))
Pointer(0x807060504030201)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,632,2016-09-12T15:36:25Z,2016-09-12T18:02:27Z,2016-09-12T18:04:01Z,MERGED,True,5,2,1,https://github.com/zack-vii,%p has a different representation on unix and windows,2,[],https://github.com/MDSplus/mdsplus/pull/632,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/632#issuecomment-246435572,,"This should be a safe solution as the POINTER descriptor is not bound to the architecture.
It in a Long or QuadWord with a different dtype.
The decision whether it is 32bit or 64bit should be made based on length anyway.
Could you merge this once reviewed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,633,2016-09-12T20:34:19Z,2016-09-12T21:02:53Z,2016-10-31T12:30:19Z,MERGED,True,23,8,1,https://github.com/tfredian,Handle absolute paths when adding python devices and report more mean…,1,[],https://github.com/MDSplus/mdsplus/pull/633,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/633,and report more meeningful errors instead of always reporting DevPYDEVICE_NOT_FOUND.,and report more meeningful errors instead of always reporting DevPYDEVICE_NOT_FOUND.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,634,2016-09-13T13:02:43Z,2016-09-13T13:39:02Z,2016-10-31T12:30:15Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix 32-bit javamds build by using the correct jni include directories…,1,[],https://github.com/MDSplus/mdsplus/pull/634,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/634,"… during compiles
The include directories specified by environment variables were not being used because the environment variables were not exported before invoking configure.","… during compiles
The include directories specified by environment variables were not being used because the environment variables were not exported before invoking configure.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,635,2016-09-13T13:44:36Z,2016-09-13T14:15:03Z,2016-10-31T12:30:13Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix 32-bit javamds build by using the correct jni include directories…,1,[],https://github.com/MDSplus/mdsplus/pull/635,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/635,… during compiles,… during compiles,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,636,2016-09-13T13:49:40Z,2016-09-13T14:47:40Z,2016-10-31T12:30:10Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix installer location of macosx kits,1,[],https://github.com/MDSplus/mdsplus/pull/636,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/636,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,637,2016-09-13T15:55:24Z,2016-09-13T18:22:58Z,2016-10-31T12:30:04Z,MERGED,True,23,8,1,https://github.com/tfredian,Support absolute path for python device node and use more descriptive…,1,[],https://github.com/MDSplus/mdsplus/pull/637,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/637,… error messages,… error messages,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,638,2016-09-14T18:48:16Z,2016-09-28T16:06:17Z,2016-10-31T12:29:57Z,MERGED,True,173,171,8,https://github.com/tfredian,Remove the need for null characters in MdsDevice table.,1,[],https://github.com/MDSplus/mdsplus/pull/638,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/638,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,639,2016-09-19T13:27:53Z,2016-09-22T14:40:09Z,2017-05-03T12:19:06Z,MERGED,True,196,79,6,https://github.com/GabrieleManduchi,Jscope docs,4,[],https://github.com/MDSplus/mdsplus/pull/639,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/639,Improve documentation required to implement a new jScope plugin,Improve documentation required to implement a new jScope plugin,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,640,2016-09-23T10:44:44Z,2016-09-23T13:51:35Z,2016-10-13T09:14:32Z,MERGED,True,2,1,1,https://github.com/GabrieleManduchi,Fix wrong endianity conversion,1,[],https://github.com/MDSplus/mdsplus/pull/640,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/640,Urgent fix to a bug that broke jScope,Urgent fix to a bug that broke jScope,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/alkhwarizmi,1,https://github.com/MDSplus/mdsplus/pull/641,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.","Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-249307362,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/alkhwarizmi,3,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-249365080,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.","Hi Tom,
are you able to switch on alkhwarizmi:alpha-labview-interface without the pull request? (Can I switch on the fork of other developers?)
In this case the pull request is premature, we surey need to do some more work on this.
Sincerely,",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-297937432,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-302205596,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/alkhwarizmi,6,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-302233418,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.","What's failing? I removed lines containing bare directory names from the Debian version of the package descriptor file.
No idea if this was stopping the build, I can't see the report.
Sincerely,",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/MDSplusBuilder,7,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-302383478,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.","It appears that your pull request branch has fallen behind the current
alpha branch and there are some content changes not related to your
labview directory which are missing. To see what is causing the failure
you should be able to go to http://jenkins.mdsplus.org/ and click on the
last failure of the 1-pull-request-test job and it should list which
platform builds failed. If you click on one of these and then click on
the ""Console output"" you can see the build log of that job. For instance
the raspberrypi build
(http://jenkins.mdsplus.org/job/raspberrypi/lastFailedBuild/console)
contains lines like:

Checking contents of mdsplus-other-python_1.2.3_armhf.deb
131a132
 ./usr/local/mdsplus/mdsobjects/python/ident.py
====================================================== Failure: Problem
with contents of mdsplus-other-python_1.2.3_armhf.deb
======================================================
Checking contents of mdsplus-other-devel_bin_1.2.3_armhf.deb
Contents of mdsplus-other-devel_bin_1.2.3_armhf.deb is correct.
Checking contents of mdsplus-other-repo_1.2.3_armhf.deb
Contents of mdsplus-other-repo_1.2.3_armhf.deb is correct.
Checking contents of mdsplus-other-gsi_1.2.3_armhf.deb
Contents of mdsplus-other-gsi_1.2.3_armhf.deb is correct.
Checking contents of mdsplus-other-kbsidevices_1.2.3_armhf.deb
Contents of mdsplus-other-kbsidevices_1.2.3_armhf.deb is correct.
Checking contents of mdsplus-other-devel_1.2.3_armhf.deb
Contents of mdsplus-other-devel_1.2.3_armhf.deb is correct.
Checking contents of mdsplus-other-w7xdevices_1.2.3_armhf.deb
2a3,6
 ./usr/local/mdsplus/tdi/W7xDevices/acq425.py
 ./usr/local/mdsplus/tdi/W7xDevices/acq480.py
 ./usr/local/mdsplus/tdi/W7xDevices/acqfmc.py
 ./usr/local/mdsplus/tdi/W7xDevices/acqsuper.py
====================================================== Failure: Problem
with contents of mdsplus-other-w7xdevices_1.2.3_armhf.deb
======================================================


If you have expertise with the use of git you could try rebasing your
commits on top of the current alpha branch or if you are not comfortable
with that you could just checkout the latest alpha branch and diff the
contents files for debian and redhat with your branch versions and look
for differences that are not related to your new labview directory. Or
you can look through the console logs and find all the content changes
that are missing in your branch.
…
-tom
On 5/17/2017 5:13 PM, AlKhwarizmi wrote:

 What's failing? I removed lines containing bare directory names from
 the Debian version of the package descriptor file.
 No idea if this was stopping the build.
 SIncerely,

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#641 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AI44gVUQxsjrjB3D0_EpPr3RDni-lReGks5r62MLgaJpZM4KFaPq>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/MDSplusBuilder,8,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-302409966,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.","Are you making any progress with this? You can also test it locally on a
linux system with docker installed by doing the following:

$ mkdir build
$ cd build
$ ~/mdsplus/deploy/build.sh --os=fc25 --release >build.log 2>&1

This will build the package in a docker image of the selected operating
system and check the rpm contents. You can do a similar test for debian
using ubuntu16.

Alternatively, I can try to fix it for you if you prefer.
…
-tom
On 5/17/2017 5:13 PM, AlKhwarizmi wrote:

 What's failing? I removed lines containing bare directory names from
 the Debian version of the package descriptor file.
 No idea if this was stopping the build.
 SIncerely,

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#641 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AI44gVUQxsjrjB3D0_EpPr3RDni-lReGks5r62MLgaJpZM4KFaPq>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/alkhwarizmi,9,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-302446919,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.",No I don't have read access to Jenkins so I can't read reports. I will try to merge the current alpha into my branch. If this does not work it is better that you try to fix t yourself.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/MDSplusBuilder,10,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-302447683,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.","I am working on your branch right now. I should have it fixed shortly.
…
-tom
On 5/18/2017 11:50 AM, AlKhwarizmi wrote:

 No I don't have read access to Jenkins so I can't read reports. I will
 try to merge the current alpha into my branch. If this does not work
 it is better that you try to fix t yourself.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#641 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AI44gXPBa6LVk2go67_MsGo9H5jwv5hcks5r7GjVgaJpZM4KFaPq>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/alkhwarizmi,11,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-302454838,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.","I tried to merge MDSplus/alpha into my branch but it says that everything is up-to-date. I guess you have been faster than me...
Cheers!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,641,2016-09-23T21:31:01Z,2017-05-18T18:25:04Z,2017-05-18T18:25:04Z,MERGED,True,6722,0,730,https://github.com/alkhwarizmi,Created directory MDSplus_LV2015 with some updates to the LabView interface of MDSObjects. To open discussion with G. Manduchi.,34,[],https://github.com/MDSplus/mdsplus/pull/641,https://github.com/tfredian,12,https://github.com/MDSplus/mdsplus/pull/641#issuecomment-302474427,"Improved connectors of ""Tree Create.vi"" and ""Tree Add Node.vi"".
Removed useless VI ""Tree Create (Mode).vi"".
Temptative implementation of ""TreeNode Put Timestamped Segment.vi"" and ""Make Timestamped Segment.vi"" to be discussed before finalization.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,642,2016-09-28T03:29:00Z,2016-09-28T04:54:35Z,2016-09-28T04:54:36Z,MERGED,True,114,37,7,https://github.com/zack-vii,Zck apd update,4,[],https://github.com/MDSplus/mdsplus/pull/642,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/642,improved integration and added apdadd and apdrm to allow some editing of the APD class,improved integration and added apdadd and apdrm to allow some editing of the APD class,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,643,2016-09-29T15:01:02Z,2016-09-29T15:26:00Z,2016-10-31T12:29:41Z,MERGED,True,8,4,4,https://github.com/tfredian,Update package content files,1,[],https://github.com/MDSplus/mdsplus/pull/643,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/643,Fix expected content files to include changes made to apd handling fun's.,Fix expected content files to include changes made to apd handling fun's.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,644,2016-09-30T15:11:42Z,2016-09-30T17:12:55Z,2016-09-30T17:13:11Z,MERGED,True,2,2,1,https://github.com/zack-vii,evaluate one layer before add to apd,1,[],https://github.com/MDSplus/mdsplus/pull/644,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/644,to be consistent with the constructors,to be consistent with the constructors,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,645,2016-10-01T17:12:59Z,2016-10-01T19:10:29Z,2016-10-01T19:10:29Z,MERGED,True,10,7,1,https://github.com/zack-vii,added the option to add arguments to the Py call from tdi,1,[],https://github.com/MDSplus/mdsplus/pull/645,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/645,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,646,2016-10-01T19:10:41Z,2016-10-12T13:22:35Z,2016-10-28T12:44:27Z,CLOSED,False,65,207,15,https://github.com/zack-vii,removed dublicated phase functions,3,[],https://github.com/MDSplus/mdsplus/pull/646,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/646,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,646,2016-10-01T19:10:41Z,2016-10-12T13:22:35Z,2016-10-28T12:44:27Z,CLOSED,False,65,207,15,https://github.com/zack-vii,removed dublicated phase functions,3,[],https://github.com/MDSplus/mdsplus/pull/646,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/646#issuecomment-253011673,,"You will need to update the expected packaging files for this pull request. Here is a patch that should do it:
diff --git a/deploy/packaging/debian/kernel.amd64 b/deploy/packaging/debian/kernel.amd64
index d71ca8b..c5dbb88 100644
--- a/deploy/packaging/debian/kernel.amd64
+++ b/deploy/packaging/debian/kernel.amd64
@@ -71,10 +71,11 @@
./usr/local/mdsplus/tdi/dispatch/
./usr/local/mdsplus/tdi/dispatch/ServerGetInfo.fun
./usr/local/mdsplus/tdi/dispatch/ServerQAction.fun
-./usr/local/mdsplus/tdi/dispatch/load_phases.fun
-./usr/local/mdsplus/tdi/dispatch/phase_name_lookup.fun
-./usr/local/mdsplus/tdi/dispatch/phase_number_lookup.fun
-./usr/local/mdsplus/tdi/dispatch/phase_table.fun
+./usr/local/mdsplus/tdi/dispatch/phases/
+./usr/local/mdsplus/tdi/dispatch/phases/load_phases.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_name_lookup.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_number_lookup.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_table.fun
./usr/local/mdsplus/tdi/getenv.fun
./usr/local/mdsplus/tdi/helloworld.fun
./usr/local/mdsplus/tdi/java/
@@ -152,11 +153,6 @@
./usr/local/mdsplus/tdi/ndims.fun
./usr/local/mdsplus/tdi/noderefs_of.fun
./usr/local/mdsplus/tdi/output_name.fun
-./usr/local/mdsplus/tdi/phases/
-./usr/local/mdsplus/tdi/phases/load_phases.fun
-./usr/local/mdsplus/tdi/phases/phase_name_lookup.fun
-./usr/local/mdsplus/tdi/phases/phase_number_lookup.fun
-./usr/local/mdsplus/tdi/phases/phase_table.fun
./usr/local/mdsplus/tdi/python/
./usr/local/mdsplus/tdi/python/Py.py
./usr/local/mdsplus/tdi/python/getShotDB.py
diff --git a/deploy/packaging/debian/kernel.armhf b/deploy/packaging/debian/kernel.armhf
index d71ca8b..c5dbb88 100644
--- a/deploy/packaging/debian/kernel.armhf
+++ b/deploy/packaging/debian/kernel.armhf
@@ -71,10 +71,11 @@
./usr/local/mdsplus/tdi/dispatch/
./usr/local/mdsplus/tdi/dispatch/ServerGetInfo.fun
./usr/local/mdsplus/tdi/dispatch/ServerQAction.fun
-./usr/local/mdsplus/tdi/dispatch/load_phases.fun
-./usr/local/mdsplus/tdi/dispatch/phase_name_lookup.fun
-./usr/local/mdsplus/tdi/dispatch/phase_number_lookup.fun
-./usr/local/mdsplus/tdi/dispatch/phase_table.fun
+./usr/local/mdsplus/tdi/dispatch/phases/
+./usr/local/mdsplus/tdi/dispatch/phases/load_phases.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_name_lookup.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_number_lookup.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_table.fun
./usr/local/mdsplus/tdi/getenv.fun
./usr/local/mdsplus/tdi/helloworld.fun
./usr/local/mdsplus/tdi/java/
@@ -152,11 +153,6 @@
./usr/local/mdsplus/tdi/ndims.fun
./usr/local/mdsplus/tdi/noderefs_of.fun
./usr/local/mdsplus/tdi/output_name.fun
-./usr/local/mdsplus/tdi/phases/
-./usr/local/mdsplus/tdi/phases/load_phases.fun
-./usr/local/mdsplus/tdi/phases/phase_name_lookup.fun
-./usr/local/mdsplus/tdi/phases/phase_number_lookup.fun
-./usr/local/mdsplus/tdi/phases/phase_table.fun
./usr/local/mdsplus/tdi/python/
./usr/local/mdsplus/tdi/python/Py.py
./usr/local/mdsplus/tdi/python/getShotDB.py
diff --git a/deploy/packaging/debian/kernel.i386 b/deploy/packaging/debian/kernel.i386
index d71ca8b..c5dbb88 100644
--- a/deploy/packaging/debian/kernel.i386
+++ b/deploy/packaging/debian/kernel.i386
@@ -71,10 +71,11 @@
./usr/local/mdsplus/tdi/dispatch/
./usr/local/mdsplus/tdi/dispatch/ServerGetInfo.fun
./usr/local/mdsplus/tdi/dispatch/ServerQAction.fun
-./usr/local/mdsplus/tdi/dispatch/load_phases.fun
-./usr/local/mdsplus/tdi/dispatch/phase_name_lookup.fun
-./usr/local/mdsplus/tdi/dispatch/phase_number_lookup.fun
-./usr/local/mdsplus/tdi/dispatch/phase_table.fun
+./usr/local/mdsplus/tdi/dispatch/phases/
+./usr/local/mdsplus/tdi/dispatch/phases/load_phases.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_name_lookup.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_number_lookup.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_table.fun
./usr/local/mdsplus/tdi/getenv.fun
./usr/local/mdsplus/tdi/helloworld.fun
./usr/local/mdsplus/tdi/java/
@@ -152,11 +153,6 @@
./usr/local/mdsplus/tdi/ndims.fun
./usr/local/mdsplus/tdi/noderefs_of.fun
./usr/local/mdsplus/tdi/output_name.fun
-./usr/local/mdsplus/tdi/phases/
-./usr/local/mdsplus/tdi/phases/load_phases.fun
-./usr/local/mdsplus/tdi/phases/phase_name_lookup.fun
-./usr/local/mdsplus/tdi/phases/phase_number_lookup.fun
-./usr/local/mdsplus/tdi/phases/phase_table.fun
./usr/local/mdsplus/tdi/python/
./usr/local/mdsplus/tdi/python/Py.py
./usr/local/mdsplus/tdi/python/getShotDB.py
diff --git a/deploy/packaging/redhat/kernel.noarch b/deploy/packaging/redhat/kernel.noarch
index 9919180..23d6b60 100644
--- a/deploy/packaging/redhat/kernel.noarch
+++ b/deploy/packaging/redhat/kernel.noarch
@@ -67,10 +67,11 @@
./usr/local/mdsplus/tdi/dispatch
./usr/local/mdsplus/tdi/dispatch/ServerGetInfo.fun
./usr/local/mdsplus/tdi/dispatch/ServerQAction.fun
-./usr/local/mdsplus/tdi/dispatch/load_phases.fun
-./usr/local/mdsplus/tdi/dispatch/phase_name_lookup.fun
-./usr/local/mdsplus/tdi/dispatch/phase_number_lookup.fun
-./usr/local/mdsplus/tdi/dispatch/phase_table.fun
+./usr/local/mdsplus/tdi/dispatch/phases
+./usr/local/mdsplus/tdi/dispatch/phases/load_phases.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_name_lookup.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_number_lookup.fun
+./usr/local/mdsplus/tdi/dispatch/phases/phase_table.fun
./usr/local/mdsplus/tdi/getenv.fun
./usr/local/mdsplus/tdi/helloworld.fun
./usr/local/mdsplus/tdi/java
@@ -148,11 +149,6 @@
./usr/local/mdsplus/tdi/ndims.fun
./usr/local/mdsplus/tdi/noderefs_of.fun
./usr/local/mdsplus/tdi/output_name.fun
-./usr/local/mdsplus/tdi/phases
-./usr/local/mdsplus/tdi/phases/load_phases.fun
-./usr/local/mdsplus/tdi/phases/phase_name_lookup.fun
-./usr/local/mdsplus/tdi/phases/phase_number_lookup.fun
-./usr/local/mdsplus/tdi/phases/phase_table.fun
./usr/local/mdsplus/tdi/python
./usr/local/mdsplus/tdi/python/Py.py
./usr/local/mdsplus/tdi/python/getShotDB.py",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,646,2016-10-01T19:10:41Z,2016-10-12T13:22:35Z,2016-10-28T12:44:27Z,CLOSED,False,65,207,15,https://github.com/zack-vii,removed dublicated phase functions,3,[],https://github.com/MDSplus/mdsplus/pull/646,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/646#issuecomment-253211707,,reopened as #660,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,648,2016-10-04T11:45:07Z,2016-10-04T13:07:30Z,2017-05-03T12:19:04Z,MERGED,True,3,2,1,https://github.com/GabrieleManduchi,Fix memory misaglinment in labview interface for 32 bits,2,[],https://github.com/MDSplus/mdsplus/pull/648,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/648,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,648,2016-10-04T11:45:07Z,2016-10-04T13:07:30Z,2017-05-03T12:19:04Z,MERGED,True,3,2,1,https://github.com/GabrieleManduchi,Fix memory misaglinment in labview interface for 32 bits,2,[],https://github.com/MDSplus/mdsplus/pull/648,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/648#issuecomment-251374188,,"Should be MINGW64 (github web page removed the underscores for some
reason)
On 10/4/2016 8:27 AM, Tom Fredian wrote:

@tfredian requested changes on this pull request.
Enclose #pragma pack(1) in
#ifndef MINGW64
#pragma pack(1)
#endif
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#648 (review),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AI44gRYWXkMGK6BEQdpsYFtXh3Qh5oq4ks5qwkZPgaJpZM4KNlGW.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,648,2016-10-04T11:45:07Z,2016-10-04T13:07:30Z,2017-05-03T12:19:04Z,MERGED,True,3,2,1,https://github.com/GabrieleManduchi,Fix memory misaglinment in labview interface for 32 bits,2,[],https://github.com/MDSplus/mdsplus/pull/648,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/648#issuecomment-251377272,,Surreounded #pragma pack(1) directive in #ifndef MIGNW64  (with underscores),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,648,2016-10-04T11:45:07Z,2016-10-04T13:07:30Z,2017-05-03T12:19:04Z,MERGED,True,3,2,1,https://github.com/GabrieleManduchi,Fix memory misaglinment in labview interface for 32 bits,2,[],https://github.com/MDSplus/mdsplus/pull/648,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/648#issuecomment-251377441,,"""MINGW64""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,648,2016-10-04T11:45:07Z,2016-10-04T13:07:30Z,2017-05-03T12:19:04Z,MERGED,True,3,2,1,https://github.com/GabrieleManduchi,Fix memory misaglinment in labview interface for 32 bits,2,[],https://github.com/MDSplus/mdsplus/pull/648,https://github.com/drjdpowell,5,https://github.com/MDSplus/mdsplus/pull/648#issuecomment-253171349,,"Hello, I’m trying to use the objects LabVIEW library for Mdsplus on a 32-but system.  The library works, but any misuse or error seems to crash LabVIEW.   Could the crashes be a result of this issue?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,649,2016-10-05T12:32:01Z,2016-10-05T12:56:43Z,2016-10-05T12:56:43Z,MERGED,True,2,4,2,https://github.com/AndreaRigoni,makes python not required to configure MDSplus,1,[],https://github.com/MDSplus/mdsplus/pull/649,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/649,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,650,2016-10-05T14:39:36Z,2016-10-05T17:14:34Z,2016-10-05T17:14:35Z,MERGED,True,9,0,1,https://github.com/GabrieleManduchi,Fix time dependent X-Y plot,2,[],https://github.com/MDSplus/mdsplus/pull/650,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/650,This fix is to allow jScope display time dependent X-Y mapping that was broken in previous updates,This fix is to allow jScope display time dependent X-Y mapping that was broken in previous updates,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,651,2016-10-05T17:12:08Z,2017-01-13T14:10:31Z,2017-01-16T08:17:09Z,CLOSED,False,21,218,39,https://github.com/AndreaRigoni,fix for missing python executable,2,[],https://github.com/MDSplus/mdsplus/pull/651,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/651,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,652,2016-10-06T10:30:46Z,2016-10-11T12:22:47Z,2016-10-12T07:53:40Z,MERGED,True,18,9,4,https://github.com/GabrieleManduchi,Jscope fix,4,[],https://github.com/MDSplus/mdsplus/pull/652,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/652,A set of fixes for handling inconsistent expression evaluation in jScope and 2D management,A set of fixes for handling inconsistent expression evaluation in jScope and 2D management,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,652,2016-10-06T10:30:46Z,2016-10-11T12:22:47Z,2016-10-12T07:53:40Z,MERGED,True,18,9,4,https://github.com/GabrieleManduchi,Jscope fix,4,[],https://github.com/MDSplus/mdsplus/pull/652,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/652#issuecomment-253143396,A set of fixes for handling inconsistent expression evaluation in jScope and 2D management,"Actually my experience is to better have the semicolon in the expression that holds the parenthesis, i.e.
you could revert the changes in MdsDataProvider and add the ; in javamds.c instead:
sprintf(expanded_in, ""_xxx = (%s;);fs_float(_xxx)"", in);
this way it would work regardless of the presents of terminating semicolon in the input.
note: - an additional ; does not matter and is ignored by tdi -
(_a=1;_b=2;_a+_b;;)==(_a=1;_b=2;_a+_b;)==3",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,653,2016-10-06T17:32:55Z,2016-10-06T20:07:55Z,2016-10-06T20:08:45Z,MERGED,True,4,1,1,https://github.com/zack-vii,show warning if third party package pexpect is not found,1,[],https://github.com/MDSplus/mdsplus/pull/653,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/653,this at least allows to add the device even without that package,this at least allows to add the device even without that package,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,654,2016-10-06T20:07:26Z,2016-10-06T21:31:13Z,2016-10-06T21:31:15Z,MERGED,True,26,26,2,https://github.com/zack-vii,structured node options,1,[],https://github.com/MDSplus/mdsplus/pull/654,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/654,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,655,2016-10-06T22:33:36Z,2016-10-06T23:39:22Z,2016-10-06T23:39:26Z,MERGED,True,72,82,1,https://github.com/zack-vii,fixed MitDevice DTDO32,1,[],https://github.com/MDSplus/mdsplus/pull/655,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/655,"newer should have worked in hte old version at least since a long time
ago","newer should have worked in hte old version at least since a long time
ago",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,656,2016-10-10T17:09:05Z,2016-10-11T12:21:06Z,2017-05-03T12:19:03Z,MERGED,True,5,2,1,https://github.com/GabrieleManduchi,Fix jTraverser crash for empty string arrays,1,[],https://github.com/MDSplus/mdsplus/pull/656,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/656,Fix empty string array management that caused jTraverser to crash,Fix empty string array management that caused jTraverser to crash,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,657,2016-10-11T12:20:17Z,2016-10-11T16:54:11Z,2016-10-12T20:32:29Z,MERGED,True,6,6,1,https://github.com/tfredian,Remove stdout output during install of python packages coming from us…,2,[],https://github.com/MDSplus/mdsplus/pull/657,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/657,…e of pushd/popd,…e of pushd/popd,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,658,2016-10-12T07:35:43Z,2016-10-12T13:00:04Z,2016-10-12T13:00:04Z,MERGED,True,55,22,4,https://github.com/zack-vii,Twf refact python local,7,[],https://github.com/MDSplus/mdsplus/pull/658,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/658,"recent updates
check dtype of missing","recent updates
check dtype of missing",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,660,2016-10-12T13:05:04Z,2016-10-12T13:35:58Z,2016-10-12T13:35:58Z,CLOSED,False,65,207,15,https://github.com/zack-vii,Zck tdi cleanup,3,[],https://github.com/MDSplus/mdsplus/pull/660,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/660,retry since to rule out something,retry since to rule out something,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,660,2016-10-12T13:05:04Z,2016-10-12T13:35:58Z,2016-10-12T13:35:58Z,CLOSED,False,65,207,15,https://github.com/zack-vii,Zck tdi cleanup,3,[],https://github.com/MDSplus/mdsplus/pull/660,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/660#issuecomment-253212413,retry since to rule out something,"Hm I tempered the kernel. files but the issue according to the ""Console Output"" is that /workspace does not seem to exist and it is trying to create it without permission. is it not?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,660,2016-10-12T13:05:04Z,2016-10-12T13:35:58Z,2016-10-12T13:35:58Z,CLOSED,False,65,207,15,https://github.com/zack-vii,Zck tdi cleanup,3,[],https://github.com/MDSplus/mdsplus/pull/660,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/660#issuecomment-253215011,retry since to rule out something,temporarily closed to test out a few things,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,661,2016-10-12T13:25:31Z,2016-10-12T13:50:41Z,2016-10-12T20:32:15Z,MERGED,True,3,2,1,https://github.com/tfredian,PyDoMethod should return PyUNHANDLED_EXCEPTION status instead of 0,1,[],https://github.com/MDSplus/mdsplus/pull/661,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/661,"If a python device support module raises an exception which is not a standard MDSplus status exception then the status returned by PyDoMethod should be PyUNHANDLED_EXCEPTION instead of returning the old standard, uninformative error status of 0.  This is to partially fix #659.","If a python device support module raises an exception which is not a standard MDSplus status exception then the status returned by PyDoMethod should be PyUNHANDLED_EXCEPTION instead of returning the old standard, uninformative error status of 0.  This is to partially fix #659.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,662,2016-10-12T14:52:17Z,2016-10-12T16:08:47Z,2016-10-12T16:08:47Z,MERGED,True,8,5,2,https://github.com/tfredian,Do not change WORKSPACE environment variable if already defined,2,[],https://github.com/MDSplus/mdsplus/pull/662,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/662,"Change handling of WORKSPACE environment variable. If WORKSPACE environment variable is already defined (i.e. in jenkins builds) leave it as is unless overwritten by a --workspace= option on the build.sh invocation. If WORKSPACE is not defined and the --workspace option is not provided then default to $(pwd)/build/${OS}/${BRANCH}.
Also fix handling of the use of the jenkins GIT_BRANCH environment variable which sometimes is set to origin/branch-name and sometime just branch-name. Originally this just trimmed 7 characters from the beginning assuming the origin/ prefix was always there as is the case for the release builds but not the case for pull request tests.","Change handling of WORKSPACE environment variable. If WORKSPACE environment variable is already defined (i.e. in jenkins builds) leave it as is unless overwritten by a --workspace= option on the build.sh invocation. If WORKSPACE is not defined and the --workspace option is not provided then default to $(pwd)/build/${OS}/${BRANCH}.
Also fix handling of the use of the jenkins GIT_BRANCH environment variable which sometimes is set to origin/branch-name and sometime just branch-name. Originally this just trimmed 7 characters from the beginning assuming the origin/ prefix was always there as is the case for the release builds but not the case for pull request tests.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,663,2016-10-12T14:57:32Z,2016-10-12T15:40:44Z,2016-10-12T15:40:44Z,MERGED,True,7,8,1,https://github.com/zack-vii,Aa python,1,[],https://github.com/MDSplus/mdsplus/pull/663,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/663,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,664,2016-10-12T20:31:20Z,2016-10-12T20:56:43Z,2016-10-12T20:56:47Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix git_branch handling,1,[],https://github.com/MDSplus/mdsplus/pull/664,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/664,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,665,2016-10-13T09:20:22Z,2016-10-13T10:20:40Z,2016-10-13T10:20:45Z,MERGED,True,74,219,16,https://github.com/zack-vii,Zck tdi cleanup,4,[],https://github.com/MDSplus/mdsplus/pull/665,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/665,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,666,2016-10-13T09:28:16Z,2016-10-17T19:10:04Z,2016-10-27T11:16:16Z,MERGED,True,15,5,2,https://github.com/GabrieleManduchi,Fix jscope,3,[],https://github.com/MDSplus/mdsplus/pull/666,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/666,"Added a semicolon in expression as suggested by Timo
Fixed limit computation is jScope support for absolute time signals","Added a semicolon in expression as suggested by Timo
Fixed limit computation is jScope support for absolute time signals",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,668,2016-10-13T13:06:48Z,2016-10-13T13:09:19Z,2016-10-13T13:09:19Z,MERGED,True,1,1,1,https://github.com/zack-vii,fixed lib call in getCurrent,1,[],https://github.com/MDSplus/mdsplus/pull/668,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/668,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,669,2016-10-13T20:22:20Z,2016-10-13T21:14:13Z,2016-10-13T21:14:13Z,CLOSED,False,28,29,5,https://github.com/zack-vii,Twf refact python local,4,[],https://github.com/MDSplus/mdsplus/pull/669,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/669,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,669,2016-10-13T20:22:20Z,2016-10-13T21:14:13Z,2016-10-13T21:14:13Z,CLOSED,False,28,29,5,https://github.com/zack-vii,Twf refact python local,4,[],https://github.com/MDSplus/mdsplus/pull/669,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/669#issuecomment-253640741,,This will not fly. First of all the python/mdsExceptions/xxxExceptions.py files are all generated from xml files as noted at the top of these files. Second I'm not sure about the default status value of the exceptions being -1 or -2. I don't know if the -1 or the -2 value is checked anywhere but we should probably define an exception in an xml to use for this and use it's status value. Haven't checked out any of the rest though.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/670,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-257894267,,There is a problem with the getClass method in Conglom. It now raises a plain Exception if the device is not a python device. Changing that to raise DevPYDEVICE_NOT_FOUND fixes the problem as that is caught. This however uncovers another problem which also causes the tests to fail. The test to see if two TreeNodeArray's use to return the equiv of the comparison of two numpy arrays which returns an array of bools. It now returns a bool False even if the two TreeNodeArrays are identical.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-258446123,,"Ah sorry I did not respond to your comments, but they did not seem to be notified by email so I just tumbled upon them.
to the part with the auto-generated exceptions:
is init also autogenerated? any changes to other files in mdsExceptions are unintended and possibly a residual of checkout mdsobjects/python between my rebased and non rebased branch.  I only really altered init.py
about the error codes:
I choose -2 as the default value for exceptions as it is not a success (status&1) and it has an unknown severity? If I should have been a success one would use MDSplusSuccess and for an Error you should use MDSplusError. which will have the code -8|2 = -6 given by the severity E for Errors. This way default errors have a non-zero status that specifies the correct severity.
You need the static status if you want to refer to the error by status code. instead of instantiating the object and grabbing is status you can access the static status field of the class directly. it is used in PyDoMethod.py
I will fix the getClass part and make the test work before preparing the rebased version with fixed package check",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-258464043,,"I see die I eventually change the PYDEVICE_NOT_FOUND to PYDEVICE_NOT_FOUND2. this is because it was a duplicate and had been renamed in alpha  like this. so the alpha xmls will create the right xxxExceptions.
one thing about this
PYDEVICE_NOT_FOUND and PYDEVICE_NOT_FOUND2 does not seem to be very useful.
Would it not make more sense to have something like
PYDEVICE_NOT_FOUND: ""Python device class not found""
for when the import package.device fails to get the desvice class
and
PYDEVICE_INVALID_IMAGE: ""Device is not a python device.""
for when conglom.image is not 'python'
What do you think?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-258491583,,I made a test pull-request or the fully rebased refactor #704,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/MDSplusBuilder,6,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-258504419,,"Ok, as I mentioned the tree tests fail doing: $ python setup.py test
You can do this test manually since the errors will come out on the
terminal. Build the branch and cd to mdsobjects/python and do: python
setup.py test
-tom
On 11/4/2016 1:12 PM, zack-vii wrote:

I made a test pull-request or the fully rebased refactor #704
#704
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#670 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AI44gTh4h7-uyMIciLj5MJNwjzrEeM6Fks5q62dlgaJpZM4KWcDm.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-258506323,,"Yep, I finally tracked this down. Josh had inadvertently added what he
thought was a new message to use in his picam device to indicate that
the device support module/library was not installed. He is going to
change this to a different error name. This was done at the beginning of
the year and didn't cause any problems surprisingly. I renamed it
PYDEVICE_NOT_FOUND2 when I was trying to remove the compiler warnings
which the duplicated names caused. I didn't check to see where it was
being referenced like I should instead of just renaming it. I like the
idea of the PYDEVICE_INVALID_TYPE but I think more appropriate name
might be NOT_PYTHON_DEVICE. Don't rename NOT_FOUND2 as Josh will
probably use that status code.
-tom
On 11/4/2016 11:33 AM, zack-vii wrote:

I see die I eventually change the PYDEVICE_NOT_FOUND to
PYDEVICE_NOT_FOUND2. this is because it was a duplicate and had been
renamed in alpha like this. so the alpha xmls will create the right
xxxExceptions.
one thing about this
PYDEVICE_NOT_FOUND and PYDEVICE_NOT_FOUND2 does not seem to be very
useful.
Would it not make more sense to have something like
PYDEVICE_NOT_FOUND: ""Python device class not found""
for when the import package.device fails to get the desvice class
and
PYDEVICE_INVALID_TYPE: ""Device is not a python device.""
for when conglom.image is not 'python'
What do you think?
—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub
#670 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AHG5O20Ke7KHtjoh8sNdEuLdgsI9Lvd2ks5q61BDgaJpZM4KWcDm.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-258513408,,"I see, I will add an Error instead of replacing PYDEV_NOT_FOUND2.
How about PYDEVICE_NOT_FOUND, PYDEVICE_NOT_SUPPORTED, NOT_A_PYDEVICE?
Is the name of PYDEVICE_NOT_FOUND2 does not seem to make problems as it was shadowed by PYDEVICE_NOT_FOUND a few weeks ago.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-258526997,,"finally the rebased version  passes the python unit test again.
I will check in tomorrow if the build test succeeded.. ist late here I got to go home ;)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/tfredian,10,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-258533933,,"Getting closer. Looks like the sanitize address tests uncovered a bug in
MdsShr. I'll do some investigation. It only showed up on 4 of the
platforms. -tom
On 11/4/2016 3:32 PM, zack-vii wrote:

finally the rebased version passes the python unit test again.
I will check in tomorrow if the build test succeeded.. ist late here I
got to go home ;)
—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub
#670 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AHG5O1rbYzhe6GhdLSE1BafVAZxmCFgfks5q64hUgaJpZM4KWcDm.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,670,2016-10-13T22:14:54Z,2016-11-10T17:13:23Z,2017-03-15T11:48:16Z,CLOSED,False,717,562,18,https://github.com/zack-vii,Twf refact python local,34,[],https://github.com/MDSplus/mdsplus/pull/670,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/670#issuecomment-259749624,,continued in #704,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,672,2016-10-17T09:38:31Z,2016-10-18T13:29:29Z,2016-10-18T13:29:29Z,MERGED,True,184,18,9,https://github.com/GabrieleManduchi,Jscope fix,6,[],https://github.com/MDSplus/mdsplus/pull/672,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/672,"Added support for xmin and xmax definition in jScope setup expresses as date (""d-MMM-yyyy HH:mm )
This affects several files of jScope and no other MDSplus component.","Added support for xmin and xmax definition in jScope setup expresses as date (""d-MMM-yyyy HH:mm )
This affects several files of jScope and no other MDSplus component.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,673,2016-10-17T10:24:27Z,2016-10-17T11:43:19Z,2017-05-03T12:13:04Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,remove last colon otherwise devices cannot be instantiated,1,[],https://github.com/MDSplus/mdsplus/pull/673,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/673,Removed last colon otherwise devices cannot be instantiated,Removed last colon otherwise devices cannot be instantiated,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,674,2016-10-17T18:03:27Z,2016-10-18T01:45:15Z,2016-10-18T01:45:21Z,MERGED,True,295,273,19,https://github.com/zack-vii,added uniform debug methods to device group initializer,2,[],https://github.com/MDSplus/mdsplus/pull/674,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/674,"this allows to test the core shot cycle (dispatcher) independant from
without the devices
importer is wrapped arround static method of the MDSplus.Device
in MitDevices some changes to device dt100 and Acq200 where made to fit
with general schema for MitDevices (upper-case device names)","this allows to test the core shot cycle (dispatcher) independant from
without the devices
importer is wrapped arround static method of the MDSplus.Device
in MitDevices some changes to device dt100 and Acq200 where made to fit
with general schema for MitDevices (upper-case device names)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,674,2016-10-17T18:03:27Z,2016-10-18T01:45:15Z,2016-10-18T01:45:21Z,MERGED,True,295,273,19,https://github.com/zack-vii,added uniform debug methods to device group initializer,2,[],https://github.com/MDSplus/mdsplus/pull/674,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/674#issuecomment-254301218,"this allows to test the core shot cycle (dispatcher) independant from
without the devices
importer is wrapped arround static method of the MDSplus.Device
in MitDevices some changes to device dt100 and Acq200 where made to fit
with general schema for MitDevices (upper-case device names)","cloud you verify that you do not use Acq200 and dt100
dt100 was broken a few weeks ago and acq200 depended on it. so it is likely no one ever used them",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,674,2016-10-17T18:03:27Z,2016-10-18T01:45:15Z,2016-10-18T01:45:21Z,MERGED,True,295,273,19,https://github.com/zack-vii,added uniform debug methods to device group initializer,2,[],https://github.com/MDSplus/mdsplus/pull/674,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/674#issuecomment-254320084,"this allows to test the core shot cycle (dispatcher) independant from
without the devices
importer is wrapped arround static method of the MDSplus.Device
in MitDevices some changes to device dt100 and Acq200 where made to fit
with general schema for MitDevices (upper-case device names)","I can verify that we are not using either of these.  I think it very
likely that no one else is either. Eventually, I would like to remove
not only these but all of the old d-tacq device types:
dt100
acq200
dt132
dt196a
dt196b
dt196  - we still use this
acq_ftp
dt216
dt216a
dt216b
dt216_ftp
dtao32  - this is in use, but should be redoneless
dtdo32 - this is in use, but should be redone
You can remove those 2, and I will post something asking about the rest
of the list.
On 10/17/16 3:02 PM, zack-vii wrote:

Acq200 and dt100",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,674,2016-10-17T18:03:27Z,2016-10-18T01:45:15Z,2016-10-18T01:45:21Z,MERGED,True,295,273,19,https://github.com/zack-vii,added uniform debug methods to device group initializer,2,[],https://github.com/MDSplus/mdsplus/pull/674,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/674#issuecomment-254382557,"this allows to test the core shot cycle (dispatcher) independant from
without the devices
importer is wrapped arround static method of the MDSplus.Device
in MitDevices some changes to device dt100 and Acq200 where made to fit
with general schema for MitDevices (upper-case device names)",well I could not remove any device due to interdependencies. I think the removal should become a separate pull together with the eventual reimplementations,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,676,2016-10-20T20:40:01Z,2016-10-22T16:10:39Z,2016-10-31T12:29:36Z,MERGED,True,73,21,1,https://github.com/tfredian,Bug in data alignment.,1,[],https://github.com/MDSplus/mdsplus/pull/676,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/676,"The alignment macro used for aligning data when copying descriptors to a descriptor_xd produced undefined behavior because of incorrect used of parenthesis. This problem did not show up on any of gcc sanitize checkers and apparently only produced a problem with 64-bit builds for Windows. Even then it did not cause any problem except when MDSplus was used with Anaconda python 3.5 where it produced access violations.
This should fix #675 and #310 .
Very strange that it only seemed to show up with Anaconda python version 3.5 on Windows.","The alignment macro used for aligning data when copying descriptors to a descriptor_xd produced undefined behavior because of incorrect used of parenthesis. This problem did not show up on any of gcc sanitize checkers and apparently only produced a problem with 64-bit builds for Windows. Even then it did not cause any problem except when MDSplus was used with Anaconda python 3.5 where it produced access violations.
This should fix #675 and #310 .
Very strange that it only seemed to show up with Anaconda python version 3.5 on Windows.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,677,2016-10-24T16:45:32Z,2016-10-24T17:57:18Z,2017-05-03T12:13:03Z,MERGED,True,527,14,11,https://github.com/joshStillerman,"adding aeon 3248 and Joerger adc32a devices, fixing MitCamacDevices.fun ",1,[],https://github.com/MDSplus/mdsplus/pull/677,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/677,"Two new CAMAC devices implemented for Kth in Sweden.
A3248 - Aeon 3248 digitizer - Python with .funs to do CAMAC IO
JRG_ADC32A  - Joerger ADC32A - done as TDI funs
MitCamacDevices was trashed by a previous commit that removed trailing '\0' from the names.
File restored and new entries added.","Two new CAMAC devices implemented for Kth in Sweden.
A3248 - Aeon 3248 digitizer - Python with .funs to do CAMAC IO
JRG_ADC32A  - Joerger ADC32A - done as TDI funs
MitCamacDevices was trashed by a previous commit that removed trailing '\0' from the names.
File restored and new entries added.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,678,2016-10-24T18:55:58Z,2016-10-25T17:42:32Z,2016-10-28T12:34:54Z,MERGED,True,40,33,2,https://github.com/zack-vii,updated doMethod,4,[],https://github.com/MDSplus/mdsplus/pull/678,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/678,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,678,2016-10-24T18:55:58Z,2016-10-25T17:42:32Z,2016-10-28T12:34:54Z,MERGED,True,40,33,2,https://github.com/zack-vii,updated doMethod,4,[],https://github.com/MDSplus/mdsplus/pull/678,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/678#issuecomment-255837720,,"I'm not sure about having the print(""doing %s(%s).%s(%s)""%(device,model,method,','.join(map(str,args)))) line in PyDoMethod.py. Current when you do TCL> dir/full on nodes in a device it will call do method with the original_path method to get the original name of the node when the device conglomerate was added and mdsdcl commands expect output to be returned by the command implementation so you can execute mdsdcl commands in tdi fun's and return the output. If I'm not mistaken adding this print output would make dir/full produces some messy output. It's conceivable we could add an attribute to a device method to disable the print or even easier check the method against ""ORIGINAL_PART_NAME"" and not do the print.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,678,2016-10-24T18:55:58Z,2016-10-25T17:42:32Z,2016-10-28T12:34:54Z,MERGED,True,40,33,2,https://github.com/zack-vii,updated doMethod,4,[],https://github.com/MDSplus/mdsplus/pull/678,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/678#issuecomment-256095635,,final version ?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,678,2016-10-24T18:55:58Z,2016-10-25T17:42:32Z,2016-10-28T12:34:54Z,MERGED,True,40,33,2,https://github.com/zack-vii,updated doMethod,4,[],https://github.com/MDSplus/mdsplus/pull/678,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/678#issuecomment-256128153,,"Sorry about that this was not a proper pull request, I just wants have ut checked on all oses easily. The debug messages should go of course. But I ran out of time today. Will temper it tomorrow
Sent from my Windows Phone

From: Tom Fredian
Sent: 24/10/2016 21:17
To: MDSplus/mdsplus
Cc: zack-vii; Author
Subject: Re: [MDSplus/mdsplus] updated doMethod (#678)
I'm not sure about having the print(""doing %s(%s).%s(%s)""%(device,model,method,','.join(map(str,args)))) line in PyDoMethod.py. Current when you do TCL> dir/full on nodes in a device it will call do method with the original_path method to get the original name of the node when the device conglomerate was added and mdsdcl commands expect output to be returned by the command implementation so you can execute mdsdcl commands in tdi fun's and return the output. If I'm not mistaken adding this print output would make dir/full produces some messy output. It's conceivable we could add an attribute to a device method to disable the print or even easier check the method against ""ORIGINAL_PART_NAME"" and not do the print.

You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHubhttps://github.com//pull/678#issuecomment-255837720, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AF8SruEmgwD3MGEXiv3mhomEvikjBORvks5q3QQygaJpZM4KfJ0z.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,679,2016-10-24T20:34:17Z,2016-10-24T21:00:45Z,2016-10-31T12:29:35Z,MERGED,True,69,51,8,https://github.com/tfredian,Add more compiler warning fixes,1,[],https://github.com/MDSplus/mdsplus/pull/679,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/679,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,681,2016-10-25T13:27:30Z,2016-10-25T14:13:05Z,2016-10-31T12:29:29Z,MERGED,True,44,4,8,https://github.com/tfredian,Update package content files,1,[],https://github.com/MDSplus/mdsplus/pull/681,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/681,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,682,2016-10-25T16:38:09Z,2016-10-26T13:53:26Z,2016-10-28T12:42:32Z,MERGED,True,31,22,3,https://github.com/zack-vii,fixed key None type and key in apdadd and apdrm,2,[],https://github.com/MDSplus/mdsplus/pull/682,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/682,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,682,2016-10-25T16:38:09Z,2016-10-26T13:53:26Z,2016-10-28T12:42:32Z,MERGED,True,31,22,3,https://github.com/zack-vii,fixed key None type and key in apdadd and apdrm,2,[],https://github.com/MDSplus/mdsplus/pull/682,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/682#issuecomment-256335234,,Jenkins error does not seem to be related to changes made,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,683,2016-10-26T14:01:00Z,2016-10-26T14:59:24Z,2017-10-19T12:32:39Z,MERGED,True,15,11,1,https://github.com/zack-vii,update cygnet4k,2,[],https://github.com/MDSplus/mdsplus/pull/683,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/683,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,684,2016-10-26T21:56:53Z,2016-10-26T23:37:34Z,2016-10-26T23:37:34Z,MERGED,True,14,13,2,https://github.com/zack-vii,python,2,[],https://github.com/MDSplus/mdsplus/pull/684,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/684,"default Error should be -6 (severitas == 'E')
status should be static
debug devices should take intermediate superclasses into account","default Error should be -6 (severitas == 'E')
status should be static
debug devices should take intermediate superclasses into account",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,685,2016-10-26T22:26:56Z,2016-10-27T11:14:21Z,2016-10-27T11:14:28Z,MERGED,True,476,0,6,https://github.com/bstandley,Support for modular D-tAcq devices ACQ425 and ACQ480,3,[],https://github.com/MDSplus/mdsplus/pull/685,https://github.com/bstandley,1,https://github.com/MDSplus/mdsplus/pull/685,This is an updated version of the code we used in operation earlier this year.  All device methods either return nothing (on success) or raise a DevException of some sort.,This is an updated version of the code we used in operation earlier this year.  All device methods either return nothing (on success) or raise a DevException of some sort.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,686,2016-10-27T14:35:33Z,2016-10-27T15:47:12Z,2016-10-27T15:49:05Z,MERGED,True,3546,4724,92,https://github.com/zack-vii,Zck fix package check,2,[],https://github.com/MDSplus/mdsplus/pull/686,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/686,test,test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,687,2016-10-27T15:12:39Z,2016-10-27T17:38:32Z,2016-10-27T17:38:32Z,MERGED,True,18,21,1,https://github.com/zack-vii,fixed statusToException by excluding success and error form _statusDict,2,[],https://github.com/MDSplus/mdsplus/pull/687,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/687,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,688,2016-10-27T16:34:10Z,2016-10-27T16:49:59Z,2016-10-27T16:49:59Z,CLOSED,False,3098,2,6,https://github.com/GabrieleManduchi,Devices for josh,3,[],https://github.com/MDSplus/mdsplus/pull/688,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/688,Added the device setup java form requested by Josh,Added the device setup java form requested by Josh,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,689,2016-10-27T16:51:28Z,2016-10-28T08:37:01Z,2016-10-28T08:37:01Z,CLOSED,False,3116,3,10,https://github.com/GabrieleManduchi,Devices for josh,9,[],https://github.com/MDSplus/mdsplus/pull/689,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/689,Fixed wrong filename,Fixed wrong filename,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,690,2016-10-28T08:40:11Z,2016-10-28T15:54:35Z,2016-10-28T15:54:35Z,MERGED,True,3125,6,11,https://github.com/GabrieleManduchi,Devices for josh,16,[],https://github.com/MDSplus/mdsplus/pull/690,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/690,"Changed AEON_3248Setup to A3248Setup
Enlarged the form to display trigger field","Changed AEON_3248Setup to A3248Setup
Enlarged the form to display trigger field",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,691,2016-10-28T17:02:18Z,2016-10-28T17:29:38Z,2016-10-31T12:29:28Z,MERGED,True,194,4,9,https://github.com/tfredian,fix packaging contents and add deploy/updatepkg.sh script,1,[],https://github.com/MDSplus/mdsplus/pull/691,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/691,"Fixed build scripts to be able to create installers during pull request tests (needed to not have hyphens in the branch name part of the installer name so replaced hyphens with underscores.). Now the packaging contents can and will be tested during the pull request test instead of happening after a new release is created during the installer builds for that release.
Fixed expected installer contents to include new devices.
Added deploy/updatepkg.sh script which you can use to update the expected package content files before issuing a pull request. This should be invoked when you have made changes which are likely to add, remove or move files that are included in the installers. This uses docker so that should be available on the system you are using. To use the script you can do something like:
$ mkdir ~/build
$ cd ~/build
$ ~/mdsplus/deploy/updatepkg.sh
If changes were made to packaging you should see modifications to files in the ~/mdsplus/deploy/packaging/ directory tree which should be committed to your pull request branch after verifying that the changes are correct.","Fixed build scripts to be able to create installers during pull request tests (needed to not have hyphens in the branch name part of the installer name so replaced hyphens with underscores.). Now the packaging contents can and will be tested during the pull request test instead of happening after a new release is created during the installer builds for that release.
Fixed expected installer contents to include new devices.
Added deploy/updatepkg.sh script which you can use to update the expected package content files before issuing a pull request. This should be invoked when you have made changes which are likely to add, remove or move files that are included in the installers. This uses docker so that should be available on the system you are using. To use the script you can do something like:
$ mkdir ~/build
$ cd ~/build
$ ~/mdsplus/deploy/updatepkg.sh
If changes were made to packaging you should see modifications to files in the ~/mdsplus/deploy/packaging/ directory tree which should be committed to your pull request branch after verifying that the changes are correct.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,692,2016-10-30T15:46:20Z,2016-10-30T17:21:11Z,2016-10-30T17:21:11Z,MERGED,True,27,11,4,https://github.com/joshStillerman,Finish renaming aeon_3248 to a3248,3,[],https://github.com/MDSplus/mdsplus/pull/692,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/692,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,693,2016-10-30T20:17:03Z,2016-10-30T20:42:18Z,2016-10-30T20:42:21Z,MERGED,True,4,4,4,https://github.com/joshStillerman,renamed aeon_3248_dw_setup.fun to a3248_dw_setup.fun,1,[],https://github.com/MDSplus/mdsplus/pull/693,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/693,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,694,2016-10-30T22:10:25Z,2016-10-30T23:29:38Z,2016-10-30T23:29:41Z,MERGED,True,4,4,4,https://github.com/joshStillerman,the order is important in the packaging files,2,[],https://github.com/MDSplus/mdsplus/pull/694,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/694,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,695,2016-10-31T13:03:34Z,2016-10-31T13:29:23Z,2017-02-06T21:19:19Z,MERGED,True,3,2,3,https://github.com/tfredian,Twf deploy fixes,2,[],https://github.com/MDSplus/mdsplus/pull/695,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/695,"Fix for main Makefile to prevent /build directories from getting into install directories if a python setup.py was done in one of the python module directories manually. (i.e. mdsobjects/python and tdi/*Devices). While this will not happen during normal release builds, it can cause problem when the script to update the package contents is run on a source directory tainted with /build directories.
Also changed the package content checker to again sort the expected contents files when validating package contents. If a package content file is updated manually instead of using the updatepkg.sh script then the content checker may fail if the change was not put in the correct sort location.","Fix for main Makefile to prevent /build directories from getting into install directories if a python setup.py was done in one of the python module directories manually. (i.e. mdsobjects/python and tdi/*Devices). While this will not happen during normal release builds, it can cause problem when the script to update the package contents is run on a source directory tainted with /build directories.
Also changed the package content checker to again sort the expected contents files when validating package contents. If a package content file is updated manually instead of using the updatepkg.sh script then the content checker may fail if the change was not put in the correct sort location.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,696,2016-11-01T16:11:45Z,2016-11-01T16:52:04Z,2016-11-01T16:52:18Z,MERGED,True,49,36,28,https://github.com/tfredian,Twf fix windows vs build,3,[],https://github.com/MDSplus/mdsplus/pull/696,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/696,Enable building of Visual Studio version of the MDSobjectsCppShr-VS.dll. Fixes problems caused by the removal of GNU compiler warnings by using compiler specific syntax.,Enable building of Visual Studio version of the MDSobjectsCppShr-VS.dll. Fixes problems caused by the removal of GNU compiler warnings by using compiler specific syntax.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,697,2016-11-03T16:24:06Z,2016-11-03T17:01:50Z,2016-11-03T17:01:57Z,MERGED,True,3,2,1,https://github.com/GabrieleManduchi,Fix jscope,4,[],https://github.com/MDSplus/mdsplus/pull/697,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/697,Avoid the generation of a null pointer exception in signals 2D,Avoid the generation of a null pointer exception in signals 2D,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,698,2016-11-03T17:35:26Z,2016-11-03T19:19:38Z,2016-11-03T19:20:12Z,MERGED,True,956,2,9,https://github.com/joshStillerman,Jas reinstate l6810c,3,[],https://github.com/MDSplus/mdsplus/pull/698,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/698,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,699,2016-11-03T18:07:45Z,2016-11-03T19:06:49Z,2016-11-03T19:06:50Z,MERGED,True,18,4,2,https://github.com/GabrieleManduchi,Added offset field,1,[],https://github.com/MDSplus/mdsplus/pull/699,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/699,Added offset field to A3248,Added offset field to A3248,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,700,2016-11-03T19:33:23Z,2016-11-03T20:01:43Z,2016-11-03T20:01:43Z,MERGED,True,2,2,1,https://github.com/joshStillerman,Run adc32a in burst mode not continuous,1,[],https://github.com/MDSplus/mdsplus/pull/700,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/700,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,701,2016-11-04T12:50:42Z,2016-11-04T14:08:10Z,2017-02-06T21:19:21Z,MERGED,True,20,4,2,https://github.com/GabrieleManduchi,Clock field added,1,[],https://github.com/MDSplus/mdsplus/pull/701,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/701,Added clock field requested by Josh,Added clock field requested by Josh,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,702,2016-11-04T14:15:45Z,2016-11-04T14:42:57Z,2017-05-03T12:13:00Z,MERGED,True,29,23,3,https://github.com/joshStillerman,Fixes for CAMAC used in Sweden,1,[],https://github.com/MDSplus/mdsplus/pull/702,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/702,"A3248 - shifts by mds integer types value 0 return 0 should be 1 - for now use ints
aeon_getchannel - probably extra but clear the high 8 bits of the data
jrg_adc32a__store  - use the external clock record, not the value 1 - there is an external clock record","A3248 - shifts by mds integer types value 0 return 0 should be 1 - for now use ints
aeon_getchannel - probably extra but clear the high 8 bits of the data
jrg_adc32a__store  - use the external clock record, not the value 1 - there is an external clock record",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,703,2016-11-04T15:30:10Z,2016-11-04T16:04:02Z,2017-05-03T12:12:59Z,MERGED,True,9,7,4,https://github.com/joshStillerman,updates to Camac Devices for sweden,1,[],https://github.com/MDSplus/mdsplus/pull/703,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/703,"A3248Setup - change label of clock from Hz to KHz
a3248.py   - use correct names for start_idx, end_idx
jrg_adc32a__init.fun - set the external clock bit","A3248Setup - change label of clock from Hz to KHz
a3248.py   - use correct names for start_idx, end_idx
jrg_adc32a__init.fun - set the external clock bit",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,704,2016-11-04T17:11:08Z,2017-06-22T11:57:04Z,2017-06-22T11:57:04Z,MERGED,True,7255,9023,43,https://github.com/zack-vii,zck rebased twf refact python DO NOT MERGE,5,[],https://github.com/MDSplus/mdsplus/pull/704,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/704,"This is only a test pull-request to trigger a jankins test build.
DO NOT MERGE BEFORE CONSULTING TOM OR ME","This is only a test pull-request to trigger a jankins test build.
DO NOT MERGE BEFORE CONSULTING TOM OR ME",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,704,2016-11-04T17:11:08Z,2017-06-22T11:57:04Z,2017-06-22T11:57:04Z,MERGED,True,7255,9023,43,https://github.com/zack-vii,zck rebased twf refact python DO NOT MERGE,5,[],https://github.com/MDSplus/mdsplus/pull/704,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/704#issuecomment-260054118,"This is only a test pull-request to trigger a jankins test build.
DO NOT MERGE BEFORE CONSULTING TOM OR ME","Well it seems that fc22 does not pass the sanitizer due to a memory leak in the tdi-python-interface I tried adding a more general test in the current alpha with the same sanitizer FAIL:
self.assertEqual(Data.execute(""Py('import MDSplus;a=MDSplus.Uint8(8)','a')""),Uint8(8))
Maybe there is a way to fix this as it only appeared on fc22 so far. I will temporarily remove the apd check. since this is not a problem introduced by the refactor of the python interface",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,704,2016-11-04T17:11:08Z,2017-06-22T11:57:04Z,2017-06-22T11:57:04Z,MERGED,True,7255,9023,43,https://github.com/zack-vii,zck rebased twf refact python DO NOT MERGE,5,[],https://github.com/MDSplus/mdsplus/pull/704,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/704#issuecomment-266112493,"This is only a test pull-request to trigger a jankins test build.
DO NOT MERGE BEFORE CONSULTING TOM OR ME","the descriptor make up works but on some oses the status cannot be mapped to an exception. I used the new approach to generate the error classes based on status using MDSplusException.
265388258 (NoData) does not translate well .. possibly due some stuff related to (status & -8) and the dict lookup",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,705,2016-11-04T18:23:21Z,2016-11-04T18:54:26Z,2017-05-03T12:12:57Z,MERGED,True,1724,1724,5,https://github.com/joshStillerman,replace PY_DEV_NOTFOUND2 with PY_INTERFACE_LIBRARY_NOT_FOUND,1,[],https://github.com/MDSplus/mdsplus/pull/705,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/705,"The original PY_DEV_NOTFOUND is used to signal that support for a given
MDSplus device type is not available in python.  This error code was
reused by the picam (princeton instruments camera) module, when the
PiCam python interface to the princeton instruments library was unavailable.
At some point the it was rename to have a 2 at the end.
This change reuses the same error value and gives it a new more meaningful name.","The original PY_DEV_NOTFOUND is used to signal that support for a given
MDSplus device type is not available in python.  This error code was
reused by the picam (princeton instruments camera) module, when the
PiCam python interface to the princeton instruments library was unavailable.
At some point the it was rename to have a 2 at the end.
This change reuses the same error value and gives it a new more meaningful name.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,706,2016-11-09T02:56:36Z,2016-11-09T05:17:02Z,2017-05-03T12:12:56Z,MERGED,True,21,41,4,https://github.com/joshStillerman,update forms for kth in Sweden,1,[],https://github.com/MDSplus/mdsplus/pull/706,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/706,"Remove 'clock' from jrg_adc32a - it is an output
Add menu item 'External' to a3248 - sets clock code to 0

note the presence of value in the external clock field is what
controls this behavior.  If it is there the clock is ignored.","Remove 'clock' from jrg_adc32a - it is an output
Add menu item 'External' to a3248 - sets clock code to 0

note the presence of value in the external clock field is what
controls this behavior.  If it is there the clock is ignored.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,707,2016-11-09T12:23:55Z,2016-11-09T12:52:59Z,2017-05-03T12:12:55Z,MERGED,True,22,1,2,https://github.com/joshStillerman,Somehow missed the ext_clock field on the a3248 form,1,[],https://github.com/MDSplus/mdsplus/pull/707,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/707,Added one more field to the a3248 java setup form,Added one more field to the a3248 java setup form,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,708,2016-11-09T19:04:39Z,2016-11-09T19:05:23Z,2016-11-09T19:05:23Z,MERGED,True,486,802,14,https://github.com/zack-vii,Zck rebased twf refact python addon,6,[],https://github.com/MDSplus/mdsplus/pull/708,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/708,new test and cleaner xxx methods,new test and cleaner xxx methods,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,709,2016-11-09T19:49:23Z,2016-11-09T20:28:50Z,2016-11-09T20:28:58Z,MERGED,True,2,0,2,https://github.com/tfredian,Lost NidOffset for frequency in A3248 form,1,[],https://github.com/MDSplus/mdsplus/pull/709,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/709,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,710,2016-11-10T01:20:45Z,2016-11-10T01:22:08Z,2016-11-10T01:22:08Z,CLOSED,False,13,6,1,https://github.com/GabrieleManduchi,Avoid useless operations if no resampling,1,[],https://github.com/MDSplus/mdsplus/pull/710,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/710,First and very simple fix that greatly improves performance,First and very simple fix that greatly improves performance,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,711,2016-11-10T01:25:21Z,2016-11-10T05:41:51Z,2017-05-03T12:12:52Z,MERGED,True,14,6,1,https://github.com/GabrieleManduchi,Xtreeshr performance,3,[],https://github.com/MDSplus/mdsplus/pull/711,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/711,Small change producing great improvement!,Small change producing great improvement!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,712,2016-11-10T14:16:25Z,2016-11-10T14:58:19Z,2017-02-06T21:19:17Z,MERGED,True,7,8,1,https://github.com/tfredian,Fix TdiTrans.c which used wrong descriptor size and address when copy…,1,[],https://github.com/MDSplus/mdsplus/pull/712,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/712,…ing from original array descriptor into the answer descriptor. This was discovered when running with sanitize=thread.,…ing from original array descriptor into the answer descriptor. This was discovered when running with sanitize=thread.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,713,2016-11-10T14:27:11Z,2016-11-10T16:38:27Z,2017-02-06T21:19:12Z,MERGED,True,7,8,1,https://github.com/tfredian,Fix TdiTrans.c which used wrong descriptor size and address when copy…,1,[],https://github.com/MDSplus/mdsplus/pull/713,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/713,…ing from original array descriptor into the answer descriptor. This was discovered when running with sanitize=thread.,…ing from original array descriptor into the answer descriptor. This was discovered when running with sanitize=thread.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,714,2016-11-11T21:02:21Z,2016-11-14T20:35:10Z,2016-11-14T20:35:10Z,MERGED,True,57,42,5,https://github.com/zack-vii,added Python-Tdi-Interface check and fixes discovered sanitizer issue on fc22,7,[],https://github.com/MDSplus/mdsplus/pull/714,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/714,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,714,2016-11-11T21:02:21Z,2016-11-14T20:35:10Z,2016-11-14T20:35:10Z,MERGED,True,57,42,5,https://github.com/zack-vii,added Python-Tdi-Interface check and fixes discovered sanitizer issue on fc22,7,[],https://github.com/MDSplus/mdsplus/pull/714,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/714#issuecomment-260411264,,"@tfredian: If it does not crash any other os this should fix the sanitizer issue on fc22.
lib in Initialize and ans_d.pointer in findModule have not been freed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,715,2016-11-14T10:52:51Z,2016-11-14T20:38:02Z,2016-11-14T20:38:02Z,MERGED,True,23,65,2,https://github.com/zack-vii,replace pyfun with py version,1,[],https://github.com/MDSplus/mdsplus/pull/715,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/715,and to check if my mistakenly direkt push broke anything,and to check if my mistakenly direkt push broke anything,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,716,2016-11-14T12:32:17Z,2016-11-14T13:17:14Z,2016-11-14T13:18:16Z,MERGED,True,7,1,1,https://github.com/zack-vii,fixed TdiExtPython handling None,1,[],https://github.com/MDSplus/mdsplus/pull/716,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/716,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,717,2016-11-14T14:00:17Z,2016-11-14T15:48:25Z,2017-02-06T21:19:10Z,CLOSED,False,1,7,1,https://github.com/tfredian,"Revert ""fixed TdiExtPython handling None""",1,[],https://github.com/MDSplus/mdsplus/pull/717,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/717,"Reverts #716
This change does not work! Py_None is not a symbol in libpython and therefore cannot be loaded. It is defined in a macro and currently the python headers are not required to build MDSplus.","Reverts #716
This change does not work! Py_None is not a symbol in libpython and therefore cannot be loaded. It is defined in a macro and currently the python headers are not required to build MDSplus.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,718,2016-11-15T19:17:27Z,2016-11-15T20:51:45Z,2016-11-15T20:51:45Z,CLOSED,False,267,311,32,https://github.com/zack-vii,handle Windows compiler issues - test,5,[],https://github.com/MDSplus/mdsplus/pull/718,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/718,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,719,2016-11-15T19:49:23Z,2016-11-15T21:48:28Z,2016-11-15T21:48:32Z,MERGED,True,4,4,4,https://github.com/zack-vii,updated packaging,1,[],https://github.com/MDSplus/mdsplus/pull/719,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/719,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,720,2016-11-15T22:40:41Z,2016-11-15T23:11:37Z,2016-11-16T00:52:35Z,MERGED,True,922,4,7,https://github.com/zack-vii,zck_deploy_update,2,[],https://github.com/MDSplus/mdsplus/pull/720,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/720,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,721,2016-11-15T23:08:55Z,2016-11-15T23:11:28Z,2016-11-15T23:11:28Z,CLOSED,False,34,38,1,https://github.com/kgerickson,Kge cppfix,6,[],https://github.com/MDSplus/mdsplus/pull/721,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/721,Minor cleanups to the mdsobjects interface,Minor cleanups to the mdsobjects interface,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,722,2016-11-15T23:16:54Z,2016-11-16T12:53:10Z,2017-05-03T12:12:50Z,MERGED,True,34,38,1,https://github.com/kgerickson,Kge cppfix,6,[],https://github.com/MDSplus/mdsplus/pull/722,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/722,Minor cleanups to the mdsobjects interface,Minor cleanups to the mdsobjects interface,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,723,2016-11-16T00:59:15Z,2016-11-16T13:22:23Z,2016-11-16T13:22:23Z,MERGED,True,497,566,43,https://github.com/zack-vii,Zck windows compiler warninges,21,[],https://github.com/MDSplus/mdsplus/pull/723,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/723,"fixes all current code related warnings so -Werror can be used.
This might fix some Windows problems that are pthread related","fixes all current code related warnings so -Werror can be used.
This might fix some Windows problems that are pthread related",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,723,2016-11-16T00:59:15Z,2016-11-16T13:22:23Z,2016-11-16T13:22:23Z,MERGED,True,497,566,43,https://github.com/zack-vii,Zck windows compiler warninges,21,[],https://github.com/MDSplus/mdsplus/pull/723,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/723#issuecomment-260834339,"fixes all current code related warnings so -Werror can be used.
This might fix some Windows problems that are pthread related","Testet it on windows10 and indeed it fixed the pthread problem on dispatching from mdstcl.
wfevent still takes two events to return this is the same behavior as for e.g. alpha-7.1-55",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,724,2016-11-16T14:49:40Z,2016-11-16T15:14:42Z,2017-02-06T21:18:57Z,MERGED,True,7,1,1,https://github.com/tfredian,Although shutdown is supposed to cancel the recvfrom used in the hand…,1,[],https://github.com/MDSplus/mdsplus/pull/724,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/724,"…leMessage thread of UdpEvents.c
it does not on windows. This caused the MdsEventCan on the event to hang waiting for the
handleMessage thread to complete. Performing a windows closesocket on the socket does abort the
recvfrom and fixes the problem.","…leMessage thread of UdpEvents.c
it does not on windows. This caused the MdsEventCan on the event to hang waiting for the
handleMessage thread to complete. Performing a windows closesocket on the socket does abort the
recvfrom and fixes the problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,725,2016-11-16T15:27:00Z,2016-11-16T16:48:45Z,2017-03-15T11:50:42Z,MERGED,True,767,580,18,https://github.com/zack-vii,Zck windows compiler warninges,3,[],https://github.com/MDSplus/mdsplus/pull/725,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/725,"performs unit tests on wine when building for windows.
python tests are skipped though ?!","performs unit tests on wine when building for windows.
python tests are skipped though ?!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,725,2016-11-16T15:27:00Z,2016-11-16T16:48:45Z,2017-03-15T11:50:42Z,MERGED,True,767,580,18,https://github.com/zack-vii,Zck windows compiler warninges,3,[],https://github.com/MDSplus/mdsplus/pull/725,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/725#issuecomment-260990068,"performs unit tests on wine when building for windows.
python tests are skipped though ?!","@tfredian: I assume one need to update the dockerimage to enable valgrind and sanitizer support, also it might be useful to use a more recent version of wine64 ::edit:: with python 2.7 installed",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,725,2016-11-16T15:27:00Z,2016-11-16T16:48:45Z,2017-03-15T11:50:42Z,MERGED,True,767,580,18,https://github.com/zack-vii,Zck windows compiler warninges,3,[],https://github.com/MDSplus/mdsplus/pull/725,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/725#issuecomment-261000730,"performs unit tests on wine when building for windows.
python tests are skipped though ?!","I don't know what the current state of sanitize support is for mingw64.
Here is a link to some mention of supporting undefined:
https://sourceforge.net/p/mingw-w64/mailman/message/32314249/
The following link indicates we should be able to run wine under
valgrind: https://wiki.winehq.org/Wine_and_Valgrind
The dockerfile used to build the windows docker can be found at:
https://github.com/MDSplus/Docker/tree/master/windows. If you want to
play with getting valgrind, sanitize feel free to build a new docker
image starting with the original dockerfile. In theory you should be
able to override the docker image used by specifying the
--dockerimage=image option to build.sh. If necessary we could use a
different base os for the windows dockerimage if we need newer versions
of any of the tools. If you come up with a new improved dockerfile issue
a pull request and I can merge it and get dockerhub to build a new
docker image.
On 11/16/2016 11:15 AM, zack-vii wrote:

@tfredian https://github.com/tfredian: I assume one need to update
the dockerimage to enable valgrind and sanitizer support, also it
might be useful to use a more recent version of wine64
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#725 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AHG5O7XeD659O3-vQliZyimamqTj1dQ-ks5q-ywmgaJpZM4Kz_6E.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,726,2016-11-16T19:34:09Z,2016-11-17T18:52:22Z,2017-01-05T14:53:18Z,MERGED,True,1,0,1,https://github.com/tfredian,Add fc23 build support,1,[],https://github.com/MDSplus/mdsplus/pull/726,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/726,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,727,2016-11-17T15:45:30Z,2016-11-17T19:16:26Z,2016-11-17T19:53:54Z,MERGED,True,12,22,4,https://github.com/zack-vii,fixes tdi string operations sanitizer drop outs,1,[],https://github.com/MDSplus/mdsplus/pull/727,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/727,"-tditest: executing empty command
-tditest: executing command with syntax error on first position
-correct calculation of expected string length in StrAppend (do not map to short before check)
possibly more","-tditest: executing empty command
-tditest: executing command with syntax error on first position
-correct calculation of expected string length in StrAppend (do not map to short before check)
possibly more",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,728,2016-11-17T16:41:44Z,2016-11-17T17:32:21Z,2016-11-18T16:29:16Z,MERGED,True,4,0,1,https://github.com/tfredian,Use closesocket on windows when canceling an event,1,[],https://github.com/MDSplus/mdsplus/pull/728,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/728,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,729,2016-11-17T19:22:45Z,2016-11-17T19:58:41Z,2016-11-18T16:29:10Z,MERGED,True,4,4,1,https://github.com/tfredian,Remove extra branch directory in publish directory tree,1,[],https://github.com/MDSplus/mdsplus/pull/729,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/729,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,730,2016-11-17T20:03:41Z,2016-11-17T20:29:37Z,2016-11-18T16:29:06Z,MERGED,True,2,3,1,https://github.com/tfredian,Fix small memory leak in mdsconnect support of TdiShrExt.c,1,[],https://github.com/MDSplus/mdsplus/pull/730,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/730,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,731,2016-11-18T14:31:02Z,2016-11-18T16:28:44Z,2016-11-18T16:28:49Z,MERGED,True,7,5,1,https://github.com/tfredian,Fix install script warnings on repo rpm,1,[],https://github.com/MDSplus/mdsplus/pull/731,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/731,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,732,2016-11-18T14:41:47Z,2016-11-18T16:28:20Z,2016-11-18T16:29:02Z,MERGED,True,6,3,1,https://github.com/tfredian,Use symbolic links for mdsip plugins which use tunnel protocol,1,[],https://github.com/MDSplus/mdsplus/pull/732,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/732,"The make of mdstcpip created symlinks for plugins like libMdsIpSSH.so
which point to libMdsIpTunnel.so. This feature tunnels mdsip messaging
through shell scripts which can be used for setting up communications
between the client and server. These symlinks were replaced by copies
of the shared library when performing make install because the
/usr/bin/install application was used to install these libraries in
the installation root. The rules for installing these tunneling libraries
now create symlinks instead of using /usr/bin/install.","The make of mdstcpip created symlinks for plugins like libMdsIpSSH.so
which point to libMdsIpTunnel.so. This feature tunnels mdsip messaging
through shell scripts which can be used for setting up communications
between the client and server. These symlinks were replaced by copies
of the shared library when performing make install because the
/usr/bin/install application was used to install these libraries in
the installation root. The rules for installing these tunneling libraries
now create symlinks instead of using /usr/bin/install.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,733,2016-11-18T17:52:47Z,2016-11-18T18:18:01Z,2016-11-19T13:46:06Z,MERGED,True,34,33,2,https://github.com/zack-vii,fix two segfaults in mdsdcl and tcl,1,[],https://github.com/MDSplus/mdsplus/pull/733,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/733,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,734,2016-11-18T21:24:06Z,2016-11-19T23:49:53Z,2016-11-19T23:49:57Z,MERGED,True,87,134,10,https://github.com/tfredian,Add an MDSplus symlink which can be used for tests,5,[],https://github.com/MDSplus/mdsplus/pull/734,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/734,"The python tests now add the srcdir/mdsobjects/python/tests
to the beginning of the python sys.path. This causes the import
of the MDSplus module to refer to the srcdir/mdsobjects/python
directory ensuring that the srcdir version of the MDSplus module
is what is imported. The python tests also define PYTHONPATH
so that the import of MDSplus during tdi's dynamic invocation of
python will use the srcdir version.
modified:   deploy/platform/debian/debian_docker_build.sh
modified:   deploy/platform/redhat/redhat_docker_build.sh
Removed creation of MDSplus symlink and define the PyLib environment
variable using the version information of the python used in tests.
new file:   mdsobjects/python/tests/MDSplus
Add symlink for MDSplus module which can be used for python testing or
debugging the MDSplus python module. If the MDSplus module is not currently
installed you can tell python to load the MDSplus modul from your srcdir
by creating an environment variable as follows:
export PYTHONPATH='srcdir'/mdsobjects/python/tests
where: 'srcdir' is replaced by the directory of your mdsplus sources.
modified:   mdsobjects/python/tests/connectionUnitTest.py
modified:   mdsobjects/python/tests/dataUnitTest.py
modified:   mdsobjects/python/tests/exceptionUnitTest.py
modified:   mdsobjects/python/tests/segmentsUnitTest.py
modified:   mdsobjects/python/tests/threadsUnitTest.py
modified:   mdsobjects/python/tests/treeUnitTest.py
Use the MDSplus symlink to find the MDSplus module. The use of the names of
individual python modules in the python directory is no longer needed since
with the MDSplus module location defined you can import MDSplus directly.","The python tests now add the srcdir/mdsobjects/python/tests
to the beginning of the python sys.path. This causes the import
of the MDSplus module to refer to the srcdir/mdsobjects/python
directory ensuring that the srcdir version of the MDSplus module
is what is imported. The python tests also define PYTHONPATH
so that the import of MDSplus during tdi's dynamic invocation of
python will use the srcdir version.
modified:   deploy/platform/debian/debian_docker_build.sh
modified:   deploy/platform/redhat/redhat_docker_build.sh
Removed creation of MDSplus symlink and define the PyLib environment
variable using the version information of the python used in tests.
new file:   mdsobjects/python/tests/MDSplus
Add symlink for MDSplus module which can be used for python testing or
debugging the MDSplus python module. If the MDSplus module is not currently
installed you can tell python to load the MDSplus modul from your srcdir
by creating an environment variable as follows:
export PYTHONPATH='srcdir'/mdsobjects/python/tests
where: 'srcdir' is replaced by the directory of your mdsplus sources.
modified:   mdsobjects/python/tests/connectionUnitTest.py
modified:   mdsobjects/python/tests/dataUnitTest.py
modified:   mdsobjects/python/tests/exceptionUnitTest.py
modified:   mdsobjects/python/tests/segmentsUnitTest.py
modified:   mdsobjects/python/tests/threadsUnitTest.py
modified:   mdsobjects/python/tests/treeUnitTest.py
Use the MDSplus symlink to find the MDSplus module. The use of the names of
individual python modules in the python directory is no longer needed since
with the MDSplus module location defined you can import MDSplus directly.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,734,2016-11-18T21:24:06Z,2016-11-19T23:49:53Z,2016-11-19T23:49:57Z,MERGED,True,87,134,10,https://github.com/tfredian,Add an MDSplus symlink which can be used for tests,5,[],https://github.com/MDSplus/mdsplus/pull/734,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/734#issuecomment-261656823,"The python tests now add the srcdir/mdsobjects/python/tests
to the beginning of the python sys.path. This causes the import
of the MDSplus module to refer to the srcdir/mdsobjects/python
directory ensuring that the srcdir version of the MDSplus module
is what is imported. The python tests also define PYTHONPATH
so that the import of MDSplus during tdi's dynamic invocation of
python will use the srcdir version.
modified:   deploy/platform/debian/debian_docker_build.sh
modified:   deploy/platform/redhat/redhat_docker_build.sh
Removed creation of MDSplus symlink and define the PyLib environment
variable using the version information of the python used in tests.
new file:   mdsobjects/python/tests/MDSplus
Add symlink for MDSplus module which can be used for python testing or
debugging the MDSplus python module. If the MDSplus module is not currently
installed you can tell python to load the MDSplus modul from your srcdir
by creating an environment variable as follows:
export PYTHONPATH='srcdir'/mdsobjects/python/tests
where: 'srcdir' is replaced by the directory of your mdsplus sources.
modified:   mdsobjects/python/tests/connectionUnitTest.py
modified:   mdsobjects/python/tests/dataUnitTest.py
modified:   mdsobjects/python/tests/exceptionUnitTest.py
modified:   mdsobjects/python/tests/segmentsUnitTest.py
modified:   mdsobjects/python/tests/threadsUnitTest.py
modified:   mdsobjects/python/tests/treeUnitTest.py
Use the MDSplus symlink to find the MDSplus module. The use of the names of
individual python modules in the python directory is no longer needed since
with the MDSplus module location defined you can import MDSplus directly.",The change to define PyLib in the tests script uncovered a memory leak due to not freeing the string passed to putenv. This will probably need to be ignored since some earlier versions of glibc do not copy the  string and therefore require the memory used when calling putenv to not be freed. I'll fix this next week.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,734,2016-11-18T21:24:06Z,2016-11-19T23:49:53Z,2016-11-19T23:49:57Z,MERGED,True,87,134,10,https://github.com/tfredian,Add an MDSplus symlink which can be used for tests,5,[],https://github.com/MDSplus/mdsplus/pull/734,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/734#issuecomment-261743032,"The python tests now add the srcdir/mdsobjects/python/tests
to the beginning of the python sys.path. This causes the import
of the MDSplus module to refer to the srcdir/mdsobjects/python
directory ensuring that the srcdir version of the MDSplus module
is what is imported. The python tests also define PYTHONPATH
so that the import of MDSplus during tdi's dynamic invocation of
python will use the srcdir version.
modified:   deploy/platform/debian/debian_docker_build.sh
modified:   deploy/platform/redhat/redhat_docker_build.sh
Removed creation of MDSplus symlink and define the PyLib environment
variable using the version information of the python used in tests.
new file:   mdsobjects/python/tests/MDSplus
Add symlink for MDSplus module which can be used for python testing or
debugging the MDSplus python module. If the MDSplus module is not currently
installed you can tell python to load the MDSplus modul from your srcdir
by creating an environment variable as follows:
export PYTHONPATH='srcdir'/mdsobjects/python/tests
where: 'srcdir' is replaced by the directory of your mdsplus sources.
modified:   mdsobjects/python/tests/connectionUnitTest.py
modified:   mdsobjects/python/tests/dataUnitTest.py
modified:   mdsobjects/python/tests/exceptionUnitTest.py
modified:   mdsobjects/python/tests/segmentsUnitTest.py
modified:   mdsobjects/python/tests/threadsUnitTest.py
modified:   mdsobjects/python/tests/treeUnitTest.py
Use the MDSplus symlink to find the MDSplus module. The use of the names of
individual python modules in the python directory is no longer needed since
with the MDSplus module location defined you can import MDSplus directly.","HI Tom,
I am planning to do some major changes to the deploy scripts, once this pull is ready I will craft a rebased version on this commit. The Idea is to make use of common code and functions to make it easier to evolve them.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,735,2016-11-19T05:10:32Z,2016-11-19T16:01:13Z,2016-11-19T16:01:13Z,CLOSED,False,1084,1300,19,https://github.com/zack-vii,Zck mirgrate pytests as far as supported,5,[],https://github.com/MDSplus/mdsplus/pull/735,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/735,"fixed bug in tcl partly fixed by previous patch
synchronized the docker scripts to match except of the real differences
added tests to python to prevent instability","fixed bug in tcl partly fixed by previous patch
synchronized the docker scripts to match except of the real differences
added tests to python to prevent instability",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,736,2016-11-19T19:36:45Z,2016-11-20T18:37:09Z,2016-11-20T18:37:09Z,CLOSED,False,602,2581,23,https://github.com/zack-vii,Zck deploy,9,[],https://github.com/MDSplus/mdsplus/pull/736,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/736,"makes it easier to introduce more tests.
python unittests in progress are relying on it.
however they discovered some errors that cause valgrind to fail on memcheck.","makes it easier to introduce more tests.
python unittests in progress are relying on it.
however they discovered some errors that cause valgrind to fail on memcheck.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,736,2016-11-19T19:36:45Z,2016-11-20T18:37:09Z,2016-11-20T18:37:09Z,CLOSED,False,602,2581,23,https://github.com/zack-vii,Zck deploy,9,[],https://github.com/MDSplus/mdsplus/pull/736,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/736#issuecomment-261760200,"makes it easier to introduce more tests.
python unittests in progress are relying on it.
however they discovered some errors that cause valgrind to fail on memcheck.",works. but that a tricky one. It gets stuck in an endless lo on fc23,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,736,2016-11-19T19:36:45Z,2016-11-20T18:37:09Z,2016-11-20T18:37:09Z,CLOSED,False,602,2581,23,https://github.com/zack-vii,Zck deploy,9,[],https://github.com/MDSplus/mdsplus/pull/736,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/736#issuecomment-261782308,"makes it easier to introduce more tests.
python unittests in progress are relying on it.
however they discovered some errors that cause valgrind to fail on memcheck.","not sure if my mail was actually send:
Good Morning Tom  @tfredian
there seems to be a problem on jenkins with my last PR, only on fc23 it got stuck in a test. not sure why as I cannot reproduce it locally. But this makes me think if a time out might be maybe useful or even better a possibility to interrupt running tests that are stuck or obsolete as an other os raised an error already.
update: seems like it is the ""MDSplus link""-merge that causes the ""loop?"" as alpha got stuck as well. I realised that there is an interactiveTerminal and an ssh access. I was wondering if I could get an account on jenkins.
cheers
Timo",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,737,2016-11-20T18:42:10Z,2016-11-20T19:33:40Z,2016-11-20T23:55:32Z,MERGED,True,5,3,1,https://github.com/zack-vii,fixed too early free when a status is returned on async mode,1,[],https://github.com/MDSplus/mdsplus/pull/737,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/737,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,738,2016-11-20T19:08:39Z,2016-11-20T19:32:16Z,2016-11-20T19:32:16Z,CLOSED,False,533,2461,15,https://github.com/zack-vii,Zck deploy,5,[],https://github.com/MDSplus/mdsplus/pull/738,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/738,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,739,2016-11-21T15:44:01Z,2016-11-21T20:49:56Z,2016-11-21T20:49:56Z,MERGED,True,535,2437,21,https://github.com/zack-vii,Zck deploy,15,[],https://github.com/MDSplus/mdsplus/pull/739,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/739,"some updates compared to #736

error handling: exit again on error (easier than return and passing down errorcode)
getenv to read dynamical errorflags
turned of faulty asan for fc23
cleanups","some updates compared to #736

error handling: exit again on error (easier than return and passing down errorcode)
getenv to read dynamical errorflags
turned of faulty asan for fc23
cleanups",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,740,2016-11-21T18:46:12Z,2016-11-28T17:36:52Z,2017-01-05T14:53:09Z,CLOSED,False,2,0,1,https://github.com/tfredian,Fix fc23 builds with the sanitize option.,2,[],https://github.com/MDSplus/mdsplus/pull/740,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/740,"On fc23 there seems to be a problem with the mechanism that
ctypes uses to find libraries when running sanitize tests are
performed. When performing sanitize tests using python it is
necessary to define LD_PRELOAD to point to the appropriate
sanitize shared library to ensure the library is preloaded prior
to accessing any library compiled and built using the sanitize
option. In fc23 there is a problem with the way ctypes loads
libraries because it spawns a gcc command. This command
intermittent hangs if LD_PRELOAD is defined. This change remove
the LD_PRELOAD environment variable early in the test to prevent
the ctypes library load problem.","On fc23 there seems to be a problem with the mechanism that
ctypes uses to find libraries when running sanitize tests are
performed. When performing sanitize tests using python it is
necessary to define LD_PRELOAD to point to the appropriate
sanitize shared library to ensure the library is preloaded prior
to accessing any library compiled and built using the sanitize
option. In fc23 there is a problem with the way ctypes loads
libraries because it spawns a gcc command. This command
intermittent hangs if LD_PRELOAD is defined. This change remove
the LD_PRELOAD environment variable early in the test to prevent
the ctypes library load problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,741,2016-11-22T14:45:41Z,2016-11-22T15:42:17Z,2016-11-22T15:42:17Z,MERGED,True,1,1,1,https://github.com/zack-vii,fixed cp _version.py error message by excluding buildroot from find r…,2,[],https://github.com/MDSplus/mdsplus/pull/741,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/741,…esults,…esults,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,742,2016-11-22T15:53:26Z,2016-11-22T16:55:19Z,2016-11-22T16:55:19Z,CLOSED,False,169,426,4,https://github.com/GabrieleManduchi,Fix china,2,[],https://github.com/MDSplus/mdsplus/pull/742,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/742,"Fix two issues discovered in out trip in China


jScope not being able to detect segmented nodes in expressions (and performing on the fly resampling) when the expression is specified in a node


XTreeGetRecord performance issues. Now unnecessary calls to TdiCompile and TdiData have been removed, with a significant improvement in performance","Fix two issues discovered in out trip in China


jScope not being able to detect segmented nodes in expressions (and performing on the fly resampling) when the expression is specified in a node


XTreeGetRecord performance issues. Now unnecessary calls to TdiCompile and TdiData have been removed, with a significant improvement in performance",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,743,2016-11-22T17:01:32Z,2016-11-22T19:23:49Z,2017-05-03T12:12:49Z,MERGED,True,169,426,4,https://github.com/GabrieleManduchi,Fix china,4,[],https://github.com/MDSplus/mdsplus/pull/743,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/743,"improvements in XTreeGetTimedRecord performance
allow jScope discover segmented nodes (and perform on the fly resampling) also when the expression is defined in a node content","improvements in XTreeGetTimedRecord performance
allow jScope discover segmented nodes (and perform on the fly resampling) also when the expression is defined in a node content",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,744,2016-11-22T19:22:41Z,2016-11-22T20:03:39Z,2016-11-22T20:03:39Z,MERGED,True,11,11,11,https://github.com/zack-vii,Zck deploy,4,[],https://github.com/MDSplus/mdsplus/pull/744,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/744,"fixes packaging for debian
dpkg -c shows links as ""link_path -> target_path""
stripping -> target_path","fixes packaging for debian
dpkg -c shows links as ""link_path -> target_path""
stripping -> target_path",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,745,2016-11-22T19:27:19Z,2016-11-22T20:12:34Z,2016-11-22T20:12:34Z,MERGED,True,464,614,10,https://github.com/zack-vii,Zck mirgrate pytests as far as supported,7,[],https://github.com/MDSplus/mdsplus/pull/745,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/745,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,746,2016-11-23T04:49:35Z,2016-11-23T04:49:49Z,2017-03-15T11:50:36Z,MERGED,True,3,3,1,https://github.com/zack-vii,increase the timeouts,1,[],https://github.com/MDSplus/mdsplus/pull/746,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/746,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,747,2016-11-23T20:37:55Z,2016-11-24T00:39:20Z,2016-11-24T00:39:20Z,MERGED,True,9,8,5,https://github.com/zack-vii,Zck deploy,2,[],https://github.com/MDSplus/mdsplus/pull/747,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/747,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,747,2016-11-23T20:37:55Z,2016-11-24T00:39:20Z,2016-11-24T00:39:20Z,MERGED,True,9,8,5,https://github.com/zack-vii,Zck deploy,2,[],https://github.com/MDSplus/mdsplus/pull/747,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/747#issuecomment-262624492,,only the valgrind issue remains,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,748,2016-11-24T21:11:39Z,2016-11-24T22:40:38Z,2016-11-24T22:40:38Z,MERGED,True,18,8,1,https://github.com/zack-vii,Zck deploy,2,[],https://github.com/MDSplus/mdsplus/pull/748,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/748,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,749,2016-11-25T15:20:20Z,2016-11-25T15:57:30Z,2016-12-29T10:42:03Z,MERGED,True,270,217,3,https://github.com/AndreaRigoni,fix m4_docker build for working with bash,1,[],https://github.com/MDSplus/mdsplus/pull/749,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/749,here it is .. convert dshell and m4_doker utilities to use bash.. waiting for a more clever function for treating quotes in sh.,here it is .. convert dshell and m4_doker utilities to use bash.. waiting for a more clever function for treating quotes in sh.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,750,2016-11-28T18:37:01Z,2016-11-28T19:05:23Z,2016-11-28T19:05:23Z,MERGED,True,62,92,9,https://github.com/zack-vii,Zck deploy,10,[],https://github.com/MDSplus/mdsplus/pull/750,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/750,"that should be all. the structure is now all the same for debian, redhat, and windows","that should be all. the structure is now all the same for debian, redhat, and windows",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,751,2016-11-28T20:39:30Z,2016-11-29T14:46:02Z,2016-12-02T12:58:06Z,MERGED,True,21,0,4,https://github.com/zack-vii,added DevNOT_A_PYDEVICE,1,[],https://github.com/MDSplus/mdsplus/pull/751,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/751,either for new refact or should be implemented in current python code,either for new refact or should be implemented in current python code,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,752,2016-11-28T20:42:22Z,2016-11-29T15:26:11Z,2016-11-29T15:26:11Z,MERGED,True,3,4,1,https://github.com/zack-vii,set default to a less site specific value,1,[],https://github.com/MDSplus/mdsplus/pull/752,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/752,since CMOD is out of operation it maybe makes sence to set the default value for the monitor to something more generic,since CMOD is out of operation it maybe makes sence to set the default value for the monitor to something more generic,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,753,2016-11-29T12:19:56Z,2016-11-29T13:55:16Z,2016-11-29T13:55:16Z,MERGED,True,0,1,1,https://github.com/zack-vii,remove link form setup.py as links are not supported like this,1,[],https://github.com/MDSplus/mdsplus/pull/753,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/753,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,754,2016-11-29T14:51:28Z,2016-11-29T15:24:58Z,2016-11-29T15:24:58Z,MERGED,True,1,1,1,https://github.com/zack-vii,prevents windows packing from including the MDSplus link,1,[],https://github.com/MDSplus/mdsplus/pull/754,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/754,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,755,2016-11-30T17:13:54Z,2016-12-01T13:49:37Z,2016-12-29T10:42:02Z,MERGED,True,174,10,39,https://github.com/AndreaRigoni,add help target using @TARGET_SELFHELP@ from ax_target_selfhelp.m4,1,[],https://github.com/MDSplus/mdsplus/pull/755,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/755,"This will add a help automation on target using a perl script injected into Makefile ...
To add a inline help on a target just write in Makefile:
target1:  ##@[key] [help string 1]
target2: ##@[key] [help string 2]
target2: 
this will be converted to a string like:
key:
target1        help string 1
target2        help string 2
for ref see changes in Makefile.in
hope this helps :-)","This will add a help automation on target using a perl script injected into Makefile ...
To add a inline help on a target just write in Makefile:
target1:  ##@[key] [help string 1]
target2: ##@[key] [help string 2]
target2: 
this will be converted to a string like:
key:
target1        help string 1
target2        help string 2
for ref see changes in Makefile.in
hope this helps :-)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,756,2016-12-01T14:04:57Z,2016-12-09T20:28:15Z,2017-01-05T14:53:35Z,MERGED,True,305,693,49,https://github.com/GabrieleManduchi,Fix limits error introduced by check for date,24,[],https://github.com/MDSplus/mdsplus/pull/756,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/756,Urgent fix for a bug recently introduced when checking for X limits expressed ad date,Urgent fix for a bug recently introduced when checking for X limits expressed ad date,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,756,2016-12-01T14:04:57Z,2016-12-09T20:28:15Z,2017-01-05T14:53:35Z,MERGED,True,305,693,49,https://github.com/GabrieleManduchi,Fix limits error introduced by check for date,24,[],https://github.com/MDSplus/mdsplus/pull/756,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/756#issuecomment-264190948,Urgent fix for a bug recently introduced when checking for X limits expressed ad date,"In addition to the fix, I have also added the changes made by Keith to remove compiler warnings that apparently did not break anything",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,757,2016-12-01T20:13:41Z,2016-12-01T21:42:35Z,2017-01-05T14:53:02Z,MERGED,True,7,31,7,https://github.com/tfredian,Prevent the MDSplus directory path from recursing,2,[],https://github.com/MDSplus/mdsplus/pull/757,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/757,"When running the python tests the directory where the
test modules were located kept recursing with:
MDSplus/tests/MDSplus/tests... when the tests were loaded
This was caused because the tests/__init__py module referred
to itself by referencing from MDSplus.tests import xxxx","When running the python tests the directory where the
test modules were located kept recursing with:
MDSplus/tests/MDSplus/tests... when the tests were loaded
This was caused because the tests/__init__py module referred
to itself by referencing from MDSplus.tests import xxxx",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,758,2016-12-01T22:06:12Z,2016-12-01T23:10:11Z,2016-12-01T23:10:15Z,MERGED,True,39,38,1,https://github.com/zack-vii,fixed memory access violation,1,[],https://github.com/MDSplus/mdsplus/pull/758,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/758,line 97,line 97,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,759,2016-12-01T22:10:56Z,2016-12-01T23:09:52Z,2016-12-01T23:09:58Z,MERGED,True,1,7037,91,https://github.com/zack-vii,Zck packing link,2,[],https://github.com/MDSplus/mdsplus/pull/759,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/759,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,760,2016-12-01T23:28:04Z,2016-12-02T02:49:06Z,2016-12-19T18:30:56Z,MERGED,True,65,67,18,https://github.com/zack-vii,Zck python testd,5,[],https://github.com/MDSplus/mdsplus/pull/760,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/760,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,761,2016-12-02T11:40:10Z,2016-12-02T12:57:14Z,2016-12-02T12:57:19Z,MERGED,True,2,4,1,https://github.com/zack-vii,fixed error introduced by change made in f18f13a,1,[],https://github.com/MDSplus/mdsplus/pull/761,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/761,LibCallg on TreeDoMethod is expected to return an integer (int) value,LibCallg on TreeDoMethod is expected to return an integer (int) value,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,762,2016-12-03T14:44:12Z,2016-12-03T23:28:09Z,2016-12-04T00:04:06Z,MERGED,True,8,14,4,https://github.com/zack-vii,Zck librtl getenv win,4,[],https://github.com/MDSplus/mdsplus/pull/762,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/762,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,763,2016-12-06T21:42:16Z,2016-12-20T15:40:42Z,2017-03-23T23:11:11Z,CLOSED,False,1635,1361,33,https://github.com/zack-vii,Zck librtl getenv win,37,[],https://github.com/MDSplus/mdsplus/pull/763,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/763,some major updates on python tests and interface,some major updates on python tests and interface,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,763,2016-12-06T21:42:16Z,2016-12-20T15:40:42Z,2017-03-23T23:11:11Z,CLOSED,False,1635,1361,33,https://github.com/zack-vii,Zck librtl getenv win,37,[],https://github.com/MDSplus/mdsplus/pull/763,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/763#issuecomment-265561607,some major updates on python tests and interface,Reopen to test jenkins,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,764,2016-12-07T13:44:21Z,2017-09-06T07:39:50Z,2017-09-06T07:40:15Z,CLOSED,False,62,1,2,https://github.com/GabrieleManduchi,Gm new mdsmisc fun,3,[],https://github.com/MDSplus/mdsplus/pull/764,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/764,These changes in mdsmisc ScopeUtilities provide support for profile visualization  stored in segmented nodes as 2D rows. jScope can now display profiles in an interactive way as well as the last profile during computatio,These changes in mdsmisc ScopeUtilities provide support for profile visualization  stored in segmented nodes as 2D rows. jScope can now display profiles in an interactive way as well as the last profile during computatio,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,764,2016-12-07T13:44:21Z,2017-09-06T07:39:50Z,2017-09-06T07:40:15Z,CLOSED,False,62,1,2,https://github.com/GabrieleManduchi,Gm new mdsmisc fun,3,[],https://github.com/MDSplus/mdsplus/pull/764,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/764#issuecomment-265573570,These changes in mdsmisc ScopeUtilities provide support for profile visualization  stored in segmented nodes as 2D rows. jScope can now display profiles in an interactive way as well as the last profile during computatio,reopen to test jenkins,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,764,2016-12-07T13:44:21Z,2017-09-06T07:39:50Z,2017-09-06T07:40:15Z,CLOSED,False,62,1,2,https://github.com/GabrieleManduchi,Gm new mdsmisc fun,3,[],https://github.com/MDSplus/mdsplus/pull/764,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/764#issuecomment-285976066,These changes in mdsmisc ScopeUtilities provide support for profile visualization  stored in segmented nodes as 2D rows. jScope can now display profiles in an interactive way as well as the last profile during computatio,@GabrieleManduchi: Is this PR still up to date. the description seems to cover more than the new method getLastProfile,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,765,2016-12-08T17:47:27Z,2016-12-08T21:09:40Z,2016-12-08T21:09:40Z,MERGED,True,19,12,5,https://github.com/zack-vii,added NOMAKE option to only run the configure script with correct par…,1,[],https://github.com/MDSplus/mdsplus/pull/765,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/765,…ams usefull in interactive mode,…ams usefull in interactive mode,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,766,2016-12-13T18:15:32Z,2016-12-13T18:43:15Z,2016-12-13T18:43:19Z,MERGED,True,4811,4524,16,https://github.com/tfredian,Simplify python mdsExceptions implementation,1,[],https://github.com/MDSplus/mdsplus/pull/766,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/766,"The mdsshr/gen_messages.py script now generates a much
simpler mdsobjects/python/mdsExceptions.py module instead
of building mdsExceptions as a subpackage. This greatly
simplifies things without any need to do special imports
and global inspections which was there in mdsExceptions/init.py.","The mdsshr/gen_messages.py script now generates a much
simpler mdsobjects/python/mdsExceptions.py module instead
of building mdsExceptions as a subpackage. This greatly
simplifies things without any need to do special imports
and global inspections which was there in mdsExceptions/init.py.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,767,2016-12-14T12:12:14Z,2016-12-14T12:34:02Z,2016-12-14T12:40:27Z,MERGED,True,1687,1668,11,https://github.com/zack-vii,fix file order by using python dict sort and lower cast,1,[],https://github.com/MDSplus/mdsplus/pull/767,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/767,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,768,2016-12-14T12:45:35Z,2016-12-15T15:26:14Z,2016-12-23T10:11:03Z,MERGED,True,22,24,12,https://github.com/zack-vii,fixup #767,3,[],https://github.com/MDSplus/mdsplus/pull/768,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/768,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,769,2016-12-15T02:14:17Z,2016-12-15T08:11:07Z,2016-12-15T08:11:07Z,MERGED,True,32,31,5,https://github.com/zack-vii,Zck deploy,3,[],https://github.com/MDSplus/mdsplus/pull/769,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/769,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,770,2016-12-19T18:17:42Z,2016-12-19T19:00:33Z,2016-12-19T19:00:41Z,MERGED,True,3,2,1,https://github.com/tfredian,Fix mdsdcl help command which causes segfault on no help errors.,1,[],https://github.com/MDSplus/mdsplus/pull/770,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/770,"When the parameter specified with the help command in mdsdcl
does not match a command the code was clearing the output buffer
and overwriting memory that had been freed often causing a segfault.
This fixes that problem.","When the parameter specified with the help command in mdsdcl
does not match a command the code was clearing the output buffer
and overwriting memory that had been freed often causing a segfault.
This fixes that problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,771,2016-12-19T19:11:30Z,2016-12-19T19:27:30Z,2016-12-19T19:27:33Z,MERGED,True,2,1,1,https://github.com/tfredian,Change status error when compiling nodes when not trees open.,1,[],https://github.com/MDSplus/mdsplus/pull/771,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/771,"Tdi returned a 0 failure status when it found a node reference
in an expression when no trees were open. The status return is
now changed to TreeNOT_OPEN to provide more useful information
about why the compile failed.","Tdi returned a 0 failure status when it found a node reference
in an expression when no trees were open. The status return is
now changed to TreeNOT_OPEN to provide more useful information
about why the compile failed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,772,2016-12-19T21:36:39Z,2016-12-19T21:53:12Z,2017-01-05T14:52:55Z,MERGED,True,5,4,1,https://github.com/tfredian,Fix buffer overrun in tdi trace messages with compiling builtins,1,[],https://github.com/MDSplus/mdsplus/pull/772,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/772,"When tdishr attempts to compile builtins using the builtin names
such as add(), subtract(), etc... it miscalculates in the yacc
code the exact location of the error if these are called with
zero arguments and then writes past the end of allocated memory.
This fix should prevent this type of memory overrun.","When tdishr attempts to compile builtins using the builtin names
such as add(), subtract(), etc... it miscalculates in the yacc
code the exact location of the error if these are called with
zero arguments and then writes past the end of allocated memory.
This fix should prevent this type of memory overrun.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,773,2016-12-20T16:51:25Z,2016-12-20T17:20:41Z,2016-12-23T10:10:35Z,MERGED,True,6,7,1,https://github.com/zack-vii,remove linebreak in now on win32,1,[],https://github.com/MDSplus/mdsplus/pull/773,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/773,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,774,2016-12-20T17:57:11Z,2017-01-05T14:31:59Z,2017-03-23T23:11:08Z,MERGED,True,707,444,23,https://github.com/zack-vii,Zck update oldpython,12,[],https://github.com/MDSplus/mdsplus/pull/774,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/774,"updates on python test using the old python api
the old python api tests will fail san-address due to possible memory leaks","updates on python test using the old python api
the old python api tests will fail san-address due to possible memory leaks",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,775,2016-12-22T13:14:40Z,2016-12-23T10:06:42Z,2016-12-23T10:10:27Z,MERGED,True,12,8,4,https://github.com/zack-vii,fixed memory leak in mdstcpip,3,[],https://github.com/MDSplus/mdsplus/pull/775,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/775,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,776,2016-12-23T10:12:42Z,2016-12-27T14:53:24Z,2016-12-27T14:53:24Z,MERGED,True,2582,2488,80,https://github.com/zack-vii,Zck MDSplusSTATUS headers ,7,[],https://github.com/MDSplus/mdsplus/pull/776,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/776,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,776,2016-12-23T10:12:42Z,2016-12-27T14:53:24Z,2016-12-27T14:53:24Z,MERGED,True,2582,2488,80,https://github.com/zack-vii,Zck MDSplusSTATUS headers ,7,[],https://github.com/MDSplus/mdsplus/pull/776,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/776#issuecomment-268978511,,Is there anything you can think of that might be wrong with this?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,778,2016-12-28T15:56:56Z,2016-12-29T10:20:18Z,2016-12-29T10:41:38Z,CLOSED,False,121,27,18,https://github.com/AndreaRigoni,fixed conversion of std::complex to the test array .. std::complex::r…,5,[],https://github.com/MDSplus/mdsplus/pull/778,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/778,fixes the use of std::complex::real(),fixes the use of std::complex::real(),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,779,2016-12-29T02:28:36Z,2016-12-29T02:28:58Z,2016-12-29T03:12:42Z,MERGED,True,2,0,2,https://github.com/zack-vii,updated packaging,1,[],https://github.com/MDSplus/mdsplus/pull/779,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/779,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,780,2016-12-29T10:39:43Z,2017-01-13T18:36:30Z,2017-01-16T08:17:04Z,MERGED,True,146,36,28,https://github.com/AndreaRigoni,Fix fc25,6,[],https://github.com/MDSplus/mdsplus/pull/780,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/780,"This should fix issues in fc25.
[ref1]
It appears that the various sanitizers no longer ignore suppression rules that are not applicable to the type of sanitize being run. Instead it issues an parse error when reading the suppression file. I guess we will need to split up the suppression into separate files based on the type of suppression being used. Also as far as I can tell the leak sanitize is now separated from the address sanitize (now lsan and asan) so the address sanitize can't even parse leak:xxxx suppression statements. This might add some more complexity to the configure/make setup since some platforms only have asan which does both address and leak.
[ref2]
getting compiler errors in MdsScalarTest_NumericConversion.cpp","This should fix issues in fc25.
[ref1]
It appears that the various sanitizers no longer ignore suppression rules that are not applicable to the type of sanitize being run. Instead it issues an parse error when reading the suppression file. I guess we will need to split up the suppression into separate files based on the type of suppression being used. Also as far as I can tell the leak sanitize is now separated from the address sanitize (now lsan and asan) so the address sanitize can't even parse leak:xxxx suppression statements. This might add some more complexity to the configure/make setup since some platforms only have asan which does both address and leak.
[ref2]
getting compiler errors in MdsScalarTest_NumericConversion.cpp",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,780,2016-12-29T10:39:43Z,2017-01-13T18:36:30Z,2017-01-16T08:17:04Z,MERGED,True,146,36,28,https://github.com/AndreaRigoni,Fix fc25,6,[],https://github.com/MDSplus/mdsplus/pull/780,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/780#issuecomment-272512844,"This should fix issues in fc25.
[ref1]
It appears that the various sanitizers no longer ignore suppression rules that are not applicable to the type of sanitize being run. Instead it issues an parse error when reading the suppression file. I guess we will need to split up the suppression into separate files based on the type of suppression being used. Also as far as I can tell the leak sanitize is now separated from the address sanitize (now lsan and asan) so the address sanitize can't even parse leak:xxxx suppression statements. This might add some more complexity to the configure/make setup since some platforms only have asan which does both address and leak.
[ref2]
getting compiler errors in MdsScalarTest_NumericConversion.cpp",Builds succeeded after invoking them separately. Perhaps still a multi-build race condition exists.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,781,2016-12-30T16:48:36Z,2017-01-02T19:04:01Z,2017-01-05T14:53:31Z,MERGED,True,2,0,1,https://github.com/GabrieleManduchi,Fix memory leak in float arrays,1,[],https://github.com/MDSplus/mdsplus/pull/781,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/781,This fix solves the problem reported by Nikolaus Rath. The memory leak was due to the JNI called by the java (and therefore Matlab) interface for floating point arrays,This fix solves the problem reported by Nikolaus Rath. The memory leak was due to the JNI called by the java (and therefore Matlab) interface for floating point arrays,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,784,2017-01-04T16:53:06Z,2017-01-04T18:03:32Z,2017-01-04T18:12:10Z,MERGED,True,22,18,4,https://github.com/zack-vii,Zck treepathfix,3,[],https://github.com/MDSplus/mdsplus/pull/784,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/784,should fix #783 and to minor tweaks,should fix #783 and to minor tweaks,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,784,2017-01-04T16:53:06Z,2017-01-04T18:03:32Z,2017-01-04T18:12:10Z,MERGED,True,22,18,4,https://github.com/zack-vii,Zck treepathfix,3,[],https://github.com/MDSplus/mdsplus/pull/784,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/784#issuecomment-270429286,should fix #783 and to minor tweaks,retest,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,787,2017-01-05T17:26:06Z,2017-01-05T18:46:30Z,2017-01-05T19:01:58Z,MERGED,True,34,4,1,https://github.com/tfredian,Prevent thread conflicts in mdsdcl,1,[],https://github.com/MDSplus/mdsplus/pull/787,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/787,"The routines that set and get global settings of the command prompt
and default file extensions were not thread safe. This change adds
thread locking to prevent race conditions in threads.","The routines that set and get global settings of the command prompt
and default file extensions were not thread safe. This change adds
thread locking to prevent race conditions in threads.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,787,2017-01-05T17:26:06Z,2017-01-05T18:46:30Z,2017-01-05T19:01:58Z,MERGED,True,34,4,1,https://github.com/tfredian,Prevent thread conflicts in mdsdcl,1,[],https://github.com/MDSplus/mdsplus/pull/787,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/787#issuecomment-270709829,"The routines that set and get global settings of the command prompt
and default file extensions were not thread safe. This change adds
thread locking to prevent race conditions in threads.",retest,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,788,2017-01-05T19:02:16Z,2017-01-05T19:26:28Z,2017-01-05T19:26:35Z,MERGED,True,5,5,2,https://github.com/tfredian,Lengthen waits in tests to avoid intermittent failures,1,[],https://github.com/MDSplus/mdsplus/pull/788,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/788,"We are experiencing intermittent failure of some of the tests particularly
in those where subprocesses are started and then communication occurs
between the parent process and the subprocess. During pull request tests
and release builds these tests are performed in parallel during the build
and test for over a dozen different platforms on the same server and it is
suspected that under the heavy load the existing wait periods in the tests
may not be sufficient. This pull request increases time period of the waits
already built into the tests.","We are experiencing intermittent failure of some of the tests particularly
in those where subprocesses are started and then communication occurs
between the parent process and the subprocess. During pull request tests
and release builds these tests are performed in parallel during the build
and test for over a dozen different platforms on the same server and it is
suspected that under the heavy load the existing wait periods in the tests
may not be sufficient. This pull request increases time period of the waits
already built into the tests.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,789,2017-01-06T14:37:49Z,2017-01-06T15:59:01Z,2017-02-06T21:18:54Z,MERGED,True,17,1,1,https://github.com/tfredian,Verify tag_release operation,1,[],https://github.com/MDSplus/mdsplus/pull/789,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/789,"The release tagging operation sends a post to github using curl.
If there is a problem such as an invalid/expired github access token
used for tagging, curl returns a success status but the content of
the returned message contains the error information. If the tagging
succeeds the returned message contains information of the release tag.
This change now inspects the returned message to determine if the
operation was successful or not. New releases will not be published
unless the tagging was successful.","The release tagging operation sends a post to github using curl.
If there is a problem such as an invalid/expired github access token
used for tagging, curl returns a success status but the content of
the returned message contains the error information. If the tagging
succeeds the returned message contains information of the release tag.
This change now inspects the returned message to determine if the
operation was successful or not. New releases will not be published
unless the tagging was successful.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,790,2017-01-06T16:57:38Z,2017-01-06T17:35:35Z,2017-02-06T21:18:52Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix authentication problem with uploading python package to PYPI,1,[],https://github.com/MDSplus/mdsplus/pull/790,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/790,"For the python setup tools to upload to pypi it is necessary
to have a $HOME/.pypirc file for authenticating.
(See: https://docs.python.org/2/distutils/packageindex.html).
For the jenkins builds this file is present in the
/mdsplus/certs/jenkins directory on the jenkins server so when
doing the upload $HOME must point at this directory.","For the python setup tools to upload to pypi it is necessary
to have a $HOME/.pypirc file for authenticating.
(See: https://docs.python.org/2/distutils/packageindex.html).
For the jenkins builds this file is present in the
/mdsplus/certs/jenkins directory on the jenkins server so when
doing the upload $HOME must point at this directory.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,791,2017-01-06T18:32:59Z,2017-01-06T19:01:35Z,2017-01-06T19:01:40Z,MERGED,True,29,26,1,https://github.com/zack-vii,threadsafe ConnectToMds.c->DoLogin(),1,[],https://github.com/MDSplus/mdsplus/pull/791,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/791,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,792,2017-01-06T18:48:19Z,2017-01-06T19:24:39Z,2017-03-23T23:11:05Z,MERGED,True,68,73,2,https://github.com/zack-vii,Zck send to monitors heap use after free,2,[],https://github.com/MDSplus/mdsplus/pull/792,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/792,prevents use of m->next in SendToMonitors when m could have been freed already by SendToMonitor.,prevents use of m->next in SendToMonitors when m could have been freed already by SendToMonitor.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,793,2017-01-06T19:20:03Z,2017-01-07T03:03:52Z,2017-03-23T23:11:02Z,MERGED,True,3,4,1,https://github.com/zack-vii,extended with of stusmessage column in actmon to fit %NONAME Message …,1,[],https://github.com/MDSplus/mdsplus/pull/793,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/793,…codes,…codes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,794,2017-01-06T19:38:57Z,2017-01-07T15:17:12Z,2017-01-07T15:17:18Z,MERGED,True,128,163,2,https://github.com/zack-vii,Zck treadsafe tcl dispatch and command,3,[],https://github.com/MDSplus/mdsplus/pull/794,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/794,"replaces the static locals SyncId and SyncEfn with MAKROS (non static SyncId) SYNCINIT, SYNCWAIT, and
SYNCWAIT
- reused error handling for both sync and async communication
Always pass cleanup method ""CommandDone"" to ""ServerDispatchCommand"" so ServerSendMessage can take care of the required free operations
clean up of ServerSendMessage:
-* take care of free using ast(astparam) on ADDR_ERROR
-* replaced SndArgChk with inline code and dropped the use of goto send_error for better readability
-* removed unreachable code near the end: "" if (!addr) ..""","replaces the static locals SyncId and SyncEfn with MAKROS (non static SyncId) SYNCINIT, SYNCWAIT, and
SYNCWAIT
- reused error handling for both sync and async communication
Always pass cleanup method ""CommandDone"" to ""ServerDispatchCommand"" so ServerSendMessage can take care of the required free operations
clean up of ServerSendMessage:
-* take care of free using ast(astparam) on ADDR_ERROR
-* replaced SndArgChk with inline code and dropped the use of goto send_error for better readability
-* removed unreachable code near the end: "" if (!addr) ..""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,796,2017-01-09T18:31:08Z,2017-01-13T18:34:49Z,2017-03-23T23:11:00Z,CLOSED,False,49207,49878,1007,https://github.com/zack-vii,migration to alpha_release-7-1-83,1,[],https://github.com/MDSplus/mdsplus/pull/796,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/796,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,796,2017-01-09T18:31:08Z,2017-01-13T18:34:49Z,2017-03-23T23:11:00Z,CLOSED,False,49207,49878,1007,https://github.com/zack-vii,migration to alpha_release-7-1-83,1,[],https://github.com/MDSplus/mdsplus/pull/796,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/796#issuecomment-272512476,,We will need to decide if we want to the promotion this way or base the promoted stable on the alpha branch thus inheriting the commit history of the alpha branch. Closing for now until we decide how best to do the promotion.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,797,2017-01-10T11:09:35Z,2017-01-13T14:09:39Z,2017-01-16T08:17:20Z,CLOSED,False,166,2686,51,https://github.com/AndreaRigoni,Doxygen fix,2,[],https://github.com/MDSplus/mdsplus/pull/797,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/797,"fix configure if python is missing (docker build_docs image does not have python installed)
fix docs to be compiled if builddir is different from srcdir
add docker selfhelp tags in ""make help""","fix configure if python is missing (docker build_docs image does not have python installed)
fix docs to be compiled if builddir is different from srcdir
add docker selfhelp tags in ""make help""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,797,2017-01-10T11:09:35Z,2017-01-13T14:09:39Z,2017-01-16T08:17:20Z,CLOSED,False,166,2686,51,https://github.com/AndreaRigoni,Doxygen fix,2,[],https://github.com/MDSplus/mdsplus/pull/797,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/797#issuecomment-271571776,"fix configure if python is missing (docker build_docs image does not have python installed)
fix docs to be compiled if builddir is different from srcdir
add docker selfhelp tags in ""make help""",@Andrea: try reinserting the python part. And pr your changes in two steps. So we can narrow down the problem. Alpha works at least. It passed all tests before,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,797,2017-01-10T11:09:35Z,2017-01-13T14:09:39Z,2017-01-16T08:17:20Z,CLOSED,False,166,2686,51,https://github.com/AndreaRigoni,Doxygen fix,2,[],https://github.com/MDSplus/mdsplus/pull/797,https://github.com/Andrea,3,https://github.com/MDSplus/mdsplus/pull/797#issuecomment-271576642,"fix configure if python is missing (docker build_docs image does not have python installed)
fix docs to be compiled if builddir is different from srcdir
add docker selfhelp tags in ""make help""",you mean @AndreaRigoni ???,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,797,2017-01-10T11:09:35Z,2017-01-13T14:09:39Z,2017-01-16T08:17:20Z,CLOSED,False,166,2686,51,https://github.com/AndreaRigoni,Doxygen fix,2,[],https://github.com/MDSplus/mdsplus/pull/797,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/797#issuecomment-271581428,"fix configure if python is missing (docker build_docs image does not have python installed)
fix docs to be compiled if builddir is different from srcdir
add docker selfhelp tags in ""make help""","ah, yes.. oh, did github bind this to your account? sorry.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,798,2017-01-10T16:09:11Z,2017-01-11T10:20:50Z,2017-01-11T10:20:50Z,MERGED,True,22,32,1,https://github.com/zack-vii,rewrote tdi help message on Compiler errors,1,[],https://github.com/MDSplus/mdsplus/pull/798,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/798,"determine the three parts following this diagram
.---pre----.---body---.---post---.
begin      x          cur        end
'---l_ok---'","determine the three parts following this diagram
.---pre----.---body---.---post---.
begin      x          cur        end
'---l_ok---'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,799,2017-01-11T14:52:55Z,2017-01-11T16:21:06Z,2017-01-11T16:21:11Z,MERGED,True,4,3,1,https://github.com/tfredian,Fix status checking on returns from USER_PUTS and USER_GETS,1,[],https://github.com/MDSplus/mdsplus/pull/799,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/799,"Status checks on the returns from these routines provided in TdiSql were
checking for the value 1 for success instead of using STATUS_OK (low bit set).
This caused a problem when TdiSql was updated to use standard status codes.
This commit should fix the status checking.","Status checks on the returns from these routines provided in TdiSql were
checking for the value 1 for success instead of using STATUS_OK (low bit set).
This caused a problem when TdiSql was updated to use standard status codes.
This commit should fix the status checking.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,800,2017-01-11T18:17:33Z,2017-01-11T19:45:46Z,2017-01-11T19:45:50Z,MERGED,True,86,57,2,https://github.com/zack-vii,fixed treeUnitTest for threadsUnitTest,1,[],https://github.com/MDSplus/mdsplus/pull/800,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/800,"prepared threadsUnitTest to run data- and treeUnitTest in threads, however the old python somehow shares tree ctx still. also dcl is not yet thread safe. treeUnitTests is skipped for now","prepared threadsUnitTest to run data- and treeUnitTest in threads, however the old python somehow shares tree ctx still. also dcl is not yet thread safe. treeUnitTests is skipped for now",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,801,2017-01-11T20:06:12Z,2017-01-11T20:28:51Z,2017-05-03T12:12:47Z,MERGED,True,17,1,3,https://github.com/joshStillerman,New feature:: add MDSIP_CONNECT_TIMEOUT environment variable,1,[],https://github.com/MDSplus/mdsplus/pull/801,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/801,"The mdstcl dispatch commands potentially hang when trying to connect
to servers that are on the network but not responsive.
MdsIpShr has a connect_timeout parameter
set with:
SetMdsConnectTimeout(int sec)
and retrieved with:
GetMdsConnectTimeout()
This change uses the environment variable MDSIP_CONNECT_TIMEOUT to
set the default value for this parameter.  If it is undefined then
the original default of 0 is used.
Set this in envsyms with:
MDSIP_CONNECT_TIMEOUT 1
or from the shell
export MDSIP_CONNECT_TIMEOUT=1","The mdstcl dispatch commands potentially hang when trying to connect
to servers that are on the network but not responsive.
MdsIpShr has a connect_timeout parameter
set with:
SetMdsConnectTimeout(int sec)
and retrieved with:
GetMdsConnectTimeout()
This change uses the environment variable MDSIP_CONNECT_TIMEOUT to
set the default value for this parameter.  If it is undefined then
the original default of 0 is used.
Set this in envsyms with:
MDSIP_CONNECT_TIMEOUT 1
or from the shell
export MDSIP_CONNECT_TIMEOUT=1",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,802,2017-01-12T10:39:18Z,2017-01-12T11:15:42Z,2017-03-07T13:46:06Z,CLOSED,False,7,4,3,https://github.com/AndreaRigoni,Zck python test to m4,3,[],https://github.com/MDSplus/mdsplus/pull/802,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/802,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,803,2017-01-12T17:35:37Z,2017-01-13T11:31:14Z,2017-01-16T08:17:18Z,MERGED,True,13,8,4,https://github.com/AndreaRigoni,Fix testing makebindir,2,[],https://github.com/MDSplus/mdsplus/pull/803,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/803,"This adds MAKEBINDIR to path for tests
and reintegrates treadsUnitTest.py that was removed and should be fixed now.","This adds MAKEBINDIR to path for tests
and reintegrates treadsUnitTest.py that was removed and should be fixed now.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,804,2017-01-13T13:02:57Z,2017-01-13T13:56:07Z,2017-01-16T08:17:07Z,MERGED,True,161,2682,51,https://github.com/AndreaRigoni,Fix docs2,2,[],https://github.com/MDSplus/mdsplus/pull/804,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/804,retry to add fixes for documentation,retry to add fixes for documentation,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,805,2017-01-18T20:00:56Z,2017-01-18T20:25:38Z,2017-01-19T14:42:11Z,MERGED,True,233,44,4,https://github.com/tfredian,Bug fix: Use TARGET_ARCH in configure tests,1,[],https://github.com/MDSplus/mdsplus/pull/805,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/805,"When checking to see if libraries and headers are usable doing
tests in configure include the TARGET_ARCH variable in the CFLAGS
so that the tests will be search for libraries of the appropriate
architecture (i.e. -m32 or -m64)","When checking to see if libraries and headers are usable doing
tests in configure include the TARGET_ARCH variable in the CFLAGS
so that the tests will be search for libraries of the appropriate
architecture (i.e. -m32 or -m64)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,806,2017-01-19T09:00:58Z,2017-01-19T10:27:24Z,2019-06-07T11:33:53Z,MERGED,True,4,4,2,https://github.com/AndreaRigoni,Fix: Color of make help now resets to terminal default fg,1,[],https://github.com/MDSplus/mdsplus/pull/806,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/806,Color of make help now resets to terminal default fg,Color of make help now resets to terminal default fg,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,807,2017-01-19T14:42:27Z,2017-01-26T18:17:05Z,2017-01-26T18:17:11Z,CLOSED,False,14,14,14,https://github.com/tfredian,Build: Remove santize and valgrind test options from os/*.opts,1,[],https://github.com/MDSplus/mdsplus/pull/807,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/807,"Instead of putting the test options in the source code they will
be added to the jenkins build jobs. This will enable us to change
how many and which build jobs will perform these tests without
making modifications to the source files.","Instead of putting the test options in the source code they will
be added to the jenkins build jobs. This will enable us to change
how many and which build jobs will perform these tests without
making modifications to the source files.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,807,2017-01-19T14:42:27Z,2017-01-26T18:17:05Z,2017-01-26T18:17:11Z,CLOSED,False,14,14,14,https://github.com/tfredian,Build: Remove santize and valgrind test options from os/*.opts,1,[],https://github.com/MDSplus/mdsplus/pull/807,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/807#issuecomment-275466510,"Instead of putting the test options in the source code they will
be added to the jenkins build jobs. This will enable us to change
how many and which build jobs will perform these tests without
making modifications to the source files.",This has been replaced by the addition of --sanitize --valgrind (without test lists) options.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,808,2017-01-20T20:36:44Z,2017-01-23T18:24:05Z,2017-02-06T21:18:44Z,MERGED,True,129,2,3,https://github.com/tfredian,Buildxx: Check for valid commit titles,1,[],https://github.com/MDSplus/mdsplus/pull/808,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/808,"This is to begin the implementation of using commit titles to
determine new release numbers (minor vs path increments) and
to provide commit category specifications for generating release
notes.","This is to begin the implementation of using commit titles to
determine new release numbers (minor vs path increments) and
to provide commit category specifications for generating release
notes.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,809,2017-01-25T14:59:36Z,2017-01-25T15:51:24Z,2017-02-06T21:18:41Z,MERGED,True,29,41,3,https://github.com/tfredian,Build: Update configure to define new MDSPLUS_SEARCH_LIBS function,1,[],https://github.com/MDSplus/mdsplus/pull/809,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/809,"The first attempt to ensure the TARGET_ARCH compiler options are
applied when checking for libraries was implemented by redefining
AC_CHECK_LIB and AC_SEARCH_LIBS. This change performs the same action
but does so without modifying the existing functions. It also replaces
the use of AC_CHECK_LIB with AC_SEARCH_LIBS which is the recommended
approach. The overall effect is to ensure that the checks used to
check for the existance of libraries do so using the architecture (32-bit
or 64-bit) the build is being performed for.","The first attempt to ensure the TARGET_ARCH compiler options are
applied when checking for libraries was implemented by redefining
AC_CHECK_LIB and AC_SEARCH_LIBS. This change performs the same action
but does so without modifying the existing functions. It also replaces
the use of AC_CHECK_LIB with AC_SEARCH_LIBS which is the recommended
approach. The overall effect is to ensure that the checks used to
check for the existance of libraries do so using the architecture (32-bit
or 64-bit) the build is being performed for.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,809,2017-01-25T14:59:36Z,2017-01-25T15:51:24Z,2017-02-06T21:18:41Z,MERGED,True,29,41,3,https://github.com/tfredian,Build: Update configure to define new MDSPLUS_SEARCH_LIBS function,1,[],https://github.com/MDSplus/mdsplus/pull/809,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/809#issuecomment-275136772,"The first attempt to ensure the TARGET_ARCH compiler options are
applied when checking for libraries was implemented by redefining
AC_CHECK_LIB and AC_SEARCH_LIBS. This change performs the same action
but does so without modifying the existing functions. It also replaces
the use of AC_CHECK_LIB with AC_SEARCH_LIBS which is the recommended
approach. The overall effect is to ensure that the checks used to
check for the existance of libraries do so using the architecture (32-bit
or 64-bit) the build is being performed for.","Hi Tom,
I wonder if there is an example where the changes were not functioning .. My concern is that this way probably also the AC_LINK_IFELSE and AC_COMPILE_IFELSE (and maybe other functions too) should be changed as well .. and if an imported m4 macro uses instead the standard autoconf functions it may fail to work again.
Another approach would be to replace in the way you did the last two, that seem to be more basic functions as they appear in the implementation of AC_CHECK_LIB and AC_SEARCH_LIB  (see: /usr/share/autoconf/autoconf/libs.m4). for example the search for readline macro is also using the AC_TRY_RUN function that could be left without the proper TARGET_ARCH then.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,810,2017-01-25T20:10:21Z,2017-01-25T20:54:23Z,2017-02-06T21:18:39Z,MERGED,True,41,29,3,https://github.com/tfredian,"Revert ""Build: Update configure to define new MDSPLUS_SEARCH_LIBS function""",1,[],https://github.com/MDSplus/mdsplus/pull/810,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/810,"Reverts #809
The previous changes did not work and weren't tested because I failed to run bootstrap on the configure.ac to generate a new configure. Will revisit this issue.","Reverts #809
The previous changes did not work and weren't tested because I failed to run bootstrap on the configure.ac to generate a new configure. Will revisit this issue.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,811,2017-01-25T21:24:30Z,2017-01-26T13:52:02Z,2017-02-06T21:18:39Z,MERGED,True,9,4,1,https://github.com/tfredian,Build: Handle commit revert feature of github,1,[],https://github.com/MDSplus/mdsplus/pull/811,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/811,"If you revert the merge of a pull request, github adds a commit
with a title that begins with Revert ""original title"".
This change will parse that Revert title and treat it as the
same type of commit as the original which was reverted.","If you revert the merge of a pull request, github adds a commit
with a title that begins with Revert ""original title"".
This change will parse that Revert title and treat it as the
same type of commit as the original which was reverted.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,811,2017-01-25T21:24:30Z,2017-01-26T13:52:02Z,2017-02-06T21:18:39Z,MERGED,True,9,4,1,https://github.com/tfredian,Build: Handle commit revert feature of github,1,[],https://github.com/MDSplus/mdsplus/pull/811,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/811#issuecomment-275385429,"If you revert the merge of a pull request, github adds a commit
with a title that begins with Revert ""original title"".
This change will parse that Revert title and treat it as the
same type of commit as the original which was reverted.",retest this please - this phrase should trigger a new pr test build,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,812,2017-01-26T14:16:50Z,2017-01-26T16:17:10Z,2017-02-06T21:18:38Z,MERGED,True,98,18,2,https://github.com/tfredian,Build: Better sanitize and valgrind build option handling,1,[],https://github.com/MDSplus/mdsplus/pull/812,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/812,"The sanitize and valgrind tests supported by the operating system
and the docker used to build for that operating system are specified
in the os/*.opts files. Before this change, these os opts were overriding
the test selections so there was no way to skip these tests. This change
requires the --sanitize (with no test list) or --valgrind options to be
set or none of the tests will be executed. If sanitize or valgrind tests
are desired the trigger.sh and/or build.sh scripts should contain these
options without test lists to enable the tests.","The sanitize and valgrind tests supported by the operating system
and the docker used to build for that operating system are specified
in the os/*.opts files. Before this change, these os opts were overriding
the test selections so there was no way to skip these tests. This change
requires the --sanitize (with no test list) or --valgrind options to be
set or none of the tests will be executed. If sanitize or valgrind tests
are desired the trigger.sh and/or build.sh scripts should contain these
options without test lists to enable the tests.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,813,2017-01-26T17:14:00Z,2017-01-26T21:10:23Z,2017-01-26T21:10:29Z,MERGED,True,59,33,9,https://github.com/tfredian,Build: Add distclean target to top Makefile,1,[],https://github.com/MDSplus/mdsplus/pull/813,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/813,"This commit adds the distclean target to the top directory Makefile.
The command ""make distclean"" should clean the directory tree of any
files or directory not in the original source tree. If the sources
where obtained via git it will use the ""git clean"" command to remove
the files otherwise it will use ""make fullclean"" if the ""make distclean""
command was issued from the top source directory. It is now recommended
that configure and make be performed from a build directory outside
of the source tree which should leave the source directory tree in
a clean state.
This commit is to address git issue:
#680","This commit adds the distclean target to the top directory Makefile.
The command ""make distclean"" should clean the directory tree of any
files or directory not in the original source tree. If the sources
where obtained via git it will use the ""git clean"" command to remove
the files otherwise it will use ""make fullclean"" if the ""make distclean""
command was issued from the top source directory. It is now recommended
that configure and make be performed from a build directory outside
of the source tree which should leave the source directory tree in
a clean state.
This commit is to address git issue:
#680",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,813,2017-01-26T17:14:00Z,2017-01-26T21:10:23Z,2017-01-26T21:10:29Z,MERGED,True,59,33,9,https://github.com/tfredian,Build: Add distclean target to top Makefile,1,[],https://github.com/MDSplus/mdsplus/pull/813,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/813#issuecomment-275498270,"This commit adds the distclean target to the top directory Makefile.
The command ""make distclean"" should clean the directory tree of any
files or directory not in the original source tree. If the sources
where obtained via git it will use the ""git clean"" command to remove
the files otherwise it will use ""make fullclean"" if the ""make distclean""
command was issued from the top source directory. It is now recommended
that configure and make be performed from a build directory outside
of the source tree which should leave the source directory tree in
a clean state.
This commit is to address git issue:
#680",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,814,2017-01-27T19:34:04Z,2017-01-27T20:07:23Z,2017-01-27T20:07:28Z,MERGED,True,2,2,2,https://github.com/tfredian,Build: Use more secure keys to sign MDSplus packages,1,[],https://github.com/MDSplus/mdsplus/pull/814,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/814,"Installer utilities are warning about the keys used to sign MDSplus
packages being to weak. This change will use more secure signing keys
when signing packages. This is to address the following github issue:
#647","Installer utilities are warning about the keys used to sign MDSplus
packages being to weak. This change will use more secure signing keys
when signing packages. This is to address the following github issue:
#647",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,815,2017-01-31T15:10:51Z,2017-01-31T17:56:11Z,2017-02-06T15:36:25Z,CLOSED,False,657,512,2,https://github.com/tfredian,Add the use of TARGET_ARCH in library tests in configure,1,[],https://github.com/MDSplus/mdsplus/pull/815,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/815,"All searches for libraries in configure should search for libraries
in the architecture it is building. This change adds TARGET_ARCH
to CFLAGS early in the configure script and removes it after all
library checks are completed since Make adds TARGET_ARCH flags
to compiles and links automatically.
In addition all AC_CHECK_LIB calls have been changed to use
AC_SEARCH_LIBS since it is the recommended approach. To prevent
AC_SEARCH_LIBS from appending libraries to the global LIBS setting
an MDS_SEARCH_LIBS macro was defined to save LIBS, do AC_SEARCH_LIBS
and then restore original LIBS.","All searches for libraries in configure should search for libraries
in the architecture it is building. This change adds TARGET_ARCH
to CFLAGS early in the configure script and removes it after all
library checks are completed since Make adds TARGET_ARCH flags
to compiles and links automatically.
In addition all AC_CHECK_LIB calls have been changed to use
AC_SEARCH_LIBS since it is the recommended approach. To prevent
AC_SEARCH_LIBS from appending libraries to the global LIBS setting
an MDS_SEARCH_LIBS macro was defined to save LIBS, do AC_SEARCH_LIBS
and then restore original LIBS.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,816,2017-01-31T20:36:38Z,2017-02-01T22:05:36Z,2017-02-01T22:05:49Z,CLOSED,False,63,223,4,https://github.com/tfredian,Make configure library tests use TARGET_ARCH for searching for libraries,1,[],https://github.com/MDSplus/mdsplus/pull/816,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/816,"Instead of overriding standard autoconf macros simply add TARGET_ARCH
to CFLAGS which is used in library testing. Reset CFLAGS to original
setting when library tests are complete to avoid TARGET_ARCH flags from
being duplicated by standard Make compiles and link operations.","Instead of overriding standard autoconf macros simply add TARGET_ARCH
to CFLAGS which is used in library testing. Reset CFLAGS to original
setting when library tests are complete to avoid TARGET_ARCH flags from
being duplicated by standard Make compiles and link operations.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,817,2017-02-01T22:06:16Z,2017-02-02T14:47:23Z,2017-02-06T15:36:21Z,MERGED,True,749,595,14,https://github.com/tfredian,Build: Update configure to use correct architecture in library checks,1,[],https://github.com/MDSplus/mdsplus/pull/817,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/817,"This change enables the configure libary check macros to search for
the libraries which match the architecture of the build being performed
for. It also replaces most of the AC_CHECK_LIB references to the
recommended AC_SEARCH_LIBS.","This change enables the configure libary check macros to search for
the libraries which match the architecture of the build being performed
for. It also replaces most of the AC_CHECK_LIB references to the
recommended AC_SEARCH_LIBS.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,818,2017-02-02T13:11:49Z,2017-03-07T13:17:44Z,2017-03-07T13:17:56Z,CLOSED,False,1188,375,40,https://github.com/AndreaRigoni,Fix: adds -m32 to $CC and $CXX considering variable like a cross comp…,2,[],https://github.com/MDSplus/mdsplus/pull/818,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/818,"Just a quick and dirty idea:
what is we consider the gcc  (x86_64 -> i?86) like a cross compiler and define $CC and $CXX for this situation to ""gcc -m32"" ?
if you take a look of the AC_LANG_DEFINE that defines C and C++ in autoconf they wrote:
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&AS_MESSAGE_LOG_FD'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS
these are the variable used by AC_COMPILE_IFELSE and AC_LINK_IFELSE
so we can play with $CC $CFLAGS and $CPPFLAGS that appear in both compile and link","Just a quick and dirty idea:
what is we consider the gcc  (x86_64 -> i?86) like a cross compiler and define $CC and $CXX for this situation to ""gcc -m32"" ?
if you take a look of the AC_LANG_DEFINE that defines C and C++ in autoconf they wrote:
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&AS_MESSAGE_LOG_FD'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS
these are the variable used by AC_COMPILE_IFELSE and AC_LINK_IFELSE
so we can play with $CC $CFLAGS and $CPPFLAGS that appear in both compile and link",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,819,2017-02-02T19:30:53Z,2017-02-02T20:10:40Z,2017-02-06T15:36:18Z,MERGED,True,5,2,2,https://github.com/tfredian,Build: Use stdint definitions and sys instead of linux for headers,1,[],https://github.com/MDSplus/mdsplus/pull/819,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/819,"The camshr code used very old definitions of integer types which are
no longer available on newer systems (i.e. alpine). This change replaces
types such as __u8 with stdint types such as uint8_t.
The acq32ioctl.h included a header from the linux/ directory but in existing
systems and systems such as alpine have these headers in a sys/ directory.
The #include was changed from <linux/ioctl.h> to <sys/ioctl.h>","The camshr code used very old definitions of integer types which are
no longer available on newer systems (i.e. alpine). This change replaces
types such as __u8 with stdint types such as uint8_t.
The acq32ioctl.h included a header from the linux/ directory but in existing
systems and systems such as alpine have these headers in a sys/ directory.
The #include was changed from <linux/ioctl.h> to <sys/ioctl.h>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,820,2017-02-03T19:13:08Z,2017-02-03T20:33:46Z,2017-02-06T15:36:16Z,MERGED,True,14,13,4,https://github.com/tfredian,Build: Support for alpine linux support,1,[],https://github.com/MDSplus/mdsplus/pull/820,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/820,"This contains a few patches needed to be able to compile MDSplus on the alpine linux
platform.","This contains a few patches needed to be able to compile MDSplus on the alpine linux
platform.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,820,2017-02-03T19:13:08Z,2017-02-03T20:33:46Z,2017-02-06T15:36:16Z,MERGED,True,14,13,4,https://github.com/tfredian,Build: Support for alpine linux support,1,[],https://github.com/MDSplus/mdsplus/pull/820,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/820#issuecomment-277348742,"This contains a few patches needed to be able to compile MDSplus on the alpine linux
platform.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,821,2017-02-05T18:48:29Z,2017-02-06T13:03:01Z,2017-02-06T15:36:13Z,MERGED,True,3,0,1,https://github.com/tfredian,Build: __THROW causes problems with armhf compilers,1,[],https://github.com/MDSplus/mdsplus/pull/821,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/821,"The testing.h header uses __THROW keyword which the armhf compiler does not
understand. This fix checks for arm and defines __THROW to be nothing.","The testing.h header uses __THROW keyword which the armhf compiler does not
understand. This fix checks for arm and defines __THROW to be nothing.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,822,2017-02-06T21:09:38Z,2017-02-06T21:35:59Z,2017-05-03T12:12:31Z,MERGED,True,4,4,6,https://github.com/joshStillerman,Fix: Move a14 data reading support tdi funs to kernel kit,1,[],https://github.com/MDSplus/mdsplus/pull/822,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/822,"MitDevices.noarch had to be installed to get access to data stored by Aurora 14 (A14) camac
devices.  These devices stored:
A14_ADJUST(... A14_CLOCK_DIVIDE(...) ...)
In the dim's of the channels.  These timebases could not be retrieved if the MitDevices kits are
not installed.
created a new directory under /usr/local/mdsplus/tdi  called dev_data_support and moved these 2 funs
into it.","MitDevices.noarch had to be installed to get access to data stored by Aurora 14 (A14) camac
devices.  These devices stored:
A14_ADJUST(... A14_CLOCK_DIVIDE(...) ...)
In the dim's of the channels.  These timebases could not be retrieved if the MitDevices kits are
not installed.
created a new directory under /usr/local/mdsplus/tdi  called dev_data_support and moved these 2 funs
into it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,823,2017-02-07T13:31:25Z,2017-02-07T13:57:35Z,2017-05-03T12:12:29Z,MERGED,True,1,0,1,https://github.com/tfredian,Fix: Add dev_data_support directory to redhat kernel.arch packaging,1,[],https://github.com/MDSplus/mdsplus/pull/823,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/823,"The previous commit added new tdi functions to a new subdirectory of tdi
but the package contents files for redhat need a line for just the directory
in addition to the lines for the new files in that directory.","The previous commit added new tdi functions to a new subdirectory of tdi
but the package contents files for redhat need a line for just the directory
in addition to the lines for the new files in that directory.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,824,2017-02-07T16:41:01Z,2017-02-07T17:27:16Z,2017-05-03T12:12:27Z,MERGED,True,11,4,1,https://github.com/tfredian,Fix: Use different signing keys for ubuntu14 than ubuntu16,1,[],https://github.com/MDSplus/mdsplus/pull/824,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/824,"For some reason Ubuntu14 is unable to sign the debian packages with the
new secure RSA keys now used to sign Ubuntu16 packages. This commit enables the ability
to create signing keys in a ${OS} subdirectory of the signing keys. If the directory is
found it will set HOME to that subdirectory for signing packages. If the directory is not
found it will set HOME to the signing keys directory to use the default keys. A ubuntu16
subdirectory with the secure RSA keys was created and the other repositories use the origina
DSA keys.","For some reason Ubuntu14 is unable to sign the debian packages with the
new secure RSA keys now used to sign Ubuntu16 packages. This commit enables the ability
to create signing keys in a ${OS} subdirectory of the signing keys. If the directory is
found it will set HOME to that subdirectory for signing packages. If the directory is not
found it will set HOME to the signing keys directory to use the default keys. A ubuntu16
subdirectory with the secure RSA keys was created and the other repositories use the origina
DSA keys.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,824,2017-02-07T16:41:01Z,2017-02-07T17:27:16Z,2017-05-03T12:12:27Z,MERGED,True,11,4,1,https://github.com/tfredian,Fix: Use different signing keys for ubuntu14 than ubuntu16,1,[],https://github.com/MDSplus/mdsplus/pull/824,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/824#issuecomment-278064966,"For some reason Ubuntu14 is unable to sign the debian packages with the
new secure RSA keys now used to sign Ubuntu16 packages. This commit enables the ability
to create signing keys in a ${OS} subdirectory of the signing keys. If the directory is
found it will set HOME to that subdirectory for signing packages. If the directory is not
found it will set HOME to the signing keys directory to use the default keys. A ubuntu16
subdirectory with the secure RSA keys was created and the other repositories use the origina
DSA keys.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,825,2017-02-08T13:50:14Z,2017-02-08T14:14:50Z,2017-02-08T14:14:56Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Remove --key-id option on rpmsign,1,[],https://github.com/MDSplus/mdsplus/pull/825,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/825,"When adding the new RSA signing keys for debian packages the --key-id option was
added to the redhat rpmsign command to ensure the original key was used to sign
the rpms. It turns out that the --key-id option is not supported on redhat distributions
earlier than rhel7 and the switch to use different directories to separate the signing
keys removed the need to use the --key-id option.","When adding the new RSA signing keys for debian packages the --key-id option was
added to the redhat rpmsign command to ensure the original key was used to sign
the rpms. It turns out that the --key-id option is not supported on redhat distributions
earlier than rhel7 and the switch to use different directories to separate the signing
keys removed the need to use the --key-id option.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,826,2017-02-08T14:40:32Z,2017-02-08T15:05:12Z,2017-02-08T19:42:01Z,MERGED,True,2,2,2,https://github.com/tfredian,Build: Add more fixes to enable alpine compilation to succeed,1,[],https://github.com/MDSplus/mdsplus/pull/826,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/826,"This commit moves the commit used for the 3rd-party-apis to the current
head of the master branch. A fix was added to the idl header file because it
uses a macro which is not defined by alpine system headers.
It also includes a fix to testing/testing.h which used the __THROW macro
which also is not defined by alpine system headers.","This commit moves the commit used for the 3rd-party-apis to the current
head of the master branch. A fix was added to the idl header file because it
uses a macro which is not defined by alpine system headers.
It also includes a fix to testing/testing.h which used the __THROW macro
which also is not defined by alpine system headers.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,827,2017-02-08T20:31:00Z,2017-02-08T21:12:24Z,2017-05-03T12:12:14Z,MERGED,True,76,0,3,https://github.com/tfredian,Build: First version of alpine build script support,1,[],https://github.com/MDSplus/mdsplus/pull/827,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/827,"This version of the build scripts should suffice to build the software but does
not yet provide the code for building installer packages and repositories.","This version of the build scripts should suffice to build the software but does
not yet provide the code for building installer packages and repositories.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,828,2017-02-13T11:39:46Z,2017-02-13T14:45:58Z,2017-05-03T12:12:09Z,MERGED,True,6,12,2,https://github.com/GabrieleManduchi,Remove old rmic stuff in build; fix jtraverser make bug,1,[],https://github.com/MDSplus/mdsplus/pull/828,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/828,"On some systems the old and unused rmic raised errors in make, now removed
A fix to recent bug introduced in jTraverser Makefile.am","On some systems the old and unused rmic raised errors in make, now removed
A fix to recent bug introduced in jTraverser Makefile.am",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,828,2017-02-13T11:39:46Z,2017-02-13T14:45:58Z,2017-05-03T12:12:09Z,MERGED,True,6,12,2,https://github.com/GabrieleManduchi,Remove old rmic stuff in build; fix jtraverser make bug,1,[],https://github.com/MDSplus/mdsplus/pull/828,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/828#issuecomment-279391702,"On some systems the old and unused rmic raised errors in make, now removed
A fix to recent bug introduced in jTraverser Makefile.am",For some reason the trigger of the Jenkins pull request test seems to have stopped working. I am investigating this now and hopefully this pull request will be tested soon.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,828,2017-02-13T11:39:46Z,2017-02-13T14:45:58Z,2017-05-03T12:12:09Z,MERGED,True,6,12,2,https://github.com/GabrieleManduchi,Remove old rmic stuff in build; fix jtraverser make bug,1,[],https://github.com/MDSplus/mdsplus/pull/828,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/828#issuecomment-279408273,"On some systems the old and unused rmic raised errors in make, now removed
A fix to recent bug introduced in jTraverser Makefile.am",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,830,2017-02-14T16:31:32Z,2017-02-14T18:21:05Z,2017-02-14T18:21:10Z,MERGED,True,1,0,1,https://github.com/zack-vii,return status value of PyDoMethod if available,1,[],https://github.com/MDSplus/mdsplus/pull/830,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/830,before TreeDoMethod would not recognize a failing python method,before TreeDoMethod would not recognize a failing python method,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,831,2017-02-14T17:08:41Z,2017-02-14T17:20:45Z,2017-05-03T12:12:08Z,MERGED,True,1,1,1,https://github.com/joshStillerman,"FIX: ORIGINAL_PART_NAME method should not pass (None), should be ()",1,[],https://github.com/MDSplus/mdsplus/pull/831,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/831,"I am not sure why this did not bite us sooner.  The code in
getattr, that pulls out requests for part_name and
original_part_name was calling self.ORIGINAL_PART_NAME with an argument
of (None).  It should have been (), since this method does not take any
arguments.","I am not sure why this did not bite us sooner.  The code in
getattr, that pulls out requests for part_name and
original_part_name was calling self.ORIGINAL_PART_NAME with an argument
of (None).  It should have been (), since this method does not take any
arguments.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,832,2017-02-14T23:54:05Z,2017-02-15T12:59:26Z,2017-02-15T12:59:26Z,MERGED,True,52,37,4,https://github.com/zack-vii,fix: fixed original_part_name of Python devices,2,[],https://github.com/MDSplus/mdsplus/pull/832,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/832,"TCL> DIR/FULL DEVICE_NODE:*
does now show original part names","TCL> DIR/FULL DEVICE_NODE:*
does now show original part names",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,833,2017-02-16T17:35:52Z,2017-03-06T12:37:18Z,2017-03-23T23:10:47Z,MERGED,True,496,513,41,https://github.com/zack-vii,Fix: improved Exception handling of Python code in Tdi,24,[],https://github.com/MDSplus/mdsplus/pull/833,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/833,"If python code excepts with an MDSplusException, the status is used as STATUS code.
fixed use after free issue in TdiExtPython (filename)
PyDoMethod.py does not need to return a List object anymore and can simply raise Exceptions.
cleaned up code using status.h
included related tests to treeUnitTest.py
fixed ErrorCode on dcl_dispatch if server is down","If python code excepts with an MDSplusException, the status is used as STATUS code.
fixed use after free issue in TdiExtPython (filename)
PyDoMethod.py does not need to return a List object anymore and can simply raise Exceptions.
cleaned up code using status.h
included related tests to treeUnitTest.py
fixed ErrorCode on dcl_dispatch if server is down",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,833,2017-02-16T17:35:52Z,2017-03-06T12:37:18Z,2017-03-23T23:10:47Z,MERGED,True,496,513,41,https://github.com/zack-vii,Fix: improved Exception handling of Python code in Tdi,24,[],https://github.com/MDSplus/mdsplus/pull/833,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/833#issuecomment-280447841,"If python code excepts with an MDSplusException, the status is used as STATUS code.
fixed use after free issue in TdiExtPython (filename)
PyDoMethod.py does not need to return a List object anymore and can simply raise Exceptions.
cleaned up code using status.h
included related tests to treeUnitTest.py
fixed ErrorCode on dcl_dispatch if server is down",I tested it manually but due to issue #834 the Jenkins result cannot be trusted.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,833,2017-02-16T17:35:52Z,2017-03-06T12:37:18Z,2017-03-23T23:10:47Z,MERGED,True,496,513,41,https://github.com/zack-vii,Fix: improved Exception handling of Python code in Tdi,24,[],https://github.com/MDSplus/mdsplus/pull/833,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/833#issuecomment-282159930,"If python code excepts with an MDSplusException, the status is used as STATUS code.
fixed use after free issue in TdiExtPython (filename)
PyDoMethod.py does not need to return a List object anymore and can simply raise Exceptions.
cleaned up code using status.h
included related tests to treeUnitTest.py
fixed ErrorCode on dcl_dispatch if server is down","While I was testing the changes some other issues popped up, that have been fixed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,835,2017-02-17T17:52:44Z,2017-02-17T18:03:58Z,2017-02-17T20:11:59Z,MERGED,True,253,14,6,https://github.com/tfredian,Build: Add alpine linux installer package building,1,[],https://github.com/MDSplus/mdsplus/pull/835,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/835,The build scripts can now generate alpinelinux apk installer packages for MDSplus.,The build scripts can now generate alpinelinux apk installer packages for MDSplus.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,836,2017-02-17T20:39:50Z,2017-02-17T20:53:59Z,2017-02-17T20:54:05Z,CLOSED,False,2,3,3,https://github.com/tfredian,Tests: Fix python testing,1,[],https://github.com/MDSplus/mdsplus/pull/836,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/836,"The earlier fix to deal with the use of sanitize with python caused a problem
of environment variables not being properly set preventing the tests from being executed. This should fix that.","The earlier fix to deal with the use of sanitize with python caused a problem
of environment variables not being properly set preventing the tests from being executed. This should fix that.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,836,2017-02-17T20:39:50Z,2017-02-17T20:53:59Z,2017-02-17T20:54:05Z,CLOSED,False,2,3,3,https://github.com/tfredian,Tests: Fix python testing,1,[],https://github.com/MDSplus/mdsplus/pull/836,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/836#issuecomment-280763550,"The earlier fix to deal with the use of sanitize with python caused a problem
of environment variables not being properly set preventing the tests from being executed. This should fix that.",Did not work. Andrea will fix it on Monday.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,837,2017-02-20T16:49:18Z,2017-02-22T19:00:56Z,2019-06-07T11:33:54Z,MERGED,True,390,198,47,https://github.com/AndreaRigoni,Fix: LD_PRELOAD moved to test-driver,1,[],https://github.com/MDSplus/mdsplus/pull/837,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/837,"A special environment variable ""TEST_LD_PRELOAD"" has been defined if sanitizer
are running tests, this variable is used in test-driver shell script to export
LD_PRELOAD just before the log compiler is started. This should prevent that
the shell will run with improper libraries: i.e. the lib32 sanitizer in 64sh
executable.","A special environment variable ""TEST_LD_PRELOAD"" has been defined if sanitizer
are running tests, this variable is used in test-driver shell script to export
LD_PRELOAD just before the log compiler is started. This should prevent that
the shell will run with improper libraries: i.e. the lib32 sanitizer in 64sh
executable.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,839,2017-02-21T21:11:59Z,2017-02-22T19:00:54Z,2017-02-22T19:00:54Z,MERGED,True,490,293,55,https://github.com/zack-vii,Fix: addressed some performance issues in python,13,[],https://github.com/MDSplus/mdsplus/pull/839,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/839,"minor speedup of TreeNode new and init
major speedup of getNodeWild (tree with 18000 nodes in 0.18 seconds compared to 19 second)","minor speedup of TreeNode new and init
major speedup of getNodeWild (tree with 18000 nodes in 0.18 seconds compared to 19 second)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,839,2017-02-21T21:11:59Z,2017-02-22T19:00:54Z,2017-02-22T19:00:54Z,MERGED,True,490,293,55,https://github.com/zack-vii,Fix: addressed some performance issues in python,13,[],https://github.com/MDSplus/mdsplus/pull/839,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/839#issuecomment-281489769,"minor speedup of TreeNode new and init
major speedup of getNodeWild (tree with 18000 nodes in 0.18 seconds compared to 19 second)",rhel6 failure related to  bug in the trigger/main build script,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,839,2017-02-21T21:11:59Z,2017-02-22T19:00:54Z,2017-02-22T19:00:54Z,MERGED,True,490,293,55,https://github.com/zack-vii,Fix: addressed some performance issues in python,13,[],https://github.com/MDSplus/mdsplus/pull/839,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/839#issuecomment-281662687,"minor speedup of TreeNode new and init
major speedup of getNodeWild (tree with 18000 nodes in 0.18 seconds compared to 19 second)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,839,2017-02-21T21:11:59Z,2017-02-22T19:00:54Z,2017-02-22T19:00:54Z,MERGED,True,490,293,55,https://github.com/zack-vii,Fix: addressed some performance issues in python,13,[],https://github.com/MDSplus/mdsplus/pull/839,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/839#issuecomment-281757742,"minor speedup of TreeNode new and init
major speedup of getNodeWild (tree with 18000 nodes in 0.18 seconds compared to 19 second)","This commit now includes the changes by @AndreaRigoni #837.
Further, it fixes the memory leak caused by tcl calls from python.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,840,2017-02-23T17:03:57Z,2017-02-23T17:52:02Z,2017-05-03T12:12:06Z,MERGED,True,5,3,3,https://github.com/tfredian,Build: Fix tests when building alpine distributions,1,[],https://github.com/MDSplus/mdsplus/pull/840,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/840,"A few minor changes were required to get the standard tests to work on
the alpine linux system. There is a problem with the mdsip udt plugin when
running on the armhf architecture so the udt test is now disabled. It is very unlikely
that udt would ever be used on this architecture so disabling the test should be ok.
Some of the existing tests rely on the type char to be a signed number and it appears that on the armhf architecture it is defaulting to unsigned so an -fsigned-char option is necessary.","A few minor changes were required to get the standard tests to work on
the alpine linux system. There is a problem with the mdsip udt plugin when
running on the armhf architecture so the udt test is now disabled. It is very unlikely
that udt would ever be used on this architecture so disabling the test should be ok.
Some of the existing tests rely on the type char to be a signed number and it appears that on the armhf architecture it is defaulting to unsigned so an -fsigned-char option is necessary.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,841,2017-02-23T22:03:32Z,2017-02-23T23:39:04Z,2017-02-24T02:41:14Z,MERGED,True,2,2,1,https://github.com/tfredian,Build: Fix cleanup of mdsplus python modules during upgrades,1,[],https://github.com/MDSplus/mdsplus/pull/841,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/841,"The postinstall script used to remove the older mdsplus python modules
when updating the python rpm was using an mdsplus* wildcard in the shell
command which works fine unless there is a file/directory in the / directory
where the script is executed. The mdsplus* string has to be quoted otherwise
the shell does the substitution too early instead of applying the wildcard in
the find command. Subtle!","The postinstall script used to remove the older mdsplus python modules
when updating the python rpm was using an mdsplus* wildcard in the shell
command which works fine unless there is a file/directory in the / directory
where the script is executed. The mdsplus* string has to be quoted otherwise
the shell does the substitution too early instead of applying the wildcard in
the find command. Subtle!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,842,2017-03-01T17:33:53Z,2017-03-01T18:02:23Z,2017-03-27T13:21:40Z,MERGED,True,24,2,5,https://github.com/joshStillerman,FIX: TreeWriteTree was not returning an error when output disk full,1,[],https://github.com/MDSplus/mdsplus/pull/842,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/842,"The error_exit code in TreeWriteTree  did not set status before returning.
When the code detected an error writing to the tree file, it returned, but
status was 1.  So the calling application thought the write operation was
successfull
Added new tree error code TreeWRITETREEERR  to be returned under these
conditions.","The error_exit code in TreeWriteTree  did not set status before returning.
When the code detected an error writing to the tree file, it returned, but
status was 1.  So the calling application thought the write operation was
successfull
Added new tree error code TreeWRITETREEERR  to be returned under these
conditions.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,843,2017-03-01T20:58:16Z,2017-03-06T13:26:26Z,2017-03-23T23:10:46Z,MERGED,True,1442,2619,1,https://github.com/zack-vii,Fix: Structured code in MAKROS and fixed some inconsistent data handl…,1,[],https://github.com/MDSplus/mdsplus/pull/843,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/843,"…ing
OPEN_ISSUES

BIGENDIAN? had errors, is it used at all;
why does _TreeSetXNci swap bytes","…ing
OPEN_ISSUES

BIGENDIAN? had errors, is it used at all;
why does _TreeSetXNci swap bytes",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,844,2017-03-02T18:48:31Z,2017-03-02T20:58:51Z,2017-03-23T23:10:49Z,MERGED,True,133,142,16,https://github.com/zack-vii,Zck mac warnings,16,[],https://github.com/MDSplus/mdsplus/pull/844,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/844,fixes various warnings generated by the macosx jenkins build,fixes various warnings generated by the macosx jenkins build,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,845,2017-03-06T13:28:11Z,2017-03-06T14:29:14Z,2017-03-23T23:10:44Z,MERGED,True,237,236,20,https://github.com/zack-vii,Fix: activates threadsUnitTest and fixes issues reported by helgrind,15,[],https://github.com/MDSplus/mdsplus/pull/845,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/845,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,846,2017-03-07T10:06:56Z,2017-03-07T13:17:15Z,2017-03-07T13:45:52Z,MERGED,True,122,167,16,https://github.com/AndreaRigoni,Fix allow tcptuning,8,[],https://github.com/MDSplus/mdsplus/pull/846,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/846,This removes the setsockopt used to set sockets SO_SNDBUF and SO_RCVBUF to allow the autotuning feature of the kernel. The same PR will also add some other fixes required by mdsip-tests.,This removes the setsockopt used to set sockets SO_SNDBUF and SO_RCVBUF to allow the autotuning feature of the kernel. The same PR will also add some other fixes required by mdsip-tests.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,847,2017-03-08T18:46:06Z,2017-03-08T19:11:00Z,2017-03-23T23:10:42Z,MERGED,True,90,114,13,https://github.com/zack-vii,Zck tdishr TdiRefZone,4,[],https://github.com/MDSplus/mdsplus/pull/847,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/847,"replaced TdiRefZone with a thread specific copy from TdiThreadStatic
added GET_TDITHREADSTATIC_P makro to init TdiThreadStatic_p no need to call TdiThreadStatic() more than once
added TdiRefZone makro to keep most of the code as is
added GET_TDITHREADSTATIC_P to the head oth methods that need TdiRefZone
free TdiRefZone.a_begin if set and TdiIntrinsic its last done: recursive == 0
entangled tdithreadsafe.h tdirefzone.h properly so one can include either or or both","replaced TdiRefZone with a thread specific copy from TdiThreadStatic
added GET_TDITHREADSTATIC_P makro to init TdiThreadStatic_p no need to call TdiThreadStatic() more than once
added TdiRefZone makro to keep most of the code as is
added GET_TDITHREADSTATIC_P to the head oth methods that need TdiRefZone
free TdiRefZone.a_begin if set and TdiIntrinsic its last done: recursive == 0
entangled tdithreadsafe.h tdirefzone.h properly so one can include either or or both",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,848,2017-03-09T12:44:41Z,2017-03-12T15:14:24Z,2017-03-12T15:14:24Z,MERGED,True,507,611,21,https://github.com/zack-vii,ServerShr unified thread creation and condition handing via makros and the Condition type,4,[],https://github.com/MDSplus/mdsplus/pull/848,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/848,should provide a more robust handling of threads and condition wait/signal sequences,should provide a more robust handling of threads and condition wait/signal sequences,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,849,2017-03-12T15:18:59Z,2017-03-12T20:55:54Z,2017-03-15T11:47:08Z,MERGED,True,169,225,17,https://github.com/zack-vii,Fix: some more thread issues mostly due to statics that do not need to be static or must be part of TreeThreadStatic,8,[],https://github.com/MDSplus/mdsplus/pull/849,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/849,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,850,2017-03-12T22:01:57Z,2017-03-15T13:18:57Z,2017-03-23T23:10:08Z,MERGED,True,727,816,45,https://github.com/zack-vii,"Fix: error msg, pot. deadlock under win, threadsafe dcl",17,[],https://github.com/MDSplus/mdsplus/pull/850,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/850,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,851,2017-03-15T15:19:28Z,2017-03-15T16:25:50Z,2017-03-15T16:25:55Z,MERGED,True,204,94,14,https://github.com/zack-vii,Tests: python tests clean up and swithc for HELGRIND_DCL,6,[],https://github.com/MDSplus/mdsplus/pull/851,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/851,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,852,2017-03-16T13:23:42Z,2017-03-16T15:51:24Z,2017-03-23T23:10:07Z,MERGED,True,82,46,9,https://github.com/zack-vii,Tests: add windows python tests,5,[],https://github.com/MDSplus/mdsplus/pull/852,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/852,and fixes packaging,and fixes packaging,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,853,2017-03-16T15:52:12Z,2017-03-16T18:34:26Z,2017-03-16T19:15:31Z,MERGED,True,35,26,3,https://github.com/zack-vii,Build: added generic checktestarch to allow for more arch than 32 and 64,2,[],https://github.com/MDSplus/mdsplus/pull/853,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/853,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,854,2017-03-17T16:21:54Z,2017-03-17T17:16:00Z,2017-03-27T13:21:41Z,MERGED,True,58,35,4,https://github.com/GabrieleManduchi,Gm epics upgrades,2,[],https://github.com/MDSplus/mdsplus/pull/854,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/854,A few changes only affecting EPICS interface. I need to do it urgently.,A few changes only affecting EPICS interface. I need to do it urgently.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,854,2017-03-17T16:21:54Z,2017-03-17T17:16:00Z,2017-03-27T13:21:41Z,MERGED,True,58,35,4,https://github.com/GabrieleManduchi,Gm epics upgrades,2,[],https://github.com/MDSplus/mdsplus/pull/854,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/854#issuecomment-287402918,A few changes only affecting EPICS interface. I need to do it urgently.,"Can it wait until it passes the tests, or is it more urgent than that?
…
On 3/17/17 12:21 PM, GabrieleManduchi wrote:

 A few changes only affecting EPICS interface. I need to do it urgently.

 ------------------------------------------------------------------------


         You can view, comment on, or merge this pull request online at:

 #854


         Commit Summary

   * Align Channel Access Server for MDSplus
   * Align MDSplus Channel Archiver


         File Changes

   * *M* epics/archiver/ChannelArchiver.java
     <https://github.com/MDSplus/mdsplus/pull/854/files#diff-0> (2)
   * *M* epics/cas/main.cc
     <https://github.com/MDSplus/mdsplus/pull/854/files#diff-1> (4)
   * *M* epics/cas/mdsPV.cc
     <https://github.com/MDSplus/mdsplus/pull/854/files#diff-2> (75)
   * *M* epics/cas/mdsServer.cc
     <https://github.com/MDSplus/mdsplus/pull/854/files#diff-3> (12)


         Patch Links:

   * https://github.com/MDSplus/mdsplus/pull/854.patch
   * https://github.com/MDSplus/mdsplus/pull/854.diff

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#854>, or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZd9FyH1WYD6oubdFxD-8dZRAgTKfks5rmrMigaJpZM4MgzbA>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,854,2017-03-17T16:21:54Z,2017-03-17T17:16:00Z,2017-03-27T13:21:41Z,MERGED,True,58,35,4,https://github.com/GabrieleManduchi,Gm epics upgrades,2,[],https://github.com/MDSplus/mdsplus/pull/854,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/854#issuecomment-287413167,A few changes only affecting EPICS interface. I need to do it urgently.,"Ok for the tests, I need it next monday

       Thanks
       Gabriele
…
On 17/03/2017 17:27, Josh Stillerman wrote:
 Can it wait until it passes the tests, or is it more urgent than that?


 On 3/17/17 12:21 PM, GabrieleManduchi wrote:
 >
 > A few changes only affecting EPICS interface. I need to do it urgently.
 >
 > ------------------------------------------------------------------------
 >
 >
 > You can view, comment on, or merge this pull request online at:
 >
 > #854
 >
 >
 > Commit Summary
 >
 > * Align Channel Access Server for MDSplus
 > * Align MDSplus Channel Archiver
 >
 >
 > File Changes
 >
 > * *M* epics/archiver/ChannelArchiver.java
 > <https://github.com/MDSplus/mdsplus/pull/854/files#diff-0> (2)
 > * *M* epics/cas/main.cc
 > <https://github.com/MDSplus/mdsplus/pull/854/files#diff-1> (4)
 > * *M* epics/cas/mdsPV.cc
 > <https://github.com/MDSplus/mdsplus/pull/854/files#diff-2> (75)
 > * *M* epics/cas/mdsServer.cc
 > <https://github.com/MDSplus/mdsplus/pull/854/files#diff-3> (12)
 >
 >
 > Patch Links:
 >
 > * https://github.com/MDSplus/mdsplus/pull/854.patch
 > * https://github.com/MDSplus/mdsplus/pull/854.diff
 >
 > —
 > You are receiving this because you are subscribed to this thread.
 > Reply to this email directly, view it on GitHub
 > <#854>, or mute the thread
 >
 <https://github.com/notifications/unsubscribe-auth/AHHQZd9FyH1WYD6oubdFxD-8dZRAgTKfks5rmrMigaJpZM4MgzbA>.
 >

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#854 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AISySNM9OSS_pC07risrR0mfDZUmdaRIks5rmrRsgaJpZM4MgzbA>.


-- 
Gabriele Manduchi

Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,855,2017-03-20T15:53:53Z,2017-03-20T16:47:13Z,2017-03-27T13:21:42Z,MERGED,True,2828,2694,12,https://github.com/tfredian,Fix: Use prefix on all lex processing to prevent conflicts with globa…,2,[],https://github.com/MDSplus/mdsplus/pull/855,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/855,"…l symbols
When using lex/flex in constructing parses it will generate global symbols such as yytext.
Since a couple of the MDSplus libraries use lex this seemed to cause a problem on platforms
such as alpine. Adding a -P  to the lex command will generate code wich unique
prefixes to prevent conflicts.","…l symbols
When using lex/flex in constructing parses it will generate global symbols such as yytext.
Since a couple of the MDSplus libraries use lex this seemed to cause a problem on platforms
such as alpine. Adding a -P  to the lex command will generate code wich unique
prefixes to prevent conflicts.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,856,2017-03-20T20:35:46Z,2017-03-21T14:07:32Z,2017-03-22T12:44:25Z,MERGED,True,66,73,3,https://github.com/zack-vii,Zck treedomethod nid num,3,[],https://github.com/MDSplus/mdsplus/pull/856,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/856,"allows to manually call TreeDoMethod using the nid number instead of the nid (would have been evaluated otherwise)
Fixes DeadLock in ServerDispatchPhase if no action to do
use #define DEBUG to print debug messages","allows to manually call TreeDoMethod using the nid number instead of the nid (would have been evaluated otherwise)
Fixes DeadLock in ServerDispatchPhase if no action to do
use #define DEBUG to print debug messages",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,857,2017-03-21T14:21:41Z,2017-03-22T11:45:15Z,2017-03-22T11:45:34Z,MERGED,True,34,529,7,https://github.com/zack-vii,Zck alpine fix dcl test,6,[],https://github.com/MDSplus/mdsplus/pull/857,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/857,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,857,2017-03-21T14:21:41Z,2017-03-22T11:45:15Z,2017-03-22T11:45:34Z,MERGED,True,34,529,7,https://github.com/zack-vii,Zck alpine fix dcl test,6,[],https://github.com/MDSplus/mdsplus/pull/857,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/857#issuecomment-288212907,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,858,2017-03-22T13:40:01Z,2017-03-22T14:06:28Z,2017-03-23T23:10:04Z,MERGED,True,5,3,2,https://github.com/zack-vii,Zck pydevice debug,2,[],https://github.com/MDSplus/mdsplus/pull/858,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/858,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,859,2017-03-23T21:26:14Z,2017-03-23T23:09:20Z,2017-03-23T23:09:24Z,MERGED,True,26,29,4,https://github.com/zack-vii,Zck mdsip 100cpu,3,[],https://github.com/MDSplus/mdsplus/pull/859,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/859,"windows dcl still hangs, that is wine dcl hangs .. it work fine on real windows machines such as win10. probably a newer wine version would help but fc25 does not compile properly, yet.","windows dcl still hangs, that is wine dcl hangs .. it work fine on real windows machines such as win10. probably a newer wine version would help but fc25 does not compile properly, yet.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,860,2017-03-24T02:22:09Z,2017-03-24T02:58:24Z,2017-03-24T02:59:44Z,MERGED,True,819,1458,3,https://github.com/zack-vii,Fix: cleaned out code for TCP und TCPv6,1,[],https://github.com/MDSplus/mdsplus/pull/860,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/860,"*some differences might not be necessary
*SIGINT will stop process on first attempt","*some differences might not be necessary
*SIGINT will stop process on first attempt",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,860,2017-03-24T02:22:09Z,2017-03-24T02:58:24Z,2017-03-24T02:59:44Z,MERGED,True,819,1458,3,https://github.com/zack-vii,Fix: cleaned out code for TCP und TCPv6,1,[],https://github.com/MDSplus/mdsplus/pull/860,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/860#issuecomment-288920490,"*some differences might not be necessary
*SIGINT will stop process on first attempt",alpine failed at first because the java compiler crashed again. second test succeeded.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,861,2017-03-24T16:08:28Z,2017-03-24T17:31:50Z,2017-03-24T17:31:50Z,MERGED,True,15,10,3,https://github.com/zack-vii,should fix the part of MARTE_DEVICE issue and some python3 tests problems,3,[],https://github.com/MDSplus/mdsplus/pull/861,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/861,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,862,2017-03-25T12:27:40Z,2017-03-25T19:08:18Z,2017-03-25T19:08:22Z,MERGED,True,72,43,12,https://github.com/zack-vii,Zck wine dclunittest fix,2,[],https://github.com/MDSplus/mdsplus/pull/862,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/862,"Tests: fixed make envs to enable wine for non-root and workarround wine dcl issue

wine is not windows. dclUnitTest runs fine on real Windows machines","Tests: fixed make envs to enable wine for non-root and workarround wine dcl issue

wine is not windows. dclUnitTest runs fine on real Windows machines",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,863,2017-03-27T13:08:03Z,2017-03-27T13:29:33Z,2017-03-27T13:29:38Z,MERGED,True,106,176,6,https://github.com/zack-vii,Zck python devices,2,[],https://github.com/MDSplus/mdsplus/pull/863,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/863,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,864,2017-03-27T16:26:28Z,2017-03-27T17:00:30Z,2017-03-27T17:00:38Z,MERGED,True,3,1,1,https://github.com/tfredian,Fix: Use find tag instead of find node wild in create pulse for perfo…,1,[],https://github.com/MDSplus/mdsplus/pull/864,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/864,"…rmance
For some reason that I cannot recall or find I had changed TreeCreatePule to
use a wildcard call to TreeFindNodeWild to identify all the subtree nodes but under
certain conditions this can be very inefficient. (The TreeFindNodeWild code probably
needs revisited to improve performance!) This change reverts the code back to use
TreeFindTag using TOP to find subtrees.","…rmance
For some reason that I cannot recall or find I had changed TreeCreatePule to
use a wildcard call to TreeFindNodeWild to identify all the subtree nodes but under
certain conditions this can be very inefficient. (The TreeFindNodeWild code probably
needs revisited to improve performance!) This change reverts the code back to use
TreeFindTag using TOP to find subtrees.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,864,2017-03-27T16:26:28Z,2017-03-27T17:00:30Z,2017-03-27T17:00:38Z,MERGED,True,3,1,1,https://github.com/tfredian,Fix: Use find tag instead of find node wild in create pulse for perfo…,1,[],https://github.com/MDSplus/mdsplus/pull/864,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/864#issuecomment-289510739,"…rmance
For some reason that I cannot recall or find I had changed TreeCreatePule to
use a wildcard call to TreeFindNodeWild to identify all the subtree nodes but under
certain conditions this can be very inefficient. (The TreeFindNodeWild code probably
needs revisited to improve performance!) This change reverts the code back to use
TreeFindTag using TOP to find subtrees.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,865,2017-03-27T17:29:56Z,2017-03-27T18:58:59Z,2017-03-27T18:59:13Z,MERGED,True,85,117,11,https://github.com/zack-vii,Zck python tests,4,[],https://github.com/MDSplus/mdsplus/pull/865,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/865,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,866,2017-03-27T19:01:04Z,2017-03-31T13:37:44Z,2017-05-03T12:12:00Z,MERGED,True,4260,651,30,https://github.com/zack-vii,Gm python devices fix,9,[],https://github.com/MDSplus/mdsplus/pull/866,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/866,@GabrieleManduchi: please check if the device are ready for integration,@GabrieleManduchi: please check if the device are ready for integration,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,867,2017-03-28T13:59:53Z,2017-03-28T14:21:09Z,2017-05-03T12:12:02Z,MERGED,True,3,0,1,https://github.com/tfredian,Fix: Fix slow create pulse with large trees,1,[],https://github.com/MDSplus/mdsplus/pull/867,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/867,"TreeCreatePulseFile was modified to use TreeFindNodeWild to identify
subtrees but this is very expensive with large trees. This fix reverts
the subtree discovery to use tags instead.","TreeCreatePulseFile was modified to use TreeFindNodeWild to identify
subtrees but this is very expensive with large trees. This fix reverts
the subtree discovery to use tags instead.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,868,2017-03-28T14:20:26Z,2017-03-28T14:49:06Z,2017-05-03T12:12:01Z,MERGED,True,0,2,2,https://github.com/tfredian,Fix: The CAENV1740__add.fun was removed but package contents not updated,1,[],https://github.com/MDSplus/mdsplus/pull/868,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/868,"The RFXdevices/CAENV1740__add.fun was removed since the device support
was changed to python but the change was not added to the expected contents
files.","The RFXdevices/CAENV1740__add.fun was removed since the device support
was changed to python but the change was not added to the expected contents
files.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,869,2017-03-30T12:27:44Z,2017-03-30T12:51:43Z,2017-03-30T12:51:43Z,MERGED,True,94,59,6,https://github.com/zack-vii,Zck action monitor,4,[],https://github.com/MDSplus/mdsplus/pull/869,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/869,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,869,2017-03-30T12:27:44Z,2017-03-30T12:51:43Z,2017-03-30T12:51:43Z,MERGED,True,94,59,6,https://github.com/zack-vii,Zck action monitor,4,[],https://github.com/MDSplus/mdsplus/pull/869,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/869#issuecomment-290401060,,TODO: actmon still does not display actions,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,870,2017-04-01T14:54:00Z,2017-04-02T19:00:10Z,2017-04-02T19:00:10Z,MERGED,True,441,138,25,https://github.com/zack-vii,Zck action monitor,6,[],https://github.com/MDSplus/mdsplus/pull/870,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/870,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,871,2017-04-02T19:04:00Z,2017-04-02T19:37:03Z,2017-05-30T15:01:18Z,MERGED,True,51,55,4,https://github.com/zack-vii,Zck action monitor,2,[],https://github.com/MDSplus/mdsplus/pull/871,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/871,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,872,2017-04-03T01:31:21Z,2017-04-03T02:34:24Z,2017-04-03T02:34:24Z,MERGED,True,322,375,11,https://github.com/zack-vii,Zck gethost,4,[],https://github.com/MDSplus/mdsplus/pull/872,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/872,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,873,2017-04-03T14:37:42Z,2017-04-03T15:10:00Z,2017-04-03T15:10:00Z,MERGED,True,4,3,3,https://github.com/zack-vii,Build: Fixes the ARCH and ARCHES envs in the build script,1,[],https://github.com/MDSplus/mdsplus/pull/873,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/873,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,874,2017-04-03T20:32:15Z,2017-04-04T01:09:18Z,2017-04-04T01:09:18Z,MERGED,True,32,27,4,https://github.com/zack-vii,fixed tdi decompile and tests this issue in dataUnitTest STR-F-STRTOOLON,2,[],https://github.com/MDSplus/mdsplus/pull/874,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/874,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,875,2017-04-04T02:01:41Z,2017-04-06T01:24:16Z,2017-05-30T15:01:10Z,MERGED,True,1079,1881,15,https://github.com/zack-vii,Zck gethost udt.h,3,[],https://github.com/MDSplus/mdsplus/pull/875,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/875,"protest datafiel and ncifile pointer
unified mdsip udt in one header file  (TCPv6 and UDTv6 need testing)","protest datafiel and ncifile pointer
unified mdsip udt in one header file  (TCPv6 and UDTv6 need testing)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,875,2017-04-04T02:01:41Z,2017-04-06T01:24:16Z,2017-05-30T15:01:10Z,MERGED,True,1079,1881,15,https://github.com/zack-vii,Zck gethost udt.h,3,[],https://github.com/MDSplus/mdsplus/pull/875,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/875#issuecomment-292042853,"protest datafiel and ncifile pointer
unified mdsip udt in one header file  (TCPv6 and UDTv6 need testing)","tcp, udt, tcpv6, and udtv6 are working (udtv6 was not for a long time)
ssh seems unaffected, the others should be too.
port separator for v6 is '#' as it was for udtv6 before",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,876,2017-04-04T02:43:53Z,2017-04-04T16:49:26Z,2017-05-30T15:01:13Z,MERGED,True,196,181,11,https://github.com/zack-vii,Fix: race condition on three data and nci file refs,2,[],https://github.com/MDSplus/mdsplus/pull/876,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/876,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,877,2017-04-04T12:45:27Z,2017-04-04T13:43:25Z,2017-05-03T12:11:57Z,CLOSED,False,5,6,1,https://github.com/tfredian,"Build: Use ""other"" in branch in package name on debian if not release…",1,[],https://github.com/MDSplus/mdsplus/pull/877,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/877,"… branch
Debian packages names cannot contain characters other than alphanums or '-+.'","… branch
Debian packages names cannot contain characters other than alphanums or '-+.'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,879,2017-04-04T15:47:30Z,2017-04-04T16:45:09Z,2017-05-03T12:11:46Z,MERGED,True,4,5,3,https://github.com/joshStillerman,FIX: Arrays of zero length strings cause problems in various languages.,1,[],https://github.com/MDSplus/mdsplus/pull/879,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/879,"When encountering arrays of zero length strings various languages either
cause divide by zero errors or seg fault.
There are 2 cases:
1 - the array is bounded (IDL is the only way you can create one of these)
2 - the array is unbounded
These changes make the code return empty data when encountering these objects.","When encountering arrays of zero length strings various languages either
cause divide by zero errors or seg fault.
There are 2 cases:
1 - the array is bounded (IDL is the only way you can create one of these)
2 - the array is unbounded
These changes make the code return empty data when encountering these objects.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,880,2017-04-05T21:03:15Z,2017-08-01T16:59:01Z,2017-09-26T11:59:31Z,MERGED,True,36,6,4,https://github.com/tfredian,Fix: Better handling of text arrays of zero length srings,1,[],https://github.com/MDSplus/mdsplus/pull/880,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/880,"When an array of strings is created using, for example, ['',''],
an array descriptor is created with length=0 and arsize=0 but with aflags.coeff set and
dimct and m[0:dimct-1] filled in. This enables the determination of number of elements and
shape without using length and arsize. Many tdishr function still rely on length and arsize
so not all functions will work on these empty string arrays yet. Since the code prior to this
commit didn't work with empty string arrays this commit shouldn't break anything that was
working in ealier versions.","When an array of strings is created using, for example, ['',''],
an array descriptor is created with length=0 and arsize=0 but with aflags.coeff set and
dimct and m[0:dimct-1] filled in. This enables the determination of number of elements and
shape without using length and arsize. Many tdishr function still rely on length and arsize
so not all functions will work on these empty string arrays yet. Since the code prior to this
commit didn't work with empty string arrays this commit shouldn't break anything that was
working in ealier versions.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,881,2017-04-06T18:20:37Z,2017-04-06T18:48:58Z,2017-05-03T12:11:41Z,MERGED,True,0,3,1,https://github.com/tfredian,Fix: Fix mdsip connect to remove bind to eth0,1,[],https://github.com/MDSplus/mdsplus/pull/881,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/881,"At some point a bind to eth0 was added to the TCP plugin to mdsip
and this breaks mdsconnect on any system that does not use eth0
to connect to the remote system.","At some point a bind to eth0 was added to the TCP plugin to mdsip
and this breaks mdsconnect on any system that does not use eth0
to connect to the remote system.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,882,2017-04-07T13:28:20Z,2017-04-07T14:54:23Z,2017-04-07T14:54:27Z,CLOSED,False,2619,1442,1,https://github.com/tfredian,Fix: Revert TreeSegments.c to prevent segfaults and remove macros,1,[],https://github.com/MDSplus/mdsplus/pull/882,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/882,"This change reverts TreeSegments.c to an earlier version to fix a problem with
segfaulting with single point timestamped segments.","This change reverts TreeSegments.c to an earlier version to fix a problem with
segfaulting with single point timestamped segments.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,883,2017-04-07T13:54:39Z,2017-04-07T14:51:23Z,2017-04-07T14:51:23Z,MERGED,True,5,6,1,https://github.com/zack-vii,Fix: segfault when reading timestamped segments,1,[],https://github.com/MDSplus/mdsplus/pull/883,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/883,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,884,2017-04-10T13:12:32Z,2017-04-10T14:17:45Z,2017-04-10T14:17:45Z,MERGED,True,25,5,2,https://github.com/zack-vii,Fix: segfault on mdsconnect,1,[],https://github.com/MDSplus/mdsplus/pull/884,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/884,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,884,2017-04-10T13:12:32Z,2017-04-10T14:17:45Z,2017-04-10T14:17:45Z,MERGED,True,25,5,2,https://github.com/zack-vii,Fix: segfault on mdsconnect,1,[],https://github.com/MDSplus/mdsplus/pull/884,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/884#issuecomment-292963002,,ubuntu16 fail not related to pr. I manually restarted the test and it succeeded,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,885,2017-04-10T14:24:45Z,2017-04-10T15:10:59Z,2017-05-03T12:11:37Z,MERGED,True,17,31,13,https://github.com/GabrieleManduchi,Gm jscope fix streaming,2,[],https://github.com/MDSplus/mdsplus/pull/885,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/885,"These changes clean a bit the code and fix a bug in MdsStreamingDataProvider that provides streaming in jScope. The bug prevented sometimes (race condition) the initial visualization of the waveform.
Sorry, I forgot another time to use the commit rules in my commit command.......","These changes clean a bit the code and fix a bug in MdsStreamingDataProvider that provides streaming in jScope. The bug prevented sometimes (race condition) the initial visualization of the waveform.
Sorry, I forgot another time to use the commit rules in my commit command.......",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,885,2017-04-10T14:24:45Z,2017-04-10T15:10:59Z,2017-05-03T12:11:37Z,MERGED,True,17,31,13,https://github.com/GabrieleManduchi,Gm jscope fix streaming,2,[],https://github.com/MDSplus/mdsplus/pull/885,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/885#issuecomment-293385784,"These changes clean a bit the code and fix a bug in MdsStreamingDataProvider that provides streaming in jScope. The bug prevented sometimes (race condition) the initial visualization of the waveform.
Sorry, I forgot another time to use the commit rules in my commit command.......","Hi Gabriele,

If you get an email that you used an invalid commit header in a commit
from a pull request test you can always fix it by doing (linux):

If you are fixing the last commit in your pull request branch:

$ git commit --amend
edit your commit
then
$ git push -f origin pr-branch-name

If you are fixing other commits in your pull request:

$ git log -n 5 (lists the last 5 commits. Select number you need to find
your erroneous commits.)
find the hash of the commit you want to change (commit hash shown above
the commit message)
then
$ git commit --amend -c hash-of-the-commit
edit the commit message
then git push as shown above.

You should do this only on commits in your own branch that have not yet
been merged yet into alpha or stable.

Hope this helps,
Tom
…
On 4/10/2017 10:24 AM, GabrieleManduchi wrote:

 These changes clean a bit the code and fix a bug in
 MdsStreamingDataProvider that provides streaming in jScope. The bug
 prevented sometimes (race condition) the initial visualization of the
 waveform.

 Sorry, I forgot another time to use the commit rules in my commit
 command.......

 ------------------------------------------------------------------------


         You can view, comment on, or merge this pull request online at:

 #885


         Commit Summary

   * Fix Initial display in MdsStreamingDataProvider
   * Merge branch 'alpha' of https://github.com/MDSplus/mdsplus into
     gm-jscope-fix-streaming


         File Changes

   * *M* javascope/jScope/ASCIIDataProvider.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-0> (2)
   * *M* javascope/jScope/AsdexDataProvider.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-1> (2)
   * *M* javascope/jScope/JetDataProvider.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-2> (2)
   * *M* javascope/jScope/MdsDataProvider.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-3> (16)
   * *M* javascope/jScope/NotConnectedDataProvider.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-4> (1)
   * *M* javascope/jScope/Signal.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-5> (5)
   * *M* javascope/jScope/TwuDataProvider.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-6> (1)
   * *M* javascope/jScope/TwuWaveData.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-7> (1)
   * *M* javascope/jScope/UniversalDataProvider.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-8> (1)
   * *M* javascope/jScope/WaveInterface.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-9> (1)
   * *M* javascope/jScope/XYWaveData.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-10> (2)
   * *M* mdsobjects/java/MDSplus/Connection.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-11> (4)
   * *M* mdsobjects/java/MDSplus/MdsStreamingDataProvider.java
     <https://github.com/MDSplus/mdsplus/pull/885/files#diff-12> (10)


         Patch Links:

   * https://github.com/MDSplus/mdsplus/pull/885.patch
   * https://github.com/MDSplus/mdsplus/pull/885.diff

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#885>, or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHG5OzO5iLkGH-GV8o7fHeAGgvwoeSXiks5rujuugaJpZM4M42oA>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,886,2017-04-10T15:23:08Z,2017-04-10T16:41:21Z,2017-05-03T12:11:31Z,MERGED,True,4,1,1,https://github.com/joshStillerman,FIX - show server command after a stop server command crashes ,1,[],https://github.com/MDSplus/mdsplus/pull/886,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/886,"doing a double free
After sending a stop server command, the 'read answer info' call returns an
error, which is fine, since the server does not answer, however the error
case was only doing perror, and then falling through to the free of any
allocated memory.  Since the 'job' never completes, the job is still in the
que.  When the next 'show server' command comes along free(malloc) chokes
because it is trying to free memory that is not allocated.","doing a double free
After sending a stop server command, the 'read answer info' call returns an
error, which is fine, since the server does not answer, however the error
case was only doing perror, and then falling through to the free of any
allocated memory.  Since the 'job' never completes, the job is still in the
que.  When the next 'show server' command comes along free(malloc) chokes
because it is trying to free memory that is not allocated.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,887,2017-04-10T17:41:23Z,2017-04-10T18:03:33Z,2017-05-30T15:01:09Z,MERGED,True,376,688,3,https://github.com/zack-vii,Zck mdstcpip,2,[],https://github.com/MDSplus/mdsplus/pull/887,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/887,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,888,2017-04-11T11:06:13Z,2017-04-11T11:28:57Z,2017-04-11T11:29:03Z,MERGED,True,9,24,3,https://github.com/zack-vii,Zck viewdate,2,[],https://github.com/MDSplus/mdsplus/pull/888,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/888,"Fix: Remove obsolete methods
Fix: rwlock protect shared ViewDate","Fix: Remove obsolete methods
Fix: rwlock protect shared ViewDate",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,889,2017-04-11T17:05:34Z,2017-04-12T12:05:07Z,2017-05-30T15:01:07Z,MERGED,True,692,617,7,https://github.com/zack-vii,Zck getsegments,20,[],https://github.com/MDSplus/mdsplus/pull/889,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/889,current progress of macro to inline conversion for TreeSegments including two fixes,current progress of macro to inline conversion for TreeSegments including two fixes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,890,2017-04-11T18:57:37Z,2017-04-11T23:09:44Z,2017-05-03T12:11:29Z,MERGED,True,76,27,3,https://github.com/tfredian,Feature: Add command line recall to tditest,1,[],https://github.com/MDSplus/mdsplus/pull/890,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/890,"This change adds command line recall to the tditest utility.
If tditest is executed without any arguments it will save expressions
it receives and successfully evaluates in a history file. The command
line recall supports readline keystroke macros for doing things like
searching for a command in the history etc. Also  the echo of the comm
ands entered from stdin are no longer echoed.","This change adds command line recall to the tditest utility.
If tditest is executed without any arguments it will save expressions
it receives and successfully evaluates in a history file. The command
line recall supports readline keystroke macros for doing things like
searching for a command in the history etc. Also  the echo of the comm
ands entered from stdin are no longer echoed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,891,2017-04-11T21:10:46Z,2017-04-12T15:12:08Z,2017-05-03T12:11:24Z,MERGED,True,2,2,2,https://github.com/joshStillerman,FIX: add library to jScope and jTraverser - fixes mac SIP problem,1,[],https://github.com/MDSplus/mdsplus/pull/891,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/891,"Novimir Pablant found that adding -Djava.library.path=$MDSPLUS_DIR/${lib}
to the jTraverser command allowed him to fire it up even with macintosh
SIP (System Integrity Protection) enabled.
tested on linux, works there also.","Novimir Pablant found that adding -Djava.library.path=$MDSPLUS_DIR/${lib}
to the jTraverser command allowed him to fire it up even with macintosh
SIP (System Integrity Protection) enabled.
tested on linux, works there also.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,891,2017-04-11T21:10:46Z,2017-04-12T15:12:08Z,2017-05-03T12:11:24Z,MERGED,True,2,2,2,https://github.com/joshStillerman,FIX: add library to jScope and jTraverser - fixes mac SIP problem,1,[],https://github.com/MDSplus/mdsplus/pull/891,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/891#issuecomment-293553004,"Novimir Pablant found that adding -Djava.library.path=$MDSPLUS_DIR/${lib}
to the jTraverser command allowed him to fire it up even with macintosh
SIP (System Integrity Protection) enabled.
tested on linux, works there also.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,892,2017-04-12T09:42:19Z,2017-04-12T11:52:50Z,2017-05-03T12:11:23Z,MERGED,True,4,4,2,https://github.com/GabrieleManduchi,Fix: jScope LocalDataProvider issue,1,[],https://github.com/MDSplus/mdsplus/pull/892,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/892,Fixed library javamds in order to correctly perform evaluation of shots,Fixed library javamds in order to correctly perform evaluation of shots,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,893,2017-04-12T15:36:15Z,2017-04-12T18:18:23Z,2017-04-12T18:18:23Z,MERGED,True,82,54,12,https://github.com/zack-vii,Zck tsan,11,[],https://github.com/MDSplus/mdsplus/pull/893,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/893,reactivates thread san,reactivates thread san,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,894,2017-04-13T16:33:58Z,2017-04-15T16:37:07Z,2017-04-15T16:37:11Z,MERGED,True,40,41,6,https://github.com/zack-vii,Zck fc25 issues and features,3,[],https://github.com/MDSplus/mdsplus/pull/894,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/894,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,895,2017-04-13T20:41:35Z,2017-04-14T13:35:45Z,2017-05-03T12:10:30Z,MERGED,True,87,0,3,https://github.com/tfredian,Feature: Add a magic submodule to the MDSplus python module,1,[],https://github.com/MDSplus/mdsplus/pull/895,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/895,"This enhancement enables the use of %tcl and %tdi magic lines
in an iPython or jupyter notebook. You will be able to intersperse
mdstcl commands and tdi expressions in an ipython notebook along
with python.","This enhancement enables the use of %tcl and %tdi magic lines
in an iPython or jupyter notebook. You will be able to intersperse
mdstcl commands and tdi expressions in an ipython notebook along
with python.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,895,2017-04-13T20:41:35Z,2017-04-14T13:35:45Z,2017-05-03T12:10:30Z,MERGED,True,87,0,3,https://github.com/tfredian,Feature: Add a magic submodule to the MDSplus python module,1,[],https://github.com/MDSplus/mdsplus/pull/895,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/895#issuecomment-294023617,"This enhancement enables the use of %tcl and %tdi magic lines
in an iPython or jupyter notebook. You will be able to intersperse
mdstcl commands and tdi expressions in an ipython notebook along
with python.",oops. forgot packaging changes. Will retry tomorrow.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,895,2017-04-13T20:41:35Z,2017-04-14T13:35:45Z,2017-05-03T12:10:30Z,MERGED,True,87,0,3,https://github.com/tfredian,Feature: Add a magic submodule to the MDSplus python module,1,[],https://github.com/MDSplus/mdsplus/pull/895,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/895#issuecomment-294035164,"This enhancement enables the use of %tcl and %tdi magic lines
in an iPython or jupyter notebook. You will be able to intersperse
mdstcl commands and tdi expressions in an ipython notebook along
with python.","Tom -
Check that you can still import MDSplus from a python that is not IPython  and on a system that does not have IPython installed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,898,2017-04-14T19:09:57Z,2017-04-14T20:33:09Z,2017-04-14T20:33:15Z,MERGED,True,11,3,1,https://github.com/tfredian,Fix: mdsconnect to an unknown portname erroneously defaults to port 8000,1,[],https://github.com/MDSplus/mdsplus/pull/898,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/898,"If a portname is specified in a connection string and that portname is
not defined on the system the recent mdsip code caused a connection to
port 8000 instead of issuing an error. This update should fix this.
This should fix #897","If a portname is specified in a connection string and that portname is
not defined on the system the recent mdsip code caused a connection to
port 8000 instead of issuing an error. This update should fix this.
This should fix #897",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,899,2017-04-14T19:29:31Z,2017-04-14T20:32:49Z,2017-05-03T12:10:29Z,MERGED,True,3,2,1,https://github.com/tfredian,Build: When incrementing the MINOR portion of version set PATCH to zero,1,[],https://github.com/MDSplus/mdsplus/pull/899,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/899,"When a new feature is added the middle number of the release version was incremented (MINOR) but the third number (PATCH) was not reset to zero. This patch should fix this. It also cleans up the changelog and release text to omit merges and just list changes made.
This should fix: #896","When a new feature is added the middle number of the release version was incremented (MINOR) but the third number (PATCH) was not reset to zero. This patch should fix this. It also cleans up the changelog and release text to omit merges and just list changes made.
This should fix: #896",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,900,2017-04-15T17:45:44Z,2017-04-15T18:19:33Z,2017-04-15T18:19:37Z,MERGED,True,1,1,1,https://github.com/zack-vii,"Tests:ignore thread race in UdpEventsTestStatics, synced via usleep",1,[],https://github.com/MDSplus/mdsplus/pull/900,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/900,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,901,2017-04-15T20:16:05Z,2017-04-16T00:17:21Z,2017-04-16T00:17:24Z,MERGED,True,110,74,5,https://github.com/zack-vii,Zck python ctx,3,[],https://github.com/MDSplus/mdsplus/pull/901,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/901,this my fix the python dcl context issue from Thursday,this my fix the python dcl context issue from Thursday,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,902,2017-04-16T00:34:58Z,2017-04-16T13:40:39Z,2017-04-16T13:40:39Z,MERGED,True,85,85,5,https://github.com/zack-vii,Build: update autoconf ./bootstrap,1,[],https://github.com/MDSplus/mdsplus/pull/902,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/902,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,903,2017-04-16T13:41:26Z,2017-04-16T14:21:32Z,2017-04-16T14:21:32Z,MERGED,True,7,7,2,https://github.com/zack-vii,Zck dispatch program,2,[],https://github.com/MDSplus/mdsplus/pull/903,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/903,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,904,2017-04-16T17:49:41Z,2017-04-18T20:46:52Z,2017-04-18T20:47:35Z,MERGED,True,327,194,10,https://github.com/zack-vii,Zck Timeout for nonVMS - has TODO,8,[],https://github.com/MDSplus/mdsplus/pull/904,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/904,"TODO: status is not properly passed to main thread. pointer seems to be correct:
args->status_p == status_p in WorkerThread
but values do not match
*args->status_p != *status_p in WorkerThread
*status_p is 662470938 as expected, *args->status_p seems to be random","TODO: status is not properly passed to main thread. pointer seems to be correct:
args->status_p == status_p in WorkerThread
but values do not match
*args->status_p != *status_p in WorkerThread
*status_p is 662470938 as expected, *args->status_p seems to be random",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,905,2017-04-18T18:25:56Z,2017-04-18T18:51:22Z,2017-05-03T12:10:28Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Use 64-bit file offsets in TreeSegments.c,1,[],https://github.com/MDSplus/mdsplus/pull/905,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/905,"The rewrite of TreeSegments.c erroneously used 32-bit file offsets instead of
64-bit offsets when storing data in the datafile.","The rewrite of TreeSegments.c erroneously used 32-bit file offsets instead of
64-bit offsets when storing data in the datafile.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,906,2017-04-19T14:41:42Z,2017-05-31T10:25:58Z,2017-07-31T14:17:00Z,MERGED,True,550,529,40,https://github.com/zack-vii,Zck wconversion,27,[],https://github.com/MDSplus/mdsplus/pull/906,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/906,First test if conversion would be a considerable permanent test when working on multiple platforms,First test if conversion would be a considerable permanent test when working on multiple platforms,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,909,2017-04-28T15:17:35Z,2017-04-28T16:24:32Z,2017-04-28T16:26:02Z,MERGED,True,64253,65369,1143,https://github.com/tfredian,Twf promote stable,925,[],https://github.com/MDSplus/mdsplus/pull/909,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/909,This pull request will rebase all the alpha commits onto the stable branch to produce a new stable release which matches the current head of the alpha branch.,This pull request will rebase all the alpha commits onto the stable branch to produce a new stable release which matches the current head of the alpha branch.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,911,2017-04-28T18:03:03Z,2017-04-28T18:36:09Z,2017-04-28T18:41:40Z,MERGED,True,10,12,1,https://github.com/joshStillerman,FIX: Fix check for location of lib directory,1,[],https://github.com/MDSplus/mdsplus/pull/911,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/911,"The test added previously that checked the java version had some
syntax problems. This should work correctly.","The test added previously that checked the java version had some
syntax problems. This should work correctly.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,912,2017-04-28T18:10:47Z,2017-04-28T18:23:37Z,2017-05-03T12:10:47Z,CLOSED,False,10,12,1,https://github.com/joshStillerman,Jas fix j scope script stable,515,[],https://github.com/MDSplus/mdsplus/pull/912,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/912,Fix the jScope template script so it finds the correct name of the lib directory,Fix the jScope template script so it finds the correct name of the lib directory,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,913,2017-04-28T18:15:51Z,2017-04-28T18:23:09Z,2017-05-03T12:10:44Z,CLOSED,False,10,12,1,https://github.com/joshStillerman,FIX: Fix check for location of lib directory,1,[],https://github.com/MDSplus/mdsplus/pull/913,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/913,"The test added previously that checked the java version had some
syntax problems. This should work correctly.","The test added previously that checked the java version had some
syntax problems. This should work correctly.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,914,2017-04-28T18:26:07Z,2017-04-28T22:06:32Z,2017-05-03T12:10:47Z,MERGED,True,10,12,1,https://github.com/joshStillerman,FIX: Fix check for location of lib directory,1,[],https://github.com/MDSplus/mdsplus/pull/914,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/914,"The test added previously that checked the java version had some
syntax problems. This should work correctly.","The test added previously that checked the java version had some
syntax problems. This should work correctly.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,914,2017-04-28T18:26:07Z,2017-04-28T22:06:32Z,2017-05-03T12:10:47Z,MERGED,True,10,12,1,https://github.com/joshStillerman,FIX: Fix check for location of lib directory,1,[],https://github.com/MDSplus/mdsplus/pull/914,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/914#issuecomment-298096758,"The test added previously that checked the java version had some
syntax problems. This should work correctly.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,914,2017-04-28T18:26:07Z,2017-04-28T22:06:32Z,2017-05-03T12:10:47Z,MERGED,True,10,12,1,https://github.com/joshStillerman,FIX: Fix check for location of lib directory,1,[],https://github.com/MDSplus/mdsplus/pull/914,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/914#issuecomment-298112917,"The test added previously that checked the java version had some
syntax problems. This should work correctly.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,915,2017-05-02T19:18:53Z,2017-05-02T19:56:59Z,2017-05-02T19:57:06Z,MERGED,True,64,5,2,https://github.com/tfredian,Build: Add --promote_to=<branch> option on trigger script,1,[],https://github.com/MDSplus/mdsplus/pull/915,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/915,"This should enable us to add an option promote option on release builds
such as the jenkins stable release build job to optionally perform a promotion
of stable to the alpha head and creating a stable release with the same version
and content as the current alpha branch.","This should enable us to add an option promote option on release builds
such as the jenkins stable release build job to optionally perform a promotion
of stable to the alpha head and creating a stable release with the same version
and content as the current alpha branch.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,916,2017-05-02T19:59:58Z,2017-05-03T12:09:39Z,2017-05-03T12:09:45Z,MERGED,True,64,5,2,https://github.com/tfredian,Build: Add --promote_to=<branch> option on trigger script,1,[],https://github.com/MDSplus/mdsplus/pull/916,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/916,"This should enable us to add an option promote option on release builds
such as the jenkins stable release build job to optionally perform a promotion
of stable to the alpha head and creating a stable release with the same version
and content as the current alpha branch.","This should enable us to add an option promote option on release builds
such as the jenkins stable release build job to optionally perform a promotion
of stable to the alpha head and creating a stable release with the same version
and content as the current alpha branch.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,916,2017-05-02T19:59:58Z,2017-05-03T12:09:39Z,2017-05-03T12:09:45Z,MERGED,True,64,5,2,https://github.com/tfredian,Build: Add --promote_to=<branch> option on trigger script,1,[],https://github.com/MDSplus/mdsplus/pull/916,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/916#issuecomment-298751309,"This should enable us to add an option promote option on release builds
such as the jenkins stable release build job to optionally perform a promotion
of stable to the alpha head and creating a stable release with the same version
and content as the current alpha branch.",Retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,919,2017-05-17T17:28:38Z,2017-06-30T10:18:40Z,2017-06-30T10:18:40Z,CLOSED,False,60,22,5,https://github.com/zack-vii,Zck python ctx,3,[],https://github.com/MDSplus/mdsplus/pull/919,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/919,"restores the tdi/tcl context properly
hierarchy:

ctx argument (e.g. to work on specific Tree() object)
local tree context _TreeCtx.gettctx() (e.g. to handle trees using the static tdi and dcl methods)
current database =switchDbid() (e.g. when called as pyfun from external program)
use empty db and init it as local if required (opened=True)","restores the tdi/tcl context properly
hierarchy:

ctx argument (e.g. to work on specific Tree() object)
local tree context _TreeCtx.gettctx() (e.g. to handle trees using the static tdi and dcl methods)
current database =switchDbid() (e.g. when called as pyfun from external program)
use empty db and init it as local if required (opened=True)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,919,2017-05-17T17:28:38Z,2017-06-30T10:18:40Z,2017-06-30T10:18:40Z,CLOSED,False,60,22,5,https://github.com/zack-vii,Zck python ctx,3,[],https://github.com/MDSplus/mdsplus/pull/919,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/919#issuecomment-302214958,"restores the tdi/tcl context properly
hierarchy:

ctx argument (e.g. to work on specific Tree() object)
local tree context _TreeCtx.gettctx() (e.g. to handle trees using the static tdi and dcl methods)
current database =switchDbid() (e.g. when called as pyfun from external program)
use empty db and init it as local if required (opened=True)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,920,2017-05-17T17:35:34Z,2017-05-24T09:27:16Z,2017-05-30T15:16:02Z,CLOSED,False,127,22,10,https://github.com/zack-vii,"Feature: added LIST, DICT, adn TUPLE to built in functions",2,[],https://github.com/MDSplus/mdsplus/pull/920,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/920,"this is much faster than the python workaround and it breaks the 250 element limit.
_l=List(*,_a,_b,_c)   =>  [_a, _b, _c]
_ll=List(_l,_d,_e,_f)  => [_a, _b, _c, _d, _e, _f]
if required a tdi function could wrap around the old apdadd but I don't think apdadd have been used.","this is much faster than the python workaround and it breaks the 250 element limit.
_l=List(*,_a,_b,_c)   =>  [_a, _b, _c]
_ll=List(_l,_d,_e,_f)  => [_a, _b, _c, _d, _e, _f]
if required a tdi function could wrap around the old apdadd but I don't think apdadd have been used.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,920,2017-05-17T17:35:34Z,2017-05-24T09:27:16Z,2017-05-30T15:16:02Z,CLOSED,False,127,22,10,https://github.com/zack-vii,"Feature: added LIST, DICT, adn TUPLE to built in functions",2,[],https://github.com/MDSplus/mdsplus/pull/920,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/920#issuecomment-302215535,"this is much faster than the python workaround and it breaks the 250 element limit.
_l=List(*,_a,_b,_c)   =>  [_a, _b, _c]
_ll=List(_l,_d,_e,_f)  => [_a, _b, _c, _d, _e, _f]
if required a tdi function could wrap around the old apdadd but I don't think apdadd have been used.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,920,2017-05-17T17:35:34Z,2017-05-24T09:27:16Z,2017-05-30T15:16:02Z,CLOSED,False,127,22,10,https://github.com/zack-vii,"Feature: added LIST, DICT, adn TUPLE to built in functions",2,[],https://github.com/MDSplus/mdsplus/pull/920,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/920#issuecomment-303669210,"this is much faster than the python workaround and it breaks the 250 element limit.
_l=List(*,_a,_b,_c)   =>  [_a, _b, _c]
_ll=List(_l,_d,_e,_f)  => [_a, _b, _c, _d, _e, _f]
if required a tdi function could wrap around the old apdadd but I don't think apdadd have been used.",merged as part of #927,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,921,2017-05-18T15:47:36Z,2017-05-18T16:52:12Z,2017-09-06T07:38:51Z,MERGED,True,156,165,2,https://github.com/GabrieleManduchi,Feature:Add UniversalDataProvider,1,[],https://github.com/MDSplus/mdsplus/pull/921,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/921,Added UniversalDataProvider that allows mixing signals from different experiments,Added UniversalDataProvider that allows mixing signals from different experiments,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,922,2017-05-22T14:53:06Z,2017-05-22T15:52:07Z,2017-05-30T15:00:47Z,MERGED,True,301,466,3,https://github.com/zack-vii,Fix: properly convert phase name to CString and actlog sleep 100ms (n…,1,[],https://github.com/MDSplus/mdsplus/pull/922,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/922,…ot s); shared code for actmon and actlog,…ot s); shared code for actmon and actlog,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,923,2017-05-22T17:48:41Z,2017-05-23T10:47:18Z,2017-05-23T10:47:18Z,MERGED,True,784,379,46,https://github.com/zack-vii,Zck raspberrypi build,4,[],https://github.com/MDSplus/mdsplus/pull/923,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/923,"fixes a few issues ARCH related; in particular reapberrypi is compiled as armhf again and for the release, it uses now the same version of gsi that is tested (for both debian and redhead 32bit)","fixes a few issues ARCH related; in particular reapberrypi is compiled as armhf again and for the release, it uses now the same version of gsi that is tested (for both debian and redhead 32bit)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,924,2017-05-23T14:16:18Z,2017-05-23T16:12:41Z,2017-11-20T17:18:01Z,MERGED,True,3,1,1,https://github.com/tfredian,Fix: ensure TreeOpenEdit uses a null pointer for ctx if no ctx argume…,1,[],https://github.com/MDSplus/mdsplus/pull/924,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/924,"…nt supplied
The existing code passed the default context by reference to TreeOpenEdit which
ended up changing the actual default from a pointer to null to the ctx set by the
TreeOpenEdit call so the next time the python method was called it did not behave as
expected and passed a pointer to memory that had been freed. This fixes this problem.","…nt supplied
The existing code passed the default context by reference to TreeOpenEdit which
ended up changing the actual default from a pointer to null to the ctx set by the
TreeOpenEdit call so the next time the python method was called it did not behave as
expected and passed a pointer to memory that had been freed. This fixes this problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,924,2017-05-23T14:16:18Z,2017-05-23T16:12:41Z,2017-11-20T17:18:01Z,MERGED,True,3,1,1,https://github.com/tfredian,Fix: ensure TreeOpenEdit uses a null pointer for ctx if no ctx argume…,1,[],https://github.com/MDSplus/mdsplus/pull/924,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/924#issuecomment-303441468,"…nt supplied
The existing code passed the default context by reference to TreeOpenEdit which
ended up changing the actual default from a pointer to null to the ctx set by the
TreeOpenEdit call so the next time the python method was called it did not behave as
expected and passed a pointer to memory that had been freed. This fixes this problem.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,925,2017-05-23T14:19:03Z,2017-05-23T15:46:31Z,2017-11-20T17:17:57Z,MERGED,True,3,1,1,https://github.com/tfredian,Fix: ensure TreeOpenEdit uses a null pointer for ctx if no ctx argume…,1,[],https://github.com/MDSplus/mdsplus/pull/925,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/925,"…nt supplied
The existing code passed the default context by reference to TreeOpenEdit which
ended up changing the actual default from a pointer to null to the ctx set by the
TreeOpenEdit call so the next time the python method was called it did not behave as
expected and passed a pointer to memory that had been freed. This fixes this problem.","…nt supplied
The existing code passed the default context by reference to TreeOpenEdit which
ended up changing the actual default from a pointer to null to the ctx set by the
TreeOpenEdit call so the next time the python method was called it did not behave as
expected and passed a pointer to memory that had been freed. This fixes this problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,926,2017-05-23T16:14:49Z,2017-05-24T09:25:43Z,2017-05-30T15:00:55Z,MERGED,True,251,120,31,https://github.com/zack-vii,Zck tdi funs,5,[],https://github.com/MDSplus/mdsplus/pull/926,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/926,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,926,2017-05-23T16:14:49Z,2017-05-24T09:25:43Z,2017-05-30T15:00:55Z,MERGED,True,251,120,31,https://github.com/zack-vii,Zck tdi funs,5,[],https://github.com/MDSplus/mdsplus/pull/926,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/926#issuecomment-303509281,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,927,2017-05-23T16:46:09Z,2017-05-23T17:37:37Z,2017-05-30T15:00:22Z,MERGED,True,457,53,44,https://github.com/zack-vii,Zck raspberrypi build,4,[],https://github.com/MDSplus/mdsplus/pull/927,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/927,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,928,2017-05-24T23:04:44Z,2017-05-30T14:55:58Z,2017-05-30T14:55:59Z,MERGED,True,87,17,39,https://github.com/zack-vii,Zck helgrind issues,2,[],https://github.com/MDSplus/mdsplus/pull/928,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/928,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,930,2017-05-25T16:58:16Z,2017-05-25T17:23:50Z,2018-06-04T20:29:43Z,MERGED,True,2,2,2,https://github.com/joshStillerman,FIX: Strings G than 32 K bytes can not be put over thin connections,1,[],https://github.com/MDSplus/mdsplus/pull/930,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/930,"The length argument to SendArg in mdstcpip was types as short instead of
as unsigned short.  This caused a negative number to arrive at this call
when called from python Connection object when the argument was > 32K bytes.
Change the declaration to 'unsigned short'","The length argument to SendArg in mdstcpip was types as short instead of
as unsigned short.  This caused a negative number to arrive at this call
when called from python Connection object when the argument was > 32K bytes.
Change the declaration to 'unsigned short'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,931,2017-05-26T19:03:02Z,2017-05-29T09:58:45Z,2017-05-29T09:58:45Z,MERGED,True,5,8,1,https://github.com/tfredian,Build: Perform tests only if open --test=yes,1,[],https://github.com/MDSplus/mdsplus/pull/931,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/931,"The test section of the build scripts was performing tests if either the
--test option or the --valgrind_tools option was specified.
The --valgrind_tools option is meant to be specified in either os.opts file
or in the build job for a particular os to indicate what valgrind tools should
be used if the build was to perform tests. This change will correct the logic
to only test if the --test option is specified.","The test section of the build scripts was performing tests if either the
--test option or the --valgrind_tools option was specified.
The --valgrind_tools option is meant to be specified in either os.opts file
or in the build job for a particular os to indicate what valgrind tools should
be used if the build was to perform tests. This change will correct the logic
to only test if the --test option is specified.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,931,2017-05-26T19:03:02Z,2017-05-29T09:58:45Z,2017-05-29T09:58:45Z,MERGED,True,5,8,1,https://github.com/tfredian,Build: Perform tests only if open --test=yes,1,[],https://github.com/MDSplus/mdsplus/pull/931,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/931#issuecomment-304377091,"The test section of the build scripts was performing tests if either the
--test option or the --valgrind_tools option was specified.
The --valgrind_tools option is meant to be specified in either os.opts file
or in the build job for a particular os to indicate what valgrind tools should
be used if the build was to perform tests. This change will correct the logic
to only test if the --test option is specified.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,932,2017-05-29T10:02:49Z,2017-05-29T13:08:15Z,2017-11-20T17:17:34Z,MERGED,True,6,9,2,https://github.com/zack-vii,Build: Perform tests only if open --test=yes,2,[],https://github.com/MDSplus/mdsplus/pull/932,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/932,"The test section of the build scripts was performing tests if either the
--test option or the --valgrind_tools option was specified.
The --valgrind_tools option is meant to be specified in either os.opts file
or in the build job for a particular os to indicate what valgrind tools should
be used if the build was to perform tests. This change will correct the logic
to only test if the --test option is specified.","The test section of the build scripts was performing tests if either the
--test option or the --valgrind_tools option was specified.
The --valgrind_tools option is meant to be specified in either os.opts file
or in the build job for a particular os to indicate what valgrind tools should
be used if the build was to perform tests. This change will correct the logic
to only test if the --test option is specified.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,933,2017-05-29T14:50:11Z,2017-05-29T15:20:09Z,2017-11-20T17:17:27Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Fix install cleanup of .class files,1,[],https://github.com/MDSplus/mdsplus/pull/933,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/933,"The top level install removes .class files from the install root since only
the jar files are needed. If java build is disabled the install cleanup failed
because the java directory does not exits. This moves the cleanup until after
a java directory is created.","The top level install removes .class files from the install root since only
the jar files are needed. If java build is disabled the install cleanup failed
because the java directory does not exits. This moves the cleanup until after
a java directory is created.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,934,2017-05-29T16:55:13Z,2017-05-29T22:03:15Z,2017-05-30T15:00:17Z,MERGED,True,10,2,1,https://github.com/zack-vii,Fix: added missing finalize() to java MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/934,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/934,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,934,2017-05-29T16:55:13Z,2017-05-29T22:03:15Z,2017-05-30T15:00:17Z,MERGED,True,10,2,1,https://github.com/zack-vii,Fix: added missing finalize() to java MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/934,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/934#issuecomment-304701543,,"Hey @GabrieleManduchi, could you verify this against any interference with JTraverser or jScope. I think this should be the desired behavior (close tree of object gets destroyed)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,934,2017-05-29T16:55:13Z,2017-05-29T22:03:15Z,2017-05-30T15:00:17Z,MERGED,True,10,2,1,https://github.com/zack-vii,Fix: added missing finalize() to java MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/934,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/934#issuecomment-304709638,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,934,2017-05-29T16:55:13Z,2017-05-29T22:03:15Z,2017-05-30T15:00:17Z,MERGED,True,10,2,1,https://github.com/zack-vii,Fix: added missing finalize() to java MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/934,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/934#issuecomment-304714869,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,934,2017-05-29T16:55:13Z,2017-05-29T22:03:15Z,2017-05-30T15:00:17Z,MERGED,True,10,2,1,https://github.com/zack-vii,Fix: added missing finalize() to java MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/934,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/934#issuecomment-304736663,,Thanks for anticipating me....,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,935,2017-05-30T12:31:18Z,2017-05-30T13:02:24Z,2017-11-20T17:17:23Z,MERGED,True,10,2,1,https://github.com/tfredian,Fix: added missing finalize() to java MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/935,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/935,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,936,2017-05-30T14:59:44Z,2017-05-30T16:37:39Z,2017-05-30T16:37:39Z,MERGED,True,9,7,2,https://github.com/zack-vii,Zck helgrind issues,2,[],https://github.com/MDSplus/mdsplus/pull/936,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/936,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,936,2017-05-30T14:59:44Z,2017-05-30T16:37:39Z,2017-05-30T16:37:39Z,MERGED,True,9,7,2,https://github.com/zack-vii,Zck helgrind issues,2,[],https://github.com/MDSplus/mdsplus/pull/936,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/936#issuecomment-304929360,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,937,2017-05-30T16:46:34Z,2017-05-30T21:49:33Z,2017-05-30T21:49:33Z,MERGED,True,77,51,4,https://github.com/zack-vii,Fix: threadsafe dclDocs,1,[],https://github.com/MDSplus/mdsplus/pull/937,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/937,"use a shared static list to hold the parsed doc or read in xmls
use a thread private list to hold the current order with pointers to the static entries","use a shared static list to hold the parsed doc or read in xmls
use a thread private list to hold the current order with pointers to the static entries",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,938,2017-05-30T21:54:44Z,2017-05-30T22:26:42Z,2017-05-30T23:33:32Z,MERGED,True,34,60,3,https://github.com/zack-vii,Fix: improved ThreadSafe implementation by using pthread_once,1,[],https://github.com/MDSplus/mdsplus/pull/938,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/938,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,939,2017-05-31T18:13:56Z,2017-05-31T18:38:49Z,2017-07-10T17:43:49Z,MERGED,True,1,1,2,https://github.com/tfredian,Twf fix set node errors,2,[],https://github.com/MDSplus/mdsplus/pull/939,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/939,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,940,2017-06-01T21:18:44Z,2017-06-02T13:31:05Z,2017-07-31T14:17:03Z,CLOSED,False,201,240,39,https://github.com/zack-vii,Fix: tcl> abort server would break locks if Worker holds any,2,[],https://github.com/MDSplus/mdsplus/pull/940,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/940,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,940,2017-06-01T21:18:44Z,2017-06-02T13:31:05Z,2017-07-31T14:17:03Z,CLOSED,False,201,240,39,https://github.com/zack-vii,Fix: tcl> abort server would break locks if Worker holds any,2,[],https://github.com/MDSplus/mdsplus/pull/940,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/940#issuecomment-305787488,,merged in lite version in #941,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,941,2017-06-02T10:58:08Z,2017-06-02T11:58:27Z,2017-07-31T14:16:59Z,MERGED,True,169,233,39,https://github.com/zack-vii,Zck abort server locks lite,2,[],https://github.com/MDSplus/mdsplus/pull/941,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/941,"we should agree on a dockerimage to do the bootstrap
I used fc23 and fc25 (they produce the same output)
deploy/build.sh --os=fc23 --test -i
 cd /source
 ./bootstrap","we should agree on a dockerimage to do the bootstrap
I used fc23 and fc25 (they produce the same output)
deploy/build.sh --os=fc23 --test -i
 cd /source
 ./bootstrap",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,941,2017-06-02T10:58:08Z,2017-06-02T11:58:27Z,2017-07-31T14:16:59Z,MERGED,True,169,233,39,https://github.com/zack-vii,Zck abort server locks lite,2,[],https://github.com/MDSplus/mdsplus/pull/941,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/941#issuecomment-305760479,"we should agree on a dockerimage to do the bootstrap
I used fc23 and fc25 (they produce the same output)
deploy/build.sh --os=fc23 --test -i
 cd /source
 ./bootstrap",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,942,2017-06-02T13:04:17Z,2017-06-02T13:30:31Z,2017-07-31T14:16:58Z,MERGED,True,55,16,6,https://github.com/zack-vii,Zck helgrind issues 2,3,[],https://github.com/MDSplus/mdsplus/pull/942,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/942,"Fix: ServerDispatchPhase rwlock table
Tests: suppress more varieties of gethostbyname_r
Fix: pthread_once requires a lock","Fix: ServerDispatchPhase rwlock table
Tests: suppress more varieties of gethostbyname_r
Fix: pthread_once requires a lock",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,943,2017-06-07T14:47:27Z,2017-06-08T16:26:50Z,2017-06-08T16:26:57Z,MERGED,True,29475,2,203,https://github.com/zack-vii,Feature: added javatraverser2,2,[],https://github.com/MDSplus/mdsplus/pull/943,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/943,need some car .. name eventual different script to call etc,need some car .. name eventual different script to call etc,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,943,2017-06-07T14:47:27Z,2017-06-08T16:26:50Z,2017-06-08T16:26:57Z,MERGED,True,29475,2,203,https://github.com/zack-vii,Feature: added javatraverser2,2,[],https://github.com/MDSplus/mdsplus/pull/943,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/943#issuecomment-306818382,need some car .. name eventual different script to call etc,possibly need new java env for debian as Entry should be public but is not etc,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,943,2017-06-07T14:47:27Z,2017-06-08T16:26:50Z,2017-06-08T16:26:57Z,MERGED,True,29475,2,203,https://github.com/zack-vii,Feature: added javatraverser2,2,[],https://github.com/MDSplus/mdsplus/pull/943,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/943#issuecomment-307137273,need some car .. name eventual different script to call etc,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,943,2017-06-07T14:47:27Z,2017-06-08T16:26:50Z,2017-06-08T16:26:57Z,MERGED,True,29475,2,203,https://github.com/zack-vii,Feature: added javatraverser2,2,[],https://github.com/MDSplus/mdsplus/pull/943,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/943#issuecomment-307146236,need some car .. name eventual different script to call etc,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,944,2017-06-08T16:47:23Z,2017-06-08T17:06:37Z,2017-06-08T17:06:41Z,MERGED,True,3,5,1,https://github.com/zack-vii,Fix: FREEXD_ON_EXIT expects a pointer and out_ptr already is,1,[],https://github.com/MDSplus/mdsplus/pull/944,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/944,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,945,2017-06-08T21:15:33Z,2017-06-09T13:14:13Z,2017-06-09T13:14:22Z,MERGED,True,7067,4662,50,https://github.com/tfredian,Build: Enable one java jar build to be used by all os builds,1,[],https://github.com/MDSplus/mdsplus/pull/945,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/945,"This commit enables the ability to use a --make_jars option on the
trigger script which will cause the trigger script to actually
build all the java jar files so that the platform builds can just
use those jar files instead of rebuilding the files for each
platform.","This commit enables the ability to use a --make_jars option on the
trigger script which will cause the trigger script to actually
build all the java jar files so that the platform builds can just
use those jar files instead of rebuilding the files for each
platform.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,946,2017-06-09T14:58:34Z,2017-06-09T19:58:49Z,2017-06-09T19:58:53Z,MERGED,True,97,54,11,https://github.com/zack-vii,Build: set python bin for 32bit version on crosscompiling dockers,11,[],https://github.com/MDSplus/mdsplus/pull/946,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/946,e.g. fc23 and fc25,e.g. fc23 and fc25,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,946,2017-06-09T14:58:34Z,2017-06-09T19:58:49Z,2017-06-09T19:58:53Z,MERGED,True,97,54,11,https://github.com/zack-vii,Build: set python bin for 32bit version on crosscompiling dockers,11,[],https://github.com/MDSplus/mdsplus/pull/946,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/946#issuecomment-307414027,e.g. fc23 and fc25,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,946,2017-06-09T14:58:34Z,2017-06-09T19:58:49Z,2017-06-09T19:58:53Z,MERGED,True,97,54,11,https://github.com/zack-vii,Build: set python bin for 32bit version on crosscompiling dockers,11,[],https://github.com/MDSplus/mdsplus/pull/946,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/946#issuecomment-307416111,e.g. fc23 and fc25,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,947,2017-06-09T20:42:15Z,2017-06-12T13:01:37Z,2017-06-12T13:01:42Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Add java build to alpine armhf os,2,[],https://github.com/MDSplus/mdsplus/pull/947,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/947,With new jars_dir build option the java packages should be available for armhf,With new jars_dir build option the java packages should be available for armhf,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,948,2017-06-10T02:03:53Z,2017-06-10T03:27:45Z,2017-06-10T03:27:50Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: actions - print only errors in log,1,[],https://github.com/MDSplus/mdsplus/pull/948,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/948,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,950,2017-06-16T10:16:08Z,2017-06-16T11:00:36Z,2017-09-06T07:38:53Z,MERGED,True,124,160,1,https://github.com/GabrieleManduchi,Improved version of Channel Archiver,1,[],https://github.com/MDSplus/mdsplus/pull/950,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/950,This is an improved version of EPICS Channel Archiver. It does not impact anything since it is not in the automatic build procedure,This is an improved version of EPICS Channel Archiver. It does not impact anything since it is not in the automatic build procedure,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,951,2017-06-16T14:56:33Z,2017-06-16T19:44:05Z,2017-06-16T19:47:47Z,MERGED,True,1,1,1,https://github.com/amicitas,Fixes issue #949 caused by floating point division for int value,1,[],https://github.com/MDSplus/mdsplus/pull/951,https://github.com/amicitas,1,https://github.com/MDSplus/mdsplus/pull/951,Fixes Issue #949.  This is the only place in _descriptor.py that does not already have the required explicit conversion to int.,Fixes Issue #949.  This is the only place in _descriptor.py that does not already have the required explicit conversion to int.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,951,2017-06-16T14:56:33Z,2017-06-16T19:44:05Z,2017-06-16T19:47:47Z,MERGED,True,1,1,1,https://github.com/amicitas,Fixes issue #949 caused by floating point division for int value,1,[],https://github.com/MDSplus/mdsplus/pull/951,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/951#issuecomment-309048314,Fixes Issue #949.  This is the only place in _descriptor.py that does not already have the required explicit conversion to int.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,951,2017-06-16T14:56:33Z,2017-06-16T19:44:05Z,2017-06-16T19:47:47Z,MERGED,True,1,1,1,https://github.com/amicitas,Fixes issue #949 caused by floating point division for int value,1,[],https://github.com/MDSplus/mdsplus/pull/951,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/951#issuecomment-309099986,Fixes Issue #949.  This is the only place in _descriptor.py that does not already have the required explicit conversion to int.,test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,951,2017-06-16T14:56:33Z,2017-06-16T19:44:05Z,2017-06-16T19:47:47Z,MERGED,True,1,1,1,https://github.com/amicitas,Fixes issue #949 caused by floating point division for int value,1,[],https://github.com/MDSplus/mdsplus/pull/951,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/951#issuecomment-309117565,Fixes Issue #949.  This is the only place in _descriptor.py that does not already have the required explicit conversion to int.,Thanks for discovering this problem and providing a fix!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,951,2017-06-16T14:56:33Z,2017-06-16T19:44:05Z,2017-06-16T19:47:47Z,MERGED,True,1,1,1,https://github.com/amicitas,Fixes issue #949 caused by floating point division for int value,1,[],https://github.com/MDSplus/mdsplus/pull/951,https://github.com/amicitas,5,https://github.com/MDSplus/mdsplus/pull/951#issuecomment-309118347,Fixes Issue #949.  This is the only place in _descriptor.py that does not already have the required explicit conversion to int.,Happy to help.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,952,2017-06-22T10:37:10Z,2017-06-22T11:07:00Z,2017-07-31T14:16:51Z,MERGED,True,9,0,3,https://github.com/zack-vii,Build: allow to --disable-java from deploy/build.sh,1,[],https://github.com/MDSplus/mdsplus/pull/952,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/952,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,953,2017-06-22T13:34:27Z,2017-06-22T14:02:27Z,2017-07-10T17:43:47Z,MERGED,True,9023,7255,43,https://github.com/tfredian,"Revert ""zck rebased twf refact python DO NOT MERGE""",5,[],https://github.com/MDSplus/mdsplus/pull/953,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/953,Reverts #704,Reverts #704,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,954,2017-06-23T10:11:43Z,2017-06-23T10:36:38Z,2017-06-23T10:36:38Z,MERGED,True,20,2,2,https://github.com/GabrieleManduchi,Handle different number of X and Y samples returned in streaming,1,[],https://github.com/MDSplus/mdsplus/pull/954,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/954,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,955,2017-06-23T12:33:17Z,2017-06-23T13:10:04Z,2017-07-10T17:43:45Z,MERGED,True,7275,9032,43,https://github.com/tfredian,Twf fix python deadlock,7,[],https://github.com/MDSplus/mdsplus/pull/955,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/955,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,956,2017-06-23T15:15:50Z,2017-06-23T15:46:13Z,2017-07-10T17:43:44Z,MERGED,True,9032,7275,43,https://github.com/tfredian,"Revert ""Twf fix python deadlock""",6,[],https://github.com/MDSplus/mdsplus/pull/956,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/956,Reverts #955,Reverts #955,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,956,2017-06-23T15:15:50Z,2017-06-23T15:46:13Z,2017-07-10T17:43:44Z,MERGED,True,9032,7275,43,https://github.com/tfredian,"Revert ""Twf fix python deadlock""",6,[],https://github.com/MDSplus/mdsplus/pull/956,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/956#issuecomment-310701368,Reverts #955,New python api has problems with certain data types. Investigating now but this will revert the alpha branch to before new python api until these problems are solved.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,957,2017-06-23T18:24:21Z,2017-06-23T19:20:53Z,2017-07-10T17:44:03Z,MERGED,True,1,1,1,https://github.com/joshStillerman,FIX: Remove --version=... from setup.py command in windows installer,2,[],https://github.com/MDSplus/mdsplus/pull/957,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/957,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,958,2017-06-23T20:03:50Z,2017-07-10T12:41:35Z,2017-07-10T13:15:48Z,CLOSED,False,7311,9032,43,https://github.com/tfredian,Twf fix vms floats DO NOT MERGE YET,8,[],https://github.com/MDSplus/mdsplus/pull/958,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/958,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,958,2017-06-23T20:03:50Z,2017-07-10T12:41:35Z,2017-07-10T13:15:48Z,CLOSED,False,7311,9032,43,https://github.com/tfredian,Twf fix vms floats DO NOT MERGE YET,8,[],https://github.com/MDSplus/mdsplus/pull/958,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/958#issuecomment-314093616,,included in #960,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,959,2017-06-28T19:06:28Z,2017-06-30T10:18:19Z,2017-06-30T10:18:22Z,MERGED,True,96,13,3,https://github.com/zack-vii,Tests: Added writeSegments test,5,[],https://github.com/MDSplus/mdsplus/pull/959,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/959,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,959,2017-06-28T19:06:28Z,2017-06-30T10:18:19Z,2017-06-30T10:18:22Z,MERGED,True,96,13,3,https://github.com/zack-vii,Tests: Added writeSegments test,5,[],https://github.com/MDSplus/mdsplus/pull/959,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/959#issuecomment-311759471,,seems like the old api did not accept lists as input,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,959,2017-06-28T19:06:28Z,2017-06-30T10:18:19Z,2017-06-30T10:18:22Z,MERGED,True,96,13,3,https://github.com/zack-vii,Tests: Added writeSegments test,5,[],https://github.com/MDSplus/mdsplus/pull/959,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/959#issuecomment-311761273,,No it does not accept lists and neither should the new api. Segments are arrays. Lists are implemented with apd's and cannot be stored in a segment.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,959,2017-06-28T19:06:28Z,2017-06-30T10:18:19Z,2017-06-30T10:18:22Z,MERGED,True,96,13,3,https://github.com/zack-vii,Tests: Added writeSegments test,5,[],https://github.com/MDSplus/mdsplus/pull/959,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/959#issuecomment-311762999,,"i meant python lists like [[1,2],[3,4]] the new api simply does an input = Data(input) and lets Data handle the the conversation. this way python types are only converted at one place. Data turns the python list into via numpy.array() into either int32 or float64/32 so it can be accepted by MDSplus Arrays",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,960,2017-06-28T19:08:49Z,2017-07-10T12:40:48Z,2017-07-31T14:16:40Z,MERGED,True,7322,9172,41,https://github.com/zack-vii,Zck rebased twf refact python  DO NOT MERGE YET ;),9,[],https://github.com/MDSplus/mdsplus/pull/960,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/960,"same as #958 but rebased on the segments_test pr #959
and fixes of the TreeCtx.__del__ and __new__","same as #958 but rebased on the segments_test pr #959
and fixes of the TreeCtx.__del__ and __new__",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,960,2017-06-28T19:08:49Z,2017-07-10T12:40:48Z,2017-07-31T14:16:40Z,MERGED,True,7322,9172,41,https://github.com/zack-vii,Zck rebased twf refact python  DO NOT MERGE YET ;),9,[],https://github.com/MDSplus/mdsplus/pull/960,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/960#issuecomment-312255437,"same as #958 but rebased on the segments_test pr #959
and fixes of the TreeCtx.__del__ and __new__",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,960,2017-06-28T19:08:49Z,2017-07-10T12:40:48Z,2017-07-31T14:16:40Z,MERGED,True,7322,9172,41,https://github.com/zack-vii,Zck rebased twf refact python  DO NOT MERGE YET ;),9,[],https://github.com/MDSplus/mdsplus/pull/960,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/960#issuecomment-312393937,"same as #958 but rebased on the segments_test pr #959
and fixes of the TreeCtx.__del__ and __new__",unsure,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,960,2017-06-28T19:08:49Z,2017-07-10T12:40:48Z,2017-07-31T14:16:40Z,MERGED,True,7322,9172,41,https://github.com/zack-vii,Zck rebased twf refact python  DO NOT MERGE YET ;),9,[],https://github.com/MDSplus/mdsplus/pull/960,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/960#issuecomment-314076419,"same as #958 but rebased on the segments_test pr #959
and fixes of the TreeCtx.__del__ and __new__",hurray,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,961,2017-06-29T16:47:38Z,2017-06-29T17:16:34Z,2017-07-31T14:16:48Z,MERGED,True,21,15,2,https://github.com/zack-vii,Zck mdsdcl env memcheck,2,[],https://github.com/MDSplus/mdsplus/pull/961,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/961,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,963,2017-07-03T18:24:22Z,2017-07-03T18:49:08Z,2017-07-03T18:49:16Z,MERGED,True,146,138,12,https://github.com/zack-vii,Zck action monitor,3,[],https://github.com/MDSplus/mdsplus/pull/963,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/963,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,964,2017-07-03T20:52:27Z,2017-07-03T21:16:14Z,2017-07-03T21:23:16Z,MERGED,True,1,3,1,https://github.com/zack-vii,Tests: use putRow more efficiently; the intended way,1,[],https://github.com/MDSplus/mdsplus/pull/964,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/964,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,965,2017-07-05T18:57:10Z,2017-07-05T19:23:45Z,2017-07-05T19:23:48Z,MERGED,True,82,104,5,https://github.com/zack-vii,Zck random locks,4,[],https://github.com/MDSplus/mdsplus/pull/965,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/965,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,966,2017-07-06T11:31:07Z,2017-07-06T13:11:31Z,2017-07-06T13:11:35Z,MERGED,True,21,10,1,https://github.com/zack-vii,disable gc during lock,1,[],https://github.com/MDSplus/mdsplus/pull/966,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/966,should fix random deadlocks,should fix random deadlocks,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,967,2017-07-10T11:42:45Z,2017-07-10T12:09:27Z,2017-07-10T12:22:50Z,MERGED,True,43,53,3,https://github.com/zack-vii,Zck tdidotask,2,[],https://github.com/MDSplus/mdsplus/pull/967,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/967,Tests and fixed tdiDoTask with timeout,Tests and fixed tdiDoTask with timeout,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,968,2017-07-10T12:52:20Z,2017-07-10T17:43:04Z,2017-07-10T17:43:17Z,MERGED,True,20,20,2,https://github.com/tfredian,Build: Use shell environment variable to specify OpenMotif dir on MacOSX DO NOT MERGE,1,[],https://github.com/MDSplus/mdsplus/pull/968,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/968,"Older versions of MacOSX (i.e. Mountain Lion) installed the OpenMotif
development package in the /usr directory and this was hardcoded in
the configure script. Newer versions install this
in /usr/local and prevent the use of symlinks in /usr as a workaround.
This change enables the use of an OPENMOTIF environment variable to
specify the location of the OpenMotif headers and libraries.","Older versions of MacOSX (i.e. Mountain Lion) installed the OpenMotif
development package in the /usr directory and this was hardcoded in
the configure script. Newer versions install this
in /usr/local and prevent the use of symlinks in /usr as a workaround.
This change enables the use of an OPENMOTIF environment variable to
specify the location of the OpenMotif headers and libraries.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,969,2017-07-10T17:10:01Z,2017-07-11T00:33:11Z,2017-07-11T00:33:11Z,MERGED,True,161,173,2,https://github.com/zack-vii,Fix: FREE_ON_EXIT/FREE_NOW only free if (ptr),1,[],https://github.com/MDSplus/mdsplus/pull/969,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/969,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,970,2017-07-11T19:28:20Z,2017-07-14T20:01:07Z,2017-07-14T20:01:07Z,MERGED,True,186,146,20,https://github.com/zack-vii,Zck free/unlock on exit,4,[],https://github.com/MDSplus/mdsplus/pull/970,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/970,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,971,2017-07-12T18:21:45Z,2017-07-12T19:12:43Z,2017-07-31T14:16:37Z,MERGED,True,383,346,7,https://github.com/zack-vii,Zck vms python,4,[],https://github.com/MDSplus/mdsplus/pull/971,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/971,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,972,2017-07-13T15:17:17Z,2017-07-13T15:48:12Z,2017-07-13T15:48:12Z,MERGED,True,7,2,4,https://github.com/zack-vii,Zck python ctx,2,[],https://github.com/MDSplus/mdsplus/pull/972,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/972,Fixes a typo and a python3 compatibility issue with String[Array],Fixes a typo and a python3 compatibility issue with String[Array],True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,973,2017-07-14T22:20:05Z,2017-07-14T23:29:23Z,2017-07-31T14:15:23Z,MERGED,True,102,101,6,https://github.com/zack-vii,Zck python 3 and stop server,3,[],https://github.com/MDSplus/mdsplus/pull/973,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/973,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,974,2017-07-18T10:20:27Z,2017-07-18T12:20:39Z,2017-07-18T12:20:39Z,MERGED,True,335,330,9,https://github.com/zack-vii,Zck mdsip timeout,5,[],https://github.com/MDSplus/mdsplus/pull/974,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/974,"added 10sec timeout to unresponsive servers
fixed python Connection.get for multiple args","added 10sec timeout to unresponsive servers
fixed python Connection.get for multiple args",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,975,2017-07-19T11:59:45Z,2017-07-19T14:08:23Z,2017-07-31T14:15:24Z,MERGED,True,19,20,5,https://github.com/zack-vii,Zck mdsip timeout,2,[],https://github.com/MDSplus/mdsplus/pull/975,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/975,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,976,2017-07-19T21:12:40Z,2017-07-19T21:22:43Z,2017-07-19T21:22:43Z,MERGED,True,72,25,8,https://github.com/zack-vii,Fix: support arrays stored in signal nodes,2,[],https://github.com/MDSplus/mdsplus/pull/976,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/976,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,977,2017-07-21T16:50:42Z,2017-10-18T13:45:22Z,2017-10-18T13:45:25Z,MERGED,True,604,1785,32,https://github.com/tfredian,New Matlab to MDSplus interface - DO NOT MERGE - More testing needed,6,[],https://github.com/MDSplus/mdsplus/pull/977,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/977,This PR implements a new set of matlab modules that enables the use of either java or python when accessing MDSplus from Matlab. It also attempts to reduce the amount of system configuration for using the Matlab with MDSplus. These new modules are also compatible with Octave.,This PR implements a new set of matlab modules that enables the use of either java or python when accessing MDSplus from Matlab. It also attempts to reduce the amount of system configuration for using the Matlab with MDSplus. These new modules are also compatible with Octave.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,977,2017-07-21T16:50:42Z,2017-10-18T13:45:22Z,2017-10-18T13:45:25Z,MERGED,True,604,1785,32,https://github.com/tfredian,New Matlab to MDSplus interface - DO NOT MERGE - More testing needed,6,[],https://github.com/MDSplus/mdsplus/pull/977,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/977#issuecomment-336969126,This PR implements a new set of matlab modules that enables the use of either java or python when accessing MDSplus from Matlab. It also attempts to reduce the amount of system configuration for using the Matlab with MDSplus. These new modules are also compatible with Octave.,This needs to address: #1093,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,979,2017-07-24T14:39:07Z,2017-07-25T12:03:51Z,2017-07-25T12:03:51Z,MERGED,True,5,13,2,https://github.com/GabrieleManduchi,Fix exception in multiple signals,1,[],https://github.com/MDSplus/mdsplus/pull/979,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/979,This exception prevents panel visualization under certain conditions,This exception prevents panel visualization under certain conditions,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,981,2017-07-24T17:56:26Z,2017-07-24T17:56:46Z,2017-07-24T17:56:46Z,CLOSED,False,551,83,52,https://github.com/tfredian,Twf fix py3 int division,528,[],https://github.com/MDSplus/mdsplus/pull/981,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/981,This should fix issue #980,This should fix issue #980,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,982,2017-07-24T17:59:49Z,2017-07-25T16:02:54Z,2017-07-25T16:03:02Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Fix python3 integer division,2,[],https://github.com/MDSplus/mdsplus/pull/982,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/982,"In python3, an integer divided by an integer yields a float. This was causing a
problem because an integer divide was used in an array shape initialization and a
floating point value in the shape was invalid.
This should fix issue #980","In python3, an integer divided by an integer yields a float. This was causing a
problem because an integer divide was used in an array shape initialization and a
floating point value in the shape was invalid.
This should fix issue #980",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,983,2017-07-24T21:07:47Z,2017-07-25T15:15:05Z,2017-07-25T16:03:26Z,MERGED,True,29,29,7,https://github.com/tfredian,Fix: MdsValue termination argument must be Null pointer,1,[],https://github.com/MDSplus/mdsplus/pull/983,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/983,"MdsValue was called in several places with a terminating 32-bit integer 0
instead of a NULL pointer causing unpredictable behavior.
This should fix issue #978","MdsValue was called in several places with a terminating 32-bit integer 0
instead of a NULL pointer causing unpredictable behavior.
This should fix issue #978",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,984,2017-07-25T15:15:45Z,2017-07-25T15:44:53Z,2017-07-25T16:03:24Z,MERGED,True,29,29,7,https://github.com/tfredian,Fix: MdsValue termination argument must be Null pointer,1,[],https://github.com/MDSplus/mdsplus/pull/984,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/984,"MdsValue was called in several places with a terminating 32-bit integer 0
instead of a NULL pointer causing unpredictable behavior.","MdsValue was called in several places with a terminating 32-bit integer 0
instead of a NULL pointer causing unpredictable behavior.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,985,2017-07-26T14:12:56Z,2017-07-26T14:52:11Z,2017-07-26T14:52:16Z,CLOSED,False,2,2,1,https://github.com/tfredian,Build: Move winebottle to /tmp directory to prevent directory recursi…,1,[],https://github.com/MDSplus/mdsplus/pull/985,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/985,"…on in jenkins
Jenkins searches the workspace for build artifacts and the wine directory causes
recursion since it has a hard symlink to the system root directory. This will move
the winebottles to the /tmp directory instead of being created in the jenkins workspace.","…on in jenkins
Jenkins searches the workspace for build artifacts and the wine directory causes
recursion since it has a hard symlink to the system root directory. This will move
the winebottles to the /tmp directory instead of being created in the jenkins workspace.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,986,2017-07-28T19:07:22Z,2017-07-28T19:35:19Z,2017-09-26T11:59:36Z,MERGED,True,21,17,12,https://github.com/tfredian,Build: Fix macos compiler warnings,1,[],https://github.com/MDSplus/mdsplus/pull/986,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/986,"The clang compiler on macosx is finding more compiler warnings.
Some need fixing while others just need to be suppressed.","The clang compiler on macosx is finding more compiler warnings.
Some need fixing while others just need to be suppressed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,987,2017-07-28T21:03:27Z,2017-08-01T18:36:46Z,2017-11-20T17:20:31Z,MERGED,True,887,10,5,https://github.com/joshStillerman,BUILD: Redo mac packging using the Packages utility,2,[],https://github.com/MDSplus/mdsplus/pull/987,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/987,As of 10.12 Apple no longer supports the packgaing utility we were using. This change uses packages to build a pkg for MDSplus  Packages is another requirement for building MDSplus:  http://s.sudre.free.fr/Software/Packages/about.html,As of 10.12 Apple no longer supports the packgaing utility we were using. This change uses packages to build a pkg for MDSplus  Packages is another requirement for building MDSplus:  http://s.sudre.free.fr/Software/Packages/about.html,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,987,2017-07-28T21:03:27Z,2017-08-01T18:36:46Z,2017-11-20T17:20:31Z,MERGED,True,887,10,5,https://github.com/joshStillerman,BUILD: Redo mac packging using the Packages utility,2,[],https://github.com/MDSplus/mdsplus/pull/987,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/987#issuecomment-319067963,As of 10.12 Apple no longer supports the packgaing utility we were using. This change uses packages to build a pkg for MDSplus  Packages is another requirement for building MDSplus:  http://s.sudre.free.fr/Software/Packages/about.html,"This needs more work. I'm not sure about the name of the postinstall script file. The proj file used rtfd but the filename in the PR ended in rtf. The mdsplus/macosx/Makefile.am will need to be changed since you are installing different scripts for this new installer and after changing that you will need to:
cd mdsplus
./bootstrap
and commit the new Makefile.am and Makefile.in files in macosx.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,987,2017-07-28T21:03:27Z,2017-08-01T18:36:46Z,2017-11-20T17:20:31Z,MERGED,True,887,10,5,https://github.com/joshStillerman,BUILD: Redo mac packging using the Packages utility,2,[],https://github.com/MDSplus/mdsplus/pull/987,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/987#issuecomment-319432510,As of 10.12 Apple no longer supports the packgaing utility we were using. This change uses packages to build a pkg for MDSplus  Packages is another requirement for building MDSplus:  http://s.sudre.free.fr/Software/Packages/about.html,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,988,2017-07-31T13:29:38Z,2017-07-31T14:14:33Z,2017-07-31T14:15:38Z,MERGED,True,26,24,1,https://github.com/zack-vii,Zck mdsdevice,3,[],https://github.com/MDSplus/mdsplus/pull/988,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/988,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,989,2017-08-02T02:34:22Z,2017-10-16T21:43:29Z,2017-10-19T12:31:47Z,MERGED,True,401,365,16,https://github.com/zack-vii,Zck python ctx DO_NOT_MERGE_YET,11,[],https://github.com/MDSplus/mdsplus/pull/989,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/989,"not deprecation warning yet.
e.g.:
Instead of
Data.execute(expression_with_node_refs)
one should use
tree_instance.tdi(expression_with_node_refs)","not deprecation warning yet.
e.g.:
Instead of
Data.execute(expression_with_node_refs)
one should use
tree_instance.tdi(expression_with_node_refs)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,989,2017-08-02T02:34:22Z,2017-10-16T21:43:29Z,2017-10-19T12:31:47Z,MERGED,True,401,365,16,https://github.com/zack-vii,Zck python ctx DO_NOT_MERGE_YET,11,[],https://github.com/MDSplus/mdsplus/pull/989,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/989#issuecomment-335997095,"not deprecation warning yet.
e.g.:
Instead of
Data.execute(expression_with_node_refs)
one should use
tree_instance.tdi(expression_with_node_refs)","TODO: TreeCtx does not properly clean up once the Tree is closed. this caused Windows test to fail as the trees are not closed when they should have been.
TODO2: fishy value: -1for size in _TreeGetRecord->_TreeGetSegmentedRecord->getOpaque_List->TreeGetDsc->malloc(length)
possibly since #1068 in treeshr/TreeSegments.c,359",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,989,2017-08-02T02:34:22Z,2017-10-16T21:43:29Z,2017-10-19T12:31:47Z,MERGED,True,401,365,16,https://github.com/zack-vii,Zck python ctx DO_NOT_MERGE_YET,11,[],https://github.com/MDSplus/mdsplus/pull/989,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/989#issuecomment-336858119,"not deprecation warning yet.
e.g.:
Instead of
Data.execute(expression_with_node_refs)
one should use
tree_instance.tdi(expression_with_node_refs)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,990,2017-08-02T14:01:51Z,2017-08-16T12:39:42Z,2019-06-07T11:33:56Z,MERGED,True,192,364,5,https://github.com/AndreaRigoni,Build: Fix --with-winebottle option to proper select winebottle direc…,4,[],https://github.com/MDSplus/mdsplus/pull/990,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/990,"…tory
A brief cleanup of the WINE related check functions. Two caveat still remain:

To properly create a new wine bottle during config the X Display must be accessible, wine boot needs to show a dummy window.
the winebottle directory must reside in a directory owned by the same user that starts the configure script.","…tory
A brief cleanup of the WINE related check functions. Two caveat still remain:

To properly create a new wine bottle during config the X Display must be accessible, wine boot needs to show a dummy window.
the winebottle directory must reside in a directory owned by the same user that starts the configure script.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,991,2017-08-03T09:59:40Z,2017-08-03T13:18:15Z,2017-08-03T13:18:15Z,CLOSED,False,97,10,5,https://github.com/GabrieleManduchi,Fix get many,5,[],https://github.com/MDSplus/mdsplus/pull/991,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/991,"A bunch of fixes to GetMany sever side management, plus a new MakeTimestampedSegment fun","A bunch of fixes to GetMany sever side management, plus a new MakeTimestampedSegment fun",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,992,2017-08-03T13:28:18Z,2017-08-03T13:58:36Z,2017-09-06T07:38:55Z,MERGED,True,98,10,7,https://github.com/GabrieleManduchi,Fix get many,6,[],https://github.com/MDSplus/mdsplus/pull/992,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/992,Added also deploy information,Added also deploy information,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,992,2017-08-03T13:28:18Z,2017-08-03T13:58:36Z,2017-09-06T07:38:55Z,MERGED,True,98,10,7,https://github.com/GabrieleManduchi,Fix get many,6,[],https://github.com/MDSplus/mdsplus/pull/992,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/992#issuecomment-319981776,Added also deploy information,"Hi Tom,
    thanks. As far as I know this is the first real usage of GetMany.
There were some problems in the server side management of the  GetMany
request but now it seems to work.

Changing topic....do you confirm that you will be in Padova on September
3? Ornella told me that you will be alone because your friends have got
a problem.

If you like, I propose you a nice walk on the Colli in the afternoon,
and dinner in my home (there will be also Andrea and Elena).


                                                              Ciao
Gabriele
…
On 03/08/2017 15:58, Tom Fredian wrote:

 Merged #992 <#992>.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#992 (comment)>, or
 mute the thread
 <https://github.com/notifications/unsubscribe-auth/AISySFuxGbyrNJ-_lDIRayGhl6rG_Kkqks5sUdINgaJpZM4OscKy>.


-- 
Gabriele Manduchi

Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,993,2017-08-03T14:58:44Z,2017-08-07T14:43:54Z,2017-09-26T11:58:24Z,MERGED,True,4,4,2,https://github.com/tfredian,Build: Make osx build use 64-bit only,1,[],https://github.com/MDSplus/mdsplus/pull/993,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/993,OSX is phasing out 32-bit support.,OSX is phasing out 32-bit support.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,993,2017-08-03T14:58:44Z,2017-08-07T14:43:54Z,2017-09-26T11:58:24Z,MERGED,True,4,4,2,https://github.com/tfredian,Build: Make osx build use 64-bit only,1,[],https://github.com/MDSplus/mdsplus/pull/993,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/993#issuecomment-320668384,OSX is phasing out 32-bit support.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,994,2017-08-03T15:51:35Z,2017-08-11T15:35:40Z,2017-08-11T15:35:40Z,MERGED,True,32,17,1,https://github.com/GabrieleManduchi,Fix jscope streaming,3,[],https://github.com/MDSplus/mdsplus/pull/994,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/994,Still another fix for a jScope unhandled exception,Still another fix for a jScope unhandled exception,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,999,2017-08-07T15:43:20Z,2017-08-07T17:57:48Z,2017-08-07T17:58:30Z,MERGED,True,27,20,4,https://github.com/zack-vii,Zck j traverser2.bat,1,[],https://github.com/MDSplus/mdsplus/pull/999,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/999,this should fix #997,this should fix #997,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,999,2017-08-07T15:43:20Z,2017-08-07T17:57:48Z,2017-08-07T17:58:30Z,MERGED,True,27,20,4,https://github.com/zack-vii,Zck j traverser2.bat,1,[],https://github.com/MDSplus/mdsplus/pull/999,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/999#issuecomment-320712537,this should fix #997,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,999,2017-08-07T15:43:20Z,2017-08-07T17:57:48Z,2017-08-07T17:58:30Z,MERGED,True,27,20,4,https://github.com/zack-vii,Zck j traverser2.bat,1,[],https://github.com/MDSplus/mdsplus/pull/999,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/999#issuecomment-320735162,this should fix #997,could eventually also fix #995,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1000,2017-08-08T14:50:03Z,2017-08-08T17:28:55Z,2017-10-19T12:34:26Z,MERGED,True,44,46,1,https://github.com/zack-vii,Fix: internally cast usage to str before compare for performance,1,[],https://github.com/MDSplus/mdsplus/pull/1000,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1000,fixes also the missing return for TreeNodeArray.getUsage(),fixes also the missing return for TreeNodeArray.getUsage(),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1001,2017-08-09T14:19:18Z,2017-08-09T14:53:05Z,2017-08-09T14:53:09Z,MERGED,True,4,0,2,https://github.com/tfredian,Fix: Remove reference to libraw1394 in links where it is not needed.,1,[],https://github.com/MDSplus/mdsplus/pull/1001,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1001,"The check for libraw1394 did nested calls to the MDS_SEARCH_LIBS function
in configure and this caused -lraw1394 to be added to the LIBS environment
variable adding it to all links. This change fixes this problem.","The check for libraw1394 did nested calls to the MDS_SEARCH_LIBS function
in configure and this caused -lraw1394 to be added to the LIBS environment
variable adding it to all links. This change fixes this problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1002,2017-08-11T14:09:40Z,2017-08-11T15:01:55Z,2017-08-16T15:38:40Z,MERGED,True,12,0,2,https://github.com/tfredian,Build: Add --test_timeunit option to modify test timeouts,1,[],https://github.com/MDSplus/mdsplus/pull/1002,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1002,"The --test_timeunit option for the build.sh script can be used to adjust
the normal timeout duration used for tests. This option specifies a floating point
multiplier for the normal timeout. For example: --test_timeunit=.5 would reduce
the timeout on tests to half their normal time.","The --test_timeunit option for the build.sh script can be used to adjust
the normal timeout duration used for tests. This option specifies a floating point
multiplier for the normal timeout. For example: --test_timeunit=.5 would reduce
the timeout on tests to half their normal time.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1002,2017-08-11T14:09:40Z,2017-08-11T15:01:55Z,2017-08-16T15:38:40Z,MERGED,True,12,0,2,https://github.com/tfredian,Build: Add --test_timeunit option to modify test timeouts,1,[],https://github.com/MDSplus/mdsplus/pull/1002,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1002#issuecomment-321829863,"The --test_timeunit option for the build.sh script can be used to adjust
the normal timeout duration used for tests. This option specifies a floating point
multiplier for the normal timeout. For example: --test_timeunit=.5 would reduce
the timeout on tests to half their normal time.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1003,2017-08-11T14:54:47Z,2017-08-11T15:35:10Z,2018-06-04T20:29:16Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Fix: Logic to decide if environment variable / event vs tcpip backwards,1,[],https://github.com/MDSplus/mdsplus/pull/1003,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1003,"The code sets initialized to FALSE and it is only set to true in a block
that said if (initialized)  which would never get executed.
Changed so that the check is for !initialized.","The code sets initialized to FALSE and it is only set to true in a block
that said if (initialized)  which would never get executed.
Changed so that the check is for !initialized.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1004,2017-08-11T16:56:22Z,2017-08-16T00:02:09Z,2017-10-19T12:34:55Z,MERGED,True,87,14,2,https://github.com/zack-vii,Zck device help,3,[],https://github.com/MDSplus/mdsplus/pull/1004,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1004,added help and fullhelp_str and fullhelp() to devicenode which will print/return the help string or print some useful information of the device node. Will be useful to display in traverser,added help and fullhelp_str and fullhelp() to devicenode which will print/return the help string or print some useful information of the device node. Will be useful to display in traverser,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1004,2017-08-11T16:56:22Z,2017-08-16T00:02:09Z,2017-10-19T12:34:55Z,MERGED,True,87,14,2,https://github.com/zack-vii,Zck device help,3,[],https://github.com/MDSplus/mdsplus/pull/1004,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1004#issuecomment-321865130,added help and fullhelp_str and fullhelp() to devicenode which will print/return the help string or print some useful information of the device node. Will be useful to display in traverser,also fixes the .head field propagation in the device,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1004,2017-08-11T16:56:22Z,2017-08-16T00:02:09Z,2017-10-19T12:34:55Z,MERGED,True,87,14,2,https://github.com/zack-vii,Zck device help,3,[],https://github.com/MDSplus/mdsplus/pull/1004,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1004#issuecomment-321875581,added help and fullhelp_str and fullhelp() to devicenode which will print/return the help string or print some useful information of the device node. Will be useful to display in traverser,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1005,2017-08-14T12:56:07Z,2017-08-14T13:26:24Z,2017-08-16T15:38:39Z,MERGED,True,7,1,1,https://github.com/tfredian,Build: Add --test_timeunit to trigger options,1,[],https://github.com/MDSplus/mdsplus/pull/1005,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1005,"--test_timeunit was added to build options. This enables the use of
--test_timeunit when triggering builds.","--test_timeunit was added to build options. This enables the use of
--test_timeunit when triggering builds.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1006,2017-08-14T14:22:30Z,2017-08-14T14:22:43Z,2017-08-14T14:22:46Z,CLOSED,False,1,1,1,https://github.com/tfredian,Fix: New releases were being prevented when bad commit header found,1,[],https://github.com/MDSplus/mdsplus/pull/1006,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1006,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1007,2017-08-14T14:25:52Z,2017-08-14T17:10:38Z,2017-08-16T15:38:37Z,MERGED,True,1,2,2,https://github.com/tfredian,Fix: Bad commit header handling error,2,[],https://github.com/MDSplus/mdsplus/pull/1007,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1007,Bad commit message preventing new release.,Bad commit message preventing new release.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1007,2017-08-14T14:25:52Z,2017-08-14T17:10:38Z,2017-08-16T15:38:37Z,MERGED,True,1,2,2,https://github.com/tfredian,Fix: Bad commit header handling error,2,[],https://github.com/MDSplus/mdsplus/pull/1007,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1007#issuecomment-322239896,Bad commit message preventing new release.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1009,2017-08-16T00:11:42Z,2017-08-16T18:34:28Z,2017-10-19T12:32:54Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: tree staticmethodX - added missing self,1,[],https://github.com/MDSplus/mdsplus/pull/1009,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1009,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1010,2017-08-16T00:13:01Z,2018-11-07T15:47:20Z,2019-03-22T16:05:59Z,MERGED,True,499,717,4,https://github.com/zack-vii,Zck dimless segments,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1010,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1010,does not fix the issue yet,does not fix the issue yet,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1010,2017-08-16T00:13:01Z,2018-11-07T15:47:20Z,2019-03-22T16:05:59Z,MERGED,True,499,717,4,https://github.com/zack-vii,Zck dimless segments,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1010,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1010#issuecomment-432447855,does not fix the issue yet,"its a major clean up of xtreeshr but it enables the read of segments that have been stored with NULL dimensions.
It only uses start, end, and delta to select teh segments of interest but does not trim the first or last segment lacking the dimension. Instead it will return the concatenated array of all segments that cover the range start:end.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1010,2017-08-16T00:13:01Z,2018-11-07T15:47:20Z,2019-03-22T16:05:59Z,MERGED,True,499,717,4,https://github.com/zack-vii,Zck dimless segments,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1010,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1010#issuecomment-435590474,does not fix the issue yet,@GabrieleManduchi : could you please check this PR. Thanks.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1012,2017-08-16T13:07:21Z,2017-08-16T13:55:04Z,2017-08-16T15:38:36Z,MERGED,True,5,2,1,https://github.com/tfredian,Build: Use tmpdir for windows testing winebottle,1,[],https://github.com/MDSplus/mdsplus/pull/1012,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1012,"When tests are performed on the Windows platform a winebottle
was being created in the current directory for tests to be performed
using wine (windows emulation on linux). This winebottle has symlinks
to the root filesystem and this causes problems when doing builds
using jenkins. The jenkins build searches for various types of files
in the workspace directory tree and if the winebottle is in the
workspace directory these symlinks cause an infinite recursion. This
PR will cause docker builds for windows to create the winebottle in
a subdirectory of /tmp to avoid this recusion problem.","When tests are performed on the Windows platform a winebottle
was being created in the current directory for tests to be performed
using wine (windows emulation on linux). This winebottle has symlinks
to the root filesystem and this causes problems when doing builds
using jenkins. The jenkins build searches for various types of files
in the workspace directory tree and if the winebottle is in the
workspace directory these symlinks cause an infinite recursion. This
PR will cause docker builds for windows to create the winebottle in
a subdirectory of /tmp to avoid this recusion problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1013,2017-08-16T15:38:52Z,2017-08-16T16:08:02Z,2017-08-16T18:33:59Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Remove tar verbose output,2,[],https://github.com/MDSplus/mdsplus/pull/1013,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1013,"During make install the tar command used for copying all the various
source files from source to buildroot displayed all the files. This
PR removes that to reduce the contents of the build console logs.","During make install the tar command used for copying all the various
source files from source to buildroot displayed all the files. This
PR removes that to reduce the contents of the build console logs.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1014,2017-08-21T15:28:15Z,2017-08-21T16:04:56Z,2019-06-07T11:33:56Z,MERGED,True,12,14,1,https://github.com/AndreaRigoni,fix: TEST_TIMEUNIT was not actually checked and it was not working pr…,1,[],https://github.com/MDSplus/mdsplus/pull/1014,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1014,…operly.,…operly.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1015,2017-08-25T19:00:52Z,2017-08-26T13:32:26Z,2017-09-26T11:58:37Z,CLOSED,False,121,16,8,https://github.com/tfredian,Fix: Repair handling of Opaque objects in segments,4,[],https://github.com/MDSplus/mdsplus/pull/1015,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1015,"Some of the efficiency improvements of selecting segments based on
start, end and interval which were made quite a while ago had broken
the ability to store and retrieve Opaque objects as segments. Essentially
it is possible to use segments as a List allowing the list to grow by
adding more segments.
Tests were added to the segmentUnitTest for storing and retrieving
images stored as Opaque objects.","Some of the efficiency improvements of selecting segments based on
start, end and interval which were made quite a while ago had broken
the ability to store and retrieve Opaque objects as segments. Essentially
it is possible to use segments as a List allowing the list to grow by
adding more segments.
Tests were added to the segmentUnitTest for storing and retrieving
images stored as Opaque objects.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1015,2017-08-25T19:00:52Z,2017-08-26T13:32:26Z,2017-09-26T11:58:37Z,CLOSED,False,121,16,8,https://github.com/tfredian,Fix: Repair handling of Opaque objects in segments,4,[],https://github.com/MDSplus/mdsplus/pull/1015,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1015#issuecomment-325022429,"Some of the efficiency improvements of selecting segments based on
start, end and interval which were made quite a while ago had broken
the ability to store and retrieve Opaque objects as segments. Essentially
it is possible to use segments as a List allowing the list to grow by
adding more segments.
Tests were added to the segmentUnitTest for storing and retrieving
images stored as Opaque objects.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1015,2017-08-25T19:00:52Z,2017-08-26T13:32:26Z,2017-09-26T11:58:37Z,CLOSED,False,121,16,8,https://github.com/tfredian,Fix: Repair handling of Opaque objects in segments,4,[],https://github.com/MDSplus/mdsplus/pull/1015,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1015#issuecomment-325127880,"Some of the efficiency improvements of selecting segments based on
start, end and interval which were made quite a while ago had broken
the ability to store and retrieve Opaque objects as segments. Essentially
it is possible to use segments as a List allowing the list to grow by
adding more segments.
Tests were added to the segmentUnitTest for storing and retrieving
images stored as Opaque objects.",merged with #1017,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1016,2017-08-26T11:49:24Z,2017-08-26T11:58:14Z,2017-11-20T21:31:36Z,CLOSED,False,107,4,8,https://github.com/zack-vii,Fix: no need for else after return,4,[],https://github.com/MDSplus/mdsplus/pull/1016,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1016,"uses IS_OK(opstatus) instead of (opstatus & 1)
reduces the number of changed lines (for this you would need to rebase with -i and --autosquash)","uses IS_OK(opstatus) instead of (opstatus & 1)
reduces the number of changed lines (for this you would need to rebase with -i and --autosquash)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1017,2017-08-26T12:02:32Z,2017-08-26T13:32:07Z,2017-11-20T21:31:36Z,MERGED,True,107,4,8,https://github.com/zack-vii,Zck twf fix opaque objects,4,[],https://github.com/MDSplus/mdsplus/pull/1017,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1017,"just like #1015 but:

uses IS_OK(opstatus) instead of (opstatus & 1)
reduces the number of changed lines","just like #1015 but:

uses IS_OK(opstatus) instead of (opstatus & 1)
reduces the number of changed lines",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1019,2017-08-29T15:12:42Z,2017-08-29T18:43:22Z,2017-08-29T18:43:31Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: This commit fixes a problem with python handling of with_error d…,1,[],https://github.com/MDSplus/mdsplus/pull/1019,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1019,"…ata.
A typo in the compound.py python module specified the wrong data type
number for the WithError class. This prevented access of data stored
with an error value from python. This should fix this problem.","…ata.
A typo in the compound.py python module specified the wrong data type
number for the WithError class. This prevented access of data stored
with an error value from python. This should fix this problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1020,2017-08-30T17:31:51Z,2017-08-30T18:02:47Z,2017-08-30T18:02:58Z,MERGED,True,2,4,1,https://github.com/tfredian,Build: This fixes the git commit checker with new versions of awk,1,[],https://github.com/MDSplus/mdsplus/pull/1020,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1020,"In newer versions of awk only the END clause is executed if the
input stream to awk is empty.","In newer versions of awk only the END clause is executed if the
input stream to awk is empty.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1021,2017-09-01T09:38:18Z,2017-09-01T13:50:04Z,2017-09-01T13:50:04Z,MERGED,True,92,68,5,https://github.com/GabrieleManduchi,Fix jscope streaming,6,[],https://github.com/MDSplus/mdsplus/pull/1021,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1021,"Added a feature requested by several users, i.e. showing a sequence of images stored as gif or jpg where every image is stored as a single segment in a segmented node","Added a feature requested by several users, i.e. showing a sequence of images stored as gif or jpg where every image is stored as a single segment in a segmented node",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1021,2017-09-01T09:38:18Z,2017-09-01T13:50:04Z,2017-09-01T13:50:04Z,MERGED,True,92,68,5,https://github.com/GabrieleManduchi,Fix jscope streaming,6,[],https://github.com/MDSplus/mdsplus/pull/1021,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1021#issuecomment-326577756,"Added a feature requested by several users, i.e. showing a sequence of images stored as gif or jpg where every image is stored as a single segment in a segmented node",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1022,2017-09-05T09:25:09Z,2017-09-06T08:57:01Z,2018-06-04T20:29:13Z,MERGED,True,62,16,5,https://github.com/GabrieleManduchi,Fix jscope streaming,8,[],https://github.com/MDSplus/mdsplus/pull/1022,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1022,Fiz several bugs in streaming,Fiz several bugs in streaming,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1023,2017-09-06T09:05:28Z,2017-09-17T11:13:11Z,2017-09-17T11:13:16Z,MERGED,True,5,2,3,https://github.com/GabrieleManduchi,Gm fix javatraverser2 and mdsobjects cpp,3,[],https://github.com/MDSplus/mdsplus/pull/1023,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1023,"Solves the issue encountered whan building javatraverser2 after clean
Solves the incorrect default setting when TreeNode::getNode() raises an exception (i.e. node not found)","Solves the issue encountered whan building javatraverser2 after clean
Solves the incorrect default setting when TreeNode::getNode() raises an exception (i.e. node not found)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1024,2017-09-12T01:29:21Z,2017-09-17T12:22:25Z,2017-09-17T12:22:25Z,MERGED,True,249,223,6,https://github.com/zack-vii,Zck random py fixes,9,[],https://github.com/MDSplus/mdsplus/pull/1024,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1024,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1025,2017-09-12T08:50:15Z,2017-09-13T16:43:28Z,2017-09-13T16:43:28Z,MERGED,True,8,10,1,https://github.com/fmolon,Update jTraverser.template,1,[],https://github.com/MDSplus/mdsplus/pull/1025,https://github.com/fmolon,1,https://github.com/MDSplus/mdsplus/pull/1025,Fix: The jTraverser.template has been updated to the jScope fixes for finding lib dir,Fix: The jTraverser.template has been updated to the jScope fixes for finding lib dir,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1025,2017-09-12T08:50:15Z,2017-09-13T16:43:28Z,2017-09-13T16:43:28Z,MERGED,True,8,10,1,https://github.com/fmolon,Update jTraverser.template,1,[],https://github.com/MDSplus/mdsplus/pull/1025,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1025#issuecomment-329195370,Fix: The jTraverser.template has been updated to the jScope fixes for finding lib dir,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1026,2017-09-13T14:26:03Z,2017-09-13T15:28:25Z,2018-06-04T20:29:11Z,MERGED,True,3,0,1,https://github.com/joshStillerman,"Feature: Add username, date, and connection info to mdsip-ssh.log",1,[],https://github.com/MDSplus/mdsplus/pull/1026,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1026,"When a user connects to a server using the ssh protocol, the server
runs mdsip-ssh-server and directs stderr to ~/mdsip-ssh.log.
This change adds information about the connection to the file. There
does not appear to be a sample server script for windows, only a client
script, so this only applies to linux like platforms.
Incomming ssh connections to windows servers have not been tested or
implemented.","When a user connects to a server using the ssh protocol, the server
runs mdsip-ssh-server and directs stderr to ~/mdsip-ssh.log.
This change adds information about the connection to the file. There
does not appear to be a sample server script for windows, only a client
script, so this only applies to linux like platforms.
Incomming ssh connections to windows servers have not been tested or
implemented.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1026,2017-09-13T14:26:03Z,2017-09-13T15:28:25Z,2018-06-04T20:29:11Z,MERGED,True,3,0,1,https://github.com/joshStillerman,"Feature: Add username, date, and connection info to mdsip-ssh.log",1,[],https://github.com/MDSplus/mdsplus/pull/1026,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1026#issuecomment-329194403,"When a user connects to a server using the ssh protocol, the server
runs mdsip-ssh-server and directs stderr to ~/mdsip-ssh.log.
This change adds information about the connection to the file. There
does not appear to be a sample server script for windows, only a client
script, so this only applies to linux like platforms.
Incomming ssh connections to windows servers have not been tested or
implemented.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1028,2017-09-14T14:09:13Z,2017-09-14T19:28:17Z,2017-10-09T17:31:32Z,MERGED,True,2,2,2,https://github.com/joshStillerman,Fix:  windows mdsip-client-ssh.bat script invoke the user's bashrc on the host,4,[],https://github.com/MDSplus/mdsplus/pull/1028,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1028,"The provided windows mdsip-client-ssh.bat script that uses putty provided plink command
to invoke mdsip-server-ssh on the host computer, was not setting up the user's environment.
For systems where the MDSplus commands and scripts are not available before login, this is
required.","The provided windows mdsip-client-ssh.bat script that uses putty provided plink command
to invoke mdsip-server-ssh on the host computer, was not setting up the user's environment.
For systems where the MDSplus commands and scripts are not available before login, this is
required.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1028,2017-09-14T14:09:13Z,2017-09-14T19:28:17Z,2017-10-09T17:31:32Z,MERGED,True,2,2,2,https://github.com/joshStillerman,Fix:  windows mdsip-client-ssh.bat script invoke the user's bashrc on the host,4,[],https://github.com/MDSplus/mdsplus/pull/1028,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1028#issuecomment-329577288,"The provided windows mdsip-client-ssh.bat script that uses putty provided plink command
to invoke mdsip-server-ssh on the host computer, was not setting up the user's environment.
For systems where the MDSplus commands and scripts are not available before login, this is
required.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1029,2017-09-18T13:21:12Z,2017-09-18T13:38:51Z,2017-09-18T13:38:52Z,MERGED,True,268,238,19,https://github.com/fmolon,F4 e ofc 280,16,[],https://github.com/MDSplus/mdsplus/pull/1029,https://github.com/fmolon,1,https://github.com/MDSplus/mdsplus/pull/1029,bug fix: bug on radiometric frames streaming,bug fix: bug on radiometric frames streaming,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1029,2017-09-18T13:21:12Z,2017-09-18T13:38:51Z,2017-09-18T13:38:52Z,MERGED,True,268,238,19,https://github.com/fmolon,F4 e ofc 280,16,[],https://github.com/MDSplus/mdsplus/pull/1029,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1029#issuecomment-330218144,bug fix: bug on radiometric frames streaming,"This is an automated comment because the author of the PR is not a member of the MDSplus core development team. Can one of the core team members verify this patch and add a comment containing ""ok to test"" if the changes proposed are safe to test?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1030,2017-09-18T14:13:57Z,2017-09-18T14:47:15Z,2017-09-26T11:58:03Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Fix email address used to send bad commit message title,1,[],https://github.com/MDSplus/mdsplus/pull/1030,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1030,"The commit message title (first line) is used to determine the type of version
increment to use. This title syntax is checked and an email is sent to the author of the commit if the commit message does not follow our standard format. This fix is to use the email of the author of the commit not the account running the build job.","The commit message title (first line) is used to determine the type of version
increment to use. This title syntax is checked and an email is sent to the author of the commit if the commit message does not follow our standard format. This fix is to use the email of the author of the commit not the account running the build job.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1031,2017-09-18T15:36:42Z,2017-09-25T21:03:52Z,2017-09-26T11:58:01Z,MERGED,True,24,20,14,https://github.com/tfredian,Feature: Reduce library exports to improve image activation performance,7,[],https://github.com/MDSplus/mdsplus/pull/1031,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1031,"The MDSplus libraries contain numerous routines which are only used locally in that library. Currently all entry points are being exported by default and a large percentage of these symbols are not used externally and can be removed from the export list. This PR will only export symbols that are needed by other libraries, executables or those referenced by languages such as idl, python, java, matlab or tdi. Reducing the number of exports in the libraries should make program startup and dynamic lookup of routines much more efficient.","The MDSplus libraries contain numerous routines which are only used locally in that library. Currently all entry points are being exported by default and a large percentage of these symbols are not used externally and can be removed from the export list. This PR will only export symbols that are needed by other libraries, executables or those referenced by languages such as idl, python, java, matlab or tdi. Reducing the number of exports in the libraries should make program startup and dynamic lookup of routines much more efficient.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1034,2017-09-19T18:48:37Z,2017-09-19T20:36:32Z,2018-06-04T20:29:08Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,FIX: removed repetition in signal name for legend,1,[],https://github.com/MDSplus/mdsplus/pull/1034,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1034,Removed repetition in jScope legend,Removed repetition in jScope legend,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1034,2017-09-19T18:48:37Z,2017-09-19T20:36:32Z,2018-06-04T20:29:08Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,FIX: removed repetition in signal name for legend,1,[],https://github.com/MDSplus/mdsplus/pull/1034,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1034#issuecomment-330634995,Removed repetition in jScope legend,"This is an automated comment because the author of the PR is not a member of the MDSplus core development team. Can one of the core team members verify this patch and add a comment containing ""ok-to-test"" (without the hyphens) to the PR if it appears legitimate.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1034,2017-09-19T18:48:37Z,2017-09-19T20:36:32Z,2018-06-04T20:29:08Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,FIX: removed repetition in signal name for legend,1,[],https://github.com/MDSplus/mdsplus/pull/1034,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1034#issuecomment-330635930,Removed repetition in jScope legend,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1035,2017-09-20T13:07:57Z,2017-09-25T15:05:04Z,2017-10-19T12:32:59Z,MERGED,True,29,5,2,https://github.com/zack-vii,Feature: actmon expt argument and fullpath resolution,2,[],https://github.com/MDSplus/mdsplus/pull/1035,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1035,"actmon accepts -expt argument that will set the main experiment which allown is able to reset the errorlog on build
ServerQAction will try to resolve the fullpath from the model tree if the shot file cannot be opened.

This improves overall the output of the actionmonitor when operatin with distributed dispatchers and subtrees (W7X)","actmon accepts -expt argument that will set the main experiment which allown is able to reset the errorlog on build
ServerQAction will try to resolve the fullpath from the model tree if the shot file cannot be opened.

This improves overall the output of the actionmonitor when operatin with distributed dispatchers and subtrees (W7X)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1035,2017-09-20T13:07:57Z,2017-09-25T15:05:04Z,2017-10-19T12:32:59Z,MERGED,True,29,5,2,https://github.com/zack-vii,Feature: actmon expt argument and fullpath resolution,2,[],https://github.com/MDSplus/mdsplus/pull/1035,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1035#issuecomment-331120199,"actmon accepts -expt argument that will set the main experiment which allown is able to reset the errorlog on build
ServerQAction will try to resolve the fullpath from the model tree if the shot file cannot be opened.

This improves overall the output of the actionmonitor when operatin with distributed dispatchers and subtrees (W7X)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1035,2017-09-20T13:07:57Z,2017-09-25T15:05:04Z,2017-10-19T12:32:59Z,MERGED,True,29,5,2,https://github.com/zack-vii,Feature: actmon expt argument and fullpath resolution,2,[],https://github.com/MDSplus/mdsplus/pull/1035,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1035#issuecomment-331155675,"actmon accepts -expt argument that will set the main experiment which allown is able to reset the errorlog on build
ServerQAction will try to resolve the fullpath from the model tree if the shot file cannot be opened.

This improves overall the output of the actionmonitor when operatin with distributed dispatchers and subtrees (W7X)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1035,2017-09-20T13:07:57Z,2017-09-25T15:05:04Z,2017-10-19T12:32:59Z,MERGED,True,29,5,2,https://github.com/zack-vii,Feature: actmon expt argument and fullpath resolution,2,[],https://github.com/MDSplus/mdsplus/pull/1035,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1035#issuecomment-331157437,"actmon accepts -expt argument that will set the main experiment which allown is able to reset the errorlog on build
ServerQAction will try to resolve the fullpath from the model tree if the shot file cannot be opened.

This improves overall the output of the actionmonitor when operatin with distributed dispatchers and subtrees (W7X)",jenkins cannot test all stations because a few ones are down. running them asynchronous results in a success though,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1038,2017-09-23T03:43:07Z,2017-09-25T14:32:14Z,2017-09-30T05:59:27Z,MERGED,True,1,1,1,https://github.com/kgerickson,FIX: resource leak during throw,1,[],https://github.com/MDSplus/mdsplus/pull/1038,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/1038,bufR is only closed if there is no exception. Move close() before the exception check so that it is always closed even in the case of a throw. This removes a warning highlighting the resource leak.,bufR is only closed if there is no exception. Move close() before the exception check so that it is always closed even in the case of a throw. This removes a warning highlighting the resource leak.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1038,2017-09-23T03:43:07Z,2017-09-25T14:32:14Z,2017-09-30T05:59:27Z,MERGED,True,1,1,1,https://github.com/kgerickson,FIX: resource leak during throw,1,[],https://github.com/MDSplus/mdsplus/pull/1038,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1038#issuecomment-331863199,bufR is only closed if there is no exception. Move close() before the exception check so that it is always closed even in the case of a throw. This removes a warning highlighting the resource leak.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1038,2017-09-23T03:43:07Z,2017-09-25T14:32:14Z,2017-09-30T05:59:27Z,MERGED,True,1,1,1,https://github.com/kgerickson,FIX: resource leak during throw,1,[],https://github.com/MDSplus/mdsplus/pull/1038,https://github.com/kgerickson,3,https://github.com/MDSplus/mdsplus/pull/1038#issuecomment-331863918,bufR is only closed if there is no exception. Move close() before the exception check so that it is always closed even in the case of a throw. This removes a warning highlighting the resource leak.,"How?
…
On Mon, Sep 25, 2017 at 8:11 AM, Tom Fredian ***@***.***> wrote:
 retest this please

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1038 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ANfh-o7YMDlDc21hlr8VX1BQ9CyHHfwvks5sl5iIgaJpZM4PhbhB>
 .",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1038,2017-09-23T03:43:07Z,2017-09-25T14:32:14Z,2017-09-30T05:59:27Z,MERGED,True,1,1,1,https://github.com/kgerickson,FIX: resource leak during throw,1,[],https://github.com/MDSplus/mdsplus/pull/1038,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1038#issuecomment-331865732,bufR is only closed if there is no exception. Move close() before the exception check so that it is always closed even in the case of a throw. This removes a warning highlighting the resource leak.,as i mentioned on thursday. the jenkins ws 109 114 and 117 are still down and apparently dedicated to the the tests in question,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1038,2017-09-23T03:43:07Z,2017-09-25T14:32:14Z,2017-09-30T05:59:27Z,MERGED,True,1,1,1,https://github.com/kgerickson,FIX: resource leak during throw,1,[],https://github.com/MDSplus/mdsplus/pull/1038,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1038#issuecomment-331888817,bufR is only closed if there is no exception. Move close() before the exception check so that it is always closed even in the case of a throw. This removes a warning highlighting the resource leak.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1041,2017-09-25T19:04:09Z,2017-09-25T21:05:06Z,2017-10-09T17:31:30Z,CLOSED,False,44743,1,1858,https://github.com/joshStillerman,Packaging: add MIT License to most source files,1,[],https://github.com/MDSplus/mdsplus/pull/1041,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1041,"At the developer's meeting 9/2017 it was decided that we should
include the MIT license in most of the source files.","At the developer's meeting 9/2017 it was decided that we should
include the MIT license in most of the source files.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1042,2017-09-26T08:37:54Z,2017-09-26T09:41:21Z,2017-09-26T09:41:21Z,MERGED,True,77,41,2,https://github.com/GabrieleManduchi,FIX:MdsStreamingDataProvider,1,[],https://github.com/MDSplus/mdsplus/pull/1042,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1042,Check for nonnull returned arrays in JNI,Check for nonnull returned arrays in JNI,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1043,2017-09-26T10:37:08Z,2017-09-26T11:57:21Z,2017-09-26T11:57:31Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,FIX:MdsStreamingDataProvider,1,[],https://github.com/MDSplus/mdsplus/pull/1043,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1043,Forgotten blank in jScope template,Forgotten blank in jScope template,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1044,2017-09-26T12:28:03Z,2017-09-26T13:30:35Z,2017-11-20T17:16:41Z,MERGED,True,4,4,2,https://github.com/tfredian,Fix: Remove compiler warnings,1,[],https://github.com/MDSplus/mdsplus/pull/1044,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1044,Remove a few more compiler warnings,Remove a few more compiler warnings,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1045,2017-09-26T14:19:51Z,2017-09-26T18:07:05Z,2017-09-26T18:07:16Z,MERGED,True,20728,11,859,https://github.com/joshStillerman,Fix: Add MIT license to source files,4,[],https://github.com/MDSplus/mdsplus/pull/1045,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1045,"As discussed in developer's meeting, adding the MIT license to
most source files.
We should look into adding License / copywrite information to
documentation files also.","As discussed in developer's meeting, adding the MIT license to
most source files.
We should look into adding License / copywrite information to
documentation files also.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1046,2017-09-26T19:04:17Z,2017-09-26T20:08:50Z,2017-09-26T20:09:00Z,MERGED,True,1,0,1,https://github.com/tfredian,Fix: repair bug in routine used to map cts setting files,1,[],https://github.com/MDSplus/mdsplus/pull/1046,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1046,"In removing one of the compiler warnings about potential undefined behavior
a needed break statement in a case clause was omitted. The change fixed the
undefined behavior by making it always fail which was not the intent!","In removing one of the compiler warnings about potential undefined behavior
a needed break statement in a case clause was omitted. The change fixed the
undefined behavior by making it always fail which was not the intent!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1047,2017-09-27T14:35:34Z,2017-09-28T11:58:07Z,2017-09-28T11:58:22Z,MERGED,True,37,31,12,https://github.com/GabrieleManduchi,Gm fix connection timeout,4,[],https://github.com/MDSplus/mdsplus/pull/1047,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1047,"Fix timeout parameter in GetAnswerInfoTS(). The argument was added but not reported outside mdstcpip. Therefore a random value was passed as timeout in java and C++ Connection objects. This is likely the cause for random failures in Connection tests during build.
A timeout in server side streaming management (used by jScope MdsStreamingDataProvider) has been also added to  avoid ghost mdsip processes hanging on a condition that will never be set.","Fix timeout parameter in GetAnswerInfoTS(). The argument was added but not reported outside mdstcpip. Therefore a random value was passed as timeout in java and C++ Connection objects. This is likely the cause for random failures in Connection tests during build.
A timeout in server side streaming management (used by jScope MdsStreamingDataProvider) has been also added to  avoid ghost mdsip processes hanging on a condition that will never be set.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1048,2017-09-27T21:22:27Z,2017-10-26T18:16:10Z,2017-10-26T18:16:17Z,MERGED,True,342,925,120,https://github.com/tfredian,Feature: Move pydevices to /usr/local/mdsplus/pydevices -Do not merge yet,12,[],https://github.com/MDSplus/mdsplus/pull/1048,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1048,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1048,2017-09-27T21:22:27Z,2017-10-26T18:16:10Z,2017-10-26T18:16:17Z,MERGED,True,342,925,120,https://github.com/tfredian,Feature: Move pydevices to /usr/local/mdsplus/pydevices -Do not merge yet,12,[],https://github.com/MDSplus/mdsplus/pull/1048,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1048#issuecomment-337905294,,"It should still support devices implemented by installed modules but it is questionable why one would still package devices that way. The MitDevices, RfxDevices and W7xDevices will no longer be installed as site-packages and instead are moved to $MDSPLUS_DIR/pydevices/xxxDevices and referenced via the $MDS_PYDEVICE_PATH method.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1048,2017-09-27T21:22:27Z,2017-10-26T18:16:10Z,2017-10-26T18:16:17Z,MERGED,True,342,925,120,https://github.com/tfredian,Feature: Move pydevices to /usr/local/mdsplus/pydevices -Do not merge yet,12,[],https://github.com/MDSplus/mdsplus/pull/1048,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1048#issuecomment-339673137,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1049,2017-09-28T12:25:35Z,2017-09-28T16:01:56Z,2017-09-28T16:09:44Z,MERGED,True,1,0,1,https://github.com/tfredian,Fix: repair bug in routine used to map cts setting files (#1046),1,[],https://github.com/MDSplus/mdsplus/pull/1049,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1049,"In removing one of the compiler warnings about potential undefined behavior
a needed break statement in a case clause was omitted. The change fixed the
undefined behavior by making it always fail which was not the intent!","In removing one of the compiler warnings about potential undefined behavior
a needed break statement in a case clause was omitted. The change fixed the
undefined behavior by making it always fail which was not the intent!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1049,2017-09-28T12:25:35Z,2017-09-28T16:01:56Z,2017-09-28T16:09:44Z,MERGED,True,1,0,1,https://github.com/tfredian,Fix: repair bug in routine used to map cts setting files (#1046),1,[],https://github.com/MDSplus/mdsplus/pull/1049,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1049#issuecomment-332869306,"In removing one of the compiler warnings about potential undefined behavior
a needed break statement in a case clause was omitted. The change fixed the
undefined behavior by making it always fail which was not the intent!",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1050,2017-09-28T15:31:29Z,2017-09-28T16:46:33Z,2017-09-28T16:46:35Z,MERGED,True,4,3,1,https://github.com/tfredian,Fix: Build new release even with bad commit message,1,[],https://github.com/MDSplus/mdsplus/pull/1050,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1050,"A bad commit message was preventing a release build even if there
were additional proper commit messages indicating the type of version
increase. This fix should enable a release build if there are any proper
commit messages indicating a new releas should be created.","A bad commit message was preventing a release build even if there
were additional proper commit messages indicating the type of version
increase. This fix should enable a release build if there are any proper
commit messages indicating a new releas should be created.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1051,2017-09-28T16:48:41Z,2017-09-28T17:45:59Z,2017-11-20T17:16:31Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,FIX: Unfreeze waveform in all same x scale,2,[],https://github.com/MDSplus/mdsplus/pull/1051,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1051,When selecting all sema X scale Auto Y the waveforms were wrongly freezed,When selecting all sema X scale Auto Y the waveforms were wrongly freezed,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1052,2017-09-28T18:34:32Z,2017-10-02T14:10:52Z,2017-10-02T14:10:55Z,CLOSED,False,4,7,1,https://github.com/tfredian,Fix: Repair a bug in the mdsip timeout handling,3,[],https://github.com/MDSplus/mdsplus/pull/1052,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1052,"The existing code called setsockopt with a 0 for the option
value when attempting to clear the socket timeout but that does
not work and setsockopt returns -1 and EINVAL for error so the
timeout does not get cleared. To clear the timeout you have to
send a timeout value (sec=0,usec=0) for the option value instead.","The existing code called setsockopt with a 0 for the option
value when attempting to clear the socket timeout but that does
not work and setsockopt returns -1 and EINVAL for error so the
timeout does not get cleared. To clear the timeout you have to
send a timeout value (sec=0,usec=0) for the option value instead.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1053,2017-09-29T08:28:54Z,2017-09-29T11:28:59Z,2018-06-04T20:29:06Z,MERGED,True,175,19,1,https://github.com/GabrieleManduchi,Gm epics new archiver,3,[],https://github.com/MDSplus/mdsplus/pull/1053,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1053,"Improved version of EPICS MDSplus channel archiver.
Does not affect ant other file except epics/archiver/ChannelArchiver.java","Improved version of EPICS MDSplus channel archiver.
Does not affect ant other file except epics/archiver/ChannelArchiver.java",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1054,2017-09-29T09:53:46Z,2017-10-03T02:49:29Z,2017-10-03T02:49:29Z,CLOSED,False,109,84,19,https://github.com/zack-vii,Zck fix mdsip timeout,2,[],https://github.com/MDSplus/mdsplus/pull/1054,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1054,"Added recv_to which uses poll instead of the io_settimeout implementation.
Attempt to fix the issue addressed in #1047 by adding GetAnswerInfoTO instead of replacing GetAnswerInfoTS to avoid conflicts. therefore reverts some changes in #1047","Added recv_to which uses poll instead of the io_settimeout implementation.
Attempt to fix the issue addressed in #1047 by adding GetAnswerInfoTO instead of replacing GetAnswerInfoTS to avoid conflicts. therefore reverts some changes in #1047",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1054,2017-09-29T09:53:46Z,2017-10-03T02:49:29Z,2017-10-03T02:49:29Z,CLOSED,False,109,84,19,https://github.com/zack-vii,Zck fix mdsip timeout,2,[],https://github.com/MDSplus/mdsplus/pull/1054,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1054#issuecomment-333106776,"Added recv_to which uses poll instead of the io_settimeout implementation.
Attempt to fix the issue addressed in #1047 by adding GetAnswerInfoTO instead of replacing GetAnswerInfoTS to avoid conflicts. therefore reverts some changes in #1047",@GabrieleManduchi : could you check if i reverted all changes you made to meet the extra argument of GetAnswerInfoTS .. is there any in java/LV that i missed. it should be the usual GetAnswerInfoTS for without timeout and GetAnswerInfoTO if timeout is desired. timeout is now in milliseconds.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1056,2017-09-30T22:44:10Z,2017-10-02T16:38:47Z,2017-10-02T16:38:47Z,MERGED,True,201,125,20,https://github.com/zack-vii,Zck fix connection,5,[],https://github.com/MDSplus/mdsplus/pull/1056,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1056,"when connecting to an action_monitor mdsip using actmon on an bash for windows session the mdsip process hosted by a debian system locked up due to an circular relation (c == c->next) of the ConnectionList. This could only happen during new and disconnect. Could not check yet if this solves the problem but the adjustments help to further protects the list. eventually the io->disconnect need to be protected via reentrant mutex but not sure. I have a reproducible setup in my office. i will test it once i am back.
includes #1054","when connecting to an action_monitor mdsip using actmon on an bash for windows session the mdsip process hosted by a debian system locked up due to an circular relation (c == c->next) of the ConnectionList. This could only happen during new and disconnect. Could not check yet if this solves the problem but the adjustments help to further protects the list. eventually the io->disconnect need to be protected via reentrant mutex but not sure. I have a reproducible setup in my office. i will test it once i am back.
includes #1054",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1056,2017-09-30T22:44:10Z,2017-10-02T16:38:47Z,2017-10-02T16:38:47Z,MERGED,True,201,125,20,https://github.com/zack-vii,Zck fix connection,5,[],https://github.com/MDSplus/mdsplus/pull/1056,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1056#issuecomment-333340859,"when connecting to an action_monitor mdsip using actmon on an bash for windows session the mdsip process hosted by a debian system locked up due to an circular relation (c == c->next) of the ConnectionList. This could only happen during new and disconnect. Could not check yet if this solves the problem but the adjustments help to further protects the list. eventually the io->disconnect need to be protected via reentrant mutex but not sure. I have a reproducible setup in my office. i will test it once i am back.
includes #1054",actually the field next is accessible through Connection so it could be any method actually,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1056,2017-09-30T22:44:10Z,2017-10-02T16:38:47Z,2017-10-02T16:38:47Z,MERGED,True,201,125,20,https://github.com/zack-vii,Zck fix connection,5,[],https://github.com/MDSplus/mdsplus/pull/1056,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1056#issuecomment-333574875,"when connecting to an action_monitor mdsip using actmon on an bash for windows session the mdsip process hosted by a debian system locked up due to an circular relation (c == c->next) of the ConnectionList. This could only happen during new and disconnect. Could not check yet if this solves the problem but the adjustments help to further protects the list. eventually the io->disconnect need to be protected via reentrant mutex but not sure. I have a reproducible setup in my office. i will test it once i am back.
includes #1054",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1057,2017-10-01T19:15:01Z,2017-10-04T19:21:38Z,2017-10-15T16:57:12Z,MERGED,True,578,824,74,https://github.com/kgerickson,Jscope warning cleanup,5,[],https://github.com/MDSplus/mdsplus/pull/1057,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/1057,Remove many instances of benign but valid warnings,Remove many instances of benign but valid warnings,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1058,2017-10-01T20:10:04Z,2017-10-15T18:07:43Z,2017-10-15T18:07:48Z,MERGED,True,336,189,35,https://github.com/kgerickson,FIX: Organize imports,3,[],https://github.com/MDSplus/mdsplus/pull/1058,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/1058,Remove all unused variables and organize imports based on default eclipse settings,Remove all unused variables and organize imports based on default eclipse settings,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1059,2017-10-02T13:33:40Z,2017-10-02T14:03:54Z,2017-10-09T17:31:29Z,MERGED,True,4,4,4,https://github.com/joshStillerman,Fix: license must be after <module> tag,1,[],https://github.com/MDSplus/mdsplus/pull/1059,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1059,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1060,2017-10-02T13:36:20Z,2017-10-09T15:35:15Z,2017-10-09T15:35:15Z,MERGED,True,193,175,18,https://github.com/zack-vii,Bug: TimeContext with negative timestamps (issue #1032),9,[],https://github.com/MDSplus/mdsplus/pull/1060,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1060,"this changes all Q into c types conversions into int_64 rather than uint_64
fixes TdiEq to properly compare Q and O types and should fix issue  #1032
SetTImeContext did not work with nodes that contained negative timestamps. (c.f, segmentsUnitTest)","this changes all Q into c types conversions into int_64 rather than uint_64
fixes TdiEq to properly compare Q and O types and should fix issue  #1032
SetTImeContext did not work with nodes that contained negative timestamps. (c.f, segmentsUnitTest)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1060,2017-10-02T13:36:20Z,2017-10-09T15:35:15Z,2017-10-09T15:35:15Z,MERGED,True,193,175,18,https://github.com/zack-vii,Bug: TimeContext with negative timestamps (issue #1032),9,[],https://github.com/MDSplus/mdsplus/pull/1060,https://github.com/kgerickson,2,https://github.com/MDSplus/mdsplus/pull/1060#issuecomment-333742796,"this changes all Q into c types conversions into int_64 rather than uint_64
fixes TdiEq to properly compare Q and O types and should fix issue  #1032
SetTImeContext did not work with nodes that contained negative timestamps. (c.f, segmentsUnitTest)","Correct me if I'm wrong, but isn't this an ABI break across pretty much every library?
There are a lot of changes here that are unrelated to your very sparse commit message
Your commit message says nothing about what you are changing and why. It's tagged as a Bug, but doesn't mention the issue in the commit message.  Mentioning it in the conversation attached to the pull request doesn't help with looking through git log.

EDIT: Didn't mean to close the pull request.. it's strange that the default submit action on a comment is to close the request instead of just adding a comment....",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1060,2017-10-02T13:36:20Z,2017-10-09T15:35:15Z,2017-10-09T15:35:15Z,MERGED,True,193,175,18,https://github.com/zack-vii,Bug: TimeContext with negative timestamps (issue #1032),9,[],https://github.com/MDSplus/mdsplus/pull/1060,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1060#issuecomment-334965080,"this changes all Q into c types conversions into int_64 rather than uint_64
fixes TdiEq to properly compare Q and O types and should fix issue  #1032
SetTImeContext did not work with nodes that contained negative timestamps. (c.f, segmentsUnitTest)","if someone has some spare time, could you revise this. would be great if we could use it next week.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1060,2017-10-02T13:36:20Z,2017-10-09T15:35:15Z,2017-10-09T15:35:15Z,MERGED,True,193,175,18,https://github.com/zack-vii,Bug: TimeContext with negative timestamps (issue #1032),9,[],https://github.com/MDSplus/mdsplus/pull/1060,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1060#issuecomment-335040401,"this changes all Q into c types conversions into int_64 rather than uint_64
fixes TdiEq to properly compare Q and O types and should fix issue  #1032
SetTImeContext did not work with nodes that contained negative timestamps. (c.f, segmentsUnitTest)","HM, well these changes in mdsshr etc. are all meant to make timestamps uniformly treated as int64_t rather than uin64_t. these would be Wconversion warnings otherwise if we would have turned it on. I was not judging if or if not these methods are used at all. but if they are used they should at least be consistent with the way timestamps are treated elsewhere. e.g. you would want to convert -1Q to -1D0 rather than this awful large number. the changes are not that big of a break actually. since the data size (64bit) remains the same and library call would work either way.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1060,2017-10-02T13:36:20Z,2017-10-09T15:35:15Z,2017-10-09T15:35:15Z,MERGED,True,193,175,18,https://github.com/zack-vii,Bug: TimeContext with negative timestamps (issue #1032),9,[],https://github.com/MDSplus/mdsplus/pull/1060,https://github.com/kgerickson,5,https://github.com/MDSplus/mdsplus/pull/1060#issuecomment-335051002,"this changes all Q into c types conversions into int_64 rather than uint_64
fixes TdiEq to properly compare Q and O types and should fix issue  #1032
SetTImeContext did not work with nodes that contained negative timestamps. (c.f, segmentsUnitTest)","Whether or not it's correct is a separate issue from it being a clear ABI
break.  This doesn't have anything to do with how often the functions are
called, this has to do with claiming binary library compatibility when
you've clearly broken it.  This is aside from the obvious API change.  You
can't do this change without addressing the compatibility breakages.  This
is EXACTLY the kind of backwards-incompatibilities that we must avoid.
…
On Sun, Oct 8, 2017 at 5:36 PM, zack-vii ***@***.***> wrote:
 HM, well these changes in mdsshr etc. are all meant to make timestamps
 uniformly treated as int64_t rather than uin64_t. these would be
 Wconversion warnings otherwise if we would have turned it on. I was not
 judging if or if not these methods are used at all. but if they are used
 they should b#at least be consistent with the way timestamps are treated
 elsewhere. e.g. you would want to convert -1Q to -1D0 rather than this
 awful large number. the changes are not that big of a break actually. are
 the data size (64bit) remains the same and library call would work either
 way.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1060,2017-10-02T13:36:20Z,2017-10-09T15:35:15Z,2017-10-09T15:35:15Z,MERGED,True,193,175,18,https://github.com/zack-vii,Bug: TimeContext with negative timestamps (issue #1032),9,[],https://github.com/MDSplus/mdsplus/pull/1060,https://github.com/kgerickson,6,https://github.com/MDSplus/mdsplus/pull/1060#issuecomment-335051108,"this changes all Q into c types conversions into int_64 rather than uint_64
fixes TdiEq to properly compare Q and O types and should fix issue  #1032
SetTImeContext did not work with nodes that contained negative timestamps. (c.f, segmentsUnitTest)",Please revert this merge until there is proper handling of the API and ABI breakages that this introduced.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1060,2017-10-02T13:36:20Z,2017-10-09T15:35:15Z,2017-10-09T15:35:15Z,MERGED,True,193,175,18,https://github.com/zack-vii,Bug: TimeContext with negative timestamps (issue #1032),9,[],https://github.com/MDSplus/mdsplus/pull/1060,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1060#issuecomment-335177944,"this changes all Q into c types conversions into int_64 rather than uint_64
fixes TdiEq to properly compare Q and O types and should fix issue  #1032
SetTImeContext did not work with nodes that contained negative timestamps. (c.f, segmentsUnitTest)","@kgerickson: i resorted the changes and made more detailed commit messages. Again, I doubt that the changes in the ABI would break any existing code as it is unlikely that anyone would have used uint64 _t's full scale. However this introduces the possibility to store signed timestamps and use them with full support of mdsplus capabilities. treating timestamps uniformly throughout all mdsplus libraries makes perfect sense, don't you agree. at some point if we activate Wconversion warnings, we will have to address the ABI break anyway.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1061,2017-10-02T18:28:27Z,2017-10-02T20:46:48Z,2017-10-02T20:46:54Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Allow gdb use inside docker builds,1,[],https://github.com/MDSplus/mdsplus/pull/1061,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1061,"When a build hangs it may be useful to run gdb on the process inside
the docker container to determine the cause of the hang. The SYS_PTRACE
capability must be enabled before you can use gdb inside the container.
To gdb the process you need to use ""docker exec"" to run gdb in the container.","When a build hangs it may be useful to run gdb on the process inside
the docker container to determine the cause of the hang. The SYS_PTRACE
capability must be enabled before you can use gdb inside the container.
To gdb the process you need to use ""docker exec"" to run gdb in the container.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1062,2017-10-03T06:39:37Z,2017-10-06T06:36:42Z,2017-10-06T06:36:42Z,MERGED,True,466,314,13,https://github.com/fmolon,F4E-OFC-280,2,[],https://github.com/MDSplus/mdsplus/pull/1062,https://github.com/fmolon,1,https://github.com/MDSplus/mdsplus/pull/1062,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1062,2017-10-03T06:39:37Z,2017-10-06T06:36:42Z,2017-10-06T06:36:42Z,MERGED,True,466,314,13,https://github.com/fmolon,F4E-OFC-280,2,[],https://github.com/MDSplus/mdsplus/pull/1062,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1062#issuecomment-333753597,,"This is an automated comment because the author of the PR is not a member of the MDSplus core development team. Can one of the core team members verify this patch and add a comment containing ""ok-to-test"" (without the hyphens) to the PR if it appears legitimate.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1062,2017-10-03T06:39:37Z,2017-10-06T06:36:42Z,2017-10-06T06:36:42Z,MERGED,True,466,314,13,https://github.com/fmolon,F4E-OFC-280,2,[],https://github.com/MDSplus/mdsplus/pull/1062,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1062#issuecomment-334076037,,"ok-to-test
The changes in the code address only files in device_support. They will be eventually merged in alpha once the tests on the involved hardware have been carried out",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1062,2017-10-03T06:39:37Z,2017-10-06T06:36:42Z,2017-10-06T06:36:42Z,MERGED,True,466,314,13,https://github.com/fmolon,F4E-OFC-280,2,[],https://github.com/MDSplus/mdsplus/pull/1062,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1062#issuecomment-334369852,,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1063,2017-10-03T15:51:16Z,2017-10-03T18:11:42Z,2018-03-23T10:03:58Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,FIX: GetManyExecute,1,[],https://github.com/MDSplus/mdsplus/pull/1063,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1063,"Routime GetManyExecute of MdsObjectsCppShr must be globally visible because it is accessed from the Java MdsObjects interface, i.e. from library JavaMds.","Routime GetManyExecute of MdsObjectsCppShr must be globally visible because it is accessed from the Java MdsObjects interface, i.e. from library JavaMds.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1065,2017-10-04T14:32:35Z,2017-10-05T18:21:24Z,2017-11-20T17:16:19Z,MERGED,True,101,21,5,https://github.com/tfredian,Fix: Repair tree context handling in MDSplus python,5,[],https://github.com/MDSplus/mdsplus/pull/1065,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1065,This is to fix #1064,This is to fix #1064,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1065,2017-10-04T14:32:35Z,2017-10-05T18:21:24Z,2017-11-20T17:16:19Z,MERGED,True,101,21,5,https://github.com/tfredian,Fix: Repair tree context handling in MDSplus python,5,[],https://github.com/MDSplus/mdsplus/pull/1065,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1065#issuecomment-334261031,This is to fix #1064,I will leave this to Timo to look at.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1065,2017-10-04T14:32:35Z,2017-10-05T18:21:24Z,2017-11-20T17:16:19Z,MERGED,True,101,21,5,https://github.com/tfredian,Fix: Repair tree context handling in MDSplus python,5,[],https://github.com/MDSplus/mdsplus/pull/1065,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1065#issuecomment-334517954,This is to fix #1064,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1065,2017-10-04T14:32:35Z,2017-10-05T18:21:24Z,2017-11-20T17:16:19Z,MERGED,True,101,21,5,https://github.com/tfredian,Fix: Repair tree context handling in MDSplus python,5,[],https://github.com/MDSplus/mdsplus/pull/1065,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1065#issuecomment-334528243,This is to fix #1064,retest this please    again intermittent failures with MdsConnectionTest,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1065,2017-10-04T14:32:35Z,2017-10-05T18:21:24Z,2017-11-20T17:16:19Z,MERGED,True,101,21,5,https://github.com/tfredian,Fix: Repair tree context handling in MDSplus python,5,[],https://github.com/MDSplus/mdsplus/pull/1065,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1065#issuecomment-334536432,This is to fix #1064,retest this please failures might be caused by problem with a jenkins slave.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1066,2017-10-04T17:19:44Z,2017-10-05T12:51:35Z,2017-10-19T12:33:00Z,MERGED,True,22,15,4,https://github.com/zack-vii,Fix: fixed get and added tests; TODO: fix GetMany and PutMany,2,[],https://github.com/MDSplus/mdsplus/pull/1066,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1066,"Get/PutMany if not tested and lost functionality at some point.. seems like GetManyExecute does not work or is not interfaced correctly   (serialized List/Dict/?)
get was not tested and is now
put should be tested at some point","Get/PutMany if not tested and lost functionality at some point.. seems like GetManyExecute does not work or is not interfaced correctly   (serialized List/Dict/?)
get was not tested and is now
put should be tested at some point",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1066,2017-10-04T17:19:44Z,2017-10-05T12:51:35Z,2017-10-19T12:33:00Z,MERGED,True,22,15,4,https://github.com/zack-vii,Fix: fixed get and added tests; TODO: fix GetMany and PutMany,2,[],https://github.com/MDSplus/mdsplus/pull/1066,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1066#issuecomment-334309122,"Get/PutMany if not tested and lost functionality at some point.. seems like GetManyExecute does not work or is not interfaced correctly   (serialized List/Dict/?)
get was not tested and is now
put should be tested at some point",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1067,2017-10-05T10:42:34Z,2017-10-10T14:36:29Z,2017-10-11T15:28:43Z,CLOSED,False,915,143,3,https://github.com/GabrieleManduchi,Gm treenode thin client,3,[],https://github.com/MDSplus/mdsplus/pull/1067,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1067,"A new class TreeNodeThinClient has ben added. It inherits from TreeNode and is instantiated bu Connection Method getNode(""Path""), exporting TreeNode functionality over thin client mdsip.
There are several limitations in respect of the original TreeNode:

No Tree context is defined, Therefore a TreeNodeThinClient instance must be created after calling Connection.openTree() and is valid until the tree is closed or a new one is open  (remotely);

2)A subset of methods is implemented. The others generate an exception. Methods not supported include tree editing and derivation of relative nodes. Despite this, in practice all the normal use cases are covered.
3)Since thin connection is used, there may be some limitation in expression definition. For example, the dimension passed to method makeSegment() may be a Range type, but it is converted to an array before passing it to the mdsip server. Users must be aware of this.
Changes in the existing code are limited to some fiddling in TreeNode.getNci() method in order to improve code inheritance. Some old and no more pieces of code (still referring to old cached stuff) have been removed.","A new class TreeNodeThinClient has ben added. It inherits from TreeNode and is instantiated bu Connection Method getNode(""Path""), exporting TreeNode functionality over thin client mdsip.
There are several limitations in respect of the original TreeNode:

No Tree context is defined, Therefore a TreeNodeThinClient instance must be created after calling Connection.openTree() and is valid until the tree is closed or a new one is open  (remotely);

2)A subset of methods is implemented. The others generate an exception. Methods not supported include tree editing and derivation of relative nodes. Despite this, in practice all the normal use cases are covered.
3)Since thin connection is used, there may be some limitation in expression definition. For example, the dimension passed to method makeSegment() may be a Range type, but it is converted to an array before passing it to the mdsip server. Users must be aware of this.
Changes in the existing code are limited to some fiddling in TreeNode.getNci() method in order to improve code inheritance. Some old and no more pieces of code (still referring to old cached stuff) have been removed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1067,2017-10-05T10:42:34Z,2017-10-10T14:36:29Z,2017-10-11T15:28:43Z,CLOSED,False,915,143,3,https://github.com/GabrieleManduchi,Gm treenode thin client,3,[],https://github.com/MDSplus/mdsplus/pull/1067,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1067#issuecomment-335439137,"A new class TreeNodeThinClient has ben added. It inherits from TreeNode and is instantiated bu Connection Method getNode(""Path""), exporting TreeNode functionality over thin client mdsip.
There are several limitations in respect of the original TreeNode:

No Tree context is defined, Therefore a TreeNodeThinClient instance must be created after calling Connection.openTree() and is valid until the tree is closed or a new one is open  (remotely);

2)A subset of methods is implemented. The others generate an exception. Methods not supported include tree editing and derivation of relative nodes. Despite this, in practice all the normal use cases are covered.
3)Since thin connection is used, there may be some limitation in expression definition. For example, the dimension passed to method makeSegment() may be a Range type, but it is converted to an array before passing it to the mdsip server. Users must be aware of this.
Changes in the existing code are limited to some fiddling in TreeNode.getNci() method in order to improve code inheritance. Some old and no more pieces of code (still referring to old cached stuff) have been removed.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1067,2017-10-05T10:42:34Z,2017-10-10T14:36:29Z,2017-10-11T15:28:43Z,CLOSED,False,915,143,3,https://github.com/GabrieleManduchi,Gm treenode thin client,3,[],https://github.com/MDSplus/mdsplus/pull/1067,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1067#issuecomment-335849787,"A new class TreeNodeThinClient has ben added. It inherits from TreeNode and is instantiated bu Connection Method getNode(""Path""), exporting TreeNode functionality over thin client mdsip.
There are several limitations in respect of the original TreeNode:

No Tree context is defined, Therefore a TreeNodeThinClient instance must be created after calling Connection.openTree() and is valid until the tree is closed or a new one is open  (remotely);

2)A subset of methods is implemented. The others generate an exception. Methods not supported include tree editing and derivation of relative nodes. Despite this, in practice all the normal use cases are covered.
3)Since thin connection is used, there may be some limitation in expression definition. For example, the dimension passed to method makeSegment() may be a Range type, but it is converted to an array before passing it to the mdsip server. Users must be aware of this.
Changes in the existing code are limited to some fiddling in TreeNode.getNci() method in order to improve code inheritance. Some old and no more pieces of code (still referring to old cached stuff) have been removed.","Look at the answer for the first observation, ok for the others, I will report them",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1068,2017-10-05T20:46:43Z,2017-10-06T14:29:35Z,2017-10-06T14:29:39Z,MERGED,True,14,11,4,https://github.com/tfredian,Feature: Provide WRITE_ONCE enforcement with segmented signals,4,[],https://github.com/MDSplus/mdsplus/pull/1068,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1068,"If a node is set to be WRITE_ONCE (ie. TCL> SET NODE sig/WRITE_ONCE)
you will not be permitted to add or update any segments unless the
node is empty at which point only one segment can be written before
writes are blocked.
This also fixes the length characteristic of segmented nodes. The
length characteristic is a 32-bit value so the length value will
peak around 4 billion even if the total length of all the segments exceeds
this amount.","If a node is set to be WRITE_ONCE (ie. TCL> SET NODE sig/WRITE_ONCE)
you will not be permitted to add or update any segments unless the
node is empty at which point only one segment can be written before
writes are blocked.
This also fixes the length characteristic of segmented nodes. The
length characteristic is a 32-bit value so the length value will
peak around 4 billion even if the total length of all the segments exceeds
this amount.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1068,2017-10-05T20:46:43Z,2017-10-06T14:29:35Z,2017-10-06T14:29:39Z,MERGED,True,14,11,4,https://github.com/tfredian,Feature: Provide WRITE_ONCE enforcement with segmented signals,4,[],https://github.com/MDSplus/mdsplus/pull/1068,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1068#issuecomment-334588380,"If a node is set to be WRITE_ONCE (ie. TCL> SET NODE sig/WRITE_ONCE)
you will not be permitted to add or update any segments unless the
node is empty at which point only one segment can be written before
writes are blocked.
This also fixes the length characteristic of segmented nodes. The
length characteristic is a 32-bit value so the length value will
peak around 4 billion even if the total length of all the segments exceeds
this amount.",It turns out I broke the length value five years ago when I added the brilliant feature of having the length peak at 2^31. The not so brilliant part was I coded it in C as 2^31 and since the carat is an XOR operator the length max'ed out at a whopping 29!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1068,2017-10-05T20:46:43Z,2017-10-06T14:29:35Z,2017-10-06T14:29:39Z,MERGED,True,14,11,4,https://github.com/tfredian,Feature: Provide WRITE_ONCE enforcement with segmented signals,4,[],https://github.com/MDSplus/mdsplus/pull/1068,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1068#issuecomment-334605106,"If a node is set to be WRITE_ONCE (ie. TCL> SET NODE sig/WRITE_ONCE)
you will not be permitted to add or update any segments unless the
node is empty at which point only one segment can be written before
writes are blocked.
This also fixes the length characteristic of segmented nodes. The
length characteristic is a 32-bit value so the length value will
peak around 4 billion even if the total length of all the segments exceeds
this amount.","also you might need to change the datatype of add_length and length to uint32_t as well, since they are only int atm. or you need to stick with int.
is the max value not rather (1<<32)-1 for uint32 and  (1<<31)-1 for int (0xffffffff or 0x7fffffff, respectively)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1068,2017-10-05T20:46:43Z,2017-10-06T14:29:35Z,2017-10-06T14:29:39Z,MERGED,True,14,11,4,https://github.com/tfredian,Feature: Provide WRITE_ONCE enforcement with segmented signals,4,[],https://github.com/MDSplus/mdsplus/pull/1068,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1068#issuecomment-334759838,"If a node is set to be WRITE_ONCE (ie. TCL> SET NODE sig/WRITE_ONCE)
you will not be permitted to add or update any segments unless the
node is empty at which point only one segment can be written before
writes are blocked.
This also fixes the length characteristic of segmented nodes. The
length characteristic is a 32-bit value so the length value will
peak around 4 billion even if the total length of all the segments exceeds
this amount.","The length/rlength values seem to work better now.

TCL> dir/full sig
\TWF::TOP
:SIG
Status: on,parent is on, usage signal
compress on put
Data inserted:  6-OCT-2017 09:29:33.98    Owner: gid=1000(twf),uid=1000(twf)
Dtype: DTYPE_FS              Class: CLASS_R             Length: 4294967295 bytes
Total of 1 node.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1069,2017-10-06T15:32:03Z,2017-10-06T18:25:50Z,2017-10-19T12:33:01Z,MERGED,True,52,21,4,https://github.com/zack-vii,Fix: use default recv if recv_to is not available,2,[],https://github.com/MDSplus/mdsplus/pull/1069,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1069,"silly did not take other protocols into account
this should also add timeout for the tunnel but it is currently not used. maybe it can be used via python Connection. i will see if this can be included in tests somewhere","silly did not take other protocols into account
this should also add timeout for the tunnel but it is currently not used. maybe it can be used via python Connection. i will see if this can be included in tests somewhere",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1070,2017-10-06T18:57:28Z,2017-10-06T20:59:28Z,2017-10-19T12:31:54Z,MERGED,True,28,24,3,https://github.com/zack-vii,Fix: pythons GetMany and TdiIntrinsic if TdiRefZone.a_begin is not set,2,[],https://github.com/MDSplus/mdsplus/pull/1070,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1070,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1071,2017-10-09T16:41:46Z,2017-10-09T17:04:35Z,2017-11-20T17:18:32Z,CLOSED,False,3,2,1,https://github.com/tfredian,Fix: Avoid deepcopy when fixing tree references in Compound objects,1,[],https://github.com/MDSplus/mdsplus/pull/1071,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1071,"The deepcopy function can nolonger be used to copy Compound instances as
it now may contain ctypes objects. This change avoids the use of deepcopy.","The deepcopy function can nolonger be used to copy Compound instances as
it now may contain ctypes objects. This change avoids the use of deepcopy.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1071,2017-10-09T16:41:46Z,2017-10-09T17:04:35Z,2017-11-20T17:18:32Z,CLOSED,False,3,2,1,https://github.com/tfredian,Fix: Avoid deepcopy when fixing tree references in Compound objects,1,[],https://github.com/MDSplus/mdsplus/pull/1071,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1071#issuecomment-335219470,"The deepcopy function can nolonger be used to copy Compound instances as
it now may contain ctypes objects. This change avoids the use of deepcopy.",Closing this PR for now. Hopefully will come up with a better solution described in: #1072,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1073,2017-10-09T17:30:55Z,2017-10-10T19:23:54Z,2017-10-10T19:23:59Z,MERGED,True,2,2,1,https://github.com/joshStillerman,Fix: Fix setup for channel 26,2,[],https://github.com/MDSplus/mdsplus/pull/1073,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1073,The nid offsets for channel 26 were wrong.  Fixed here.,The nid offsets for channel 26 were wrong.  Fixed here.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1075,2017-10-09T21:10:30Z,2017-10-10T18:36:18Z,2017-10-19T12:31:51Z,MERGED,True,16,3,4,https://github.com/zack-vii,Zck py connection,3,[],https://github.com/MDSplus/mdsplus/pull/1075,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1075,"adds getObject to Connection which allows the easy transfer of complex data objects e.g. signals
adds separation of TimeOut vs other Exceptions during GetAnswerInfo
TODO: after a timeout the server still tries to send result and interferes with subsequent calls. Server either needs to be notified to cancel operation or the connection needs to be terminated. currently it is the responsibility of the user to do so when used in python. The only internal use is during DoLogin which terminates the connection on failure.","adds getObject to Connection which allows the easy transfer of complex data objects e.g. signals
adds separation of TimeOut vs other Exceptions during GetAnswerInfo
TODO: after a timeout the server still tries to send result and interferes with subsequent calls. Server either needs to be notified to cancel operation or the connection needs to be terminated. currently it is the responsibility of the user to do so when used in python. The only internal use is during DoLogin which terminates the connection on failure.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1078,2017-10-10T13:57:08Z,2017-10-10T21:10:27Z,2017-11-20T17:16:04Z,MERGED,True,13,11,3,https://github.com/tfredian,Fix: Repair implementation of fixTreeREferences,2,[],https://github.com/MDSplus/mdsplus/pull/1078,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1078,"fixTreeReferences is used during Tree.putRecord to ensure the
references to nodes in other trees are properly converted to TreePath's.","fixTreeReferences is used during Tree.putRecord to ensure the
references to nodes in other trees are properly converted to TreePath's.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1079,New Thin client TreeNode - removed unised variable warnings/errors,New Thin client TreeNode - removed unised variable warnings/errors,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1079#issuecomment-336202508,New Thin client TreeNode - removed unised variable warnings/errors,"Reported Keith's observations.
The only exception is  getnci stuff originally defined as template and used directly, and now used through four added methods getNciString(), getNciString(), getNciChar(), getNciInt(), getNciInt64().
I have been forced doing this way because the derived TreeNodeThinClient redefines getNcixxx() so that it can reuse a lot of TreeNode code. Unfortunately it is not possible having a virtual method that is also a template, i.e. making the original template getnci virtual so that it could be redefined by the subclass. So the only way was to make it a bit less elegant in TreeNode and providing four  virtual methods for getNci.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1079#issuecomment-337282774,New Thin client TreeNode - removed unised variable warnings/errors,"Ok, used AutoData whenever possible now.
As soon as I can proceed I will report this to LabVIEW as requested by Greg",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1079#issuecomment-337284072,New Thin client TreeNode - removed unised variable warnings/errors,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/kgerickson,5,https://github.com/MDSplus/mdsplus/pull/1079#issuecomment-337299844,New Thin client TreeNode - removed unised variable warnings/errors,"I added two more comments.  You missed two Auto's in general, and you avoided all the ones that involved an array of Data*. I explained in the comment how to handle the array using two parallel arrays.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1079#issuecomment-337578940,New Thin client TreeNode - removed unised variable warnings/errors,Now I think that all deleteData() stuff has gone away.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/kgerickson,7,https://github.com/MDSplus/mdsplus/pull/1079#issuecomment-337677169,New Thin client TreeNode - removed unised variable warnings/errors,"You still have a lot of "" if(!retData)"" instead of  ""if(!retData.get())"".  The former will always be false.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/1079#issuecomment-337843632,New Thin client TreeNode - removed unised variable warnings/errors,"Used AutoArray.
Not sure  that if(!retData) will always return false, because it must be converted to a number/boolean and therefore I believe get() is implicitly called.  Anyway, changed as suggested, it makes the code clearer.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1079,2017-10-10T14:42:19Z,2017-10-26T15:43:24Z,2017-10-26T15:43:39Z,MERGED,True,883,167,3,https://github.com/GabrieleManduchi,Gm treenode thin client,22,[],https://github.com/MDSplus/mdsplus/pull/1079,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/1079#issuecomment-338581580,New Thin client TreeNode - removed unised variable warnings/errors,"Keith,
if you approve this, unless you discover other issues, I can proceed in making the development asked by Greg",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1080,2017-10-10T14:47:14Z,2017-10-10T15:14:45Z,2019-11-25T10:21:05Z,CLOSED,False,8,0,2,https://github.com/joshStillerman,Jas add map of MDSplus sites,11,[],https://github.com/MDSplus/mdsplus/pull/1080,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1080,Please squash all of the commits (markdown experiments) before merging,Please squash all of the commits (markdown experiments) before merging,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1081,2017-10-10T15:17:43Z,2017-10-10T17:05:37Z,2017-10-10T17:05:48Z,MERGED,True,8,0,2,https://github.com/joshStillerman,Docs: Added map of MDSplus users,1,[],https://github.com/MDSplus/mdsplus/pull/1081,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1081,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1082,2017-10-10T15:23:46Z,2017-10-11T20:01:53Z,2017-11-20T17:16:07Z,MERGED,True,4,2,1,https://github.com/tfredian,Build: Fix commit checker to succeed with at least one valid commit h…,2,[],https://github.com/MDSplus/mdsplus/pull/1082,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1082,"…eader
If at least one valid commit header is found the checker should return one of MINOR, PATH or SAME.
The commits with ""TESTS:"", ""DOCS:"" or ""BUILD:"" were returning ""BADCOMMIT"" if any
bad commits were found.","…eader
If at least one valid commit header is found the checker should return one of MINOR, PATH or SAME.
The commits with ""TESTS:"", ""DOCS:"" or ""BUILD:"" were returning ""BADCOMMIT"" if any
bad commits were found.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1083,2017-10-10T17:27:29Z,2017-10-11T12:49:36Z,2017-10-19T12:31:50Z,MERGED,True,11,13,1,https://github.com/zack-vii,Zck setTimeContext does return double even if the original dim was an expression generating Q types,3,[],https://github.com/MDSplus/mdsplus/pull/1083,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1083,"resolved inconsistent data conversions (uint <-> int) in XTreeDefaultResample
if dim is an expression (e.g. ""-10Q : 10Q : 1Q"") the original code would not identify the datatype as int64 but default to float instead.","resolved inconsistent data conversions (uint <-> int) in XTreeDefaultResample
if dim is an expression (e.g. ""-10Q : 10Q : 1Q"") the original code would not identify the datatype as int64 but default to float instead.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1084,2017-10-10T17:46:47Z,2017-10-10T20:36:23Z,2017-10-10T20:37:01Z,MERGED,True,6,3,1,https://github.com/tfredian,Fix: Clear write once attribute when writing segments into an empty node,5,[],https://github.com/MDSplus/mdsplus/pull/1084,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1084,"The write_once attribute when used with segments is only meaningful when
set after the completion of intended storage of all segments. If a node
has the write_once attribute set before storage begins it will only permit
one segment write to the node which will break many existing devices.
This fix will clear the write_once attribute on a node if the node contains
no data when the first segment is written.","The write_once attribute when used with segments is only meaningful when
set after the completion of intended storage of all segments. If a node
has the write_once attribute set before storage begins it will only permit
one segment write to the node which will break many existing devices.
This fix will clear the write_once attribute on a node if the node contains
no data when the first segment is written.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1085,2017-10-11T14:29:46Z,2017-10-11T15:20:04Z,2017-10-19T12:31:49Z,MERGED,True,14,5,2,https://github.com/zack-vii,Zck random py fixes,2,[],https://github.com/MDSplus/mdsplus/pull/1085,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1085,"fixes python compare and Float{F,G,H,D}Arrays","fixes python compare and Float{F,G,H,D}Arrays",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1085,2017-10-11T14:29:46Z,2017-10-11T15:20:04Z,2017-10-19T12:31:49Z,MERGED,True,14,5,2,https://github.com/zack-vii,Zck random py fixes,2,[],https://github.com/MDSplus/mdsplus/pull/1085,https://github.com/kgerickson,2,https://github.com/MDSplus/mdsplus/pull/1085#issuecomment-336725083,"fixes python compare and Float{F,G,H,D}Arrays","We need much better titles than ""random py fixes"".  Having descriptive pull requests is the same as having descriptive log messages.  Without them, archeology becomes useless.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1086,2017-10-11T19:37:46Z,2017-10-13T14:54:02Z,2017-11-20T17:15:57Z,MERGED,True,2,1,1,https://github.com/tfredian,Fix: ensure conversion of a descriptor to a python object is assigned…,3,[],https://github.com/MDSplus/mdsplus/pull/1086,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1086,"… a tree property
When the data is read from a node in a tree or the evaluation of a tdi expression
involves a tree context the resulting answer must be contain an association with
the that tree.","… a tree property
When the data is read from a node in a tree or the evaluation of a tdi expression
involves a tree context the resulting answer must be contain an association with
the that tree.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1087,2017-10-12T14:27:26Z,2017-10-12T15:46:30Z,2017-11-20T17:15:55Z,MERGED,True,3,1,1,https://github.com/tfredian,Fix: Opaque attempt to get dim for opaque segments,1,[],https://github.com/MDSplus/mdsplus/pull/1087,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1087,"When storing opaque segments (list of jpegs etc) no dimension
information is stored for each entry. The ReadSegment code was
trying to obtain a dimension which resulted in a malloc(-1) call.
This fix prevents attempting to read the dimension if their is none.","When storing opaque segments (list of jpegs etc) no dimension
information is stored for each entry. The ReadSegment code was
trying to obtain a dimension which resulted in a malloc(-1) call.
This fix prevents attempting to read the dimension if their is none.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1088,2017-10-12T14:44:15Z,2017-10-12T15:48:14Z,2017-11-20T17:15:23Z,MERGED,True,3,1,1,https://github.com/tfredian,Fix: Opaque attempt to get dim for opaque segments,1,['bug'],https://github.com/MDSplus/mdsplus/pull/1088,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1088,"When storing opaque segments (list of jpegs etc) no dimension
information is stored for each entry. The ReadSegment code was
trying to obtain a dimension which resulted in a malloc(-1) call.
This fix prevents attempting to read the dimension if their is none.","When storing opaque segments (list of jpegs etc) no dimension
information is stored for each entry. The ReadSegment code was
trying to obtain a dimension which resulted in a malloc(-1) call.
This fix prevents attempting to read the dimension if their is none.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1088,2017-10-12T14:44:15Z,2017-10-12T15:48:14Z,2017-11-20T17:15:23Z,MERGED,True,3,1,1,https://github.com/tfredian,Fix: Opaque attempt to get dim for opaque segments,1,['bug'],https://github.com/MDSplus/mdsplus/pull/1088,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1088#issuecomment-336171324,"When storing opaque segments (list of jpegs etc) no dimension
information is stored for each entry. The ReadSegment code was
trying to obtain a dimension which resulted in a malloc(-1) call.
This fix prevents attempting to read the dimension if their is none.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1089,2017-10-12T16:47:03Z,2017-10-13T15:26:31Z,2017-10-13T15:26:40Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Fix: Fix internal clock check in store,3,['bug'],https://github.com/MDSplus/mdsplus/pull/1089,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1089,"The check of the status register for external clock was after a shift
of the register in the wrong direction.","The check of the status register for external clock was after a shift
of the register in the wrong direction.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1092,2017-10-16T15:20:44Z,2017-10-16T19:04:07Z,2017-10-16T19:04:11Z,MERGED,True,149,0,1,https://github.com/tfredian,Build: Add script for notifying developers of issues via email,1,[],https://github.com/MDSplus/mdsplus/pull/1092,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1092,"This commit adds a python script for use in a scheduled jenkins job
which will send email notification to the MDSplus developers of any
outstanding issues. The email will contain a list of the oustanding
issues that have been assigned to the user followed by a list of
outstanding issues that have yet to be assigned to anyone.
NOTE: If an issue is given a label ""noremind"" it will not be included
in these issue notification emails.
This is to provide the enhancment described in
#1076","This commit adds a python script for use in a scheduled jenkins job
which will send email notification to the MDSplus developers of any
outstanding issues. The email will contain a list of the oustanding
issues that have been assigned to the user followed by a list of
outstanding issues that have yet to be assigned to anyone.
NOTE: If an issue is given a label ""noremind"" it will not be included
in these issue notification emails.
This is to provide the enhancment described in
#1076",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1094,2017-10-17T20:14:34Z,2017-10-18T12:14:15Z,2017-10-18T12:14:19Z,MERGED,True,3,3,1,https://github.com/joshStillerman,Fix:  Data read from device is one sample short.,1,[],https://github.com/MDSplus/mdsplus/pull/1094,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1094,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1095,2017-10-19T15:05:57Z,2017-10-23T15:06:34Z,2017-10-25T11:29:24Z,MERGED,True,22,2,2,https://github.com/AndreaRigoni,Fix: add a wait for server method,3,[],https://github.com/MDSplus/mdsplus/pull/1095,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1095,"Hi all,
I added this simple method looping in a try/catch Connection and wait.
This should cope with the lazy server process that could be the cause of intermittent issue with MdsConnectionTest in C++.","Hi all,
I added this simple method looping in a try/catch Connection and wait.
This should cope with the lazy server process that could be the cause of intermittent issue with MdsConnectionTest in C++.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1095,2017-10-19T15:05:57Z,2017-10-23T15:06:34Z,2017-10-25T11:29:24Z,MERGED,True,22,2,2,https://github.com/AndreaRigoni,Fix: add a wait for server method,3,[],https://github.com/MDSplus/mdsplus/pull/1095,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1095#issuecomment-337947079,"Hi all,
I added this simple method looping in a try/catch Connection and wait.
This should cope with the lazy server process that could be the cause of intermittent issue with MdsConnectionTest in C++.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1095,2017-10-19T15:05:57Z,2017-10-23T15:06:34Z,2017-10-25T11:29:24Z,MERGED,True,22,2,2,https://github.com/AndreaRigoni,Fix: add a wait for server method,3,[],https://github.com/MDSplus/mdsplus/pull/1095,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1095#issuecomment-337996164,"Hi all,
I added this simple method looping in a try/catch Connection and wait.
This should cope with the lazy server process that could be the cause of intermittent issue with MdsConnectionTest in C++.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1096,2017-10-19T16:11:33Z,2017-10-19T19:49:39Z,2017-10-19T19:49:45Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Fix: Add EXPORT for mdsdcl_spawn,1,[],https://github.com/MDSplus/mdsplus/pull/1096,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1096,This export was missing preventing spawn and submit from working.,This export was missing preventing spawn and submit from working.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1096,2017-10-19T16:11:33Z,2017-10-19T19:49:39Z,2017-10-19T19:49:45Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Fix: Add EXPORT for mdsdcl_spawn,1,[],https://github.com/MDSplus/mdsplus/pull/1096,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1096#issuecomment-338005812,This export was missing preventing spawn and submit from working.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1097,2017-10-20T16:49:03Z,2017-10-20T17:45:25Z,2017-10-20T17:45:29Z,CLOSED,False,1,1,1,https://github.com/tfredian,Fix: Older matlab 2011 fix for MDSplus interface,1,[],https://github.com/MDSplus/mdsplus/pull/1097,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1097,"A problem was discovered when using the matlab interface with
matlab version 2011. This fixes the problem.","A problem was discovered when using the matlab interface with
matlab version 2011. This fixes the problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1098,2017-10-20T17:49:32Z,2017-10-23T16:08:46Z,2017-10-23T16:08:52Z,MERGED,True,18,6,2,https://github.com/tfredian,Matlab fixes to make compatible with old versions of matlab and with octave,4,[],https://github.com/MDSplus/mdsplus/pull/1098,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1098,A problem in the matlab code caused an incompatibility with older (2011) versions of Matlab. This contains a simple fix to avoid the problem. Also included in this pull request is a fix for the slight difference in the java interaction used in Matlab versus Octave. The MDSplus matlab interface should now work with Octave and a wide ranges of Matlab versions.,A problem in the matlab code caused an incompatibility with older (2011) versions of Matlab. This contains a simple fix to avoid the problem. Also included in this pull request is a fix for the slight difference in the java interaction used in Matlab versus Octave. The MDSplus matlab interface should now work with Octave and a wide ranges of Matlab versions.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1099,2017-10-23T08:33:44Z,2017-11-25T17:14:52Z,2018-09-25T14:34:27Z,CLOSED,False,5,5,2,https://github.com/GabrieleManduchi,Fix: Keith's issues,1,[],https://github.com/MDSplus/mdsplus/pull/1099,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1099,"Removed useless line, changed contour vector to Double","Removed useless line, changed contour vector to Double",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1099,2017-10-23T08:33:44Z,2017-11-25T17:14:52Z,2018-09-25T14:34:27Z,CLOSED,False,5,5,2,https://github.com/GabrieleManduchi,Fix: Keith's issues,1,[],https://github.com/MDSplus/mdsplus/pull/1099,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1099#issuecomment-338598632,"Removed useless line, changed contour vector to Double",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1099,2017-10-23T08:33:44Z,2017-11-25T17:14:52Z,2018-09-25T14:34:27Z,CLOSED,False,5,5,2,https://github.com/GabrieleManduchi,Fix: Keith's issues,1,[],https://github.com/MDSplus/mdsplus/pull/1099,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1099#issuecomment-346953513,"Removed useless line, changed contour vector to Double",included in #1134,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1100,2017-10-23T11:05:57Z,2017-10-23T13:50:46Z,2017-10-23T13:50:46Z,MERGED,True,49,26,9,https://github.com/zack-vii,Zck python ctx fix,5,[],https://github.com/MDSplus/mdsplus/pull/1100,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1100,"fixes context on tuple style args on Data.compile
adds XTreeShr methods
resolves confusion between byref() method and ref property uniformly between Data and descriptor types
adds support for DEVICE.path_to_member.record = value assignment","fixes context on tuple style args on Data.compile
adds XTreeShr methods
resolves confusion between byref() method and ref property uniformly between Data and descriptor types
adds support for DEVICE.path_to_member.record = value assignment",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1101,2017-10-24T13:36:41Z,2017-10-24T15:02:59Z,2018-06-04T20:29:31Z,MERGED,True,2,2,1,https://github.com/joshStillerman,Fix: matlab uses only single quotes for strings,1,[],https://github.com/MDSplus/mdsplus/pull/1101,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1101,Replaced the double quoted strings with single quoted strings,Replaced the double quoted strings with single quoted strings,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1101,2017-10-24T13:36:41Z,2017-10-24T15:02:59Z,2018-06-04T20:29:31Z,MERGED,True,2,2,1,https://github.com/joshStillerman,Fix: matlab uses only single quotes for strings,1,[],https://github.com/MDSplus/mdsplus/pull/1101,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1101#issuecomment-339000348,Replaced the double quoted strings with single quoted strings,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1105,2017-10-27T15:11:09Z,2017-10-27T15:51:43Z,2017-10-27T15:51:43Z,MERGED,True,5,21,1,https://github.com/zack-vii,Fix: removed debug message in TreeNode.__getattr__ which cased recursion,1,[],https://github.com/MDSplus/mdsplus/pull/1105,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1105,this should fix the recursion mentioned in issue #1104,this should fix the recursion mentioned in issue #1104,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1107,2017-10-27T20:41:28Z,2017-10-28T00:19:25Z,2018-01-26T14:55:18Z,MERGED,True,6,4,1,https://github.com/zack-vii,Fix: Workaround for issue #1106: no ctx in XTreeShr,1,[],https://github.com/MDSplus/mdsplus/pull/1107,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1107,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1107,2017-10-27T20:41:28Z,2017-10-28T00:19:25Z,2018-01-26T14:55:18Z,MERGED,True,6,4,1,https://github.com/zack-vii,Fix: Workaround for issue #1106: no ctx in XTreeShr,1,[],https://github.com/MDSplus/mdsplus/pull/1107,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1107#issuecomment-340125290,,"well considering the python code we do actually. not? pushTree acquires a lock and popTree releases it.
…
________________________________
From: Tom Fredian <notifications@github.com>
Sent: Friday, October 27, 2017 10:49:00 PM
To: MDSplus/mdsplus
Cc: zack-vii; Author
Subject: Re: [MDSplus/mdsplus] Fix: Workaround for issue #1106: no ctx in XTreeShr (#1107)


@tfredian approved this pull request.

This should mostly work but this does present a race condition since we don't currently have any locking on the global tree ctx. We'll look into a mechanism in the c code for locking the global ctx, push ctx, call tdishr routine, pop ctx, unlock global ctx and see if this needs to be done elsewhere in all the code.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#1107 (review)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AF8SrhecS89darbLjCNbuVZew1uwyzAWks5swkG8gaJpZM4QJl1j>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1108,2017-11-02T17:13:40Z,2017-11-03T16:19:23Z,2017-11-20T21:32:49Z,MERGED,True,153,74,48,https://github.com/zack-vii,Zck actlog for win,3,[],https://github.com/MDSplus/mdsplus/pull/1108,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1108,This should finally add teh commandline tool to the actual package of windows and linux,This should finally add teh commandline tool to the actual package of windows and linux,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1108,2017-11-02T17:13:40Z,2017-11-03T16:19:23Z,2017-11-20T21:32:49Z,MERGED,True,153,74,48,https://github.com/zack-vii,Zck actlog for win,3,[],https://github.com/MDSplus/mdsplus/pull/1108,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1108#issuecomment-341668624,This should finally add teh commandline tool to the actual package of windows and linux,"@AndreaRigoni could you review this pr, please. As far as I know Makefile stuff is your expertise.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1109,2017-11-03T09:19:38Z,2017-11-06T19:49:41Z,2017-11-06T20:08:34Z,MERGED,True,733,690,455,https://github.com/GabrieleManduchi,Feature: Add Thin Client Tree Node in MDSplus LabVIEW Interface,6,[],https://github.com/MDSplus/mdsplus/pull/1109,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1109,"A new Connection VI provides a TreeNode instance that can be used in the same way as the Tree Node instance returned by Tree VI. It is based on the TreeNodeThinClient class of the MDSobject C++ interface.
A method has been added in mdsobjects/labview/mdsobjectswrp.cpp and a method VI has been added to Connection LabVIEW class. An example VI has been also added showing how using TreeNodeThinClient for segment operation.
Note that all the binary VIs of the MDSplus distribution are reported as changed (they are created by LabVIEW)","A new Connection VI provides a TreeNode instance that can be used in the same way as the Tree Node instance returned by Tree VI. It is based on the TreeNodeThinClient class of the MDSobject C++ interface.
A method has been added in mdsobjects/labview/mdsobjectswrp.cpp and a method VI has been added to Connection LabVIEW class. An example VI has been also added showing how using TreeNodeThinClient for segment operation.
Note that all the binary VIs of the MDSplus distribution are reported as changed (they are created by LabVIEW)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1109,2017-11-03T09:19:38Z,2017-11-06T19:49:41Z,2017-11-06T20:08:34Z,MERGED,True,733,690,455,https://github.com/GabrieleManduchi,Feature: Add Thin Client Tree Node in MDSplus LabVIEW Interface,6,[],https://github.com/MDSplus/mdsplus/pull/1109,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1109#issuecomment-341746933,"A new Connection VI provides a TreeNode instance that can be used in the same way as the Tree Node instance returned by Tree VI. It is based on the TreeNodeThinClient class of the MDSobject C++ interface.
A method has been added in mdsobjects/labview/mdsobjectswrp.cpp and a method VI has been added to Connection LabVIEW class. An example VI has been also added showing how using TreeNodeThinClient for segment operation.
Note that all the binary VIs of the MDSplus distribution are reported as changed (they are created by LabVIEW)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1109,2017-11-03T09:19:38Z,2017-11-06T19:49:41Z,2017-11-06T20:08:34Z,MERGED,True,733,690,455,https://github.com/GabrieleManduchi,Feature: Add Thin Client Tree Node in MDSplus LabVIEW Interface,6,[],https://github.com/MDSplus/mdsplus/pull/1109,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1109#issuecomment-342143969,"A new Connection VI provides a TreeNode instance that can be used in the same way as the Tree Node instance returned by Tree VI. It is based on the TreeNodeThinClient class of the MDSobject C++ interface.
A method has been added in mdsobjects/labview/mdsobjectswrp.cpp and a method VI has been added to Connection LabVIEW class. An example VI has been also added showing how using TreeNodeThinClient for segment operation.
Note that all the binary VIs of the MDSplus distribution are reported as changed (they are created by LabVIEW)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1109,2017-11-03T09:19:38Z,2017-11-06T19:49:41Z,2017-11-06T20:08:34Z,MERGED,True,733,690,455,https://github.com/GabrieleManduchi,Feature: Add Thin Client Tree Node in MDSplus LabVIEW Interface,6,[],https://github.com/MDSplus/mdsplus/pull/1109,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1109#issuecomment-342173812,"A new Connection VI provides a TreeNode instance that can be used in the same way as the Tree Node instance returned by Tree VI. It is based on the TreeNodeThinClient class of the MDSobject C++ interface.
A method has been added in mdsobjects/labview/mdsobjectswrp.cpp and a method VI has been added to Connection LabVIEW class. An example VI has been also added showing how using TreeNodeThinClient for segment operation.
Note that all the binary VIs of the MDSplus distribution are reported as changed (they are created by LabVIEW)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1109,2017-11-03T09:19:38Z,2017-11-06T19:49:41Z,2017-11-06T20:08:34Z,MERGED,True,733,690,455,https://github.com/GabrieleManduchi,Feature: Add Thin Client Tree Node in MDSplus LabVIEW Interface,6,[],https://github.com/MDSplus/mdsplus/pull/1109,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/1109#issuecomment-342207872,"A new Connection VI provides a TreeNode instance that can be used in the same way as the Tree Node instance returned by Tree VI. It is based on the TreeNodeThinClient class of the MDSobject C++ interface.
A method has been added in mdsobjects/labview/mdsobjectswrp.cpp and a method VI has been added to Connection LabVIEW class. An example VI has been also added showing how using TreeNodeThinClient for segment operation.
Note that all the binary VIs of the MDSplus distribution are reported as changed (they are created by LabVIEW)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1110,2017-11-03T14:06:59Z,2017-11-07T14:43:04Z,2017-11-20T17:15:22Z,MERGED,True,119,12,29,https://github.com/tfredian,Build: Add support for fedora 26,5,[],https://github.com/MDSplus/mdsplus/pull/1110,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1110,This change will add fc26 to list of supported operating systems.,This change will add fc26 to list of supported operating systems.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1110,2017-11-03T14:06:59Z,2017-11-07T14:43:04Z,2017-11-20T17:15:22Z,MERGED,True,119,12,29,https://github.com/tfredian,Build: Add support for fedora 26,5,[],https://github.com/MDSplus/mdsplus/pull/1110,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1110#issuecomment-342226263,This change will add fc26 to list of supported operating systems.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1113,2017-11-07T17:09:45Z,2017-11-08T16:15:05Z,2017-11-08T16:15:07Z,CLOSED,False,55,36,11,https://github.com/tfredian,Build: User real source directory inside docker images,5,[],https://github.com/MDSplus/mdsplus/pull/1113,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1113,"The original docker build scripts used /source for the source volume.
Various development tools can be used better if the docker builds use
the same source directory spec as that outside of docker. For example
if the source lives in /home/twf/mdsplus-alpha and that same directory
is used as the internal volume inside the docker container instead of
mapping it to /source, all debug information etc will contain the correct
source file location if used outside of docker.","The original docker build scripts used /source for the source volume.
Various development tools can be used better if the docker builds use
the same source directory spec as that outside of docker. For example
if the source lives in /home/twf/mdsplus-alpha and that same directory
is used as the internal volume inside the docker container instead of
mapping it to /source, all debug information etc will contain the correct
source file location if used outside of docker.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1113,2017-11-07T17:09:45Z,2017-11-08T16:15:05Z,2017-11-08T16:15:07Z,CLOSED,False,55,36,11,https://github.com/tfredian,Build: User real source directory inside docker images,5,[],https://github.com/MDSplus/mdsplus/pull/1113,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1113#issuecomment-342581649,"The original docker build scripts used /source for the source volume.
Various development tools can be used better if the docker builds use
the same source directory spec as that outside of docker. For example
if the source lives in /home/twf/mdsplus-alpha and that same directory
is used as the internal volume inside the docker container instead of
mapping it to /source, all debug information etc will contain the correct
source file location if used outside of docker.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1113,2017-11-07T17:09:45Z,2017-11-08T16:15:05Z,2017-11-08T16:15:07Z,CLOSED,False,55,36,11,https://github.com/tfredian,Build: User real source directory inside docker images,5,[],https://github.com/MDSplus/mdsplus/pull/1113,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1113#issuecomment-342776440,"The original docker build scripts used /source for the source volume.
Various development tools can be used better if the docker builds use
the same source directory spec as that outside of docker. For example
if the source lives in /home/twf/mdsplus-alpha and that same directory
is used as the internal volume inside the docker container instead of
mapping it to /source, all debug information etc will contain the correct
source file location if used outside of docker.",actually i would rather recomment an option to the build.sh that may overrider the /source default. this is more transparent an alows for mire freedom.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1113,2017-11-07T17:09:45Z,2017-11-08T16:15:05Z,2017-11-08T16:15:07Z,CLOSED,False,55,36,11,https://github.com/tfredian,Build: User real source directory inside docker images,5,[],https://github.com/MDSplus/mdsplus/pull/1113,https://github.com/AndreaRigoni,4,https://github.com/MDSplus/mdsplus/pull/1113#issuecomment-342778127,"The original docker build scripts used /source for the source volume.
Various development tools can be used better if the docker builds use
the same source directory spec as that outside of docker. For example
if the source lives in /home/twf/mdsplus-alpha and that same directory
is used as the internal volume inside the docker container instead of
mapping it to /source, all debug information etc will contain the correct
source file location if used outside of docker.","Hi Timo,
it could be an option but this approach fits well with the same logic of the ./configure script for me.
You wont fire the build.sh outside the source directory for now so the source directory is an implicit information likewise the configure does.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1113,2017-11-07T17:09:45Z,2017-11-08T16:15:05Z,2017-11-08T16:15:07Z,CLOSED,False,55,36,11,https://github.com/tfredian,Build: User real source directory inside docker images,5,[],https://github.com/MDSplus/mdsplus/pull/1113,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1113#issuecomment-342787210,"The original docker build scripts used /source for the source volume.
Various development tools can be used better if the docker builds use
the same source directory spec as that outside of docker. For example
if the source lives in /home/twf/mdsplus-alpha and that same directory
is used as the internal volume inside the docker container instead of
mapping it to /source, all debug information etc will contain the correct
source file location if used outside of docker.","No i meant what if you are compiling for a different machine that does not have docker e.g. the source files might be lying elsewhere. i e.g have a link to the sources on each computer so the debugging works fine.
""deploy/build.sh --os=fc25 --test --source-dir=."" could do want you want to do but with the same effort you would allow for much more flexibility.
""deploy/build.sh --os=fc25 --test --source-dir=/my/folder/on/target/machine""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1113,2017-11-07T17:09:45Z,2017-11-08T16:15:05Z,2017-11-08T16:15:07Z,CLOSED,False,55,36,11,https://github.com/tfredian,Build: User real source directory inside docker images,5,[],https://github.com/MDSplus/mdsplus/pull/1113,https://github.com/AndreaRigoni,6,https://github.com/MDSplus/mdsplus/pull/1113#issuecomment-342807381,"The original docker build scripts used /source for the source volume.
Various development tools can be used better if the docker builds use
the same source directory spec as that outside of docker. For example
if the source lives in /home/twf/mdsplus-alpha and that same directory
is used as the internal volume inside the docker container instead of
mapping it to /source, all debug information etc will contain the correct
source file location if used outside of docker.",Ah now I got your point .. that is because I'm biased by the fact that I don't use the build script very often as I prefer the direct compilation with --with-docker-image parameter,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1113,2017-11-07T17:09:45Z,2017-11-08T16:15:05Z,2017-11-08T16:15:07Z,CLOSED,False,55,36,11,https://github.com/tfredian,Build: User real source directory inside docker images,5,[],https://github.com/MDSplus/mdsplus/pull/1113,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1113#issuecomment-342867977,"The original docker build scripts used /source for the source volume.
Various development tools can be used better if the docker builds use
the same source directory spec as that outside of docker. For example
if the source lives in /home/twf/mdsplus-alpha and that same directory
is used as the internal volume inside the docker container instead of
mapping it to /source, all debug information etc will contain the correct
source file location if used outside of docker.",This pull request will be replaced by a new one.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1114,2017-11-08T13:56:15Z,2017-11-08T14:37:47Z,2017-11-08T14:37:47Z,CLOSED,False,33,17,4,https://github.com/AndreaRigoni,Build: adds a rebuild-tests step before making tests-valgirnd,1,[],https://github.com/MDSplus/mdsplus/pull/1114,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1114,If tests-valgrind were started after a standard tests build the -D_TESTING compile option was still active conflicting with the results in the xml output.,If tests-valgrind were started after a standard tests build the -D_TESTING compile option was still active conflicting with the results in the xml output.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1115,2017-11-08T14:36:45Z,2017-11-08T14:58:34Z,2019-06-07T11:34:21Z,CLOSED,False,33,17,4,https://github.com/AndreaRigoni,Twf fc26 fixvalgrind,7,[],https://github.com/MDSplus/mdsplus/pull/1115,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1115,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1115,2017-11-08T14:36:45Z,2017-11-08T14:58:34Z,2019-06-07T11:34:21Z,CLOSED,False,33,17,4,https://github.com/AndreaRigoni,Twf fc26 fixvalgrind,7,[],https://github.com/MDSplus/mdsplus/pull/1115,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1115#issuecomment-342842834,,sorry I may have messed up the commits .. I'll try to make it again,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1116,2017-11-08T15:17:54Z,2017-11-08T15:53:47Z,2019-06-07T11:34:01Z,MERGED,True,33,17,4,https://github.com/AndreaRigoni,Build: adds a rebuild-tests step before making tests-valgrind,1,[],https://github.com/MDSplus/mdsplus/pull/1116,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1116,If tests-valgrind were started after a standard tests build the -D_TESTING compile option was still active conflicting with the results in the xml output.,If tests-valgrind were started after a standard tests build the -D_TESTING compile option was still active conflicting with the results in the xml output.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1117,2017-11-08T16:16:47Z,2017-11-09T14:49:14Z,2017-11-09T14:49:16Z,MERGED,True,70,38,12,https://github.com/tfredian,Build: add --docker-srcdir option to build and stop using /sources di…,2,[],https://github.com/MDSplus/mdsplus/pull/1117,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1117,"…r in build.sh
This change will add a new --docker-srcdir option for specifying the source
directory using in docker containers that are run by build.sh. It
also changes the default source directory used inside docker from /source
to the actually directory specification of the sources used on the host.
While making the necessary changes to the windows mdsplus.nsi file having
to deal with the removal of the hardcoded /source directory, the url specified
for downloading the sources in the windows installer was fixed to use github
to download a source zip file.","…r in build.sh
This change will add a new --docker-srcdir option for specifying the source
directory using in docker containers that are run by build.sh. It
also changes the default source directory used inside docker from /source
to the actually directory specification of the sources used on the host.
While making the necessary changes to the windows mdsplus.nsi file having
to deal with the removal of the hardcoded /source directory, the url specified
for downloading the sources in the windows installer was fixed to use github
to download a source zip file.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1117,2017-11-08T16:16:47Z,2017-11-09T14:49:14Z,2017-11-09T14:49:16Z,MERGED,True,70,38,12,https://github.com/tfredian,Build: add --docker-srcdir option to build and stop using /sources di…,2,[],https://github.com/MDSplus/mdsplus/pull/1117,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1117#issuecomment-343150494,"…r in build.sh
This change will add a new --docker-srcdir option for specifying the source
directory using in docker containers that are run by build.sh. It
also changes the default source directory used inside docker from /source
to the actually directory specification of the sources used on the host.
While making the necessary changes to the windows mdsplus.nsi file having
to deal with the removal of the hardcoded /source directory, the url specified
for downloading the sources in the windows installer was fixed to use github
to download a source zip file.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1118,2017-11-09T14:53:06Z,2017-11-09T15:56:50Z,2017-11-09T15:57:13Z,CLOSED,False,1,1,1,https://github.com/tfredian,Fix: repair a problem detected by valgrind in TreeRenameNode,1,[],https://github.com/MDSplus/mdsplus/pull/1118,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1118,"Remove a cast from a pointer to an unsigned int into a pointer to
an unsigned char.","Remove a cast from a pointer to an unsigned int into a pointer to
an unsigned char.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1118,2017-11-09T14:53:06Z,2017-11-09T15:56:50Z,2017-11-09T15:57:13Z,CLOSED,False,1,1,1,https://github.com/tfredian,Fix: repair a problem detected by valgrind in TreeRenameNode,1,[],https://github.com/MDSplus/mdsplus/pull/1118,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1118#issuecomment-343199304,"Remove a cast from a pointer to an unsigned int into a pointer to
an unsigned char.",This did not fix the problem. New PR coming soon.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1119,2017-11-09T16:12:18Z,2017-11-09T16:51:44Z,2017-11-09T16:51:47Z,MERGED,True,8,6,1,https://github.com/tfredian,Fix: Fix _TreeRenameNode,1,[],https://github.com/MDSplus/mdsplus/pull/1119,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1119,"The _TreeRenameNode code erroneously made calls to TreeXXX routines instead
of the _TreeXXX version of the routines passing a dbid. This caused problems
in usage in MdsObjects because these calls attempted to perform the function
using the global tree ctx which is wrong. The problem was detected by valgrind
because the TreeGetNci call was actually failing so the variables it was supposed
to be initializing remained uninitialized. There were more instances of misuse
of the TreeXXX variant of the call which this fix also corrects.","The _TreeRenameNode code erroneously made calls to TreeXXX routines instead
of the _TreeXXX version of the routines passing a dbid. This caused problems
in usage in MdsObjects because these calls attempted to perform the function
using the global tree ctx which is wrong. The problem was detected by valgrind
because the TreeGetNci call was actually failing so the variables it was supposed
to be initializing remained uninitialized. There were more instances of misuse
of the TreeXXX variant of the call which this fix also corrects.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1120,2017-11-09T17:30:21Z,2017-11-09T23:05:15Z,2017-11-09T23:05:21Z,MERGED,True,2,8,2,https://github.com/tfredian,Build: Exclude valgrind tracing of certain programs,1,[],https://github.com/MDSplus/mdsplus/pull/1120,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1120,Combine --trace-children-skip options in a single option for valgrind.,Combine --trace-children-skip options in a single option for valgrind.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1121,2017-11-09T21:17:21Z,2017-11-13T14:35:55Z,2019-11-25T10:21:06Z,CLOSED,False,14,8,1,https://github.com/joshStillerman,Jas change connection lock,2,[],https://github.com/MDSplus/mdsplus/pull/1121,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1121,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1122,2017-11-09T21:54:23Z,2017-11-13T14:35:33Z,2017-11-13T14:35:33Z,CLOSED,False,25,12,1,https://github.com/tfredian,Fix: Fix mdstcpip exit hander,4,[],https://github.com/MDSplus/mdsplus/pull/1122,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1122,"The mdstcpip exit handler in connections seems to be getting into
a race condition. This should prevent that.","The mdstcpip exit handler in connections seems to be getting into
a race condition. This should prevent that.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1123,2017-11-10T17:02:44Z,2017-11-13T12:59:55Z,2017-11-20T17:15:38Z,MERGED,True,2,0,1,https://github.com/GabrieleManduchi,Gm fix xtreedefaultresample,1,[],https://github.com/MDSplus/mdsplus/pull/1123,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1123,Fix possible negative array index in XTreeDefaultResample,Fix possible negative array index in XTreeDefaultResample,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1123,2017-11-10T17:02:44Z,2017-11-13T12:59:55Z,2017-11-20T17:15:38Z,MERGED,True,2,0,1,https://github.com/GabrieleManduchi,Gm fix xtreedefaultresample,1,[],https://github.com/MDSplus/mdsplus/pull/1123,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1123#issuecomment-343882152,Fix possible negative array index in XTreeDefaultResample,"I rebased it to current alpha. as it seems in the end you just added these two lines.
It might be best to always start your branch form the newest alpha.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1125,2017-11-15T14:49:41Z,2017-11-16T15:25:45Z,2017-11-16T15:25:52Z,MERGED,True,16,16,1,https://github.com/tfredian,Fix: convert argument to ctypes c_int32() constructor to int,1,[],https://github.com/MDSplus/mdsplus/pull/1125,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1125,"When constructing ctype data instances such as c_int32 it is necessary
to use a python integer as the argument or it produces an error. Using
python bridges like that provided by matlab which defaults to creating
floating point values for integer constants things like shot numbers and
segment indexes must be converted to python integers to avoid errors
constructing the c_int32 instances used for calling the MDSplus libraries.
This change explicitly converts the arguments to integers before constructing
the c_int32 instances.","When constructing ctype data instances such as c_int32 it is necessary
to use a python integer as the argument or it produces an error. Using
python bridges like that provided by matlab which defaults to creating
floating point values for integer constants things like shot numbers and
segment indexes must be converted to python integers to avoid errors
constructing the c_int32 instances used for calling the MDSplus libraries.
This change explicitly converts the arguments to integers before constructing
the c_int32 instances.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1127,2017-11-16T18:13:54Z,2017-11-17T15:55:31Z,2017-11-17T15:55:42Z,MERGED,True,446,397,2,https://github.com/tfredian,Fix: Restore MDSplus python exception superclasses,2,[],https://github.com/MDSplus/mdsplus/pull/1127,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1127,"The MDSplus python exception superclasses were changed to begin
with an underscore to prevent them from being exported but it is
sometimes useful to catch a class of exceptions by using the superclass
name. Some existing applications were doing this and the change to
hide these superclasses broke these applications. This change will
restore their visibility making them useable in user applications.","The MDSplus python exception superclasses were changed to begin
with an underscore to prevent them from being exported but it is
sometimes useful to catch a class of exceptions by using the superclass
name. Some existing applications were doing this and the change to
hide these superclasses broke these applications. This change will
restore their visibility making them useable in user applications.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1128,2017-11-18T15:11:49Z,2017-11-19T18:27:19Z,2017-11-19T18:27:19Z,MERGED,True,28,16,1,https://github.com/zack-vii,Zck fix localtime r,3,[],https://github.com/MDSplus/mdsplus/pull/1128,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1128,fixes the race condition on tmval by using localtime_r,fixes the race condition on tmval by using localtime_r,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1128,2017-11-18T15:11:49Z,2017-11-19T18:27:19Z,2017-11-19T18:27:19Z,MERGED,True,28,16,1,https://github.com/zack-vii,Zck fix localtime r,3,[],https://github.com/MDSplus/mdsplus/pull/1128,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1128#issuecomment-345449288,fixes the race condition on tmval by using localtime_r,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1128,2017-11-18T15:11:49Z,2017-11-19T18:27:19Z,2017-11-19T18:27:19Z,MERGED,True,28,16,1,https://github.com/zack-vii,Zck fix localtime r,3,[],https://github.com/MDSplus/mdsplus/pull/1128,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1128#issuecomment-345472343,fixes the race condition on tmval by using localtime_r,"i am out of battery, if someone can pick it up. windows is not blessed with localtime_r, we should just move the lines closer together and ifdef _WIN32 it between locks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1128,2017-11-18T15:11:49Z,2017-11-19T18:27:19Z,2017-11-19T18:27:19Z,MERGED,True,28,16,1,https://github.com/zack-vii,Zck fix localtime r,3,[],https://github.com/MDSplus/mdsplus/pull/1128,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1128#issuecomment-345523563,fixes the race condition on tmval by using localtime_r,"Couple questions....

With the new code if you store a value in the node does dir/full on that node show the correct time? There are some differences in localtime and localtime_r related to the daylight and timezone values which are used in the vmstime calculation and it is difficult to tell from the documentation whether the fact that localtime_r doesn't update daylight and timezone values if it will work as before.
I got some hits on localtime_r and mingw64 and it seems that localtime_r should be available when doing the windows build. Was the compile getting undefined refs before adding the #ifdef _WIN32 block of code?
Some of the recent build failures were caused by a problem with jenkins bringing all the slave executors online after jenkins was restarted. I suspect an update to jenkins may have changed how it verifies the host certificates and for some reason it was getting errors when ssh'ing to the slaves. They are all back online now.
This PR did seem to fix the race condition with the time struct so unless this behaves differently with the switch from localtime to localtime_r it can be merged.
There are still two race conditions left to fix which seem to be related to TdiDoTask.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1128,2017-11-18T15:11:49Z,2017-11-19T18:27:19Z,2017-11-19T18:27:19Z,MERGED,True,28,16,1,https://github.com/zack-vii,Zck fix localtime r,3,[],https://github.com/MDSplus/mdsplus/pull/1128,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1128#issuecomment-345525373,fixes the race condition on tmval by using localtime_r,"Well:

There is no indication why localtime_r should behave differently from localtime apart from the fact that it is storing the 'struct tm' output in a caller allocated memory instead of a static thread shared variable. it is a posix reentrant replacement for localtime.
it might be included in some other/newer version of the mingw64 but yes the build on windows failed because localtime_r was not defined.
i noticed them being down. thanks for getting them back online.
:)
I searched for other methods of that kind xyz_r and we are using them a few of them in any places. i will see to replace them with the threadsafe versions where necessary on monday. also i can have a look on the tdidotask. do you have the valgrind results.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1128,2017-11-18T15:11:49Z,2017-11-19T18:27:19Z,2017-11-19T18:27:19Z,MERGED,True,28,16,1,https://github.com/zack-vii,Zck fix localtime r,3,[],https://github.com/MDSplus/mdsplus/pull/1128,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/1128#issuecomment-345525921,fixes the race condition on tmval by using localtime_r,"I am concerned about the following:
'''
The  localtime() function converts the calendar time timep to broken-down time repâ€�
resentation, expressed relative to the user's  specified  timezone.   The  function
acts  as if it called tzset(3) and sets the external variables tzname with informaâ€�
tion about the current timezone, timezone with the difference  between  Coordinated
Universal  Time (UTC) and local standard time in seconds, and daylight to a nonzero
value if daylight savings time rules apply during  some  part  of  the  year.   The
return  value points to a statically allocated struct which might be overwritten by
subsequent calls to any of the date and time functions.  The localtime_r() function
does  the  same,  but  stores  the data in a user-supplied struct.  It need not set
tzname, timezone, and daylight.
'''
and daylight and timezone are used in the calculation. I can test this to make sure it behaves the same on Monday before merging this PR.
The other race conditions can be found in the same valgrind info I sent which contained this time race condition. There were 3 race conditions listed. This was the first and the other two are TdiDoTask related.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1128,2017-11-18T15:11:49Z,2017-11-19T18:27:19Z,2017-11-19T18:27:19Z,MERGED,True,28,16,1,https://github.com/zack-vii,Zck fix localtime r,3,[],https://github.com/MDSplus/mdsplus/pull/1128,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1128#issuecomment-345530655,fixes the race condition on tmval by using localtime_r,"hm good point.. it probably needs the tzset() initialization.
i made the it into a get_tz_offset method",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1129,2017-11-20T10:38:37Z,2017-11-20T14:39:21Z,2017-11-20T14:40:30Z,MERGED,True,226,137,35,https://github.com/zack-vii,"Fix: jTraverser2 added CTX to fix TreeNotOpen, improved getLocal",1,[],https://github.com/MDSplus/mdsplus/pull/1129,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1129,seems if Signal's RAW part is $Missing instead of null multiplication is broken (int16 signal times float results in int16),seems if Signal's RAW part is $Missing instead of null multiplication is broken (int16 signal times float results in int16),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1131,2017-11-20T14:41:10Z,2017-11-20T16:11:05Z,2017-11-20T21:32:45Z,MERGED,True,19,13,2,https://github.com/zack-vii,Fix: race condition on task_xd cleanup when using Worker,2,[],https://github.com/MDSplus/mdsplus/pull/1131,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1131,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1134,2017-11-20T15:48:36Z,2017-11-21T15:45:36Z,2017-12-07T13:21:43Z,MERGED,True,42,64,3,https://github.com/GabrieleManduchi,Gm fix reset scales,7,[],https://github.com/MDSplus/mdsplus/pull/1134,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1134,"Fixed broken reset scales
Optimized update queue management by removing older pending requests for the same signal","Fixed broken reset scales
Optimized update queue management by removing older pending requests for the same signal",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1134,2017-11-20T15:48:36Z,2017-11-21T15:45:36Z,2017-12-07T13:21:43Z,MERGED,True,42,64,3,https://github.com/GabrieleManduchi,Gm fix reset scales,7,[],https://github.com/MDSplus/mdsplus/pull/1134,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1134#issuecomment-345759087,"Fixed broken reset scales
Optimized update queue management by removing older pending requests for the same signal",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1135,2017-11-20T17:05:55Z,2017-11-20T20:25:51Z,2017-11-20T20:25:57Z,MERGED,True,10,12,3,https://github.com/tfredian,Update jTraverser.template,2,[],https://github.com/MDSplus/mdsplus/pull/1135,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1135,Fix: The jTraverser.template has been updated to the jScope fixes for finding lib dir,Fix: The jTraverser.template has been updated to the jScope fixes for finding lib dir,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1135,2017-11-20T17:05:55Z,2017-11-20T20:25:51Z,2017-11-20T20:25:57Z,MERGED,True,10,12,3,https://github.com/tfredian,Update jTraverser.template,2,[],https://github.com/MDSplus/mdsplus/pull/1135,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1135#issuecomment-345810784,Fix: The jTraverser.template has been updated to the jScope fixes for finding lib dir,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1136,2017-11-20T20:08:45Z,2017-11-20T20:57:13Z,2017-11-20T20:57:20Z,MERGED,True,99,378,17,https://github.com/zack-vii,Zck win32 pthread features,7,[],https://github.com/MDSplus/mdsplus/pull/1136,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1136,"enables some pthread dependent functionality on windows machines.

TdiDoTask with timeout
cleanup after cancelation
etc","enables some pthread dependent functionality on windows machines.

TdiDoTask with timeout
cleanup after cancelation
etc",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1137,2017-11-20T21:00:03Z,2017-11-20T21:43:09Z,2018-01-26T14:55:15Z,MERGED,True,7,84,11,https://github.com/zack-vii,Fix: remove __VMS code,1,[],https://github.com/MDSplus/mdsplus/pull/1137,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1137,removed the vms specific code,removed the vms specific code,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1138,2017-11-20T21:56:10Z,2017-11-21T13:00:29Z,2018-05-29T18:39:52Z,CLOSED,False,1,1,1,https://github.com/tfredian,Fix: Repair memory leak in mdstcpip on fc26,1,[],https://github.com/MDSplus/mdsplus/pull/1138,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1138,Always call freeaddrinfo if getaddrinfo is called.,Always call freeaddrinfo if getaddrinfo is called.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1138,2017-11-20T21:56:10Z,2017-11-21T13:00:29Z,2018-05-29T18:39:52Z,CLOSED,False,1,1,1,https://github.com/tfredian,Fix: Repair memory leak in mdstcpip on fc26,1,[],https://github.com/MDSplus/mdsplus/pull/1138,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1138#issuecomment-346019441,Always call freeaddrinfo if getaddrinfo is called.,Did not fix leaks.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1139,2017-11-21T13:42:48Z,2017-11-21T14:54:15Z,2017-11-21T14:54:18Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Update mingw library version in Windows installers,1,[],https://github.com/MDSplus/mdsplus/pull/1139,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1139,"The upgrade of the mingw packages now used to build MDSplus for windows
uses a newer version of the gfortran library so the installer needs
to change the file name of this library.","The upgrade of the mingw packages now used to build MDSplus for windows
uses a newer version of the gfortran library so the installer needs
to change the file name of this library.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1140,2017-11-21T14:42:53Z,2017-11-21T15:13:50Z,2017-12-07T13:21:46Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Update mingw library version in Windows installers,1,[],https://github.com/MDSplus/mdsplus/pull/1140,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1140,"The upgrade of the mingw packages now used to build MDSplus for windows
uses a newer version of the gfortran library so the installer needs
to change the file name of this library.","The upgrade of the mingw packages now used to build MDSplus for windows
uses a newer version of the gfortran library so the installer needs
to change the file name of this library.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1141,2017-11-21T21:05:23Z,2017-11-22T14:37:29Z,2017-11-22T14:37:44Z,MERGED,True,169,126,7,https://github.com/zack-vii,Zck valgrind fs26 32bit,8,[],https://github.com/MDSplus/mdsplus/pull/1141,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1141,"removed GETHOST__ macros from pthread_port
fixed fc26 valgrind on 32bit by suppressing third party issues (e.g. python and fork)
improved cancel-ability by adding more FREE_ON_EXIT
it also cleans up the MDSConnectionTest with predictable ports as tests are now running on isolated machines","removed GETHOST__ macros from pthread_port
fixed fc26 valgrind on 32bit by suppressing third party issues (e.g. python and fork)
improved cancel-ability by adding more FREE_ON_EXIT
it also cleans up the MDSConnectionTest with predictable ports as tests are now running on isolated machines",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1141,2017-11-21T21:05:23Z,2017-11-22T14:37:29Z,2017-11-22T14:37:44Z,MERGED,True,169,126,7,https://github.com/zack-vii,Zck valgrind fs26 32bit,8,[],https://github.com/MDSplus/mdsplus/pull/1141,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1141#issuecomment-346176413,"removed GETHOST__ macros from pthread_port
fixed fc26 valgrind on 32bit by suppressing third party issues (e.g. python and fork)
improved cancel-ability by adding more FREE_ON_EXIT
it also cleans up the MDSConnectionTest with predictable ports as tests are now running on isolated machines",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1141,2017-11-21T21:05:23Z,2017-11-22T14:37:29Z,2017-11-22T14:37:44Z,MERGED,True,169,126,7,https://github.com/zack-vii,Zck valgrind fs26 32bit,8,[],https://github.com/MDSplus/mdsplus/pull/1141,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1141#issuecomment-346368236,"removed GETHOST__ macros from pthread_port
fixed fc26 valgrind on 32bit by suppressing third party issues (e.g. python and fork)
improved cancel-ability by adding more FREE_ON_EXIT
it also cleans up the MDSConnectionTest with predictable ports as tests are now running on isolated machines",i think suppression is the way to go will be a follow up,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1143,2017-11-22T15:52:21Z,2017-11-22T17:30:22Z,2017-12-07T13:21:21Z,MERGED,True,87,28,1,https://github.com/tfredian,Fix: Repair debian installer scripts,2,[],https://github.com/MDSplus/mdsplus/pull/1143,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1143,"Earlier consolidation of redhat and debian installer scripts caused
some problems with debian based platforms because the scripts were
using macros defined only by redhat based installers.","Earlier consolidation of redhat and debian installer scripts caused
some problems with debian based platforms because the scripts were
using macros defined only by redhat based installers.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1144,2017-11-22T16:27:50Z,2017-11-22T17:30:44Z,2017-12-07T13:21:20Z,MERGED,True,54,16,1,https://github.com/tfredian,Fix: Repare installer scripts,1,[],https://github.com/MDSplus/mdsplus/pull/1144,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1144,"When consoladating the installer scripts for redhat and debian
packaging there were remaining references to macros that are only
defined on redhat. This change fixes this problem.
Fixes #1142","When consoladating the installer scripts for redhat and debian
packaging there were remaining references to macros that are only
defined on redhat. This change fixes this problem.
Fixes #1142",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1145,2017-11-22T17:04:43Z,2017-11-22T19:07:21Z,2017-11-22T19:07:29Z,MERGED,True,89,68,17,https://github.com/zack-vii,Zck fc26 sanitizer,6,[],https://github.com/MDSplus/mdsplus/pull/1145,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1145,fixes compiler issues raised by the up to date sanitizer of fc26,fixes compiler issues raised by the up to date sanitizer of fc26,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1145,2017-11-22T17:04:43Z,2017-11-22T19:07:21Z,2017-11-22T19:07:29Z,MERGED,True,89,68,17,https://github.com/zack-vii,Zck fc26 sanitizer,6,[],https://github.com/MDSplus/mdsplus/pull/1145,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1145#issuecomment-346435310,fixes compiler issues raised by the up to date sanitizer of fc26,I copied the UdpEvent Tests to my windows machine and tested them there the new handling seemed to worked as all tests have passed,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1146,2017-11-23T01:54:38Z,2017-11-23T01:56:29Z,2018-01-26T14:55:14Z,CLOSED,False,90,69,18,https://github.com/zack-vii,Zck fc26 sanitizer,7,[],https://github.com/MDSplus/mdsplus/pull/1146,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1146,"missing commit from pr #1141
fixed sanitizer issues on fc26","missing commit from pr #1141
fixed sanitizer issues on fc26",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1147,2017-11-23T02:00:38Z,2017-11-27T13:27:01Z,2017-11-27T13:27:06Z,MERGED,True,383,274,21,https://github.com/zack-vii,User level installer for Windows,10,[],https://github.com/MDSplus/mdsplus/pull/1147,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1147,"Project goals:

cleanup windows installation
enable UserMode installation","Project goals:

cleanup windows installation
enable UserMode installation",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1147,2017-11-23T02:00:38Z,2017-11-27T13:27:01Z,2017-11-27T13:27:06Z,MERGED,True,383,274,21,https://github.com/zack-vii,User level installer for Windows,10,[],https://github.com/MDSplus/mdsplus/pull/1147,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1147#issuecomment-346519420,"Project goals:

cleanup windows installation
enable UserMode installation","On Jenkins, fc26 address sanitizer complains about ptrace:
====LeakSanitizer has encountered a fatal error.
====HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
====HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)
I cannot reproduce this on my home docker though. ??
=================
fixed by adding --privileged to docker call",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1147,2017-11-23T02:00:38Z,2017-11-27T13:27:01Z,2017-11-27T13:27:06Z,MERGED,True,383,274,21,https://github.com/zack-vii,User level installer for Windows,10,[],https://github.com/MDSplus/mdsplus/pull/1147,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1147#issuecomment-346791597,"Project goals:

cleanup windows installation
enable UserMode installation",Installer works just fine but the suppression does not,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1147,2017-11-23T02:00:38Z,2017-11-27T13:27:01Z,2017-11-27T13:27:06Z,MERGED,True,383,274,21,https://github.com/zack-vii,User level installer for Windows,10,[],https://github.com/MDSplus/mdsplus/pull/1147,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1147#issuecomment-346836774,"Project goals:

cleanup windows installation
enable UserMode installation",fc26 takes more than 40 minutes to finish all valgrind and sanitizer tests on 64 and 32 bit. no valgrind issues have been reported in the last build and since the GLIB version on fc26 seems to be buggy anyway we should probably leave the valgrind to fc25 and take advantage of the compiler warnings added by sanitizer.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1147,2017-11-23T02:00:38Z,2017-11-27T13:27:01Z,2017-11-27T13:27:06Z,MERGED,True,383,274,21,https://github.com/zack-vii,User level installer for Windows,10,[],https://github.com/MDSplus/mdsplus/pull/1147,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1147#issuecomment-346837335,"Project goals:

cleanup windows installation
enable UserMode installation",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1147,2017-11-23T02:00:38Z,2017-11-27T13:27:01Z,2017-11-27T13:27:06Z,MERGED,True,383,274,21,https://github.com/zack-vii,User level installer for Windows,10,[],https://github.com/MDSplus/mdsplus/pull/1147,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1147#issuecomment-346840029,"Project goals:

cleanup windows installation
enable UserMode installation","RfxDevices MitDevices W7xDevices are missing and python's call results in MDSplusERROR
mayby python3.6 related when handling the string list",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1149,2017-11-27T20:13:52Z,2017-11-27T21:46:25Z,2017-11-27T21:46:33Z,MERGED,True,20,635,25,https://github.com/tfredian,Build: Remove VMS specific code,1,[],https://github.com/MDSplus/mdsplus/pull/1149,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1149,"This should remove all cases in the code that is left over support
for the VMS platform. A couple dummy tdi functions,
vax() and vms(), have been retained to avoid breaking any  site specific
tdi functions or application that might still refer to them.
Fixes #1130","This should remove all cases in the code that is left over support
for the VMS platform. A couple dummy tdi functions,
vax() and vms(), have been retained to avoid breaking any  site specific
tdi functions or application that might still refer to them.
Fixes #1130",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1150,2017-11-27T21:48:20Z,2017-11-28T13:23:04Z,2017-11-28T14:48:24Z,MERGED,True,170,217,22,https://github.com/zack-vii,Zck python3 fix,10,[],https://github.com/MDSplus/mdsplus/pull/1150,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1150,fixes most of the problems with python3,fixes most of the problems with python3,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1152,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices","fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-347881106,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices","It is on my list for this AM
…
On 11/29/17 9:37 AM, Tom Fredian wrote:

 ***@***.**** commented on this pull request.

 Wow. Quite a lot of work. I think Josh and Gabriele should review the
 changes to MitDevice and RfxDevices as they wrote most of that code.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#1152 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZbJB8P60tbKbHl0_KKgFkPv0OpPDks5s7Ww6gaJpZM4Qt1gu>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-347885191,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices","In mine, too

                 Gabriele
…
On 29/11/2017 15:44, Josh Stillerman wrote:
 It is on my list for this AM



 On 11/29/17 9:37 AM, Tom Fredian wrote:
 >
 > ***@***.**** commented on this pull request.
 >
 > Wow. Quite a lot of work. I think Josh and Gabriele should review the
 > changes to MitDevice and RfxDevices as they wrote most of that code.
 >
 > —
 > You are receiving this because your review was requested.
 > Reply to this email directly, view it on GitHub
 >
 <#1152 (review)>,

 > or mute the thread
 >
 <https://github.com/notifications/unsubscribe-auth/AHHQZbJB8P60tbKbHl0_KKgFkPv0OpPDks5s7Ww6gaJpZM4Qt1gu>.
 >

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#1152 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AISySEzkbz2ukSkUjDHgEdooar1XEjgYks5s7W2vgaJpZM4Qt1gu>.


-- 
Gabriele Manduchi

Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-347894818,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices","I confirm, it seems that the pydevices/RfxDevices/FLIRSC65X.py there is a paste more...
The remaining for RFX are ok for me (you are the user of device CYGNET so I assume the changes you made are the correct ones)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-347932107,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices","@joshStillerman : yes that was teh idea.. i was thinking of splitting this pr into fractions: general, RfxDevices, MitDevices. In case you need more time to think about it. i can do so. and we can merge the changes to the device drivers in a separate pr. just let me know",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-347945213,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices",in fact i am doing it right now. so feel free to test your devices on python2 and 3 eventually take over the prs. this pr will drop the changes to pydevices/MitDevices and pydevices/RfxDevices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-347950381,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices","Sounds good.
…
On 11/29/17 1:04 PM, zack-vii wrote:

 in fact i am doing it right now. so feel free to test your devices on
 python2 and 3 eventually take over the prs. this pr will drop the
 changes to pydevices/MitDevices and pydevices/RfxDevices

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#1152 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZRbP7gCz4yZuEelVFhKFUfjhSrP6ks5s7ZyzgaJpZM4Qt1gu>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-348695936,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices",could you approve this pr. I removed tge changes that I made to the pydevice drivers.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/joshStillerman,9,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-348699510,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices","I approved it, and updated branch.  It is testing again.
…
On 12/2/17 9:35 AM, zack-vii wrote:

 could you approve this pr. I removed tge changes that I made to the
 pydevice drivers.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#1152 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZUrFANAwmguj4WIiN-egoZDEXHwbks5s8WAWgaJpZM4Qt1gu>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1152,2017-11-28T20:06:17Z,2017-12-04T13:12:50Z,2018-01-26T14:55:10Z,MERGED,True,418,374,32,https://github.com/zack-vii,Zck python3 devices,8,[],https://github.com/MDSplus/mdsplus/pull/1152,https://github.com/tfredian,10,https://github.com/MDSplus/mdsplus/pull/1152#issuecomment-348726946,"fixes/upgrades tests to work under python3
generically updated pydevices to support python3 (indent and 2to3.py)
fixed several obvious problem with MitDevices and RfxDevices",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1153,2017-11-29T15:23:20Z,2017-11-29T16:05:24Z,2017-12-07T13:21:16Z,MERGED,True,34,14,1,https://github.com/tfredian,Fix: xyzDevices erroneously removing pydevice directories,1,[],https://github.com/MDSplus/mdsplus/pull/1153,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1153,"The post install scripts are finding and removing the device
directories in /usr/local/mdsplus/pydevices instead of removing the
device packages from the python site-packages directory to remove these
older packages. This fix should move the package removal to happen in
a pre install script.","The post install scripts are finding and removing the device
directories in /usr/local/mdsplus/pydevices instead of removing the
device packages from the python site-packages directory to remove these
older packages. This fix should move the package removal to happen in
a pre install script.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1154,2017-11-29T17:34:40Z,2017-12-05T12:56:13Z,2017-12-05T12:56:21Z,MERGED,True,341,387,45,https://github.com/tfredian,"Build: Turn on --enable-werror for release, optimized, build",9,[],https://github.com/MDSplus/mdsplus/pull/1154,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1154,"This change will enable -Werror for all builds including release
builds with -O3 compiler optmization. Some platforms are generating
unused result warning when certain functions are used and the return
value is not used. At some point we should investigate these warnings
and properly check the return values and take the appropriate action
if the return is not what is expected. For now, this change also
adds a --disable-wreturns configure option and the builds use it so that
these warnings will ignored.","This change will enable -Werror for all builds including release
builds with -O3 compiler optmization. Some platforms are generating
unused result warning when certain functions are used and the return
value is not used. At some point we should investigate these warnings
and properly check the return values and take the appropriate action
if the return is not what is expected. For now, this change also
adds a --disable-wreturns configure option and the builds use it so that
these warnings will ignored.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1154,2017-11-29T17:34:40Z,2017-12-05T12:56:13Z,2017-12-05T12:56:21Z,MERGED,True,341,387,45,https://github.com/tfredian,"Build: Turn on --enable-werror for release, optimized, build",9,[],https://github.com/MDSplus/mdsplus/pull/1154,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1154#issuecomment-348009517,"This change will enable -Werror for all builds including release
builds with -O3 compiler optmization. Some platforms are generating
unused result warning when certain functions are used and the return
value is not used. At some point we should investigate these warnings
and properly check the return values and take the appropriate action
if the return is not what is expected. For now, this change also
adds a --disable-wreturns configure option and the builds use it so that
these warnings will ignored.",Needs some work for latest windows build with new fc26 warnings. Updates to PR to follow.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1155,2017-11-29T18:14:51Z,2019-09-06T15:08:04Z,2021-04-24T12:41:25Z,CLOSED,False,986,978,22,https://github.com/zack-vii,Zck python3 rfxdevices,7,[],https://github.com/MDSplus/mdsplus/pull/1155,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1155,changes to pydevices/RfxDevices previously in #1152,changes to pydevices/RfxDevices previously in #1152,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1155,2017-11-29T18:14:51Z,2019-09-06T15:08:04Z,2021-04-24T12:41:25Z,CLOSED,False,986,978,22,https://github.com/zack-vii,Zck python3 rfxdevices,7,[],https://github.com/MDSplus/mdsplus/pull/1155,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1155#issuecomment-348427360,changes to pydevices/RfxDevices previously in #1152,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1156,2017-11-29T18:30:13Z,2019-09-06T15:08:20Z,2021-04-24T12:41:26Z,CLOSED,False,1352,1283,26,https://github.com/zack-vii,Zck python3 mitdevices,7,[],https://github.com/MDSplus/mdsplus/pull/1156,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1156,changes to pydevices/MitDevices previously in #1152,changes to pydevices/MitDevices previously in #1152,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1157,2017-11-29T19:08:41Z,2017-11-29T21:05:07Z,2017-12-01T15:22:09Z,MERGED,True,38,28,1,https://github.com/tfredian,Twf fix installer scripts again,2,[],https://github.com/MDSplus/mdsplus/pull/1157,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1157,"The problem with the current scripts is due to the unexpected order
of the execution of the scripts when installing, upgrading or removing
rpm packages. It turns out that the uninstall scripts are performed
after the install scripts. The uninstall scripts were attempting to
delete the pyc modules in the pydevice subdirectories by removing
the entire subdirectory. Since on redhat systems the uninstall scripts
run after the install scripts this was removing the python device directory
just installed. On redhat systems the scripts are called with an argument
indicating if the package is being removed or updated. This argument will
be used to avoid deleting the directory if this operation was an update.","The problem with the current scripts is due to the unexpected order
of the execution of the scripts when installing, upgrading or removing
rpm packages. It turns out that the uninstall scripts are performed
after the install scripts. The uninstall scripts were attempting to
delete the pyc modules in the pydevice subdirectories by removing
the entire subdirectory. Since on redhat systems the uninstall scripts
run after the install scripts this was removing the python device directory
just installed. On redhat systems the scripts are called with an argument
indicating if the package is being removed or updated. This argument will
be used to avoid deleting the directory if this operation was an update.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1158,2017-11-30T13:19:23Z,2017-12-01T15:21:58Z,2017-12-01T15:22:08Z,CLOSED,False,38,28,1,https://github.com/tfredian,Twf fix installer scripts again,2,[],https://github.com/MDSplus/mdsplus/pull/1158,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1158,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1159,2017-12-06T15:25:32Z,2017-12-07T22:15:35Z,2017-12-07T22:15:40Z,MERGED,True,36,3,1,https://github.com/tfredian,Docs: Add deploy/build.sh intro,2,[],https://github.com/MDSplus/mdsplus/pull/1159,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1159,"This adds some information about building MDSplus for various operating systems using the
deploy/build.sh script.","This adds some information about building MDSplus for various operating systems using the
deploy/build.sh script.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1160,2017-12-07T17:26:54Z,2017-12-07T21:09:02Z,2017-12-14T13:10:07Z,MERGED,True,22,8,10,https://github.com/tfredian,Tests: Fix test timeouts,3,[],https://github.com/MDSplus/mdsplus/pull/1160,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1160,"Pass TEST_TIMEUNIT environment variable into docker and also
change the sanitize TEST_TIMEUNIT to set the factor to be 5 times
what TEST_TIMEUNIT env is set to or just 5 if it is not defined.","Pass TEST_TIMEUNIT environment variable into docker and also
change the sanitize TEST_TIMEUNIT to set the factor to be 5 times
what TEST_TIMEUNIT env is set to or just 5 if it is not defined.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1161,2017-12-08T14:27:24Z,2017-12-08T15:27:32Z,2017-12-08T15:27:38Z,MERGED,True,4,0,1,https://github.com/tfredian,Feature: Enable data(build_opaque(...)),1,[],https://github.com/MDSplus/mdsplus/pull/1161,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1161,This should enable the used of data() on opaque objects.,This should enable the used of data() on opaque objects.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1162,2017-12-08T17:35:21Z,2017-12-08T19:05:57Z,2018-01-26T14:55:07Z,MERGED,True,174,96,4,https://github.com/zack-vii,Zck python tree open,7,[],https://github.com/MDSplus/mdsplus/pull/1162,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1162,"adds possibility to temporarily change tree_path when instantiating Tree
fixed some TreeNotOpen issues when reading segmented data with node references
adds open as method to Tree
fixes getImage for python3
adds some tests to segmentUnitTest addressing the updateSegment method","adds possibility to temporarily change tree_path when instantiating Tree
fixed some TreeNotOpen issues when reading segmented data with node references
adds open as method to Tree
fixes getImage for python3
adds some tests to segmentUnitTest addressing the updateSegment method",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1162,2017-12-08T17:35:21Z,2017-12-08T19:05:57Z,2018-01-26T14:55:07Z,MERGED,True,174,96,4,https://github.com/zack-vii,Zck python tree open,7,[],https://github.com/MDSplus/mdsplus/pull/1162,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1162#issuecomment-350330638,"adds possibility to temporarily change tree_path when instantiating Tree
fixed some TreeNotOpen issues when reading segmented data with node references
adds open as method to Tree
fixes getImage for python3
adds some tests to segmentUnitTest addressing the updateSegment method",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1163,2017-12-10T17:14:45Z,2017-12-13T12:54:27Z,2018-01-26T14:55:05Z,MERGED,True,707,450,32,https://github.com/zack-vii,Zck mdsip lock,19,[],https://github.com/MDSplus/mdsplus/pull/1163,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1163,"This improves the IoRoutine business. however, it would break user plugins if the even exist. but we should encourage the users to update their plugins or even integrate them with mdsplus.
Also it tests IP6 and GSI, however, we might need to excluded the latter on some os' .","This improves the IoRoutine business. however, it would break user plugins if the even exist. but we should encourage the users to update their plugins or even integrate them with mdsplus.
Also it tests IP6 and GSI, however, we might need to excluded the latter on some os' .",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1163,2017-12-10T17:14:45Z,2017-12-13T12:54:27Z,2018-01-26T14:55:05Z,MERGED,True,707,450,32,https://github.com/zack-vii,Zck mdsip lock,19,[],https://github.com/MDSplus/mdsplus/pull/1163,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1163#issuecomment-350926508,"This improves the IoRoutine business. however, it would break user plugins if the even exist. but we should encourage the users to update their plugins or even integrate them with mdsplus.
Also it tests IP6 and GSI, however, we might need to excluded the latter on some os' .","alpine64 did not start its test at first. but otherwise the pr should be fine and one could do a ""retest this please"".
TODO: find all internal calls to mdsip_connection.h methods that are still using id and replace them with safer versions and FindConnectionWithLock.


The locking mechanism is a condition per connection and a global lock.


the state field of the connection signals usage


The DisconnectConnection method removes the connection from the ConnectionList before destruction.
the state CON_DISCONNECT will prevent other threads from using the connection again.
This allows for a safe destruction of the connection object.


NewConnection does not add the Connection to the ConnectionList before its authentication is successful.


MDsConnectionTest tests local(Tunnel), and both versions of tcp and udt (v4, v6)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1163,2017-12-10T17:14:45Z,2017-12-13T12:54:27Z,2018-01-26T14:55:05Z,MERGED,True,707,450,32,https://github.com/zack-vii,Zck mdsip lock,19,[],https://github.com/MDSplus/mdsplus/pull/1163,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1163#issuecomment-351080497,"This improves the IoRoutine business. however, it would break user plugins if the even exist. but we should encourage the users to update their plugins or even integrate them with mdsplus.
Also it tests IP6 and GSI, however, we might need to excluded the latter on some os' .",guide valgrind to use /usr/lib64/valgrind for VALGRIND_LIB as it contains x86 libs as well,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1163,2017-12-10T17:14:45Z,2017-12-13T12:54:27Z,2018-01-26T14:55:05Z,MERGED,True,707,450,32,https://github.com/zack-vii,Zck mdsip lock,19,[],https://github.com/MDSplus/mdsplus/pull/1163,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1163#issuecomment-351180951,"This improves the IoRoutine business. however, it would break user plugins if the even exist. but we should encourage the users to update their plugins or even integrate them with mdsplus.
Also it tests IP6 and GSI, however, we might need to excluded the latter on some os' .",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1163,2017-12-10T17:14:45Z,2017-12-13T12:54:27Z,2018-01-26T14:55:05Z,MERGED,True,707,450,32,https://github.com/zack-vii,Zck mdsip lock,19,[],https://github.com/MDSplus/mdsplus/pull/1163,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1163#issuecomment-351225453,"This improves the IoRoutine business. however, it would break user plugins if the even exist. but we should encourage the users to update their plugins or even integrate them with mdsplus.
Also it tests IP6 and GSI, however, we might need to excluded the latter on some os' .",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1164,2017-12-11T17:39:11Z,2017-12-11T20:36:10Z,2017-12-11T20:36:17Z,MERGED,True,1,2,2,https://github.com/tfredian,Build: Rever --enable-werror for release builds,1,[],https://github.com/MDSplus/mdsplus/pull/1164,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1164,"There are still unresolved compiler warnings when compiling
with optimization. Until they are resolved we cannot use --enable-werror.","There are still unresolved compiler warnings when compiling
with optimization. Until they are resolved we cannot use --enable-werror.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1164,2017-12-11T17:39:11Z,2017-12-11T20:36:10Z,2017-12-11T20:36:17Z,MERGED,True,1,2,2,https://github.com/tfredian,Build: Rever --enable-werror for release builds,1,[],https://github.com/MDSplus/mdsplus/pull/1164,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1164#issuecomment-350833050,"There are still unresolved compiler warnings when compiling
with optimization. Until they are resolved we cannot use --enable-werror.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1165,2017-12-13T14:45:15Z,2017-12-13T15:46:13Z,2017-12-14T13:10:02Z,MERGED,True,4,0,1,https://github.com/tfredian,Fix: Repair rpm repo public signing key,1,[],https://github.com/MDSplus/mdsplus/pull/1165,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1165,"The signing key for MDSplus has been changed to use a more secure
key. This was fixed because of warnings occurring for debian repositories
but the public key installed for the rpm repository was not updated to
match the new signing key. This should cause a new public key to be
included in the repo rpm.","The signing key for MDSplus has been changed to use a more secure
key. This was fixed because of warnings occurring for debian repositories
but the public key installed for the rpm repository was not updated to
match the new signing key. This should cause a new public key to be
included in the repo rpm.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1166,2017-12-13T16:07:04Z,2017-12-13T21:04:48Z,2017-12-14T13:09:58Z,MERGED,True,54,44,13,https://github.com/tfredian,Twf fix more warnings,4,[],https://github.com/MDSplus/mdsplus/pull/1166,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1166,I hope this will take care of the remaining unresolved warnings (except those that are explicitly disabled) so that we could turn on the --enable-werror option on the release builds.,I hope this will take care of the remaining unresolved warnings (except those that are explicitly disabled) so that we could turn on the --enable-werror option on the release builds.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1168,2017-12-14T17:04:30Z,2017-12-14T21:29:37Z,2017-12-14T21:29:45Z,MERGED,True,805,568,13,https://github.com/tfredian,Feature: Add new MdsLib threadsafe entry points,3,[],https://github.com/MDSplus/mdsplus/pull/1168,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1168,"The following entry points have been added to MdsLib
MdsConnectionR
MdsDisconnectR
MdsValueR
MdsValue2R
MdsPutR
MdsPut2R
MdsOpenR
MdsCloseR
MdsSetDefaultR
These are basically the same as the routines without the trailing R except that
they no longer use a global connection id making them much more threadsafe. Multiple
threads could run in parallel using different connections without interference. Locking
was added recently to the use of connections so that multiple threads can transact using
the same connection but that doesn't preclude one thread from interfering with the tdi
and tree context being used on the server side if using the same connection.
The following C code demonstrates the difference of the R routines and the original API:
/* Original API /
int ansd;
float answer;
int zero=0;
MdsConnect('myhost');
ansd = descr(&dtype_float,&answer,&zero);
status = MdsValue(""42."",&ansd,&zero);
/ New API */
int ansd;
float answer;
int zero=0;
int connection;
connection = MdsConnect('myhost');
ansd = descr(&dtype_float,&answer,&zero);
status = MdsValueR(&connection,""42."",&ansd,&zero);","The following entry points have been added to MdsLib
MdsConnectionR
MdsDisconnectR
MdsValueR
MdsValue2R
MdsPutR
MdsPut2R
MdsOpenR
MdsCloseR
MdsSetDefaultR
These are basically the same as the routines without the trailing R except that
they no longer use a global connection id making them much more threadsafe. Multiple
threads could run in parallel using different connections without interference. Locking
was added recently to the use of connections so that multiple threads can transact using
the same connection but that doesn't preclude one thread from interfering with the tdi
and tree context being used on the server side if using the same connection.
The following C code demonstrates the difference of the R routines and the original API:
/* Original API /
int ansd;
float answer;
int zero=0;
MdsConnect('myhost');
ansd = descr(&dtype_float,&answer,&zero);
status = MdsValue(""42."",&ansd,&zero);
/ New API */
int ansd;
float answer;
int zero=0;
int connection;
connection = MdsConnect('myhost');
ansd = descr(&dtype_float,&answer,&zero);
status = MdsValueR(&connection,""42."",&ansd,&zero);",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1169,2017-12-15T16:10:21Z,2019-08-14T15:25:30Z,2019-08-17T10:16:04Z,CLOSED,False,1121,127,24,https://github.com/zack-vii,Zck junit javatraverser2,10,[],https://github.com/MDSplus/mdsplus/pull/1169,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1169,"This adds junit tests for javatraverser2
TODO: fix issues and implement TAP

@AndreaRigoni : feel free to modify","This adds junit tests for javatraverser2
TODO: fix issues and implement TAP

@AndreaRigoni : feel free to modify",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1169,2017-12-15T16:10:21Z,2019-08-14T15:25:30Z,2019-08-17T10:16:04Z,CLOSED,False,1121,127,24,https://github.com/zack-vii,Zck junit javatraverser2,10,[],https://github.com/MDSplus/mdsplus/pull/1169,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1169#issuecomment-352063548,"This adds junit tests for javatraverser2
TODO: fix issues and implement TAP

@AndreaRigoni : feel free to modify",test needs to be deactivated if java is disabled,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1169,2017-12-15T16:10:21Z,2019-08-14T15:25:30Z,2019-08-17T10:16:04Z,CLOSED,False,1121,127,24,https://github.com/zack-vii,Zck junit javatraverser2,10,[],https://github.com/MDSplus/mdsplus/pull/1169,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1169#issuecomment-521294313,"This adds junit tests for javatraverser2
TODO: fix issues and implement TAP

@AndreaRigoni : feel free to modify",can be done with maven,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1170,2017-12-15T19:49:10Z,2017-12-15T21:35:59Z,2017-12-15T21:35:59Z,CLOSED,False,80,52,18,https://github.com/tfredian,Fix: Repair numerous compiler warnings,2,[],https://github.com/MDSplus/mdsplus/pull/1170,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1170,"This should fix several compiler warnings in an attempt to enable -Werror with -Wextra.
It also removes the need for -Wno-clobbered compiler option used on the routines involving threads.
It was tested using fc26 but other platforms may uncover more warnings.","This should fix several compiler warnings in an attempt to enable -Werror with -Wextra.
It also removes the need for -Wno-clobbered compiler option used on the routines involving threads.
It was tested using fc26 but other platforms may uncover more warnings.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1170,2017-12-15T19:49:10Z,2017-12-15T21:35:59Z,2017-12-15T21:35:59Z,CLOSED,False,80,52,18,https://github.com/tfredian,Fix: Repair numerous compiler warnings,2,[],https://github.com/MDSplus/mdsplus/pull/1170,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1170#issuecomment-352103213,"This should fix several compiler warnings in an attempt to enable -Werror with -Wextra.
It also removes the need for -Wno-clobbered compiler option used on the routines involving threads.
It was tested using fc26 but other platforms may uncover more warnings.",It looks like some of the changes made to prevent the clobbered warnings may have caused problems found by sanitize address. More work needed.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1171,2017-12-15T20:46:03Z,2017-12-15T22:04:04Z,2017-12-15T22:04:24Z,MERGED,True,5,1,1,https://github.com/tfredian,Fix: Unset segmented flag after putting non-segmented data,1,[],https://github.com/MDSplus/mdsplus/pull/1171,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1171,fixes #1167,fixes #1167,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1172,2017-12-15T22:09:43Z,2017-12-18T14:57:40Z,2017-12-18T15:00:02Z,MERGED,True,105,55,19,https://github.com/tfredian,Fix: Resolve compiler warnings,5,[],https://github.com/MDSplus/mdsplus/pull/1172,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1172,This should resolve several compiler warnings including some that were originally disabled with the -Wno-clobbered option.,This should resolve several compiler warnings including some that were originally disabled with the -Wno-clobbered option.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1172,2017-12-15T22:09:43Z,2017-12-18T14:57:40Z,2017-12-18T15:00:02Z,MERGED,True,105,55,19,https://github.com/tfredian,Fix: Resolve compiler warnings,5,[],https://github.com/MDSplus/mdsplus/pull/1172,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1172#issuecomment-352275667,This should resolve several compiler warnings including some that were originally disabled with the -Wno-clobbered option.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1173,2017-12-18T09:42:05Z,2017-12-18T13:59:08Z,2017-12-18T14:00:10Z,CLOSED,False,93,55,18,https://github.com/zack-vii,Twf warnings,7,[],https://github.com/MDSplus/mdsplus/pull/1173,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1173,before merging into alpha we should eventually drop the revert and the reverted commit,before merging into alpha we should eventually drop the revert and the reverted commit,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1173,2017-12-18T09:42:05Z,2017-12-18T13:59:08Z,2017-12-18T14:00:10Z,CLOSED,False,93,55,18,https://github.com/zack-vii,Twf warnings,7,[],https://github.com/MDSplus/mdsplus/pull/1173,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1173#issuecomment-352395090,before merging into alpha we should eventually drop the revert and the reverted commit,"if you run
gdb --args python /git/mdsplus/mdsobjects/python/tests/dclUnitTest.py
and put a break at tzset it only breaks once.
Using private statics is probably the most robust solution.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1173,2017-12-18T09:42:05Z,2017-12-18T13:59:08Z,2017-12-18T14:00:10Z,CLOSED,False,93,55,18,https://github.com/zack-vii,Twf warnings,7,[],https://github.com/MDSplus/mdsplus/pull/1173,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1173#issuecomment-352432755,before merging into alpha we should eventually drop the revert and the reverted commit,pushed directly into #1173,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1175,2017-12-18T21:06:32Z,2017-12-19T15:04:10Z,2017-12-19T15:05:11Z,MERGED,True,31,25,3,https://github.com/tfredian,Fix: More clobbered warning fixes,2,[],https://github.com/MDSplus/mdsplus/pull/1175,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1175,This fixes the remaining clobbered warnings,This fixes the remaining clobbered warnings,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1175,2017-12-18T21:06:32Z,2017-12-19T15:04:10Z,2017-12-19T15:05:11Z,MERGED,True,31,25,3,https://github.com/tfredian,Fix: More clobbered warning fixes,2,[],https://github.com/MDSplus/mdsplus/pull/1175,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1175#issuecomment-352756729,This fixes the remaining clobbered warnings,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1177,2017-12-19T15:16:46Z,2017-12-19T16:45:28Z,2018-05-29T18:39:49Z,MERGED,True,47,41,1,https://github.com/tfredian,Build: Retry docker run if it gets a container command not found error,1,[],https://github.com/MDSplus/mdsplus/pull/1177,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1177,"For unknown reasons the docker run command sometimes gets a command
not found error. This may be an nfs cacheing problem. This change will
repeat the docker run command several times before giving up.","For unknown reasons the docker run command sometimes gets a command
not found error. This may be an nfs cacheing problem. This change will
repeat the docker run command several times before giving up.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1178,2017-12-19T20:03:11Z,2018-01-16T13:30:20Z,2018-01-16T13:30:20Z,MERGED,True,667,553,59,https://github.com/zack-vii,project: threadsafe tdi,18,[],https://github.com/MDSplus/mdsplus/pull/1178,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1178,attempt to make tdi threadsafe with lesser use of locks,attempt to make tdi threadsafe with lesser use of locks,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1178,2017-12-19T20:03:11Z,2018-01-16T13:30:20Z,2018-01-16T13:30:20Z,MERGED,True,667,553,59,https://github.com/zack-vii,project: threadsafe tdi,18,[],https://github.com/MDSplus/mdsplus/pull/1178,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1178#issuecomment-353145787,attempt to make tdi threadsafe with lesser use of locks,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1178,2017-12-19T20:03:11Z,2018-01-16T13:30:20Z,2018-01-16T13:30:20Z,MERGED,True,667,553,59,https://github.com/zack-vii,project: threadsafe tdi,18,[],https://github.com/MDSplus/mdsplus/pull/1178,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1178#issuecomment-353230679,attempt to make tdi threadsafe with lesser use of locks,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1178,2017-12-19T20:03:11Z,2018-01-16T13:30:20Z,2018-01-16T13:30:20Z,MERGED,True,667,553,59,https://github.com/zack-vii,project: threadsafe tdi,18,[],https://github.com/MDSplus/mdsplus/pull/1178,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1178#issuecomment-356324731,attempt to make tdi threadsafe with lesser use of locks,"The issue seems to be that tdi does not deep copy data on TdiGetIdent when handling public var. This is probably what you would want for performance but this prevents tdi from being thread safe.
workaround would be to deepcopy publics, possibly add a CONST modifier (used like PUBLIC or P
PRIVATE) to the var makeing it readonly but allows to read the var without deepcopy.
CONST PUBLIC _const = myconst()
PUBLIC _const = 123
%TDI-E-CONST cannot modify a constant var",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1178,2017-12-19T20:03:11Z,2018-01-16T13:30:20Z,2018-01-16T13:30:20Z,MERGED,True,667,553,59,https://github.com/zack-vii,project: threadsafe tdi,18,[],https://github.com/MDSplus/mdsplus/pull/1178,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1178#issuecomment-357115631,attempt to make tdi threadsafe with lesser use of locks,down to one segfault that only occurs on alpine 64x?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1179,2017-12-20T18:45:58Z,2017-12-27T13:16:02Z,2017-12-27T13:16:02Z,MERGED,True,557,286,30,https://github.com/margomw,Update D3D TDI function after languishing for a while,2,[],https://github.com/MDSplus/mdsplus/pull/1179,https://github.com/margomw,1,https://github.com/MDSplus/mdsplus/pull/1179,This is the up-to-date TDI functions that are currently being used at GA's new cluster,This is the up-to-date TDI functions that are currently being used at GA's new cluster,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1179,2017-12-20T18:45:58Z,2017-12-27T13:16:02Z,2017-12-27T13:16:02Z,MERGED,True,557,286,30,https://github.com/margomw,Update D3D TDI function after languishing for a while,2,[],https://github.com/MDSplus/mdsplus/pull/1179,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1179#issuecomment-353150524,This is the up-to-date TDI functions that are currently being used at GA's new cluster,"you need to update deploy/packaging/{redhat,debian}/kernel.noarch",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1179,2017-12-20T18:45:58Z,2017-12-27T13:16:02Z,2017-12-27T13:16:02Z,MERGED,True,557,286,30,https://github.com/margomw,Update D3D TDI function after languishing for a while,2,[],https://github.com/MDSplus/mdsplus/pull/1179,https://github.com/margomw,3,https://github.com/MDSplus/mdsplus/pull/1179#issuecomment-353154185,This is the up-to-date TDI functions that are currently being used at GA's new cluster,"@zack-vii
I have updated the files you asked",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1179,2017-12-20T18:45:58Z,2017-12-27T13:16:02Z,2017-12-27T13:16:02Z,MERGED,True,557,286,30,https://github.com/margomw,Update D3D TDI function after languishing for a while,2,[],https://github.com/MDSplus/mdsplus/pull/1179,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1179#issuecomment-353187059,This is the up-to-date TDI functions that are currently being used at GA's new cluster,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1179,2017-12-20T18:45:58Z,2017-12-27T13:16:02Z,2017-12-27T13:16:02Z,MERGED,True,557,286,30,https://github.com/margomw,Update D3D TDI function after languishing for a while,2,[],https://github.com/MDSplus/mdsplus/pull/1179,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1179#issuecomment-353747946,This is the up-to-date TDI functions that are currently being used at GA's new cluster,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1180,2017-12-21T11:33:38Z,2018-01-09T14:27:30Z,2018-01-09T15:55:13Z,MERGED,True,49,14,4,https://github.com/zack-vii,Zck temp private ctx,3,[],https://github.com/MDSplus/mdsplus/pull/1180,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1180,added possibility to temporarily switch to a private context,added possibility to temporarily switch to a private context,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1180,2017-12-21T11:33:38Z,2018-01-09T14:27:30Z,2018-01-09T15:55:13Z,MERGED,True,49,14,4,https://github.com/zack-vii,Zck temp private ctx,3,[],https://github.com/MDSplus/mdsplus/pull/1180,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1180#issuecomment-354441861,added possibility to temporarily switch to a private context,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1180,2017-12-21T11:33:38Z,2018-01-09T14:27:30Z,2018-01-09T15:55:13Z,MERGED,True,49,14,4,https://github.com/zack-vii,Zck temp private ctx,3,[],https://github.com/MDSplus/mdsplus/pull/1180,https://github.com/MDSplusBuilder,3,https://github.com/MDSplus/mdsplus/pull/1180#issuecomment-355997036,added possibility to temporarily switch to a private context,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1180,2017-12-21T11:33:38Z,2018-01-09T14:27:30Z,2018-01-09T15:55:13Z,MERGED,True,49,14,4,https://github.com/zack-vii,Zck temp private ctx,3,[],https://github.com/MDSplus/mdsplus/pull/1180,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1180#issuecomment-356003975,added possibility to temporarily switch to a private context,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1181,2017-12-21T11:38:02Z,2018-01-09T15:54:42Z,2018-01-09T15:54:47Z,MERGED,True,22,35,8,https://github.com/zack-vii,Zck tdi funs to python,5,[],https://github.com/MDSplus/mdsplus/pull/1181,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1181,replaced tdi.fun that invoke Py.py with proper python methods and moved some others,replaced tdi.fun that invoke Py.py with proper python methods and moved some others,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1181,2017-12-21T11:38:02Z,2018-01-09T15:54:42Z,2018-01-09T15:54:47Z,MERGED,True,22,35,8,https://github.com/zack-vii,Zck tdi funs to python,5,[],https://github.com/MDSplus/mdsplus/pull/1181,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1181#issuecomment-353625548,replaced tdi.fun that invoke Py.py with proper python methods and moved some others,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1181,2017-12-21T11:38:02Z,2018-01-09T15:54:42Z,2018-01-09T15:54:47Z,MERGED,True,22,35,8,https://github.com/zack-vii,Zck tdi funs to python,5,[],https://github.com/MDSplus/mdsplus/pull/1181,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1181#issuecomment-353626441,replaced tdi.fun that invoke Py.py with proper python methods and moved some others,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1181,2017-12-21T11:38:02Z,2018-01-09T15:54:42Z,2018-01-09T15:54:47Z,MERGED,True,22,35,8,https://github.com/zack-vii,Zck tdi funs to python,5,[],https://github.com/MDSplus/mdsplus/pull/1181,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1181#issuecomment-353634234,replaced tdi.fun that invoke Py.py with proper python methods and moved some others,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1181,2017-12-21T11:38:02Z,2018-01-09T15:54:42Z,2018-01-09T15:54:47Z,MERGED,True,22,35,8,https://github.com/zack-vii,Zck tdi funs to python,5,[],https://github.com/MDSplus/mdsplus/pull/1181,https://github.com/MDSplusBuilder,5,https://github.com/MDSplus/mdsplus/pull/1181#issuecomment-353645001,replaced tdi.fun that invoke Py.py with proper python methods and moved some others,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1181,2017-12-21T11:38:02Z,2018-01-09T15:54:42Z,2018-01-09T15:54:47Z,MERGED,True,22,35,8,https://github.com/zack-vii,Zck tdi funs to python,5,[],https://github.com/MDSplus/mdsplus/pull/1181,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/1181#issuecomment-353645588,replaced tdi.fun that invoke Py.py with proper python methods and moved some others,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1181,2017-12-21T11:38:02Z,2018-01-09T15:54:42Z,2018-01-09T15:54:47Z,MERGED,True,22,35,8,https://github.com/zack-vii,Zck tdi funs to python,5,[],https://github.com/MDSplus/mdsplus/pull/1181,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1181#issuecomment-353646107,replaced tdi.fun that invoke Py.py with proper python methods and moved some others,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1184,2017-12-27T15:59:01Z,2018-01-16T20:57:46Z,2018-05-29T18:39:48Z,MERGED,True,558,287,31,https://github.com/tfredian,Feature: Add new d3d tdi functions,3,[],https://github.com/MDSplus/mdsplus/pull/1184,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1184,Update to d3d tdi functions include in the mdsplus-d3d package.,Update to d3d tdi functions include in the mdsplus-d3d package.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1184,2017-12-27T15:59:01Z,2018-01-16T20:57:46Z,2018-05-29T18:39:48Z,MERGED,True,558,287,31,https://github.com/tfredian,Feature: Add new d3d tdi functions,3,[],https://github.com/MDSplus/mdsplus/pull/1184,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1184#issuecomment-354287089,Update to d3d tdi functions include in the mdsplus-d3d package.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1185,2017-12-27T16:46:49Z,2018-01-16T20:58:32Z,2018-01-16T20:58:35Z,CLOSED,False,1,1,1,https://github.com/tfredian,Build: testing pr tests on jenkins2,1,[],https://github.com/MDSplus/mdsplus/pull/1185,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1185,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1185,2017-12-27T16:46:49Z,2018-01-16T20:58:32Z,2018-01-16T20:58:35Z,CLOSED,False,1,1,1,https://github.com/tfredian,Build: testing pr tests on jenkins2,1,[],https://github.com/MDSplus/mdsplus/pull/1185,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1185#issuecomment-354168738,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1186,2017-12-29T15:55:16Z,2017-12-29T17:15:06Z,2018-06-04T20:27:55Z,MERGED,True,85,126,5,https://github.com/joshStillerman,Fix: cmdParse.y - remove overlapping arguments to strcat,1,[],https://github.com/MDSplus/mdsplus/pull/1186,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1186,"The code which removed the double double quotes ("""") used strcat
with overlapping arguments to copy the string on top of itself to
turn them in to single double quotes ("").
This results in undefined behavior.  On some systems like RHEL7
it works fine but on others (centos -7, 3.10.0-693.5.2.el7.x86_64)
it garbles the string.
Valgrind shows this as an overlapping strcat error.
There were also some bugs in the generated code.  It needed:
local include of mdsthreadsafe.h
include of config.h
consistent naming of PVALUE - missing '_'
For now turn off the sign compare warning","The code which removed the double double quotes ("""") used strcat
with overlapping arguments to copy the string on top of itself to
turn them in to single double quotes ("").
This results in undefined behavior.  On some systems like RHEL7
it works fine but on others (centos -7, 3.10.0-693.5.2.el7.x86_64)
it garbles the string.
Valgrind shows this as an overlapping strcat error.
There were also some bugs in the generated code.  It needed:
local include of mdsthreadsafe.h
include of config.h
consistent naming of PVALUE - missing '_'
For now turn off the sign compare warning",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1186,2017-12-29T15:55:16Z,2017-12-29T17:15:06Z,2018-06-04T20:27:55Z,MERGED,True,85,126,5,https://github.com/joshStillerman,Fix: cmdParse.y - remove overlapping arguments to strcat,1,[],https://github.com/MDSplus/mdsplus/pull/1186,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1186#issuecomment-354463097,"The code which removed the double double quotes ("""") used strcat
with overlapping arguments to copy the string on top of itself to
turn them in to single double quotes ("").
This results in undefined behavior.  On some systems like RHEL7
it works fine but on others (centos -7, 3.10.0-693.5.2.el7.x86_64)
it garbles the string.
Valgrind shows this as an overlapping strcat error.
There were also some bugs in the generated code.  It needed:
local include of mdsthreadsafe.h
include of config.h
consistent naming of PVALUE - missing '_'
For now turn off the sign compare warning",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1186,2017-12-29T15:55:16Z,2017-12-29T17:15:06Z,2018-06-04T20:27:55Z,MERGED,True,85,126,5,https://github.com/joshStillerman,Fix: cmdParse.y - remove overlapping arguments to strcat,1,[],https://github.com/MDSplus/mdsplus/pull/1186,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1186#issuecomment-354465779,"The code which removed the double double quotes ("""") used strcat
with overlapping arguments to copy the string on top of itself to
turn them in to single double quotes ("").
This results in undefined behavior.  On some systems like RHEL7
it works fine but on others (centos -7, 3.10.0-693.5.2.el7.x86_64)
it garbles the string.
Valgrind shows this as an overlapping strcat error.
There were also some bugs in the generated code.  It needed:
local include of mdsthreadsafe.h
include of config.h
consistent naming of PVALUE - missing '_'
For now turn off the sign compare warning",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1187,2017-12-29T17:09:56Z,2017-12-29T17:42:49Z,2018-06-04T20:27:53Z,MERGED,True,39,38,3,https://github.com/joshStillerman,Fix: cmdParse.y - remove overlapping arguments to strcat,1,[],https://github.com/MDSplus/mdsplus/pull/1187,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1187,"The code which removed the double double quotes ("""") used strcat
with overlapping arguments to copy the string on top of itself to
turn them in to single double quotes ("").
This results in undefined behavior.  On some systems like RHEL7
it works fine but on others (centos -7, 3.10.0-693.5.2.el7.x86_64)
it garbles the string.
Valgrind shows this as an overlapping strcat error.
There were also some bugs in the generated code.  It needed:
local include of mdsthreadsafe.h
include of config.h
consistent naming of PVALUE - missing '_'
For now turn off the sign compare warning","The code which removed the double double quotes ("""") used strcat
with overlapping arguments to copy the string on top of itself to
turn them in to single double quotes ("").
This results in undefined behavior.  On some systems like RHEL7
it works fine but on others (centos -7, 3.10.0-693.5.2.el7.x86_64)
it garbles the string.
Valgrind shows this as an overlapping strcat error.
There were also some bugs in the generated code.  It needed:
local include of mdsthreadsafe.h
include of config.h
consistent naming of PVALUE - missing '_'
For now turn off the sign compare warning",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1187,2017-12-29T17:09:56Z,2017-12-29T17:42:49Z,2018-06-04T20:27:53Z,MERGED,True,39,38,3,https://github.com/joshStillerman,Fix: cmdParse.y - remove overlapping arguments to strcat,1,[],https://github.com/MDSplus/mdsplus/pull/1187,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1187#issuecomment-354472994,"The code which removed the double double quotes ("""") used strcat
with overlapping arguments to copy the string on top of itself to
turn them in to single double quotes ("").
This results in undefined behavior.  On some systems like RHEL7
it works fine but on others (centos -7, 3.10.0-693.5.2.el7.x86_64)
it garbles the string.
Valgrind shows this as an overlapping strcat error.
There were also some bugs in the generated code.  It needed:
local include of mdsthreadsafe.h
include of config.h
consistent naming of PVALUE - missing '_'
For now turn off the sign compare warning",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1187,2017-12-29T17:09:56Z,2017-12-29T17:42:49Z,2018-06-04T20:27:53Z,MERGED,True,39,38,3,https://github.com/joshStillerman,Fix: cmdParse.y - remove overlapping arguments to strcat,1,[],https://github.com/MDSplus/mdsplus/pull/1187,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1187#issuecomment-354473749,"The code which removed the double double quotes ("""") used strcat
with overlapping arguments to copy the string on top of itself to
turn them in to single double quotes ("").
This results in undefined behavior.  On some systems like RHEL7
it works fine but on others (centos -7, 3.10.0-693.5.2.el7.x86_64)
it garbles the string.
Valgrind shows this as an overlapping strcat error.
There were also some bugs in the generated code.  It needed:
local include of mdsthreadsafe.h
include of config.h
consistent naming of PVALUE - missing '_'
For now turn off the sign compare warning",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1189,2018-01-01T19:31:53Z,2018-01-30T13:35:52Z,2018-05-29T18:39:37Z,MERGED,True,82,119,14,https://github.com/kgerickson,jscope cleanup and warning removal,14,[],https://github.com/MDSplus/mdsplus/pull/1189,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/1189,This pull request should be accompanied by another lowering of the jscope warning threshold.,This pull request should be accompanied by another lowering of the jscope warning threshold.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1189,2018-01-01T19:31:53Z,2018-01-30T13:35:52Z,2018-05-29T18:39:37Z,MERGED,True,82,119,14,https://github.com/kgerickson,jscope cleanup and warning removal,14,[],https://github.com/MDSplus/mdsplus/pull/1189,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1189#issuecomment-354671706,This pull request should be accompanied by another lowering of the jscope warning threshold.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1189,2018-01-01T19:31:53Z,2018-01-30T13:35:52Z,2018-05-29T18:39:37Z,MERGED,True,82,119,14,https://github.com/kgerickson,jscope cleanup and warning removal,14,[],https://github.com/MDSplus/mdsplus/pull/1189,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1189#issuecomment-361376329,This pull request should be accompanied by another lowering of the jscope warning threshold.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1190,2018-01-01T21:39:20Z,2018-01-03T12:45:10Z,2018-06-04T20:27:49Z,MERGED,True,246,246,151,https://github.com/kgerickson,REVIEW REQUIRED! Big renaming of all of the config.h includes,1,[],https://github.com/MDSplus/mdsplus/pull/1190,https://github.com/kgerickson,1,https://github.com/MDSplus/mdsplus/pull/1190,"This is the big rename change that will move all of the #include<config.h> lines to instead be #include <mdsplus/config.h>.  This does two things... 1) It moves the generated header into include/mdsplus, and 2) it renames it.  This is the simple change.  The more complicated one would be not having to install mdsconfig.h at all, but we aren't there yet.  Baby steps :)
This needs some review.  I noticed about a dozen places where we had code that generated C code that included config.h.  I don't know if I got them all.","This is the big rename change that will move all of the #include<config.h> lines to instead be #include <mdsplus/config.h>.  This does two things... 1) It moves the generated header into include/mdsplus, and 2) it renames it.  This is the simple change.  The more complicated one would be not having to install mdsconfig.h at all, but we aren't there yet.  Baby steps :)
This needs some review.  I noticed about a dozen places where we had code that generated C code that included config.h.  I don't know if I got them all.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1190,2018-01-01T21:39:20Z,2018-01-03T12:45:10Z,2018-06-04T20:27:49Z,MERGED,True,246,246,151,https://github.com/kgerickson,REVIEW REQUIRED! Big renaming of all of the config.h includes,1,[],https://github.com/MDSplus/mdsplus/pull/1190,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1190#issuecomment-354679053,"This is the big rename change that will move all of the #include<config.h> lines to instead be #include <mdsplus/config.h>.  This does two things... 1) It moves the generated header into include/mdsplus, and 2) it renames it.  This is the simple change.  The more complicated one would be not having to install mdsconfig.h at all, but we aren't there yet.  Baby steps :)
This needs some review.  I noticed about a dozen places where we had code that generated C code that included config.h.  I don't know if I got them all.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1190,2018-01-01T21:39:20Z,2018-01-03T12:45:10Z,2018-06-04T20:27:49Z,MERGED,True,246,246,151,https://github.com/kgerickson,REVIEW REQUIRED! Big renaming of all of the config.h includes,1,[],https://github.com/MDSplus/mdsplus/pull/1190,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1190#issuecomment-354799011,"This is the big rename change that will move all of the #include<config.h> lines to instead be #include <mdsplus/config.h>.  This does two things... 1) It moves the generated header into include/mdsplus, and 2) it renames it.  This is the simple change.  The more complicated one would be not having to install mdsconfig.h at all, but we aren't there yet.  Baby steps :)
This needs some review.  I noticed about a dozen places where we had code that generated C code that included config.h.  I don't know if I got them all.",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1190,2018-01-01T21:39:20Z,2018-01-03T12:45:10Z,2018-06-04T20:27:49Z,MERGED,True,246,246,151,https://github.com/kgerickson,REVIEW REQUIRED! Big renaming of all of the config.h includes,1,[],https://github.com/MDSplus/mdsplus/pull/1190,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1190#issuecomment-354807986,"This is the big rename change that will move all of the #include<config.h> lines to instead be #include <mdsplus/config.h>.  This does two things... 1) It moves the generated header into include/mdsplus, and 2) it renames it.  This is the simple change.  The more complicated one would be not having to install mdsconfig.h at all, but we aren't there yet.  Baby steps :)
This needs some review.  I noticed about a dozen places where we had code that generated C code that included config.h.  I don't know if I got them all.",It looks like there are config.h includes in some of the tests that still need to be fixed.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1190,2018-01-01T21:39:20Z,2018-01-03T12:45:10Z,2018-06-04T20:27:49Z,MERGED,True,246,246,151,https://github.com/kgerickson,REVIEW REQUIRED! Big renaming of all of the config.h includes,1,[],https://github.com/MDSplus/mdsplus/pull/1190,https://github.com/kgerickson,5,https://github.com/MDSplus/mdsplus/pull/1190#issuecomment-354811136,"This is the big rename change that will move all of the #include<config.h> lines to instead be #include <mdsplus/config.h>.  This does two things... 1) It moves the generated header into include/mdsplus, and 2) it renames it.  This is the simple change.  The more complicated one would be not having to install mdsconfig.h at all, but we aren't there yet.  Baby steps :)
This needs some review.  I noticed about a dozen places where we had code that generated C code that included config.h.  I don't know if I got them all.",Updates pushed,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1192,2018-01-03T14:03:22Z,2018-01-03T18:31:17Z,2018-01-03T19:01:46Z,MERGED,True,3,1,3,https://github.com/tfredian,Build: Add fc27 support,2,[],https://github.com/MDSplus/mdsplus/pull/1192,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1192,This should add support for Fedora Core version 27.,This should add support for Fedora Core version 27.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1192,2018-01-03T14:03:22Z,2018-01-03T18:31:17Z,2018-01-03T19:01:46Z,MERGED,True,3,1,3,https://github.com/tfredian,Build: Add fc27 support,2,[],https://github.com/MDSplus/mdsplus/pull/1192,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1192#issuecomment-355031105,This should add support for Fedora Core version 27.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1193,2018-01-03T14:17:08Z,2018-01-03T15:54:15Z,2018-01-03T15:54:20Z,MERGED,True,4,4,2,https://github.com/tfredian,Build: Remove incorrect uses of volatile,1,[],https://github.com/MDSplus/mdsplus/pull/1193,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1193,"In an attempt to fix various compiler warnings I inadvertently added
some ""volatile"" keywords to the code which were not needed. After
finding the real reason and solution for the compiler warnings I
removed most but not all of the erroneous volatile additions. This
should remove the remainder of these keywords that were added when
attempting to fix the compiler warnings.","In an attempt to fix various compiler warnings I inadvertently added
some ""volatile"" keywords to the code which were not needed. After
finding the real reason and solution for the compiler warnings I
removed most but not all of the erroneous volatile additions. This
should remove the remainder of these keywords that were added when
attempting to fix the compiler warnings.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1195,2018-01-03T20:49:34Z,2018-01-03T23:39:33Z,2018-01-03T23:40:23Z,MERGED,True,7,7,1,https://github.com/tfredian,Fix: Prevent hangs during removal of python packages,2,[],https://github.com/MDSplus/mdsplus/pull/1195,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1195,"The installer scripts were changed to use pip to remove old python
packages left from previous installations. Unfortunately pip prompts
for yes/no verification and this hung the removal when done using the
package install/remove scripts which are not done interactively. This
should fix this problem. Unfortunately to update any of the python
packages it may be necessary to manually edit the mdsplus-python.prerm
script found in /var/lib/dpkg/info on debian based linux systems
to change the line:
while (pip uninstall -q -y MDSplus 2>/dev/null);do :;done
to be:
while (/usr/bin/yes | pip uninstall -q MDSplus 2>/dev/null);do :;done
before an update or removal can be performed.","The installer scripts were changed to use pip to remove old python
packages left from previous installations. Unfortunately pip prompts
for yes/no verification and this hung the removal when done using the
package install/remove scripts which are not done interactively. This
should fix this problem. Unfortunately to update any of the python
packages it may be necessary to manually edit the mdsplus-python.prerm
script found in /var/lib/dpkg/info on debian based linux systems
to change the line:
while (pip uninstall -q -y MDSplus 2>/dev/null);do :;done
to be:
while (/usr/bin/yes | pip uninstall -q MDSplus 2>/dev/null);do :;done
before an update or removal can be performed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1196,2018-01-03T20:55:23Z,2018-01-03T23:39:54Z,2018-01-03T23:40:05Z,MERGED,True,7,7,1,https://github.com/tfredian,Fix: Repair python uninstall scripts,1,[],https://github.com/MDSplus/mdsplus/pull/1196,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1196,"The installer scripts were changed to use pip to remove old python
packages left from previous installations. Unfortunately pip prompts
for yes/no verification and this hung the removal when done using the
package install/remove scripts which are not done interactively. This
should fix this problem. Unfortunately to update any of the python
packages it may be necessary to manually edit the mdsplus-python.prerm
script found in /var/lib/dpkg/info on debian based linux systems
to change the line:
while (pip uninstall -q -y MDSplus 2>/dev/null);do :;done
to be:
while (/usr/bin/yes | pip uninstall -q MDSplus 2>/dev/null);do :;done
before an update or removal can be performed.","The installer scripts were changed to use pip to remove old python
packages left from previous installations. Unfortunately pip prompts
for yes/no verification and this hung the removal when done using the
package install/remove scripts which are not done interactively. This
should fix this problem. Unfortunately to update any of the python
packages it may be necessary to manually edit the mdsplus-python.prerm
script found in /var/lib/dpkg/info on debian based linux systems
to change the line:
while (pip uninstall -q -y MDSplus 2>/dev/null);do :;done
to be:
while (/usr/bin/yes | pip uninstall -q MDSplus 2>/dev/null);do :;done
before an update or removal can be performed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1199,2018-01-09T18:08:22Z,2018-01-09T19:56:23Z,2018-01-09T19:57:56Z,CLOSED,False,3,2,1,https://github.com/tfredian,Build: Remove jar creation output from trigger console,1,[],https://github.com/MDSplus/mdsplus/pull/1199,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1199,"The trigger console log is getting obscured by the output of
the making of the jar files for use in installers so this output
is moved to a make_jars.log file which can be included in the trigger
job artifacts.","The trigger console log is getting obscured by the output of
the making of the jar files for use in installers so this output
is moved to a make_jars.log file which can be included in the trigger
job artifacts.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1200,2018-01-09T19:59:50Z,2018-01-22T20:48:44Z,2018-01-22T20:48:51Z,MERGED,True,3,2,1,https://github.com/tfredian,Build: Remove jar creation output from trigger console,4,[],https://github.com/MDSplus/mdsplus/pull/1200,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1200,"The trigger console log is getting obscured by the output of
the making of the jar files for use in installers so this output
is moved to a make_jars.log file which can be included in the trigger
job artifacts.","The trigger console log is getting obscured by the output of
the making of the jar files for use in installers so this output
is moved to a make_jars.log file which can be included in the trigger
job artifacts.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1200,2018-01-09T19:59:50Z,2018-01-22T20:48:44Z,2018-01-22T20:48:51Z,MERGED,True,3,2,1,https://github.com/tfredian,Build: Remove jar creation output from trigger console,4,[],https://github.com/MDSplus/mdsplus/pull/1200,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1200#issuecomment-356400569,"The trigger console log is getting obscured by the output of
the making of the jar files for use in installers so this output
is moved to a make_jars.log file which can be included in the trigger
job artifacts.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1202,2018-01-16T23:10:31Z,2018-01-17T13:58:11Z,2018-01-26T14:56:07Z,MERGED,True,890,784,7,https://github.com/zack-vii,Zck fix and clean up of TreeSegments,9,[],https://github.com/MDSplus/mdsplus/pull/1202,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1202,"removes most macros from TreeSegments.c allowing for debugging
fixes the test which oddly worked with the old code
fixes TreeUpdateSegment for compressed data","removes most macros from TreeSegments.c allowing for debugging
fixes the test which oddly worked with the old code
fixes TreeUpdateSegment for compressed data",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1202,2018-01-16T23:10:31Z,2018-01-17T13:58:11Z,2018-01-26T14:56:07Z,MERGED,True,890,784,7,https://github.com/zack-vii,Zck fix and clean up of TreeSegments,9,[],https://github.com/MDSplus/mdsplus/pull/1202,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1202#issuecomment-358155602,"removes most macros from TreeSegments.c allowing for debugging
fixes the test which oddly worked with the old code
fixes TreeUpdateSegment for compressed data",has been rebase on #1203,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1202,2018-01-16T23:10:31Z,2018-01-17T13:58:11Z,2018-01-26T14:56:07Z,MERGED,True,890,784,7,https://github.com/zack-vii,Zck fix and clean up of TreeSegments,9,[],https://github.com/MDSplus/mdsplus/pull/1202,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1202#issuecomment-358294938,"removes most macros from TreeSegments.c allowing for debugging
fixes the test which oddly worked with the old code
fixes TreeUpdateSegment for compressed data",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1203,2018-01-17T00:26:05Z,2018-01-17T13:05:53Z,2018-01-17T13:05:53Z,MERGED,True,27,9,2,https://github.com/zack-vii,Zck fixed race between public ident read and writes,2,[],https://github.com/MDSplus/mdsplus/pull/1203,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1203,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1204,2018-01-17T21:09:06Z,2018-01-18T21:06:04Z,2018-01-18T21:06:11Z,MERGED,True,637,398,57,https://github.com/zack-vii,Zck task timeout test and parallel tests using -j,5,[],https://github.com/MDSplus/mdsplus/pull/1204,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1204,"… and mdsip test for being executed in parallel
TODO: fix cpp tests that share tree files to be executed in parallel","… and mdsip test for being executed in parallel
TODO: fix cpp tests that share tree files to be executed in parallel",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1204,2018-01-17T21:09:06Z,2018-01-18T21:06:04Z,2018-01-18T21:06:11Z,MERGED,True,637,398,57,https://github.com/zack-vii,Zck task timeout test and parallel tests using -j,5,[],https://github.com/MDSplus/mdsplus/pull/1204,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1204#issuecomment-358521507,"… and mdsip test for being executed in parallel
TODO: fix cpp tests that share tree files to be executed in parallel",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1204,2018-01-17T21:09:06Z,2018-01-18T21:06:04Z,2018-01-18T21:06:11Z,MERGED,True,637,398,57,https://github.com/zack-vii,Zck task timeout test and parallel tests using -j,5,[],https://github.com/MDSplus/mdsplus/pull/1204,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1204#issuecomment-358523001,"… and mdsip test for being executed in parallel
TODO: fix cpp tests that share tree files to be executed in parallel",after some try and error this achieves a decent speedup by parallelizing where it is possible. unfortunately jaspi froze in the process. I limited the number of cpu usage to hopefully prevent this from happening.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1204,2018-01-17T21:09:06Z,2018-01-18T21:06:04Z,2018-01-18T21:06:11Z,MERGED,True,637,398,57,https://github.com/zack-vii,Zck task timeout test and parallel tests using -j,5,[],https://github.com/MDSplus/mdsplus/pull/1204,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1204#issuecomment-358523801,"… and mdsip test for being executed in parallel
TODO: fix cpp tests that share tree files to be executed in parallel",however fc25's valgrind test still takes almost 90 mins and should probably split into two jobs e.g. 64 and 32 bit,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1204,2018-01-17T21:09:06Z,2018-01-18T21:06:04Z,2018-01-18T21:06:11Z,MERGED,True,637,398,57,https://github.com/zack-vii,Zck task timeout test and parallel tests using -j,5,[],https://github.com/MDSplus/mdsplus/pull/1204,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1204#issuecomment-358744366,"… and mdsip test for being executed in parallel
TODO: fix cpp tests that share tree files to be executed in parallel",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1204,2018-01-17T21:09:06Z,2018-01-18T21:06:04Z,2018-01-18T21:06:11Z,MERGED,True,637,398,57,https://github.com/zack-vii,Zck task timeout test and parallel tests using -j,5,[],https://github.com/MDSplus/mdsplus/pull/1204,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/1204#issuecomment-358755594,"… and mdsip test for being executed in parallel
TODO: fix cpp tests that share tree files to be executed in parallel",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1206,2018-01-18T10:48:04Z,2018-01-18T14:45:32Z,2018-03-23T10:05:29Z,MERGED,True,22,5,1,https://github.com/GabrieleManduchi,Feature:handle names longer than 12 chars,1,[],https://github.com/MDSplus/mdsplus/pull/1206,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1206,"Node names longer that 12 chars are now splitted and a subtree created. For example, adding a node whose name 'THISISALONGNODENAME' will ceate a subtree whose root is names 'THISISALONGN' and a son names 'ODENAME'. This feature is intended for usage in ITER IMAS where a way for mapping long names into tree nodes is required.","Node names longer that 12 chars are now splitted and a subtree created. For example, adding a node whose name 'THISISALONGNODENAME' will ceate a subtree whose root is names 'THISISALONGN' and a son names 'ODENAME'. This feature is intended for usage in ITER IMAS where a way for mapping long names into tree nodes is required.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1207,2018-01-19T00:03:11Z,2018-01-22T13:50:04Z,2018-01-26T14:54:31Z,MERGED,True,339,318,20,https://github.com/zack-vii,fix many problems by temporarely using private context,15,[],https://github.com/MDSplus/mdsplus/pull/1207,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1207,threadUnitTest with treeUnitTest now even sometimes succeeds,threadUnitTest with treeUnitTest now even sometimes succeeds,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1207,2018-01-19T00:03:11Z,2018-01-22T13:50:04Z,2018-01-26T14:54:31Z,MERGED,True,339,318,20,https://github.com/zack-vii,fix many problems by temporarely using private context,15,[],https://github.com/MDSplus/mdsplus/pull/1207,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1207#issuecomment-358857631,threadUnitTest with treeUnitTest now even sometimes succeeds,threadUnitTest on treeUnitTest passes even helgrind now,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1210,2018-01-19T17:40:38Z,2018-01-22T18:40:45Z,2018-01-22T19:21:49Z,MERGED,True,409,315,23,https://github.com/zack-vii,Zck threadsunittest,11,[],https://github.com/MDSplus/mdsplus/pull/1210,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1210,"added threadUnitTest agian to normal tests solves thread issues with most other test plugins
includes #1207","added threadUnitTest agian to normal tests solves thread issues with most other test plugins
includes #1207",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1212,2018-01-22T13:20:58Z,2018-01-22T14:14:06Z,2018-01-22T14:16:32Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Repair bug caused during removal of VMS specific code,2,[],https://github.com/MDSplus/mdsplus/pull/1212,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1212,"The IDL mdsvalue function had been broken by a change to remove obsolete
VMS code. This fix should restore the ability to invoke mdsvalue on
remote connections.","The IDL mdsvalue function had been broken by a change to remove obsolete
VMS code. This fix should restore the ability to invoke mdsvalue on
remote connections.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1215,2018-01-23T15:38:39Z,2018-01-23T16:17:25Z,2018-01-23T16:17:29Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: remove mdsip tests from threadUnitTest,1,[],https://github.com/MDSplus/mdsplus/pull/1215,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1215,"There appears to be aproblem with doing the mdsip tests in parallel which will
need to be investigated. This test being done in the threadUnitTest produces intermittent failuer preventing alpha builds from completing successfully.","There appears to be aproblem with doing the mdsip tests in parallel which will
need to be investigated. This test being done in the threadUnitTest produces intermittent failuer preventing alpha builds from completing successfully.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1216,2018-01-23T17:41:25Z,2018-01-23T18:06:51Z,2018-01-23T18:06:54Z,MERGED,True,170,14,6,https://github.com/zack-vii,Fix putSegments issue - offset problem on PutExtAttr,4,[],https://github.com/MDSplus/mdsplus/pull/1216,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1216,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1217,2018-01-23T21:57:40Z,2018-01-24T19:33:06Z,2018-05-29T18:39:44Z,CLOSED,False,1456238,63873,1072,https://github.com/tfredian,Feature: Update python epydoc documentation,1,[],https://github.com/MDSplus/mdsplus/pull/1217,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1217,"There is a makedoc.sh script in mdsobjects/python which will generate html
documentation for the python modules. This documentation has not been updated
for quite a while so this commit will bring it up to date.","There is a makedoc.sh script in mdsobjects/python which will generate html
documentation for the python modules. This documentation has not been updated
for quite a while so this commit will bring it up to date.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1217,2018-01-23T21:57:40Z,2018-01-24T19:33:06Z,2018-05-29T18:39:44Z,CLOSED,False,1456238,63873,1072,https://github.com/tfredian,Feature: Update python epydoc documentation,1,[],https://github.com/MDSplus/mdsplus/pull/1217,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1217#issuecomment-360247655,"There is a makedoc.sh script in mdsobjects/python which will generate html
documentation for the python modules. This documentation has not been updated
for quite a while so this commit will bring it up to date.",looking into making doc's during release builds instead,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1218,2018-01-24T18:53:17Z,2018-01-25T16:21:34Z,2018-01-25T16:21:57Z,MERGED,True,97,80,7,https://github.com/zack-vii,Zck phase xxx lookup,5,[],https://github.com/MDSplus/mdsplus/pull/1218,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1218,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1218,2018-01-24T18:53:17Z,2018-01-25T16:21:34Z,2018-01-25T16:21:57Z,MERGED,True,97,80,7,https://github.com/zack-vii,Zck phase xxx lookup,5,[],https://github.com/MDSplus/mdsplus/pull/1218,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1218#issuecomment-360303210,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1218,2018-01-24T18:53:17Z,2018-01-25T16:21:34Z,2018-01-25T16:21:57Z,MERGED,True,97,80,7,https://github.com/zack-vii,Zck phase xxx lookup,5,[],https://github.com/MDSplus/mdsplus/pull/1218,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1218#issuecomment-360313163,,"there is an unrelated race in dcl that i wil fix tomorrow
retest this please",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1218,2018-01-24T18:53:17Z,2018-01-25T16:21:34Z,2018-01-25T16:21:57Z,MERGED,True,97,80,7,https://github.com/zack-vii,Zck phase xxx lookup,5,[],https://github.com/MDSplus/mdsplus/pull/1218,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1218#issuecomment-360517794,,"You are missing something. There was a race condition and this fixes it.
The tdi fun which loads the site-specific phase table sets both the
phase names and the phase numbers into two different public tdi
variables. It loads the phase names first and then the phase numbers.
The function checks to see if the phase name public variable was
allocated (initialized) and if not loads the table setting the two
public vars. There was a race condition in that if two threads hit this
simultaneously the first one notices that the phase name var was not
allocated and calls the function to load the tables beginning with
setting the phase name var. The other thread notices that the phase name
var was allocated and then references the phase number var which was not
yet allocated by the first thread and causes an error. The loading of
phase tables was never done before in a threaded application so never
caused a problem. Implementing a more complicated dispatching scheme
could run into this issue if it was done as a multi-threaded
application. It showed up in a new test which does a lot of various tdi
expressions simultaneously in multiple threads. Simply changing the
phase table access to check on the public variable loaded last instead
of the first to see if the phase info was initialized fixes the problem.
…
On 1/25/2018 9:37 AM, Josh Stillerman wrote:

 ***@***.**** approved this pull request.

 It seems that if changing the order fixes this, then there must still
 be a race condition. Or am I missing something ?

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#1218 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHG5O7Q1Hul96F_jcGKQFkJYr1NPKiFeks5tOJGYgaJpZM4RrvlG>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1219,2018-01-26T18:41:00Z,2018-01-29T13:03:48Z,2018-01-29T15:48:33Z,MERGED,True,286,201,55,https://github.com/zack-vii,No-more no database - fix setTimeContext and more,12,[],https://github.com/MDSplus/mdsplus/pull/1219,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1219,"Fixed segfault when setTimeContext with no tree opened yet
fixed setTimeContext for cpp
reduced warnings due to redefinition of JAVA_JAR in Makefile.in
added some Tests
better handling of global trees under python","Fixed segfault when setTimeContext with no tree opened yet
fixed setTimeContext for cpp
reduced warnings due to redefinition of JAVA_JAR in Makefile.in
added some Tests
better handling of global trees under python",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1219,2018-01-26T18:41:00Z,2018-01-29T13:03:48Z,2018-01-29T15:48:33Z,MERGED,True,286,201,55,https://github.com/zack-vii,No-more no database - fix setTimeContext and more,12,[],https://github.com/MDSplus/mdsplus/pull/1219,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1219#issuecomment-360999011,"Fixed segfault when setTimeContext with no tree opened yet
fixed setTimeContext for cpp
reduced warnings due to redefinition of JAVA_JAR in Makefile.in
added some Tests
better handling of global trees under python",good to go,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1221,2018-01-29T21:55:43Z,2018-01-29T23:10:42Z,2019-01-15T22:15:43Z,MERGED,True,297,98,14,https://github.com/zack-vii,Some race cond and pointer issues in tree and tdi,8,[],https://github.com/MDSplus/mdsplus/pull/1221,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1221,"some test transfers to cpp
segfautl in tcl dir/tag
race in TreeDelete and NewTagSearch
uninit var in TdiGetArgs","some test transfers to cpp
segfautl in tcl dir/tag
race in TreeDelete and NewTagSearch
uninit var in TdiGetArgs",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1223,2018-01-30T14:37:24Z,2018-01-30T15:53:13Z,2018-01-30T15:53:19Z,MERGED,True,86,72722,135,https://github.com/tfredian,Feature: Generate the html epydocs for python during package build,3,[],https://github.com/MDSplus/mdsplus/pull/1223,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1223,"The html documentation provided in the python package use to be
included in github but it was never routinely updated. Generating
this documentation at package build time will ensure it is up to date.
The files included in the epydocs are highly dependent about the contents
of the python modules so instead depending on the expected package content
checking to include the latest documentation files this doc directory will
be excluded from the contents checking.","The html documentation provided in the python package use to be
included in github but it was never routinely updated. Generating
this documentation at package build time will ensure it is up to date.
The files included in the epydocs are highly dependent about the contents
of the python modules so instead depending on the expected package content
checking to include the latest documentation files this doc directory will
be excluded from the contents checking.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1224,2018-01-30T15:00:21Z,2018-01-30T15:25:42Z,2018-01-30T15:27:26Z,MERGED,True,1,1,1,https://github.com/zack-vii,Test: increased stacksize for alpine,1,[],https://github.com/MDSplus/mdsplus/pull/1224,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1224,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1225,2018-01-30T20:56:03Z,2018-02-17T19:47:10Z,2018-02-17T22:52:59Z,MERGED,True,2696,19826,71,https://github.com/tfredian,Add new tditest tests to the standard MDSplus test suite,33,[],https://github.com/MDSplus/mdsplus/pull/1225,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1225,"This pull request includes the addition of tests driven by the tditest application in the standard set of
tests which are performed during pull request tests and release builds. In adding this new build feature the new tests uncovered a problem with adding shared library based devices when editing an MDSplus tree. This problem is also fixed in this pull request.","This pull request includes the addition of tests driven by the tditest application in the standard set of
tests which are performed during pull request tests and release builds. In adding this new build feature the new tests uncovered a problem with adding shared library based devices when editing an MDSplus tree. This problem is also fixed in this pull request.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1225,2018-01-30T20:56:03Z,2018-02-17T19:47:10Z,2018-02-17T22:52:59Z,MERGED,True,2696,19826,71,https://github.com/tfredian,Add new tditest tests to the standard MDSplus test suite,33,[],https://github.com/MDSplus/mdsplus/pull/1225,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1225#issuecomment-366477381,"This pull request includes the addition of tests driven by the tditest application in the standard set of
tests which are performed during pull request tests and release builds. In adding this new build feature the new tests uncovered a problem with adding shared library based devices when editing an MDSplus tree. This problem is also fixed in this pull request.","Awesome!

⁣Sent from BlueMail ​
…
On Feb 17, 2018, 2:48 PM, at 2:48 PM, zack-vii ***@***.***> wrote:
Merged #1225.

--
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub:
#1225 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1226,2018-01-31T17:48:06Z,2018-02-05T16:07:32Z,2018-02-05T16:07:35Z,MERGED,True,1529,1672,22,https://github.com/zack-vii,Zck accumulate,18,[],https://github.com/MDSplus/mdsplus/pull/1226,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1226,fixes some issues with tdi functions and octaword. uses more int63_t instead quadword,fixes some issues with tdi functions and octaword. uses more int63_t instead quadword,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1226,2018-01-31T17:48:06Z,2018-02-05T16:07:32Z,2018-02-05T16:07:35Z,MERGED,True,1529,1672,22,https://github.com/zack-vii,Zck accumulate,18,[],https://github.com/MDSplus/mdsplus/pull/1226,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1226#issuecomment-362666091,fixes some issues with tdi functions and octaword. uses more int63_t instead quadword,"tests almost all builtin functions listed in
http://www.mdsplus.org/index.php/Documentation:Reference:TDI_INDEX
lowercase function seem to be fortran only
fixes bugs found along the way",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1226,2018-01-31T17:48:06Z,2018-02-05T16:07:32Z,2018-02-05T16:07:35Z,MERGED,True,1529,1672,22,https://github.com/zack-vii,Zck accumulate,18,[],https://github.com/MDSplus/mdsplus/pull/1226,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1226#issuecomment-363088192,fixes some issues with tdi functions and octaword. uses more int63_t instead quadword,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1228,2018-02-05T16:20:05Z,2018-02-26T16:15:32Z,2018-05-29T18:39:33Z,MERGED,True,87,1,1,https://github.com/joshStillerman,docs: Added ORNL and Livermore to the sites.csv file that makes the map,4,[],https://github.com/MDSplus/mdsplus/pull/1228,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1228,We have been receiving Queries from someone at ORNL about MDSplus and Python3,We have been receiving Queries from someone at ORNL about MDSplus and Python3,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1229,2018-02-05T16:45:35Z,2018-02-09T13:03:34Z,2018-02-09T15:27:43Z,MERGED,True,56,67,14,https://github.com/zack-vii,Zck python3 tests,5,[],https://github.com/MDSplus/mdsplus/pull/1229,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1229,This probes for platforms that require byteswap.. as it might not be tested at all and is likely broken,This probes for platforms that require byteswap.. as it might not be tested at all and is likely broken,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1231,2018-02-09T15:35:09Z,2018-02-10T20:45:05Z,2018-02-10T20:45:05Z,CLOSED,False,578,865,14,https://github.com/zack-vii,Zck int128,10,[],https://github.com/MDSplus/mdsplus/pull/1231,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1231,"use u/int64_t datatypes instead of own typedefs
fixes many issues with octaword operations e.g. division, decompile to decimal
use system's RNG
removed redundant code in TdiAnd
centralized int128 operations in int128.h header","use u/int64_t datatypes instead of own typedefs
fixes many issues with octaword operations e.g. division, decompile to decimal
use system's RNG
removed redundant code in TdiAnd
centralized int128 operations in int128.h header",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1231,2018-02-09T15:35:09Z,2018-02-10T20:45:05Z,2018-02-10T20:45:05Z,CLOSED,False,578,865,14,https://github.com/zack-vii,Zck int128,10,[],https://github.com/MDSplus/mdsplus/pull/1231,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1231#issuecomment-364690662,"use u/int64_t datatypes instead of own typedefs
fixes many issues with octaword operations e.g. division, decompile to decimal
use system's RNG
removed redundant code in TdiAnd
centralized int128 operations in int128.h header",int128 is buggy dont_merge,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1232,2018-02-11T21:19:34Z,2018-02-13T21:57:41Z,2018-02-13T21:57:48Z,MERGED,True,749,978,16,https://github.com/zack-vii,Zck int128,15,[],https://github.com/MDSplus/mdsplus/pull/1232,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1232,"use u/int64_t datatypes instead of own typedefs
fixes many issues with octaword operations e.g. division, decompile to decimal
use system's RNG
removed redundant code in TdiAnd
centralized int128 operations in int128.h header","use u/int64_t datatypes instead of own typedefs
fixes many issues with octaword operations e.g. division, decompile to decimal
use system's RNG
removed redundant code in TdiAnd
centralized int128 operations in int128.h header",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1233,2018-02-15T12:08:25Z,2018-02-15T17:16:52Z,2018-02-15T17:22:54Z,MERGED,True,384,392,13,https://github.com/zack-vii,Fix: use proper integer division for accuracy and performance,10,[],https://github.com/MDSplus/mdsplus/pull/1233,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1233,"int(x/y) might cause rounding errors although unlikely as arsize is 32 bit only
performance increase: no int-to-double and double-to-int conversion","int(x/y) might cause rounding errors although unlikely as arsize is 32 bit only
performance increase: no int-to-double and double-to-int conversion",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1234,2018-02-18T01:28:50Z,2018-02-23T00:45:39Z,2019-01-15T22:14:45Z,MERGED,True,270,485,8,https://github.com/zack-vii,Zck fix cull and some cleanup,10,[],https://github.com/MDSplus/mdsplus/pull/1234,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1234,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1234,2018-02-18T01:28:50Z,2018-02-23T00:45:39Z,2019-01-15T22:14:45Z,MERGED,True,270,485,8,https://github.com/zack-vii,Zck fix cull and some cleanup,10,[],https://github.com/MDSplus/mdsplus/pull/1234,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1234#issuecomment-366485227,,"3..5 == 0 : 5
23..5 == 2 : 5
_a..5 == _ : 5

is a compiler issue.
3 .. 5 == 3 : 5

works!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1234,2018-02-18T01:28:50Z,2018-02-23T00:45:39Z,2019-01-15T22:14:45Z,MERGED,True,270,485,8,https://github.com/zack-vii,Zck fix cull and some cleanup,10,[],https://github.com/MDSplus/mdsplus/pull/1234,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1234#issuecomment-366508312,,fixes race from fc27 #'302 64-san-thread in MdsTdiTest.log,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1234,2018-02-18T01:28:50Z,2018-02-23T00:45:39Z,2019-01-15T22:14:45Z,MERGED,True,270,485,8,https://github.com/zack-vii,Zck fix cull and some cleanup,10,[],https://github.com/MDSplus/mdsplus/pull/1234,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1234#issuecomment-366534030,,"the fix for 1..3 compile is hacky but works. if anyone knows what cases it in the first place, please let me know.
I assume it has to do with the fact that both '..' (len=2) and ':' (len=1) map to the same operation",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1234,2018-02-18T01:28:50Z,2018-02-23T00:45:39Z,2019-01-15T22:14:45Z,MERGED,True,270,485,8,https://github.com/zack-vii,Zck fix cull and some cleanup,10,[],https://github.com/MDSplus/mdsplus/pull/1234,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1234#issuecomment-367328178,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1235,2018-02-20T18:43:54Z,2018-02-20T19:19:34Z,2018-06-04T20:27:47Z,MERGED,True,2,2,1,https://github.com/joshStillerman,Jas fix sum of floats,2,[],https://github.com/MDSplus/mdsplus/pull/1235,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1235,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1236,2018-02-22T13:31:38Z,2018-02-26T14:12:24Z,2019-01-15T22:14:53Z,MERGED,True,6,4,4,https://github.com/zack-vii,Zck python3,3,[],https://github.com/MDSplus/mdsplus/pull/1236,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1236,"in python3 it is more obvious which one to use getattribute vs getattr.
this fixes MDSplus.Dictionary.data()","in python3 it is more obvious which one to use getattribute vs getattr.
this fixes MDSplus.Dictionary.data()",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1239,2018-02-23T21:35:55Z,2018-02-26T13:27:50Z,2018-05-29T18:39:35Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Fix: decompile must return a primitive python string,2,[],https://github.com/MDSplus/mdsplus/pull/1239,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1239,"for the python widgets to use the result.
Expression widgets in python setups were being displayed as, and reset to, empty unless they were
numeric scalars.
This was because the decompile of record of a node was getting returned as an MDSplus String instead
of a python string.
Closes: #1238","for the python widgets to use the result.
Expression widgets in python setups were being displayed as, and reset to, empty unless they were
numeric scalars.
This was because the decompile of record of a node was getting returned as an MDSplus String instead
of a python string.
Closes: #1238",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1241,2018-02-26T15:48:29Z,2018-02-27T19:31:06Z,2018-03-23T10:05:07Z,CLOSED,False,5,0,2,https://github.com/GabrieleManduchi,Gm fix settimecontext,4,[],https://github.com/MDSplus/mdsplus/pull/1241,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1241,"There were still cases in which TreeSetTimeConcest() was called with a null dbid, e.g. when called within mdsip. This check avoids crashes in mdsip that occurred using jScope (in turn using SetTimeContext via mdsip). When no dbid is defined, success is returned  (TreeSetTimeContext is void)","There were still cases in which TreeSetTimeConcest() was called with a null dbid, e.g. when called within mdsip. This check avoids crashes in mdsip that occurred using jScope (in turn using SetTimeContext via mdsip). When no dbid is defined, success is returned  (TreeSetTimeContext is void)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1241,2018-02-26T15:48:29Z,2018-02-27T19:31:06Z,2018-03-23T10:05:07Z,CLOSED,False,5,0,2,https://github.com/GabrieleManduchi,Gm fix settimecontext,4,[],https://github.com/MDSplus/mdsplus/pull/1241,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1241#issuecomment-368586446,"There were still cases in which TreeSetTimeConcest() was called with a null dbid, e.g. when called within mdsip. This check avoids crashes in mdsip that occurred using jScope (in turn using SetTimeContext via mdsip). When no dbid is defined, success is returned  (TreeSetTimeContext is void)",I added a simple line within the cpp tests that verifies the issue .. it is supposed to work here with the Gab changes and seems to hang the process otherwise.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1241,2018-02-26T15:48:29Z,2018-02-27T19:31:06Z,2018-03-23T10:05:07Z,CLOSED,False,5,0,2,https://github.com/GabrieleManduchi,Gm fix settimecontext,4,[],https://github.com/MDSplus/mdsplus/pull/1241,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1241#issuecomment-368639670,"There were still cases in which TreeSetTimeConcest() was called with a null dbid, e.g. when called within mdsip. This check avoids crashes in mdsip that occurred using jScope (in turn using SetTimeContext via mdsip). When no dbid is defined, success is returned  (TreeSetTimeContext is void)","I was able to reproduce the hang issue with calling SetTimeContect() in the MdsConnectionTest. I suspect this may be occurring because of the way the mdsip ""servers"" are being started which is now done using forking of the test itself instead of running mdsip processes. Perhaps the thread locks used in the tree context are getting messed up when the servers are forked from the original test process.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1241,2018-02-26T15:48:29Z,2018-02-27T19:31:06Z,2018-03-23T10:05:07Z,CLOSED,False,5,0,2,https://github.com/GabrieleManduchi,Gm fix settimecontext,4,[],https://github.com/MDSplus/mdsplus/pull/1241,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1241#issuecomment-368997850,"There were still cases in which TreeSetTimeConcest() was called with a null dbid, e.g. when called within mdsip. This check avoids crashes in mdsip that occurred using jScope (in turn using SetTimeContext via mdsip). When no dbid is defined, success is returned  (TreeSetTimeContext is void)",replaced by pr #1243 which includes the test and fixes the core problem,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1242,2018-02-26T20:04:11Z,2018-02-27T18:25:22Z,2018-03-14T17:30:35Z,CLOSED,False,41,3,3,https://github.com/tfredian,Build: Restore Visual Studio support for windows installer,7,[],https://github.com/MDSplus/mdsplus/pull/1242,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1242,"At some point the code which created the VS cppshr dll and the VS
compatible libs was removed from the build scripts. This attempts to
reenable the VS support.","At some point the code which created the VS cppshr dll and the VS
compatible libs was removed from the build scripts. This attempts to
reenable the VS support.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1243,2018-02-27T19:29:46Z,2018-02-28T17:11:27Z,2018-02-28T17:11:30Z,MERGED,True,167,166,15,https://github.com/zack-vii,Zck context mdsip,10,[],https://github.com/MDSplus/mdsplus/pull/1243,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1243,"enables MdsConnectionTest for Windows by dropping the use of fork
fixes issue regarding missing initial treecontext for mdsip with -m flag mentioned here #1240
replaces pr  #1241","enables MdsConnectionTest for Windows by dropping the use of fork
fixes issue regarding missing initial treecontext for mdsip with -m flag mentioned here #1240
replaces pr  #1241",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1243,2018-02-27T19:29:46Z,2018-02-28T17:11:27Z,2018-02-28T17:11:30Z,MERGED,True,167,166,15,https://github.com/zack-vii,Zck context mdsip,10,[],https://github.com/MDSplus/mdsplus/pull/1243,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1243#issuecomment-369002796,"enables MdsConnectionTest for Windows by dropping the use of fork
fixes issue regarding missing initial treecontext for mdsip with -m flag mentioned here #1240
replaces pr  #1241",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1243,2018-02-27T19:29:46Z,2018-02-28T17:11:27Z,2018-02-28T17:11:30Z,MERGED,True,167,166,15,https://github.com/zack-vii,Zck context mdsip,10,[],https://github.com/MDSplus/mdsplus/pull/1243,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1243#issuecomment-369015557,"enables MdsConnectionTest for Windows by dropping the use of fork
fixes issue regarding missing initial treecontext for mdsip with -m flag mentioned here #1240
replaces pr  #1241",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1244,2018-02-28T20:04:34Z,2018-03-01T14:32:42Z,2018-03-01T14:32:42Z,MERGED,True,171,845,6,https://github.com/zack-vii,Zck winevent,7,[],https://github.com/MDSplus/mdsplus/pull/1244,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1244,"eventtest for windows
use posix code for windows
fix wfevent for windows","eventtest for windows
use posix code for windows
fix wfevent for windows",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1244,2018-02-28T20:04:34Z,2018-03-01T14:32:42Z,2018-03-01T14:32:42Z,MERGED,True,171,845,6,https://github.com/zack-vii,Zck winevent,7,[],https://github.com/MDSplus/mdsplus/pull/1244,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1244#issuecomment-369580641,"eventtest for windows
use posix code for windows
fix wfevent for windows",good to go,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1245,2018-03-01T17:24:02Z,2018-03-05T15:41:26Z,2018-03-05T15:41:29Z,MERGED,True,114,63,3,https://github.com/zack-vii,Fix: UdpEventGetInterface for Windows,1,[],https://github.com/MDSplus/mdsplus/pull/1245,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1245,added some debug options and ported the UdpEventGetInterface method to Windows,added some debug options and ported the UdpEventGetInterface method to Windows,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1245,2018-03-01T17:24:02Z,2018-03-05T15:41:26Z,2018-03-05T15:41:29Z,MERGED,True,114,63,3,https://github.com/zack-vii,Fix: UdpEventGetInterface for Windows,1,[],https://github.com/MDSplus/mdsplus/pull/1245,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1245#issuecomment-369692721,added some debug options and ported the UdpEventGetInterface method to Windows,"no sure why alpine randomly segfaults in MdsTdiTest
i downloaded the full workspace and unpacked everything locally into the respective folder ./build/
i could open the core and it told me there was a segfault here ?
(gdb) list
114           results[thread_idx]=thread_idx;
115           if (pthread_create(&threads[thread_idx], attrp, ThreadTest, &results[thread_idx]))
116             break;
117         }
118         if (attrp) pthread_attr_destroy(attrp);
119         if (thread_idx<NUM_THREADS) fprintf(stderr,""Could not create all %d threads\n"", NUM_THREADS);
120         for (thread_idx = 0 ; thread_idx<NUM_THREADS ; thread_idx++)
121           pthread_join(threads[thread_idx],NULL);
122         for (thread_idx = 0 ; thread_idx<NUM_THREADS ; thread_idx++)
123           TEST0(results[thread_idx]);
(gdb)
not sure which line it now is.
I if i run the very code it has no problems. If someone could manually run the test a number of times on the jenkins worker in the respective docker image. i am sure the issue lies withing the docker and the host.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1245,2018-03-01T17:24:02Z,2018-03-05T15:41:26Z,2018-03-05T15:41:29Z,MERGED,True,114,63,3,https://github.com/zack-vii,Fix: UdpEventGetInterface for Windows,1,[],https://github.com/MDSplus/mdsplus/pull/1245,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1245#issuecomment-369778867,added some debug options and ported the UdpEventGetInterface method to Windows,I dedicated a new label alpine to the alpine-x86 builds on cmod103 in hope this will take out some of the randomness.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1245,2018-03-01T17:24:02Z,2018-03-05T15:41:26Z,2018-03-05T15:41:29Z,MERGED,True,114,63,3,https://github.com/zack-vii,Fix: UdpEventGetInterface for Windows,1,[],https://github.com/MDSplus/mdsplus/pull/1245,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1245#issuecomment-370447675,added some debug options and ported the UdpEventGetInterface method to Windows,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1247,2018-03-05T16:48:08Z,2018-03-05T21:12:03Z,2018-03-14T17:30:30Z,MERGED,True,3,3,2,https://github.com/tfredian,Build: Avoid potential gpg locking problems caused by aborted builds,3,[],https://github.com/MDSplus/mdsplus/pull/1247,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1247,"Under some circumstances file in the .gnupg directory used when signing
installers can become locked. This is rare but it can cause builds to hang indefinitely. This change makes a copy of the signing information and uses the copy for each installer creation.","Under some circumstances file in the .gnupg directory used when signing
installers can become locked. This is rare but it can cause builds to hang indefinitely. This change makes a copy of the signing information and uses the copy for each installer creation.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1247,2018-03-05T16:48:08Z,2018-03-05T21:12:03Z,2018-03-14T17:30:30Z,MERGED,True,3,3,2,https://github.com/tfredian,Build: Avoid potential gpg locking problems caused by aborted builds,3,[],https://github.com/MDSplus/mdsplus/pull/1247,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1247#issuecomment-370528566,"Under some circumstances file in the .gnupg directory used when signing
installers can become locked. This is rare but it can cause builds to hang indefinitely. This change makes a copy of the signing information and uses the copy for each installer creation.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1247,2018-03-05T16:48:08Z,2018-03-05T21:12:03Z,2018-03-14T17:30:30Z,MERGED,True,3,3,2,https://github.com/tfredian,Build: Avoid potential gpg locking problems caused by aborted builds,3,[],https://github.com/MDSplus/mdsplus/pull/1247,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1247#issuecomment-370545783,"Under some circumstances file in the .gnupg directory used when signing
installers can become locked. This is rare but it can cause builds to hang indefinitely. This change makes a copy of the signing information and uses the copy for each installer creation.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1247,2018-03-05T16:48:08Z,2018-03-05T21:12:03Z,2018-03-14T17:30:30Z,MERGED,True,3,3,2,https://github.com/tfredian,Build: Avoid potential gpg locking problems caused by aborted builds,3,[],https://github.com/MDSplus/mdsplus/pull/1247,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1247#issuecomment-370551039,"Under some circumstances file in the .gnupg directory used when signing
installers can become locked. This is rare but it can cause builds to hang indefinitely. This change makes a copy of the signing information and uses the copy for each installer creation.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1248,2018-03-05T16:58:25Z,2018-03-05T22:41:37Z,2018-03-05T22:41:42Z,MERGED,True,87,47,5,https://github.com/zack-vii,Zck stack copysegmentindex,6,[],https://github.com/MDSplus/mdsplus/pull/1248,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1248,"Fixes a problem with updateSegment that resulted in corrupted data.
avoid recursive stack-memory expensive CopySegmentIndex.
only read and store sindex offsets and process them in correct order","Fixes a problem with updateSegment that resulted in corrupted data.
avoid recursive stack-memory expensive CopySegmentIndex.
only read and store sindex offsets and process them in correct order",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1248,2018-03-05T16:58:25Z,2018-03-05T22:41:37Z,2018-03-05T22:41:42Z,MERGED,True,87,47,5,https://github.com/zack-vii,Zck stack copysegmentindex,6,[],https://github.com/MDSplus/mdsplus/pull/1248,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1248#issuecomment-370593074,"Fixes a problem with updateSegment that resulted in corrupted data.
avoid recursive stack-memory expensive CopySegmentIndex.
only read and store sindex offsets and process them in correct order",needs some more tests but this pr seems to have fixed the problem with compression of large files on windows systems as well :),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1249,2018-03-06T16:54:02Z,2018-03-06T18:56:36Z,2018-03-14T17:30:23Z,MERGED,True,2,1,2,https://github.com/tfredian,Fix: Repair installer signing,1,[],https://github.com/MDSplus/mdsplus/pull/1249,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1249,"Previous attempt to prevent signing interference between concurrent builds
introduced some other errors preventing the installers from being signed. This should fix this problem.","Previous attempt to prevent signing interference between concurrent builds
introduced some other errors preventing the installers from being signed. This should fix this problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1250,2018-03-06T19:53:51Z,2018-03-07T02:26:59Z,2019-01-15T22:14:54Z,MERGED,True,437,257,19,https://github.com/zack-vii,Zck scaled segments,11,[],https://github.com/MDSplus/mdsplus/pull/1250,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1250,"adds a new feature of scaled segmentsyou can add the value expression for a node using
TreeSetSegmentScale(nid, expr)

methods like getSegment(nid,idx) and getRecord() will look for the SegmentScale xnci and return:
Signal(expr, segment_data, segment_dim)

if the xnci exists and is not NULL. otherwise it will return:
Signal(segment_data, *, segment_dim)


, the original result.","adds a new feature of scaled segmentsyou can add the value expression for a node using
TreeSetSegmentScale(nid, expr)

methods like getSegment(nid,idx) and getRecord() will look for the SegmentScale xnci and return:
Signal(expr, segment_data, segment_dim)

if the xnci exists and is not NULL. otherwise it will return:
Signal(segment_data, *, segment_dim)


, the original result.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1250,2018-03-06T19:53:51Z,2018-03-07T02:26:59Z,2019-01-15T22:14:54Z,MERGED,True,437,257,19,https://github.com/zack-vii,Zck scaled segments,11,[],https://github.com/MDSplus/mdsplus/pull/1250,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1250#issuecomment-370972435,"adds a new feature of scaled segmentsyou can add the value expression for a node using
TreeSetSegmentScale(nid, expr)

methods like getSegment(nid,idx) and getRecord() will look for the SegmentScale xnci and return:
Signal(expr, segment_data, segment_dim)

if the xnci exists and is not NULL. otherwise it will return:
Signal(segment_data, *, segment_dim)


, the original result.",yea,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1251,2018-03-07T09:59:26Z,2018-03-07T13:17:43Z,2018-11-03T11:36:42Z,MERGED,True,17,5,1,https://github.com/zack-vii,Tests: skip MultiThread Tdi Test on alpine,1,[],https://github.com/MDSplus/mdsplus/pull/1251,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1251,based on default thread stack size,based on default thread stack size,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1251,2018-03-07T09:59:26Z,2018-03-07T13:17:43Z,2018-11-03T11:36:42Z,MERGED,True,17,5,1,https://github.com/zack-vii,Tests: skip MultiThread Tdi Test on alpine,1,[],https://github.com/MDSplus/mdsplus/pull/1251,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1251#issuecomment-371087988,based on default thread stack size,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1252,2018-03-07T16:43:01Z,2018-03-09T15:34:30Z,2018-03-09T15:34:38Z,MERGED,True,39,3,1,https://github.com/GabrieleManduchi,Fix:unsigned shorts in MDsDataProvider,4,[],https://github.com/MDSplus/mdsplus/pull/1252,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1252,Added explicit handling of unsigned bytes returned by mdsip evaluation in order to fully use the 8 bit dynamics,Added explicit handling of unsigned bytes returned by mdsip evaluation in order to fully use the 8 bit dynamics,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1252,2018-03-07T16:43:01Z,2018-03-09T15:34:30Z,2018-03-09T15:34:38Z,MERGED,True,39,3,1,https://github.com/GabrieleManduchi,Fix:unsigned shorts in MDsDataProvider,4,[],https://github.com/MDSplus/mdsplus/pull/1252,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1252#issuecomment-371494376,Added explicit handling of unsigned bytes returned by mdsip evaluation in order to fully use the 8 bit dynamics,"Right, just added",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1252,2018-03-07T16:43:01Z,2018-03-09T15:34:30Z,2018-03-09T15:34:38Z,MERGED,True,39,3,1,https://github.com/GabrieleManduchi,Fix:unsigned shorts in MDsDataProvider,4,[],https://github.com/MDSplus/mdsplus/pull/1252,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1252#issuecomment-371846320,Added explicit handling of unsigned bytes returned by mdsip evaluation in order to fully use the 8 bit dynamics,"Timo,
could you approve the pull request, if there are no other issues?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1254,2018-03-07T17:08:16Z,2018-03-08T17:00:48Z,2018-03-08T17:07:14Z,MERGED,True,408,419,44,https://github.com/zack-vii,Feature: allow strings to specify usage in TreeAddNode,18,[],https://github.com/MDSplus/mdsplus/pull/1254,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1254,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1254,2018-03-07T17:08:16Z,2018-03-08T17:00:48Z,2018-03-08T17:07:14Z,MERGED,True,408,419,44,https://github.com/zack-vii,Feature: allow strings to specify usage in TreeAddNode,18,[],https://github.com/MDSplus/mdsplus/pull/1254,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1254#issuecomment-371468197,,"i added a few more things that popped to mind while i was testing the apd stuff.

getFileName on the current context from within python, fixed race condition, not officially exported-> no problem
tditest stacktrace and compiler messages.
comment symbol in MdsTdiTest matching tditest",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1255,2018-03-07T17:57:28Z,2018-03-07T20:46:25Z,2018-06-04T20:27:42Z,MERGED,True,4,4,2,https://github.com/joshStillerman,Fix: acq device getInteger method using node.record,1,[],https://github.com/MDSplus/mdsplus/pull/1255,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1255,"When an integer value is expected int(node.record) returns an
error instead of evaluating the contents of the record.
In addition the text of the error message for BAD_POST_TRIG was
wrong, copy and pasted from a clock error.","When an integer value is expected int(node.record) returns an
error instead of evaluating the contents of the record.
In addition the text of the error message for BAD_POST_TRIG was
wrong, copy and pasted from a clock error.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1256,2018-03-09T17:34:49Z,2018-03-12T12:42:19Z,2018-06-04T20:27:41Z,MERGED,True,84,130,3,https://github.com/GabrieleManduchi,Epics improvements,5,[],https://github.com/MDSplus/mdsplus/pull/1256,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1256,"Implementation of a set of fixes/requests from Brian Nelson and P. Sichta, namely:

Fix of mdsexpr record for text fields
Verification of 1D arrays
implementation of timeout in MDSplus event aware driver.

In addition, the documentation on the Wiki has been updated
Note that these changes do not affect any other MDSplus component","Implementation of a set of fixes/requests from Brian Nelson and P. Sichta, namely:

Fix of mdsexpr record for text fields
Verification of 1D arrays
implementation of timeout in MDSplus event aware driver.

In addition, the documentation on the Wiki has been updated
Note that these changes do not affect any other MDSplus component",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1256,2018-03-09T17:34:49Z,2018-03-12T12:42:19Z,2018-06-04T20:27:41Z,MERGED,True,84,130,3,https://github.com/GabrieleManduchi,Epics improvements,5,[],https://github.com/MDSplus/mdsplus/pull/1256,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1256#issuecomment-372230090,"Implementation of a set of fixes/requests from Brian Nelson and P. Sichta, namely:

Fix of mdsexpr record for text fields
Verification of 1D arrays
implementation of timeout in MDSplus event aware driver.

In addition, the documentation on the Wiki has been updated
Note that these changes do not affect any other MDSplus component",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1257,2018-03-11T15:11:02Z,2018-03-12T12:19:32Z,2018-03-12T12:19:40Z,CLOSED,False,3,1,1,https://github.com/tfredian,Fix: Do not call TreeSwitchDbid with NULL,1,[],https://github.com/MDSplus/mdsplus/pull/1257,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1257,Tdi1Using was calling TreeSwitchDbid with a NULL which caused a segfault later.,Tdi1Using was calling TreeSwitchDbid with a NULL which caused a segfault later.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1257,2018-03-11T15:11:02Z,2018-03-12T12:19:32Z,2018-03-12T12:19:40Z,CLOSED,False,3,1,1,https://github.com/tfredian,Fix: Do not call TreeSwitchDbid with NULL,1,[],https://github.com/MDSplus/mdsplus/pull/1257,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1257#issuecomment-372123564,Tdi1Using was calling TreeSwitchDbid with a NULL which caused a segfault later.,A similar issue might exist in javamds/mdsobjects.c which will need to be investigated.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1258,2018-03-12T11:44:28Z,2018-03-12T16:29:27Z,2019-01-15T22:14:55Z,MERGED,True,152,589,40,https://github.com/zack-vii,Zck tdiusing,11,[],https://github.com/MDSplus/mdsplus/pull/1258,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1258,includes some minor fixes that i found while playing around,includes some minor fixes that i found while playing around,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1259,2018-03-12T19:12:04Z,2018-03-12T20:20:33Z,2018-03-12T20:20:33Z,MERGED,True,261,202,23,https://github.com/zack-vii,Fix: jTraverser2 instead of jTraverser replacement,1,[],https://github.com/MDSplus/mdsplus/pull/1259,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1259,should fix #1037 and update javatraverser2 to new apis,should fix #1037 and update javatraverser2 to new apis,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1259,2018-03-12T19:12:04Z,2018-03-12T20:20:33Z,2018-03-12T20:20:33Z,MERGED,True,261,202,23,https://github.com/zack-vii,Fix: jTraverser2 instead of jTraverser replacement,1,[],https://github.com/MDSplus/mdsplus/pull/1259,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1259#issuecomment-372437687,should fix #1037 and update javatraverser2 to new apis,jTraverser2 only included in windows now.. the script to include it in other oses requires a change to the build scripts i think. to be done at some point but nor part of this pr,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1260,2018-03-13T22:55:33Z,2018-03-14T13:19:46Z,2018-03-14T13:19:47Z,MERGED,True,480,385,46,https://github.com/zack-vii,Zck javatraverser2,6,[],https://github.com/MDSplus/mdsplus/pull/1260,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1260,"includes jTraverser in unix packages
updated java files (segmentLimits, fix MISS_ARGS on * return, ctx to Editors)
updated udtc.h with udt.h","includes jTraverser in unix packages
updated java files (segmentLimits, fix MISS_ARGS on * return, ctx to Editors)
updated udtc.h with udt.h",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1261,2018-03-14T13:49:02Z,2018-03-14T14:49:19Z,2018-03-14T14:49:26Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Java_MDSplus_Tree_openTree new segfault bug,1,[],https://github.com/MDSplus/mdsplus/pull/1261,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1261,"A change to the code caused an unitialized tree ctx to be passed
to TreeOpen causing an immediate segfault.","A change to the code caused an unitialized tree ctx to be passed
to TreeOpen causing an immediate segfault.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1262,2018-03-14T20:14:59Z,2018-03-19T12:10:40Z,2018-04-20T16:15:47Z,MERGED,True,375,401,13,https://github.com/zack-vii,Zck javatraverser2,9,[],https://github.com/MDSplus/mdsplus/pull/1262,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1262,some fixes for jTraverser,some fixes for jTraverser,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1263,2018-03-19T14:42:18Z,2018-03-19T16:56:44Z,2018-06-04T20:27:38Z,MERGED,True,6,0,1,https://github.com/joshStillerman,fix: On Macintosh - listening for multiple UDP Events,2,[],https://github.com/MDSplus/mdsplus/pull/1263,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1263,"On Macintosh the second event created by a process errors out with
Cannot bind socket
: Address already in use
This is due to the MAC socket implimentation needing BOTH
SO_REUSEADDR
SO_REUSEPORT
options.
Using both does not appear to break things on Linux","On Macintosh the second event created by a process errors out with
Cannot bind socket
: Address already in use
This is due to the MAC socket implimentation needing BOTH
SO_REUSEADDR
SO_REUSEPORT
options.
Using both does not appear to break things on Linux",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1264,2018-03-20T15:28:07Z,2018-03-20T18:45:43Z,2018-03-20T18:57:38Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Fix some more compiler warnings,1,[],https://github.com/MDSplus/mdsplus/pull/1264,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1264,This removes a few more clobber and unused parameter warnings.,This removes a few more clobber and unused parameter warnings.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1265,2018-03-21T18:39:50Z,2018-03-21T19:34:07Z,2018-03-21T19:34:16Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Remove leftover debug printout in TreeSegments.c,1,[],https://github.com/MDSplus/mdsplus/pull/1265,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1265,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1266,2018-03-22T12:28:59Z,2018-03-26T12:08:33Z,2018-03-26T12:08:33Z,MERGED,True,1067,2,13,https://github.com/GabrieleManduchi,Gm redpitaya device,5,[],https://github.com/MDSplus/mdsplus/pull/1266,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1266,Support for RFX_RPADC device. This device is based on RedPitaya ADC and performs either continuous streaming or event streaming. An event is triggered by the selected channel input level above or below a given threshold for a given number of samples.,Support for RFX_RPADC device. This device is based on RedPitaya ADC and performs either continuous streaming or event streaming. An event is triggered by the selected channel input level above or below a given threshold for a given number of samples.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1266,2018-03-22T12:28:59Z,2018-03-26T12:08:33Z,2018-03-26T12:08:33Z,MERGED,True,1067,2,13,https://github.com/GabrieleManduchi,Gm redpitaya device,5,[],https://github.com/MDSplus/mdsplus/pull/1266,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1266#issuecomment-375577733,Support for RFX_RPADC device. This device is based on RedPitaya ADC and performs either continuous streaming or event streaming. An event is triggered by the selected channel input level above or below a given threshold for a given number of samples.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1266,2018-03-22T12:28:59Z,2018-03-26T12:08:33Z,2018-03-26T12:08:33Z,MERGED,True,1067,2,13,https://github.com/GabrieleManduchi,Gm redpitaya device,5,[],https://github.com/MDSplus/mdsplus/pull/1266,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1266#issuecomment-375691936,Support for RFX_RPADC device. This device is based on RedPitaya ADC and performs either continuous streaming or event streaming. An event is triggered by the selected channel input level above or below a given threshold for a given number of samples.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1268,2018-03-24T16:23:52Z,2018-03-25T14:17:52Z,2018-03-25T14:17:59Z,MERGED,True,29,0,3,https://github.com/tfredian,Fix: Fix problem with adding extended attributes to empty nodes,1,[],https://github.com/MDSplus/mdsplus/pull/1268,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1268,"The code for adding extended attributes mishandled nodes that
did not contain data. Instead of writing the attributes header
to the end of the datafile it instead wrote it to beginning
of the datafile. Subsquent adding of attributes to other nodes
without data also wrote it to the beginning of the datafile
overwriting any other settings found in that location. This fix
ensures that if there are no extended attributes defined for a node
the extended attributes will be written to the end of the datafile.
Tests for TCL> SET/SHOW ATTRIBUTE commands were also added to the
tditest/testing/tdi-tcl.tdi test.
This should fix #1267","The code for adding extended attributes mishandled nodes that
did not contain data. Instead of writing the attributes header
to the end of the datafile it instead wrote it to beginning
of the datafile. Subsquent adding of attributes to other nodes
without data also wrote it to the beginning of the datafile
overwriting any other settings found in that location. This fix
ensures that if there are no extended attributes defined for a node
the extended attributes will be written to the end of the datafile.
Tests for TCL> SET/SHOW ATTRIBUTE commands were also added to the
tditest/testing/tdi-tcl.tdi test.
This should fix #1267",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1270,2018-03-26T13:18:43Z,2018-03-26T16:07:22Z,2018-05-29T18:39:31Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Avoid Tree Not Open errors when switching ctx in java,2,[],https://github.com/MDSplus/mdsplus/pull/1270,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1270,"Currently the code switch the global tree context raises exceptions
if no tree is open in the global context. This suppresses that exception
to enable data in tree nodes to be accessible in expressions.
This is related to issue #1269 but only provides a quick temporary fix.","Currently the code switch the global tree context raises exceptions
if no tree is open in the global context. This suppresses that exception
to enable data in tree nodes to be accessible in expressions.
This is related to issue #1269 but only provides a quick temporary fix.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1271,2018-03-26T14:33:21Z,2018-03-26T16:46:53Z,2018-05-29T18:39:30Z,MERGED,True,119,0,5,https://github.com/GabrieleManduchi,Gm extended attributes,3,[],https://github.com/MDSplus/mdsplus/pull/1271,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1271,Added getter and setter methods for extended tree node attributes in C++ and java,Added getter and setter methods for extended tree node attributes in C++ and java,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1272,2018-03-26T18:16:43Z,2018-03-26T18:48:16Z,2018-03-26T18:48:16Z,CLOSED,False,70,0,1,https://github.com/tfredian,Feature: Enable manipulation of node extended atts in python,1,[],https://github.com/MDSplus/mdsplus/pull/1272,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1272,"This adds the capability to manipulate extended attributes of
nodes in MDSplus tree using the python MDSplus module.
A node attribute can be added or modified by using the
setExtendedAttribute(name,value) method of a TreeNode.
The value of an extended attribute can be fetched using
the getExtendedAttribute(name) method. A python dictionary
of all extended attributes of a node can be obtained using
the getExtendedAttributes() method. Some special node
property shortcuts can be used as well. A TreeNode
instances property whose name begins with two underscores
can be used to set or get an extended attribute.
The following demonstrates these new features:
>>> t=Tree('main',1)
>>> t.NUMERIC.setExtendedAttribute('att1',42)
>>> t.NUMERIC.setExtendedAttribute('att2',Range(1,100))
>>> t.NUMERIC.getExtendedAttribute('att1')
42
>>> t.NUMERIC.getExtendedAttribute('att2')
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'att2   ': 1 : 100 : *, 'att1   ': 42, 'special': 42}
>>> t.NUMERIC.__att3=100
>>> t.NUMERIC.__att2
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'special': 42, 'att3   ': 100, 'att1   ': 42, 'att2   ': 1 : 100 : *}
>>> t.NUMERIC.__special=None
>>> t.NUMERIC.getExtendedAttributes()
{'att3   ': 100, 'att1   ': 42, 'att2   ': 1 : 100 : *}","This adds the capability to manipulate extended attributes of
nodes in MDSplus tree using the python MDSplus module.
A node attribute can be added or modified by using the
setExtendedAttribute(name,value) method of a TreeNode.
The value of an extended attribute can be fetched using
the getExtendedAttribute(name) method. A python dictionary
of all extended attributes of a node can be obtained using
the getExtendedAttributes() method. Some special node
property shortcuts can be used as well. A TreeNode
instances property whose name begins with two underscores
can be used to set or get an extended attribute.
The following demonstrates these new features:
>>> t=Tree('main',1)
>>> t.NUMERIC.setExtendedAttribute('att1',42)
>>> t.NUMERIC.setExtendedAttribute('att2',Range(1,100))
>>> t.NUMERIC.getExtendedAttribute('att1')
42
>>> t.NUMERIC.getExtendedAttribute('att2')
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'att2   ': 1 : 100 : *, 'att1   ': 42, 'special': 42}
>>> t.NUMERIC.__att3=100
>>> t.NUMERIC.__att2
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'special': 42, 'att3   ': 100, 'att1   ': 42, 'att2   ': 1 : 100 : *}
>>> t.NUMERIC.__special=None
>>> t.NUMERIC.getExtendedAttributes()
{'att3   ': 100, 'att1   ': 42, 'att2   ': 1 : 100 : *}",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1273,2018-03-26T21:19:24Z,2018-03-27T17:56:53Z,2018-05-29T18:39:28Z,MERGED,True,87,1,2,https://github.com/tfredian,Feature: extended attr support for python,1,[],https://github.com/MDSplus/mdsplus/pull/1273,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1273,"This adds the capability to manipulate extended attributes of
nodes in MDSplus tree using the python MDSplus module.
A node attribute can be added or modified by using the
setExtendedAttribute(name,value) method of a TreeNode.
The value of an extended attribute can be fetched using
the getExtendedAttribute(name) method. A python dictionary
of all extended attributes of a node can be obtained using
the getExtendedAttributes() method. Some special node
property shortcuts can be used as well. A TreeNode
instances property whose name begins with two underscores
can be used to set or get an extended attribute.
The following demonstrates these new features:
>>> t=Tree('main',1)
>>> t.NUMERIC.setExtendedAttribute('att1',42)
>>> t.NUMERIC.setExtendedAttribute('att2',Range(1,100))
>>> t.NUMERIC.getExtendedAttribute('att1')
42
>>> t.NUMERIC.getExtendedAttribute('att2')
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'att2 ': 1 : 100 : *, 'att1 ': 42, 'special': 42}
>>> t.NUMERIC.__att3=100
>>> t.NUMERIC.__att2
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'special': 42, 'att3 ': 100, 'att1 ': 42, 'att2 ': 1 : 100 : *}
>>> t.NUMERIC.__special=None
>>> t.NUMERIC.getExtendedAttributes()
{'att3 ': 100, 'att1 ': 42, 'att2 ': 1 : 100 : *}","This adds the capability to manipulate extended attributes of
nodes in MDSplus tree using the python MDSplus module.
A node attribute can be added or modified by using the
setExtendedAttribute(name,value) method of a TreeNode.
The value of an extended attribute can be fetched using
the getExtendedAttribute(name) method. A python dictionary
of all extended attributes of a node can be obtained using
the getExtendedAttributes() method. Some special node
property shortcuts can be used as well. A TreeNode
instances property whose name begins with two underscores
can be used to set or get an extended attribute.
The following demonstrates these new features:
>>> t=Tree('main',1)
>>> t.NUMERIC.setExtendedAttribute('att1',42)
>>> t.NUMERIC.setExtendedAttribute('att2',Range(1,100))
>>> t.NUMERIC.getExtendedAttribute('att1')
42
>>> t.NUMERIC.getExtendedAttribute('att2')
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'att2 ': 1 : 100 : *, 'att1 ': 42, 'special': 42}
>>> t.NUMERIC.__att3=100
>>> t.NUMERIC.__att2
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'special': 42, 'att3 ': 100, 'att1 ': 42, 'att2 ': 1 : 100 : *}
>>> t.NUMERIC.__special=None
>>> t.NUMERIC.getExtendedAttributes()
{'att3 ': 100, 'att1 ': 42, 'att2 ': 1 : 100 : *}",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1273,2018-03-26T21:19:24Z,2018-03-27T17:56:53Z,2018-05-29T18:39:28Z,MERGED,True,87,1,2,https://github.com/tfredian,Feature: extended attr support for python,1,[],https://github.com/MDSplus/mdsplus/pull/1273,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1273#issuecomment-376315684,"This adds the capability to manipulate extended attributes of
nodes in MDSplus tree using the python MDSplus module.
A node attribute can be added or modified by using the
setExtendedAttribute(name,value) method of a TreeNode.
The value of an extended attribute can be fetched using
the getExtendedAttribute(name) method. A python dictionary
of all extended attributes of a node can be obtained using
the getExtendedAttributes() method. Some special node
property shortcuts can be used as well. A TreeNode
instances property whose name begins with two underscores
can be used to set or get an extended attribute.
The following demonstrates these new features:
>>> t=Tree('main',1)
>>> t.NUMERIC.setExtendedAttribute('att1',42)
>>> t.NUMERIC.setExtendedAttribute('att2',Range(1,100))
>>> t.NUMERIC.getExtendedAttribute('att1')
42
>>> t.NUMERIC.getExtendedAttribute('att2')
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'att2 ': 1 : 100 : *, 'att1 ': 42, 'special': 42}
>>> t.NUMERIC.__att3=100
>>> t.NUMERIC.__att2
1 : 100 : *
>>> t.NUMERIC.getExtendedAttributes()
{'special': 42, 'att3 ': 100, 'att1 ': 42, 'att2 ': 1 : 100 : *}
>>> t.NUMERIC.__special=None
>>> t.NUMERIC.getExtendedAttributes()
{'att3 ': 100, 'att1 ': 42, 'att2 ': 1 : 100 : *}",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1274,2018-03-28T16:18:41Z,2018-04-03T14:02:16Z,2018-04-03T14:02:26Z,MERGED,True,3416,1101,15,https://github.com/joshStillerman,Jas fix search,51,[],https://github.com/MDSplus/mdsplus/pull/1274,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1274,"Fix:  redo TreeFindNode and TreeFindNodeWild
Given that some wildcard searches are broken, and there is ambiguity in the syntax for **** this change makes the following syntax changes:
[[treename::]tagname{.|:}]
Four single character punctuations
'.' the child
':' the member
'^' the parent
'~' wildcard both member and child
and these can be tripled to make breadth first searches
'...' all children
':::' all members
'~~~' all members and children
'^^^' all parent
four of these is a syntax error
a special case would first translate *** to ~~~
(four of these is also a syntax error)
however ****  becomes ~~~* which is OK.
Some examples
a.b*.c  - a child named c of a child starting with b of a member or child called a
a.b*:c - a member named c of a child starting with b of a member or child called a
a.b~c -a member or child named c of a child starting with b of a member or child called a
a.b...c  - a child called c someplace under the child hierarchy under a.b
a.b:::c - a member called c someplace under the member hierarchy under a.b
a.b~~~c - a child or member called c someplace under the child/member hierarchy under a.b
a.b~~~
etc...
Fixes issue #417","Fix:  redo TreeFindNode and TreeFindNodeWild
Given that some wildcard searches are broken, and there is ambiguity in the syntax for **** this change makes the following syntax changes:
[[treename::]tagname{.|:}]
Four single character punctuations
'.' the child
':' the member
'^' the parent
'~' wildcard both member and child
and these can be tripled to make breadth first searches
'...' all children
':::' all members
'~~~' all members and children
'^^^' all parent
four of these is a syntax error
a special case would first translate *** to ~~~
(four of these is also a syntax error)
however ****  becomes ~~~* which is OK.
Some examples
a.b*.c  - a child named c of a child starting with b of a member or child called a
a.b*:c - a member named c of a child starting with b of a member or child called a
a.b~c -a member or child named c of a child starting with b of a member or child called a
a.b...c  - a child called c someplace under the child hierarchy under a.b
a.b:::c - a member called c someplace under the member hierarchy under a.b
a.b~~~c - a child or member called c someplace under the child/member hierarchy under a.b
a.b~~~
etc...
Fixes issue #417",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1275,2018-03-28T17:19:17Z,2018-03-28T18:25:49Z,2018-03-28T18:25:52Z,MERGED,True,87,45,19,https://github.com/tfredian,Build: Enable the -werror option,2,[],https://github.com/MDSplus/mdsplus/pull/1275,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1275,"This change fixes compiler warnings in several module and
ignores some warnings which are either unpreventable or have
been judged to be functionally ok.
Once this takes affect any modifications or additions to the code
base will fail if they produce new compiler warnings.","This change fixes compiler warnings in several module and
ignores some warnings which are either unpreventable or have
been judged to be functionally ok.
Once this takes affect any modifications or additions to the code
base will fail if they produce new compiler warnings.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1276,2018-03-30T10:01:06Z,2018-03-30T12:57:49Z,2018-03-30T12:58:05Z,MERGED,True,14,9,1,https://github.com/GabrieleManduchi,Gm redpitaya device,7,[],https://github.com/MDSplus/mdsplus/pull/1276,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1276,A couple of initial fixes for the redpitaya event driven acquisition,A couple of initial fixes for the redpitaya event driven acquisition,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1277,2018-03-30T12:59:27Z,2018-06-04T16:38:05Z,2018-09-25T14:34:23Z,CLOSED,False,362,0,1,https://github.com/GabrieleManduchi,Gm nodejs mdsip,3,[],https://github.com/MDSplus/mdsplus/pull/1277,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1277,"Restful interface to mdsip + UDP events
This node.js interfaces provides a HTTP interface listening on port 8081 for remote expression evaluation, i.e. thin client. The mdsip protocol is handled directly by the JavaScrip code.
It serves multiple clients possibly connected to different mdsip servers
In addition, it provides WebSocket interfaces for receiving MDSplus events (UDP only). Registration to the event is performed via the rest interface, and then ipon event reception, the string <event_name>: is sent via WebSocket to the connected listeners.
Only string raw data associated with events is currently supported
URI to call the code:
1 - http://:8081/connect?ip=<ipAddress[:port]>
return: connection ID to be used in the following transactions
2 - http://localhost:8081/eval?expr=&idx=
return: decompiled answer from remote expression evaluation
3 - http://localhost:8081/register?event=<event_name>
register for event reception (on all clients connected via WebSocket).
WebSocket package installation is required:
npm install websocket
Server command:
$ node mdsipRest-multi.js","Restful interface to mdsip + UDP events
This node.js interfaces provides a HTTP interface listening on port 8081 for remote expression evaluation, i.e. thin client. The mdsip protocol is handled directly by the JavaScrip code.
It serves multiple clients possibly connected to different mdsip servers
In addition, it provides WebSocket interfaces for receiving MDSplus events (UDP only). Registration to the event is performed via the rest interface, and then ipon event reception, the string <event_name>: is sent via WebSocket to the connected listeners.
Only string raw data associated with events is currently supported
URI to call the code:
1 - http://:8081/connect?ip=<ipAddress[:port]>
return: connection ID to be used in the following transactions
2 - http://localhost:8081/eval?expr=&idx=
return: decompiled answer from remote expression evaluation
3 - http://localhost:8081/register?event=<event_name>
register for event reception (on all clients connected via WebSocket).
WebSocket package installation is required:
npm install websocket
Server command:
$ node mdsipRest-multi.js",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1277,2018-03-30T12:59:27Z,2018-06-04T16:38:05Z,2018-09-25T14:34:23Z,CLOSED,False,362,0,1,https://github.com/GabrieleManduchi,Gm nodejs mdsip,3,[],https://github.com/MDSplus/mdsplus/pull/1277,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1277#issuecomment-378709053,"Restful interface to mdsip + UDP events
This node.js interfaces provides a HTTP interface listening on port 8081 for remote expression evaluation, i.e. thin client. The mdsip protocol is handled directly by the JavaScrip code.
It serves multiple clients possibly connected to different mdsip servers
In addition, it provides WebSocket interfaces for receiving MDSplus events (UDP only). Registration to the event is performed via the rest interface, and then ipon event reception, the string <event_name>: is sent via WebSocket to the connected listeners.
Only string raw data associated with events is currently supported
URI to call the code:
1 - http://:8081/connect?ip=<ipAddress[:port]>
return: connection ID to be used in the following transactions
2 - http://localhost:8081/eval?expr=&idx=
return: decompiled answer from remote expression evaluation
3 - http://localhost:8081/register?event=<event_name>
register for event reception (on all clients connected via WebSocket).
WebSocket package installation is required:
npm install websocket
Server command:
$ node mdsipRest-multi.js","Please wait to merge this ....
It either needs more directions or some webpack like dressing to operate.
I am investigating.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1277,2018-03-30T12:59:27Z,2018-06-04T16:38:05Z,2018-09-25T14:34:23Z,CLOSED,False,362,0,1,https://github.com/GabrieleManduchi,Gm nodejs mdsip,3,[],https://github.com/MDSplus/mdsplus/pull/1277,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1277#issuecomment-392713369,"Restful interface to mdsip + UDP events
This node.js interfaces provides a HTTP interface listening on port 8081 for remote expression evaluation, i.e. thin client. The mdsip protocol is handled directly by the JavaScrip code.
It serves multiple clients possibly connected to different mdsip servers
In addition, it provides WebSocket interfaces for receiving MDSplus events (UDP only). Registration to the event is performed via the rest interface, and then ipon event reception, the string <event_name>: is sent via WebSocket to the connected listeners.
Only string raw data associated with events is currently supported
URI to call the code:
1 - http://:8081/connect?ip=<ipAddress[:port]>
return: connection ID to be used in the following transactions
2 - http://localhost:8081/eval?expr=&idx=
return: decompiled answer from remote expression evaluation
3 - http://localhost:8081/register?event=<event_name>
register for event reception (on all clients connected via WebSocket).
WebSocket package installation is required:
npm install websocket
Server command:
$ node mdsipRest-multi.js",any update on this one?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1277,2018-03-30T12:59:27Z,2018-06-04T16:38:05Z,2018-09-25T14:34:23Z,CLOSED,False,362,0,1,https://github.com/GabrieleManduchi,Gm nodejs mdsip,3,[],https://github.com/MDSplus/mdsplus/pull/1277,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1277#issuecomment-392723450,"Restful interface to mdsip + UDP events
This node.js interfaces provides a HTTP interface listening on port 8081 for remote expression evaluation, i.e. thin client. The mdsip protocol is handled directly by the JavaScrip code.
It serves multiple clients possibly connected to different mdsip servers
In addition, it provides WebSocket interfaces for receiving MDSplus events (UDP only). Registration to the event is performed via the rest interface, and then ipon event reception, the string <event_name>: is sent via WebSocket to the connected listeners.
Only string raw data associated with events is currently supported
URI to call the code:
1 - http://:8081/connect?ip=<ipAddress[:port]>
return: connection ID to be used in the following transactions
2 - http://localhost:8081/eval?expr=&idx=
return: decompiled answer from remote expression evaluation
3 - http://localhost:8081/register?event=<event_name>
register for event reception (on all clients connected via WebSocket).
WebSocket package installation is required:
npm install websocket
Server command:
$ node mdsipRest-multi.js","It is ready,
    in few days I will provide sources and tutorial.

                               Gabriele
…
On Tue, 29 May 2018 02:30:18 -0700   zack-vii ***@***.***> wrote:
 any update on this one?

 --
 You are receiving this because you authored the thread.
 Reply to this email directly or view it on GitHub:
 #1277 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1278,2018-04-02T13:55:35Z,2018-04-02T16:47:23Z,2018-05-29T18:39:27Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Fix another clobber warning,1,[],https://github.com/MDSplus/mdsplus/pull/1278,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1278,One more clobbered warning found only doing release builds.,One more clobbered warning found only doing release builds.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1279,2018-04-03T12:10:25Z,2018-04-03T12:20:58Z,2019-06-07T11:34:02Z,CLOSED,False,476,307,2,https://github.com/AndreaRigoni,Feature: update ax_docker_build,1,[],https://github.com/MDSplus/mdsplus/pull/1279,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1279,"Adds some features from the ultimate version of the file. Adds also the with-docker-profile
that permits to make trace of the code within the container in debug, thus the dbg will be usable in container shell.","Adds some features from the ultimate version of the file. Adds also the with-docker-profile
that permits to make trace of the code within the container in debug, thus the dbg will be usable in container shell.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1280,2018-04-03T12:22:55Z,2018-05-08T18:09:35Z,2019-06-07T11:34:02Z,MERGED,True,476,307,2,https://github.com/AndreaRigoni,Feature: update ax_docker_build,1,[],https://github.com/MDSplus/mdsplus/pull/1280,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1280,"Adds some features from the ultimate version of the file. Adds also the with-docker-profile
that permits to make trace of the code within the container in debug, thus the dbg will be usable in container shell.","Adds some features from the ultimate version of the file. Adds also the with-docker-profile
that permits to make trace of the code within the container in debug, thus the dbg will be usable in container shell.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1281,2018-04-03T16:32:04Z,2018-04-05T17:49:34Z,2019-11-25T10:21:12Z,CLOSED,False,3417,1102,16,https://github.com/joshStillerman,build:  Need to escape <backslash>~  in commit messages,2,[],https://github.com/MDSplus/mdsplus/pull/1281,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1281,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1281,2018-04-03T16:32:04Z,2018-04-05T17:49:34Z,2019-11-25T10:21:12Z,CLOSED,False,3417,1102,16,https://github.com/joshStillerman,build:  Need to escape <backslash>~  in commit messages,2,[],https://github.com/MDSplus/mdsplus/pull/1281,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1281#issuecomment-379020913,,will redo against rebased,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1282,2018-04-03T19:24:03Z,2018-04-03T20:05:39Z,2018-05-29T18:39:02Z,MERGED,True,15,15,1,https://github.com/tfredian,Fix: Repair a couple bugs in TreeFindNode.c,1,[],https://github.com/MDSplus/mdsplus/pull/1282,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1282,"There was a problem with the handling of the TOP tag and the matching
of tag names. This should fix this.","There was a problem with the handling of the TOP tag and the matching
of tag names. This should fix this.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1283,2018-04-05T10:07:44Z,2018-04-06T12:56:05Z,2018-06-04T20:27:35Z,MERGED,True,48,8,13,https://github.com/GabrieleManduchi,Gm visualstudio compatible,12,[],https://github.com/MDSplus/mdsplus/pull/1283,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1283,"This set of neutral changes (for Linux) permits compilation of MdsObjects/cpp with Windows VisualStudio2017 provided the following definitions
HAVE_WINDOWS_H
_CRT_SECURE_NO_WARNINGS
_SCL_SECURE_NO_WARNINGS
NOMINMAX","This set of neutral changes (for Linux) permits compilation of MdsObjects/cpp with Windows VisualStudio2017 provided the following definitions
HAVE_WINDOWS_H
_CRT_SECURE_NO_WARNINGS
_SCL_SECURE_NO_WARNINGS
NOMINMAX",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1283,2018-04-05T10:07:44Z,2018-04-06T12:56:05Z,2018-06-04T20:27:35Z,MERGED,True,48,8,13,https://github.com/GabrieleManduchi,Gm visualstudio compatible,12,[],https://github.com/MDSplus/mdsplus/pull/1283,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1283#issuecomment-378950301,"This set of neutral changes (for Linux) permits compilation of MdsObjects/cpp with Windows VisualStudio2017 provided the following definitions
HAVE_WINDOWS_H
_CRT_SECURE_NO_WARNINGS
_SCL_SECURE_NO_WARNINGS
NOMINMAX","the definition HAVE_WINDOWS_H to be set for compiling in VisualStudio has changed in
WINDOWS_H
to avoid interference with the  HAVE_WINDOWS_H set by the automated build procedure",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1284,2018-04-06T21:19:50Z,2018-04-07T23:14:21Z,2018-04-09T16:27:31Z,MERGED,True,5,5,2,https://github.com/robertomendozaphd,Few bug fixes,2,[],https://github.com/MDSplus/mdsplus/pull/1284,https://github.com/robertomendozaphd,1,https://github.com/MDSplus/mdsplus/pull/1284,My first GitHub pull request so not sure if I am doing this correctly. Feedback encouraged.,My first GitHub pull request so not sure if I am doing this correctly. Feedback encouraged.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1284,2018-04-06T21:19:50Z,2018-04-07T23:14:21Z,2018-04-09T16:27:31Z,MERGED,True,5,5,2,https://github.com/robertomendozaphd,Few bug fixes,2,[],https://github.com/MDSplus/mdsplus/pull/1284,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1284#issuecomment-379383582,My first GitHub pull request so not sure if I am doing this correctly. Feedback encouraged.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1286,2018-04-09T13:36:29Z,2018-04-18T14:48:26Z,2018-04-18T14:48:32Z,MERGED,True,4,2,1,https://github.com/tfredian,Fix: Repair mishandling of tree context,1,[],https://github.com/MDSplus/mdsplus/pull/1286,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1286,"This should fix a problem when trees are opened via Data.execute().
The existing code destroyed the global tree context if trees were
opened using a Data.execute() command.","This should fix a problem when trees are opened via Data.execute().
The existing code destroyed the global tree context if trees were
opened using a Data.execute() command.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1286,2018-04-09T13:36:29Z,2018-04-18T14:48:26Z,2018-04-18T14:48:32Z,MERGED,True,4,2,1,https://github.com/tfredian,Fix: Repair mishandling of tree context,1,[],https://github.com/MDSplus/mdsplus/pull/1286,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1286#issuecomment-379826001,"This should fix a problem when trees are opened via Data.execute().
The existing code destroyed the global tree context if trees were
opened using a Data.execute() command.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1287,2018-04-09T15:42:42Z,2018-04-09T16:46:53Z,2018-06-04T20:27:33Z,MERGED,True,12,7,1,https://github.com/joshStillerman,Fix: Sibling_of not handing members of usage structure correctly,1,[],https://github.com/MDSplus/mdsplus/pull/1287,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1287,"sibling_of was assuming that nodes of usage structure must be
children. This is the case for nodes added with python, though using
other APIs it is evidently possible to have a member of usage structure.
This change makes sibling_of explictly check for member/child ness of
nodes  when assembing all the members and children of a node.","sibling_of was assuming that nodes of usage structure must be
children. This is the case for nodes added with python, though using
other APIs it is evidently possible to have a member of usage structure.
This change makes sibling_of explictly check for member/child ness of
nodes  when assembing all the members and children of a node.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1288,2018-04-09T19:42:10Z,2018-04-10T16:13:16Z,2018-04-10T16:13:29Z,MERGED,True,259,255,8,https://github.com/tfredian,Feature: Restore the Visual Studio MdsObjectsCppShr-VS.DLL,4,[],https://github.com/MDSplus/mdsplus/pull/1288,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1288,"This should restore a cpp dll which is compatible for use with
Visual Studio built applications on Windows.","This should restore a cpp dll which is compatible for use with
Visual Studio built applications on Windows.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1289,2018-04-17T19:56:47Z,2018-04-18T14:46:49Z,2018-04-18T14:47:08Z,MERGED,True,4,0,1,https://github.com/tfredian,Fix: Repair MDSplus sign key used in redhat stable repo installer,1,[],https://github.com/MDSplus/mdsplus/pull/1289,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1289,"The stable redhat repo rpm was still installing the older less secure
signing public key which does not match the key used to sign the rpms.","The stable redhat repo rpm was still installing the older less secure
signing public key which does not match the key used to sign the rpms.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1289,2018-04-17T19:56:47Z,2018-04-18T14:46:49Z,2018-04-18T14:47:08Z,MERGED,True,4,0,1,https://github.com/tfredian,Fix: Repair MDSplus sign key used in redhat stable repo installer,1,[],https://github.com/MDSplus/mdsplus/pull/1289,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1289#issuecomment-382132142,"The stable redhat repo rpm was still installing the older less secure
signing public key which does not match the key used to sign the rpms.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1294,2018-04-25T20:50:42Z,2018-04-26T15:23:01Z,2018-04-26T15:23:01Z,MERGED,True,8,5,5,https://github.com/tfredian,Fix: Handling of segments which have expression dim,2,[],https://github.com/MDSplus/mdsplus/pull/1294,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1294,"The attempt to store segments which contain expressions for
the dimension of a segment uncovered problems in the handling
of segments. The existing code assumed that the dimensions of
segments were either ranges or arrays when combining multiple
segments into a single signal. This PR should fix some of the problems.
There is still further work needed to either support other such
features and/or restrict what can be stored in a segment to
prevent unexpected behaviors.
This should fix #1291","The attempt to store segments which contain expressions for
the dimension of a segment uncovered problems in the handling
of segments. The existing code assumed that the dimensions of
segments were either ranges or arrays when combining multiple
segments into a single signal. This PR should fix some of the problems.
There is still further work needed to either support other such
features and/or restrict what can be stored in a segment to
prevent unexpected behaviors.
This should fix #1291",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1296,2018-04-26T15:43:22Z,2018-04-28T22:15:22Z,2018-04-28T22:15:28Z,MERGED,True,0,1,1,https://github.com/tfredian,Fix: Remove excess TdiData call when merging segments,1,[],https://github.com/MDSplus/mdsplus/pull/1296,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1296,"TdiData() is called inside TreeXTreeDefaultSquish so not needed
to be called in XTreeGetTimedRecord.c.","TdiData() is called inside TreeXTreeDefaultSquish so not needed
to be called in XTreeGetTimedRecord.c.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1299,2018-05-01T19:11:23Z,2018-05-02T13:13:24Z,2018-05-02T13:13:33Z,MERGED,True,42,65,6,https://github.com/tfredian,Fix: Repair older python package removal when upgrading MDSplus,1,[],https://github.com/MDSplus/mdsplus/pull/1299,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1299,"The previous scripts for cleaning off MDSplus python packages used
pip remove in a loop but on some newer versions of pip the pip remove
command does not return a failure status if the package was not found.
This produced an infinite loop when remove or upgrading MDSplus python
installers particularly on debian based platforms. This should fix this
problem. Unfortunaly an upgrade on debian systems will cause this infinite
loop until the newer packages are installed. To prevent this infinite
looping the following files will need to be edited by hand before
removing the associated packages if the exist on the debian based system:
/var/lib/dpkg/info/mdsplus-alpha-python.prerm
/var/lib/dpkg/info/mdsplus-*devices.prerm
You need to insert an single line containing:
exit
right after the:
line at the top of the file.","The previous scripts for cleaning off MDSplus python packages used
pip remove in a loop but on some newer versions of pip the pip remove
command does not return a failure status if the package was not found.
This produced an infinite loop when remove or upgrading MDSplus python
installers particularly on debian based platforms. This should fix this
problem. Unfortunaly an upgrade on debian systems will cause this infinite
loop until the newer packages are installed. To prevent this infinite
looping the following files will need to be edited by hand before
removing the associated packages if the exist on the debian based system:
/var/lib/dpkg/info/mdsplus-alpha-python.prerm
/var/lib/dpkg/info/mdsplus-*devices.prerm
You need to insert an single line containing:
exit
right after the:
line at the top of the file.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1300,2018-05-02T16:32:14Z,2018-05-08T18:10:58Z,2018-06-04T20:27:31Z,MERGED,True,64,15,2,https://github.com/GabrieleManduchi,Gm jscope fix dtype f data,3,[],https://github.com/MDSplus/mdsplus/pull/1300,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1300,"Added management of DTYPE_F data items in mdsmisc/ScopeUtilities used by jScope MdsDataProvider
This fixes the issue reported by Antoine Merle","Added management of DTYPE_F data items in mdsmisc/ScopeUtilities used by jScope MdsDataProvider
This fixes the issue reported by Antoine Merle",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1300,2018-05-02T16:32:14Z,2018-05-08T18:10:58Z,2018-06-04T20:27:31Z,MERGED,True,64,15,2,https://github.com/GabrieleManduchi,Gm jscope fix dtype f data,3,[],https://github.com/MDSplus/mdsplus/pull/1300,https://github.com/merlea,2,https://github.com/MDSplus/mdsplus/pull/1300#issuecomment-386087889,"Added management of DTYPE_F data items in mdsmisc/ScopeUtilities used by jScope MdsDataProvider
This fixes the issue reported by Antoine Merle",Shouldn't the same check be done for the X array?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1300,2018-05-02T16:32:14Z,2018-05-08T18:10:58Z,2018-06-04T20:27:31Z,MERGED,True,64,15,2,https://github.com/GabrieleManduchi,Gm jscope fix dtype f data,3,[],https://github.com/MDSplus/mdsplus/pull/1300,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1300#issuecomment-386212474,"Added management of DTYPE_F data items in mdsmisc/ScopeUtilities used by jScope MdsDataProvider
This fixes the issue reported by Antoine Merle","It is highly unlikely, but it cannot be excluded, so I added also the check for X array.
For jScope exceptions with empth signals, I could not reproduce exactly the reported case, but I got an exception in another piece of code. Now a check has been added in jScope for both cases.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1301,2018-05-03T16:40:28Z,2018-05-03T20:09:54Z,2018-05-30T19:36:54Z,MERGED,True,56,37,1,https://github.com/joshStillerman,Fix:  wildcard searches for large trees very slow,1,[],https://github.com/MDSplus/mdsplus/pull/1301,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1301,"The wildcard search operations
:::
...
for very large trees was slow because the code needed to find the
end of the lists every time an element was added.

This PR keeps track of the end of NODELISTS being created so the lists
do not have to be traversed in order to append to them.","The wildcard search operations
:::
...
for very large trees was slow because the code needed to find the
end of the lists every time an element was added.

This PR keeps track of the end of NODELISTS being created so the lists
do not have to be traversed in order to append to them.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1304,2018-05-05T15:32:04Z,2018-05-05T17:31:58Z,2018-05-05T17:32:12Z,MERGED,True,5,0,1,https://github.com/tfredian,Fix: Repair redhat python installer,1,[],https://github.com/MDSplus/mdsplus/pull/1304,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1304,"The python package installer was removing the MDSplus module
after an update. This should fix this problem.
This should fix: #1303","The python package installer was removing the MDSplus module
after an update. This should fix this problem.
This should fix: #1303",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1305,2018-05-08T10:52:20Z,2018-05-08T16:18:09Z,2018-10-31T00:27:41Z,MERGED,True,88,46,4,https://github.com/zack-vii,Zck python args,8,[],https://github.com/MDSplus/mdsplus/pull/1305,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1305,"a = MDSplus.ADD(1,2);
MDSplus.MULTIPLY(a,a)
(1 + 2) * (1 + 2)
the first argument of the first sum is somewhat random","a = MDSplus.ADD(1,2);
MDSplus.MULTIPLY(a,a)
(1 + 2) * (1 + 2)
the first argument of the first sum is somewhat random",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1306,2018-05-09T21:15:05Z,2018-05-09T22:11:26Z,2018-05-09T22:11:34Z,MERGED,True,22,2,2,https://github.com/joshStillerman,Fix: Trim strings before parsing them for node lookups.,1,[],https://github.com/MDSplus/mdsplus/pull/1306,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1306,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1307,2018-05-09T21:20:33Z,2018-05-10T23:43:54Z,2018-05-10T23:44:03Z,MERGED,True,1550,0,16,https://github.com/joshStillerman,Feature:  Add support for D-Tacq ACQ435 in streaming mode,5,[],https://github.com/MDSplus/mdsplus/pull/1307,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1307,"D-tacq ACQ435 32 channel module.
Streaming mode only.","D-tacq ACQ435 32 channel module.
Streaming mode only.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1307,2018-05-09T21:20:33Z,2018-05-10T23:43:54Z,2018-05-10T23:44:03Z,MERGED,True,1550,0,16,https://github.com/joshStillerman,Feature:  Add support for D-Tacq ACQ435 in streaming mode,5,[],https://github.com/MDSplus/mdsplus/pull/1307,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1307#issuecomment-387891837,"D-tacq ACQ435 32 channel module.
Streaming mode only.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1309,2018-05-11T20:23:15Z,2018-05-12T13:22:18Z,2018-05-12T13:22:26Z,MERGED,True,46,46,1,https://github.com/joshStillerman,Fix:  more of the internal routines need to keep track of tail,1,[],https://github.com/MDSplus/mdsplus/pull/1309,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1309,"Not all of the internal search routines were correctly updating
and keeping track of the tails of the lists.
Additionally: ConcatenateLists  was choking (segfault) on empty lists.","Not all of the internal search routines were correctly updating
and keeping track of the tails of the lists.
Additionally: ConcatenateLists  was choking (segfault) on empty lists.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1311,2018-05-17T12:29:54Z,2018-05-17T13:50:03Z,2018-05-29T18:38:59Z,MERGED,True,94,33,4,https://github.com/tfredian,Build: Perform Visual Studio build in docker,1,[],https://github.com/MDSplus/mdsplus/pull/1311,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1311,"This will enable the MdsObjectsCppShr-VS.dll library for windows
to be built inside the mdsplus/docker:windows container without the
need for a separate Windows VM.","This will enable the MdsObjectsCppShr-VS.dll library for windows
to be built inside the mdsplus/docker:windows container without the
need for a separate Windows VM.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1312,2018-05-17T13:48:59Z,2018-05-22T16:45:03Z,2018-05-22T16:45:09Z,MERGED,True,88,87,1,https://github.com/joshStillerman,Docs: Jas add Beijing china site,2,[],https://github.com/MDSplus/mdsplus/pull/1312,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1312,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1313,2018-05-22T15:02:12Z,2018-05-22T16:44:13Z,2018-05-29T18:38:56Z,MERGED,True,41,24,1,https://github.com/tfredian,Build: Improve Visual Studio build configuration,1,[],https://github.com/MDSplus/mdsplus/pull/1313,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1313,"This update corresponds to a new mdsplus/docker:windows image which places
the Visual Studio files in directories similar to the directory structures
found when Visual Studio 2017 Community edition is installed on a Windows
system. It also removes many VS files in these directories which are not
needed for building the MdsObjectsCppShr-VS.dll library.","This update corresponds to a new mdsplus/docker:windows image which places
the Visual Studio files in directories similar to the directory structures
found when Visual Studio 2017 Community edition is installed on a Windows
system. It also removes many VS files in these directories which are not
needed for building the MdsObjectsCppShr-VS.dll library.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1313,2018-05-22T15:02:12Z,2018-05-22T16:44:13Z,2018-05-29T18:38:56Z,MERGED,True,41,24,1,https://github.com/tfredian,Build: Improve Visual Studio build configuration,1,[],https://github.com/MDSplus/mdsplus/pull/1313,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1313#issuecomment-391034405,"This update corresponds to a new mdsplus/docker:windows image which places
the Visual Studio files in directories similar to the directory structures
found when Visual Studio 2017 Community edition is installed on a Windows
system. It also removes many VS files in these directories which are not
needed for building the MdsObjectsCppShr-VS.dll library.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1317,2018-05-23T12:26:30Z,2018-05-23T13:41:54Z,2018-05-23T13:42:08Z,MERGED,True,155,164,5,https://github.com/tfredian,Fix: Allow both % and ? wildcard chars in FindNode,2,[],https://github.com/MDSplus/mdsplus/pull/1317,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1317,"The refactoring of the findNode code changed the single character
wild card match from % to ?. To remain compatible with existing
code this fix allows both % and ? wildcard characters.","The refactoring of the findNode code changed the single character
wild card match from % to ?. To remain compatible with existing
code this fix allows both % and ? wildcard characters.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1317,2018-05-23T12:26:30Z,2018-05-23T13:41:54Z,2018-05-23T13:42:08Z,MERGED,True,155,164,5,https://github.com/tfredian,Fix: Allow both % and ? wildcard chars in FindNode,2,[],https://github.com/MDSplus/mdsplus/pull/1317,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1317#issuecomment-391328317,"The refactoring of the findNode code changed the single character
wild card match from % to ?. To remain compatible with existing
code this fix allows both % and ? wildcard characters.",This should fix #1314,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1318,2018-05-23T15:47:33Z,2018-05-23T17:24:28Z,2018-05-23T17:24:37Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Repair find node on trees opened using thick client mode,1,[],https://github.com/MDSplus/mdsplus/pull/1318,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1318,"The FindNode refactor broke the behavior when finding nodes in a
tree opened using thick client mode (tree_path=host::). This should
repair this problem.
This should fix #1315","The FindNode refactor broke the behavior when finding nodes in a
tree opened using thick client mode (tree_path=host::). This should
repair this problem.
This should fix #1315",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1320,2018-05-24T08:16:22Z,2018-05-24T10:03:00Z,2018-05-29T18:39:12Z,MERGED,True,3,0,1,https://github.com/GabrieleManduchi,Gm fix jscope exception,1,[],https://github.com/MDSplus/mdsplus/pull/1320,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1320,Remove a java exception occurring in some 2D configurations,Remove a java exception occurring in some 2D configurations,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1321,2018-05-29T14:20:36Z,2018-05-30T19:33:33Z,2018-05-30T19:36:46Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Fix culling problem in stable branch,1,[],https://github.com/MDSplus/mdsplus/pull/1321,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1321,This fixes #1316,This fixes #1316,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1321,2018-05-29T14:20:36Z,2018-05-30T19:33:33Z,2018-05-30T19:36:46Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Fix culling problem in stable branch,1,[],https://github.com/MDSplus/mdsplus/pull/1321,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1321#issuecomment-393260451,This fixes #1316,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1321,2018-05-29T14:20:36Z,2018-05-30T19:33:33Z,2018-05-30T19:36:46Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Fix culling problem in stable branch,1,[],https://github.com/MDSplus/mdsplus/pull/1321,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1321#issuecomment-393281175,This fixes #1316,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1323,2018-05-30T17:25:08Z,2018-05-30T19:35:53Z,2018-05-30T19:35:59Z,MERGED,True,29,11,1,https://github.com/tfredian,Fix: Make handling of backslash directory delimiters consistent,1,[],https://github.com/MDSplus/mdsplus/pull/1323,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1323,"The existing mdsip code replaces backslashes in file names with forward
slashes to enable windows clients to specify directories using windows
format which uses backslashes instead of forward slashes. The other
operations such as rename or exists do not do this so things like
tree editing does not work if backslashes are used in tree paths when
connecting to a linux server. This change should properly handle backslahses
in all operations.
This should fix #1322","The existing mdsip code replaces backslashes in file names with forward
slashes to enable windows clients to specify directories using windows
format which uses backslashes instead of forward slashes. The other
operations such as rename or exists do not do this so things like
tree editing does not work if backslashes are used in tree paths when
connecting to a linux server. This change should properly handle backslahses
in all operations.
This should fix #1322",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1327,2018-06-04T12:49:59Z,2018-06-08T15:29:08Z,2018-08-21T13:20:35Z,MERGED,True,353,1,5,https://github.com/GabrieleManduchi,Feature : Node.js restful API,2,[],https://github.com/MDSplus/mdsplus/pull/1327,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1327,"A simple restful API for thin client configuration.
This node.js program acts a a bridge between Web browsers and one or more mdsip servers. Communication between the Web browser and the node.js application is implemented as a simple restful interface. Communication between the node.js application and the mdsip server(s) is performed in CTP/IP, natively implementing the mdsip protocol in node.js.
The API allows also to register for MDSplus event reception, directly collected by the node.js application (only UDP at port 4000 currently supported) and the event notification, including event data is carried out via a WebSocket.","A simple restful API for thin client configuration.
This node.js program acts a a bridge between Web browsers and one or more mdsip servers. Communication between the Web browser and the node.js application is implemented as a simple restful interface. Communication between the node.js application and the mdsip server(s) is performed in CTP/IP, natively implementing the mdsip protocol in node.js.
The API allows also to register for MDSplus event reception, directly collected by the node.js application (only UDP at port 4000 currently supported) and the event notification, including event data is carried out via a WebSocket.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1327,2018-06-04T12:49:59Z,2018-06-08T15:29:08Z,2018-08-21T13:20:35Z,MERGED,True,353,1,5,https://github.com/GabrieleManduchi,Feature : Node.js restful API,2,[],https://github.com/MDSplus/mdsplus/pull/1327,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1327#issuecomment-394390047,"A simple restful API for thin client configuration.
This node.js program acts a a bridge between Web browsers and one or more mdsip servers. Communication between the Web browser and the node.js application is implemented as a simple restful interface. Communication between the node.js application and the mdsip server(s) is performed in CTP/IP, natively implementing the mdsip protocol in node.js.
The API allows also to register for MDSplus event reception, directly collected by the node.js application (only UDP at port 4000 currently supported) and the event notification, including event data is carried out via a WebSocket.","Hi Gabriele,
I assume this replaces #1277 ? If so, you should close that one. Josh had some issues with the previous one so perhaps Josh should look at this again and decide whether to merge it or not.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1327,2018-06-04T12:49:59Z,2018-06-08T15:29:08Z,2018-08-21T13:20:35Z,MERGED,True,353,1,5,https://github.com/GabrieleManduchi,Feature : Node.js restful API,2,[],https://github.com/MDSplus/mdsplus/pull/1327,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1327#issuecomment-395797204,"A simple restful API for thin client configuration.
This node.js program acts a a bridge between Web browsers and one or more mdsip servers. Communication between the Web browser and the node.js application is implemented as a simple restful interface. Communication between the node.js application and the mdsip server(s) is performed in CTP/IP, natively implementing the mdsip protocol in node.js.
The API allows also to register for MDSplus event reception, directly collected by the node.js application (only UDP at port 4000 currently supported) and the event notification, including event data is carried out via a WebSocket.","If you want to try it, documentation is already available in
http://www.mdsplus.org/index.php?title=Documentation:Tutorial:Node.js%20restful%20API&open=80736030794752983039&page=Documentation%2FThe+MDSplus+tutorial%2FNode.js+restful+API",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1328,2018-06-04T14:04:17Z,2018-06-04T18:45:26Z,2018-06-04T18:45:29Z,MERGED,True,34,10,4,https://github.com/tfredian,Fix: Use forward slashes for directory delimiters,4,[],https://github.com/MDSplus/mdsplus/pull/1328,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1328,"Convert backslashes to forward slashes in all file name specifiers
to avoid conflicts with windows clients specifying file paths on
linux/macos servers.","Convert backslashes to forward slashes in all file name specifiers
to avoid conflicts with windows clients specifying file paths on
linux/macos servers.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1329,2018-06-04T15:58:50Z,2018-06-04T18:52:49Z,2018-06-04T18:52:53Z,MERGED,True,53,103,1,https://github.com/tfredian,Fix: Fix for issue 1324,1,[],https://github.com/MDSplus/mdsplus/pull/1329,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1329,This should fix #1324,This should fix #1324,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1331,2018-06-06T16:35:20Z,2018-06-19T19:32:18Z,2018-06-19T19:32:25Z,MERGED,True,704,512,52,https://github.com/tfredian,Feature: Add Fedora Core 28 support,3,[],https://github.com/MDSplus/mdsplus/pull/1331,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1331,"This will provide support for fc28 builds. Fc28 uses version 8.1
gcc compilers which added several new compiler warnings which
required changes to many of the modules. Some use pragma's to
ignore the warnings but since many of the new warnings were not
recognized in older versions of the compile the pragma's needed
to be invoked inside compiler version checks.","This will provide support for fc28 builds. Fc28 uses version 8.1
gcc compilers which added several new compiler warnings which
required changes to many of the modules. Some use pragma's to
ignore the warnings but since many of the new warnings were not
recognized in older versions of the compile the pragma's needed
to be invoked inside compiler version checks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1331,2018-06-06T16:35:20Z,2018-06-19T19:32:18Z,2018-06-19T19:32:25Z,MERGED,True,704,512,52,https://github.com/tfredian,Feature: Add Fedora Core 28 support,3,[],https://github.com/MDSplus/mdsplus/pull/1331,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1331#issuecomment-395208398,"This will provide support for fc28 builds. Fc28 uses version 8.1
gcc compilers which added several new compiler warnings which
required changes to many of the modules. Some use pragma's to
ignore the warnings but since many of the new warnings were not
recognized in older versions of the compile the pragma's needed
to be invoked inside compiler version checks.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1332,2018-06-19T15:37:18Z,2018-06-19T16:19:12Z,2018-08-21T13:19:32Z,MERGED,True,12,12,1,https://github.com/tfredian,Fix: repair alpine pre and post installer scripts,1,[],https://github.com/MDSplus/mdsplus/pull/1332,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1332,"Some of the alpine installer scripts were using INSTALL_PREFIX
which is only valid in rpms","Some of the alpine installer scripts were using INSTALL_PREFIX
which is only valid in rpms",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1334,2018-06-20T20:54:58Z,2018-07-06T15:07:27Z,2018-07-06T15:07:32Z,MERGED,True,1,0,1,https://github.com/tfredian,Feature: Add ubuntu18 support,1,[],https://github.com/MDSplus/mdsplus/pull/1334,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1334,"This initial change will provide 64-bit only MDSplus for
Ubuntu 18.","This initial change will provide 64-bit only MDSplus for
Ubuntu 18.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1336,2018-06-22T15:15:12Z,2018-06-22T17:29:07Z,2018-08-21T13:20:33Z,MERGED,True,5,11,1,https://github.com/joshStillerman,Fix: reverting FC28 changes to this file as it broke MdsValue,1,[],https://github.com/MDSplus/mdsplus/pull/1336,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1336,"This commit reverts MdsLibIld.c  - the changes to this file for
FC28 compiler warnings did not work.
Symptom -
in IDL
set_databse, 'logbook'
DSQL('select count(*) from entries', cnt)

produced the error:
answer = lonarr(1,)
                   ^
% Syntax error.
% Compiled module: EVALUATE.

This is a temporary rollback of the change so that new kits will work.","This commit reverts MdsLibIld.c  - the changes to this file for
FC28 compiler warnings did not work.
Symptom -
in IDL
set_databse, 'logbook'
DSQL('select count(*) from entries', cnt)

produced the error:
answer = lonarr(1,)
                   ^
% Syntax error.
% Compiled module: EVALUATE.

This is a temporary rollback of the change so that new kits will work.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1336,2018-06-22T15:15:12Z,2018-06-22T17:29:07Z,2018-08-21T13:20:33Z,MERGED,True,5,11,1,https://github.com/joshStillerman,Fix: reverting FC28 changes to this file as it broke MdsValue,1,[],https://github.com/MDSplus/mdsplus/pull/1336,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1336#issuecomment-399510522,"This commit reverts MdsLibIld.c  - the changes to this file for
FC28 compiler warnings did not work.
Symptom -
in IDL
set_databse, 'logbook'
DSQL('select count(*) from entries', cnt)

produced the error:
answer = lonarr(1,)
                   ^
% Syntax error.
% Compiled module: EVALUATE.

This is a temporary rollback of the change so that new kits will work.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1337,2018-06-22T16:02:25Z,2018-06-22T16:56:48Z,2018-08-21T13:20:32Z,MERGED,True,0,1,1,https://github.com/joshStillerman,Fix: remove fc28 temorarily,1,[],https://github.com/MDSplus/mdsplus/pull/1337,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1337,need to build disregarding fc28 issues so mds idl interface can revert,need to build disregarding fc28 issues so mds idl interface can revert,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1342,2018-06-25T12:54:23Z,2018-06-25T13:21:47Z,2018-08-21T13:19:22Z,MERGED,True,13,5,2,https://github.com/tfredian,Fix: Reinstate fc28,1,[],https://github.com/MDSplus/mdsplus/pull/1342,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1342,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1343,2018-06-25T18:09:20Z,2018-06-25T21:29:38Z,2018-08-21T13:19:21Z,MERGED,True,13,11,1,https://github.com/tfredian,Feature: Change python dcl methods to produce ipython output,2,[],https://github.com/MDSplus/mdsplus/pull/1343,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1343,"The dcl based methods in the python module currently pass NULL pointers for
output and error if they are not asked to return the output. This causes
the mdsdcl code to print the output to stdout and stderr directly. This PR
changes the code to obtain the output and error strings and use python's
print function to print the output string and the error string. This enables
things like ipython notebooks to display the output and errors in the notebook.
This fixes: #1339","The dcl based methods in the python module currently pass NULL pointers for
output and error if they are not asked to return the output. This causes
the mdsdcl code to print the output to stdout and stderr directly. This PR
changes the code to obtain the output and error strings and use python's
print function to print the output string and the error string. This enables
things like ipython notebooks to display the output and errors in the notebook.
This fixes: #1339",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1344,2018-06-26T08:56:16Z,2018-06-26T11:48:14Z,2019-01-15T22:14:58Z,MERGED,True,1,0,1,https://github.com/zack-vii,Fix: actlog should flush after each line,1,[],https://github.com/MDSplus/mdsplus/pull/1344,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1344,flushes stdout after each line which is required if you want to have a useful output that you might wanna parse by a third party program.,flushes stdout after each line which is required if you want to have a useful output that you might wanna parse by a third party program.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1345,2018-06-26T09:20:15Z,2018-06-26T11:52:32Z,2019-01-15T22:15:00Z,MERGED,True,71,58,2,https://github.com/zack-vii,Feature: make getShotDB directly available from within python,1,[],https://github.com/MDSplus/mdsplus/pull/1345,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1345,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1346,2018-06-26T18:18:17Z,2018-06-27T00:02:33Z,2019-11-25T10:21:14Z,CLOSED,False,1,1,1,https://github.com/joshStillerman,Fix: there is a typo in deploy/packaging/linux.xml,1,[],https://github.com/MDSplus/mdsplus/pull/1346,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1346,"The typeo in deploy/packaging/linux.xml causes ubuntu updates
to hang.","The typeo in deploy/packaging/linux.xml causes ubuntu updates
to hang.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1346,2018-06-26T18:18:17Z,2018-06-27T00:02:33Z,2019-11-25T10:21:14Z,CLOSED,False,1,1,1,https://github.com/joshStillerman,Fix: there is a typo in deploy/packaging/linux.xml,1,[],https://github.com/MDSplus/mdsplus/pull/1346,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1346#issuecomment-400509681,"The typeo in deploy/packaging/linux.xml causes ubuntu updates
to hang.","OK -

   Editing that script on the target system to change it to a ; made the
update work.  We can talk about it tomorrow.
…
On 6/26/18 8:06 PM, Tom Fredian wrote:

 ***@***.**** requested changes on this pull request.

 This fix is invalid. The colon was correct but the problem is probably
 that this htsdevice scripts were not fixed like the rest of the python
 device installers. Make htsdevices resemble the other device installer
 scripts such as w7xdevices. Btw. the colon is not a typo. In bash it
 is basically a noop but the script itself is wrong.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1346 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZaqmnfpaea5Uc5290VRwTC8dO8p3ks5uAsxsgaJpZM4U4cJ3>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1347,2018-06-27T17:43:28Z,2018-06-27T19:20:11Z,2018-06-27T19:20:15Z,MERGED,True,382,148,2,https://github.com/tfredian,Fix: Change packaging to have rpm and deb scripts separated,1,[],https://github.com/MDSplus/mdsplus/pull/1347,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1347,"The deploy/packaging/linux.xml file was specifying the same
install scripts for rpm's and debian packages. This caused
problems and mistakes since there are platform specific
macros and environment variables. This fix defines separate
installer scripts for each platform type (rpm, deb and alpine).","The deploy/packaging/linux.xml file was specifying the same
install scripts for rpm's and debian packages. This caused
problems and mistakes since there are platform specific
macros and environment variables. This fix defines separate
installer scripts for each platform type (rpm, deb and alpine).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1348,2018-06-28T15:31:07Z,2018-07-05T18:40:36Z,2018-07-05T18:40:39Z,CLOSED,False,105843,129883,2514,https://github.com/tfredian,Feature: Promote stable to alpha,908,[],https://github.com/MDSplus/mdsplus/pull/1348,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1348,Do not merge. Just a test.,Do not merge. Just a test.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1348,2018-06-28T15:31:07Z,2018-07-05T18:40:36Z,2018-07-05T18:40:39Z,CLOSED,False,105843,129883,2514,https://github.com/tfredian,Feature: Promote stable to alpha,908,[],https://github.com/MDSplus/mdsplus/pull/1348,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1348#issuecomment-401938097,Do not merge. Just a test.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1350,2018-07-02T13:42:07Z,2018-07-04T15:31:29Z,2018-07-04T15:31:29Z,MERGED,True,16,3,3,https://github.com/zack-vii,Fix: translate python int to Int32/Int64 based on bit_length ..,2,[],https://github.com/MDSplus/mdsplus/pull/1350,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1350,"consistently for both py2 and py3:
In >> MDSplus.Data(1504798074346117981)
Old>> 941071197
New>> 1504798074346117981Q","consistently for both py2 and py3:
In >> MDSplus.Data(1504798074346117981)
Old>> 941071197
New>> 1504798074346117981Q",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1352,2018-07-05T13:33:01Z,2018-07-05T14:02:28Z,2018-07-05T14:27:27Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Repair typo in python update in last release,1,[],https://github.com/MDSplus/mdsplus/pull/1352,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1352,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1353,2018-07-05T14:52:01Z,2018-07-05T15:30:09Z,2018-07-05T15:30:16Z,MERGED,True,20,11,6,https://github.com/tfredian,Fix: Avoid loading numpy in matlab if not using python bridge,1,[],https://github.com/MDSplus/mdsplus/pull/1353,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1353,"On platforms such as Ubuntu18 there are incompatibilities between
the python numpy libraries and those used by matlab. This causes
memory issues and segfaults if the matlab scripts contain py functions
which loads the numpy module even if those py functions are not
executed. This fix uses str2func to reference those py functions
when defers the load until the users explicitly tries to use the
python bridge instead of the java bridge to access MDSplus.","On platforms such as Ubuntu18 there are incompatibilities between
the python numpy libraries and those used by matlab. This causes
memory issues and segfaults if the matlab scripts contain py functions
which loads the numpy module even if those py functions are not
executed. This fix uses str2func to reference those py functions
when defers the load until the users explicitly tries to use the
python bridge instead of the java bridge to access MDSplus.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1354,2018-07-05T15:15:59Z,2018-07-05T15:55:58Z,2018-07-05T15:56:05Z,MERGED,True,19,19,2,https://github.com/zack-vii,Tests: dont skip on import error; skip if no lib for arch,1,[],https://github.com/MDSplus/mdsplus/pull/1354,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1354,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1355,2018-07-05T18:19:43Z,2018-07-05T18:46:43Z,2018-07-05T18:46:48Z,CLOSED,False,104554,129350,2446,https://github.com/tfredian,Feature: Merge of fixes and features of alpha into the stable branch,910,[],https://github.com/MDSplus/mdsplus/pull/1355,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1355,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1355,2018-07-05T18:19:43Z,2018-07-05T18:46:43Z,2018-07-05T18:46:48Z,CLOSED,False,104554,129350,2446,https://github.com/tfredian,Feature: Merge of fixes and features of alpha into the stable branch,910,[],https://github.com/MDSplus/mdsplus/pull/1355,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1355#issuecomment-402810591,,Do not merge into stable. Release will be performed on July 7th.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1356,2018-07-05T18:45:04Z,2018-07-09T13:42:36Z,2018-07-09T13:42:41Z,MERGED,True,104611,129368,2447,https://github.com/tfredian,Feature: Incorporate new features and fixes from the alpha branch into stable,918,[],https://github.com/MDSplus/mdsplus/pull/1356,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1356,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1357,2018-07-05T19:45:47Z,2018-07-06T15:06:08Z,2018-08-21T13:19:19Z,MERGED,True,26,13,1,https://github.com/tfredian,Build: Fix promote.sh script,1,[],https://github.com/MDSplus/mdsplus/pull/1357,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1357,"deploy/promote.sh script is used to create a new promotion branch
to create a pull request to essentially rebase one development branch
onto another (i.e. rebase alpha on top of stable). The script now
performs the required rebasing and merging and the end result should be
a branch with the same head as the promote to branch while retaining the
history of commits from both branches. The script needs to be copied
to /tmp and executed there to prevent the script itself being replaced
in the midst of the rebasing and merging.","deploy/promote.sh script is used to create a new promotion branch
to create a pull request to essentially rebase one development branch
onto another (i.e. rebase alpha on top of stable). The script now
performs the required rebasing and merging and the end result should be
a branch with the same head as the promote to branch while retaining the
history of commits from both branches. The script needs to be copied
to /tmp and executed there to prevent the script itself being replaced
in the midst of the rebasing and merging.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1358,2018-07-06T12:59:37Z,2018-07-06T15:05:12Z,2018-07-06T15:05:12Z,MERGED,True,20,17,2,https://github.com/zack-vii,Zck python tab complete,2,[],https://github.com/MDSplus/mdsplus/pull/1358,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1358,this finally add subnodes to the tab completion of Trees and TreeNodes. :) so easy once you learn how,this finally add subnodes to the tab completion of Trees and TreeNodes. :) so easy once you learn how,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1359,2018-07-06T15:17:55Z,2018-07-06T16:09:00Z,2018-08-21T13:18:44Z,MERGED,True,10,9,2,https://github.com/tfredian,Fix: Repair rpm installation scripts,1,[],https://github.com/MDSplus/mdsplus/pull/1359,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1359,"When splitting the debian and redhat installer scripts the build
script was inadvertently using the debian scripts for noarch packages
which led configuration changes to be removed during package updates.
On redhat the uninstall scripts of the installed package is invoked
after the updated package is installed and the redhat uninstall scripts
check an argument to determine if it is an update or a perminant package
deinstall so that it won't remove things if it is an update. The debian
packages don't have this problem. It will take a couple updates for the
fix to take effect though since the deinstall scripts of the installed
package will be invoked until the fixed scripts are added with new versions.","When splitting the debian and redhat installer scripts the build
script was inadvertently using the debian scripts for noarch packages
which led configuration changes to be removed during package updates.
On redhat the uninstall scripts of the installed package is invoked
after the updated package is installed and the redhat uninstall scripts
check an argument to determine if it is an update or a perminant package
deinstall so that it won't remove things if it is an update. The debian
packages don't have this problem. It will take a couple updates for the
fix to take effect though since the deinstall scripts of the installed
package will be invoked until the fixed scripts are added with new versions.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1360,2018-07-07T11:43:21Z,2018-07-09T12:01:54Z,2019-01-15T22:15:02Z,MERGED,True,22,3,3,https://github.com/zack-vii,Fix: include the regular attributes in tab completions in ipython,1,[],https://github.com/MDSplus/mdsplus/pull/1360,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1360,"It is always a bit more complicated is it not. python vs. ipython, 2 vs. 3, a well.","It is always a bit more complicated is it not. python vs. ipython, 2 vs. 3, a well.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1361,2018-07-10T18:48:12Z,2018-09-12T17:11:35Z,2018-09-12T17:11:44Z,CLOSED,False,107,26,14,https://github.com/tfredian,Feature: Add tdi based treeshr hooks,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1361,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1361,"This change will enable the implementation of tdi based
treeshr hooks which could be implemented in either tdi
or python. Like the C based hooks the tdi TreeShrHook() function
would be called with a action id, a treename, a shot number and a
node number (nid). A TreeShrHook.fun-template is included to
demonstrate how it is called during various tree operations.
The code will first try to call the C based implementation and if
there is no hooks library it will try the tdi based hooks.
This should implement the feature request:
#1349","This change will enable the implementation of tdi based
treeshr hooks which could be implemented in either tdi
or python. Like the C based hooks the tdi TreeShrHook() function
would be called with a action id, a treename, a shot number and a
node number (nid). A TreeShrHook.fun-template is included to
demonstrate how it is called during various tree operations.
The code will first try to call the C based implementation and if
there is no hooks library it will try the tdi based hooks.
This should implement the feature request:
#1349",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1361,2018-07-10T18:48:12Z,2018-09-12T17:11:35Z,2018-09-12T17:11:44Z,CLOSED,False,107,26,14,https://github.com/tfredian,Feature: Add tdi based treeshr hooks,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1361,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1361#issuecomment-403963348,"This change will enable the implementation of tdi based
treeshr hooks which could be implemented in either tdi
or python. Like the C based hooks the tdi TreeShrHook() function
would be called with a action id, a treename, a shot number and a
node number (nid). A TreeShrHook.fun-template is included to
demonstrate how it is called during various tree operations.
The code will first try to call the C based implementation and if
there is no hooks library it will try the tdi based hooks.
This should implement the feature request:
#1349","Before merging we might consider some improvements to this enhancement.
First, it might be useful to improve the way tdi loads funs (both tdi and python). If we can determine that either a fun was not found in MDS_PATH or it fails to compile perhaps we should keep track of 'broken' functions and avoid looking for and/or compiling them on future calls by a process. Subsequent calls could return the same error. A reset_public() call could clear this error cache so that someone working on a fun could retry loading the fun.
Second, since this tdi hooks feature is new perhaps we should revisit hooks in general instead of just emulating the existing hooks. The original hooks were implemented back when shots were stored on an optical jukebox to enable managing retrieval of offline shots. What might be some more modern functionality for these hooks and should the api be changed to improve their usefulness.
This PR provides a tdi implementation matching the original C hooks functionality. Before this is merge and possibly gets used by customers this might be the time to think about any changes or improvements to the api. The C hooks can remain the same for backward compatibility.
Possibly something to discuss in the upcoming MDSplus developer meeting if not before.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1363,2018-07-24T18:33:51Z,2018-07-24T19:11:08Z,2018-07-24T19:11:12Z,MERGED,True,35,0,35,https://github.com/tfredian,Docs: Add comment line to tdi funs created for internal use only,1,[],https://github.com/MDSplus/mdsplus/pull/1363,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1363,"The tdi/treeshr functions were implemented for internal use only and
should not generally used by users.
Fixes: #1326","The tdi/treeshr functions were implemented for internal use only and
should not generally used by users.
Fixes: #1326",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1365,2018-07-30T12:56:45Z,2018-08-02T14:13:06Z,2018-08-02T14:13:11Z,MERGED,True,46,13,3,https://github.com/tfredian,Feature: Allow array of commands passed to tcl function,2,[],https://github.com/MDSplus/mdsplus/pull/1365,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1365,"In addition to passing a single command to the TDI function called Tcl
you can now pass a string array of commands to execute in a single
call to the function. For example:
tcl(['set tree mytree','put mynode 42','close tree mytree'])","In addition to passing a single command to the TDI function called Tcl
you can now pass a string array of commands to execute in a single
call to the function. For example:
tcl(['set tree mytree','put mynode 42','close tree mytree'])",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1366,2018-08-03T13:52:40Z,2018-09-12T17:12:20Z,2018-09-26T18:59:04Z,CLOSED,False,95,4,7,https://github.com/tfredian,Feature: Add MDSDCL HELP/DEVICE command,5,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1366,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1366,"This enables the HELP/DEVICE command to get help on python
based devices.
HELP/DEVICE DT*
will list all the device modules with names beginning with dt.
HELP/DEVICE DT216
will print the doc string of the DT216 class
HELP/DEVIDE/FULL DT216
will result in the same behavior as if you typed help(DT216 class) in python.
Fixes/resolves #1292","This enables the HELP/DEVICE command to get help on python
based devices.
HELP/DEVICE DT*
will list all the device modules with names beginning with dt.
HELP/DEVICE DT216
will print the doc string of the DT216 class
HELP/DEVIDE/FULL DT216
will result in the same behavior as if you typed help(DT216 class) in python.
Fixes/resolves #1292",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1367,2018-08-09T13:15:15Z,2018-08-09T13:40:33Z,2018-08-09T13:50:43Z,MERGED,True,9,6,2,https://github.com/zack-vii,Zck python scalar to array,2,[],https://github.com/MDSplus/mdsplus/pull/1367,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1367,fixes Int32(range(10)),fixes Int32(range(10)),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1368,2018-08-09T16:14:10Z,2018-08-09T16:56:44Z,2018-11-03T11:36:42Z,MERGED,True,8,0,1,https://github.com/zack-vii,Fix: include Slope as type in python,1,[],https://github.com/MDSplus/mdsplus/pull/1368,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1368,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1369,2018-08-09T17:32:20Z,2018-08-20T15:48:35Z,2018-08-20T15:48:38Z,MERGED,True,17,6,3,https://github.com/tfredian,Fix: Handle DTYPE_SLOPE in python,3,[],https://github.com/MDSplus/mdsplus/pull/1369,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1369,This change restores proper handling of the DTYPE_SLOPE data type. It also restores the ability to create array data types in python using statements such as x=Int32(range(100)) which used to and will now return an Int32Array instance in python.,This change restores proper handling of the DTYPE_SLOPE data type. It also restores the ability to create array data types in python using statements such as x=Int32(range(100)) which used to and will now return an Int32Array instance in python.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1370,2018-08-09T18:01:39Z,2018-08-20T15:48:01Z,2018-08-21T13:18:32Z,MERGED,True,23,1,3,https://github.com/tfredian,Fix: enable data(build_slope(...)) in tdi,1,[],https://github.com/MDSplus/mdsplus/pull/1370,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1370,"Although the DTYPE_SLOPE data type has been deprecated for years they can
still be encountered in tree datafiles. It was discovered that attempting
to convert a DTYPE_SLOPE into an array of values by doing operations
such as: data(build_slope(.1,0.,1.))
caused a segfault in tditest. This fix should prevent this segfault
and return an array of values if the DTYPE_SLOPE contains values for the
increment, begin and end arguments for all of the slope segments.","Although the DTYPE_SLOPE data type has been deprecated for years they can
still be encountered in tree datafiles. It was discovered that attempting
to convert a DTYPE_SLOPE into an array of values by doing operations
such as: data(build_slope(.1,0.,1.))
caused a segfault in tditest. This fix should prevent this segfault
and return an array of values if the DTYPE_SLOPE contains values for the
increment, begin and end arguments for all of the slope segments.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1371,2018-08-09T23:49:44Z,2018-08-10T15:46:06Z,2018-11-03T11:36:41Z,MERGED,True,37,9,1,https://github.com/zack-vii,Fix: ssh for Windows add username if not specified; passwd and ppk auth,1,[],https://github.com/MDSplus/mdsplus/pull/1371,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1371,"add a few more options to the windows mdsip-client-ssh

ssh /h is not syntax of OpenSSH
ssh was missing ""/bin/sh -l -c""
plink does not automatically choose username and we cannot use prompt
plink can use env:SSH2RSA *.ppk file to authenticate
plink can use env:PASSWD to authenticate
plink agent should try to forward agent","add a few more options to the windows mdsip-client-ssh

ssh /h is not syntax of OpenSSH
ssh was missing ""/bin/sh -l -c""
plink does not automatically choose username and we cannot use prompt
plink can use env:SSH2RSA *.ppk file to authenticate
plink can use env:PASSWD to authenticate
plink agent should try to forward agent",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1371,2018-08-09T23:49:44Z,2018-08-10T15:46:06Z,2018-11-03T11:36:41Z,MERGED,True,37,9,1,https://github.com/zack-vii,Fix: ssh for Windows add username if not specified; passwd and ppk auth,1,[],https://github.com/MDSplus/mdsplus/pull/1371,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1371#issuecomment-412090428,"add a few more options to the windows mdsip-client-ssh

ssh /h is not syntax of OpenSSH
ssh was missing ""/bin/sh -l -c""
plink does not automatically choose username and we cannot use prompt
plink can use env:SSH2RSA *.ppk file to authenticate
plink can use env:PASSWD to authenticate
plink agent should try to forward agent",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1372,2018-08-20T12:40:21Z,2018-08-20T15:46:57Z,2018-08-20T15:47:01Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Repair compilation of paths referencing nodes not yet added.,1,[],https://github.com/MDSplus/mdsplus/pull/1372,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1372,"This fixes a problem that occurs when an expression is compiled
that references a node that does not yet exist. A change to the code
prevented the code from returning a TREE_PATH data type for the referenced
node.","This fixes a problem that occurs when an expression is compiled
that references a node that does not yet exist. A change to the code
prevented the code from returning a TREE_PATH data type for the referenced
node.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1373,2018-08-20T12:40:48Z,2018-08-20T15:46:10Z,2018-08-20T15:46:13Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Repair compilation of paths referencing nodes not yet added.,1,[],https://github.com/MDSplus/mdsplus/pull/1373,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1373,"This fixes a problem that occurs when an expression is compiled
that references a node that does not yet exist. A change to the code
prevented the code from returning a TREE_PATH data type for the referenced
node.","This fixes a problem that occurs when an expression is compiled
that references a node that does not yet exist. A change to the code
prevented the code from returning a TREE_PATH data type for the referenced
node.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1374,2018-08-22T18:13:42Z,2018-08-22T19:56:33Z,2018-08-22T19:56:37Z,MERGED,True,3,0,1,https://github.com/tfredian,Feature: Speed up getting python treeNodeArray attributes,1,[],https://github.com/MDSplus/mdsplus/pull/1374,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1374,"When you request node attributes for a TreeNodeArray instance the
existing code builds the answer by appending to a python list and
then converts the list to an array. This upgrade uses tdishr to
retrieve the attributes and return an array which is orders of
magnetude more efficient.","When you request node attributes for a TreeNodeArray instance the
existing code builds the answer by appending to a python list and
then converts the list to an array. This upgrade uses tdishr to
retrieve the attributes and return an array which is orders of
magnetude more efficient.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1375,2018-08-23T13:58:19Z,2018-10-21T10:57:23Z,2019-12-14T10:07:31Z,CLOSED,False,259,151,1,https://github.com/zack-vii,Feature: increase the number of args to LibCallg to 255,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1375,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1375,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1375,2018-08-23T13:58:19Z,2018-10-21T10:57:23Z,2019-12-14T10:07:31Z,CLOSED,False,259,151,1,https://github.com/zack-vii,Feature: increase the number of args to LibCallg to 255,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1375,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1375#issuecomment-415481677,,seems like there is a os specific limit?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1376,2018-08-23T14:23:58Z,2018-08-27T11:54:00Z,2018-11-03T11:36:42Z,MERGED,True,2,1,1,https://github.com/zack-vii,Feature: print traceback on PY-E-UNHANDLED_EXCEPTION,1,[],https://github.com/MDSplus/mdsplus/pull/1376,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1376,PY-E-UNHANDLED_EXCEPTION advises to look in the log for details. This will print the details.,PY-E-UNHANDLED_EXCEPTION advises to look in the log for details. This will print the details.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1377,2018-08-23T16:30:52Z,2018-08-27T17:40:53Z,2019-01-15T22:15:14Z,MERGED,True,231,226,8,https://github.com/zack-vii,Zck actmon locks,18,[],https://github.com/MDSplus/mdsplus/pull/1377,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1377,"Disconnect was not unlocking correctly and CLIENT_LOCK was not using cleanup push/pop
added some comments helping to understand the way it works","Disconnect was not unlocking correctly and CLIENT_LOCK was not using cleanup push/pop
added some comments helping to understand the way it works",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1377,2018-08-23T16:30:52Z,2018-08-27T17:40:53Z,2019-01-15T22:15:14Z,MERGED,True,231,226,8,https://github.com/zack-vii,Zck actmon locks,18,[],https://github.com/MDSplus/mdsplus/pull/1377,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1377#issuecomment-416254099,"Disconnect was not unlocking correctly and CLIENT_LOCK was not using cleanup push/pop
added some comments helping to understand the way it works",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1377,2018-08-23T16:30:52Z,2018-08-27T17:40:53Z,2019-01-15T22:15:14Z,MERGED,True,231,226,8,https://github.com/zack-vii,Zck actmon locks,18,[],https://github.com/MDSplus/mdsplus/pull/1377,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1377#issuecomment-416297528,"Disconnect was not unlocking correctly and CLIENT_LOCK was not using cleanup push/pop
added some comments helping to understand the way it works",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1380,2018-08-27T12:11:21Z,2018-08-27T18:19:03Z,2018-09-11T19:10:07Z,MERGED,True,6,6,3,https://github.com/tfredian,Fix: Remove all references to MdsRoutinePrefix in idl routines,1,[],https://github.com/MDSplus/mdsplus/pull/1380,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1380,"The MdsRoutinePrefix fnuction was used for VMS compatibility and
was removed but references to the function was still present
in other functions. This removes those references.
This should fix #1378","The MdsRoutinePrefix fnuction was used for VMS compatibility and
was removed but references to the function was still present
in other functions. This removes those references.
This should fix #1378",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1380,2018-08-27T12:11:21Z,2018-08-27T18:19:03Z,2018-09-11T19:10:07Z,MERGED,True,6,6,3,https://github.com/tfredian,Fix: Remove all references to MdsRoutinePrefix in idl routines,1,[],https://github.com/MDSplus/mdsplus/pull/1380,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1380#issuecomment-416307469,"The MdsRoutinePrefix fnuction was used for VMS compatibility and
was removed but references to the function was still present
in other functions. This removes those references.
This should fix #1378",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1381,2018-08-27T18:25:43Z,2018-08-27T18:50:24Z,2018-08-27T18:50:44Z,MERGED,True,6,6,3,https://github.com/tfredian,Fix: Remove all references to MdsRoutinePrefix in idl routines,1,[],https://github.com/MDSplus/mdsplus/pull/1381,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1381,"The MdsRoutinePrefix fnuction was used for VMS compatibility and
was removed but references to the function was still present
in other functions. This removes those references.
This should fix #1378","The MdsRoutinePrefix fnuction was used for VMS compatibility and
was removed but references to the function was still present
in other functions. This removes those references.
This should fix #1378",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1382,2018-09-04T00:16:40Z,2018-09-26T21:54:57Z,2018-09-26T21:55:03Z,CLOSED,False,150,274,13,https://github.com/zack-vii," Feature: allow to specify a default tree, which will open on TreeFOPENR",6,[],https://github.com/MDSplus/mdsplus/pull/1382,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1382,"This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected","This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1382,2018-09-04T00:16:40Z,2018-09-26T21:54:57Z,2018-09-26T21:55:03Z,CLOSED,False,150,274,13,https://github.com/zack-vii," Feature: allow to specify a default tree, which will open on TreeFOPENR",6,[],https://github.com/MDSplus/mdsplus/pull/1382,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1382#issuecomment-418209196,"This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1382,2018-09-04T00:16:40Z,2018-09-26T21:54:57Z,2018-09-26T21:55:03Z,CLOSED,False,150,274,13,https://github.com/zack-vii," Feature: allow to specify a default tree, which will open on TreeFOPENR",6,[],https://github.com/MDSplus/mdsplus/pull/1382,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1382#issuecomment-421184251,"This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1382,2018-09-04T00:16:40Z,2018-09-26T21:54:57Z,2018-09-26T21:55:03Z,CLOSED,False,150,274,13,https://github.com/zack-vii," Feature: allow to specify a default tree, which will open on TreeFOPENR",6,[],https://github.com/MDSplus/mdsplus/pull/1382,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1382#issuecomment-422805461,"This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected","so, any comments on this  =)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1382,2018-09-04T00:16:40Z,2018-09-26T21:54:57Z,2018-09-26T21:55:03Z,CLOSED,False,150,274,13,https://github.com/zack-vii," Feature: allow to specify a default tree, which will open on TreeFOPENR",6,[],https://github.com/MDSplus/mdsplus/pull/1382,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1382#issuecomment-423025321,"This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected","the javatraverser2 stuff should not be part of this pr. but was introduced due to a rebase onto a local alpha instead of the remote version, thanks for noticing.
The idea is to help out for two use cases.


You have  a main tree that inherits all diagnostics as subtrees. Some diagnostics are distributed among multiple servers and hence for performance reasons require multiple subtrees e.g. ""cam1"", ""cam2"", ""cam3"", ... .
In order to allow the RO of such a diagnostic to do calibrations and test shots with the entire diagnostik but without giving them control over the main tree it is useful to introduce a  dummy tree ""cam"" that only contains the subtrees ""cam*"". since the tree is never been written, it could be just a single file that is opened no matter what shot is requested. also this allow the RO for opening one shot file of regular shots that contain the entirety of his/her diagnostic without opening all other diagnostics.


the generation of a dynamic eval tree. We have one master eval tree that should contain the subtrees of diagnostic/topic specific eval subtrees. Since the number of subtrees might be growing over time and the ability to create evaluated data for shots in the past. it is useful to have one source ""eval"" tree that is edited whenever a new evaluation is added. It should be opened for each shot that is requested can therefore be used as an overview over available evaluation data.


Case 1 we have already implemented and it works nicely. Specially when editing or viewing data in traverser. It helps the ROs to navigate their 4 to 17 subtrees without getting overwhelmed by the entirety of 50.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1382,2018-09-04T00:16:40Z,2018-09-26T21:54:57Z,2018-09-26T21:55:03Z,CLOSED,False,150,274,13,https://github.com/zack-vii," Feature: allow to specify a default tree, which will open on TreeFOPENR",6,[],https://github.com/MDSplus/mdsplus/pull/1382,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1382#issuecomment-423025943,"This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected","Jenkins has trouble with rsync when attempting to transfer the source.
time -f %e rsync -a mdsplus-jenkins2:/home/jenkins/slave/workspace/1-stable-release/ /mdsplus-docker/jenkins/workspace/raspberrypi/src
05:07:39 Permission denied, please try again.
05:07:39 Permission denied, please try again.
05:07:39 Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
05:07:39 rsync: connection unexpectedly closed (0 bytes received so far) [Receiver]
05:07:39 rsync error: unexplained error (code 255) at io.c(226) [Receiver=3.1.2]",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1382,2018-09-04T00:16:40Z,2018-09-26T21:54:57Z,2018-09-26T21:55:03Z,CLOSED,False,150,274,13,https://github.com/zack-vii," Feature: allow to specify a default tree, which will open on TreeFOPENR",6,[],https://github.com/MDSplus/mdsplus/pull/1382,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1382#issuecomment-423185882,"This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected","There is already an undocumented feature in MDSplus for accomplishing what I think you are trying to accomplish. You can defined the tree path environment variable to be '~n' and that will call a tdi function to get the file path of the tree. For example:
$ export mytree_path='~'
$ mkdir ~/tdi
$ cat - > ~/twf/mytree_tree_filename.fun
public fun mytree_tree_filename(IN _shot)
{
  return('myserver::/trees/mytree/mytree_model');
}
<ctrl-d>
$ export MDS_PATH='/home/myaccount/tdi;$MDS_PATH'
$ mdstcl
TCL> set tree mytree/shot=42

This will cause mdsplus to open the model tree for mytree no matter what shot number is used. You can use this feature to open different tree instances based on the shot number you are trying to open so it can used for a wider set of use cases. Perhaps you create one mytree instance per day and you want to use it when opening trees for the particular day based on the shot numbers. The mytree_tree_filename function can then be used to pick the appropriate instance based on the shot number being opened.
Give this a try and see if it satisfies your needs. In your case you would just need to create a cam tree model which contained all the cam1.-camn subtree references then your just open cam,shot and it will appear that you were opening cam_nnn but actually you'd be opening cam_model but all the subtree would be camn_nnnnn.
I also fixed the build problems. One of the jenkins slaves had a configuration problem preventing it from rsync'ing the sources from the trigger job.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1382,2018-09-04T00:16:40Z,2018-09-26T21:54:57Z,2018-09-26T21:55:03Z,CLOSED,False,150,274,13,https://github.com/zack-vii," Feature: allow to specify a default tree, which will open on TreeFOPENR",6,[],https://github.com/MDSplus/mdsplus/pull/1382,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1382#issuecomment-424882719,"This is useful for trees that contain only static information such as parent trees only containing subtree nodes and structures. We want to use this for test shots and the parent eval tree.

added new named shot number -2 -> default
forces CreateDbSlot to reopen default tree on condition change
added status Tree-I-OPENDEF to inform the user about the default tree upon first TreeOpen
TreeFileName will show the real file
Edit and New will not be redirected",Not necessary as functionality is available thru ~n,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1389,2018-09-10T17:06:09Z,2018-09-11T18:57:19Z,2018-09-11T19:10:53Z,MERGED,True,14,9,5,https://github.com/tfredian,Fix: Allow the use of MdsException(string) in python,2,[],https://github.com/MDSplus/mdsplus/pull/1389,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1389,"The definition of the MdsException class in python was changed
to be equivalent to the MDSplusException class which is used to
create exceptions from numeric status codes which are returned by
MDSplus C functions. This prevents the ability for applications
to create MdsExceptions using a string argument. This change
makes MdsException a subclass of Exception and the MDSplusException
class be a subclass of MdsException.
This should fix: #1388","The definition of the MdsException class in python was changed
to be equivalent to the MDSplusException class which is used to
create exceptions from numeric status codes which are returned by
MDSplus C functions. This prevents the ability for applications
to create MdsExceptions using a string argument. This change
makes MdsException a subclass of Exception and the MDSplusException
class be a subclass of MdsException.
This should fix: #1388",True,{'THUMBS_UP': ['https://github.com/eldond']}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1389,2018-09-10T17:06:09Z,2018-09-11T18:57:19Z,2018-09-11T19:10:53Z,MERGED,True,14,9,5,https://github.com/tfredian,Fix: Allow the use of MdsException(string) in python,2,[],https://github.com/MDSplus/mdsplus/pull/1389,https://github.com/eldond,2,https://github.com/MDSplus/mdsplus/pull/1389#issuecomment-419988961,"The definition of the MdsException class in python was changed
to be equivalent to the MDSplusException class which is used to
create exceptions from numeric status codes which are returned by
MDSplus C functions. This prevents the ability for applications
to create MdsExceptions using a string argument. This change
makes MdsException a subclass of Exception and the MDSplusException
class be a subclass of MdsException.
This should fix: #1388",I think this would close #1388.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1389,2018-09-10T17:06:09Z,2018-09-11T18:57:19Z,2018-09-11T19:10:53Z,MERGED,True,14,9,5,https://github.com/tfredian,Fix: Allow the use of MdsException(string) in python,2,[],https://github.com/MDSplus/mdsplus/pull/1389,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1389#issuecomment-420371862,"The definition of the MdsException class in python was changed
to be equivalent to the MDSplusException class which is used to
create exceptions from numeric status codes which are returned by
MDSplus C functions. This prevents the ability for applications
to create MdsExceptions using a string argument. This change
makes MdsException a subclass of Exception and the MDSplusException
class be a subclass of MdsException.
This should fix: #1388",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1390,2018-09-10T19:34:47Z,2018-09-11T18:33:57Z,2018-09-11T19:05:56Z,MERGED,True,14,9,5,https://github.com/tfredian,Fix: Allow the use of MdsException(string) in python,2,[],https://github.com/MDSplus/mdsplus/pull/1390,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1390,"The definition of the MdsException class in python was changed
to be equivalent to the MDSplusException class which is used to
create exceptions from numeric status codes which are returned by
MDSplus C functions. This prevents the ability for applications
to create MdsExceptions using a string argument. This change
makes MdsException a subclass of Exception and the MDSplusException
class be a subclass of MdsException.
This should fix: #1388","The definition of the MdsException class in python was changed
to be equivalent to the MDSplusException class which is used to
create exceptions from numeric status codes which are returned by
MDSplus C functions. This prevents the ability for applications
to create MdsExceptions using a string argument. This change
makes MdsException a subclass of Exception and the MDSplusException
class be a subclass of MdsException.
This should fix: #1388",True,{'THUMBS_UP': ['https://github.com/eldond']}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1390,2018-09-10T19:34:47Z,2018-09-11T18:33:57Z,2018-09-11T19:05:56Z,MERGED,True,14,9,5,https://github.com/tfredian,Fix: Allow the use of MdsException(string) in python,2,[],https://github.com/MDSplus/mdsplus/pull/1390,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1390#issuecomment-420354937,"The definition of the MdsException class in python was changed
to be equivalent to the MDSplusException class which is used to
create exceptions from numeric status codes which are returned by
MDSplus C functions. This prevents the ability for applications
to create MdsExceptions using a string argument. This change
makes MdsException a subclass of Exception and the MDSplusException
class be a subclass of MdsException.
This should fix: #1388",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1390,2018-09-10T19:34:47Z,2018-09-11T18:33:57Z,2018-09-11T19:05:56Z,MERGED,True,14,9,5,https://github.com/tfredian,Fix: Allow the use of MdsException(string) in python,2,[],https://github.com/MDSplus/mdsplus/pull/1390,https://github.com/eldond,3,https://github.com/MDSplus/mdsplus/pull/1390#issuecomment-420384131,"The definition of the MdsException class in python was changed
to be equivalent to the MDSplusException class which is used to
create exceptions from numeric status codes which are returned by
MDSplus C functions. This prevents the ability for applications
to create MdsExceptions using a string argument. This change
makes MdsException a subclass of Exception and the MDSplusException
class be a subclass of MdsException.
This should fix: #1388",Thanks for taking care of this.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1392,2018-09-13T12:59:43Z,2018-09-14T12:05:15Z,2019-01-15T22:15:07Z,MERGED,True,92,223,10,https://github.com/zack-vii,Zck float time,4,[],https://github.com/MDSplus/mdsplus/pull/1392,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1392,"The confusion is you should not need to care about second or nanoseconds too much especially when comparing mixed time vector (double [s], long [ns]). FloatToTime and FloatToDelta should do the same thing. And it would not break anything if the do. the extra day is useless when working with int64 as it is signed. the common conversion is nano_seconds vs seconds and can simply be *1e9 or /1e9. transparent for everyone.
As a result SetTimeContext would be transparent as well use int64 or Uint64 is you want to put in ns use other datatypes otherwise.","The confusion is you should not need to care about second or nanoseconds too much especially when comparing mixed time vector (double [s], long [ns]). FloatToTime and FloatToDelta should do the same thing. And it would not break anything if the do. the extra day is useless when working with int64 as it is signed. the common conversion is nano_seconds vs seconds and can simply be *1e9 or /1e9. transparent for everyone.
As a result SetTimeContext would be transparent as well use int64 or Uint64 is you want to put in ns use other datatypes otherwise.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1392,2018-09-13T12:59:43Z,2018-09-14T12:05:15Z,2019-01-15T22:15:07Z,MERGED,True,92,223,10,https://github.com/zack-vii,Zck float time,4,[],https://github.com/MDSplus/mdsplus/pull/1392,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1392#issuecomment-421030369,"The confusion is you should not need to care about second or nanoseconds too much especially when comparing mixed time vector (double [s], long [ns]). FloatToTime and FloatToDelta should do the same thing. And it would not break anything if the do. the extra day is useless when working with int64 as it is signed. the common conversion is nano_seconds vs seconds and can simply be *1e9 or /1e9. transparent for everyone.
As a result SetTimeContext would be transparent as well use int64 or Uint64 is you want to put in ns use other datatypes otherwise.","ok, finally I got the point!  it seems to me that everything should work since resampling should work also with negative int64 numbers (for negative float times). If not done, you may make a few tests with bot negative and positive start and end times. Let me know if/when you have done these tests and I will approve the PR. Tom, I see a slight change also in TreeSegments.c. Could you check it?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1392,2018-09-13T12:59:43Z,2018-09-14T12:05:15Z,2019-01-15T22:15:07Z,MERGED,True,92,223,10,https://github.com/zack-vii,Zck float time,4,[],https://github.com/MDSplus/mdsplus/pull/1392,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1392#issuecomment-421185879,"The confusion is you should not need to care about second or nanoseconds too much especially when comparing mixed time vector (double [s], long [ns]). FloatToTime and FloatToDelta should do the same thing. And it would not break anything if the do. the extra day is useless when working with int64 as it is signed. the common conversion is nano_seconds vs seconds and can simply be *1e9 or /1e9. transparent for everyone.
As a result SetTimeContext would be transparent as well use int64 or Uint64 is you want to put in ns use other datatypes otherwise.",The getSegment stuff is already included in #1382,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1392,2018-09-13T12:59:43Z,2018-09-14T12:05:15Z,2019-01-15T22:15:07Z,MERGED,True,92,223,10,https://github.com/zack-vii,Zck float time,4,[],https://github.com/MDSplus/mdsplus/pull/1392,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1392#issuecomment-421277279,"The confusion is you should not need to care about second or nanoseconds too much especially when comparing mixed time vector (double [s], long [ns]). FloatToTime and FloatToDelta should do the same thing. And it would not break anything if the do. the extra day is useless when working with int64 as it is signed. the common conversion is nano_seconds vs seconds and can simply be *1e9 or /1e9. transparent for everyone.
As a result SetTimeContext would be transparent as well use int64 or Uint64 is you want to put in ns use other datatypes otherwise.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1393,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1393#issuecomment-422911452,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,"In the case of the signals defined by Anton, expressed as an element of a bidimensional array (he stored all the channels of a given ADC in a single segment), dim_of returned a bidimensional array where the second dimension was 1 (e.g. [[1],[2],[3]]) and in that case the following operations performed by the expressions used by jScope for dynamic resampling failed. Using set_range() transforms in any case the returned dimension in an 1D array and fixes the problem",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1393#issuecomment-422928007,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,"But why Dim_of()
…
On 9/19/18 2:33 PM, GabrieleManduchi wrote:

 In the case of the signals defined by Anton, expressed as an element
 of a bidimensional array (he stored all the channels of a given ADC in
 a single segment), dim_of returned a bidimensional array where the
 second dimension was 1 (e.g. [[1],[2],[3]]) and in that case the
 following operations performed by the expressions used by jScope for
 dynamic resampling failed. Using set_range() transforms in any case
 the returned dimension in an 1D array and fixes the problem

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#1393 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZeHKJNhuEZs9Lh1YKdVuHahgPXn3ks5uco4EgaJpZM4WpDyH>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1393#issuecomment-423120472,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,Because that information is required to decide if and what resampling performing. The problem was  that dim_of() was returning a bidimensional array with one dimension set to 1 instead of a 1D array for Anton's signals. This is the reason of the added set_shape(),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/1393#issuecomment-423120928,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,"hmmmm, let me have a look at the code when I come back next monday",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1393#issuecomment-423125819,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,"Now I remember:  dim_of() for an array such as [[1],[2],[3]] returns [0]. This is why I had to use set_shape. This happened not for a normal signal but for the result of a data() operation (this was the condition where jScope failed to display).
To summarize what happened:

If jScope was requested to look at the signal, internally using dim_of() everything works because the signal is stored with the correct timebase.
if jScope was requested to display data(signal), then dim_of() was applied to the result of data() (thus losing the original timebase) that turned out to be the array as above, and dim_of() returned [0] instead of an array of increasing integers as one would expect.

(Note that jScope is able to handle properly a returned signal of the form  [[1],[2],[3]] in visualization)
A bit complicated, but apparently set_shape() fixes the problem and does not break anything.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1393#issuecomment-423230033,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,"Gabriele, this pull request can't be merged because your branch was apparently not up to date with the alpha branch and the branch can't be rebased with the current alpha because there are conflicts. I would suggest either starting over after doing:
$ git checkout alpha
$ git pull
$ git checkout alpha -b gm-jscope-improvements2

make changes again to the scopeUtilities.c code and commit, push and create a new PR.
or... you can
$ git checkout gm-scope-improvements
$ git rebase alpha

fix conflicts in scopeUtilities.c and then
$ git rebase --continue
$ git push",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/tfredian,8,https://github.com/MDSplus/mdsplus/pull/1393#issuecomment-423230421,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,If you chose the git rebase --continue path then you can reopen this PR and retest.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1393,2018-09-14T10:54:52Z,2018-09-24T13:10:47Z,2018-09-25T14:34:20Z,CLOSED,False,22,14,1,https://github.com/GabrieleManduchi,Gm jscope improvements,74,[],https://github.com/MDSplus/mdsplus/pull/1393,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/1393#issuecomment-423923382,Reshape dim_of results so that they have a single dimension. This prevented visualization of some signals retrieved from bidimensional arrays.,Further checked and rebased,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1395,2018-09-20T14:38:14Z,2018-09-20T14:42:10Z,2018-09-20T14:42:10Z,CLOSED,False,62,24,1,https://github.com/tfredian,Feature: Allow MDS_DEVICES environment to identify device list,1,[],https://github.com/MDSplus/mdsplus/pull/1395,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1395,"MDS_DEVICES can now be used to add site specific devices. You
can specify a colon delimited list of tdi functions that will
return lists of devices. If there is no MDS_DEVICES environment
variable defined it will default to including only the default
MDSplus devices defined by KbsiDevices(), MitDevices(), RfxDevices()
and W7xDevices(). If you have a local device list you could
define MDS_DEVICES to something like ""mydevices:MitDevices"" and your
supported device list would include your devices and the devices
listed in the MITDEVICES.fun. All python device implementations
will still be found based on the MDS_PYDEVICE_PATH environment variable
which contains a semi-colon delimited list of directories containing
device support modules.","MDS_DEVICES can now be used to add site specific devices. You
can specify a colon delimited list of tdi functions that will
return lists of devices. If there is no MDS_DEVICES environment
variable defined it will default to including only the default
MDSplus devices defined by KbsiDevices(), MitDevices(), RfxDevices()
and W7xDevices(). If you have a local device list you could
define MDS_DEVICES to something like ""mydevices:MitDevices"" and your
supported device list would include your devices and the devices
listed in the MITDEVICES.fun. All python device implementations
will still be found based on the MDS_PYDEVICE_PATH environment variable
which contains a semi-colon delimited list of directories containing
device support modules.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1396,2018-09-20T14:54:27Z,2018-09-24T14:27:47Z,2018-09-24T14:27:51Z,MERGED,True,7,2,1,https://github.com/tfredian,Feature: Allow MDS_DEVICES environment to identify device list,1,[],https://github.com/MDSplus/mdsplus/pull/1396,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1396,"MDS_DEVICES can now be used to add site specific devices. You
can specify a colon delimited list of tdi functions that will
return lists of devices. If there is no MDS_DEVICES environment
variable defined it will default to including only the default
MDSplus devices defined by KbsiDevices(), MitDevices(), RfxDevices()
and W7xDevices(). If you have a local device list you could
define MDS_DEVICES to something like ""mydevices:MitDevices"" and your
supported device list would include your devices and the devices
listed in the MITDEVICES.fun. All python device implementations
will still be found based on the MDS_PYDEVICE_PATH environment variable
which contains a semi-colon delimited list of directories containing
device support modules.","MDS_DEVICES can now be used to add site specific devices. You
can specify a colon delimited list of tdi functions that will
return lists of devices. If there is no MDS_DEVICES environment
variable defined it will default to including only the default
MDSplus devices defined by KbsiDevices(), MitDevices(), RfxDevices()
and W7xDevices(). If you have a local device list you could
define MDS_DEVICES to something like ""mydevices:MitDevices"" and your
supported device list would include your devices and the devices
listed in the MITDEVICES.fun. All python device implementations
will still be found based on the MDS_PYDEVICE_PATH environment variable
which contains a semi-colon delimited list of directories containing
device support modules.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1397,2018-09-20T15:03:39Z,2018-09-24T14:27:08Z,2018-09-24T14:27:28Z,MERGED,True,7,2,1,https://github.com/tfredian,Feature: Allow MDS_DEVICES environment to identify device list,1,[],https://github.com/MDSplus/mdsplus/pull/1397,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1397,"MDS_DEVICES can now be used to add site specific devices. You
can specify a colon delimited list of tdi functions that will
return lists of devices. If there is no MDS_DEVICES environment
variable defined it will default to including only the default
MDSplus devices defined by KbsiDevices(), MitDevices(), RfxDevices()
and W7xDevices(). If you have a local device list you could
define MDS_DEVICES to something like ""mydevices:MitDevices"" and your
supported device list would include your devices and the devices
listed in the MITDEVICES.fun. All python device implementations
will still be found based on the MDS_PYDEVICE_PATH environment variable
which contains a semi-colon delimited list of directories containing
device support modules.","MDS_DEVICES can now be used to add site specific devices. You
can specify a colon delimited list of tdi functions that will
return lists of devices. If there is no MDS_DEVICES environment
variable defined it will default to including only the default
MDSplus devices defined by KbsiDevices(), MitDevices(), RfxDevices()
and W7xDevices(). If you have a local device list you could
define MDS_DEVICES to something like ""mydevices:MitDevices"" and your
supported device list would include your devices and the devices
listed in the MITDEVICES.fun. All python device implementations
will still be found based on the MDS_PYDEVICE_PATH environment variable
which contains a semi-colon delimited list of directories containing
device support modules.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1397,2018-09-20T15:03:39Z,2018-09-24T14:27:08Z,2018-09-24T14:27:28Z,MERGED,True,7,2,1,https://github.com/tfredian,Feature: Allow MDS_DEVICES environment to identify device list,1,[],https://github.com/MDSplus/mdsplus/pull/1397,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1397#issuecomment-423242161,"MDS_DEVICES can now be used to add site specific devices. You
can specify a colon delimited list of tdi functions that will
return lists of devices. If there is no MDS_DEVICES environment
variable defined it will default to including only the default
MDSplus devices defined by KbsiDevices(), MitDevices(), RfxDevices()
and W7xDevices(). If you have a local device list you could
define MDS_DEVICES to something like ""mydevices:MitDevices"" and your
supported device list would include your devices and the devices
listed in the MITDEVICES.fun. All python device implementations
will still be found based on the MDS_PYDEVICE_PATH environment variable
which contains a semi-colon delimited list of directories containing
device support modules.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1398,2018-09-24T13:19:35Z,2018-09-24T15:49:05Z,2018-09-25T14:34:17Z,CLOSED,False,14,14,1,https://github.com/GabrieleManduchi,Gm fix j scope dimension,3,[],https://github.com/MDSplus/mdsplus/pull/1398,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1398,I created a new pull request for the fix of Anton's problem in evaluating signals from jScope,I created a new pull request for the fix of Anton's problem in evaluating signals from jScope,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1398,2018-09-24T13:19:35Z,2018-09-24T15:49:05Z,2018-09-25T14:34:17Z,CLOSED,False,14,14,1,https://github.com/GabrieleManduchi,Gm fix j scope dimension,3,[],https://github.com/MDSplus/mdsplus/pull/1398,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1398#issuecomment-423981255,I created a new pull request for the fix of Anton's problem in evaluating signals from jScope,"Sorry having created so much trouble....the changes in the code are basically the same of the other PR, just skipping an useless evaluate() operation.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1398,2018-09-24T13:19:35Z,2018-09-24T15:49:05Z,2018-09-25T14:34:17Z,CLOSED,False,14,14,1,https://github.com/GabrieleManduchi,Gm fix j scope dimension,3,[],https://github.com/MDSplus/mdsplus/pull/1398,https://github.com/MDSplusBuilder,3,https://github.com/MDSplus/mdsplus/pull/1398#issuecomment-424024172,I created a new pull request for the fix of Anton's problem in evaluating signals from jScope,"Again, this PR was made starting with a stale checkout of alpha so cannot be merged.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1399,2018-09-24T13:57:20Z,2018-09-24T15:08:19Z,2018-09-24T15:08:31Z,MERGED,True,11,1,2,https://github.com/joshStillerman,fix: TreeFindNodeWild *** must include start node as potential result,2,[],https://github.com/MDSplus/mdsplus/pull/1399,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1399,fixes #1383,fixes #1383,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1400,2018-09-24T15:03:44Z,2018-09-24T15:05:50Z,2018-09-25T14:34:37Z,CLOSED,False,18,14,1,https://github.com/tfredian,Fix: Dimension Management for signal with shape dim > 1,2,[],https://github.com/MDSplus/mdsplus/pull/1400,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1400,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1401,2018-09-24T15:23:22Z,2018-09-24T15:44:32Z,2018-09-24T15:48:31Z,MERGED,True,14,14,1,https://github.com/tfredian,Fix: Repair dimensions for signal with signal with shape dim > 1,1,[],https://github.com/MDSplus/mdsplus/pull/1401,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1401,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1402,2018-09-24T16:06:59Z,2018-09-24T16:33:56Z,2018-11-14T13:22:58Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Remove uninitized variable error in ScopeUtilities.c,1,[],https://github.com/MDSplus/mdsplus/pull/1402,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1402,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1403,2018-09-24T16:17:58Z,2018-09-25T12:05:20Z,2018-09-25T15:05:47Z,MERGED,True,21,228,2,https://github.com/zack-vii,Zck segement128,2,[],https://github.com/MDSplus/mdsplus/pull/1403,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1403,fixes from #1382,fixes from #1382,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1403,2018-09-24T16:17:58Z,2018-09-25T12:05:20Z,2018-09-25T15:05:47Z,MERGED,True,21,228,2,https://github.com/zack-vii,Zck segement128,2,[],https://github.com/MDSplus/mdsplus/pull/1403,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1403#issuecomment-424123871,fixes from #1382,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1404,2018-09-24T18:44:26Z,2018-09-24T20:01:59Z,2018-09-24T20:03:08Z,MERGED,True,18,12,2,https://github.com/joshStillerman,Jas more findnodewild,8,[],https://github.com/MDSplus/mdsplus/pull/1404,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1404,"the previous fix to findnodewild caused it to return the current default which is changed behavior.
This fixes that.","the previous fix to findnodewild caused it to return the current default which is changed behavior.
This fixes that.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1404,2018-09-24T18:44:26Z,2018-09-24T20:01:59Z,2018-09-24T20:03:08Z,MERGED,True,18,12,2,https://github.com/joshStillerman,Jas more findnodewild,8,[],https://github.com/MDSplus/mdsplus/pull/1404,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1404#issuecomment-424089254,"the previous fix to findnodewild caused it to return the current default which is changed behavior.
This fixes that.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1405,2018-09-25T14:15:08Z,2018-10-02T12:25:08Z,2018-10-02T12:25:09Z,MERGED,True,88,11,4,https://github.com/HerveAncher,Adjustment for Windows MinGW-w64,4,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1405,https://github.com/HerveAncher,1,https://github.com/MDSplus/mdsplus/pull/1405,"Some adjustments to fit MinGW-w64 accross MSYS2 environment.
Correct libxml2 include path.","Some adjustments to fit MinGW-w64 accross MSYS2 environment.
Correct libxml2 include path.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1405,2018-09-25T14:15:08Z,2018-10-02T12:25:08Z,2018-10-02T12:25:09Z,MERGED,True,88,11,4,https://github.com/HerveAncher,Adjustment for Windows MinGW-w64,4,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1405,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1405#issuecomment-424360682,"Some adjustments to fit MinGW-w64 accross MSYS2 environment.
Correct libxml2 include path.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1405,2018-09-25T14:15:08Z,2018-10-02T12:25:08Z,2018-10-02T12:25:09Z,MERGED,True,88,11,4,https://github.com/HerveAncher,Adjustment for Windows MinGW-w64,4,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1405,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1405#issuecomment-425975261,"Some adjustments to fit MinGW-w64 accross MSYS2 environment.
Correct libxml2 include path.",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1405,2018-09-25T14:15:08Z,2018-10-02T12:25:08Z,2018-10-02T12:25:09Z,MERGED,True,88,11,4,https://github.com/HerveAncher,Adjustment for Windows MinGW-w64,4,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1405,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1405#issuecomment-426016767,"Some adjustments to fit MinGW-w64 accross MSYS2 environment.
Correct libxml2 include path.","The liblzma reference added to the mdsshr/Makefile.in prevents the windows build from succeeding since that library is not installed on the windows Docker image used for building the windows distributions.  See: http://jenkins2.mdsplus.org/job/windows/1555/console
I have removed the -llzma option and the jenkins build now succeeds: http://jenkins2.mdsplus.org/job/windows/1556/console
Similarly the addition of -DWIN32=1 and -D_WIN32=1 compiler flags should not be necessary as the MinGW64 compiler provide these. Adding these will not cause a build problem so if for some reason these are not getting defined in your build environment they can be left in. Otherwise this change is not needed.
Finally, like the previous PR, the commits do not include changes to configure.ac. All changes to configure should be performed by changing the configure.ac and both the configure.ac and configure files should be committed to the PR branch. When other configure changes are needed, developers will modify configure.ac and generate a new configure which would remove the changes requested in this pull request.
You do not need to delete your current PR branch to make these changes. Simply pull the latest version of your branch and then make the necessary changes, commit and push the commits back to github. This will trigger another test build automatically.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1405,2018-09-25T14:15:08Z,2018-10-02T12:25:08Z,2018-10-02T12:25:09Z,MERGED,True,88,11,4,https://github.com/HerveAncher,Adjustment for Windows MinGW-w64,4,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1405,https://github.com/HerveAncher,5,https://github.com/MDSplus/mdsplus/pull/1405#issuecomment-426176845,"Some adjustments to fit MinGW-w64 accross MSYS2 environment.
Correct libxml2 include path.","Hi,
Without the reference to library lzma, I can not compile in my side, because my libxml2 required this library.
May the flag '-llzma' can be added dynamically depending on dev environment?
Or the Docker image can be update to include this library?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1405,2018-09-25T14:15:08Z,2018-10-02T12:25:08Z,2018-10-02T12:25:09Z,MERGED,True,88,11,4,https://github.com/HerveAncher,Adjustment for Windows MinGW-w64,4,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1405,https://github.com/HerveAncher,6,https://github.com/MDSplus/mdsplus/pull/1405#issuecomment-426218864,"Some adjustments to fit MinGW-w64 accross MSYS2 environment.
Correct libxml2 include path.","OK, I have added the correct code to check if lzma library is present and ready to use.
I also adapt the Makefiles to use the new variable @LIBLZMA@",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1406,2018-09-26T21:53:59Z,2018-10-17T20:44:47Z,2019-03-22T16:06:41Z,MERGED,True,19,20,2,https://github.com/zack-vii,Fix: removed unnecessary decompression in ReadSegment,3,[],https://github.com/MDSplus/mdsplus/pull/1406,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1406,"Descriptro will decompress automatically when needed.
This allows a much faster remote access when reading compressed segmetns via mdsip using
_v=;_d=;_s=TreeShr->TreeGetSegment(val(_nid),val(_seg),xd(_v),xd(_d));serializeout(`List(*,_s,_v,_d))
e.g. by upcomming and maybe current jTraverser2","Descriptro will decompress automatically when needed.
This allows a much faster remote access when reading compressed segmetns via mdsip using
_v=;_d=;_s=TreeShr->TreeGetSegment(val(_nid),val(_seg),xd(_v),xd(_d));serializeout(`List(*,_s,_v,_d))
e.g. by upcomming and maybe current jTraverser2",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1406,2018-09-26T21:53:59Z,2018-10-17T20:44:47Z,2019-03-22T16:06:41Z,MERGED,True,19,20,2,https://github.com/zack-vii,Fix: removed unnecessary decompression in ReadSegment,3,[],https://github.com/MDSplus/mdsplus/pull/1406,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1406#issuecomment-425909176,"Descriptro will decompress automatically when needed.
This allows a much faster remote access when reading compressed segmetns via mdsip using
_v=;_d=;_s=TreeShr->TreeGetSegment(val(_nid),val(_seg),xd(_v),xd(_d));serializeout(`List(*,_s,_v,_d))
e.g. by upcomming and maybe current jTraverser2","Can someone look into this, please?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1406,2018-09-26T21:53:59Z,2018-10-17T20:44:47Z,2019-03-22T16:06:41Z,MERGED,True,19,20,2,https://github.com/zack-vii,Fix: removed unnecessary decompression in ReadSegment,3,[],https://github.com/MDSplus/mdsplus/pull/1406,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1406#issuecomment-425972661,"Descriptro will decompress automatically when needed.
This allows a much faster remote access when reading compressed segmetns via mdsip using
_v=;_d=;_s=TreeShr->TreeGetSegment(val(_nid),val(_seg),xd(_v),xd(_d));serializeout(`List(*,_s,_v,_d))
e.g. by upcomming and maybe current jTraverser2","I'm not sure of the benefit of this PR. Assuming the segments are selected either manually or using the start and end values held in the segment index, they have to be decompressed anyway before they are used so what good does postponing the decompression? Please explain what I am missing?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1406,2018-09-26T21:53:59Z,2018-10-17T20:44:47Z,2019-03-22T16:06:41Z,MERGED,True,19,20,2,https://github.com/zack-vii,Fix: removed unnecessary decompression in ReadSegment,3,[],https://github.com/MDSplus/mdsplus/pull/1406,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1406#issuecomment-425984395,"Descriptro will decompress automatically when needed.
This allows a much faster remote access when reading compressed segmetns via mdsip using
_v=;_d=;_s=TreeShr->TreeGetSegment(val(_nid),val(_seg),xd(_v),xd(_d));serializeout(`List(*,_s,_v,_d))
e.g. by upcomming and maybe current jTraverser2","well as i mentioned if you read segmented data via thin client (like jTraverser2 does; and jScope could do for frames) you can serialize the compressed object and decompress it on the client, instead. Hence, you transfer less data and the readout is faster. I implemented the PR on our data server and reading images is up to 3 times faster. The key here is that TreeGetSegement returns the D_CA data in a D_XD. using SerializeOut on the XD prevents server side decompression entirely.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1407,2018-09-28T14:28:00Z,2018-10-01T16:30:18Z,2018-10-01T16:30:23Z,MERGED,True,404,0,4,https://github.com/joshStillerman,Fix: Jas add acq2106 423st,3,[],https://github.com/MDSplus/mdsplus/pull/1407,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1407,"Should add help for fields
Should add form
Should test trigger modes and valid frequencies","Should add help for fields
Should add form
Should test trigger modes and valid frequencies",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1409,2018-10-02T08:32:10Z,2018-10-04T18:09:55Z,2019-06-07T11:34:04Z,CLOSED,False,24,14,2,https://github.com/AndreaRigoni,Fix: NULL treenode search term,1,[],https://github.com/MDSplus/mdsplus/pull/1409,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1409,"The pull request adds a test and a fix proposal for Tom based on where the debugger stopped.
The tree getNode caused a SEGFAULT if a NULL search term is passed from an empty string argument.","The pull request adds a test and a fix proposal for Tom based on where the debugger stopped.
The tree getNode caused a SEGFAULT if a NULL search term is passed from an empty string argument.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1409,2018-10-02T08:32:10Z,2018-10-04T18:09:55Z,2019-06-07T11:34:04Z,CLOSED,False,24,14,2,https://github.com/AndreaRigoni,Fix: NULL treenode search term,1,[],https://github.com/MDSplus/mdsplus/pull/1409,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1409#issuecomment-426199015,"The pull request adds a test and a fix proposal for Tom based on where the debugger stopped.
The tree getNode caused a SEGFAULT if a NULL search term is passed from an empty string argument.","Seems that there could be something more to look at ... the fail comes from valgrind
http://jenkins2.mdsplus.org/job/fc26/1557/valgrindResult/pid=13046,0x0/",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1410,2018-10-02T12:30:43Z,2018-10-02T18:38:17Z,2018-10-02T18:38:17Z,MERGED,True,88,11,4,https://github.com/tfredian,Adjustment for Windows MinGW-w64 (#1405),1,[],https://github.com/MDSplus/mdsplus/pull/1410,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1410,"Adjustment for Windows MinGW-w64


Update Makefile.in


Add test to verify liblzma availability and use it properly","Adjustment for Windows MinGW-w64


Update Makefile.in


Add test to verify liblzma availability and use it properly",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1411,2018-10-02T17:28:29Z,2018-10-02T18:38:53Z,2018-10-02T18:38:53Z,MERGED,True,39,6,4,https://github.com/tfredian,Fix: Truncate last segment if not filled,3,[],https://github.com/MDSplus/mdsplus/pull/1411,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1411,"If the last segment of a node containing regular (not timestamped)
segments is only partially filled a call to getSegment for the last
segment returned the contents of the whole segment instead of only
the filled portion. This PR should truncate the data and dimension
to return only the filled portion of the segment.","If the last segment of a node containing regular (not timestamped)
segments is only partially filled a call to getSegment for the last
segment returned the contents of the whole segment instead of only
the filled portion. This PR should truncate the data and dimension
to return only the filled portion of the segment.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1412,2018-10-03T09:24:07Z,2018-10-03T17:50:24Z,2019-11-25T10:21:18Z,CLOSED,False,734,1335,26,https://github.com/GabrieleManduchi,Gm jscope improvements,10,[],https://github.com/MDSplus/mdsplus/pull/1412,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1412,"This version implements the features agreed in September meeting, namely:

Implementation of a brand new LocalDataProvider in a pure Java implementation using pipe communication with a subprocess running mdsip-client-local
Following the same approach a new SSHDataProvider has been added.
Added Command line Data Provider selection: -s  forces the use of MdsDataProvider connected to the specified mdsip server; -l forces the use of LocalDataProvider; -ssh  forces the use of SSHDataProvider. In the above bases, the Network menu bar item is disabled, otherwise it is enabled and Data Server selection is performed in the usual way. NOTE: when a configuration file is passed as argumen and either -l -s or -ssh are defines, the data server specified in the configuration file is ignored.
Made jScope compatible with DWScope configurations","This version implements the features agreed in September meeting, namely:

Implementation of a brand new LocalDataProvider in a pure Java implementation using pipe communication with a subprocess running mdsip-client-local
Following the same approach a new SSHDataProvider has been added.
Added Command line Data Provider selection: -s  forces the use of MdsDataProvider connected to the specified mdsip server; -l forces the use of LocalDataProvider; -ssh  forces the use of SSHDataProvider. In the above bases, the Network menu bar item is disabled, otherwise it is enabled and Data Server selection is performed in the usual way. NOTE: when a configuration file is passed as argumen and either -l -s or -ssh are defines, the data server specified in the configuration file is ignored.
Made jScope compatible with DWScope configurations",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1412,2018-10-03T09:24:07Z,2018-10-03T17:50:24Z,2019-11-25T10:21:18Z,CLOSED,False,734,1335,26,https://github.com/GabrieleManduchi,Gm jscope improvements,10,[],https://github.com/MDSplus/mdsplus/pull/1412,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1412#issuecomment-426611983,"This version implements the features agreed in September meeting, namely:

Implementation of a brand new LocalDataProvider in a pure Java implementation using pipe communication with a subprocess running mdsip-client-local
Following the same approach a new SSHDataProvider has been added.
Added Command line Data Provider selection: -s  forces the use of MdsDataProvider connected to the specified mdsip server; -l forces the use of LocalDataProvider; -ssh  forces the use of SSHDataProvider. In the above bases, the Network menu bar item is disabled, otherwise it is enabled and Data Server selection is performed in the usual way. NOTE: when a configuration file is passed as argumen and either -l -s or -ssh are defines, the data server specified in the configuration file is ignored.
Made jScope compatible with DWScope configurations","This javascope build failed. See: http://jenkins2.mdsplus.org/job/1-pull-request-test/lastFailedBuild/artifact/make_jars.log/*view*/
I assume you forgot to add the MdsConnectionLocal.java module in your commits.
If you add the MdsConnectionLocal.java to your branch you should be able to push it which will trigger a new build.
I'll look into fixing the build.sh script so that failures to build the jars will not trigger all the platform builds.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1412,2018-10-03T09:24:07Z,2018-10-03T17:50:24Z,2019-11-25T10:21:18Z,CLOSED,False,734,1335,26,https://github.com/GabrieleManduchi,Gm jscope improvements,10,[],https://github.com/MDSplus/mdsplus/pull/1412,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1412#issuecomment-426732661,"This version implements the features agreed in September meeting, namely:

Implementation of a brand new LocalDataProvider in a pure Java implementation using pipe communication with a subprocess running mdsip-client-local
Following the same approach a new SSHDataProvider has been added.
Added Command line Data Provider selection: -s  forces the use of MdsDataProvider connected to the specified mdsip server; -l forces the use of LocalDataProvider; -ssh  forces the use of SSHDataProvider. In the above bases, the Network menu bar item is disabled, otherwise it is enabled and Data Server selection is performed in the usual way. NOTE: when a configuration file is passed as argumen and either -l -s or -ssh are defines, the data server specified in the configuration file is ignored.
Made jScope compatible with DWScope configurations",Replaced by: #1413,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1413,2018-10-03T17:48:34Z,2018-10-03T18:14:46Z,2018-10-03T18:14:46Z,MERGED,True,330,1335,22,https://github.com/tfredian,Twf jscope improvements,5,[],https://github.com/MDSplus/mdsplus/pull/1413,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1413,Redoing #1412 because the commits in that PR are all messed up.,Redoing #1412 because the commits in that PR are all messed up.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1414,2018-10-03T18:59:04Z,2018-10-03T19:57:32Z,2019-11-25T10:21:16Z,MERGED,True,4,4,2,https://github.com/joshStillerman,Fix:  Imports from packages under HtsDevices have to explicitly have …,1,[],https://github.com/MDSplus/mdsplus/pull/1414,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1414,…HtsDevices in the import path.,…HtsDevices in the import path.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1415,2018-10-03T20:44:20Z,2018-10-04T14:58:59Z,2018-10-04T18:08:46Z,MERGED,True,167,5,9,https://github.com/tfredian,Feature: Add device information tools,3,[],https://github.com/MDSplus/mdsplus/pull/1415,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1415,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1416,2018-10-04T13:32:46Z,2018-10-04T18:09:21Z,2018-10-04T18:09:26Z,MERGED,True,121,104,2,https://github.com/joshStillerman,Fix: TreeFindNodeWild segfaults with empty string as input,1,[],https://github.com/MDSplus/mdsplus/pull/1416,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1416,"The parser WildParse in TreeFindNodeWild.l was allowing empty input
and the code which called it in TreeFindNode.c was not handling a
search context with no entries.
This change causes the parser to return 'invalid path' on empty input.
Fixes: #1408","The parser WildParse in TreeFindNodeWild.l was allowing empty input
and the code which called it in TreeFindNode.c was not handling a
search context with no entries.
This change causes the parser to return 'invalid path' on empty input.
Fixes: #1408",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1418,2018-10-08T12:28:26Z,2018-10-08T20:32:07Z,2018-10-08T20:32:22Z,MERGED,True,1,1,2,https://github.com/GabrieleManduchi,Fix:jScope Update Events,1,[],https://github.com/MDSplus/mdsplus/pull/1418,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1418,Update Events were not recognized when configuration was read from file,Update Events were not recognized when configuration was read from file,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1418,2018-10-08T12:28:26Z,2018-10-08T20:32:07Z,2018-10-08T20:32:22Z,MERGED,True,1,1,2,https://github.com/GabrieleManduchi,Fix:jScope Update Events,1,[],https://github.com/MDSplus/mdsplus/pull/1418,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1418#issuecomment-427813906,Update Events were not recognized when configuration was read from file,Hopefully this branch will not create merge problems......followed again all instructions,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1419,2018-10-10T16:06:46Z,2018-10-10T17:57:49Z,2018-10-10T20:32:29Z,MERGED,True,66,26,3,https://github.com/GabrieleManduchi,Fix:Webscope,1,[],https://github.com/MDSplus/mdsplus/pull/1419,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1419,"WebScope had been broken by recent changes in python interface, in paritcular the different behavior of Data.execute()  when the expression included tre nodes. Not it has been replaced, when neededn by t.tdiExecute(). Moreover several other fixes/improvements have been added to the Client js code.","WebScope had been broken by recent changes in python interface, in paritcular the different behavior of Data.execute()  when the expression included tre nodes. Not it has been replaced, when neededn by t.tdiExecute(). Moreover several other fixes/improvements have been added to the Client js code.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1420,2018-10-11T13:46:15Z,2018-10-15T12:00:49Z,2019-03-22T16:06:43Z,MERGED,True,80,7,44,https://github.com/zack-vii,Zck bootstrap,4,[],https://github.com/MDSplus/mdsplus/pull/1420,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1420,"since running bootstrap seems to be highly os specific lets agree on a docker image and now we can run it from anywhere with the same result.
just execute:
deploy/build.sh --os=bootstrap
One could think of a test that runs this and checks if files have changed to enforce the usage of automake","since running bootstrap seems to be highly os specific lets agree on a docker image and now we can run it from anywhere with the same result.
just execute:
deploy/build.sh --os=bootstrap
One could think of a test that runs this and checks if files have changed to enforce the usage of automake",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1420,2018-10-11T13:46:15Z,2018-10-15T12:00:49Z,2019-03-22T16:06:43Z,MERGED,True,80,7,44,https://github.com/zack-vii,Zck bootstrap,4,[],https://github.com/MDSplus/mdsplus/pull/1420,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1420#issuecomment-428970248,"since running bootstrap seems to be highly os specific lets agree on a docker image and now we can run it from anywhere with the same result.
just execute:
deploy/build.sh --os=bootstrap
One could think of a test that runs this and checks if files have changed to enforce the usage of automake",Basically a good idea but since we are in the habit of running mdsplus/bootstrap after changing configure.ac or Makefile.am's perhaps it might be better to change mdsplus/bootstrap to do the build command and move the commands currently in bootstrap into the docker bootstrap script.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1420,2018-10-11T13:46:15Z,2018-10-15T12:00:49Z,2019-03-22T16:06:43Z,MERGED,True,80,7,44,https://github.com/zack-vii,Zck bootstrap,4,[],https://github.com/MDSplus/mdsplus/pull/1420,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1420#issuecomment-429269503,"since running bootstrap seems to be highly os specific lets agree on a docker image and now we can run it from anywhere with the same result.
just execute:
deploy/build.sh --os=bootstrap
One could think of a test that runs this and checks if files have changed to enforce the usage of automake",fair point i in this case changer the image to fc23 as it produces the same result but the images is smaller\,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1420,2018-10-11T13:46:15Z,2018-10-15T12:00:49Z,2019-03-22T16:06:43Z,MERGED,True,80,7,44,https://github.com/zack-vii,Zck bootstrap,4,[],https://github.com/MDSplus/mdsplus/pull/1420,https://github.com/AndreaRigoni,4,https://github.com/MDSplus/mdsplus/pull/1420#issuecomment-429273330,"since running bootstrap seems to be highly os specific lets agree on a docker image and now we can run it from anywhere with the same result.
just execute:
deploy/build.sh --os=bootstrap
One could think of a test that runs this and checks if files have changed to enforce the usage of automake","It's a very nice idea, but I think we should retain the possibility to do bootstrap also if you don't have docker installed as mdsplus does not require docker for basic compilation but it does for packaging... so what if we keep bootstrap as is and add a bootstrap phase to the build.sh?
A further discussion would be whether or not to ship configure and Makefiles with the code or leave any user that want to build mdsplus to do bootstrapping letting the build.sh to do its bootstrap phase by itself.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1420,2018-10-11T13:46:15Z,2018-10-15T12:00:49Z,2019-03-22T16:06:43Z,MERGED,True,80,7,44,https://github.com/zack-vii,Zck bootstrap,4,[],https://github.com/MDSplus/mdsplus/pull/1420,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1420#issuecomment-429277060,"since running bootstrap seems to be highly os specific lets agree on a docker image and now we can run it from anywhere with the same result.
just execute:
deploy/build.sh --os=bootstrap
One could think of a test that runs this and checks if files have changed to enforce the usage of automake","hm I did not intend to revolutionized the way of how to build MDSplus in general. what about I rever the last change and we change our habit and run deploy/build.sh --os=bootstrap if required.
Some host systems may have the same versions of the automake toolschain. lets just make sure the output is the same. some versions of automake introduce redundant changes to all outputfiles in form of comments that will make it more difficult to track the important changes.
if you do ./bootstrap and git diff shows many changes you should use docker if only the intended chages show up you are good to go.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1420,2018-10-11T13:46:15Z,2018-10-15T12:00:49Z,2019-03-22T16:06:43Z,MERGED,True,80,7,44,https://github.com/zack-vii,Zck bootstrap,4,[],https://github.com/MDSplus/mdsplus/pull/1420,https://github.com/AndreaRigoni,6,https://github.com/MDSplus/mdsplus/pull/1420#issuecomment-429347142,"since running bootstrap seems to be highly os specific lets agree on a docker image and now we can run it from anywhere with the same result.
just execute:
deploy/build.sh --os=bootstrap
One could think of a test that runs this and checks if files have changed to enforce the usage of automake",maybe to follow the Tom advice we could add an option argument in bootstrap that let you switch to docker if you have it.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1420,2018-10-11T13:46:15Z,2018-10-15T12:00:49Z,2019-03-22T16:06:43Z,MERGED,True,80,7,44,https://github.com/zack-vii,Zck bootstrap,4,[],https://github.com/MDSplus/mdsplus/pull/1420,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1420#issuecomment-429481290,"since running bootstrap seems to be highly os specific lets agree on a docker image and now we can run it from anywhere with the same result.
just execute:
deploy/build.sh --os=bootstrap
One could think of a test that runs this and checks if files have changed to enforce the usage of automake","would an echo about the problem be sufficient,
WARNING: If you intend to issue a pull request on github.com, please use ""deploy/build.sh --os=bootstrap"" instead",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1421,2018-10-11T13:58:48Z,2018-10-16T18:38:04Z,2018-10-16T18:38:04Z,MERGED,True,3197,1848,56,https://github.com/zack-vii,Zck javatraverser2,1,[],https://github.com/MDSplus/mdsplus/pull/1421,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1421,"major update to mds interface;
more stable, faster and it cleans up temp vars __* on server
AND: it benefits from the changes in PR #1406","major update to mds interface;
more stable, faster and it cleans up temp vars __* on server
AND: it benefits from the changes in PR #1406",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1422,2018-10-12T11:26:22Z,2018-10-16T12:50:19Z,2019-11-25T10:21:45Z,MERGED,True,5,3,1,https://github.com/GabrieleManduchi,Gm fix jscope,2,[],https://github.com/MDSplus/mdsplus/pull/1422,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1422,Fix the number of backslashes when issuing TreeSetDefault to mdsip server,Fix the number of backslashes when issuing TreeSetDefault to mdsip server,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1424,2018-10-12T12:59:23Z,2018-10-12T15:04:32Z,2018-10-12T15:04:32Z,MERGED,True,15,19,2,https://github.com/zack-vii,Fix: implemented missing timeout in mdstcpip for windows,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1424,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1424,"After some search i found an easy way on how to debug the windows binaries just like the other with gdb.. not sure why I recall having a hard time to do so in the past.
Anyway, turns out that the timeout on recv for mdstcpip is important to our dispatch setup.
This implements the timeout.. if you know of more tests that had windows excluded, let me know or enable them.","After some search i found an easy way on how to debug the windows binaries just like the other with gdb.. not sure why I recall having a hard time to do so in the past.
Anyway, turns out that the timeout on recv for mdstcpip is important to our dispatch setup.
This implements the timeout.. if you know of more tests that had windows excluded, let me know or enable them.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1425,2018-10-12T15:10:02Z,2018-10-12T22:31:32Z,2018-10-12T22:31:43Z,MERGED,True,19,15,2,https://github.com/tfredian,"Revert ""Fix: implemented missing timeout in mdstcpip for windows""",1,[],https://github.com/MDSplus/mdsplus/pull/1425,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1425,"Reverts #1424
Sorry stupidly ignored the DO NOT MERGE label!","Reverts #1424
Sorry stupidly ignored the DO NOT MERGE label!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1425,2018-10-12T15:10:02Z,2018-10-12T22:31:32Z,2018-10-12T22:31:43Z,MERGED,True,19,15,2,https://github.com/tfredian,"Revert ""Fix: implemented missing timeout in mdstcpip for windows""",1,[],https://github.com/MDSplus/mdsplus/pull/1425,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1425#issuecomment-429478051,"Reverts #1424
Sorry stupidly ignored the DO NOT MERGE label!","well its actually just the fist argument which should be tablesize and not 1.. also i was hoping to use teh same code for linux as poll and select are supposed to be interchangeable but if i do so, the cpp MdsConnetcionTest fails..
Also under windows mdstcl
dispatch/command/server=localhost type test
now always (but the first time) prints
Dispatcher select loop failed
Last client addr = 127.0.0.1",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1430,2018-10-16T15:51:44Z,2018-10-20T17:26:17Z,2018-10-21T10:30:37Z,MERGED,True,433,650,39,https://github.com/zack-vii,Zck win socket timeout,15,[],https://github.com/MDSplus/mdsplus/pull/1430,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1430,"should work but mdsdtcl is still reporting
TCL> dispatch/command/server=localhost:8100 type test
TCL> dispatch/command/server=localhost:8100 type test
Dispatcher select loop failed
Last client addr = 127.0.0.1
TCL>","should work but mdsdtcl is still reporting
TCL> dispatch/command/server=localhost:8100 type test
TCL> dispatch/command/server=localhost:8100 type test
Dispatcher select loop failed
Last client addr = 127.0.0.1
TCL>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1430,2018-10-16T15:51:44Z,2018-10-20T17:26:17Z,2018-10-21T10:30:37Z,MERGED,True,433,650,39,https://github.com/zack-vii,Zck win socket timeout,15,[],https://github.com/MDSplus/mdsplus/pull/1430,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1430#issuecomment-430688270,"should work but mdsdtcl is still reporting
TCL> dispatch/command/server=localhost:8100 type test
TCL> dispatch/command/server=localhost:8100 type test
Dispatcher select loop failed
Last client addr = 127.0.0.1
TCL>","looks like we were lazy with select most of the time
nfds should be the largest file identifier in the list +1
We used FD_SETSIZE which is 64 under windows but sockets can surely have an id larger than that.
MS says the parameter is ignored, though.
Anyway, big bug was that fds under windows are of type SOCKET aka. (void*) under linux they are int. in some functions the mapping was wrong and only set the first 4 bytes of the SOCKET.
In return Connections from Windows could not be reused.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1430,2018-10-16T15:51:44Z,2018-10-20T17:26:17Z,2018-10-21T10:30:37Z,MERGED,True,433,650,39,https://github.com/zack-vii,Zck win socket timeout,15,[],https://github.com/MDSplus/mdsplus/pull/1430,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1430#issuecomment-431059534,"should work but mdsdtcl is still reporting
TCL> dispatch/command/server=localhost:8100 type test
TCL> dispatch/command/server=localhost:8100 type test
Dispatcher select loop failed
Last client addr = 127.0.0.1
TCL>",there are more bug to it,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1430,2018-10-16T15:51:44Z,2018-10-20T17:26:17Z,2018-10-21T10:30:37Z,MERGED,True,433,650,39,https://github.com/zack-vii,Zck win socket timeout,15,[],https://github.com/MDSplus/mdsplus/pull/1430,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1430#issuecomment-431521721,"should work but mdsdtcl is still reporting
TCL> dispatch/command/server=localhost:8100 type test
TCL> dispatch/command/server=localhost:8100 type test
Dispatcher select loop failed
Last client addr = 127.0.0.1
TCL>",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1430,2018-10-16T15:51:44Z,2018-10-20T17:26:17Z,2018-10-21T10:30:37Z,MERGED,True,433,650,39,https://github.com/zack-vii,Zck win socket timeout,15,[],https://github.com/MDSplus/mdsplus/pull/1430,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1430#issuecomment-431570394,"should work but mdsdtcl is still reporting
TCL> dispatch/command/server=localhost:8100 type test
TCL> dispatch/command/server=localhost:8100 type test
Dispatcher select loop failed
Last client addr = 127.0.0.1
TCL>",could be good now,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1432,2018-10-17T16:38:21Z,2018-10-24T15:47:53Z,2018-10-24T15:48:00Z,MERGED,True,9,4,3,https://github.com/joshStillerman,Jas fix mac pkg,3,[],https://github.com/MDSplus/mdsplus/pull/1432,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1432,"Macinstosh SIP prevents non interactive programs from using
DYLD_LIBRARY_PATH to find and activate images.
This script creates symbolic links for all of the shared images in
/usr/local/mdsplus/lib  in /usr/local/lib
This allows the script:
/usr/local/mdsplus/bin/mdstcl
to fire up a shell and have that shell run mdsdcl activating the
TCL verbs.","Macinstosh SIP prevents non interactive programs from using
DYLD_LIBRARY_PATH to find and activate images.
This script creates symbolic links for all of the shared images in
/usr/local/mdsplus/lib  in /usr/local/lib
This allows the script:
/usr/local/mdsplus/bin/mdstcl
to fire up a shell and have that shell run mdsdcl activating the
TCL verbs.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1432,2018-10-17T16:38:21Z,2018-10-24T15:47:53Z,2018-10-24T15:48:00Z,MERGED,True,9,4,3,https://github.com/joshStillerman,Jas fix mac pkg,3,[],https://github.com/MDSplus/mdsplus/pull/1432,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1432#issuecomment-430711685,"Macinstosh SIP prevents non interactive programs from using
DYLD_LIBRARY_PATH to find and activate images.
This script creates symbolic links for all of the shared images in
/usr/local/mdsplus/lib  in /usr/local/lib
This allows the script:
/usr/local/mdsplus/bin/mdstcl
to fire up a shell and have that shell run mdsdcl activating the
TCL verbs.",Retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1432,2018-10-17T16:38:21Z,2018-10-24T15:47:53Z,2018-10-24T15:48:00Z,MERGED,True,9,4,3,https://github.com/joshStillerman,Jas fix mac pkg,3,[],https://github.com/MDSplus/mdsplus/pull/1432,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1432#issuecomment-430761896,"Macinstosh SIP prevents non interactive programs from using
DYLD_LIBRARY_PATH to find and activate images.
This script creates symbolic links for all of the shared images in
/usr/local/mdsplus/lib  in /usr/local/lib
This allows the script:
/usr/local/mdsplus/bin/mdstcl
to fire up a shell and have that shell run mdsdcl activating the
TCL verbs.",Fixes: #1429,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1432,2018-10-17T16:38:21Z,2018-10-24T15:47:53Z,2018-10-24T15:48:00Z,MERGED,True,9,4,3,https://github.com/joshStillerman,Jas fix mac pkg,3,[],https://github.com/MDSplus/mdsplus/pull/1432,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1432#issuecomment-432695474,"Macinstosh SIP prevents non interactive programs from using
DYLD_LIBRARY_PATH to find and activate images.
This script creates symbolic links for all of the shared images in
/usr/local/mdsplus/lib  in /usr/local/lib
This allows the script:
/usr/local/mdsplus/bin/mdstcl
to fire up a shell and have that shell run mdsdcl activating the
TCL verbs.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1433,2018-10-17T16:48:05Z,2018-10-18T02:28:27Z,2018-11-03T11:34:11Z,MERGED,True,579,561,11,https://github.com/zack-vii,Fix: SYNTAX error on TCL,3,[],https://github.com/MDSplus/mdsplus/pull/1433,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1433,fixes TCL command line,fixes TCL command line,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1433,2018-10-17T16:48:05Z,2018-10-18T02:28:27Z,2018-11-03T11:34:11Z,MERGED,True,579,561,11,https://github.com/zack-vii,Fix: SYNTAX error on TCL,3,[],https://github.com/MDSplus/mdsplus/pull/1433,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1433#issuecomment-430844651,fixes TCL command line,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1435,2018-10-21T14:03:28Z,2018-10-23T12:43:08Z,2018-10-23T12:47:45Z,MERGED,True,4,1,1,https://github.com/zack-vii,Build: fc21 warns for clobbered in release,1,[],https://github.com/MDSplus/mdsplus/pull/1435,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1435,which breaks the alpha build,which breaks the alpha build,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1435,2018-10-21T14:03:28Z,2018-10-23T12:43:08Z,2018-10-23T12:47:45Z,MERGED,True,4,1,1,https://github.com/zack-vii,Build: fc21 warns for clobbered in release,1,[],https://github.com/MDSplus/mdsplus/pull/1435,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1435#issuecomment-432228836,which breaks the alpha build,poke,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1436,2018-10-23T21:03:03Z,2018-10-24T14:58:38Z,2018-10-24T14:58:46Z,MERGED,True,10,4,3,https://github.com/tfredian,Feature: Add local protocol to windows,1,[],https://github.com/MDSplus/mdsplus/pull/1436,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1436,"This should enable the use of the ""local"" protocol for mdsip on
the windows platform.
mdsconnect('local://xxx')","This should enable the use of the ""local"" protocol for mdsip on
the windows platform.
mdsconnect('local://xxx')",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1436,2018-10-23T21:03:03Z,2018-10-24T14:58:38Z,2018-10-24T14:58:46Z,MERGED,True,10,4,3,https://github.com/tfredian,Feature: Add local protocol to windows,1,[],https://github.com/MDSplus/mdsplus/pull/1436,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1436#issuecomment-432419001,"This should enable the use of the ""local"" protocol for mdsip on
the windows platform.
mdsconnect('local://xxx')",This should solve #1431,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1436,2018-10-23T21:03:03Z,2018-10-24T14:58:38Z,2018-10-24T14:58:46Z,MERGED,True,10,4,3,https://github.com/tfredian,Feature: Add local protocol to windows,1,[],https://github.com/MDSplus/mdsplus/pull/1436,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1436#issuecomment-432633722,"This should enable the use of the ""local"" protocol for mdsip on
the windows platform.
mdsconnect('local://xxx')","tried this on windows 10 and it seems to work like expected. this should be tested in MdsConnectionTest, right? Why did it the test not fail before when executed under Windows?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1436,2018-10-23T21:03:03Z,2018-10-24T14:58:38Z,2018-10-24T14:58:46Z,MERGED,True,10,4,3,https://github.com/tfredian,Feature: Add local protocol to windows,1,[],https://github.com/MDSplus/mdsplus/pull/1436,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1436#issuecomment-432669626,"This should enable the use of the ""local"" protocol for mdsip on
the windows platform.
mdsconnect('local://xxx')","Good question about the tests. It appears that the MdsConnectionTest.cpp does not handle errors correctly which might be good since I don't think any of the connection tests will work in the test environment anyway. This is a what is in one of the alpha build MdsConnectionTest.log for Windows:
,---------------------------------------. 
 |     MDSplus unit testing...           | 
 '---------------------------------------' 

    Running in suite: /mdsplus-docker/jenkins2/workspace/windows/src/mdsobjects/cpp/testing/MdsConnectionTest.cpp

 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

 -- [Connection local] -- 
started mdsip server for local on port: 0 pid: 108
attempt to connect to: local://localhost
Mdsip single connection server can only be started from windows service
Can't recognize 'mdsip-client-local localhost mdsip-server-local' as an internal or external command, or batch script.
Error in connect
retry
Can't recognize 'mdsip-client-local localhost mdsip-server-local' as an internal or external command, or batch script.
Error in connect
retry
Can't recognize 'mdsip-client-local localhost mdsip-server-local' as an internal or external command, or batch script.
Error in connect
retry
Can't recognize 'mdsip-client-local localhost mdsip-server-local' as an internal or external command, or batch script.
Error in connect
retry
Can't recognize 'mdsip-client-local localhost mdsip-server-local' as an internal or external command, or batch script.
Error in connect
retry
Can't recognize 'mdsip-client-local localhost mdsip-server-local' as an internal or external command, or batch script.
Error in connect

 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

100%: Checks: 0, Failures: 0, Errors: 0

 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

Connection 00 error: 2
Connection 00 error: 2
Connection 00 error: 2
Connection 00 error: 2
Connection 00 error: 2
Connection 00 error: 2
PASS MdsConnectionTest.exe (exit status: 0)

Here is one for fc28:
 ,---------------------------------------. 
 |     MDSplus unit testing...           | 
 '---------------------------------------' 

    Running in suite: /mdsplus-docker/jenkins/workspace/fc28/src/mdsobjects/cpp/testing/MdsConnectionTest.cpp

 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

FORKING PROCESS!started mdsip server for local on port: 0 pid: 11019
attempt to connect to: local://localhost
removing mdsip for local
 -- [Connection local] -- 
FORKING PROCESS!started mdsip server for tcp on port: 8601 pid: 11022
attempt to connect to: tcp://localhost:8601
Error in connect to service: Transport endpoint is not connected
retry
Tue Oct 23 23:57:10 2018 (6) (pid 11022) Connection received from Linux User@localhost [127.0.0.1]
Connected: Linux User
removing mdsip for tcp
 -- [Connection tcp] -- 
FORKING PROCESS!started mdsip server for udt on port: 8602 pid: 11024
attempt to connect to: udt://localhost:8602
Tue Oct 23 23:57:10 2018 (472989398) (pid 11024) Connection received from Linux User@localhost [127.0.0.1]
Connected: Linux User
removing mdsip for udt
 -- [Connection udt] -- 
FORKING PROCESS!started mdsip server for tcpv6 on port: 8603 pid: 11032
attempt to connect to: tcp://localhost:8603
Error in connect to service: Transport endpoint is not connected
retry
Tue Oct 23 23:57:13 2018 (6) (pid 11032) Connection received from Linux User@localhost [::ffff:127.0.0.1]
Connected: Linux User
removing mdsip for tcpv6
 -- [Connection tcpv6] -- 
FORKING PROCESS!started mdsip server for udtv6 on port: 8604 pid: 11034
attempt to connect to: udt://localhost:8604
Tue Oct 23 23:57:13 2018 (247740386) (pid 11034) Connection received from Linux User@localhost [::ffff:127.0.0.1]
Connected: Linux User
removing mdsip for udtv6
 -- [Connection udtv6] -- 

 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

100%: Checks: 5, Failures: 0, Errors: 0

 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

PASS MdsConnectionTest (exit status: 0)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1437,2018-10-24T20:34:33Z,2018-10-26T22:55:41Z,2018-10-26T22:55:41Z,MERGED,True,46,6,6,https://github.com/tfredian,Fix: Require consistent dispatch table context,3,[],https://github.com/MDSplus/mdsplus/pull/1437,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1437,"The dispatch table will be only valid when the context is referring
to the tree the dispatch/build command used to generate the table.
The dispatch table is now attached to the tree context so if you
open another tree or close the original tree you will get an error
if you try to issue the dispatch/phase. If you open another tree
and then set the tree context to the original the dispatch table
will be available.
Fixes #1302","The dispatch table will be only valid when the context is referring
to the tree the dispatch/build command used to generate the table.
The dispatch table is now attached to the tree context so if you
open another tree or close the original tree you will get an error
if you try to issue the dispatch/phase. If you open another tree
and then set the tree context to the original the dispatch table
will be available.
Fixes #1302",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1437,2018-10-24T20:34:33Z,2018-10-26T22:55:41Z,2018-10-26T22:55:41Z,MERGED,True,46,6,6,https://github.com/tfredian,Fix: Require consistent dispatch table context,3,[],https://github.com/MDSplus/mdsplus/pull/1437,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1437#issuecomment-433035909,"The dispatch table will be only valid when the context is referring
to the tree the dispatch/build command used to generate the table.
The dispatch table is now attached to the tree context so if you
open another tree or close the original tree you will get an error
if you try to issue the dispatch/phase. If you open another tree
and then set the tree context to the original the dispatch table
will be available.
Fixes #1302",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1437,2018-10-24T20:34:33Z,2018-10-26T22:55:41Z,2018-10-26T22:55:41Z,MERGED,True,46,6,6,https://github.com/tfredian,Fix: Require consistent dispatch table context,3,[],https://github.com/MDSplus/mdsplus/pull/1437,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1437#issuecomment-433561914,"The dispatch table will be only valid when the context is referring
to the tree the dispatch/build command used to generate the table.
The dispatch table is now attached to the tree context so if you
open another tree or close the original tree you will get an error
if you try to issue the dispatch/phase. If you open another tree
and then set the tree context to the original the dispatch table
will be available.
Fixes #1302",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1440,2018-10-26T00:40:04Z,2018-10-27T02:14:23Z,2019-03-22T16:06:24Z,MERGED,True,537,532,46,https://github.com/zack-vii,Zck win connection,21,[],https://github.com/MDSplus/mdsplus/pull/1440,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1440,"fixes MdsValue on broken connection SigSeg
fixes SigPipe on mdsip
fixes runaway mdsip sessions
fixes test suite to handle failing tests properly
includes Tunnel type protocols in MdsIpShr
MdsConnectionTest cleans up mdsip processes
ipv6 tests can be manually activated by command line param (disabled by default; docker)
fixes of DEBUG code","fixes MdsValue on broken connection SigSeg
fixes SigPipe on mdsip
fixes runaway mdsip sessions
fixes test suite to handle failing tests properly
includes Tunnel type protocols in MdsIpShr
MdsConnectionTest cleans up mdsip processes
ipv6 tests can be manually activated by command line param (disabled by default; docker)
fixes of DEBUG code",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1440,2018-10-26T00:40:04Z,2018-10-27T02:14:23Z,2019-03-22T16:06:24Z,MERGED,True,537,532,46,https://github.com/zack-vii,Zck win connection,21,[],https://github.com/MDSplus/mdsplus/pull/1440,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1440#issuecomment-433563389,"fixes MdsValue on broken connection SigSeg
fixes SigPipe on mdsip
fixes runaway mdsip sessions
fixes test suite to handle failing tests properly
includes Tunnel type protocols in MdsIpShr
MdsConnectionTest cleans up mdsip processes
ipv6 tests can be manually activated by command line param (disabled by default; docker)
fixes of DEBUG code",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1442,2018-10-27T11:32:04Z,2018-10-29T12:11:57Z,2018-11-03T11:36:41Z,MERGED,True,38,70,14,https://github.com/zack-vii,Fix: use (int)(intptr_t) to cast from void* to int,2,[],https://github.com/MDSplus/mdsplus/pull/1442,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1442,"LibCallg should not be used for imported functions with a fixed number of args.
Instead, initialize the function reference with
static int (*TdiExecute)() = NULL;
(NULL and static important for load-only-first-time)
load it with
 int status = LibFindImageSymbol_C(""TdiShr"", ""TdiExecute"", TdiExecute);

(handles the load-only-first-time, loads if ref is NULL)
and make the call
status = (*TdiExecute)(expr, arg1, arg2 MDS_END_ARG);
If LibCallg is required, convert void* to status via portable intptr_t cast.
extern void* LibCallg();
...
status = (int)(intptr_t)LibCallg(arglist,TdiExecute);","LibCallg should not be used for imported functions with a fixed number of args.
Instead, initialize the function reference with
static int (*TdiExecute)() = NULL;
(NULL and static important for load-only-first-time)
load it with
 int status = LibFindImageSymbol_C(""TdiShr"", ""TdiExecute"", TdiExecute);

(handles the load-only-first-time, loads if ref is NULL)
and make the call
status = (*TdiExecute)(expr, arg1, arg2 MDS_END_ARG);
If LibCallg is required, convert void* to status via portable intptr_t cast.
extern void* LibCallg();
...
status = (int)(intptr_t)LibCallg(arglist,TdiExecute);",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1444,2018-10-29T21:09:10Z,2018-11-02T17:01:58Z,2018-11-02T17:01:58Z,MERGED,True,756,530,29,https://github.com/zack-vii,Zck python fun,16,[],https://github.com/MDSplus/mdsplus/pull/1444,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1444,TODO: improvement; add python methods loaded from tdi into a designated module in order to prevent any kind of name clash with existing python modules,TODO: improvement; add python methods loaded from tdi into a designated module in order to prevent any kind of name clash with existing python modules,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1444,2018-10-29T21:09:10Z,2018-11-02T17:01:58Z,2018-11-02T17:01:58Z,MERGED,True,756,530,29,https://github.com/zack-vii,Zck python fun,16,[],https://github.com/MDSplus/mdsplus/pull/1444,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1444#issuecomment-434322052,TODO: improvement; add python methods loaded from tdi into a designated module in order to prevent any kind of name clash with existing python modules,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1444,2018-10-29T21:09:10Z,2018-11-02T17:01:58Z,2018-11-02T17:01:58Z,MERGED,True,756,530,29,https://github.com/zack-vii,Zck python fun,16,[],https://github.com/MDSplus/mdsplus/pull/1444,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1444#issuecomment-434928789,TODO: improvement; add python methods loaded from tdi into a designated module in order to prevent any kind of name clash with existing python modules,"the windows version is a bit hacky but works fine.. for some reason windows cannot lock the file properly. gdb reports a segfault in _lockfile when it tries to do PyRun_SimpleFileExFlags.
edit: execfile might not be available on all python versions :(",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1445,2018-11-02T20:37:48Z,2018-11-03T00:44:41Z,2018-11-03T11:34:11Z,MERGED,True,64,34,5,https://github.com/zack-vii,Zck python fun,4,[],https://github.com/MDSplus/mdsplus/pull/1445,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1445,"fixes execfile and exec for python3 in both TdiExtPython and .py
TODO: test Py, addfun, and pyfun in either tditest or python tests - separate PR ?!","fixes execfile and exec for python3 in both TdiExtPython and .py
TODO: test Py, addfun, and pyfun in either tditest or python tests - separate PR ?!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1445,2018-11-02T20:37:48Z,2018-11-03T00:44:41Z,2018-11-03T11:34:11Z,MERGED,True,64,34,5,https://github.com/zack-vii,Zck python fun,4,[],https://github.com/MDSplus/mdsplus/pull/1445,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1445#issuecomment-435502095,"fixes execfile and exec for python3 in both TdiExtPython and .py
TODO: test Py, addfun, and pyfun in either tditest or python tests - separate PR ?!","@tfredian: if the test succeeds, could you verify and merge this PR. you already merged the previous one that does not work with python3.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1445,2018-11-02T20:37:48Z,2018-11-03T00:44:41Z,2018-11-03T11:34:11Z,MERGED,True,64,34,5,https://github.com/zack-vii,Zck python fun,4,[],https://github.com/MDSplus/mdsplus/pull/1445,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1445#issuecomment-435524616,"fixes execfile and exec for python3 in both TdiExtPython and .py
TODO: test Py, addfun, and pyfun in either tditest or python tests - separate PR ?!","ok tested it for linux and windows, both python 2.7 and 3.4. should work for other versions too.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1447,2018-11-04T21:20:54Z,2018-11-06T13:25:47Z,2018-11-06T13:25:50Z,MERGED,True,469,213,46,https://github.com/zack-vii,Fix: r+ fails if not write privileges r is sufficient.,12,[],https://github.com/MDSplus/mdsplus/pull/1447,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1447,"Unfortunately, this issue was only revealed after installing the new release.","Unfortunately, this issue was only revealed after installing the new release.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1448,2018-11-06T22:36:36Z,2018-11-07T17:58:41Z,2019-08-17T10:16:22Z,MERGED,True,1044,463,120,https://github.com/zack-vii,Zck stable python3,35,[],https://github.com/MDSplus/mdsplus/pull/1448,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1448,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1449,2018-11-07T15:52:31Z,2018-11-07T17:58:22Z,2019-08-17T10:16:23Z,MERGED,True,11,7,5,https://github.com/zack-vii,Tests: fix use DEF_PYLIB for TESTS_ENVIRONMENT and use PYTHON in tdit…,2,[],https://github.com/MDSplus/mdsplus/pull/1449,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1449,…est/testing,…est/testing,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1450,2018-11-07T17:52:56Z,2018-11-07T19:08:08Z,2019-11-25T10:21:45Z,CLOSED,False,5,5,1,https://github.com/joshStillerman,Fix: select can return EINPROGRESS - which is OK,1,[],https://github.com/MDSplus/mdsplus/pull/1450,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1450,"The select in mdstcpip can return 0 with errno == EINPROGRESS
if the connect returned it.  This is not an error.  I do not think
the select needs to be redone, but do not have a good way to verify
this.","The select in mdstcpip can return 0 with errno == EINPROGRESS
if the connect returned it.  This is not an error.  I do not think
the select needs to be redone, but do not have a good way to verify
this.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1450,2018-11-07T17:52:56Z,2018-11-07T19:08:08Z,2019-11-25T10:21:45Z,CLOSED,False,5,5,1,https://github.com/joshStillerman,Fix: select can return EINPROGRESS - which is OK,1,[],https://github.com/MDSplus/mdsplus/pull/1450,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1450#issuecomment-436741270,"The select in mdstcpip can return 0 with errno == EINPROGRESS
if the connect returned it.  This is not an error.  I do not think
the select needs to be redone, but do not have a good way to verify
this.","The EINPROGRESS error in errno is set by the connect when a connection timeout is set using the MDSIP_CONNECT_TIMEOUT environment variable. The select is used to wait for the connection to complete and should return non-zero unless the connection attempt has timed out. That is the point of the select. If MDSIP_CONNECT_TIMEOUT is not defined then the connect is done without NONBLOCK and the select is not needed. If a site is getting an ""Error in connect"" error then either something is wrong with their network or they need to increase the value of their MDSIP_CONNECT_TIMEOUT.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1451,2018-11-07T19:24:52Z,2018-11-14T14:27:10Z,2018-11-14T14:27:10Z,MERGED,True,66,75,5,https://github.com/tfredian,Fix: prevent segfault in findnode with invalid node syntax,1,[],https://github.com/MDSplus/mdsplus/pull/1451,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1451,"Fix: Avoid segfault in FindNode with invalid nodename syntax
If a bad syntax is passed to FindNode or FindNodeWild a segfault
occurs. This should fix #1423","Fix: Avoid segfault in FindNode with invalid nodename syntax
If a bad syntax is passed to FindNode or FindNodeWild a segfault
occurs. This should fix #1423",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1452,2018-11-07T21:04:38Z,2018-11-10T13:35:56Z,2018-11-10T13:35:56Z,CLOSED,False,14,2,3,https://github.com/tfredian,Fix: TreeFindNode handling of invalid node syntax,4,[],https://github.com/MDSplus/mdsplus/pull/1452,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1452,TreeFindNode called with a path beginning with a linefeed (\n) causes a segfault. This should fix this problem.,TreeFindNode called with a path beginning with a linefeed (\n) causes a segfault. This should fix this problem.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1455,2018-11-13T16:21:15Z,2018-11-14T18:18:25Z,2018-11-14T18:18:25Z,MERGED,True,18,12,5,https://github.com/tfredian,Fix: Avoid segfault in FindNode with invalid nodename syntax,1,[],https://github.com/MDSplus/mdsplus/pull/1455,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1455,"If a bad syntax is passed to FindNode or FindNodeWild a segfault
occurs. This should fix #1423","If a bad syntax is passed to FindNode or FindNodeWild a segfault
occurs. This should fix #1423",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1455,2018-11-13T16:21:15Z,2018-11-14T18:18:25Z,2018-11-14T18:18:25Z,MERGED,True,18,12,5,https://github.com/tfredian,Fix: Avoid segfault in FindNode with invalid nodename syntax,1,[],https://github.com/MDSplus/mdsplus/pull/1455,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1455#issuecomment-438708010,"If a bad syntax is passed to FindNode or FindNodeWild a segfault
occurs. This should fix #1423",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1456,2018-11-13T17:15:03Z,2018-11-14T01:41:16Z,2018-11-14T01:41:22Z,MERGED,True,59,60,3,https://github.com/zack-vii,Zck mdsip locks,3,[],https://github.com/MDSplus/mdsplus/pull/1456,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1456,"while working on a task cancel feature for mdsip i found some issues with locks

ActionDone does not unlock action lock is action is done
Python seems to take good care over GIL on pthread_cancel or SIGINT events

aborting a time.sleep resulted in a SystemError because GIL was already released","while working on a task cancel feature for mdsip i found some issues with locks

ActionDone does not unlock action lock is action is done
Python seems to take good care over GIL on pthread_cancel or SIGINT events

aborting a time.sleep resulted in a SystemError because GIL was already released",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1457,2018-11-14T14:37:46Z,2018-11-14T16:48:06Z,2018-11-14T16:48:06Z,MERGED,True,10,4,1,https://github.com/tfredian,BUILD: Better handling of release version and jars-dir,1,[],https://github.com/MDSplus/mdsplus/pull/1457,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1457,"The build.sh script will no longer reset the release version to
1.2.3 if both the --release=ver and --release options are used
simutaneously. The --jars-dir=dirspec option was restored so that
manual builds (not triggered by jenkins) can utilized the jar files
produced in another directory tree.","The build.sh script will no longer reset the release version to
1.2.3 if both the --release=ver and --release options are used
simutaneously. The --jars-dir=dirspec option was restored so that
manual builds (not triggered by jenkins) can utilized the jar files
produced in another directory tree.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1459,2018-11-15T22:49:39Z,2018-11-19T14:58:57Z,2018-11-19T14:59:07Z,MERGED,True,389,286,25,https://github.com/zack-vii,Zck mdsip cancel,23,[],https://github.com/MDSplus/mdsplus/pull/1459,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1459,"EXPERIMENTAL:
mdsip will try to cancel the current task if the client disconnects.
Dispatching should be fine since the Message ends after returning from the ServerQAction method. The actual Task is running asynchronous in a different Thread.
ProcessMessage should terminate the Worker gracefully, so no locks should break.","EXPERIMENTAL:
mdsip will try to cancel the current task if the client disconnects.
Dispatching should be fine since the Message ends after returning from the ServerQAction method. The actual Task is running asynchronous in a different Thread.
ProcessMessage should terminate the Worker gracefully, so no locks should break.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1460,2018-11-19T12:46:41Z,2018-11-21T16:23:18Z,2019-01-15T22:14:24Z,MERGED,True,839,1589,63,https://github.com/zack-vii,Zck fixups stable,16,[],https://github.com/MDSplus/mdsplus/pull/1460,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1460,"Some fixes to issues that popped up during #1459.
Also should fix the issue with valgrind complaint in fc26 in the stable build.
TODO: there seems to be a stack issue under wine in
threadUnitTest -> treeUnitTest -> nciInfo
   self.assertEqual(part.original_part_name,':COMMENT')"" 
WindowsError: exception: access violation writing 0x0000000000000000
I cannot reproduce this on my windows10 machine and it only happens occasionally.","Some fixes to issues that popped up during #1459.
Also should fix the issue with valgrind complaint in fc26 in the stable build.
TODO: there seems to be a stack issue under wine in
threadUnitTest -> treeUnitTest -> nciInfo
   self.assertEqual(part.original_part_name,':COMMENT')"" 
WindowsError: exception: access violation writing 0x0000000000000000
I cannot reproduce this on my windows10 machine and it only happens occasionally.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1461,2018-11-19T16:23:04Z,2018-11-19T20:57:27Z,2018-11-19T20:57:32Z,MERGED,True,702,65,12,https://github.com/joshStillerman,"Feature: Add Cryocon118i, fix Acq2106_423",3,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1461,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1461,"A new device Cryocon model 18i cryogenic temperature monitor
controller. This is an 8 channel network based thermocouple
monitor.
The d-tacq acq2106_423_stN (1-6) devices are now in their own files.

new python devices discovery makes the use of init.py in the
device directorys not effective.

In addition if there is no init.py
Then imports from subdirectories do not work.  So, empty init.py
files are placed in pydevices and pydevices/HtsDevices.","A new device Cryocon model 18i cryogenic temperature monitor
controller. This is an 8 channel network based thermocouple
monitor.
The d-tacq acq2106_423_stN (1-6) devices are now in their own files.

new python devices discovery makes the use of init.py in the
device directorys not effective.

In addition if there is no init.py
Then imports from subdirectories do not work.  So, empty init.py
files are placed in pydevices and pydevices/HtsDevices.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1462,2018-11-20T16:33:15Z,2018-11-21T16:22:42Z,2019-11-25T10:22:33Z,MERGED,True,5,5,5,https://github.com/joshStillerman,Fix: Fix class names for acq2106_423 devices,1,[],https://github.com/MDSplus/mdsplus/pull/1462,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1462,"The class name for the ACQ2106_423_nST devices did not match the
filenames. They were copied from _1ST without modification.  This
PR updates them to the correct strings.","The class name for the ACQ2106_423_nST devices did not match the
filenames. They were copied from _1ST without modification.  This
PR updates them to the correct strings.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1463,2018-11-21T03:17:55Z,2018-11-21T16:22:26Z,2018-11-21T16:22:26Z,MERGED,True,491,1060,20,https://github.com/zack-vii,Zck misc fixes,4,[],https://github.com/MDSplus/mdsplus/pull/1463,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1463,refactor python tests and a0 in TdiSetRange,refactor python tests and a0 in TdiSetRange,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1465,2018-11-21T15:45:59Z,2018-11-21T19:07:31Z,2018-11-21T19:07:34Z,MERGED,True,1,0,1,https://github.com/tfredian,Feature: Add fedora 29 support,1,[],https://github.com/MDSplus/mdsplus/pull/1465,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1465,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1465,2018-11-21T15:45:59Z,2018-11-21T19:07:31Z,2018-11-21T19:07:34Z,MERGED,True,1,0,1,https://github.com/tfredian,Feature: Add fedora 29 support,1,[],https://github.com/MDSplus/mdsplus/pull/1465,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1465#issuecomment-440736422,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1466,2018-11-21T15:57:14Z,2018-11-21T19:07:09Z,2018-11-21T19:07:17Z,MERGED,True,1,0,1,https://github.com/tfredian,Feature: Add fedora 29 support,1,[],https://github.com/MDSplus/mdsplus/pull/1466,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1466,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1467,2018-11-21T18:57:09Z,2018-11-28T15:06:34Z,2018-11-28T15:06:34Z,MERGED,True,191,8,9,https://github.com/tfredian,Feature: Add tdi based treeshr hooks,3,[],https://github.com/MDSplus/mdsplus/pull/1467,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1467,"Add various treeshr hooks which will call a TreeShrHook fun with
one argument which is a Dictionary. Depending on the hook the
Dictionary could contain fields such as:
""type"" - the name of the type of hook
""tree"" - the name of the tree
""shot"" - the shot number of the tree
""nid""  - the node being operated on
""data"" - the data being written to the tree
The type of hooks currently provided are:
""OpenTree""     - Tree being opened
""WriteTree""    - Save of edited tree
""GetNci""       - Getting node characteristics
""GetData""      - Retrieving data stored in a node
""CloseTree""    - Closing an opened tree
""RetrieveTree"" - Tree not found so hook to retrieve from storage
""OpenTreeEdit"" - Opening a tree for edit
""OpenDatafileWrite"" - Open tree datafile for write
""MakeSegment""  - Store a segment in a node
""MakeSegmentFull"" - Store a segment in a node (data passed to hook)
""MakeTimestampedSegment"" - Store timestamped segment
""MakeTimestampedSegmentFull"" - Store segment (data passed)
""PutSegment""      - Store segment
""PutTimestampedSegment"" - Store timestamped segment
""PutTimestampedSegmentFull"" - (data passed)
Hook selection is determined by the TreeHooks environment variable.
You can select particular hooks by listing the hook types in a
comma delimited list (i.e. export TreeHooks=OpenTree,GetNci,CloseTree)
or you can use the keywords allhooks and fullhooks. If the string,
""allhooks"", is found in the TreeHooks environment variable all of the
hooks which do not have full in their type name will be called. If
the string, ""fullhooks"", is found all the hooks with full in their type
will be called. If you include allhooks and fullhooks in the TreeHooks
environment variable all the hooks will be called. The names included
in the TreeHooks environment variable will be case insensitive.","Add various treeshr hooks which will call a TreeShrHook fun with
one argument which is a Dictionary. Depending on the hook the
Dictionary could contain fields such as:
""type"" - the name of the type of hook
""tree"" - the name of the tree
""shot"" - the shot number of the tree
""nid""  - the node being operated on
""data"" - the data being written to the tree
The type of hooks currently provided are:
""OpenTree""     - Tree being opened
""WriteTree""    - Save of edited tree
""GetNci""       - Getting node characteristics
""GetData""      - Retrieving data stored in a node
""CloseTree""    - Closing an opened tree
""RetrieveTree"" - Tree not found so hook to retrieve from storage
""OpenTreeEdit"" - Opening a tree for edit
""OpenDatafileWrite"" - Open tree datafile for write
""MakeSegment""  - Store a segment in a node
""MakeSegmentFull"" - Store a segment in a node (data passed to hook)
""MakeTimestampedSegment"" - Store timestamped segment
""MakeTimestampedSegmentFull"" - Store segment (data passed)
""PutSegment""      - Store segment
""PutTimestampedSegment"" - Store timestamped segment
""PutTimestampedSegmentFull"" - (data passed)
Hook selection is determined by the TreeHooks environment variable.
You can select particular hooks by listing the hook types in a
comma delimited list (i.e. export TreeHooks=OpenTree,GetNci,CloseTree)
or you can use the keywords allhooks and fullhooks. If the string,
""allhooks"", is found in the TreeHooks environment variable all of the
hooks which do not have full in their type name will be called. If
the string, ""fullhooks"", is found all the hooks with full in their type
will be called. If you include allhooks and fullhooks in the TreeHooks
environment variable all the hooks will be called. The names included
in the TreeHooks environment variable will be case insensitive.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1467,2018-11-21T18:57:09Z,2018-11-28T15:06:34Z,2018-11-28T15:06:34Z,MERGED,True,191,8,9,https://github.com/tfredian,Feature: Add tdi based treeshr hooks,3,[],https://github.com/MDSplus/mdsplus/pull/1467,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1467#issuecomment-440941736,"Add various treeshr hooks which will call a TreeShrHook fun with
one argument which is a Dictionary. Depending on the hook the
Dictionary could contain fields such as:
""type"" - the name of the type of hook
""tree"" - the name of the tree
""shot"" - the shot number of the tree
""nid""  - the node being operated on
""data"" - the data being written to the tree
The type of hooks currently provided are:
""OpenTree""     - Tree being opened
""WriteTree""    - Save of edited tree
""GetNci""       - Getting node characteristics
""GetData""      - Retrieving data stored in a node
""CloseTree""    - Closing an opened tree
""RetrieveTree"" - Tree not found so hook to retrieve from storage
""OpenTreeEdit"" - Opening a tree for edit
""OpenDatafileWrite"" - Open tree datafile for write
""MakeSegment""  - Store a segment in a node
""MakeSegmentFull"" - Store a segment in a node (data passed to hook)
""MakeTimestampedSegment"" - Store timestamped segment
""MakeTimestampedSegmentFull"" - Store segment (data passed)
""PutSegment""      - Store segment
""PutTimestampedSegment"" - Store timestamped segment
""PutTimestampedSegmentFull"" - (data passed)
Hook selection is determined by the TreeHooks environment variable.
You can select particular hooks by listing the hook types in a
comma delimited list (i.e. export TreeHooks=OpenTree,GetNci,CloseTree)
or you can use the keywords allhooks and fullhooks. If the string,
""allhooks"", is found in the TreeHooks environment variable all of the
hooks which do not have full in their type name will be called. If
the string, ""fullhooks"", is found all the hooks with full in their type
will be called. If you include allhooks and fullhooks in the TreeHooks
environment variable all the hooks will be called. The names included
in the TreeHooks environment variable will be case insensitive.",Is the hook available only in python?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1467,2018-11-21T18:57:09Z,2018-11-28T15:06:34Z,2018-11-28T15:06:34Z,MERGED,True,191,8,9,https://github.com/tfredian,Feature: Add tdi based treeshr hooks,3,[],https://github.com/MDSplus/mdsplus/pull/1467,https://github.com/MDSplusBuilder,3,https://github.com/MDSplus/mdsplus/pull/1467#issuecomment-441013871,"Add various treeshr hooks which will call a TreeShrHook fun with
one argument which is a Dictionary. Depending on the hook the
Dictionary could contain fields such as:
""type"" - the name of the type of hook
""tree"" - the name of the tree
""shot"" - the shot number of the tree
""nid""  - the node being operated on
""data"" - the data being written to the tree
The type of hooks currently provided are:
""OpenTree""     - Tree being opened
""WriteTree""    - Save of edited tree
""GetNci""       - Getting node characteristics
""GetData""      - Retrieving data stored in a node
""CloseTree""    - Closing an opened tree
""RetrieveTree"" - Tree not found so hook to retrieve from storage
""OpenTreeEdit"" - Opening a tree for edit
""OpenDatafileWrite"" - Open tree datafile for write
""MakeSegment""  - Store a segment in a node
""MakeSegmentFull"" - Store a segment in a node (data passed to hook)
""MakeTimestampedSegment"" - Store timestamped segment
""MakeTimestampedSegmentFull"" - Store segment (data passed)
""PutSegment""      - Store segment
""PutTimestampedSegment"" - Store timestamped segment
""PutTimestampedSegmentFull"" - (data passed)
Hook selection is determined by the TreeHooks environment variable.
You can select particular hooks by listing the hook types in a
comma delimited list (i.e. export TreeHooks=OpenTree,GetNci,CloseTree)
or you can use the keywords allhooks and fullhooks. If the string,
""allhooks"", is found in the TreeHooks environment variable all of the
hooks which do not have full in their type name will be called. If
the string, ""fullhooks"", is found all the hooks with full in their type
will be called. If you include allhooks and fullhooks in the TreeHooks
environment variable all the hooks will be called. The names included
in the TreeHooks environment variable will be case insensitive.","No. It's a tdi fun which could be written in tdi or python.

⁣Sent from BlueMail ​
…
On Nov 22, 2018, 2:49 AM, at 2:49 AM, GabrieleManduchi ***@***.***> wrote:
Is the hook available only in python?

--
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
#1467 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1467,2018-11-21T18:57:09Z,2018-11-28T15:06:34Z,2018-11-28T15:06:34Z,MERGED,True,191,8,9,https://github.com/tfredian,Feature: Add tdi based treeshr hooks,3,[],https://github.com/MDSplus/mdsplus/pull/1467,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1467#issuecomment-441021501,"Add various treeshr hooks which will call a TreeShrHook fun with
one argument which is a Dictionary. Depending on the hook the
Dictionary could contain fields such as:
""type"" - the name of the type of hook
""tree"" - the name of the tree
""shot"" - the shot number of the tree
""nid""  - the node being operated on
""data"" - the data being written to the tree
The type of hooks currently provided are:
""OpenTree""     - Tree being opened
""WriteTree""    - Save of edited tree
""GetNci""       - Getting node characteristics
""GetData""      - Retrieving data stored in a node
""CloseTree""    - Closing an opened tree
""RetrieveTree"" - Tree not found so hook to retrieve from storage
""OpenTreeEdit"" - Opening a tree for edit
""OpenDatafileWrite"" - Open tree datafile for write
""MakeSegment""  - Store a segment in a node
""MakeSegmentFull"" - Store a segment in a node (data passed to hook)
""MakeTimestampedSegment"" - Store timestamped segment
""MakeTimestampedSegmentFull"" - Store segment (data passed)
""PutSegment""      - Store segment
""PutTimestampedSegment"" - Store timestamped segment
""PutTimestampedSegmentFull"" - (data passed)
Hook selection is determined by the TreeHooks environment variable.
You can select particular hooks by listing the hook types in a
comma delimited list (i.e. export TreeHooks=OpenTree,GetNci,CloseTree)
or you can use the keywords allhooks and fullhooks. If the string,
""allhooks"", is found in the TreeHooks environment variable all of the
hooks which do not have full in their type name will be called. If
the string, ""fullhooks"", is found all the hooks with full in their type
will be called. If you include allhooks and fullhooks in the TreeHooks
environment variable all the hooks will be called. The names included
in the TreeHooks environment variable will be case insensitive.","If I am not wrong, there are possible memory leaks in TreeCallHook _strcasestr() (the strings obtained by strdup should be freed?) and in isEnabled() (enabledHooks not freed in return statements?)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1467,2018-11-21T18:57:09Z,2018-11-28T15:06:34Z,2018-11-28T15:06:34Z,MERGED,True,191,8,9,https://github.com/tfredian,Feature: Add tdi based treeshr hooks,3,[],https://github.com/MDSplus/mdsplus/pull/1467,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/1467#issuecomment-441025358,"Add various treeshr hooks which will call a TreeShrHook fun with
one argument which is a Dictionary. Depending on the hook the
Dictionary could contain fields such as:
""type"" - the name of the type of hook
""tree"" - the name of the tree
""shot"" - the shot number of the tree
""nid""  - the node being operated on
""data"" - the data being written to the tree
The type of hooks currently provided are:
""OpenTree""     - Tree being opened
""WriteTree""    - Save of edited tree
""GetNci""       - Getting node characteristics
""GetData""      - Retrieving data stored in a node
""CloseTree""    - Closing an opened tree
""RetrieveTree"" - Tree not found so hook to retrieve from storage
""OpenTreeEdit"" - Opening a tree for edit
""OpenDatafileWrite"" - Open tree datafile for write
""MakeSegment""  - Store a segment in a node
""MakeSegmentFull"" - Store a segment in a node (data passed to hook)
""MakeTimestampedSegment"" - Store timestamped segment
""MakeTimestampedSegmentFull"" - Store segment (data passed)
""PutSegment""      - Store segment
""PutTimestampedSegment"" - Store timestamped segment
""PutTimestampedSegmentFull"" - (data passed)
Hook selection is determined by the TreeHooks environment variable.
You can select particular hooks by listing the hook types in a
comma delimited list (i.e. export TreeHooks=OpenTree,GetNci,CloseTree)
or you can use the keywords allhooks and fullhooks. If the string,
""allhooks"", is found in the TreeHooks environment variable all of the
hooks which do not have full in their type name will be called. If
the string, ""fullhooks"", is found all the hooks with full in their type
will be called. If you include allhooks and fullhooks in the TreeHooks
environment variable all the hooks will be called. The names included
in the TreeHooks environment variable will be case insensitive.","Not clear to me why the following two consecutive calls:
TreeCallHookFun(""TreeNidHook"",""PutData"",info_ptr->treenam, info_ptr->shot, nid, NULL);
TreeCallHookFun(""TreeNidDataHook"",""PutData"",info_ptr->treenam,
	    info_ptr->shot, nid, descriptor_ptr, NULL);

Seems like the hook for is called twice with type = PutData, the second time with a dictionary argument that is just the dictionary of the first call plus data. Am I missing anything?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1467,2018-11-21T18:57:09Z,2018-11-28T15:06:34Z,2018-11-28T15:06:34Z,MERGED,True,191,8,9,https://github.com/tfredian,Feature: Add tdi based treeshr hooks,3,[],https://github.com/MDSplus/mdsplus/pull/1467,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/1467#issuecomment-441643609,"Add various treeshr hooks which will call a TreeShrHook fun with
one argument which is a Dictionary. Depending on the hook the
Dictionary could contain fields such as:
""type"" - the name of the type of hook
""tree"" - the name of the tree
""shot"" - the shot number of the tree
""nid""  - the node being operated on
""data"" - the data being written to the tree
The type of hooks currently provided are:
""OpenTree""     - Tree being opened
""WriteTree""    - Save of edited tree
""GetNci""       - Getting node characteristics
""GetData""      - Retrieving data stored in a node
""CloseTree""    - Closing an opened tree
""RetrieveTree"" - Tree not found so hook to retrieve from storage
""OpenTreeEdit"" - Opening a tree for edit
""OpenDatafileWrite"" - Open tree datafile for write
""MakeSegment""  - Store a segment in a node
""MakeSegmentFull"" - Store a segment in a node (data passed to hook)
""MakeTimestampedSegment"" - Store timestamped segment
""MakeTimestampedSegmentFull"" - Store segment (data passed)
""PutSegment""      - Store segment
""PutTimestampedSegment"" - Store timestamped segment
""PutTimestampedSegmentFull"" - (data passed)
Hook selection is determined by the TreeHooks environment variable.
You can select particular hooks by listing the hook types in a
comma delimited list (i.e. export TreeHooks=OpenTree,GetNci,CloseTree)
or you can use the keywords allhooks and fullhooks. If the string,
""allhooks"", is found in the TreeHooks environment variable all of the
hooks which do not have full in their type name will be called. If
the string, ""fullhooks"", is found all the hooks with full in their type
will be called. If you include allhooks and fullhooks in the TreeHooks
environment variable all the hooks will be called. The names included
in the TreeHooks environment variable will be case insensitive.",Good finds Gabriele. I guess eventually I should add some tests of calling hooks as this leak would have been found by sanitizers or valgrind. The second call to TreeCallHookFun should have been PutDataFull as it passes the data to the hook. These should now be fixed.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1468,2018-11-22T13:30:50Z,2019-01-03T12:24:33Z,2019-01-03T12:24:33Z,CLOSED,False,2107,2273,45,https://github.com/zack-vii,Refactor Thick Client; support as if distributed,53,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1468,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1468,"Do CTX_PUSH and CTX_POP dbid in c.
*memory fix for TreeGetDatafileSize
*TreeCleanDatafile can auto close tree before compressing: should it reopen after?
*provides _TdiExecute(void**dbid,...) -> TdiExecute(...) generically for all Tdi functions
*provides _mdsdcl_do_command_dsc(void**dbid,...) -> mdsdcl_do_command_dsc
*eliminates tree._TreeCtx in python api
*lock/unlock and free cleanup in treeshr/RemoteAccess.c
*added python device do test-dev-py.tdi","Do CTX_PUSH and CTX_POP dbid in c.
*memory fix for TreeGetDatafileSize
*TreeCleanDatafile can auto close tree before compressing: should it reopen after?
*provides _TdiExecute(void**dbid,...) -> TdiExecute(...) generically for all Tdi functions
*provides _mdsdcl_do_command_dsc(void**dbid,...) -> mdsdcl_do_command_dsc
*eliminates tree._TreeCtx in python api
*lock/unlock and free cleanup in treeshr/RemoteAccess.c
*added python device do test-dev-py.tdi",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1468,2018-11-22T13:30:50Z,2019-01-03T12:24:33Z,2019-01-03T12:24:33Z,CLOSED,False,2107,2273,45,https://github.com/zack-vii,Refactor Thick Client; support as if distributed,53,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1468,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1468#issuecomment-442966660,"Do CTX_PUSH and CTX_POP dbid in c.
*memory fix for TreeGetDatafileSize
*TreeCleanDatafile can auto close tree before compressing: should it reopen after?
*provides _TdiExecute(void**dbid,...) -> TdiExecute(...) generically for all Tdi functions
*provides _mdsdcl_do_command_dsc(void**dbid,...) -> mdsdcl_do_command_dsc
*eliminates tree._TreeCtx in python api
*lock/unlock and free cleanup in treeshr/RemoteAccess.c
*added python device do test-dev-py.tdi",added a new spin-off of the tunnel protocol. it spawns a thread instead of a new process. its not much of an improvement in regular use but makes it a lot easier to debug mdsip in gdb as both threads client and server are in one process.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1468,2018-11-22T13:30:50Z,2019-01-03T12:24:33Z,2019-01-03T12:24:33Z,CLOSED,False,2107,2273,45,https://github.com/zack-vii,Refactor Thick Client; support as if distributed,53,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1468,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1468#issuecomment-445625497,"Do CTX_PUSH and CTX_POP dbid in c.
*memory fix for TreeGetDatafileSize
*TreeCleanDatafile can auto close tree before compressing: should it reopen after?
*provides _TdiExecute(void**dbid,...) -> TdiExecute(...) generically for all Tdi functions
*provides _mdsdcl_do_command_dsc(void**dbid,...) -> mdsdcl_do_command_dsc
*eliminates tree._TreeCtx in python api
*lock/unlock and free cleanup in treeshr/RemoteAccess.c
*added python device do test-dev-py.tdi","If this succeeds it need some testing of it working together with old-version servers and old-version clients.
this will possibly be replaced by a new pr.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1469,2018-11-22T13:38:53Z,2018-11-27T18:40:28Z,2019-11-25T10:21:48Z,MERGED,True,13351,138,21,https://github.com/GabrieleManduchi,Gm ni6683 device,33,[],https://github.com/MDSplus/mdsplus/pull/1469,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1469,"New Devices for ITER Time management
NI6683: National Instruments NI6683 IEEE1588 timing board
NI6259EV: NAtional Instrument ADC 6259 with asynchronous triggers driven by MDSplus events
SOFT_TRIGGER software device for timing event generation","New Devices for ITER Time management
NI6683: National Instruments NI6683 IEEE1588 timing board
NI6259EV: NAtional Instrument ADC 6259 with asynchronous triggers driven by MDSplus events
SOFT_TRIGGER software device for timing event generation",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1469,2018-11-22T13:38:53Z,2018-11-27T18:40:28Z,2019-11-25T10:21:48Z,MERGED,True,13351,138,21,https://github.com/GabrieleManduchi,Gm ni6683 device,33,[],https://github.com/MDSplus/mdsplus/pull/1469,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1469#issuecomment-442110747,"New Devices for ITER Time management
NI6683: National Instruments NI6683 IEEE1588 timing board
NI6259EV: NAtional Instrument ADC 6259 with asynchronous triggers driven by MDSplus events
SOFT_TRIGGER software device for timing event generation",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1469,2018-11-22T13:38:53Z,2018-11-27T18:40:28Z,2019-11-25T10:21:48Z,MERGED,True,13351,138,21,https://github.com/GabrieleManduchi,Gm ni6683 device,33,[],https://github.com/MDSplus/mdsplus/pull/1469,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1469#issuecomment-442114503,"New Devices for ITER Time management
NI6683: National Instruments NI6683 IEEE1588 timing board
NI6259EV: NAtional Instrument ADC 6259 with asynchronous triggers driven by MDSplus events
SOFT_TRIGGER software device for timing event generation",You forgot to update expected package contents again.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1469,2018-11-22T13:38:53Z,2018-11-27T18:40:28Z,2019-11-25T10:21:48Z,MERGED,True,13351,138,21,https://github.com/GabrieleManduchi,Gm ni6683 device,33,[],https://github.com/MDSplus/mdsplus/pull/1469,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1469#issuecomment-442118962,"New Devices for ITER Time management
NI6683: National Instruments NI6683 IEEE1588 timing board
NI6259EV: NAtional Instrument ADC 6259 with asynchronous triggers driven by MDSplus events
SOFT_TRIGGER software device for timing event generation",Acc....I will do it soon,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1470,2018-11-27T13:48:02Z,2018-11-27T15:59:50Z,2018-11-27T15:59:50Z,MERGED,True,473,470,6,https://github.com/tfredian,Twf tdi fixes,2,[],https://github.com/MDSplus/mdsplus/pull/1470,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1470,This fixes some sanitize errors and compiler warnings on fc28 builds.,This fixes some sanitize errors and compiler warnings on fc28 builds.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1470,2018-11-27T13:48:02Z,2018-11-27T15:59:50Z,2018-11-27T15:59:50Z,MERGED,True,473,470,6,https://github.com/tfredian,Twf tdi fixes,2,[],https://github.com/MDSplus/mdsplus/pull/1470,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1470#issuecomment-442081662,This fixes some sanitize errors and compiler warnings on fc28 builds.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1471,2018-11-27T15:03:23Z,2018-11-27T15:59:18Z,2018-11-27T15:59:18Z,MERGED,True,473,470,6,https://github.com/tfredian,Twf fix tdi stable,2,[],https://github.com/MDSplus/mdsplus/pull/1471,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1471,Fix: repairs for compiler warnings and array handling with coeff flag set.,Fix: repairs for compiler warnings and array handling with coeff flag set.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1472,2018-12-01T00:40:21Z,2018-12-05T12:24:05Z,2018-12-05T12:24:09Z,MERGED,True,528,227,29,https://github.com/zack-vii,Zck new mdsip thread protocol and tests,18,[],https://github.com/MDSplus/mdsplus/pull/1472,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1472,"breakdown of #1468

TreeCleanDatafile close tree file before move
updated tests
added Thread Protocol","breakdown of #1468

TreeCleanDatafile close tree file before move
updated tests
added Thread Protocol",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1473,2018-12-01T02:51:15Z,2018-12-05T13:39:07Z,2018-12-05T13:39:10Z,MERGED,True,973,1320,55,https://github.com/zack-vii,"Zck treectx for tdi and tcl via _Tdi*(void** dbid, ...)",32,[],https://github.com/MDSplus/mdsplus/pull/1473,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1473,"Do CTX_PUSH and CTX_POP dbid in c.
provides _TdiExecute(void**dbid,...) -> TdiExecute(...) generically for all Tdi functions
provides _mdsdcl_do_command_dsc(void**dbid,...) -> mdsdcl_do_command_dsc
eliminates tree._TreeCtx in python api","Do CTX_PUSH and CTX_POP dbid in c.
provides _TdiExecute(void**dbid,...) -> TdiExecute(...) generically for all Tdi functions
provides _mdsdcl_do_command_dsc(void**dbid,...) -> mdsdcl_do_command_dsc
eliminates tree._TreeCtx in python api",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1473,2018-12-01T02:51:15Z,2018-12-05T13:39:07Z,2018-12-05T13:39:10Z,MERGED,True,973,1320,55,https://github.com/zack-vii,"Zck treectx for tdi and tcl via _Tdi*(void** dbid, ...)",32,[],https://github.com/MDSplus/mdsplus/pull/1473,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1473#issuecomment-444472603,"Do CTX_PUSH and CTX_POP dbid in c.
provides _TdiExecute(void**dbid,...) -> TdiExecute(...) generically for all Tdi functions
provides _mdsdcl_do_command_dsc(void**dbid,...) -> mdsdcl_do_command_dsc
eliminates tree._TreeCtx in python api",had to rebase manually because it included pr #1472 .,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1474,2018-12-03T20:02:59Z,2018-12-03T20:25:07Z,2018-12-04T15:49:39Z,MERGED,True,2,93,1,https://github.com/joshStillerman,Fix:  data length 2x the correct segment length,1,[],https://github.com/MDSplus/mdsplus/pull/1474,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1474,"Twice as many samples / segment were being read.
Removed extra device subclasses which now live in thier own files.","Twice as many samples / segment were being read.
Removed extra device subclasses which now live in thier own files.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1475,2018-12-04T16:51:46Z,2018-12-04T19:51:42Z,2018-12-04T19:52:11Z,MERGED,True,14,5,2,https://github.com/tfredian,Feature: enable importing of other modules in MDS_PYDEVICE_PATH  …,3,[],https://github.com/MDSplus/mdsplus/pull/1475,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1475,"The Device.importPyDeviceModule(name) class method is used to
import pydevice modules found in the MDS_PYDEVICE_PATH environment
variable. This originally only provided support for importing
name.py files. This adds the capability of importing packages
contained in the directory with that name.
This class method is case insensitive when searching for modules
with the specified name.
When a device implementation imports a module inside of a method
or imports a module which resides in a directory other than
the device module itself but inside the MDS_PYDEVICE_PATH
directory trees it should use the importPyDeviceModule() method
to import a module.
Once imported these modules are cached so future calls to
importPyDeviceModule() do not need to search the directory trees.
Similarly if a module is found but fails to import this failure
is also cached so subsequent attempts do not search for the module.
2b476d5","The Device.importPyDeviceModule(name) class method is used to
import pydevice modules found in the MDS_PYDEVICE_PATH environment
variable. This originally only provided support for importing
name.py files. This adds the capability of importing packages
contained in the directory with that name.
This class method is case insensitive when searching for modules
with the specified name.
When a device implementation imports a module inside of a method
or imports a module which resides in a directory other than
the device module itself but inside the MDS_PYDEVICE_PATH
directory trees it should use the importPyDeviceModule() method
to import a module.
Once imported these modules are cached so future calls to
importPyDeviceModule() do not need to search the directory trees.
Similarly if a module is found but fails to import this failure
is also cached so subsequent attempts do not search for the module.
2b476d5",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1476,2018-12-04T19:56:02Z,2018-12-04T21:56:57Z,2018-12-04T22:01:17Z,MERGED,True,2,2,1,https://github.com/joshStillerman,Fix: Use the new device module import method,1,[],https://github.com/MDSplus/mdsplus/pull/1476,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1476,"This device uses the D-Tacq supplied acq400_hapi module which
is included under HtsDevices.
The device superclass now has a method:
importPyDeviceModule
which can find this code even though it is not in PYTHONPATH
The imports become:
acq400_hapi=self.importPyDeviceModule('acq400_hapi')","This device uses the D-Tacq supplied acq400_hapi module which
is included under HtsDevices.
The device superclass now has a method:
importPyDeviceModule
which can find this code even though it is not in PYTHONPATH
The imports become:
acq400_hapi=self.importPyDeviceModule('acq400_hapi')",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1477,2018-12-11T18:57:31Z,2019-01-26T15:47:39Z,2019-01-26T15:47:39Z,CLOSED,False,1,0,1,https://github.com/tfredian,Build: Just a PR build test,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1477,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1477,DO NOT MERGE,DO NOT MERGE,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1477,2018-12-11T18:57:31Z,2019-01-26T15:47:39Z,2019-01-26T15:47:39Z,CLOSED,False,1,0,1,https://github.com/tfredian,Build: Just a PR build test,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1477,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1477#issuecomment-446330841,DO NOT MERGE,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1477,2018-12-11T18:57:31Z,2019-01-26T15:47:39Z,2019-01-26T15:47:39Z,CLOSED,False,1,0,1,https://github.com/tfredian,Build: Just a PR build test,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1477,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1477#issuecomment-446338844,DO NOT MERGE,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1477,2018-12-11T18:57:31Z,2019-01-26T15:47:39Z,2019-01-26T15:47:39Z,CLOSED,False,1,0,1,https://github.com/tfredian,Build: Just a PR build test,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1477,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1477#issuecomment-446339244,DO NOT MERGE,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1477,2018-12-11T18:57:31Z,2019-01-26T15:47:39Z,2019-01-26T15:47:39Z,CLOSED,False,1,0,1,https://github.com/tfredian,Build: Just a PR build test,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1477,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1477#issuecomment-446339757,DO NOT MERGE,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1479,2018-12-12T16:53:44Z,2018-12-12T18:53:16Z,2019-01-15T22:14:22Z,MERGED,True,19,18,2,https://github.com/zack-vii,Fix: dont encourage the use of MdsEND_ARG,1,[],https://github.com/MDSplus/mdsplus/pull/1479,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1479,makes python more version independent and reduces the usage of MdsEND_ARG,makes python more version independent and reduces the usage of MdsEND_ARG,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1479,2018-12-12T16:53:44Z,2018-12-12T18:53:16Z,2019-01-15T22:14:22Z,MERGED,True,19,18,2,https://github.com/zack-vii,Fix: dont encourage the use of MdsEND_ARG,1,[],https://github.com/MDSplus/mdsplus/pull/1479,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1479#issuecomment-446665745,makes python more version independent and reduces the usage of MdsEND_ARG,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1480,2018-12-12T19:04:00Z,2018-12-12T19:27:57Z,2018-12-12T19:28:03Z,MERGED,True,6,2,1,https://github.com/zack-vii,"Fix: EmptyData instance in dtypeToClass broke help(""MDSplus"")",1,[],https://github.com/MDSplus/mdsplus/pull/1480,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1480,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1481,2018-12-12T19:48:13Z,2018-12-16T12:52:00Z,2018-12-16T12:52:07Z,MERGED,True,161,72,15,https://github.com/tfredian,Feature: py3 install and verify python and library compatibility,3,[],https://github.com/MDSplus/mdsplus/pull/1481,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1481,"This change will add the installation of the MDSplus python
module in python3 if it is available on redhat and debian platforms.
It also adds a version check when importing the MDSplus python
module into python. The MDSplus python modue will now check
the version of the installed libraries using the MDSplusVersion
structure now exported by the MdsShr library and compare that
with the version information stored in the _version.py module
included with the MDSplus python installer. If a user is running
the MDSplus python module in a virtual environment and the
MDSplus libraries are updated the user will get a warning when
importing the MDSplus module. It will be up to the user to
update the python module from the mdsplus/mdsobjects/python directory
of the installation directory.","This change will add the installation of the MDSplus python
module in python3 if it is available on redhat and debian platforms.
It also adds a version check when importing the MDSplus python
module into python. The MDSplus python modue will now check
the version of the installed libraries using the MDSplusVersion
structure now exported by the MdsShr library and compare that
with the version information stored in the _version.py module
included with the MDSplus python installer. If a user is running
the MDSplus python module in a virtual environment and the
MDSplus libraries are updated the user will get a warning when
importing the MDSplus module. It will be up to the user to
update the python module from the mdsplus/mdsobjects/python directory
of the installation directory.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1481,2018-12-12T19:48:13Z,2018-12-16T12:52:00Z,2018-12-16T12:52:07Z,MERGED,True,161,72,15,https://github.com/tfredian,Feature: py3 install and verify python and library compatibility,3,[],https://github.com/MDSplus/mdsplus/pull/1481,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1481#issuecomment-446732284,"This change will add the installation of the MDSplus python
module in python3 if it is available on redhat and debian platforms.
It also adds a version check when importing the MDSplus python
module into python. The MDSplus python modue will now check
the version of the installed libraries using the MDSplusVersion
structure now exported by the MdsShr library and compare that
with the version information stored in the _version.py module
included with the MDSplus python installer. If a user is running
the MDSplus python module in a virtual environment and the
MDSplus libraries are updated the user will get a warning when
importing the MDSplus module. It will be up to the user to
update the python module from the mdsplus/mdsobjects/python directory
of the installation directory.",Fixes: #1478,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1481,2018-12-12T19:48:13Z,2018-12-16T12:52:00Z,2018-12-16T12:52:07Z,MERGED,True,161,72,15,https://github.com/tfredian,Feature: py3 install and verify python and library compatibility,3,[],https://github.com/MDSplus/mdsplus/pull/1481,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1481#issuecomment-446733020,"This change will add the installation of the MDSplus python
module in python3 if it is available on redhat and debian platforms.
It also adds a version check when importing the MDSplus python
module into python. The MDSplus python modue will now check
the version of the installed libraries using the MDSplusVersion
structure now exported by the MdsShr library and compare that
with the version information stored in the _version.py module
included with the MDSplus python installer. If a user is running
the MDSplus python module in a virtual environment and the
MDSplus libraries are updated the user will get a warning when
importing the MDSplus module. It will be up to the user to
update the python module from the mdsplus/mdsobjects/python directory
of the installation directory.","This should produce the following:
[root@fc28 yum.repos.d]# python
Python 2.7.15 (default, Oct 15 2018, 15:24:06) 
[GCC 8.1.1 20180712 (Red Hat 8.1.1-5)] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import MDSplus
Warning: 
  The MDSplus python module version (7.59.2) does not match
  the version of the installed MDSplus libraries (7.59.3).
  Upgrade the module using the mdsplus/mdsobjects/python directory of the
  MDSplus installation.

>>> exit()
[root@fc28 yum.repos.d]# pip install /usr/local/mdsplus/mdsobjects/python --upgrade
WARNING: Running pip install with root privileges is generally not a good idea. Try `pip install --user` instead.
Processing /usr/local/mdsplus/mdsobjects/python
Installing collected packages: mdsplus-alpha
  Found existing installation: mdsplus-alpha 7.59.3
    Uninstalling mdsplus-alpha-7.59.3:
      Successfully uninstalled mdsplus-alpha-7.59.3
  Running setup.py install for mdsplus-alpha ... done
Successfully installed mdsplus-alpha-7.59.3
[root@fc28 yum.repos.d]# python
Python 2.7.15 (default, Oct 15 2018, 15:24:06) 
[GCC 8.1.1 20180712 (Red Hat 8.1.1-5)] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import MDSplus
>>>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1482,2018-12-12T23:11:25Z,2018-12-16T12:32:28Z,2018-12-16T12:34:54Z,MERGED,True,66,52,4,https://github.com/zack-vii,Fix: tdicontext not restored for mdsip connection,3,[],https://github.com/MDSplus/mdsplus/pull/1482,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1482,"added test and fixed the tdicontext handling..
TODO: test it when GetContextSwitching() returns true","added test and fixed the tdicontext handling..
TODO: test it when GetContextSwitching() returns true",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1483,2018-12-13T14:20:28Z,2018-12-18T17:11:20Z,2019-11-25T10:21:48Z,MERGED,True,31,7,1,https://github.com/joshStillerman,Fix: add a knob to rate limit cryocon daq,1,[],https://github.com/MDSplus/mdsplus/pull/1483,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1483,"The Cryocon18i gets unhappy if you talk to it too fast.  This
commit adds a new knob which sets the rate in Hz for streaming
DAQ","The Cryocon18i gets unhappy if you talk to it too fast.  This
commit adds a new knob which sets the rate in Hz for streaming
DAQ",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1486,2018-12-14T16:22:28Z,2018-12-19T21:09:53Z,2019-11-25T10:21:49Z,MERGED,True,6,2,1,https://github.com/GabrieleManduchi,Fix:jScope exceptions,1,[],https://github.com/MDSplus/mdsplus/pull/1486,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1486,Removed some sources of java exceptions in jScope,Removed some sources of java exceptions in jScope,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1486,2018-12-14T16:22:28Z,2018-12-19T21:09:53Z,2019-11-25T10:21:49Z,MERGED,True,6,2,1,https://github.com/GabrieleManduchi,Fix:jScope exceptions,1,[],https://github.com/MDSplus/mdsplus/pull/1486,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1486#issuecomment-447387660,Removed some sources of java exceptions in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1486,2018-12-14T16:22:28Z,2018-12-19T21:09:53Z,2019-11-25T10:21:49Z,MERGED,True,6,2,1,https://github.com/GabrieleManduchi,Fix:jScope exceptions,1,[],https://github.com/MDSplus/mdsplus/pull/1486,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1486#issuecomment-447777469,Removed some sources of java exceptions in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1486,2018-12-14T16:22:28Z,2018-12-19T21:09:53Z,2019-11-25T10:21:49Z,MERGED,True,6,2,1,https://github.com/GabrieleManduchi,Fix:jScope exceptions,1,[],https://github.com/MDSplus/mdsplus/pull/1486,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1486#issuecomment-447974899,Removed some sources of java exceptions in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1488,2018-12-17T19:58:34Z,2018-12-19T19:35:13Z,2018-12-19T20:20:57Z,MERGED,True,58,61,8,https://github.com/tfredian,Fix: include _version.py modules in module used for tests,9,[],https://github.com/MDSplus/mdsplus/pull/1488,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1488,"The tests were using the source directory tree for the MDSplus
module during tests which did not include the _version.py module
identifying the version of the python module. This fix changes
the tests to use the buildroot copy of the python module which
does contain the version info.
This also cleans up the install target in the top Makefile.in when
copying the _version.py files from the build directory to the
target root.","The tests were using the source directory tree for the MDSplus
module during tests which did not include the _version.py module
identifying the version of the python module. This fix changes
the tests to use the buildroot copy of the python module which
does contain the version info.
This also cleans up the install target in the top Makefile.in when
copying the _version.py files from the build directory to the
target root.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1488,2018-12-17T19:58:34Z,2018-12-19T19:35:13Z,2018-12-19T20:20:57Z,MERGED,True,58,61,8,https://github.com/tfredian,Fix: include _version.py modules in module used for tests,9,[],https://github.com/MDSplus/mdsplus/pull/1488,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1488#issuecomment-448013316,"The tests were using the source directory tree for the MDSplus
module during tests which did not include the _version.py module
identifying the version of the python module. This fix changes
the tests to use the buildroot copy of the python module which
does contain the version info.
This also cleans up the install target in the top Makefile.in when
copying the _version.py files from the build directory to the
target root.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1489,2018-12-18T01:26:53Z,2018-12-18T13:44:59Z,2018-12-19T10:41:17Z,CLOSED,False,23,44,2,https://github.com/zack-vii,Fix: no need for extra module and only print if properly installed an…,1,[],https://github.com/MDSplus/mdsplus/pull/1489,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1489,…yway,…yway,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1489,2018-12-18T01:26:53Z,2018-12-18T13:44:59Z,2018-12-19T10:41:17Z,CLOSED,False,23,44,2,https://github.com/zack-vii,Fix: no need for extra module and only print if properly installed an…,1,[],https://github.com/MDSplus/mdsplus/pull/1489,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1489#issuecomment-448225510,…yway,"This defeats one of the main causes of mismatched versions. Some users are fetching the MDSplus sources to get the MDSplus python module code and installing the module from sources using tools like pip and then having problems because the current sources don't match the version of the MDSplus libraries were installed on their system. This would disable the warning in this case which is precisely where the warning is needed. Also since you removed the extra version_check.py module the packaging content checking for the python installer would need to be modified. I am closing this PR now and will continue trying to enable the checking for all cases including the ""make tests"" operation during builds.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1490,2018-12-27T20:49:00Z,2019-01-03T12:25:00Z,2019-01-03T12:25:07Z,CLOSED,False,2,2,1,https://github.com/joshStillerman,Fix: Use MDS_END_ARG in MdsLibIdl Treeshr calls,3,[],https://github.com/MDSplus/mdsplus/pull/1490,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1490,"The change from MDS_END_ARG=0 to MDS_END_ARG=1 made the non standard
(non macro) use of 0 to terminate argument lists wrong.
This caused MdsOpen, 'tree', shot  to segfault on some platforms.
Changed calls to TreeOpen and TreeClose to use the MDS_END_ARG macro","The change from MDS_END_ARG=0 to MDS_END_ARG=1 made the non standard
(non macro) use of 0 to terminate argument lists wrong.
This caused MdsOpen, 'tree', shot  to segfault on some platforms.
Changed calls to TreeOpen and TreeClose to use the MDS_END_ARG macro",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1490,2018-12-27T20:49:00Z,2019-01-03T12:25:00Z,2019-01-03T12:25:07Z,CLOSED,False,2,2,1,https://github.com/joshStillerman,Fix: Use MDS_END_ARG in MdsLibIdl Treeshr calls,3,[],https://github.com/MDSplus/mdsplus/pull/1490,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1490#issuecomment-450853905,"The change from MDS_END_ARG=0 to MDS_END_ARG=1 made the non standard
(non macro) use of 0 to terminate argument lists wrong.
This caused MdsOpen, 'tree', shot  to segfault on some platforms.
Changed calls to TreeOpen and TreeClose to use the MDS_END_ARG macro",in fact the change was from -1 to 1 and does not apply for TreeOpen as TreeOpen does not take and varargs input. the terminating 0 was the readonly flag. TreePutRecord does not take one either.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1490,2018-12-27T20:49:00Z,2019-01-03T12:25:00Z,2019-01-03T12:25:07Z,CLOSED,False,2,2,1,https://github.com/joshStillerman,Fix: Use MDS_END_ARG in MdsLibIdl Treeshr calls,3,[],https://github.com/MDSplus/mdsplus/pull/1490,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1490#issuecomment-450854702,"The change from MDS_END_ARG=0 to MDS_END_ARG=1 made the non standard
(non macro) use of 0 to terminate argument lists wrong.
This caused MdsOpen, 'tree', shot  to segfault on some platforms.
Changed calls to TreeOpen and TreeClose to use the MDS_END_ARG macro","@joshStillerman: Can you make a case where the issue occurs. Your fixes wont work, i.e. they break it even further (readonly=1, utility_update=1).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1490,2018-12-27T20:49:00Z,2019-01-03T12:25:00Z,2019-01-03T12:25:07Z,CLOSED,False,2,2,1,https://github.com/joshStillerman,Fix: Use MDS_END_ARG in MdsLibIdl Treeshr calls,3,[],https://github.com/MDSplus/mdsplus/pull/1490,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1490#issuecomment-450862511,"The change from MDS_END_ARG=0 to MDS_END_ARG=1 made the non standard
(non macro) use of 0 to terminate argument lists wrong.
This caused MdsOpen, 'tree', shot  to segfault on some platforms.
Changed calls to TreeOpen and TreeClose to use the MDS_END_ARG macro",In both cases the argument in question was the shot number. Perhaps the handling of the argv could be done better but this apparently had been working fine for a very long time.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1490,2018-12-27T20:49:00Z,2019-01-03T12:25:00Z,2019-01-03T12:25:07Z,CLOSED,False,2,2,1,https://github.com/joshStillerman,Fix: Use MDS_END_ARG in MdsLibIdl Treeshr calls,3,[],https://github.com/MDSplus/mdsplus/pull/1490,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1490#issuecomment-450863110,"The change from MDS_END_ARG=0 to MDS_END_ARG=1 made the non standard
(non macro) use of 0 to terminate argument lists wrong.
This caused MdsOpen, 'tree', shot  to segfault on some platforms.
Changed calls to TreeOpen and TreeClose to use the MDS_END_ARG macro","ah not the original change was. josh changed the trailing ', 0) ' into MDS_END_ARG), the cast of the shot number was my doing before i realized that TreePutRecord also takes no var args.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1491,2019-01-02T16:23:39Z,2019-01-02T18:39:00Z,2019-01-02T18:39:00Z,MERGED,True,7,4,1,https://github.com/tfredian,Fix: Repair thick client create pulse,1,[],https://github.com/MDSplus/mdsplus/pull/1491,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1491,"At some point the argument list of the tdi fun for
calling TreeShr->TreeCreatePulseFile were changed to
match the order of the arguments of the c library call. The
thick client implementation was still calling the tdi fun
with the old argument list order so doing a create pulse
of a tree with subtrees using thick client resulted in an error.
This change calls the TreeShr function directly instead of using
the tdi fun which should be more efficient and has the correct
argument order.","At some point the argument list of the tdi fun for
calling TreeShr->TreeCreatePulseFile were changed to
match the order of the arguments of the c library call. The
thick client implementation was still calling the tdi fun
with the old argument list order so doing a create pulse
of a tree with subtrees using thick client resulted in an error.
This change calls the TreeShr function directly instead of using
the tdi fun which should be more efficient and has the correct
argument order.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1492,2019-01-03T12:34:58Z,2019-01-03T16:48:30Z,2019-01-03T16:48:30Z,MERGED,True,2117,2276,45,https://github.com/zack-vii,Refactor Thick Client; support as if distributed,55,[],https://github.com/MDSplus/mdsplus/pull/1492,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1492,"cleanup of old RemoteAccess stuff, e.g. FDS, SRB, hostfile_lock, io_lock
MDS_IO_xxx cleanup, streamlined
RemoteAccess make use of $ and new MdsValue
client server version check to determine supported functionality
MDS_IO_OPEN_ONE will find treefile path with ""jumphost"" server chain
MDS_IO_OPEN_ONE can be used to create and delete tree files
fixed tcl dispatch/command/wait to properly cleanup and free Job
clobbered and cleanup","cleanup of old RemoteAccess stuff, e.g. FDS, SRB, hostfile_lock, io_lock
MDS_IO_xxx cleanup, streamlined
RemoteAccess make use of $ and new MdsValue
client server version check to determine supported functionality
MDS_IO_OPEN_ONE will find treefile path with ""jumphost"" server chain
MDS_IO_OPEN_ONE can be used to create and delete tree files
fixed tcl dispatch/command/wait to properly cleanup and free Job
clobbered and cleanup",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1492,2019-01-03T12:34:58Z,2019-01-03T16:48:30Z,2019-01-03T16:48:30Z,MERGED,True,2117,2276,45,https://github.com/zack-vii,Refactor Thick Client; support as if distributed,55,[],https://github.com/MDSplus/mdsplus/pull/1492,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1492#issuecomment-451143932,"cleanup of old RemoteAccess stuff, e.g. FDS, SRB, hostfile_lock, io_lock
MDS_IO_xxx cleanup, streamlined
RemoteAccess make use of $ and new MdsValue
client server version check to determine supported functionality
MDS_IO_OPEN_ONE will find treefile path with ""jumphost"" server chain
MDS_IO_OPEN_ONE can be used to create and delete tree files
fixed tcl dispatch/command/wait to properly cleanup and free Job
clobbered and cleanup",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1495,2019-01-04T17:43:55Z,2019-01-08T16:27:21Z,2019-11-25T10:21:49Z,MERGED,True,27,24,1,https://github.com/joshStillerman,Fix: Trend method must do each channel separately,2,[],https://github.com/MDSplus/mdsplus/pull/1495,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1495,"Like the Stream method, the device can only read on pair
temperature and resistance at a time
Capitalized trend method not defined
added TREND=trend","Like the Stream method, the device can only read on pair
temperature and resistance at a time
Capitalized trend method not defined
added TREND=trend",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1496,2019-01-05T13:24:22Z,2019-01-05T17:26:34Z,2019-01-05T17:26:34Z,MERGED,True,12,12,6,https://github.com/zack-vii,fixes io_reusecheck and javatraverser2,4,[],https://github.com/MDSplus/mdsplus/pull/1496,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1496,TODO: javatraverser2 should not use MdsEND_ARG,TODO: javatraverser2 should not use MdsEND_ARG,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1496,2019-01-05T13:24:22Z,2019-01-05T17:26:34Z,2019-01-05T17:26:34Z,MERGED,True,12,12,6,https://github.com/zack-vii,fixes io_reusecheck and javatraverser2,4,[],https://github.com/MDSplus/mdsplus/pull/1496,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1496#issuecomment-451661853,TODO: javatraverser2 should not use MdsEND_ARG,"This fixes
#1494",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1497,2019-01-07T21:17:28Z,2019-01-07T22:13:46Z,2019-01-07T22:13:55Z,MERGED,True,36,11,1,https://github.com/tfredian,Twf add deb previous repo,2,[],https://github.com/MDSplus/mdsplus/pull/1497,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1497,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1498,2019-01-08T23:55:08Z,2019-01-23T18:54:49Z,2019-03-22T16:05:31Z,CLOSED,False,12,22,4,https://github.com/zack-vii,zack.vii playground,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1498,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1498,"length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test","length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1498,2019-01-08T23:55:08Z,2019-01-23T18:54:49Z,2019-03-22T16:05:31Z,CLOSED,False,12,22,4,https://github.com/zack-vii,zack.vii playground,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1498,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1498#issuecomment-452701338,"length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test","I don't understand why you added back the old MDSDEVICES.fun which was replaced by MDSDEVICES.py which has more features. I don't recall whether tdi looks for py funs before tdi funs but we certainly don't need both since only one would be invoked. Perhaps this was unintentional?
In the future I would recommend breaking up pull requests like this into smaller ones. It is difficult to review PR's with 60 files being changed particularly if the changes include a variety of unrelated fixes and/or enhancements and include more descriptive comments in the commits.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1498,2019-01-08T23:55:08Z,2019-01-23T18:54:49Z,2019-03-22T16:05:31Z,CLOSED,False,12,22,4,https://github.com/zack-vii,zack.vii playground,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1498,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1498#issuecomment-452712949,"length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test","Yes i agree well my intend was to introduce the opcode_t and while i was doing it i stumbled upon these other issues.. i will break it up once i am satisfied.
I added the tdi fun back in as it is used by shared lib devices (the once that have their methods written in c.)
I changed the code to try tdi if it found the .py file but could not load it (no python). This way you still can add those devices without python",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1498,2019-01-08T23:55:08Z,2019-01-23T18:54:49Z,2019-03-22T16:05:31Z,CLOSED,False,12,22,4,https://github.com/zack-vii,zack.vii playground,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1498,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1498#issuecomment-452717625,"length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test","I'm not sure we need to worry about things not working if no python is available. As we implement more fun's in python it is questionable whether we spend much effort implementing workarounds for systems which don't have python or don't have the MDSplus module installed, especially the old c based device types since they are mostly only usable on linux systems which should have python and the MDSplus module installed automatically.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1498,2019-01-08T23:55:08Z,2019-01-23T18:54:49Z,2019-03-22T16:05:31Z,CLOSED,False,12,22,4,https://github.com/zack-vii,zack.vii playground,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1498,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1498#issuecomment-452721715,"length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test",In addition the mdsplus and the mdsplus-mitdevices packages require python and mdsplus-python packages to be installed. The platforms that don't support camshr (such as windows and osx) don't include things like mitdevices anyway which is the only package now that includes c based devices.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1498,2019-01-08T23:55:08Z,2019-01-23T18:54:49Z,2019-03-22T16:05:31Z,CLOSED,False,12,22,4,https://github.com/zack-vii,zack.vii playground,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1498,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1498#issuecomment-452722783,"length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test",ok well i stumbled uppon it while i tried to get teh tditest treeshr test working for all platforms.. since some of them dont have python and well in the end i had to give up on it because of windows,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1498,2019-01-08T23:55:08Z,2019-01-23T18:54:49Z,2019-03-22T16:05:31Z,CLOSED,False,12,22,4,https://github.com/zack-vii,zack.vii playground,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1498,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1498#issuecomment-452726993,"length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test","Perhaps we might think about making some of the test suites platform specific. Could be that tditest is the only one causing problems. We could add an argument to the script which could be platform (redhat, debian, windows, macosx, alpine, etc..) and invoke test-[name]-[platform].tdi and compare to test-[name]-[platform].ans if the corresponding tdi file exists.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1498,2019-01-08T23:55:08Z,2019-01-23T18:54:49Z,2019-03-22T16:05:31Z,CLOSED,False,12,22,4,https://github.com/zack-vii,zack.vii playground,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1498,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1498#issuecomment-452727891,"length of integer to str conversion inconsistent
tcl(""dir/full"") failed with tdi devices
c/lib devices wont work without python
running python code without python caused sigsegv
added lib-device and tdi-device add-test to tditest treeshr test",not a bad idea.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1499,2019-01-11T20:04:22Z,2019-01-14T13:15:38Z,2019-01-15T22:13:44Z,MERGED,True,602,529,12,https://github.com/zack-vii,Misc fixes,9,[],https://github.com/MDSplus/mdsplus/pull/1499,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1499,"Fix: clobbered stat1 in TdiIntrinsic
Fix: use TdiREF_CAT for decompile and tighten digits of integers (4,6,11,20,40)
Fix: fix TreeDoMethod SIGSEGV on tdi devices due to image==NULL
Fix: code more of _TreeAddConglom in c; no need for DevAddDevice.fun
Fix: sigsegv in TdiExtPython if no python lib
Fix: try tdi alternative if loading python version failed
Fix: DESCRIPTOR_FROM_CSTRING() should be terminated by ;
Fix: tdi device do method
Fix: missing free in joerger_cg__add","Fix: clobbered stat1 in TdiIntrinsic
Fix: use TdiREF_CAT for decompile and tighten digits of integers (4,6,11,20,40)
Fix: fix TreeDoMethod SIGSEGV on tdi devices due to image==NULL
Fix: code more of _TreeAddConglom in c; no need for DevAddDevice.fun
Fix: sigsegv in TdiExtPython if no python lib
Fix: try tdi alternative if loading python version failed
Fix: DESCRIPTOR_FROM_CSTRING() should be terminated by ;
Fix: tdi device do method
Fix: missing free in joerger_cg__add",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1500,2019-01-11T21:50:43Z,2019-01-14T13:14:37Z,2019-01-14T13:14:37Z,MERGED,True,1401,1495,34,https://github.com/zack-vii,introduce typedefs where applicable,16,[],https://github.com/MDSplus/mdsplus/pull/1500,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1500,"This introduces typedefinitions that will allow compile time checks of consistency with arguments and field also this will improve readability of gdb prints
extends #1499","This introduces typedefinitions that will allow compile time checks of consistency with arguments and field also this will improve readability of gdb prints
extends #1499",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1501,2019-01-14T14:27:45Z,2019-02-07T18:34:40Z,2019-02-07T18:34:40Z,CLOSED,False,89,1,6,https://github.com/tfredian,"Feature: Add ""code in"" pydevice support",2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1501,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1501,"This enables the feature to develop pydevices in which the device
methods are stored in the tree. The only time the python module file
is referenced is to add the device to an MDSplus tree. From that point
on the methods executed on the device are implemented in code living
in the trees datafile.","This enables the feature to develop pydevices in which the device
methods are stored in the tree. The only time the python module file
is referenced is to add the device to an MDSplus tree. From that point
on the methods executed on the device are implemented in code living
in the trees datafile.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1501,2019-01-14T14:27:45Z,2019-02-07T18:34:40Z,2019-02-07T18:34:40Z,CLOSED,False,89,1,6,https://github.com/tfredian,"Feature: Add ""code in"" pydevice support",2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1501,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1501#issuecomment-454025885,"This enables the feature to develop pydevices in which the device
methods are stored in the tree. The only time the python module file
is referenced is to add the device to an MDSplus tree. From that point
on the methods executed on the device are implemented in code living
in the trees datafile.","There are many potential problems with the use of this feature so we should have some discussions as to whether it is a feasible long term solution. Some things to consider:

What if the python code used in the device implementation now stored in the tree becomes obsolete or some fixes or enhancements in the python to MDSplus abi break the the device methods or static functions stored in the tree. Do we need some kind of update capabilities and how might they be managed?
Do we need some way to cache the device code associated with the nid to avoid rereading and compiling the python code stored with the device instance in the tree?
Should we provide a devfun() tdi function to enable the use of a function implemented in the code in the tree instance? i.e. devfun(mydevice,'fun_name',args...) so that the device could store an expression which used a function stored in the device instance.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1501,2019-01-14T14:27:45Z,2019-02-07T18:34:40Z,2019-02-07T18:34:40Z,CLOSED,False,89,1,6,https://github.com/tfredian,"Feature: Add ""code in"" pydevice support",2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1501,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1501#issuecomment-454039558,"This enables the feature to develop pydevices in which the device
methods are stored in the tree. The only time the python module file
is referenced is to add the device to an MDSplus tree. From that point
on the methods executed on the device are implemented in code living
in the trees datafile.",PR test failed apparently due to some py3 compatibility issues. I'll explore.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1501,2019-01-14T14:27:45Z,2019-02-07T18:34:40Z,2019-02-07T18:34:40Z,CLOSED,False,89,1,6,https://github.com/tfredian,"Feature: Add ""code in"" pydevice support",2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1501,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1501#issuecomment-460105966,"This enables the feature to develop pydevices in which the device
methods are stored in the tree. The only time the python module file
is referenced is to add the device to an MDSplus tree. From that point
on the methods executed on the device are implemented in code living
in the trees datafile.","Some comments to


No we dont. even if the device should either not play a role anymore as data would be acquired already and if the data is required for reading the data and may break although we intend to keep the api compatible it was bad by design or can easily be fixed by writing the content f the new version into the device node. depending on how we want to store the data i would suggest as argument of the conglum object that is stored in the head node.


managing the caching we could define a either nid to name or device name to name convention and ""import"" the code as module. a second load would simply check for the module first and only load if it is not available. Overhead would be comparable.. alternatively on could hash the source on store and use that hash for module name. we would store that hash along in the device node and would be able to only load the driver once for multiple copies in the tree or even different trees of the same session.


for this we should reuse TreeDoMethod and let the internal code decide how to load the source. but as i said the method should not do any hacks so it will work as long as methods work in general, other than that: anything that can be expressed as tdi expressions with preferably build ins should be stored in the respective node as expression. Complex, otherwise external tdi.fun however, would qualify for this solution.


:: all in all before we add features i think we should start with a simple how to read the source from the tree. I would not make it devices specific but optional for any python device. merely the read method getDevice would have to be able to understand the difference. I will work on an implementations some time this week. depending on if the final waves are ok.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1501,2019-01-14T14:27:45Z,2019-02-07T18:34:40Z,2019-02-07T18:34:40Z,CLOSED,False,89,1,6,https://github.com/tfredian,"Feature: Add ""code in"" pydevice support",2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1501,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1501#issuecomment-461544920,"This enables the feature to develop pydevices in which the device
methods are stored in the tree. The only time the python module file
is referenced is to add the device to an MDSplus tree. From that point
on the methods executed on the device are implemented in code living
in the trees datafile.",replaced by #1544,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1502,2019-01-14T19:13:37Z,2019-02-04T16:15:42Z,2019-02-04T16:15:45Z,MERGED,True,99,222,29,https://github.com/zack-vii,wave12: some more enum typedefs ,2,[],https://github.com/MDSplus/mdsplus/pull/1502,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1502,"turn enums into packed typedef
use opcode_t, dtype_t, class_tm, etc. when desired and fix switch statements.","turn enums into packed typedef
use opcode_t, dtype_t, class_tm, etc. when desired and fix switch statements.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1503,2019-01-15T16:20:13Z,2019-01-15T17:03:25Z,2019-01-15T17:03:25Z,CLOSED,False,19,1,1,https://github.com/tfredian,Fix: Allow hops with tunnel protocol,2,[],https://github.com/MDSplus/mdsplus/pull/1503,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1503,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1504,2019-01-15T18:03:07Z,2019-01-15T20:29:32Z,2019-01-15T20:32:52Z,MERGED,True,98,85,8,https://github.com/zack-vii,Zck io tunnel cleanup,6,[],https://github.com/MDSplus/mdsplus/pull/1504,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1504,"allows hopping tunnel connections and cleanup of all descendants

setenv('test_path=ssh://localhost::ssh://localhost::')
treefilename(""test"")
""ssh://localhost::ssh://localhost::/tmp/test_model.tree""","allows hopping tunnel connections and cleanup of all descendants

setenv('test_path=ssh://localhost::ssh://localhost::')
treefilename(""test"")
""ssh://localhost::ssh://localhost::/tmp/test_model.tree""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1505,2019-01-15T20:33:36Z,2019-01-15T22:10:55Z,2019-01-15T22:10:58Z,MERGED,True,50,38,3,https://github.com/zack-vii,Fix: rar race on IOS in tcl_dispatch,2,[],https://github.com/MDSplus/mdsplus/pull/1505,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1505,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1507,2019-01-16T15:39:58Z,2019-01-16T16:42:52Z,2019-01-16T16:53:04Z,MERGED,True,17,20,5,https://github.com/zack-vii,Zck maxloc,3,[],https://github.com/MDSplus/mdsplus/pull/1507,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1507,Fix: fixes #1506,Fix: fixes #1506,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1507,2019-01-16T15:39:58Z,2019-01-16T16:42:52Z,2019-01-16T16:53:04Z,MERGED,True,17,20,5,https://github.com/zack-vii,Zck maxloc,3,[],https://github.com/MDSplus/mdsplus/pull/1507,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1507#issuecomment-454834358,Fix: fixes #1506,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1508,2019-01-16T15:45:18Z,2019-01-16T20:28:47Z,2019-01-16T21:30:33Z,MERGED,True,18,21,6,https://github.com/zack-vii,Zck maxloc stable,4,[],https://github.com/MDSplus/mdsplus/pull/1508,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1508,fixes #1506 in stable,fixes #1506 in stable,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1508,2019-01-16T15:45:18Z,2019-01-16T20:28:47Z,2019-01-16T21:30:33Z,MERGED,True,18,21,6,https://github.com/zack-vii,Zck maxloc stable,4,[],https://github.com/MDSplus/mdsplus/pull/1508,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1508#issuecomment-454849346,fixes #1506 in stable,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1510,2019-01-16T21:32:29Z,2019-01-22T12:56:56Z,2019-03-22T16:05:42Z,MERGED,True,28,21,2,https://github.com/zack-vii,Zck tdiio,2,[],https://github.com/MDSplus/mdsplus/pull/1510,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1510,"allows stdin stdout,stderr to be specified directly on tdi read and write.
fopen now returns a pointer","allows stdin stdout,stderr to be specified directly on tdi read and write.
fopen now returns a pointer",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1512,2019-01-17T19:08:15Z,2019-01-17T19:11:52Z,2019-01-17T19:11:53Z,MERGED,True,2,0,1,https://github.com/santorofer,Build: The changes were in response to the issue described in here:,1,[],https://github.com/MDSplus/mdsplus/pull/1512,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1512,"#1487
The following line was added to the script:
. /usr/local/mdsplus/scripts/postinstall
This line is needed to invoke the either the /usr/local/mdsplus/setup.sh","#1487
The following line was added to the script:
. /usr/local/mdsplus/scripts/postinstall
This line is needed to invoke the either the /usr/local/mdsplus/setup.sh",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1512,2019-01-17T19:08:15Z,2019-01-17T19:11:52Z,2019-01-17T19:11:53Z,MERGED,True,2,0,1,https://github.com/santorofer,Build: The changes were in response to the issue described in here:,1,[],https://github.com/MDSplus/mdsplus/pull/1512,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1512#issuecomment-455292693,"#1487
The following line was added to the script:
. /usr/local/mdsplus/scripts/postinstall
This line is needed to invoke the either the /usr/local/mdsplus/setup.sh",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1515,2019-01-20T01:40:42Z,2019-01-22T07:55:48Z,2019-01-22T07:58:28Z,CLOSED,False,1684,1934,106,https://github.com/zack-vii,Zck getsegment trim,31,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1515,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1515,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1516,2019-01-20T02:06:08Z,2019-01-21T08:19:06Z,2019-03-22T16:05:40Z,MERGED,True,17,38,1,https://github.com/zack-vii,Fix: move lock into MdsIoRequest;TODO: make threadsafe Send/Receive,1,[],https://github.com/MDSplus/mdsplus/pull/1516,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1516,"this addresses issue #1514

We should add a test that faces the issue
we should secure the mdsip send and receive using msg id to protect remote io
otherwise different implementations would still interfere, e.g. python has its own lock","this addresses issue #1514

We should add a test that faces the issue
we should secure the mdsip send and receive using msg id to protect remote io
otherwise different implementations would still interfere, e.g. python has its own lock",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1517,2019-01-22T08:12:21Z,2019-02-04T16:42:54Z,2019-02-04T16:42:58Z,MERGED,True,892,983,16,https://github.com/zack-vii,wave13: fixes getsegment trim toward rows_filled; includes typedef,18,[],https://github.com/MDSplus/mdsplus/pull/1517,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1517,"added function _TreeSetRowsFilled which should replace the hacky NEXT_ROW_FIX environ impl
properly trim dimensions with treeref (_Execute) and/or windows definitions (lbound)
remove bad code and streamlined buffer to struct transfer using put/get-int methods
fixed WORDS_BIGENDIAN branch (compiling errors)
fixed all main code clobbered (no-more need for pragma ignored)
fixed stdout interference with mdsip protocol for Tunnel
added some tests

I browsed the code and made a lot of changes:
basically croping code and sticking it into inline statics where possible.
some minor usage of macros to handle the methods that convert between struct and buffer.
i added some helper functions to treeshrp.h inspired by java ByteBuffer.
The PR is base on #1502 which does not pass the test for some reason. It incorporates tyedefs that will help to debug and identify argument issues, missing cases in switch statements etc.","added function _TreeSetRowsFilled which should replace the hacky NEXT_ROW_FIX environ impl
properly trim dimensions with treeref (_Execute) and/or windows definitions (lbound)
remove bad code and streamlined buffer to struct transfer using put/get-int methods
fixed WORDS_BIGENDIAN branch (compiling errors)
fixed all main code clobbered (no-more need for pragma ignored)
fixed stdout interference with mdsip protocol for Tunnel
added some tests

I browsed the code and made a lot of changes:
basically croping code and sticking it into inline statics where possible.
some minor usage of macros to handle the methods that convert between struct and buffer.
i added some helper functions to treeshrp.h inspired by java ByteBuffer.
The PR is base on #1502 which does not pass the test for some reason. It incorporates tyedefs that will help to debug and identify argument issues, missing cases in switch statements etc.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1517,2019-01-22T08:12:21Z,2019-02-04T16:42:54Z,2019-02-04T16:42:58Z,MERGED,True,892,983,16,https://github.com/zack-vii,wave13: fixes getsegment trim toward rows_filled; includes typedef,18,[],https://github.com/MDSplus/mdsplus/pull/1517,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1517#issuecomment-456842079,"added function _TreeSetRowsFilled which should replace the hacky NEXT_ROW_FIX environ impl
properly trim dimensions with treeref (_Execute) and/or windows definitions (lbound)
remove bad code and streamlined buffer to struct transfer using put/get-int methods
fixed WORDS_BIGENDIAN branch (compiling errors)
fixed all main code clobbered (no-more need for pragma ignored)
fixed stdout interference with mdsip protocol for Tunnel
added some tests

I browsed the code and made a lot of changes:
basically croping code and sticking it into inline statics where possible.
some minor usage of macros to handle the methods that convert between struct and buffer.
i added some helper functions to treeshrp.h inspired by java ByteBuffer.
The PR is base on #1502 which does not pass the test for some reason. It incorporates tyedefs that will help to debug and identify argument issues, missing cases in switch statements etc.",partly in wave 1 #1520  and 2 #1522,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1520,2019-01-22T14:35:16Z,2019-01-22T15:24:52Z,2019-03-22T16:05:29Z,MERGED,True,59,53,8,https://github.com/zack-vii,zck fixed wave 1,6,[],https://github.com/MDSplus/mdsplus/pull/1520,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1520,"fixes Tunnel
fixes pragma clobbered
workover segmentsUnitTests
added rows_filld as optional arg to pyhton's makeSegment","fixes Tunnel
fixes pragma clobbered
workover segmentsUnitTests
added rows_filld as optional arg to pyhton's makeSegment",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1521,2019-01-22T18:43:56Z,2019-01-22T19:08:15Z,2019-01-22T19:08:15Z,MERGED,True,3,2,1,https://github.com/tfredian,Fix: compile clobber warning false positive,1,[],https://github.com/MDSplus/mdsplus/pull/1521,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1521,Invalid warning must be ignored.,Invalid warning must be ignored.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1522,2019-01-22T21:21:43Z,2019-01-23T14:10:13Z,2019-01-23T14:10:16Z,MERGED,True,343,293,14,https://github.com/zack-vii,Zck changes wave2,10,[],https://github.com/MDSplus/mdsplus/pull/1522,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1522,"fixes compiler hang; by moving lock;


possibly requires some care for clobbered now


test with compile(text(vms()))","fixes compiler hang; by moving lock;


possibly requires some care for clobbered now


test with compile(text(vms()))",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1524,2019-01-23T22:57:10Z,2019-01-28T18:04:12Z,2019-01-28T18:04:21Z,MERGED,True,2602,2616,28,https://github.com/zack-vii,Zck changes wave3,16,[],https://github.com/MDSplus/mdsplus/pull/1524,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1524,should fix the tree ref issue in python Compound's tree,should fix the tree ref issue in python Compound's tree,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1525,2019-01-26T15:22:44Z,2019-01-28T13:41:54Z,2019-01-28T13:41:54Z,MERGED,True,55,61,13,https://github.com/tfredian,Build: Avoid need to copy python to build dir,1,[],https://github.com/MDSplus/mdsplus/pull/1525,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1525,"The Makefiles were modified to copy all the python sources
into the build directory so the version checking of the python
modules would not break the tests if _version.py was not in the
python source directory tree. This causes problems with debugging
and testing changes to the python code in the source directory.
Instead this change adds an environment variable MDS_DIS_VCHECK
which can be used to disable the warning message done by the
version checking code which was causing test failures simply
because the output of the tests did not match expected output.","The Makefiles were modified to copy all the python sources
into the build directory so the version checking of the python
modules would not break the tests if _version.py was not in the
python source directory tree. This causes problems with debugging
and testing changes to the python code in the source directory.
Instead this change adds an environment variable MDS_DIS_VCHECK
which can be used to disable the warning message done by the
version checking code which was causing test failures simply
because the output of the tests did not match expected output.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1525,2019-01-26T15:22:44Z,2019-01-28T13:41:54Z,2019-01-28T13:41:54Z,MERGED,True,55,61,13,https://github.com/tfredian,Build: Avoid need to copy python to build dir,1,[],https://github.com/MDSplus/mdsplus/pull/1525,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1525#issuecomment-458126124,"The Makefiles were modified to copy all the python sources
into the build directory so the version checking of the python
modules would not break the tests if _version.py was not in the
python source directory tree. This causes problems with debugging
and testing changes to the python code in the source directory.
Instead this change adds an environment variable MDS_DIS_VCHECK
which can be used to disable the warning message done by the
version checking code which was causing test failures simply
because the output of the tests did not match expected output.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1526,2019-01-28T17:35:17Z,2019-01-28T18:51:34Z,2019-01-28T19:48:30Z,MERGED,True,1885,2012,59,https://github.com/zack-vii,Zck changes wave4: defs and exports,5,[],https://github.com/MDSplus/mdsplus/pull/1526,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1526,def files are required for windows libraries and it seems wine is glossing over the problem that some exported funtions are missing in the def files. this pr prepares teh sources for a script that autogenerates the def files from generated dlls,def files are required for windows libraries and it seems wine is glossing over the problem that some exported funtions are missing in the def files. this pr prepares teh sources for a script that autogenerates the def files from generated dlls,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1527,2019-01-28T19:50:41Z,2019-01-28T20:09:56Z,2019-01-28T20:13:47Z,MERGED,True,45,48,3,https://github.com/zack-vii,Zck changes wave5,3,[],https://github.com/MDSplus/mdsplus/pull/1527,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1527,fixes EXECUTE and COMPILE to have a static /tree and merged _TdiIntrinsic into Function.evaluate(),fixes EXECUTE and COMPILE to have a static /tree and merged _TdiIntrinsic into Function.evaluate(),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1528,2019-01-29T04:15:40Z,2019-01-29T19:54:43Z,2019-01-29T19:54:46Z,MERGED,True,336,484,8,https://github.com/zack-vii,Zck changes wave6,7,[],https://github.com/MDSplus/mdsplus/pull/1528,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1528,"benchmark:
import MDSplus.tests as t
import cProfile, pstats, StringIO
pr = cProfile.Profile()
pr.enable()
t.run()
pr.disable()
s = StringIO.StringIO()
sortby = 'tottime'
ps = pstats.Stats(pr, stream=s).sort_stats(sortby)
ps.print_stats()
out = s.getvalue()
print(out)
before:
Ran 40 tests in 230 something s
cumtime(_getNCI): 130.567
after:
Ran 40 tests in 98.527s
cumtime(_getNCI): 5.632","benchmark:
import MDSplus.tests as t
import cProfile, pstats, StringIO
pr = cProfile.Profile()
pr.enable()
t.run()
pr.disable()
s = StringIO.StringIO()
sortby = 'tottime'
ps = pstats.Stats(pr, stream=s).sort_stats(sortby)
ps.print_stats()
out = s.getvalue()
print(out)
before:
Ran 40 tests in 230 something s
cumtime(_getNCI): 130.567
after:
Ran 40 tests in 98.527s
cumtime(_getNCI): 5.632",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1529,2019-01-29T20:55:41Z,2019-01-29T22:40:38Z,2019-01-29T22:41:10Z,MERGED,True,51,11,2,https://github.com/zack-vii,Zck changes wave6b,2,[],https://github.com/MDSplus/mdsplus/pull/1529,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1529,added tests and _setDbi,added tests and _setDbi,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1529,2019-01-29T20:55:41Z,2019-01-29T22:40:38Z,2019-01-29T22:41:10Z,MERGED,True,51,11,2,https://github.com/zack-vii,Zck changes wave6b,2,[],https://github.com/MDSplus/mdsplus/pull/1529,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1529#issuecomment-458717669,added tests and _setDbi,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1530,2019-01-30T12:23:40Z,2019-01-30T17:17:22Z,2019-01-30T17:17:22Z,MERGED,True,416,321,17,https://github.com/zack-vii,Fixes: (part of) #1519 for stable,15,[],https://github.com/MDSplus/mdsplus/pull/1530,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1530,"This should resolve part of the problems in #1519

also updated the python tests so they have the same coverage as alpha
commented out tests of not yet supported features","This should resolve part of the problems in #1519

also updated the python tests so they have the same coverage as alpha
commented out tests of not yet supported features",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1531,2019-01-30T15:14:04Z,2019-02-01T11:38:50Z,2019-02-01T11:38:54Z,MERGED,True,223,158,14,https://github.com/zack-vii,Zck changes wave7,14,[],https://github.com/MDSplus/mdsplus/pull/1531,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1531,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1531,2019-01-30T15:14:04Z,2019-02-01T11:38:50Z,2019-02-01T11:38:54Z,MERGED,True,223,158,14,https://github.com/zack-vii,Zck changes wave7,14,[],https://github.com/MDSplus/mdsplus/pull/1531,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1531#issuecomment-459080396,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1531,2019-01-30T15:14:04Z,2019-02-01T11:38:50Z,2019-02-01T11:38:54Z,MERGED,True,223,158,14,https://github.com/zack-vii,Zck changes wave7,14,[],https://github.com/MDSplus/mdsplus/pull/1531,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1531#issuecomment-459400213,,"The hopefully fixed the remaining issue described in #1519.
Also it hopefully eliminates the risk of a deadlock in TdiDoTask.
fc29 finally builds on docker for fc29
fixes memory issues that have been revealed by running alpha tests under stable",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1533,2019-01-31T19:44:33Z,2019-02-04T13:07:20Z,2019-02-04T13:07:24Z,CLOSED,False,66,44,8,https://github.com/zack-vii,wave8: python3.7 GIL improvements,7,[],https://github.com/MDSplus/mdsplus/pull/1533,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1533,improves but sadly not fixes locking problem on fc29,improves but sadly not fixes locking problem on fc29,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1533,2019-01-31T19:44:33Z,2019-02-04T13:07:20Z,2019-02-04T13:07:24Z,CLOSED,False,66,44,8,https://github.com/zack-vii,wave8: python3.7 GIL improvements,7,[],https://github.com/MDSplus/mdsplus/pull/1533,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1533#issuecomment-459696091,improves but sadly not fixes locking problem on fc29,funny that the now correct fc29 image has a setup (i think its python version) that does not clean up well after a thread cancel.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1533,2019-01-31T19:44:33Z,2019-02-04T13:07:20Z,2019-02-04T13:07:24Z,CLOSED,False,66,44,8,https://github.com/zack-vii,wave8: python3.7 GIL improvements,7,[],https://github.com/MDSplus/mdsplus/pull/1533,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1533#issuecomment-460243648,improves but sadly not fixes locking problem on fc29,merged as part of wave 9 #1534,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1534,2019-02-01T21:42:22Z,2019-02-04T13:02:10Z,2019-02-04T13:07:36Z,MERGED,True,390,301,30,https://github.com/zack-vii,wave9: Fixes issues revealed by fc29 valgrind,17,[],https://github.com/MDSplus/mdsplus/pull/1534,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1534,includes wave8 #1533,includes wave8 #1533,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1536,2019-02-03T08:31:52Z,2019-02-04T14:36:39Z,2019-02-04T14:36:45Z,MERGED,True,102,78,12,https://github.com/zack-vii,wave10: fixed default error handling and prepares for opcode_t typedef,6,[],https://github.com/MDSplus/mdsplus/pull/1536,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1536,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1537,2019-02-03T08:44:46Z,2019-02-04T15:52:57Z,2019-02-04T15:53:01Z,MERGED,True,471,581,68,https://github.com/zack-vii,wave11: use opcode_t in tdshr and some typedefs,6,[],https://github.com/MDSplus/mdsplus/pull/1537,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1537,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1539,2019-02-04T17:11:28Z,2019-02-05T13:08:05Z,2019-02-05T13:08:05Z,MERGED,True,2457,2451,11,https://github.com/zack-vii,fix tree reference in python api for CLASS_APD and CLASS_R,11,[],https://github.com/MDSplus/mdsplus/pull/1539,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1539,this hopefully fixes issue #1519,this hopefully fixes issue #1519,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1541,2019-02-04T20:20:56Z,2019-02-05T12:52:11Z,2019-02-05T12:52:11Z,MERGED,True,152,170,5,https://github.com/zack-vii,Zck remote access read/write/seek/lock transfer of size_t and off_t types,4,[],https://github.com/MDSplus/mdsplus/pull/1541,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1541,this shall fix issue #1535,this shall fix issue #1535,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1542,2019-02-05T18:50:18Z,2019-02-05T20:39:55Z,2019-02-05T20:39:55Z,MERGED,True,281,101,26,https://github.com/zack-vii,Fixes stuff that popped up during alpha waves,8,[],https://github.com/MDSplus/mdsplus/pull/1542,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1542,fixes,fixes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1543,2019-02-05T18:57:03Z,2019-02-05T19:44:43Z,2019-02-05T19:45:01Z,MERGED,True,4,3,1,https://github.com/tfredian,Build: rpmsign not prompting for pass phrase,1,[],https://github.com/MDSplus/mdsplus/pull/1543,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1543,"On more recent fedora releases, the rpmsign command no longer
prompts for a pass phrase if the sign key does not require a pass phrase.
The build process used to expect the prompt and provide an empty line
response but with the new rpmsign the packages are being signed but there
are misleading error messages generated. The builds were completing ok
with signed packages but this change should prevent those error messages.","On more recent fedora releases, the rpmsign command no longer
prompts for a pass phrase if the sign key does not require a pass phrase.
The build process used to expect the prompt and provide an empty line
response but with the new rpmsign the packages are being signed but there
are misleading error messages generated. The builds were completing ok
with signed packages but this change should prevent those error messages.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1544,2019-02-05T22:18:32Z,2019-02-06T13:26:16Z,2019-02-06T13:26:16Z,MERGED,True,174,78,11,https://github.com/zack-vii,zck: added optional feature include_source,6,[],https://github.com/MDSplus/mdsplus/pull/1544,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1544,"allows to embed any python device (from a single source) in the device head node as Conglum filed qualifier via switch add_source in Device.Add()
change default behaviour via env PYDEVICE_ADD_SOURCE to any other than no or 0
the module is loaded once per session and version control in case of multi version per session is ensured via a hash value that is stored in the name field.
Device has a new hidden method called _update_source in case the code can be updated without changing the tree structure (node characteristic); if possible we encourage the user to remove the old device and add a clean device build.
device method check_source() returns unified diff between source in record and file
dclUnitTest shows how to use the new tools","allows to embed any python device (from a single source) in the device head node as Conglum filed qualifier via switch add_source in Device.Add()
change default behaviour via env PYDEVICE_ADD_SOURCE to any other than no or 0
the module is loaded once per session and version control in case of multi version per session is ensured via a hash value that is stored in the name field.
Device has a new hidden method called _update_source in case the code can be updated without changing the tree structure (node characteristic); if possible we encourage the user to remove the old device and add a clean device build.
device method check_source() returns unified diff between source in record and file
dclUnitTest shows how to use the new tools",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1545,2019-02-06T15:43:50Z,2019-02-06T16:14:53Z,2019-02-06T16:14:57Z,MERGED,True,43,8,3,https://github.com/zack-vii,Feature: added TreeDbidPush/Pop to be used from tdi,1,[],https://github.com/MDSplus/mdsplus/pull/1545,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1545,required for multi tree clients using multiple tree similar to python thru thin client,required for multi tree clients using multiple tree similar to python thru thin client,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1547,2019-02-07T00:26:07Z,2019-02-07T16:15:27Z,2019-02-07T16:15:30Z,MERGED,True,65,54,5,https://github.com/zack-vii,Fix: reopen a tree in edit mode violates dbid stack,6,[],https://github.com/MDSplus/mdsplus/pull/1547,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1547,"CreateDbSlot used _TreeClose to close the top most tree if it has to close a tree for any reason (edit<>normal, out of stack). But _TreeClose moves the slot to the end of the stack. Since CreateDbSlot assumes teh stack is untouched it overwrites the entries of the next slot which might contain valid data of a different tree. using CloseTopTree will leave the stack untouched.

remove cap of stacklimit and free closed dbid slots instead of moving them to back.

This PR fixes issue #1546","CreateDbSlot used _TreeClose to close the top most tree if it has to close a tree for any reason (edit<>normal, out of stack). But _TreeClose moves the slot to the end of the stack. Since CreateDbSlot assumes teh stack is untouched it overwrites the entries of the next slot which might contain valid data of a different tree. using CloseTopTree will leave the stack untouched.

remove cap of stacklimit and free closed dbid slots instead of moving them to back.

This PR fixes issue #1546",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1549,2019-02-07T16:20:52Z,2019-02-07T22:23:03Z,2019-02-07T22:23:06Z,MERGED,True,13,12,2,https://github.com/zack-vii,Fix: svrgp overflows index for large arrays,2,[],https://github.com/MDSplus/mdsplus/pull/1549,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1549,"for arrays larger than (1<<31)/7875 SVRGP (used by e.g. csint) has the potential to overflow the signed int32.
the fix prevents this by casting to int64 for the critical math.
TdiCall reused opcode as return type. datatype dtype_t gives more useful prints in gdb","for arrays larger than (1<<31)/7875 SVRGP (used by e.g. csint) has the potential to overflow the signed int32.
the fix prevents this by casting to int64 for the critical math.
TdiCall reused opcode as return type. datatype dtype_t gives more useful prints in gdb",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1550,2019-02-07T16:48:55Z,2019-02-20T21:58:37Z,2019-02-20T21:58:40Z,MERGED,True,4,4,1,https://github.com/zack-vii,Build: uninstall script gets stuck uninstalling python module,1,[],https://github.com/MDSplus/mdsplus/pull/1550,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1550,removePythonModule.sh in loops infinitely if path does not contain package name,removePythonModule.sh in loops infinitely if path does not contain package name,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1550,2019-02-07T16:48:55Z,2019-02-20T21:58:37Z,2019-02-20T21:58:40Z,MERGED,True,4,4,1,https://github.com/zack-vii,Build: uninstall script gets stuck uninstalling python module,1,[],https://github.com/MDSplus/mdsplus/pull/1550,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1550#issuecomment-463838688,removePythonModule.sh in loops infinitely if path does not contain package name,was added to stable but not alpha ? please someone approve,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1551,2019-02-07T16:53:11Z,2019-02-08T20:06:31Z,2019-08-17T10:16:26Z,MERGED,True,13,10,2,https://github.com/zack-vii,Zck #1549 and #1550  for stable,2,[],https://github.com/MDSplus/mdsplus/pull/1551,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1551,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1552,2019-02-07T18:51:50Z,2019-02-08T20:05:29Z,2019-02-12T11:33:13Z,MERGED,True,102,133,31,https://github.com/zack-vii,Fix: MAX_DIMS 8 for mdsip; make use of fill value,6,[],https://github.com/MDSplus/mdsplus/pull/1552,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1552,addresses issue #1548,addresses issue #1548,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1552,2019-02-07T18:51:50Z,2019-02-08T20:05:29Z,2019-02-12T11:33:13Z,MERGED,True,102,133,31,https://github.com/zack-vii,Fix: MAX_DIMS 8 for mdsip; make use of fill value,6,[],https://github.com/MDSplus/mdsplus/pull/1552,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1552#issuecomment-461557044,addresses issue #1548,"will do but looks like i have to do some more code replacements before it even matters
will try to grap zero([1,1,1,1,1,1,1,1],1) in MdsConnectionTest",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1552,2019-02-07T18:51:50Z,2019-02-08T20:05:29Z,2019-02-12T11:33:13Z,MERGED,True,102,133,31,https://github.com/zack-vii,Fix: MAX_DIMS 8 for mdsip; make use of fill value,6,[],https://github.com/MDSplus/mdsplus/pull/1552,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1552#issuecomment-461589466,addresses issue #1548,"7 wonders, 7 dwarfs, 7 dims .. maybe maybe not.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1552,2019-02-07T18:51:50Z,2019-02-08T20:05:29Z,2019-02-12T11:33:13Z,MERGED,True,102,133,31,https://github.com/zack-vii,Fix: MAX_DIMS 8 for mdsip; make use of fill value,6,[],https://github.com/MDSplus/mdsplus/pull/1552,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1552#issuecomment-461633645,addresses issue #1548,"tested it with tditest and our old version server mds-data-2, looks like the server sets ndims to 8 if 8 is teh number of dims however it can only set 7 dims so the client can reconstruct the 8th dim from the message length if it is a multiple of the numbytes value upto the 7th dim. now you can even read 8dim array from old servers.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1553,2019-02-07T22:24:31Z,2019-03-07T16:46:44Z,2019-03-07T16:46:57Z,MERGED,True,4551,3564,204,https://github.com/zack-vii,Update javatraverser2 for alpha,7,[],https://github.com/MDSplus/mdsplus/pull/1553,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1553,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1554,2019-02-08T13:44:32Z,2019-02-12T09:32:15Z,2019-11-25T10:21:54Z,MERGED,True,1923,37,12,https://github.com/GabrieleManduchi,Gm marte2 interface,5,[],https://github.com/MDSplus/mdsplus/pull/1554,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1554,"New MDSplus Devices for direct MARTe2 interface.  In paritcular, the common superclass MARTE2_COMPONENT can build on the fly the MARTe2 configuration corresponding to the device model","New MDSplus Devices for direct MARTe2 interface.  In paritcular, the common superclass MARTE2_COMPONENT can build on the fly the MARTe2 configuration corresponding to the device model",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1554,2019-02-08T13:44:32Z,2019-02-12T09:32:15Z,2019-11-25T10:21:54Z,MERGED,True,1923,37,12,https://github.com/GabrieleManduchi,Gm marte2 interface,5,[],https://github.com/MDSplus/mdsplus/pull/1554,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1554#issuecomment-461808754,"New MDSplus Devices for direct MARTe2 interface.  In paritcular, the common superclass MARTE2_COMPONENT can build on the fly the MARTe2 configuration corresponding to the device model",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1554,2019-02-08T13:44:32Z,2019-02-12T09:32:15Z,2019-11-25T10:21:54Z,MERGED,True,1923,37,12,https://github.com/GabrieleManduchi,Gm marte2 interface,5,[],https://github.com/MDSplus/mdsplus/pull/1554,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1554#issuecomment-461850975,"New MDSplus Devices for direct MARTe2 interface.  In paritcular, the common superclass MARTE2_COMPONENT can build on the fly the MARTe2 configuration corresponding to the device model",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1554,2019-02-08T13:44:32Z,2019-02-12T09:32:15Z,2019-11-25T10:21:54Z,MERGED,True,1923,37,12,https://github.com/GabrieleManduchi,Gm marte2 interface,5,[],https://github.com/MDSplus/mdsplus/pull/1554,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1554#issuecomment-461869839,"New MDSplus Devices for direct MARTe2 interface.  In paritcular, the common superclass MARTE2_COMPONENT can build on the fly the MARTe2 configuration corresponding to the device model",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1554,2019-02-08T13:44:32Z,2019-02-12T09:32:15Z,2019-11-25T10:21:54Z,MERGED,True,1923,37,12,https://github.com/GabrieleManduchi,Gm marte2 interface,5,[],https://github.com/MDSplus/mdsplus/pull/1554,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/1554#issuecomment-462339298,"New MDSplus Devices for direct MARTe2 interface.  In paritcular, the common superclass MARTE2_COMPONENT can build on the fly the MARTe2 configuration corresponding to the device model",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1554,2019-02-08T13:44:32Z,2019-02-12T09:32:15Z,2019-11-25T10:21:54Z,MERGED,True,1923,37,12,https://github.com/GabrieleManduchi,Gm marte2 interface,5,[],https://github.com/MDSplus/mdsplus/pull/1554,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1554#issuecomment-462339388,"New MDSplus Devices for direct MARTe2 interface.  In paritcular, the common superclass MARTE2_COMPONENT can build on the fly the MARTe2 configuration corresponding to the device model",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1554,2019-02-08T13:44:32Z,2019-02-12T09:32:15Z,2019-11-25T10:21:54Z,MERGED,True,1923,37,12,https://github.com/GabrieleManduchi,Gm marte2 interface,5,[],https://github.com/MDSplus/mdsplus/pull/1554,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/1554#issuecomment-462479088,"New MDSplus Devices for direct MARTe2 interface.  In paritcular, the common superclass MARTE2_COMPONENT can build on the fly the MARTe2 configuration corresponding to the device model",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1555,2019-02-08T19:59:06Z,2019-02-08T20:39:45Z,2019-02-12T11:33:11Z,MERGED,True,0,1,1,https://github.com/zack-vii,Fix: removed extra move_to_top when stack_siye is reached,1,[],https://github.com/MDSplus/mdsplus/pull/1555,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1555,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1557,2019-02-11T16:09:16Z,2019-02-11T20:18:33Z,2019-02-11T20:18:33Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: missing alloc for termination char,1,[],https://github.com/MDSplus/mdsplus/pull/1557,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1557,fixes #1556,fixes #1556,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1558,2019-02-12T02:39:59Z,2019-02-15T01:16:36Z,2019-03-22T16:07:11Z,MERGED,True,3,2,1,https://github.com/zack-vii,Fix: remote access disconnect host_list,1,[],https://github.com/MDSplus/mdsplus/pull/1558,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1558,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1558,2019-02-12T02:39:59Z,2019-02-15T01:16:36Z,2019-03-22T16:07:11Z,MERGED,True,3,2,1,https://github.com/zack-vii,Fix: remote access disconnect host_list,1,[],https://github.com/MDSplus/mdsplus/pull/1558,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1558#issuecomment-463838333,,So could someone approve this?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1559,2019-02-12T22:51:18Z,2019-02-13T15:27:22Z,2019-02-13T15:27:22Z,CLOSED,False,0,0,0,https://github.com/santorofer,Merge pull request #1 from MDSplus/alpha,1,[],https://github.com/MDSplus/mdsplus/pull/1559,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1559,first update of my MDSplus fork,first update of my MDSplus fork,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1559,2019-02-12T22:51:18Z,2019-02-13T15:27:22Z,2019-02-13T15:27:22Z,CLOSED,False,0,0,0,https://github.com/santorofer,Merge pull request #1 from MDSplus/alpha,1,[],https://github.com/MDSplus/mdsplus/pull/1559,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1559#issuecomment-462971128,first update of my MDSplus fork,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1559,2019-02-12T22:51:18Z,2019-02-13T15:27:22Z,2019-02-13T15:27:22Z,CLOSED,False,0,0,0,https://github.com/santorofer,Merge pull request #1 from MDSplus/alpha,1,[],https://github.com/MDSplus/mdsplus/pull/1559,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1559#issuecomment-463241765,first update of my MDSplus fork,git error,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1560,2019-02-13T08:22:18Z,2019-02-15T10:30:00Z,2019-02-15T10:30:06Z,MERGED,True,42,52,2,https://github.com/GabrieleManduchi,Fix: jScope Error Reporting,1,[],https://github.com/MDSplus/mdsplus/pull/1560,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1560,Errors raised by mdsip server are now reported in jScope,Errors raised by mdsip server are now reported in jScope,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1560,2019-02-13T08:22:18Z,2019-02-15T10:30:00Z,2019-02-15T10:30:06Z,MERGED,True,42,52,2,https://github.com/GabrieleManduchi,Fix: jScope Error Reporting,1,[],https://github.com/MDSplus/mdsplus/pull/1560,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1560#issuecomment-463111556,Errors raised by mdsip server are now reported in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1560,2019-02-13T08:22:18Z,2019-02-15T10:30:00Z,2019-02-15T10:30:06Z,MERGED,True,42,52,2,https://github.com/GabrieleManduchi,Fix: jScope Error Reporting,1,[],https://github.com/MDSplus/mdsplus/pull/1560,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1560#issuecomment-463120459,Errors raised by mdsip server are now reported in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1560,2019-02-13T08:22:18Z,2019-02-15T10:30:00Z,2019-02-15T10:30:06Z,MERGED,True,42,52,2,https://github.com/GabrieleManduchi,Fix: jScope Error Reporting,1,[],https://github.com/MDSplus/mdsplus/pull/1560,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1560#issuecomment-463196644,Errors raised by mdsip server are now reported in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1560,2019-02-13T08:22:18Z,2019-02-15T10:30:00Z,2019-02-15T10:30:06Z,MERGED,True,42,52,2,https://github.com/GabrieleManduchi,Fix: jScope Error Reporting,1,[],https://github.com/MDSplus/mdsplus/pull/1560,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/1560#issuecomment-463196733,Errors raised by mdsip server are now reported in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1560,2019-02-13T08:22:18Z,2019-02-15T10:30:00Z,2019-02-15T10:30:06Z,MERGED,True,42,52,2,https://github.com/GabrieleManduchi,Fix: jScope Error Reporting,1,[],https://github.com/MDSplus/mdsplus/pull/1560,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1560#issuecomment-463572769,Errors raised by mdsip server are now reported in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1560,2019-02-13T08:22:18Z,2019-02-15T10:30:00Z,2019-02-15T10:30:06Z,MERGED,True,42,52,2,https://github.com/GabrieleManduchi,Fix: jScope Error Reporting,1,[],https://github.com/MDSplus/mdsplus/pull/1560,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/1560#issuecomment-463635810,Errors raised by mdsip server are now reported in jScope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1561,2019-02-13T18:37:17Z,2019-02-13T21:58:28Z,2019-02-13T22:39:39Z,MERGED,True,55,9,1,https://github.com/santorofer,Fix: add timeout and return not triggered on timeout,9,[],https://github.com/MDSplus/mdsplus/pull/1561,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1561,The device acq435st has been modified to deal with trigger timeout (including error handling): it will return Not Trigged on timeout.,The device acq435st has been modified to deal with trigger timeout (including error handling): it will return Not Trigged on timeout.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1561,2019-02-13T18:37:17Z,2019-02-13T21:58:28Z,2019-02-13T22:39:39Z,MERGED,True,55,9,1,https://github.com/santorofer,Fix: add timeout and return not triggered on timeout,9,[],https://github.com/MDSplus/mdsplus/pull/1561,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1561#issuecomment-463315103,The device acq435st has been modified to deal with trigger timeout (including error handling): it will return Not Trigged on timeout.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1561,2019-02-13T18:37:17Z,2019-02-13T21:58:28Z,2019-02-13T22:39:39Z,MERGED,True,55,9,1,https://github.com/santorofer,Fix: add timeout and return not triggered on timeout,9,[],https://github.com/MDSplus/mdsplus/pull/1561,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1561#issuecomment-463399063,The device acq435st has been modified to deal with trigger timeout (including error handling): it will return Not Trigged on timeout.,"FYI: python device methods should  not return any status code .. please return nothing on success and raise an mdsplus exception on error.
returning an int is interpreted as status value only for backward compatibility and deprecated.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1561,2019-02-13T18:37:17Z,2019-02-13T21:58:28Z,2019-02-13T22:39:39Z,MERGED,True,55,9,1,https://github.com/santorofer,Fix: add timeout and return not triggered on timeout,9,[],https://github.com/MDSplus/mdsplus/pull/1561,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1561#issuecomment-463404907,The device acq435st has been modified to deal with trigger timeout (including error handling): it will return Not Trigged on timeout.,"OK -

   Fernando will change it back.
…
-Josh
On 2/13/19 5:20 PM, Timo Schroeder wrote:

 FYI: python device methods should not return any status code .. please
 return nothing on success and raise an mdsplus exception on error.
 returning an int is interpreted as status value only for backward
 compatibility and deprecated.

 —
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub
 <#1561 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZaDMRz5Sedrt2Z3kLPbmwBePj043ks5vNI-mgaJpZM4a6BSC>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1562,2019-02-15T03:52:14Z,2019-02-19T20:43:12Z,2019-03-22T16:05:17Z,MERGED,True,516,373,15,https://github.com/zack-vii,Fix: the file lookup implementation is very slow,14,[],https://github.com/MDSplus/mdsplus/pull/1562,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1562,"This speeds it up by 10 to 100 times depending on the file system/latency.

We have a file size cap for tdi funs due to String length limit.


raise an TdiSTRTOOLON error rather than trying to compile the truncated part.","This speeds it up by 10 to 100 times depending on the file system/latency.

We have a file size cap for tdi funs due to String length limit.


raise an TdiSTRTOOLON error rather than trying to compile the truncated part.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1562,2019-02-15T03:52:14Z,2019-02-19T20:43:12Z,2019-03-22T16:05:17Z,MERGED,True,516,373,15,https://github.com/zack-vii,Fix: the file lookup implementation is very slow,14,[],https://github.com/MDSplus/mdsplus/pull/1562,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1562#issuecomment-464206172,"This speeds it up by 10 to 100 times depending on the file system/latency.

We have a file size cap for tdi funs due to String length limit.


raise an TdiSTRTOOLON error rather than trying to compile the truncated part.","On an SSD NTFS wit MDS_PATH set to ""%MDSPLUS_DIR%\tdi"" :
old
tditest()
locking for MDS_PATH:TDITEST.PY:  old took 0.759000s     #  first run
locking for MDS_PATH:TDITEST.FUN:  old took 0.521000s   # second (partly cached) -> final: avg 0,2s
%TDI-E-UNKNOWN_VAR, Unknown/undefined variable name
%TDI Error in EXT_FUNCTION(*, ""tditest"")
%TDI Error in EXECUTE(""tditest()"")

new
locking for MDS_PATH:TDITEST.PY: new took 0.016000s
locking for MDS_PATH:TDITEST.FUN: new took 0.015000s
%TDI-E-UNKNOWN_VAR, Unknown/undefined variable name
%TDI Error in EXT_FUNCTION(*, ""tditest"")
%TDI Error in EXECUTE(""tditest()"")",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1564,2019-02-17T22:40:30Z,2019-02-19T15:30:40Z,2019-11-25T10:21:55Z,MERGED,True,47,25,1,https://github.com/joshStillerman,Fix: change from threads to subprocess,1,[],https://github.com/MDSplus/mdsplus/pull/1564,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1564,"NOTE:  This changes the conglomerate for this device.  All instances
must be removed and re added to the tree
Threads were stepping on each others device instances.  Which still
needs to be address as per: #1563
This code is better regardless.
Instead of creating a thread

write a script in tmp
execute it

capturing output in a log file
recording in nodes

script name
logfile name
pid of creating process


change stream to a method used by the script above

add additional stream exit condition: parent pid is unavailable
regardless of reason(stopped, timed-out, max-segments, parent-dead, on exit, record contents of output in node remove the files





NOTE:  Timo's comment that  methods do not need to return 1 is not quite right.  If they don't then the following happens when using do/method
TCL> do /meth j stop
doing \TEST::TOP:J(ACQ435ST).stop()
Error executing device method
Error message was: %SS-W-SUCCESS, Success
mdsdcl: --> failed on line 'do /meth j stop'","NOTE:  This changes the conglomerate for this device.  All instances
must be removed and re added to the tree
Threads were stepping on each others device instances.  Which still
needs to be address as per: #1563
This code is better regardless.
Instead of creating a thread

write a script in tmp
execute it

capturing output in a log file
recording in nodes

script name
logfile name
pid of creating process


change stream to a method used by the script above

add additional stream exit condition: parent pid is unavailable
regardless of reason(stopped, timed-out, max-segments, parent-dead, on exit, record contents of output in node remove the files





NOTE:  Timo's comment that  methods do not need to return 1 is not quite right.  If they don't then the following happens when using do/method
TCL> do /meth j stop
doing \TEST::TOP:J(ACQ435ST).stop()
Error executing device method
Error message was: %SS-W-SUCCESS, Success
mdsdcl: --> failed on line 'do /meth j stop'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1564,2019-02-17T22:40:30Z,2019-02-19T15:30:40Z,2019-11-25T10:21:55Z,MERGED,True,47,25,1,https://github.com/joshStillerman,Fix: change from threads to subprocess,1,[],https://github.com/MDSplus/mdsplus/pull/1564,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1564#issuecomment-464549725,"NOTE:  This changes the conglomerate for this device.  All instances
must be removed and re added to the tree
Threads were stepping on each others device instances.  Which still
needs to be address as per: #1563
This code is better regardless.
Instead of creating a thread

write a script in tmp
execute it

capturing output in a log file
recording in nodes

script name
logfile name
pid of creating process


change stream to a method used by the script above

add additional stream exit condition: parent pid is unavailable
regardless of reason(stopped, timed-out, max-segments, parent-dead, on exit, record contents of output in node remove the files





NOTE:  Timo's comment that  methods do not need to return 1 is not quite right.  If they don't then the following happens when using do/method
TCL> do /meth j stop
doing \TEST::TOP:J(ACQ435ST).stop()
Error executing device method
Error message was: %SS-W-SUCCESS, Success
mdsdcl: --> failed on line 'do /meth j stop'","it would help.... but i think having separate process is a win. I would
love for it to be less clumsy, but did not want to keep any of the info
in memory. I had trouble capturing the output of the threads, to put in
either a file or the tree.  This solves all of those problems.  Do you
have a suggestion for it to be less clumsy? This, at least, does work.
…
-Josh
On 2/17/19 8:05 PM, Timo Schroeder wrote:

 ***@***.**** approved this pull request.

 I assume you know what you are doing. looks clumsy. Would fixing #1563
 <#1563> help? As long as it
 helps.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1564 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZa8RDQ-5H1pocd42wzdBtFrDbLtSks5vOfxtgaJpZM4a_1u4>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1564,2019-02-17T22:40:30Z,2019-02-19T15:30:40Z,2019-11-25T10:21:55Z,MERGED,True,47,25,1,https://github.com/joshStillerman,Fix: change from threads to subprocess,1,[],https://github.com/MDSplus/mdsplus/pull/1564,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1564#issuecomment-465178389,"NOTE:  This changes the conglomerate for this device.  All instances
must be removed and re added to the tree
Threads were stepping on each others device instances.  Which still
needs to be address as per: #1563
This code is better regardless.
Instead of creating a thread

write a script in tmp
execute it

capturing output in a log file
recording in nodes

script name
logfile name
pid of creating process


change stream to a method used by the script above

add additional stream exit condition: parent pid is unavailable
regardless of reason(stopped, timed-out, max-segments, parent-dead, on exit, record contents of output in node remove the files





NOTE:  Timo's comment that  methods do not need to return 1 is not quite right.  If they don't then the following happens when using do/method
TCL> do /meth j stop
doing \TEST::TOP:J(ACQ435ST).stop()
Error executing device method
Error message was: %SS-W-SUCCESS, Success
mdsdcl: --> failed on line 'do /meth j stop'",I have decided (after Timo's comment) to at least move all of the data about the running process into a dictionary stored in the running node.  This is still ugly but not quite as ugly.  That will be a new PR,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1565,2019-02-19T01:28:48Z,2019-03-06T14:35:25Z,2019-03-06T14:35:29Z,MERGED,True,144,18,7,https://github.com/zack-vii,Feature: command tabcompletion for tditest,5,"['enhancement', 'test required']",https://github.com/MDSplus/mdsplus/pull/1565,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1565,uses new findfile and tab completion of readline to add command completion to tditest,uses new findfile and tab completion of readline to add command completion to tditest,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1565,2019-02-19T01:28:48Z,2019-03-06T14:35:25Z,2019-03-06T14:35:29Z,MERGED,True,144,18,7,https://github.com/zack-vii,Feature: command tabcompletion for tditest,5,"['enhancement', 'test required']",https://github.com/MDSplus/mdsplus/pull/1565,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1565#issuecomment-465363550,uses new findfile and tab completion of readline to add command completion to tditest,hmm could be because i rebased it down from #1562 i will double check,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1565,2019-02-19T01:28:48Z,2019-03-06T14:35:25Z,2019-03-06T14:35:29Z,MERGED,True,144,18,7,https://github.com/zack-vii,Feature: command tabcompletion for tditest,5,"['enhancement', 'test required']",https://github.com/MDSplus/mdsplus/pull/1565,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1565#issuecomment-465366355,uses new findfile and tab completion of readline to add command completion to tditest,"Are you sure it locked up and not just showed no result. i programmed it the way that you need to use lower case for .tdi and .py functions and uppercase for builtins.
tree<tab> should show treeopen, treeclose, etc.
TR<tab> should show TRANSFER, TRANSLATE, etc",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1565,2019-02-19T01:28:48Z,2019-03-06T14:35:25Z,2019-03-06T14:35:29Z,MERGED,True,144,18,7,https://github.com/zack-vii,Feature: command tabcompletion for tditest,5,"['enhancement', 'test required']",https://github.com/MDSplus/mdsplus/pull/1565,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1565#issuecomment-465369194,uses new findfile and tab completion of readline to add command completion to tditest,"groups: cannot find name for group ID 1000
I have no name!@Ubuntu18:~/tests/64/mdsobjects/python/tests$ tditest
tree
tree_from_tag(         treedirname(           treeflushoff(          treeopennew(           treesetnciitm(
treeabspath(           treefilename(          treeflushreset(        treeput(               treesetsource(
treeaddnode(           treefindnodetags(      treegetcurrentshot(    treeputrecord(         treeturnoff(
treeaddtag(            treefindnodetagsjeff(  treegetrecord(         treequit(              treeturnon(
treeclose(             treefindnodewild(      treegetsource(         treesetcurrentshot(    treewrite(
treecreatepulsefile(   treefindtagend(        treeopen(              treesetdbiitm(
treedeletepulsefile(   treefindtagwild(       treeopenedit(          treesetdefault(
tree
TR
TRANSFER(       TRANSLATE(      TRANSPOSE_(     TRANSPOSE_MUL(  TRIM(
TR
Could you check the MDS_PATH env?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1565,2019-02-19T01:28:48Z,2019-03-06T14:35:25Z,2019-03-06T14:35:29Z,MERGED,True,144,18,7,https://github.com/zack-vii,Feature: command tabcompletion for tditest,5,"['enhancement', 'test required']",https://github.com/MDSplus/mdsplus/pull/1565,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/1565#issuecomment-465370357,uses new findfile and tab completion of readline to add command completion to tditest,"It completely locked I'll do a few more tests tomorrowOn Feb 19, 2019 7:19 PM, Timo Schroeder <notifications@github.com> wrote:Are you sure it locked up and just did not show a result. i programmed it the way that you need to use lower case for .tdi and .py functions and uppercase for builtins.
tree should show treeopen, treeclose, etc.
TR should show TRANSFER, TRANSLATE, etc

—You are receiving this because your review was requested.Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1565,2019-02-19T01:28:48Z,2019-03-06T14:35:25Z,2019-03-06T14:35:29Z,MERGED,True,144,18,7,https://github.com/zack-vii,Feature: command tabcompletion for tditest,5,"['enhancement', 'test required']",https://github.com/MDSplus/mdsplus/pull/1565,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1565#issuecomment-465740702,uses new findfile and tab completion of readline to add command completion to tditest,any luck on the gdb investigation concerning the hanging process?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1565,2019-02-19T01:28:48Z,2019-03-06T14:35:25Z,2019-03-06T14:35:29Z,MERGED,True,144,18,7,https://github.com/zack-vii,Feature: command tabcompletion for tditest,5,"['enhancement', 'test required']",https://github.com/MDSplus/mdsplus/pull/1565,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/1565#issuecomment-468481862,uses new findfile and tab completion of readline to add command completion to tditest,"If my tdipath is simple (one clause) it works fine.  If It is a list (at least my list) it hangs.  I will try to GDB it tomorrow.
My MDS_PATH is:
Last login: Tue Feb 26 14:34:40 on ttys010
JoshuasMacBook5:NDM jas$ ssh cmodws102.psfc.mit.edu
Last login: Thu Feb 28 18:28:53 2019 from 74.104.162.53
[jas@cmodws102 ~]$ echo $MDS_PATH 
/usr/local/cmod/tdi;/usr/local/mdsplus/tdi",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1566,2019-02-19T16:26:24Z,2019-02-19T20:39:16Z,2019-11-25T10:21:56Z,MERGED,True,104,84,12,https://github.com/GabrieleManduchi,Gm jscope rowcol,4,[],https://github.com/MDSplus/mdsplus/pull/1566,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1566,Added for compatibility with old Scope,Added for compatibility with old Scope,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1566,2019-02-19T16:26:24Z,2019-02-19T20:39:16Z,2019-11-25T10:21:56Z,MERGED,True,104,84,12,https://github.com/GabrieleManduchi,Gm jscope rowcol,4,[],https://github.com/MDSplus/mdsplus/pull/1566,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1566#issuecomment-465216815,Added for compatibility with old Scope,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1567,2019-02-19T19:49:35Z,2019-02-20T22:42:34Z,2019-02-20T22:42:39Z,MERGED,True,75,15,3,https://github.com/zack-vii,Fix: decompile APD classes,5,[],https://github.com/MDSplus/mdsplus/pull/1567,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1567,"decompile List and Dict objects to
List()
Dict()
List(,""a"",1,""b"",2)
Dict(, ""a"",1, ""b"",2)
List(,""a"" /*** etc. ***/)
Dict(, ""a"",1 /*** etc. ***/)

instead of
[]
[]
[""a"",1,""b"",2]
[""a"",1,""b"",2]
Set_Range(100000,??Dtype_214 /*** etc. ***/)
Set_Range(100000,??Dtype_216 /*** etc. ***/)","decompile List and Dict objects to
List()
Dict()
List(,""a"",1,""b"",2)
Dict(, ""a"",1, ""b"",2)
List(,""a"" /*** etc. ***/)
Dict(, ""a"",1 /*** etc. ***/)

instead of
[]
[]
[""a"",1,""b"",2]
[""a"",1,""b"",2]
Set_Range(100000,??Dtype_214 /*** etc. ***/)
Set_Range(100000,??Dtype_216 /*** etc. ***/)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1568,2019-02-19T20:37:43Z,2019-02-20T20:04:30Z,2019-11-25T10:21:56Z,MERGED,True,32,29,1,https://github.com/joshStillerman,Fix: Change acq435 all subprocess info in running,3,[],https://github.com/MDSplus/mdsplus/pull/1568,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1568,"Deploy: change htsdevices package to include psutil
Move all of the book keeping information from separate nodes into
the running node as a dictionary.
Need to insure that psutil python package is available","Deploy: change htsdevices package to include psutil
Move all of the book keeping information from separate nodes into
the running node as a dictionary.
Need to insure that psutil python package is available",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1569,2019-02-20T19:28:07Z,2019-02-21T15:47:17Z,2019-02-21T15:47:21Z,MERGED,True,76,6,4,https://github.com/zack-vii,Feature: added persistent property to Device for device private stati…,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1569,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1569,"…cs, e.g. threads
maybe this helps for #1563. and other devices","…cs, e.g. threads
maybe this helps for #1563. and other devices",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1569,2019-02-20T19:28:07Z,2019-02-21T15:47:17Z,2019-02-21T15:47:21Z,MERGED,True,76,6,4,https://github.com/zack-vii,Feature: added persistent property to Device for device private stati…,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1569,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1569#issuecomment-465760995,"…cs, e.g. threads
maybe this helps for #1563. and other devices",hmmm... Not sure if this makes much sense or what is causing the issue in the first place. If the tree associated with the device is getting garbage collected somewhere (which it shouldn't if the device instance is being used for doing a method) then your _unique method wouldn't work anyway. I think we have to fully understand the problem described by the issue before coming up with a solution. I seem to recall we did a lot of work convincing ourselves that the garbage collection handling was all working now and we jumped through hoops to avoid recursive references that prevent garbage collection of trees from being executed properly.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1569,2019-02-20T19:28:07Z,2019-02-21T15:47:17Z,2019-02-21T15:47:21Z,MERGED,True,76,6,4,https://github.com/zack-vii,Feature: added persistent property to Device for device private stati…,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1569,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1569#issuecomment-465767658,"…cs, e.g. threads
maybe this helps for #1563. and other devices","no the GC collects the instance and hence the reference to the thread. The static field _persistent is tied to the Device class and remains referenced until the end of the session. it is up to the device implementation to open the tree in the thread. I would recommend to ensure private context however i made this unnecessary for most dbid stack operations (TreeCtxPush/Pop set the private context on its own). I just know that the static field workaround is required.
Since the TdiDoMethod calls into PyDoMethod from c the device node argument is always a new instance and hence there is no way to communicate between two phases/tasks without the usage of statics. I used it on many devices and Czgnet4k has a terrible implementation of this for the same reason.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1569,2019-02-20T19:28:07Z,2019-02-21T15:47:17Z,2019-02-21T15:47:21Z,MERGED,True,76,6,4,https://github.com/zack-vii,Feature: added persistent property to Device for device private stati…,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1569,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1569#issuecomment-465770014,"…cs, e.g. threads
maybe this helps for #1563. and other devices","To the second part: If I am not mistaken, the GC critical stuff i got rid of when I eliminated the _TreeCtx class.
Which only applies to alpha, though.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1569,2019-02-20T19:28:07Z,2019-02-21T15:47:17Z,2019-02-21T15:47:21Z,MERGED,True,76,6,4,https://github.com/zack-vii,Feature: added persistent property to Device for device private stati…,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1569,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1569#issuecomment-465780725,"…cs, e.g. threads
maybe this helps for #1563. and other devices","Still not fully understanding... So if you generate a thread to execute a method which implies the method already has a tree context since a device is a subclass of tree node. Would that tree context not persist anyway and if not is it up to the method to reopen using self.tree=Tree(self.tree.tree,self.tree.shot)??? If self.tree got closed in another thread then the _unique method would stop working since it couldn't get tree name and shot (unless that is nolonger tied to the tree context). Also what happens if multiple threads are executing device methods on the same device? Should the _unique method include a thread id in the key names? Perhaps if you included a reimplementation of one of your devices using it in the PR it would be clearer why this is needed and how one might use it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1569,2019-02-20T19:28:07Z,2019-02-21T15:47:17Z,2019-02-21T15:47:21Z,MERGED,True,76,6,4,https://github.com/zack-vii,Feature: added persistent property to Device for device private stati…,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1569,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1569#issuecomment-465788423,"…cs, e.g. threads
maybe this helps for #1563. and other devices","called from tdi the only context is the global context . Tree() no args. so the context is the same if expt and shot did not change. however the instances of the first call will become unreachable unless they are tied to a static. unreachable objects will be collected afaik. i dont know how the thread will behave,,, if it will get canceled if it depends on its daemon state. all i know is, that the persistent filed will simplify device implementations. maybe not in this case but its worth a try.  nonetheless this pr is useful for some of our local devices.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1569,2019-02-20T19:28:07Z,2019-02-21T15:47:17Z,2019-02-21T15:47:21Z,MERGED,True,76,6,4,https://github.com/zack-vii,Feature: added persistent property to Device for device private stati…,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1569,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1569#issuecomment-465789497,"…cs, e.g. threads
maybe this helps for #1563. and other devices",its possibly worth setting up a task pair that addresses this issue in dclUnitTest. i will see what i can do tomorrow,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1569,2019-02-20T19:28:07Z,2019-02-21T15:47:17Z,2019-02-21T15:47:21Z,MERGED,True,76,6,4,https://github.com/zack-vii,Feature: added persistent property to Device for device private stati…,5,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1569,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1569#issuecomment-465992317,"…cs, e.g. threads
maybe this helps for #1563. and other devices","OK I added a use cast to TestDevice and one more useful method 'copy' which simplifies the creation of a thread-safe device ref.
@joshStillerman: How to apply this to your device .. Its probably better to reset it to use threads first.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1570,2019-02-21T15:48:24Z,2019-02-22T15:28:49Z,2019-02-22T15:28:51Z,MERGED,True,137,80,13,https://github.com/zack-vii,Zck mdsip maxdim support old server communication,10,[],https://github.com/MDSplus/mdsplus/pull/1570,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1570,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1570,2019-02-21T15:48:24Z,2019-02-22T15:28:49Z,2019-02-22T15:28:51Z,MERGED,True,137,80,13,https://github.com/zack-vii,Zck mdsip maxdim support old server communication,10,[],https://github.com/MDSplus/mdsplus/pull/1570,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1570#issuecomment-466069063,,"Does not seem to be the final truth. i a building a test suite for mdsip.. and
mdsvalue(""$"",[]) does not work

looks like this never worked",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1570,2019-02-21T15:48:24Z,2019-02-22T15:28:49Z,2019-02-22T15:28:51Z,MERGED,True,137,80,13,https://github.com/zack-vii,Zck mdsip maxdim support old server communication,10,[],https://github.com/MDSplus/mdsplus/pull/1570,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1570#issuecomment-466069423,,"also
mdsvalue(""DECOMPILE($)"",[[1,2],[3,4]])
""[]""

looks like sendArgs sends ndims = 8",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1571,2019-02-21T16:58:27Z,2019-02-21T19:23:34Z,2019-03-13T02:57:27Z,MERGED,True,19,41,1,https://github.com/joshStillerman,Fix: acq435st back from process to thread,2,[],https://github.com/MDSplus/mdsplus/pull/1571,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1571,"Looks like the problems in: #1563 were related to garbage collection not to a race condition.
This commit removes the process stuff and uses a defined thread class to do the work.
I (Tom's idea) do not think there is a need to store the device and or thread persistently in the class.  It may be good enough for the thread to make a copy of the device.
Note:  It is sufficient for the init of the thread to copy its argument, because the init is done synchronously before the thread is started, so 'self' is still in scope during its execution
Note: Note: capturing stdout from the thread is problematic as all the threads in a process share the same
FD table.  The solution for this to use a logger - which can be implemented later.  For now the output is mixed in with the main process's output.","Looks like the problems in: #1563 were related to garbage collection not to a race condition.
This commit removes the process stuff and uses a defined thread class to do the work.
I (Tom's idea) do not think there is a need to store the device and or thread persistently in the class.  It may be good enough for the thread to make a copy of the device.
Note:  It is sufficient for the init of the thread to copy its argument, because the init is done synchronously before the thread is started, so 'self' is still in scope during its execution
Note: Note: capturing stdout from the thread is problematic as all the threads in a process share the same
FD table.  The solution for this to use a logger - which can be implemented later.  For now the output is mixed in with the main process's output.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1572,2019-02-22T14:01:11Z,2019-02-22T15:26:45Z,2019-02-22T15:26:51Z,CLOSED,False,2,0,1,https://github.com/joshStillerman,Fix: add test for dispatch of an action node,1,[],https://github.com/MDSplus/mdsplus/pull/1572,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1572,Note this fails in current alpha,Note this fails in current alpha,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1574,2019-02-22T15:26:31Z,2019-02-22T16:19:06Z,2019-02-22T16:19:12Z,MERGED,True,22,11,4,https://github.com/zack-vii,Fix: TdiDispatch class_d,3,[],https://github.com/MDSplus/mdsplus/pull/1574,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1574,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1574,2019-02-22T15:26:31Z,2019-02-22T16:19:06Z,2019-02-22T16:19:12Z,MERGED,True,22,11,4,https://github.com/zack-vii,Fix: TdiDispatch class_d,3,[],https://github.com/MDSplus/mdsplus/pull/1574,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1574#issuecomment-466435498,,should fix #1573,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1575,2019-02-22T17:00:59Z,2019-02-25T20:06:00Z,2019-11-25T10:21:57Z,MERGED,True,22,6,2,https://github.com/GabrieleManduchi,Gm fix jscope local windows,2,[],https://github.com/MDSplus/mdsplus/pull/1575,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1575,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1575,2019-02-22T17:00:59Z,2019-02-25T20:06:00Z,2019-11-25T10:21:57Z,MERGED,True,22,6,2,https://github.com/GabrieleManduchi,Gm fix jscope local windows,2,[],https://github.com/MDSplus/mdsplus/pull/1575,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1575#issuecomment-466482597,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1575,2019-02-22T17:00:59Z,2019-02-25T20:06:00Z,2019-11-25T10:21:57Z,MERGED,True,22,6,2,https://github.com/GabrieleManduchi,Gm fix jscope local windows,2,[],https://github.com/MDSplus/mdsplus/pull/1575,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1575#issuecomment-467048521,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1576,2019-02-22T22:54:17Z,2019-02-28T22:26:46Z,2019-02-28T22:26:46Z,CLOSED,False,6,3,1,https://github.com/santorofer,Fix: A different way of checking the JDK version in jScopeFacade.java,2,[],https://github.com/MDSplus/mdsplus/pull/1576,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1576,"When building MDSplus in OS X Mojave, the resulting jScope will produce the following error when trying to execute the jScope script:
""jScope application required JDK version 1.2 or later""
Even though the version of JDK was 11.0.2
The code ~/mdsplus/javascope/jScope/jScopeFacade.java was failing to recognize this new version of JDK, or mistakenly recognized it as a version less that 1.2.
One interesting detail is that jTraverser didn't have that issue, I think this is because the jTraverserFacade.java doesn't seem to check for the version of JDK.","When building MDSplus in OS X Mojave, the resulting jScope will produce the following error when trying to execute the jScope script:
""jScope application required JDK version 1.2 or later""
Even though the version of JDK was 11.0.2
The code ~/mdsplus/javascope/jScope/jScopeFacade.java was failing to recognize this new version of JDK, or mistakenly recognized it as a version less that 1.2.
One interesting detail is that jTraverser didn't have that issue, I think this is because the jTraverserFacade.java doesn't seem to check for the version of JDK.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1576,2019-02-22T22:54:17Z,2019-02-28T22:26:46Z,2019-02-28T22:26:46Z,CLOSED,False,6,3,1,https://github.com/santorofer,Fix: A different way of checking the JDK version in jScopeFacade.java,2,[],https://github.com/MDSplus/mdsplus/pull/1576,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1576#issuecomment-466576816,"When building MDSplus in OS X Mojave, the resulting jScope will produce the following error when trying to execute the jScope script:
""jScope application required JDK version 1.2 or later""
Even though the version of JDK was 11.0.2
The code ~/mdsplus/javascope/jScope/jScopeFacade.java was failing to recognize this new version of JDK, or mistakenly recognized it as a version less that 1.2.
One interesting detail is that jTraverser didn't have that issue, I think this is because the jTraverserFacade.java doesn't seem to check for the version of JDK.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1577,2019-02-22T23:12:57Z,2019-02-28T22:26:28Z,2019-02-28T22:26:28Z,CLOSED,False,1009,528,47,https://github.com/santorofer,Fix: Build from source for Mac OS X: configure.ac and makefiles.in changes,3,[],https://github.com/MDSplus/mdsplus/pull/1577,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1577,"Mac OSX build from source issues:
Some modifications to:
configure.ac
Makefile.in for some of the projects. More specifically:
/mdstcpip
/mdsshr
/tditest
/mdslib
/mdsobjects
/labview
/xmdsshr
As well as changes to configure.ac so that Java programs can be use in Mac, and the UIL compiler can be used to compile the Motif applications.","Mac OSX build from source issues:
Some modifications to:
configure.ac
Makefile.in for some of the projects. More specifically:
/mdstcpip
/mdsshr
/tditest
/mdslib
/mdsobjects
/labview
/xmdsshr
As well as changes to configure.ac so that Java programs can be use in Mac, and the UIL compiler can be used to compile the Motif applications.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1577,2019-02-22T23:12:57Z,2019-02-28T22:26:28Z,2019-02-28T22:26:28Z,CLOSED,False,1009,528,47,https://github.com/santorofer,Fix: Build from source for Mac OS X: configure.ac and makefiles.in changes,3,[],https://github.com/MDSplus/mdsplus/pull/1577,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1577#issuecomment-466581173,"Mac OSX build from source issues:
Some modifications to:
configure.ac
Makefile.in for some of the projects. More specifically:
/mdstcpip
/mdsshr
/tditest
/mdslib
/mdsobjects
/labview
/xmdsshr
As well as changes to configure.ac so that Java programs can be use in Mac, and the UIL compiler can be used to compile the Motif applications.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1577,2019-02-22T23:12:57Z,2019-02-28T22:26:28Z,2019-02-28T22:26:28Z,CLOSED,False,1009,528,47,https://github.com/santorofer,Fix: Build from source for Mac OS X: configure.ac and makefiles.in changes,3,[],https://github.com/MDSplus/mdsplus/pull/1577,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1577#issuecomment-466648274,"Mac OSX build from source issues:
Some modifications to:
configure.ac
Makefile.in for some of the projects. More specifically:
/mdstcpip
/mdsshr
/tditest
/mdslib
/mdsobjects
/labview
/xmdsshr
As well as changes to configure.ac so that Java programs can be use in Mac, and the UIL compiler can be used to compile the Motif applications.","Please use
deploy/build --os=bootstrap

to automake Makefiles. Also you should rebase your branch on most recent alpha (do not use merge).
git remote add upstream https://github.com/MDSplus/mdsplus
git fetch upstream
git rebase upstream/alpha -i
<remove everything but your commits.>
git push -f",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1578,2019-02-23T14:30:28Z,2019-02-27T14:14:50Z,2019-03-22T16:05:19Z,MERGED,True,1009,528,47,https://github.com/zack-vii,Santorofer makefiles changes,2,[],https://github.com/MDSplus/mdsplus/pull/1578,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1578,rebased version of #1577 with correct bootstrap version (including #1576),rebased version of #1577 with correct bootstrap version (including #1576),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1579,2019-02-24T19:07:33Z,2019-03-06T00:29:23Z,2019-03-13T02:57:16Z,CLOSED,False,62,26,9,https://github.com/joshStillerman,Fix:  acq2106_423_Nst devices to acq435 threads,3,[],https://github.com/MDSplus/mdsplus/pull/1579,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1579,"In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.","In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1579,2019-02-24T19:07:33Z,2019-03-06T00:29:23Z,2019-03-13T02:57:16Z,CLOSED,False,62,26,9,https://github.com/joshStillerman,Fix:  acq2106_423_Nst devices to acq435 threads,3,[],https://github.com/MDSplus/mdsplus/pull/1579,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1579#issuecomment-466808379,"In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.","This is exactly why i don't like Devices to be shipped with MDSplus packages. device development seems to rely on commits to alpha before they can be properly tested. I would advice updating MDSplus on all involved servers to newest alpha and add the device with the Device.Add(tree,path,add_source=True).
if not already the case combine the carrier and module files into one. This way you can make changes to the device driver update the source in the node and you can be sure it will use the right code. once everything works as expected you can still PR the final version. Would this not speed up the development phase?
I read this in a mail:

There is supposed to be a threading issue if you have two devices. there should never be a race condition as long as you work on different nodes. the key of the static dict contains trename:shot:head_nid and consequently each device will have its own private entry.
TreeNode.copy() creates a new database that is invisible to other threads. whenever it requires the global context to be changed e.g. to do old tdi calls it activates PrivateCtx first so it should be threadsafe.
Using Worker(self.copy()) is redundant as the init method of the Worker is executed in the main thread.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1579,2019-02-24T19:07:33Z,2019-03-06T00:29:23Z,2019-03-13T02:57:16Z,CLOSED,False,62,26,9,https://github.com/joshStillerman,Fix:  acq2106_423_Nst devices to acq435 threads,3,[],https://github.com/MDSplus/mdsplus/pull/1579,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1579#issuecomment-467016317,"In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.",I don't completely understand how putting in the device code in the node improves the ability to test new device implementations. You certainly don't need to commit the device code to alpha to easily test new code. You simply use MDS_PYDEVICE_PATH to point to your development directory to test new implementations.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1579,2019-02-24T19:07:33Z,2019-03-06T00:29:23Z,2019-03-13T02:57:16Z,CLOSED,False,62,26,9,https://github.com/joshStillerman,Fix:  acq2106_423_Nst devices to acq435 threads,3,[],https://github.com/MDSplus/mdsplus/pull/1579,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1579#issuecomment-468440807,"In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.",This last commit addresses the questions that Fernando and I sent earlier. Adding getnewargs to the concrete classes enabled copy to call new successfully.  Tested with do /meth.  Will test with dispatch shortly.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1579,2019-02-24T19:07:33Z,2019-03-06T00:29:23Z,2019-03-13T02:57:16Z,CLOSED,False,62,26,9,https://github.com/joshStillerman,Fix:  acq2106_423_Nst devices to acq435 threads,3,[],https://github.com/MDSplus/mdsplus/pull/1579,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1579#issuecomment-468462492,"In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.","getnewargs does not work the way you think maybe. you told it to instanciate the copy with teh path, i.e. str(self), as argument which would use the global context agian.
The copy method that we need is not the builtin copy method but the one defined for MDSplus.Device.
since your process does not seem to find it i assume you need to update mdsplus-alpha on the worker running mdsip and restart the mdsip process to reload the MDSplus package.

This last commit addresses the questions that Fernando and I sent earlier. Adding getnewargs to the concrete classes enabled copy to call new successfully. Tested with do /meth. Will test with dispatch shortly.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1579,2019-02-24T19:07:33Z,2019-03-06T00:29:23Z,2019-03-13T02:57:16Z,CLOSED,False,62,26,9,https://github.com/joshStillerman,Fix:  acq2106_423_Nst devices to acq435 threads,3,[],https://github.com/MDSplus/mdsplus/pull/1579,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1579#issuecomment-468496457,"In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.","please make sure the mdsip action server is running
alpha_release-7-63-0
check with MDSplus.__version__
to check if the action server 'ACTIONSERVER' is loading the right version use
_host_port = getenv(""ACTIONSERVER"")
mdsconnect(_host_port)
mdsvalue('py(""v=MDSplus.__version__"",""v"")')",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1579,2019-02-24T19:07:33Z,2019-03-06T00:29:23Z,2019-03-13T02:57:16Z,CLOSED,False,62,26,9,https://github.com/joshStillerman,Fix:  acq2106_423_Nst devices to acq435 threads,3,[],https://github.com/MDSplus/mdsplus/pull/1579,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1579#issuecomment-469420254,"In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.","You broke the copy method by overwriting with from copy import copy:

list() will create a copy
lets not have one file per device if they depend on a super class. if you with to use the PyDevice functionality lets rename the py file to acq2106_423.py and make PyDevice check teh py file if module name startswith filename.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1579,2019-02-24T19:07:33Z,2019-03-06T00:29:23Z,2019-03-13T02:57:16Z,CLOSED,False,62,26,9,https://github.com/joshStillerman,Fix:  acq2106_423_Nst devices to acq435 threads,3,[],https://github.com/MDSplus/mdsplus/pull/1579,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1579#issuecomment-469470085,"In order to test the threading behavior under realistic conditions
we need at least 2 devices.  The acq435st was changed to use a
thread that copies the device object.
Issue: #1563 outlines some potential problems along these lines.
This commit changes to acq2106 to match the new acq435 code so they
can be tested on the SPARC network.",Please check if PR #1592 satisfies your needs.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1581,2019-02-25T13:58:49Z,2019-02-26T12:03:47Z,2019-02-26T12:03:47Z,CLOSED,False,345,452,10,https://github.com/zack-vii,Zck mdsip job cleanup,5,[],https://github.com/MDSplus/mdsplus/pull/1581,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1581,refactor mdsip for a more stable reply mechanism,refactor mdsip for a more stable reply mechanism,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1584,2019-02-26T15:20:46Z,2019-03-04T19:59:36Z,2019-03-04T19:59:42Z,CLOSED,False,42,9,6,https://github.com/zack-vii,Zck tditest,4,[],https://github.com/MDSplus/mdsplus/pull/1584,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1584,should fix  #1583,should fix  #1583,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1584,2019-02-26T15:20:46Z,2019-03-04T19:59:36Z,2019-03-04T19:59:42Z,CLOSED,False,42,9,6,https://github.com/zack-vii,Zck tditest,4,[],https://github.com/MDSplus/mdsplus/pull/1584,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1584#issuecomment-468025034,should fix  #1583,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1584,2019-02-26T15:20:46Z,2019-03-04T19:59:36Z,2019-03-04T19:59:42Z,CLOSED,False,42,9,6,https://github.com/zack-vii,Zck tditest,4,[],https://github.com/MDSplus/mdsplus/pull/1584,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1584#issuecomment-468457549,should fix  #1583,someone please approve,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1584,2019-02-26T15:20:46Z,2019-03-04T19:59:36Z,2019-03-04T19:59:42Z,CLOSED,False,42,9,6,https://github.com/zack-vii,Zck tditest,4,[],https://github.com/MDSplus/mdsplus/pull/1584,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1584#issuecomment-469354333,should fix  #1583,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1584,2019-02-26T15:20:46Z,2019-03-04T19:59:36Z,2019-03-04T19:59:42Z,CLOSED,False,42,9,6,https://github.com/zack-vii,Zck tditest,4,[],https://github.com/MDSplus/mdsplus/pull/1584,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1584#issuecomment-469400076,should fix  #1583,included in #1588,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1585,2019-02-26T15:48:28Z,2019-02-27T13:01:36Z,2019-02-27T13:03:21Z,MERGED,True,21,7,3,https://github.com/zack-vii,Fix: use new context to set default,3,[],https://github.com/MDSplus/mdsplus/pull/1585,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1585,should fix  #1582,should fix  #1582,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1586,2019-02-27T00:21:26Z,2019-03-11T22:49:47Z,2019-03-22T16:04:58Z,CLOSED,False,783,679,10,https://github.com/zack-vii,Zck mdsip job cleanup,10,[],https://github.com/MDSplus/mdsplus/pull/1586,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1586,refactor mdsip ServerShr,refactor mdsip ServerShr,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1587,2019-02-27T14:32:40Z,2019-03-04T14:42:55Z,2019-03-04T14:42:55Z,CLOSED,False,33,172,9,https://github.com/tfredian,Fix: Prevent segfault when tditest completes with EOF,7,[],https://github.com/MDSplus/mdsplus/pull/1587,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1587,"Readline can return a null when it hits the end of file. This will handle this event properly.
Fixes #1583","Readline can return a null when it hits the end of file. This will handle this event properly.
Fixes #1583",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1588,2019-02-28T22:25:36Z,2019-03-04T19:58:21Z,2019-03-04T19:58:25Z,MERGED,True,316,1282,24,https://github.com/zack-vii,Fix: retry SendReply on first socket error,21,[],https://github.com/MDSplus/mdsplus/pull/1588,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1588,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1589,2019-03-01T09:16:37Z,2019-03-01T10:48:37Z,2019-03-01T10:49:30Z,MERGED,True,527,914,39,https://github.com/AndreaRigoni,fix: exec-prefix must be set to ${prefix} if NONE,1,[],https://github.com/MDSplus/mdsplus/pull/1589,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1589,"If user provides --prefix argument the exec-prefix by default must be set to that prefix too
We inadvertently added this bug with Fernando setting exec-prefix before prefix. The fix is simply a swap between the two set lines. In addition the if clause was moved to AS_IF macro, and also I fired the bootstrap command using the Timo docker approach in order to cleanup all the Makefiles.in","If user provides --prefix argument the exec-prefix by default must be set to that prefix too
We inadvertently added this bug with Fernando setting exec-prefix before prefix. The fix is simply a swap between the two set lines. In addition the if clause was moved to AS_IF macro, and also I fired the bootstrap command using the Timo docker approach in order to cleanup all the Makefiles.in",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1589,2019-03-01T09:16:37Z,2019-03-01T10:48:37Z,2019-03-01T10:49:30Z,MERGED,True,527,914,39,https://github.com/AndreaRigoni,fix: exec-prefix must be set to ${prefix} if NONE,1,[],https://github.com/MDSplus/mdsplus/pull/1589,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1589#issuecomment-468615766,"If user provides --prefix argument the exec-prefix by default must be set to that prefix too
We inadvertently added this bug with Fernando setting exec-prefix before prefix. The fix is simply a swap between the two set lines. In addition the if clause was moved to AS_IF macro, and also I fired the bootstrap command using the Timo docker approach in order to cleanup all the Makefiles.in",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1591,2019-03-04T20:33:59Z,2019-03-05T12:50:07Z,2019-03-05T12:57:34Z,MERGED,True,42,14,3,https://github.com/zack-vii,Zck tditest,2,[],https://github.com/MDSplus/mdsplus/pull/1591,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1591,"tditest should not close on empty line and PUBLIC and PRIVATE should have the assign method
fixes #1583","tditest should not close on empty line and PUBLIC and PRIVATE should have the assign method
fixes #1583",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1592,2019-03-04T20:56:12Z,2019-03-05T23:14:26Z,2019-03-05T23:14:29Z,MERGED,True,118,496,11,https://github.com/zack-vii,Jas acq2106 new thread,8,[],https://github.com/MDSplus/mdsplus/pull/1592,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1592,reviewed version of #1579,reviewed version of #1579,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1592,2019-03-04T20:56:12Z,2019-03-05T23:14:26Z,2019-03-05T23:14:29Z,MERGED,True,118,496,11,https://github.com/zack-vii,Jas acq2106 new thread,8,[],https://github.com/MDSplus/mdsplus/pull/1592,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1592#issuecomment-469670860,reviewed version of #1579,i will branch off teh pydevcie and devhelp fix so if it gets merged you can rebase from there and finish your developement,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1593,2019-03-04T23:30:05Z,2019-03-05T12:53:25Z,2019-03-05T12:53:29Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: cannot unlock disconnected/freed connection,1,[],https://github.com/MDSplus/mdsplus/pull/1593,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1593,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1594,2019-03-05T13:00:58Z,2019-03-05T16:14:26Z,2019-03-05T16:14:30Z,MERGED,True,31,56,3,https://github.com/zack-vii,Zck pydevices,2,[],https://github.com/MDSplus/mdsplus/pull/1594,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1594,get more devices out of one pydevice module file,get more devices out of one pydevice module file,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1596,2019-03-05T16:13:28Z,2019-03-07T08:04:43Z,2019-03-07T08:04:43Z,MERGED,True,3,3,1,https://github.com/tfredian,Fix: Make the wsgi python submodule python3 compatible,1,[],https://github.com/MDSplus/mdsplus/pull/1596,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1596,"A module in the wsgi package used tabs for spaces which was incompatible with python3.
fixes #1595","A module in the wsgi package used tabs for spaces which was incompatible with python3.
fixes #1595",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1597,2019-03-05T21:14:53Z,2019-03-06T02:46:21Z,2019-03-06T02:46:21Z,CLOSED,False,0,0,0,https://github.com/zack-vii,Zck python gil cleanup,0,[],https://github.com/MDSplus/mdsplus/pull/1597,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1597,"mdsip tcp select loop uses timeout to become cancelable
additions to pyhton test suite","mdsip tcp select loop uses timeout to become cancelable
additions to pyhton test suite",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1598,2019-03-05T22:52:25Z,2019-03-06T14:05:08Z,2019-03-06T14:05:10Z,MERGED,True,6,2,1,https://github.com/zack-vii,Fix: added timeout to ioroutinestcp select loop,1,[],https://github.com/MDSplus/mdsplus/pull/1598,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1598,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1599,2019-03-06T01:17:51Z,2019-03-06T14:06:33Z,2019-03-06T14:06:36Z,MERGED,True,55,51,3,https://github.com/zack-vii,Zck TreeDoMethodA avoids MDS_END_ARG,2,[],https://github.com/MDSplus/mdsplus/pull/1599,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1599,tcl_do_method did not handle new python device methods which return None on success,tcl_do_method did not handle new python device methods which return None on success,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1600,2019-03-06T10:40:34Z,2019-03-07T16:47:34Z,2019-03-07T16:47:48Z,MERGED,True,205,164,14,https://github.com/zack-vii,Zck python test cleanup,11,[],https://github.com/MDSplus/mdsplus/pull/1600,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1600,only pyhton Tests improvements.,only pyhton Tests improvements.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1600,2019-03-06T10:40:34Z,2019-03-07T16:47:34Z,2019-03-07T16:47:48Z,MERGED,True,205,164,14,https://github.com/zack-vii,Zck python test cleanup,11,[],https://github.com/MDSplus/mdsplus/pull/1600,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1600#issuecomment-470172988,only pyhton Tests improvements.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1600,2019-03-06T10:40:34Z,2019-03-07T16:47:34Z,2019-03-07T16:47:48Z,MERGED,True,205,164,14,https://github.com/zack-vii,Zck python test cleanup,11,[],https://github.com/MDSplus/mdsplus/pull/1600,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1600#issuecomment-470349931,only pyhton Tests improvements.,"since SendArg and GetAnswerInfo belong together they should handle the lock in a special way.. in particular they should abort and return an error if the connection has been marked for disconnection,
SendArg should lock from the first message and for special mds_io messages. otherwise it should verify the CON_SENDARG state. GetAnswerInfo does the latter and unlocks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1601,2019-03-06T20:37:39Z,2019-03-07T00:04:47Z,2019-03-07T00:04:47Z,CLOSED,False,145,117,10,https://github.com/tfredian,Zack vii zck python gil cleanup,8,[],https://github.com/MDSplus/mdsplus/pull/1601,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1601,Adds a commit to Timo's #1600,Adds a commit to Timo's #1600,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1602,2019-03-07T10:13:22Z,2019-03-07T16:48:09Z,2019-03-07T16:48:15Z,MERGED,True,19,8,4,https://github.com/zack-vii,Zck fixes,4,[],https://github.com/MDSplus/mdsplus/pull/1602,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1602,"minor bug fixes

get set current shot init with status=0 which is undefined
mdsip helptext
tditest tab completion adds '(' even to $constants
tcl do/method should return 1 like devices used to do","minor bug fixes

get set current shot init with status=0 which is undefined
mdsip helptext
tditest tab completion adds '(' even to $constants
tcl do/method should return 1 like devices used to do",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1604,2019-03-07T15:37:01Z,2019-03-11T22:49:23Z,2019-03-11T22:49:26Z,MERGED,True,444,644,130,https://github.com/zack-vii,Zck obsolescent funs,8,[],https://github.com/MDSplus/mdsplus/pull/1604,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1604,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1605,2019-03-10T20:56:18Z,2019-03-12T12:02:28Z,2019-03-12T12:02:28Z,MERGED,True,879,447,5,https://github.com/zack-vii,Zck python setup,33,[],https://github.com/MDSplus/mdsplus/pull/1605,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1605,"refactor of windows installer
more options and some fixes","refactor of windows installer
more options and some fixes",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1605,2019-03-10T20:56:18Z,2019-03-12T12:02:28Z,2019-03-12T12:02:28Z,MERGED,True,879,447,5,https://github.com/zack-vii,Zck python setup,33,[],https://github.com/MDSplus/mdsplus/pull/1605,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1605#issuecomment-471770859,"refactor of windows installer
more options and some fixes","I think it is good now. this MUI2 update look nice and allows for descriptions for each component.
Also the add and remove from *_path envs works now. It now removes teh entry from the list instead of removing the entire env. also it has a memory of the last install dir is the installer is run as update.
Also i took the liberty to remove old versions of Labview as they are not maintained anymore and can be downloaded from github or are already install thru an older version of MDSplus.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1607,2019-03-11T23:48:10Z,2019-03-12T11:59:33Z,2019-03-22T16:04:42Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: Ident should keep its treeref,1,[],https://github.com/MDSplus/mdsplus/pull/1607,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1607,should fix #1606,should fix #1606,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1608,2019-03-12T15:28:29Z,2019-03-12T17:26:41Z,2019-03-12T17:28:24Z,MERGED,True,318,245,1,https://github.com/zack-vii,Zck windows installer,2,[],https://github.com/MDSplus/mdsplus/pull/1608,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1608,added documentation to nsis script and exclude mdsiptest.exe,added documentation to nsis script and exclude mdsiptest.exe,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1609,2019-03-12T19:46:17Z,2019-03-13T01:01:59Z,2019-03-13T01:02:03Z,MERGED,True,49,908,33,https://github.com/zack-vii,Zck new icons,6,[],https://github.com/MDSplus/mdsplus/pull/1609,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1609,"include icons in actlog.exe, tdic.exe, tditest.exe, and tcl_commands.dll
added icon for traverser2
update wininstaller to use new icon location
updated *.desktop  to use new icons","include icons in actlog.exe, tdic.exe, tditest.exe, and tcl_commands.dll
added icon for traverser2
update wininstaller to use new icon location
updated *.desktop  to use new icons",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1610,2019-03-12T20:04:23Z,2019-03-13T03:06:06Z,2019-03-13T03:06:06Z,MERGED,True,11,0,1,https://github.com/tfredian,Fix: A commit message content can break the release tag jaon,1,[],https://github.com/MDSplus/mdsplus/pull/1610,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1610,"The release tag sent to github is a jason which contains a list
of the new commits added to make the release. If this contains
certain charactors it might break the jason format which prevents
the release from being tagged. This first tries with the comments
and if that fails will just send the tag with a comment indicating
the changes could not be described in the tag info.","The release tag sent to github is a jason which contains a list
of the new commits added to make the release. If this contains
certain charactors it might break the jason format which prevents
the release from being tagged. This first tries with the comments
and if that fails will just send the tag with a comment indicating
the changes could not be described in the tag info.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1610,2019-03-12T20:04:23Z,2019-03-13T03:06:06Z,2019-03-13T03:06:06Z,MERGED,True,11,0,1,https://github.com/tfredian,Fix: A commit message content can break the release tag jaon,1,[],https://github.com/MDSplus/mdsplus/pull/1610,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1610#issuecomment-472258589,"The release tag sent to github is a jason which contains a list
of the new commits added to make the release. If this contains
certain charactors it might break the jason format which prevents
the release from being tagged. This first tries with the comments
and if that fails will just send the tag with a comment indicating
the changes could not be described in the tag info.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1611,2019-03-13T11:11:49Z,2019-03-13T18:39:17Z,2019-03-13T18:39:23Z,MERGED,True,149,102,24,https://github.com/zack-vii,Build: added pngs; moved pngs to related package; added actmon desktop,5,[],https://github.com/MDSplus/mdsplus/pull/1611,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1611,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1612,2019-03-13T19:22:32Z,2019-03-13T21:10:45Z,2019-03-13T21:10:50Z,MERGED,True,7270,4923,209,https://github.com/zack-vii,Fix: updated javatraverser2,1,[],https://github.com/MDSplus/mdsplus/pull/1612,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1612,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1613,2019-03-15T10:30:38Z,2019-03-18T14:55:20Z,2019-03-18T14:55:27Z,MERGED,True,278,254,14,https://github.com/zack-vii,Build: Build: alpine packaging fixes for 3.6 [alpha],10,[],https://github.com/MDSplus/mdsplus/pull/1613,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1613,alpine fix apks build. generate .abuild on the fly and prevent build script from wiping git source folder,alpine fix apks build. generate .abuild on the fly and prevent build script from wiping git source folder,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1614,2019-03-15T11:04:33Z,2019-03-18T14:54:04Z,2019-03-18T14:54:08Z,MERGED,True,298,277,14,https://github.com/zack-vii,Build: alpine packaging fixes for 3.6 [stable],11,[],https://github.com/MDSplus/mdsplus/pull/1614,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1614,… build script from wiping git source folder,… build script from wiping git source folder,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1614,2019-03-15T11:04:33Z,2019-03-18T14:54:04Z,2019-03-18T14:54:08Z,MERGED,True,298,277,14,https://github.com/zack-vii,Build: alpine packaging fixes for 3.6 [stable],11,[],https://github.com/MDSplus/mdsplus/pull/1614,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1614#issuecomment-473256190,… build script from wiping git source folder,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1615,2019-03-18T18:31:21Z,2019-03-18T19:08:33Z,2019-03-18T19:08:35Z,MERGED,True,25,10,3,https://github.com/zack-vii,Zck xtreeshr 2arg range,2,[],https://github.com/MDSplus/mdsplus/pull/1615,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1615,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1616,2019-03-18T19:15:25Z,2019-03-18T19:59:35Z,2019-03-18T19:59:35Z,MERGED,True,25,8,3,https://github.com/zack-vii,Zck xtreeshr 2arg range,2,[],https://github.com/MDSplus/mdsplus/pull/1616,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1616,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1617,2019-03-18T20:30:49Z,2019-03-19T15:00:32Z,2019-03-19T15:00:44Z,MERGED,True,8,2,2,https://github.com/zack-vii,Tests: added test for 2arg range dim in segments,1,[],https://github.com/MDSplus/mdsplus/pull/1617,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1617,…egment and last one truncated,…egment and last one truncated,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1618,2019-03-19T14:24:28Z,2019-03-19T14:59:47Z,2019-03-19T14:59:47Z,MERGED,True,5,1,1,https://github.com/tfredian,Fix: Use tmp directory for createrepo repodata,2,[],https://github.com/MDSplus/mdsplus/pull/1618,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1618,"The use of createrepo on nfs served repository directory causes
errors. The fix will create the repodata in a temporary location
and rsync the data to the real repository directory instead.","The use of createrepo on nfs served repository directory causes
errors. The fix will create the repodata in a temporary location
and rsync the data to the real repository directory instead.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1619,2019-03-19T15:10:20Z,2019-03-19T16:26:58Z,2019-03-19T16:26:58Z,MERGED,True,5,1,1,https://github.com/tfredian,Twf fix createrepo stable,3,[],https://github.com/MDSplus/mdsplus/pull/1619,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1619,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1620,2019-03-19T15:54:43Z,2019-03-19T16:34:32Z,2019-03-19T16:34:40Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: avoid using tdi vars in internal expressions,1,[],https://github.com/MDSplus/mdsplus/pull/1620,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1620,before it was using _ which would cause a failure if dim contains _,before it was using _ which would cause a failure if dim contains _,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1621,2019-03-19T15:55:40Z,2019-03-19T16:25:04Z,2019-03-19T16:25:04Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Fix typo in createrepo fix,1,[],https://github.com/MDSplus/mdsplus/pull/1621,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1621,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1622,2019-03-19T17:20:34Z,2019-03-19T20:06:58Z,2019-03-19T20:10:47Z,MERGED,True,73,39,6,https://github.com/zack-vii,Zck getsegment treats dim as data if dim not stored.,7,[],https://github.com/MDSplus/mdsplus/pull/1622,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1622,"You can store normal segments (not opaque via TreeMakeSegment) without dim (pass val(0), i.e. NULL). Reading the segment will behave as if the dimension is the same a the raw data of the segment.
This allows to efficiently store timestamps, while still be able to use tools like provided by xtreeshr.","You can store normal segments (not opaque via TreeMakeSegment) without dim (pass val(0), i.e. NULL). Reading the segment will behave as if the dimension is the same a the raw data of the segment.
This allows to efficiently store timestamps, while still be able to use tools like provided by xtreeshr.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1623,2019-03-20T12:58:48Z,2019-03-20T13:49:40Z,2019-03-20T16:41:51Z,MERGED,True,2,1,1,https://github.com/zack-vii,Fix: trim_last_segment must check for tmp==NULL,1,[],https://github.com/MDSplus/mdsplus/pull/1623,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1623,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1624,2019-03-20T16:52:04Z,2019-03-20T20:37:45Z,2019-03-20T20:37:52Z,MERGED,True,86,97,17,https://github.com/zack-vii,Zck python cleanup step 1,8,[],https://github.com/MDSplus/mdsplus/pull/1624,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1624,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1625,2019-03-20T20:31:31Z,2019-03-20T20:49:20Z,2019-03-20T20:49:20Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: Allow backslash in release tag,1,[],https://github.com/MDSplus/mdsplus/pull/1625,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1625,"The release tag information includes the comments
from commits added since the previous release. If a commit
comment includes a backslash then this needs to be escaped or
it will produce a json error when sending the tag to github.
This should permit comments with backslashes to be included
in the release text.
Note: The added gsub in the awk command looks to be a noop but due
to strange handling of backslashes by awk the first 4 backslashes end up
matching a single backslash in the input while the second 4 backslashes
ends up substituting a double backslash.","The release tag information includes the comments
from commits added since the previous release. If a commit
comment includes a backslash then this needs to be escaped or
it will produce a json error when sending the tag to github.
This should permit comments with backslashes to be included
in the release text.
Note: The added gsub in the awk command looks to be a noop but due
to strange handling of backslashes by awk the first 4 backslashes end up
matching a single backslash in the input while the second 4 backslashes
ends up substituting a double backslash.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1626,2019-03-21T16:53:31Z,2019-03-22T16:13:44Z,2019-03-22T16:13:47Z,MERGED,True,498,316,21,https://github.com/zack-vii,Zck python wsgi,10,[],https://github.com/MDSplus/mdsplus/pull/1626,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1626,"added template scripts and conf files for an easy setup with apache2.
fixed most of wsgi's tree context problems.
moves js and html under wsgi.
integrated mdsplus_wsgi.py in wsgi.__init__.py

from MDSplus.wsgi import application","added template scripts and conf files for an easy setup with apache2.
fixed most of wsgi's tree context problems.
moves js and html under wsgi.
integrated mdsplus_wsgi.py in wsgi.__init__.py

from MDSplus.wsgi import application",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1626,2019-03-21T16:53:31Z,2019-03-22T16:13:44Z,2019-03-22T16:13:47Z,MERGED,True,498,316,21,https://github.com/zack-vii,Zck python wsgi,10,[],https://github.com/MDSplus/mdsplus/pull/1626,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1626#issuecomment-475654372,"added template scripts and conf files for an easy setup with apache2.
fixed most of wsgi's tree context problems.
moves js and html under wsgi.
integrated mdsplus_wsgi.py in wsgi.__init__.py

from MDSplus.wsgi import application",Is this ready for test/review ?  You keep pushing commits to it,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1626,2019-03-21T16:53:31Z,2019-03-22T16:13:44Z,2019-03-22T16:13:47Z,MERGED,True,498,316,21,https://github.com/zack-vii,Zck python wsgi,10,[],https://github.com/MDSplus/mdsplus/pull/1626,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1626#issuecomment-475658227,"added template scripts and conf files for an easy setup with apache2.
fixed most of wsgi's tree context problems.
moves js and html under wsgi.
integrated mdsplus_wsgi.py in wsgi.__init__.py

from MDSplus.wsgi import application",Oh yes it is.. just working thru more improvements. I wont be pushing more then so this can be milestone.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1627,2019-03-22T14:49:09Z,2019-03-22T15:44:48Z,2019-03-22T15:44:48Z,CLOSED,False,10,0,1,https://github.com/WhoBrokeTheBuild,Adding increment function to python MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/1627,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1627,Adding MDSplus.Tree.increment(treename) function to mirror functionality from set current treename/increment,Adding MDSplus.Tree.increment(treename) function to mirror functionality from set current treename/increment,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1627,2019-03-22T14:49:09Z,2019-03-22T15:44:48Z,2019-03-22T15:44:48Z,CLOSED,False,10,0,1,https://github.com/WhoBrokeTheBuild,Adding increment function to python MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/1627,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1627#issuecomment-475649926,Adding MDSplus.Tree.increment(treename) function to mirror functionality from set current treename/increment,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1627,2019-03-22T14:49:09Z,2019-03-22T15:44:48Z,2019-03-22T15:44:48Z,CLOSED,False,10,0,1,https://github.com/WhoBrokeTheBuild,Adding increment function to python MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/1627,https://github.com/WhoBrokeTheBuild,3,https://github.com/MDSplus/mdsplus/pull/1627#issuecomment-475652395,Adding MDSplus.Tree.increment(treename) function to mirror functionality from set current treename/increment,"That would be wonderful, how about adding the three instance methods:
increment()
setCurrent()
getCurrent()
(the latter two are only static at the moment, which feels like it could be improved)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1627,2019-03-22T14:49:09Z,2019-03-22T15:44:48Z,2019-03-22T15:44:48Z,CLOSED,False,10,0,1,https://github.com/WhoBrokeTheBuild,Adding increment function to python MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/1627,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1627#issuecomment-475653094,Adding MDSplus.Tree.increment(treename) function to mirror functionality from set current treename/increment,"Yep sounds good
…
 On Mar 22, 2019, at 10:55 AM, Stephen Lane-Walsh ***@***.***> wrote:

 That would be wonderful, how about adding the three instance methods:
 increment()
 setCurrent()
 getCurrent()
 (the latter two are only static at the moment, which feels like it could be improved)

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub <#1627 (comment)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AHHQZfNg8NGeiWccik5GnAJydy80XmiDks5vZO7jgaJpZM4cDvUc>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1627,2019-03-22T14:49:09Z,2019-03-22T15:44:48Z,2019-03-22T15:44:48Z,CLOSED,False,10,0,1,https://github.com/WhoBrokeTheBuild,Adding increment function to python MDSplus.Tree,1,[],https://github.com/MDSplus/mdsplus/pull/1627,https://github.com/WhoBrokeTheBuild,5,https://github.com/MDSplus/mdsplus/pull/1627#issuecomment-475656982,Adding MDSplus.Tree.increment(treename) function to mirror functionality from set current treename/increment,"Oh, right. So python can't have two methods of the same name, even if one is static. My first thought would be to change the static ones to be setCurrentShotForTree() or the like, but then that would break the current functionality. What would be a good naming scheme for the member equivalents?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1628,2019-03-22T15:39:15Z,2019-03-22T16:13:08Z,2019-03-22T16:13:20Z,MERGED,True,45,12,2,https://github.com/zack-vii,Feature: make set/getCurrent classstaticX and added incrementCurrent,2,[],https://github.com/MDSplus/mdsplus/pull/1628,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1628,reversion of PR #1627,reversion of PR #1627,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1629,2019-03-22T20:51:37Z,2019-03-25T13:04:25Z,2019-03-25T13:04:25Z,MERGED,True,164,27,1,https://github.com/WhoBrokeTheBuild,Added reader/writer threads with queues to ACQ423,1,[],https://github.com/MDSplus/mdsplus/pull/1629,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1629,"ACQ423 devices now spawn an MDSWorker thread to write data to MDS, and a DeviceWorker thread to read data from the device.
The workers create and recycle buffers as needed using two queues.","ACQ423 devices now spawn an MDSWorker thread to write data to MDS, and a DeviceWorker thread to read data from the device.
The workers create and recycle buffers as needed using two queues.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1629,2019-03-22T20:51:37Z,2019-03-25T13:04:25Z,2019-03-25T13:04:25Z,MERGED,True,164,27,1,https://github.com/WhoBrokeTheBuild,Added reader/writer threads with queues to ACQ423,1,[],https://github.com/MDSplus/mdsplus/pull/1629,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1629#issuecomment-475778448,"ACQ423 devices now spawn an MDSWorker thread to write data to MDS, and a DeviceWorker thread to read data from the device.
The workers create and recycle buffers as needed using two queues.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1629,2019-03-22T20:51:37Z,2019-03-25T13:04:25Z,2019-03-25T13:04:25Z,MERGED,True,164,27,1,https://github.com/WhoBrokeTheBuild,Added reader/writer threads with queues to ACQ423,1,[],https://github.com/MDSplus/mdsplus/pull/1629,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1629#issuecomment-475781618,"ACQ423 devices now spawn an MDSWorker thread to write data to MDS, and a DeviceWorker thread to read data from the device.
The workers create and recycle buffers as needed using two queues.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1630,2019-03-22T22:41:08Z,2019-03-26T01:22:36Z,2019-03-26T01:22:39Z,MERGED,True,290,277,13,https://github.com/zack-vii,"Fix: added examples and fixed some more doXxx, TODO: doMdsip and doScope",4,[],https://github.com/MDSplus/mdsplus/pull/1630,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1630,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1631,2019-03-26T01:25:39Z,2019-03-28T13:00:17Z,2019-03-28T13:01:17Z,MERGED,True,954,1753,11,https://github.com/zack-vii,Zck python; refactor ScopeUtilities,20,[],https://github.com/MDSplus/mdsplus/pull/1631,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1631,might still have memory issues,might still have memory issues,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1631,2019-03-26T01:25:39Z,2019-03-28T13:00:17Z,2019-03-28T13:01:17Z,MERGED,True,954,1753,11,https://github.com/zack-vii,Zck python; refactor ScopeUtilities,20,[],https://github.com/MDSplus/mdsplus/pull/1631,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1631#issuecomment-477234332,might still have memory issues,this might be it,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1631,2019-03-26T01:25:39Z,2019-03-28T13:00:17Z,2019-03-28T13:01:17Z,MERGED,True,954,1753,11,https://github.com/zack-vii,Zck python; refactor ScopeUtilities,20,[],https://github.com/MDSplus/mdsplus/pull/1631,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1631#issuecomment-477381425,might still have memory issues,please review followup #1634 instead,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1631,2019-03-26T01:25:39Z,2019-03-28T13:00:17Z,2019-03-28T13:01:17Z,MERGED,True,954,1753,11,https://github.com/zack-vii,Zck python; refactor ScopeUtilities,20,[],https://github.com/MDSplus/mdsplus/pull/1631,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1631#issuecomment-477485469,might still have memory issues,"The changes to ScopeUtilities seem reasonable, but it is hard for me to verify in the code due to the large number of modifications.
Let's cross fingers. I will make some more extensive tests in order to make sure that nothing got broken.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1631,2019-03-26T01:25:39Z,2019-03-28T13:00:17Z,2019-03-28T13:01:17Z,MERGED,True,954,1753,11,https://github.com/zack-vii,Zck python; refactor ScopeUtilities,20,[],https://github.com/MDSplus/mdsplus/pull/1631,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1631#issuecomment-477584801,might still have memory issues,cool thanks. if there is anything different now it should be easier to adapt though.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1632,2019-03-26T19:15:24Z,2019-04-10T21:28:53Z,2019-04-10T21:28:54Z,MERGED,True,481,50,4,https://github.com/WhoBrokeTheBuild,Feature: Cryocon24c support & Cryocon18i updates,18,[],https://github.com/MDSplus/mdsplus/pull/1632,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1632,"Adds support for the Cryocon24c device
The cryocon24c uses a long trend device CRYOCON24C_TREND that samples data at a fixed RATE, defaulting to the usually slower TREND_RATE. When a shot is started by calling INIT() on the sister CRYOCON24C_SHOT device, located in the shot tree, the RATE is increased to the usually faster SHOT_RATE. When the shot is concluded by calling the shot device's STOP() method, the data is copied from the trend device to the shot device, on a timescale of T1 to T2, and the RATE is returned to TREND_RATE.","Adds support for the Cryocon24c device
The cryocon24c uses a long trend device CRYOCON24C_TREND that samples data at a fixed RATE, defaulting to the usually slower TREND_RATE. When a shot is started by calling INIT() on the sister CRYOCON24C_SHOT device, located in the shot tree, the RATE is increased to the usually faster SHOT_RATE. When the shot is concluded by calling the shot device's STOP() method, the data is copied from the trend device to the shot device, on a timescale of T1 to T2, and the RATE is returned to TREND_RATE.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1632,2019-03-26T19:15:24Z,2019-04-10T21:28:53Z,2019-04-10T21:28:54Z,MERGED,True,481,50,4,https://github.com/WhoBrokeTheBuild,Feature: Cryocon24c support & Cryocon18i updates,18,[],https://github.com/MDSplus/mdsplus/pull/1632,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1632#issuecomment-476806489,"Adds support for the Cryocon24c device
The cryocon24c uses a long trend device CRYOCON24C_TREND that samples data at a fixed RATE, defaulting to the usually slower TREND_RATE. When a shot is started by calling INIT() on the sister CRYOCON24C_SHOT device, located in the shot tree, the RATE is increased to the usually faster SHOT_RATE. When the shot is concluded by calling the shot device's STOP() method, the data is copied from the trend device to the shot device, on a timescale of T1 to T2, and the RATE is returned to TREND_RATE.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1632,2019-03-26T19:15:24Z,2019-04-10T21:28:53Z,2019-04-10T21:28:54Z,MERGED,True,481,50,4,https://github.com/WhoBrokeTheBuild,Feature: Cryocon24c support & Cryocon18i updates,18,[],https://github.com/MDSplus/mdsplus/pull/1632,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1632#issuecomment-477356146,"Adds support for the Cryocon24c device
The cryocon24c uses a long trend device CRYOCON24C_TREND that samples data at a fixed RATE, defaulting to the usually slower TREND_RATE. When a shot is started by calling INIT() on the sister CRYOCON24C_SHOT device, located in the shot tree, the RATE is increased to the usually faster SHOT_RATE. When the shot is concluded by calling the shot device's STOP() method, the data is copied from the trend device to the shot device, on a timescale of T1 to T2, and the RATE is returned to TREND_RATE.","This PR is still in progress Fernando and Stephen are working on the last few updates to these devices.
…
 On Mar 27, 2019, at 4:53 PM, Timo Schroeder ***@***.***> wrote:

 @zack-vii approved this pull request.

 Its hard to review this without the device.. It looks like it ok.. just make sure it work under python 2.7 an 3.x likewise. If you are happy with it merge it.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub <#1632 (review)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AHHQZdhGEoiv0b-8HsfTKpH7ED_vDRE9ks5va9pfgaJpZM4cMP66>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1632,2019-03-26T19:15:24Z,2019-04-10T21:28:53Z,2019-04-10T21:28:54Z,MERGED,True,481,50,4,https://github.com/WhoBrokeTheBuild,Feature: Cryocon24c support & Cryocon18i updates,18,[],https://github.com/MDSplus/mdsplus/pull/1632,https://github.com/WhoBrokeTheBuild,4,https://github.com/MDSplus/mdsplus/pull/1632#issuecomment-479075589,"Adds support for the Cryocon24c device
The cryocon24c uses a long trend device CRYOCON24C_TREND that samples data at a fixed RATE, defaulting to the usually slower TREND_RATE. When a shot is started by calling INIT() on the sister CRYOCON24C_SHOT device, located in the shot tree, the RATE is increased to the usually faster SHOT_RATE. When the shot is concluded by calling the shot device's STOP() method, the data is copied from the trend device to the shot device, on a timescale of T1 to T2, and the RATE is returned to TREND_RATE.","This PR will include the addition of the 24c and bug fixes for the 18i.
Fernando & I will merge it EOD today unless there are any issues found while testing.
A future PR will include modifications to the 24c and 18i to give them a fixed-rate trend function called by systemd (like the 18i) and a store function into the shot tree (like the 24c) as well as additional data collection for PID gain and loop output ranges.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1634,2019-03-27T22:50:53Z,2019-03-29T17:10:13Z,2019-03-29T17:10:17Z,MERGED,True,734,852,18,https://github.com/zack-vii,"Zck scope utilities, + StrConcat",14,[],https://github.com/MDSplus/mdsplus/pull/1634,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1634,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1634,2019-03-27T22:50:53Z,2019-03-29T17:10:13Z,2019-03-29T17:10:17Z,MERGED,True,734,852,18,https://github.com/zack-vii,"Zck scope utilities, + StrConcat",14,[],https://github.com/MDSplus/mdsplus/pull/1634,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1634#issuecomment-477381162,,same as #1631 + one improvement to StrConCat,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1634,2019-03-27T22:50:53Z,2019-03-29T17:10:13Z,2019-03-29T17:10:17Z,MERGED,True,734,852,18,https://github.com/zack-vii,"Zck scope utilities, + StrConcat",14,[],https://github.com/MDSplus/mdsplus/pull/1634,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1634#issuecomment-477961768,,ready,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1636,2019-03-28T17:08:31Z,2019-03-29T15:14:12Z,2019-03-29T15:14:12Z,MERGED,True,6,2,1,https://github.com/WhoBrokeTheBuild,Fixed acq423 time duplication bug by truncating calculations,1,[],https://github.com/MDSplus/mdsplus/pull/1636,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1636,"The time was accumulating due to MDSplus rounding to a precision of 3, and python rounding to a much higher precision, leading to time values being duplicated at the end/beginning of segments.","The time was accumulating due to MDSplus rounding to a precision of 3, and python rounding to a much higher precision, leading to time values being duplicated at the end/beginning of segments.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1636,2019-03-28T17:08:31Z,2019-03-29T15:14:12Z,2019-03-29T15:14:12Z,MERGED,True,6,2,1,https://github.com/WhoBrokeTheBuild,Fixed acq423 time duplication bug by truncating calculations,1,[],https://github.com/MDSplus/mdsplus/pull/1636,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1636#issuecomment-477687276,"The time was accumulating due to MDSplus rounding to a precision of 3, and python rounding to a much higher precision, leading to time values being duplicated at the end/beginning of segments.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1636,2019-03-28T17:08:31Z,2019-03-29T15:14:12Z,2019-03-29T15:14:12Z,MERGED,True,6,2,1,https://github.com/WhoBrokeTheBuild,Fixed acq423 time duplication bug by truncating calculations,1,[],https://github.com/MDSplus/mdsplus/pull/1636,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1636#issuecomment-477720458,"The time was accumulating due to MDSplus rounding to a precision of 3, and python rounding to a much higher precision, leading to time values being duplicated at the end/beginning of segments.",Ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1637,2019-03-29T09:55:02Z,2019-03-30T19:06:30Z,2019-08-17T10:16:30Z,MERGED,True,13,6,2,https://github.com/zack-vii,Build: added ChangeLog back in installer (optional),2,[],https://github.com/MDSplus/mdsplus/pull/1637,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1637,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1638,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-478563705,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,can we vote on this one.. its changing the default behavior but i don't think this is an issue.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-478584743,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,I think Gabriele will need to review this to see if this might break existing user codes etc.. Gabriele did most if not all of the xtreeshr implementation.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-478597185,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,"we probably should add some api to set the resample and squish mode without extended Attributes.
maybe as additional args to an extended XTreeSetTimeContext(start,end,delta,squish,resample).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-478613502,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,"The original default sampling mode was interpolation which makes only sense when oversampling, i.e. when delta_requested is smaller than delta_timebase. however, judged by the sloppiness of the output timebase (nodes are processed segment by segments which leads to inconsistencies at the segment edges.) I assume xtreeshr is meant to be used rather for data reduction than for conversion of timebases of different signals.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-478670679,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,added some tests for the other modes. they all seem to work now.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-478873283,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,I added an env that allows to set the default resampling mode. Maybe we can have another less permanent way to set the params. Maybe a way that is private and does not involve writing to the tree. Maybe we can improve the handling of segment bounds and make the reduction available for non segmented nodes as well. Maybe for this we should make the data reduction implementation more transparent and predictable. Maybe we should be working (optional) with (double or native) timestamps. But that would be somewhere in the future.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-479786058,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,@GabrieleManduchi : could you comment on this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-479796598,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,"A detailed check is very difficult due to the large amount of changed code. In any case the code appears to be improved, but I would recommend to avoid the definition of macros for segments of code and using functions instead, leading to the same effect in compacting the code, but allowing a better debug. Debugging a code with macros for pieces of code is a nightmare!
Pleas fix also the bug I have reported on slack:

Found the bug. It happens when the signal is not a segmented one (at least on my use case, I think you have tested on segmented signals)
in estimateNumSamples() of ScopeUtilities.c, when recIsSegmented() returns 0 (as happens with non segmented signals), you must set the out arguments dMin and dMax before returning -1
In my code I changes as follows:
int nid = recIsSegmented(dsc);
if(!nid)
{
const double xmin = to_doublex(xMin->pointer,xMin->dtype,-INFINITY,TRUE);
const double xmax = to_doublex(xMax->pointer,xMax->dtype, INFINITY,TRUE);
*dMin = xmin;
*dMax = xmax;
return -1;
}
and it works.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-479803672,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,well in this case the macro is the only way to avoid code duplication because tge only code change is the data type. in case we want to debug something i would recommend to expand the code beforehand just for this purpose. i will make the code change right after this meeting,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/GabrieleManduchi,11,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-479808084,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,"My concern was for  INTERPOLATION_FORLOOP(type), but, yes, you are right. This is a C and not a C++ program for which templates would fit.
After you have reported the fix I will approve the PR and after merging I will make some further tests on jScope dynamic resampling.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-479823713,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,i extended your mdsmisc fix by evaluating and setting min max for any -1 result,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/GabrieleManduchi,13,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-479874804,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,"There are still several problems, look at slack",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1638,2019-03-29T19:18:18Z,2019-04-04T09:36:06Z,2019-04-04T14:02:24Z,MERGED,True,391,561,4,https://github.com/zack-vii,Fix: added average resample mode to xtreeshr and made it default,8,[],https://github.com/MDSplus/mdsplus/pull/1638,https://github.com/GabrieleManduchi,14,https://github.com/MDSplus/mdsplus/pull/1638#issuecomment-479909946,This one is tricky.. the default resampling method in xtreeshr is worthless if used for evaluation and has not real use (at least i cannot think of any non artificial) This PR will change the default resampling method to moving average.,"Ok, after a sequence of 5 bugs my test case seems to work.
Please refer to slack for the list of bug fixes, or let me know if you want I make a PR",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1639,2019-04-02T15:32:37Z,2019-04-02T16:49:56Z,2019-04-02T16:50:12Z,MERGED,True,27,6,2,https://github.com/tfredian,Fix: mdsip not getting connection hostname,3,[],https://github.com/MDSplus/mdsplus/pull/1639,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1639,"Changes to mdsip broke the mapping rules based on hostnames.
This should fix this problem.","Changes to mdsip broke the mapping rules based on hostnames.
This should fix this problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1640,2019-04-04T09:53:17Z,2019-04-04T14:52:50Z,2019-05-30T12:35:40Z,MERGED,True,623,258,4,https://github.com/GabrieleManduchi,Feature:Improvements in RedPitaya ADC device,1,[],https://github.com/MDSplus/mdsplus/pull/1640,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1640,"Added different modes of operation: EVENT_STREAMING, EVENT_SINGLE, TRIGGER_STREAMING, TRIGGER_SINGLE, CONTINUOUS and support driver automatically generated by ANACLETO","Added different modes of operation: EVENT_STREAMING, EVENT_SINGLE, TRIGGER_STREAMING, TRIGGER_SINGLE, CONTINUOUS and support driver automatically generated by ANACLETO",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1640,2019-04-04T09:53:17Z,2019-04-04T14:52:50Z,2019-05-30T12:35:40Z,MERGED,True,623,258,4,https://github.com/GabrieleManduchi,Feature:Improvements in RedPitaya ADC device,1,[],https://github.com/MDSplus/mdsplus/pull/1640,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1640#issuecomment-479945598,"Added different modes of operation: EVENT_STREAMING, EVENT_SINGLE, TRIGGER_STREAMING, TRIGGER_SINGLE, CONTINUOUS and support driver automatically generated by ANACLETO","Gabriele and Andrea -
  What would I need to do to try this all out.  We definitely have applications for slow (1Khz streaming) with faster, bug still slow (20 Khz) triggered.  And we have plenty of RPs around.
…
 On Apr 4, 2019, at 10:52 AM, Andrea Rigoni ***@***.***> wrote:

 Merged #1640 <#1640> into alpha.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub <#1640 (comment)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AHHQZdo9fraBPC1uVaexfJBk6yZvXEi-ks5vdhHDgaJpZM4ccYuS>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1640,2019-04-04T09:53:17Z,2019-04-04T14:52:50Z,2019-05-30T12:35:40Z,MERGED,True,623,258,4,https://github.com/GabrieleManduchi,Feature:Improvements in RedPitaya ADC device,1,[],https://github.com/MDSplus/mdsplus/pull/1640,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1640#issuecomment-480187072,"Added different modes of operation: EVENT_STREAMING, EVENT_SINGLE, TRIGGER_STREAMING, TRIGGER_SINGLE, CONTINUOUS and support driver automatically generated by ANACLETO","Hi Josh,
    the current version provides the following features:

- Trigger Mode can be:
             - continuous (acquisition starts upon trigger (HW or SW)
and proceeds until the module is stopped
             - Single trigger: after armed, a trigger (HW or SW) starts
acquisition with programmed pre samples (max 32 KSamples) and post 
samples (any 32 bit number)
             - Multiple triggers: after terminating post samples, the
device is ready for a new trigger
            -  Single Level trigger: trigger occurs after armed when the
input for the selected channel (A or B) is above/below a given threshold
for a programmable  number of samples
            -  Multiple Level trigger: same as above, but the device can
be retriggered after post trigger samples have occurred

- Clock mode can be:
          - Internal: clock is derived from internal 125 MHz clock (wth
programmable decimation). This however may cause drift in time
reconstruction of acquire signals
          - External clock: used in sampling and time reconstruction
          - External cock for  trigger time: useful when required
sampling speed is faster than available external clock. The external
clock is used to count time associated with trigger(s) but sampling
speed is derived from internal 125 MHz clock. In this case the drift is
limited to the short period for pre and post samples and is normally
negligible.


The current alpha MDSplus contains Python device and Java Setup. In
addition you need bitstream, device tree and driver.  Let me know if
your requirements are covered in the current version.


                                         Ciao
                                         Gabriele
…
On 04/04/2019 17:28, Josh Stillerman wrote:
 Gabriele and Andrea -
 What would I need to do to try this all out. We definitely have
 applications for slow (1Khz streaming) with faster, bug still slow (20
 Khz) triggered. And we have plenty of RPs around.

 > On Apr 4, 2019, at 10:52 AM, Andrea Rigoni
 ***@***.***> wrote:
 >
 > Merged #1640 <#1640> into alpha.
 >
 > —
 > You are receiving this because you are subscribed to this thread.
 > Reply to this email directly, view it on GitHub
 <#1640 (comment)>, or
 mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZdo9fraBPC1uVaexfJBk6yZvXEi-ks5vdhHDgaJpZM4ccYuS>.
 >

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1640 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AISySKoA3lU8bXbkDhdMkeAI0WBiEJtUks5vdhomgaJpZM4ccYuS>.


-- 
Gabriele Manduchi

Istituto Gas Ionizzati del CNR
Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione
Corso Stati Uniti 4, 35127 Padova - Italy
ph +39-049-829-5039/-5000 fax +39-049-8700718
mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1640,2019-04-04T09:53:17Z,2019-04-04T14:52:50Z,2019-05-30T12:35:40Z,MERGED,True,623,258,4,https://github.com/GabrieleManduchi,Feature:Improvements in RedPitaya ADC device,1,[],https://github.com/MDSplus/mdsplus/pull/1640,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1640#issuecomment-480250491,"Added different modes of operation: EVENT_STREAMING, EVENT_SINGLE, TRIGGER_STREAMING, TRIGGER_SINGLE, CONTINUOUS and support driver automatically generated by ANACLETO","Yes. I assume I need something to load into the hw?Or is it using the stock firmware and os?On Apr 5, 2019 4:09 AM, GabrieleManduchi <notifications@github.com> wrote:Hi Josh,

    the current version provides the following features:



- Trigger Mode can be:

             - continuous (acquisition starts upon trigger (HW or SW)

and proceeds until the module is stopped

             - Single trigger: after armed, a trigger (HW or SW) starts

acquisition with programmed pre samples (max 32 KSamples) and post 

samples (any 32 bit number)

             - Multiple triggers: after terminating post samples, the

device is ready for a new trigger

            -  Single Level trigger: trigger occurs after armed when the

input for the selected channel (A or B) is above/below a given threshold

for a programmable  number of samples

            -  Multiple Level trigger: same as above, but the device can

be retriggered after post trigger samples have occurred



- Clock mode can be:

          - Internal: clock is derived from internal 125 MHz clock (wth

programmable decimation). This however may cause drift in time

reconstruction of acquire signals

          - External clock: used in sampling and time reconstruction

          - External cock for  trigger time: useful when required

sampling speed is faster than available external clock. The external

clock is used to count time associated with trigger(s) but sampling

speed is derived from internal 125 MHz clock. In this case the drift is

limited to the short period for pre and post samples and is normally

negligible.





The current alpha MDSplus contains Python device and Java Setup. In

addition you need bitstream, device tree and driver.  Let me know if

your requirements are covered in the current version.





                                         Ciao

                                         Gabriele
…
On 04/04/2019 17:28, Josh Stillerman wrote:
 Gabriele and Andrea -
 What would I need to do to try this all out. We definitely have
 applications for slow (1Khz streaming) with faster, bug still slow (20
 Khz) triggered. And we have plenty of RPs around.

 > On Apr 4, 2019, at 10:52 AM, Andrea Rigoni
 ***@***.***> wrote:
 >
 > Merged #1640 <#1640> into alpha.
 >
 > —
 > You are receiving this because you are subscribed to this thread.
 > Reply to this email directly, view it on GitHub
 <#1640 (comment)>, or
 mute the thread
 <https://github.com/notifications/unsubscribe-auth/AHHQZdo9fraBPC1uVaexfJBk6yZvXEi-ks5vdhHDgaJpZM4ccYuS>.
 >

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1640 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AISySKoA3lU8bXbkDhdMkeAI0WBiEJtUks5vdhomgaJpZM4ccYuS>.


-- 

Gabriele Manduchi



Istituto Gas Ionizzati del CNR

Consorzio RFX - Associazione EURATOM/ENEA sulla Fusione

Corso Stati Uniti 4, 35127 Padova - Italy

ph +39-049-829-5039/-5000 fax +39-049-8700718

mailto:gabriele.manduchi@igi.cnr.it, http://www.igi.cnr.it







—You are receiving this because you commented.Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1640,2019-04-04T09:53:17Z,2019-04-04T14:52:50Z,2019-05-30T12:35:40Z,MERGED,True,623,258,4,https://github.com/GabrieleManduchi,Feature:Improvements in RedPitaya ADC device,1,[],https://github.com/MDSplus/mdsplus/pull/1640,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/1640#issuecomment-495304043,"Added different modes of operation: EVENT_STREAMING, EVENT_SINGLE, TRIGGER_STREAMING, TRIGGER_SINGLE, CONTINUOUS and support driver automatically generated by ANACLETO",where do I get the bitstream/device tree ?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1640,2019-04-04T09:53:17Z,2019-04-04T14:52:50Z,2019-05-30T12:35:40Z,MERGED,True,623,258,4,https://github.com/GabrieleManduchi,Feature:Improvements in RedPitaya ADC device,1,[],https://github.com/MDSplus/mdsplus/pull/1640,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1640#issuecomment-497314307,"Added different modes of operation: EVENT_STREAMING, EVENT_SINGLE, TRIGGER_STREAMING, TRIGGER_SINGLE, CONTINUOUS and support driver automatically generated by ANACLETO","Just issued a PR with full RedPitaya support.
Have a look at $MDSPLUS_DIR/device_support/redpitaya/README",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1641,2019-04-04T17:44:12Z,2019-04-05T08:57:37Z,2019-04-05T08:57:37Z,MERGED,True,28,9,3,https://github.com/zack-vii,Zck average xtreeshr gabrieles fixes,4,[],https://github.com/MDSplus/mdsplus/pull/1641,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1641,Fixes the missing bugs reported by @GabrieleManduchi via slack,Fixes the missing bugs reported by @GabrieleManduchi via slack,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1642,2019-04-05T12:53:19Z,2019-04-05T13:56:30Z,2019-05-30T08:02:57Z,MERGED,True,131,0,1,https://github.com/GabrieleManduchi,Fix:add forgotten include file for redpitaya C library,1,[],https://github.com/MDSplus/mdsplus/pull/1642,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1642,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1643,2019-04-06T21:42:25Z,2019-04-08T07:41:12Z,2019-04-08T07:43:34Z,MERGED,True,121,93,4,https://github.com/zack-vii,Fix: use double to resample to increase range,1,[],https://github.com/MDSplus/mdsplus/pull/1643,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1643,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1643,2019-04-06T21:42:25Z,2019-04-08T07:41:12Z,2019-04-08T07:43:34Z,MERGED,True,121,93,4,https://github.com/zack-vii,Fix: use double to resample to increase range,1,[],https://github.com/MDSplus/mdsplus/pull/1643,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1643#issuecomment-480719679,,From my side it seems to work. Of course we need to test it a while.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1644,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481134323,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,"@GabrieleManduchi : Could you attend the following two things.

There seems to be a problem with cpp code under Windows (missing entry in .def perhaps):

17:05:11 mdstreeobjects.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl MDSplus::EventStream::run(void) __ptr64"" (?run@EventStream@MDSplus@@UEAAXXZ)
17:05:11 \workspace\releasebld\64\bin_x86_64\MdsObjectsCppShr-VS.dll : fatal error LNK1120: 1 unresolved externals


Could you please rebase your branch.

git fetch upstream/alpha
git rebase  upstream/alpha -i
# check if all good
git push -f",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481135300,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481155408,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,@AndreaRigoni : problem persists,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481162995,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481172189,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481172415,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,"From console all tests passed, the procedure appears have timed out",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/tfredian,8,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481247608,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,"Gabriele the build is failing as Timo mentioned from an undefined reference to the run() method.
00:11:49.228 mdsdataobjects.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl MDSplus::EventStream::run(void) __ptr64"" (?run@EventStream@MDSplus@@UEAAXXZ)
I'm far from knowledgeable on c++ but shouldn't the  run method in class EXPORT EventStream:public Event in mdsobjects.h be declared as:
virtual void run() {}

like it is in class EXPORT Event?
This undefined reference error is happening during the VS build of the dll.
The error can be found at: http://jenkins2.mdsplus.org/job/windows/3142/console",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481258438,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,Just removed from Datastreams class,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/GabrieleManduchi,10,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481282651,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/GabrieleManduchi,11,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481282849,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,......not sure the last test referred to the last push,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1644,2019-04-08T14:50:22Z,2019-04-10T08:07:20Z,2019-04-10T08:07:24Z,MERGED,True,1913,757,21,https://github.com/GabrieleManduchi,Gm streaming,15,[],https://github.com/MDSplus/mdsplus/pull/1644,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/1644#issuecomment-481576240,Added support for data streaming. node.js event_server ptogram will receive data events and send associated samples to Web pages via ServerSentEvent.,can i do one last cleanup and then you may merge it.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1645,2019-04-08T19:36:11Z,2019-04-08T23:13:05Z,2019-04-08T23:13:10Z,MERGED,True,13,10,1,https://github.com/zack-vii,Fix: add some consistency checks to getImportString so it will find t…,1,[],https://github.com/MDSplus/mdsplus/pull/1645,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1645,…he correct class,…he correct class,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1646,2019-04-09T14:44:50Z,2019-04-09T16:15:24Z,2019-04-09T16:15:27Z,MERGED,True,1,1,1,https://github.com/zack-vii,"Fix: getter calls old internal, no need since TreeRefX",1,[],https://github.com/MDSplus/mdsplus/pull/1646,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1646,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1647,2019-04-09T20:45:38Z,2019-04-10T06:21:20Z,2019-08-17T10:16:34Z,MERGED,True,32,27,2,https://github.com/zack-vii,Zck python importstring,2,[],https://github.com/MDSplus/mdsplus/pull/1647,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1647,2nd try,2nd try,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1647,2019-04-09T20:45:38Z,2019-04-10T06:21:20Z,2019-08-17T10:16:34Z,MERGED,True,32,27,2,https://github.com/zack-vii,Zck python importstring,2,[],https://github.com/MDSplus/mdsplus/pull/1647,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1647#issuecomment-481432048,2nd try,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1648,2019-04-10T09:00:18Z,2019-04-10T16:41:50Z,2019-08-17T10:16:37Z,MERGED,True,135575,135590,1301,https://github.com/zack-vii,Zck cleaup spaces,2,[],https://github.com/MDSplus/mdsplus/pull/1648,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1648,"cleanup space mess using
sed -i 's/\s*$//' $1
sed -i 's/(^|\t)\x20{1,7}\t/\1\t/g' $1
sed -i 's/(^|\t)\x20{8}/\1\t/g' $1","cleanup space mess using
sed -i 's/\s*$//' $1
sed -i 's/(^|\t)\x20{1,7}\t/\1\t/g' $1
sed -i 's/(^|\t)\x20{8}/\1\t/g' $1",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1648,2019-04-10T09:00:18Z,2019-04-10T16:41:50Z,2019-08-17T10:16:37Z,MERGED,True,135575,135590,1301,https://github.com/zack-vii,Zck cleaup spaces,2,[],https://github.com/MDSplus/mdsplus/pull/1648,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1648#issuecomment-481764341,"cleanup space mess using
sed -i 's/\s*$//' $1
sed -i 's/(^|\t)\x20{1,7}\t/\1\t/g' $1
sed -i 's/(^|\t)\x20{8}/\1\t/g' $1","should we add tools that help keeping the code clean:
e.g. python code should not contain tabs for py2/3 compatibility etc.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1651,2019-04-11T22:09:42Z,2019-04-12T13:42:47Z,2019-04-12T13:42:50Z,MERGED,True,4,3,2,https://github.com/zack-vii,Zck mdsip tcp sigchld,2,[],https://github.com/MDSplus/mdsplus/pull/1651,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1651,"python os.system() and other tasks may send SIGCHILD, mdsip was shutting down if any was received","python os.system() and other tasks may send SIGCHILD, mdsip was shutting down if any was received",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1653,2019-04-12T13:33:09Z,2019-04-12T14:01:31Z,2019-04-12T14:01:34Z,MERGED,True,10,4,2,https://github.com/zack-vii,Fix: restore compatibility with stable,1,[],https://github.com/MDSplus/mdsplus/pull/1653,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1653,"According to http://man7.org/linux/man-pages/man2/write.2.html
On Linux, write() (and similar system calls) will transfer at most
0x7ffff000 (2,147,479,552) bytes, returning the number of bytes
actually transferred.  (This is true on both 32-bit and 64-bit
systems.)
we dont need to return int64_t","According to http://man7.org/linux/man-pages/man2/write.2.html
On Linux, write() (and similar system calls) will transfer at most
0x7ffff000 (2,147,479,552) bytes, returning the number of bytes
actually transferred.  (This is true on both 32-bit and 64-bit
systems.)
we dont need to return int64_t",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1653,2019-04-12T13:33:09Z,2019-04-12T14:01:31Z,2019-04-12T14:01:34Z,MERGED,True,10,4,2,https://github.com/zack-vii,Fix: restore compatibility with stable,1,[],https://github.com/MDSplus/mdsplus/pull/1653,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1653#issuecomment-482576097,"According to http://man7.org/linux/man-pages/man2/write.2.html
On Linux, write() (and similar system calls) will transfer at most
0x7ffff000 (2,147,479,552) bytes, returning the number of bytes
actually transferred.  (This is true on both 32-bit and 64-bit
systems.)
we dont need to return int64_t",this should fix #1652,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1654,2019-04-17T13:27:49Z,2019-04-17T14:02:07Z,2019-04-17T14:02:20Z,MERGED,True,4,2,1,https://github.com/tfredian,Fix: Repair jvm version check,1,[],https://github.com/MDSplus/mdsplus/pull/1654,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1654,Apply fix in alpha to stable for version check in java.,Apply fix in alpha to stable for version check in java.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1657,2019-04-18T18:07:58Z,2019-04-22T11:37:13Z,2019-04-22T11:37:14Z,MERGED,True,9,11,1,https://github.com/zack-vii,Fix: mdsip crashed if connection drops unexpectedly,1,[],https://github.com/MDSplus/mdsplus/pull/1657,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1657,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1658,2019-04-22T18:11:47Z,2019-04-22T18:30:00Z,2019-04-22T18:30:00Z,MERGED,True,18,7,2,https://github.com/tfredian,Build: Repair repository creation on redhat and alpine,1,[],https://github.com/MDSplus/mdsplus/pull/1658,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1658,"Since the MDSplus repositories were moved to a nfs share exported
by a new nfs server there were locking errors running the createrepo
command. A workaround was added for the publish operation to use
a /tmp directory for the repodata. This workaround was not implemented
for the release operation but is necessary unless another nfs server is
used to serve the release directory tree. To avoid this need for using
a separate nfs server the same /tmp workaround will now be used for both
the /release and /publish repositories.
The use of two nfs server mounts also can cause problems if some of
the jenkins slaves fail to mount one of these mounts which can cause
problems if the release build and the publish build do not occur on the
same slave. With the above workaround the build and publish diretories
will by served by the same nfs server.
There was also a bug in the alpine repository creation script which
caused each alpine platform build to rsync the entire repository
directory from release to publish instead of just rsync'ing the repository
specific to the architecture being built. This should fix that problem
too.","Since the MDSplus repositories were moved to a nfs share exported
by a new nfs server there were locking errors running the createrepo
command. A workaround was added for the publish operation to use
a /tmp directory for the repodata. This workaround was not implemented
for the release operation but is necessary unless another nfs server is
used to serve the release directory tree. To avoid this need for using
a separate nfs server the same /tmp workaround will now be used for both
the /release and /publish repositories.
The use of two nfs server mounts also can cause problems if some of
the jenkins slaves fail to mount one of these mounts which can cause
problems if the release build and the publish build do not occur on the
same slave. With the above workaround the build and publish diretories
will by served by the same nfs server.
There was also a bug in the alpine repository creation script which
caused each alpine platform build to rsync the entire repository
directory from release to publish instead of just rsync'ing the repository
specific to the architecture being built. This should fix that problem
too.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1659,2019-04-22T18:14:02Z,2019-04-22T20:50:19Z,2019-04-22T20:50:19Z,MERGED,True,18,7,2,https://github.com/tfredian,Build: Repair repository creation on redhat and alpine,1,[],https://github.com/MDSplus/mdsplus/pull/1659,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1659,"Since the MDSplus repositories were moved to a nfs share exported
by a new nfs server there were locking errors running the createrepo
command. A workaround was added for the publish operation to use
a /tmp directory for the repodata. This workaround was not implemented
for the release operation but is necessary unless another nfs server is
used to serve the release directory tree. To avoid this need for using
a separate nfs server the same /tmp workaround will now be used for both
the /release and /publish repositories.
The use of two nfs server mounts also can cause problems if some of
the jenkins slaves fail to mount one of these mounts which can cause
problems if the release build and the publish build do not occur on the
same slave. With the above workaround the build and publish diretories
will by served by the same nfs server.
There was also a bug in the alpine repository creation script which
caused each alpine platform build to rsync the entire repository
directory from release to publish instead of just rsync'ing the repository
specific to the architecture being built. This should fix that problem
too.","Since the MDSplus repositories were moved to a nfs share exported
by a new nfs server there were locking errors running the createrepo
command. A workaround was added for the publish operation to use
a /tmp directory for the repodata. This workaround was not implemented
for the release operation but is necessary unless another nfs server is
used to serve the release directory tree. To avoid this need for using
a separate nfs server the same /tmp workaround will now be used for both
the /release and /publish repositories.
The use of two nfs server mounts also can cause problems if some of
the jenkins slaves fail to mount one of these mounts which can cause
problems if the release build and the publish build do not occur on the
same slave. With the above workaround the build and publish diretories
will by served by the same nfs server.
There was also a bug in the alpine repository creation script which
caused each alpine platform build to rsync the entire repository
directory from release to publish instead of just rsync'ing the repository
specific to the architecture being built. This should fix that problem
too.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1659,2019-04-22T18:14:02Z,2019-04-22T20:50:19Z,2019-04-22T20:50:19Z,MERGED,True,18,7,2,https://github.com/tfredian,Build: Repair repository creation on redhat and alpine,1,[],https://github.com/MDSplus/mdsplus/pull/1659,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1659#issuecomment-485519205,"Since the MDSplus repositories were moved to a nfs share exported
by a new nfs server there were locking errors running the createrepo
command. A workaround was added for the publish operation to use
a /tmp directory for the repodata. This workaround was not implemented
for the release operation but is necessary unless another nfs server is
used to serve the release directory tree. To avoid this need for using
a separate nfs server the same /tmp workaround will now be used for both
the /release and /publish repositories.
The use of two nfs server mounts also can cause problems if some of
the jenkins slaves fail to mount one of these mounts which can cause
problems if the release build and the publish build do not occur on the
same slave. With the above workaround the build and publish diretories
will by served by the same nfs server.
There was also a bug in the alpine repository creation script which
caused each alpine platform build to rsync the entire repository
directory from release to publish instead of just rsync'ing the repository
specific to the architecture being built. This should fix that problem
too.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1659,2019-04-22T18:14:02Z,2019-04-22T20:50:19Z,2019-04-22T20:50:19Z,MERGED,True,18,7,2,https://github.com/tfredian,Build: Repair repository creation on redhat and alpine,1,[],https://github.com/MDSplus/mdsplus/pull/1659,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1659#issuecomment-485535046,"Since the MDSplus repositories were moved to a nfs share exported
by a new nfs server there were locking errors running the createrepo
command. A workaround was added for the publish operation to use
a /tmp directory for the repodata. This workaround was not implemented
for the release operation but is necessary unless another nfs server is
used to serve the release directory tree. To avoid this need for using
a separate nfs server the same /tmp workaround will now be used for both
the /release and /publish repositories.
The use of two nfs server mounts also can cause problems if some of
the jenkins slaves fail to mount one of these mounts which can cause
problems if the release build and the publish build do not occur on the
same slave. With the above workaround the build and publish diretories
will by served by the same nfs server.
There was also a bug in the alpine repository creation script which
caused each alpine platform build to rsync the entire repository
directory from release to publish instead of just rsync'ing the repository
specific to the architecture being built. This should fix that problem
too.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1660,2019-04-22T21:09:19Z,2019-04-22T22:20:57Z,2019-04-22T22:20:57Z,MERGED,True,1,1,1,https://github.com/tfredian,Build: fix typo in build script,1,[],https://github.com/MDSplus/mdsplus/pull/1660,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1660,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1661,2019-04-22T21:14:56Z,2019-04-23T13:26:58Z,2019-04-30T17:48:24Z,CLOSED,False,1,1,1,https://github.com/tfredian,Build: fix typo,1,[],https://github.com/MDSplus/mdsplus/pull/1661,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1661,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1661,2019-04-22T21:14:56Z,2019-04-23T13:26:58Z,2019-04-30T17:48:24Z,CLOSED,False,1,1,1,https://github.com/tfredian,Build: fix typo,1,[],https://github.com/MDSplus/mdsplus/pull/1661,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1661#issuecomment-485572604,,Retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1661,2019-04-22T21:14:56Z,2019-04-23T13:26:58Z,2019-04-30T17:48:24Z,CLOSED,False,1,1,1,https://github.com/tfredian,Build: fix typo,1,[],https://github.com/MDSplus/mdsplus/pull/1661,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1661#issuecomment-485769701,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1662,2019-04-23T13:44:31Z,2019-04-23T14:17:55Z,2019-04-23T14:17:55Z,MERGED,True,2,4,2,https://github.com/tfredian,Build: fix release publish for stable,2,[],https://github.com/MDSplus/mdsplus/pull/1662,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1662,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1663,2019-04-23T17:14:37Z,2019-04-23T19:03:27Z,2019-04-23T19:03:27Z,CLOSED,False,4,0,1,https://github.com/tfredian,Build: Do arm prep in build script,1,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1663,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1663,this is just a test pr for now.,this is just a test pr for now.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1664,2019-04-24T16:25:05Z,2019-05-21T15:48:46Z,2019-05-21T15:48:46Z,MERGED,True,335,450,2,https://github.com/santorofer, New cryocons devices to work as a systemd trend. ,1,[],https://github.com/MDSplus/mdsplus/pull/1664,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1664,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1664,2019-04-24T16:25:05Z,2019-05-21T15:48:46Z,2019-05-21T15:48:46Z,MERGED,True,335,450,2,https://github.com/santorofer, New cryocons devices to work as a systemd trend. ,1,[],https://github.com/MDSplus/mdsplus/pull/1664,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1664#issuecomment-486315319,,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1664,2019-04-24T16:25:05Z,2019-05-21T15:48:46Z,2019-05-21T15:48:46Z,MERGED,True,335,450,2,https://github.com/santorofer, New cryocons devices to work as a systemd trend. ,1,[],https://github.com/MDSplus/mdsplus/pull/1664,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1664#issuecomment-486317246,,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1664,2019-04-24T16:25:05Z,2019-05-21T15:48:46Z,2019-05-21T15:48:46Z,MERGED,True,335,450,2,https://github.com/santorofer, New cryocons devices to work as a systemd trend. ,1,[],https://github.com/MDSplus/mdsplus/pull/1664,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1664#issuecomment-486798777,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1664,2019-04-24T16:25:05Z,2019-05-21T15:48:46Z,2019-05-21T15:48:46Z,MERGED,True,335,450,2,https://github.com/santorofer, New cryocons devices to work as a systemd trend. ,1,[],https://github.com/MDSplus/mdsplus/pull/1664,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1664#issuecomment-487113075,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1664,2019-04-24T16:25:05Z,2019-05-21T15:48:46Z,2019-05-21T15:48:46Z,MERGED,True,335,450,2,https://github.com/santorofer, New cryocons devices to work as a systemd trend. ,1,[],https://github.com/MDSplus/mdsplus/pull/1664,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1664#issuecomment-492987175,,"Hi Fernando,
    I forgot  to say....is you make tests and stream several times the same
signal, the node.js server may get confused (signals coming back in time). I
need to fix it but for the moment you may relaunch the node.js server (and
refresh the Web pages).


                        Gabriele",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1665,2019-04-26T12:02:45Z,2019-04-29T07:35:41Z,2019-11-25T10:22:09Z,MERGED,True,3,1,1,https://github.com/GabrieleManduchi,Fix:remove possible exception in SetupDevice,1,[],https://github.com/MDSplus/mdsplus/pull/1665,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1665,Exception occurring is the kouse pointer for the popup menu was outside jTraverser window.,Exception occurring is the kouse pointer for the popup menu was outside jTraverser window.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1665,2019-04-26T12:02:45Z,2019-04-29T07:35:41Z,2019-11-25T10:22:09Z,MERGED,True,3,1,1,https://github.com/GabrieleManduchi,Fix:remove possible exception in SetupDevice,1,[],https://github.com/MDSplus/mdsplus/pull/1665,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1665#issuecomment-487050671,Exception occurring is the kouse pointer for the popup menu was outside jTraverser window.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1665,2019-04-26T12:02:45Z,2019-04-29T07:35:41Z,2019-11-25T10:22:09Z,MERGED,True,3,1,1,https://github.com/GabrieleManduchi,Fix:remove possible exception in SetupDevice,1,[],https://github.com/MDSplus/mdsplus/pull/1665,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1665#issuecomment-487112866,Exception occurring is the kouse pointer for the popup menu was outside jTraverser window.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1668,2019-04-29T14:31:11Z,2019-04-29T16:26:54Z,2019-04-29T16:26:56Z,MERGED,True,138,4,14,https://github.com/zack-vii,mdsip security: mapping root,3,[],https://github.com/MDSplus/mdsplus/pull/1668,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1668,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1670,2019-04-29T15:09:21Z,2019-04-29T15:45:24Z,2019-04-29T15:45:25Z,MERGED,True,6,7,1,https://github.com/tfredian,Fix: Segfault in get_segment_limits,1,[],https://github.com/MDSplus/mdsplus/pull/1670,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1670,Fixes #1669,Fixes #1669,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1671,2019-04-29T15:43:50Z,2019-04-29T15:44:01Z,2019-04-29T16:27:11Z,CLOSED,False,13198,10443,449,https://github.com/zack-vii,Zck stable mdsip root,677,[],https://github.com/MDSplus/mdsplus/pull/1671,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1671,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1672,2019-04-29T15:44:59Z,2019-04-29T16:27:07Z,2019-04-29T16:27:11Z,MERGED,True,138,5,14,https://github.com/zack-vii,Zck stable mdsip root,3,[],https://github.com/MDSplus/mdsplus/pull/1672,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1672,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1673,2019-04-29T16:25:53Z,2019-04-29T19:42:15Z,2019-04-29T19:43:49Z,CLOSED,False,41,31,1,https://github.com/tfredian,Fix: Segfault in get_segment_limits,1,[],https://github.com/MDSplus/mdsplus/pull/1673,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1673,Fixes #1669,Fixes #1669,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1674,2019-04-30T07:39:14Z,2019-05-02T10:04:50Z,2019-05-02T10:04:50Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,Fix:Conversion to double in ScopeUtilities,1,[],https://github.com/MDSplus/mdsplus/pull/1674,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1674,"Removed the division by 1e9 if DTYPE_Q or DTYPE_UQ to be converted, that broke jScope dynamic resampling for absolute times. No assumption must be made when time is expressed in 64bit long format (EPICS Time counts nanoseconds, UTC time counts milliseconds), so the value (converted to double) must be returned as it is.","Removed the division by 1e9 if DTYPE_Q or DTYPE_UQ to be converted, that broke jScope dynamic resampling for absolute times. No assumption must be made when time is expressed in 64bit long format (EPICS Time counts nanoseconds, UTC time counts milliseconds), so the value (converted to double) must be returned as it is.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1676,2019-04-30T15:14:22Z,2019-04-30T19:39:04Z,2019-04-30T19:39:04Z,MERGED,True,9,3,1,https://github.com/tfredian,Feature: Add error reporting in SendMdsMsg,2,[],https://github.com/MDSplus/mdsplus/pull/1676,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1676,"This will add some error reporting for failures occurring when
send messages to mdsip servers. This should provide more information
when diagnosing mdsip communication errors.","This will add some error reporting for failures occurring when
send messages to mdsip servers. This should provide more information
when diagnosing mdsip communication errors.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1676,2019-04-30T15:14:22Z,2019-04-30T19:39:04Z,2019-04-30T19:39:04Z,MERGED,True,9,3,1,https://github.com/tfredian,Feature: Add error reporting in SendMdsMsg,2,[],https://github.com/MDSplus/mdsplus/pull/1676,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1676#issuecomment-488006252,"This will add some error reporting for failures occurring when
send messages to mdsip servers. This should provide more information
when diagnosing mdsip communication errors.","Tom, if I am not wrong, if for any reason send returns always 0 the program enters an infinite loop because in this case tries is never increased.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1676,2019-04-30T15:14:22Z,2019-04-30T19:39:04Z,2019-04-30T19:39:04Z,MERGED,True,9,3,1,https://github.com/tfredian,Feature: Add error reporting in SendMdsMsg,2,[],https://github.com/MDSplus/mdsplus/pull/1676,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1676#issuecomment-488019475,"This will add some error reporting for failures occurring when
send messages to mdsip servers. This should provide more information
when diagnosing mdsip communication errors.",I changed the code to only reset tries to 0 if send returns > 0.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1676,2019-04-30T15:14:22Z,2019-04-30T19:39:04Z,2019-04-30T19:39:04Z,MERGED,True,9,3,1,https://github.com/tfredian,Feature: Add error reporting in SendMdsMsg,2,[],https://github.com/MDSplus/mdsplus/pull/1676,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1676#issuecomment-488022912,"This will add some error reporting for failures occurring when
send messages to mdsip servers. This should provide more information
when diagnosing mdsip communication errors.","Yes, but it seems to me that if send keeps on returning 0, tries is never increased......am I wrong?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1676,2019-04-30T15:14:22Z,2019-04-30T19:39:04Z,2019-04-30T19:39:04Z,MERGED,True,9,3,1,https://github.com/tfredian,Feature: Add error reporting in SendMdsMsg,2,[],https://github.com/MDSplus/mdsplus/pull/1676,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1676#issuecomment-488039250,"This will add some error reporting for failures occurring when
send messages to mdsip servers. This should provide more information
when diagnosing mdsip communication errors.",oops. ok I think I got it now.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1677,2019-05-01T18:29:01Z,2019-05-01T19:04:51Z,2019-05-01T19:04:51Z,MERGED,True,19,7,2,https://github.com/WhoBrokeTheBuild,Fixing an edgecase in setup.sh/setup.csh,2,['bug'],https://github.com/MDSplus/mdsplus/pull/1677,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1677,"When you wanted to add to an environment variable, but the string you
wanted to include was already a substring of the current environment
variable, it would not add your string.
e.g.
MDS_PATH /usr/local/mdsplus/tdi
MDS_PATH /tdi <;","When you wanted to add to an environment variable, but the string you
wanted to include was already a substring of the current environment
variable, it would not add your string.
e.g.
MDS_PATH /usr/local/mdsplus/tdi
MDS_PATH /tdi <;",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1677,2019-05-01T18:29:01Z,2019-05-01T19:04:51Z,2019-05-01T19:04:51Z,MERGED,True,19,7,2,https://github.com/WhoBrokeTheBuild,Fixing an edgecase in setup.sh/setup.csh,2,['bug'],https://github.com/MDSplus/mdsplus/pull/1677,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1677#issuecomment-488369175,"When you wanted to add to an environment variable, but the string you
wanted to include was already a substring of the current environment
variable, it would not add your string.
e.g.
MDS_PATH /usr/local/mdsplus/tdi
MDS_PATH /tdi <;",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1677,2019-05-01T18:29:01Z,2019-05-01T19:04:51Z,2019-05-01T19:04:51Z,MERGED,True,19,7,2,https://github.com/WhoBrokeTheBuild,Fixing an edgecase in setup.sh/setup.csh,2,['bug'],https://github.com/MDSplus/mdsplus/pull/1677,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1677#issuecomment-488371382,"When you wanted to add to an environment variable, but the string you
wanted to include was already a substring of the current environment
variable, it would not add your string.
e.g.
MDS_PATH /usr/local/mdsplus/tdi
MDS_PATH /tdi <;",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1677,2019-05-01T18:29:01Z,2019-05-01T19:04:51Z,2019-05-01T19:04:51Z,MERGED,True,19,7,2,https://github.com/WhoBrokeTheBuild,Fixing an edgecase in setup.sh/setup.csh,2,['bug'],https://github.com/MDSplus/mdsplus/pull/1677,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1677#issuecomment-488372413,"When you wanted to add to an environment variable, but the string you
wanted to include was already a substring of the current environment
variable, it would not add your string.
e.g.
MDS_PATH /usr/local/mdsplus/tdi
MDS_PATH /tdi <;",add to whitelist,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1678,2019-05-06T16:30:34Z,2019-05-06T17:13:48Z,2019-05-06T17:13:48Z,MERGED,True,4,1,3,https://github.com/tfredian,Feature: Add default_tree_path,1,[],https://github.com/MDSplus/mdsplus/pull/1678,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1678,"You will now be able to define a default tree path using the
default_tree_path environment variable. For example defining
export default_tree_path=/trees/~
You could do something like:
$ mkdir /trees/mytree1
$ mkdir /trees/mytree2
$ mdstcl
TCL> edit/new mytree1
...
TCL> edit/new mytree2
...
without needing mytree1_path and mytree2_path environment variables.
fixes #1667","You will now be able to define a default tree path using the
default_tree_path environment variable. For example defining
export default_tree_path=/trees/~
You could do something like:
$ mkdir /trees/mytree1
$ mkdir /trees/mytree2
$ mdstcl
TCL> edit/new mytree1
...
TCL> edit/new mytree2
...
without needing mytree1_path and mytree2_path environment variables.
fixes #1667",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1681,2019-05-11T18:07:14Z,2019-05-11T19:02:40Z,2019-05-13T11:57:46Z,MERGED,True,9,26,1,https://github.com/tfredian,Fix: Support default_tree_path with shotids,2,[],https://github.com/MDSplus/mdsplus/pull/1681,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1681,"get current shot and set current shot routines did not support the
new default_tree_path feature. This should fix #1680","get current shot and set current shot routines did not support the
new default_tree_path feature. This should fix #1680",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1683,2019-05-15T15:45:20Z,2019-05-15T15:52:17Z,2019-05-15T15:53:19Z,MERGED,True,13,13,1,https://github.com/zack-vii,Fix: on debian systems test only supports single = for equals test,1,[],https://github.com/MDSplus/mdsplus/pull/1683,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1683,and remove trailing spaces,and remove trailing spaces,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1683,2019-05-15T15:45:20Z,2019-05-15T15:52:17Z,2019-05-15T15:53:19Z,MERGED,True,13,13,1,https://github.com/zack-vii,Fix: on debian systems test only supports single = for equals test,1,[],https://github.com/MDSplus/mdsplus/pull/1683,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1683#issuecomment-492713355,and remove trailing spaces,Fixes #1682,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1685,2019-05-15T20:37:30Z,2019-05-15T21:00:37Z,2019-05-15T21:00:49Z,CLOSED,False,3,1,1,https://github.com/tfredian,Fix: Handle deny rules in mdsip.hosts,1,[],https://github.com/MDSplus/mdsplus/pull/1685,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1685,"Lines beginning with exclamation points must deny access from
connections matching the connection pattern. This broke at some
point. This should fix that.
Fixes: #1684","Lines beginning with exclamation points must deny access from
connections matching the connection pattern. This broke at some
point. This should fix that.
Fixes: #1684",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1686,2019-05-15T20:41:57Z,2019-05-15T21:01:00Z,2019-05-15T21:01:07Z,CLOSED,False,3,1,1,https://github.com/tfredian,Fix: Handle deny rules in mdsip.hosts,1,[],https://github.com/MDSplus/mdsplus/pull/1686,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1686,"Lines beginning with exclamation points must deny access from
connections matching the connection pattern. This broke at some
point. This should fix that.","Lines beginning with exclamation points must deny access from
connections matching the connection pattern. This broke at some
point. This should fix that.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1687,2019-05-15T21:12:23Z,2019-05-16T15:15:16Z,2019-05-16T15:15:21Z,MERGED,True,6,3,1,https://github.com/tfredian,Fix: Obey deny rules in mdsip.hosts,1,[],https://github.com/MDSplus/mdsplus/pull/1687,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1687,"Lines beginning with exclamation points should deny access if
the connection matches the match string after the exclamation point.
This should fix: #1684","Lines beginning with exclamation points should deny access if
the connection matches the match string after the exclamation point.
This should fix: #1684",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1687,2019-05-15T21:12:23Z,2019-05-16T15:15:16Z,2019-05-16T15:15:21Z,MERGED,True,6,3,1,https://github.com/tfredian,Fix: Obey deny rules in mdsip.hosts,1,[],https://github.com/MDSplus/mdsplus/pull/1687,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1687#issuecomment-493110433,"Lines beginning with exclamation points should deny access if
the connection matches the match string after the exclamation point.
This should fix: #1684",Actually the two was correct (a ported VMS routine). The problem was that the match string was stripped of the leading exclamation point in the for loop (not the while) so it could then match subsequent checks without the exclamation point which could then be accepted. I originally put a break after the ok=2 but if the deny match string didn't match it would try the next in the for loop comparing it to the string after the exclamation point was removed and if that matched it would also approve the connection. I didn't explore back to the older code to see how that used to be handled but manually testing the new code seemed to fix it.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1688,2019-05-15T21:18:30Z,2019-05-16T15:02:44Z,2019-05-16T15:03:57Z,MERGED,True,6,3,1,https://github.com/tfredian,Fix: Obey deny rules in mdsip.hosts,1,[],https://github.com/MDSplus/mdsplus/pull/1688,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1688,"Lines beginning with exclamation points should deny access if
the connection matches the match string after the exclamation point.
This should fix: #1684","Lines beginning with exclamation points should deny access if
the connection matches the match string after the exclamation point.
This should fix: #1684",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1689,2019-05-20T09:55:31Z,2019-05-20T14:00:03Z,2019-11-25T10:22:09Z,MERGED,True,98911,5863,97,https://github.com/GabrieleManduchi,Feature:New Devices for SPIDER experiment and minor fix to jScope,3,[],https://github.com/MDSplus/mdsplus/pull/1689,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1689,Added a few devices for SPIER experiment. Some minor fixes to jScope in order to improve image visualization,Added a few devices for SPIER experiment. Some minor fixes to jScope in order to improve image visualization,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1689,2019-05-20T09:55:31Z,2019-05-20T14:00:03Z,2019-11-25T10:22:09Z,MERGED,True,98911,5863,97,https://github.com/GabrieleManduchi,Feature:New Devices for SPIDER experiment and minor fix to jScope,3,[],https://github.com/MDSplus/mdsplus/pull/1689,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1689#issuecomment-493975554,Added a few devices for SPIER experiment. Some minor fixes to jScope in order to improve image visualization,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1689,2019-05-20T09:55:31Z,2019-05-20T14:00:03Z,2019-11-25T10:22:09Z,MERGED,True,98911,5863,97,https://github.com/GabrieleManduchi,Feature:New Devices for SPIDER experiment and minor fix to jScope,3,[],https://github.com/MDSplus/mdsplus/pull/1689,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1689#issuecomment-493984800,Added a few devices for SPIER experiment. Some minor fixes to jScope in order to improve image visualization,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1689,2019-05-20T09:55:31Z,2019-05-20T14:00:03Z,2019-11-25T10:22:09Z,MERGED,True,98911,5863,97,https://github.com/GabrieleManduchi,Feature:New Devices for SPIDER experiment and minor fix to jScope,3,[],https://github.com/MDSplus/mdsplus/pull/1689,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1689#issuecomment-493989822,Added a few devices for SPIER experiment. Some minor fixes to jScope in order to improve image visualization,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1690,2019-05-20T16:40:50Z,2019-05-20T21:02:26Z,2019-05-20T21:02:59Z,MERGED,True,8,7,1,https://github.com/tfredian,Fix: TreeShr hook funs not working,1,[],https://github.com/MDSplus/mdsplus/pull/1690,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1690,"The feature of enabling treeshr hooks as tdi funs was only working
when compiled without optimization. The code was declaring structures
within if else blocks and referencing those declarations later and
the optimizer was reusing the memory of those structures before
they were used. This commit provides the hook feature with
optimization enabled.","The feature of enabling treeshr hooks as tdi funs was only working
when compiled without optimization. The code was declaring structures
within if else blocks and referencing those declarations later and
the optimizer was reusing the memory of those structures before
they were used. This commit provides the hook feature with
optimization enabled.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1691,2019-05-21T15:42:46Z,2019-05-21T16:07:55Z,2019-05-21T16:07:55Z,MERGED,True,7,106,1,https://github.com/WhoBrokeTheBuild,Fix: ACQ trig_time offset was off by segment len,1,[],https://github.com/MDSplus/mdsplus/pull/1691,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1691,"Moved the recording of the trig_time to the DeviceWorker from the MDSworker
Previously it was recording after the first full buffer, meaning after the first segment
This lead to the famous ""40 seconds off"" bug
I also removed the vestigial stream function","Moved the recording of the trig_time to the DeviceWorker from the MDSworker
Previously it was recording after the first full buffer, meaning after the first segment
This lead to the famous ""40 seconds off"" bug
I also removed the vestigial stream function",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1692,2019-05-21T17:22:14Z,2019-05-22T13:03:23Z,2019-05-22T13:03:23Z,MERGED,True,1435,211,82,https://github.com/AndreaRigoni,Git release,9,[],https://github.com/MDSplus/mdsplus/pull/1692,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1692,"git commands has been added to obtain the RELEASE_TAG from git if the code has been
installed from sources. All added information are written to mdsdcl structure that
can be accessed through ""mdsdcl show git"", with some further optional qualifiers:
TAG, BRANCH, COMMIT, REMOTE, REMOTE_URL
the GIT_TAG is formatted as follow:
[closest_release_tag]-[number_of_commit_ahead]-g[short_commit_hash]<""M"" if code has uncommitted changes>
Some additional improvement have been also added within the same commit:

a help-more command that writes the commented targets tagged with ##@@argument
the autmatic reconfigure upon changes in any Makfile.in
a new configure parameter --disable-uncommitted-install prevent install
action if there are uncommitted changes","git commands has been added to obtain the RELEASE_TAG from git if the code has been
installed from sources. All added information are written to mdsdcl structure that
can be accessed through ""mdsdcl show git"", with some further optional qualifiers:
TAG, BRANCH, COMMIT, REMOTE, REMOTE_URL
the GIT_TAG is formatted as follow:
[closest_release_tag]-[number_of_commit_ahead]-g[short_commit_hash]<""M"" if code has uncommitted changes>
Some additional improvement have been also added within the same commit:

a help-more command that writes the commented targets tagged with ##@@argument
the autmatic reconfigure upon changes in any Makfile.in
a new configure parameter --disable-uncommitted-install prevent install
action if there are uncommitted changes",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1693,2019-05-21T20:44:02Z,2019-05-23T20:30:19Z,2019-11-25T10:22:14Z,MERGED,True,4,2,2,https://github.com/joshStillerman,Fix: change timebase of cryocon_shot,1,[],https://github.com/MDSplus/mdsplus/pull/1693,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1693,"Change the store method of the shot device to:
1 - not write T2 if it is already filled in
2 - use T2*1000. instead of now()*1000 for the end time
This allows us to run the store method of the shot over again
(setting the nodes nowrite_once) to fix the start time of the stored
data","Change the store method of the shot device to:
1 - not write T2 if it is already filled in
2 - use T2*1000. instead of now()*1000 for the end time
This allows us to run the store method of the shot over again
(setting the nodes nowrite_once) to fix the start time of the stored
data",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1694,2019-05-22T13:06:46Z,2019-05-22T15:49:15Z,2019-05-22T15:49:27Z,MERGED,True,141,54,3,https://github.com/GabrieleManduchi,Gm streaming,4,[],https://github.com/MDSplus/mdsplus/pull/1694,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1694,"Added method stream() to python class Event
Minor fixes to node.js server and to the html page","Added method stream() to python class Event
Minor fixes to node.js server and to the html page",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1694,2019-05-22T13:06:46Z,2019-05-22T15:49:15Z,2019-05-22T15:49:27Z,MERGED,True,141,54,3,https://github.com/GabrieleManduchi,Gm streaming,4,[],https://github.com/MDSplus/mdsplus/pull/1694,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1694#issuecomment-494818425,"Added method stream() to python class Event
Minor fixes to node.js server and to the html page","Would it be too complicated to send MDSplus serialized data in the STREAMING event? If the consumer could deserialize the data it would be much more efficient (network and cpu) than converting the data to strings, sending, and converting back. The STREAMING event could even send a dictionary or list object containing the signal name, shot, times and values.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1694,2019-05-22T13:06:46Z,2019-05-22T15:49:15Z,2019-05-22T15:49:27Z,MERGED,True,141,54,3,https://github.com/GabrieleManduchi,Gm streaming,4,[],https://github.com/MDSplus/mdsplus/pull/1694,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1694#issuecomment-494819451,"Added method stream() to python class Event
Minor fixes to node.js server and to the html page",The advantage of sending serialized data would depend highly on the typical size of streaming data packets.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1694,2019-05-22T13:06:46Z,2019-05-22T15:49:15Z,2019-05-22T15:49:27Z,MERGED,True,141,54,3,https://github.com/GabrieleManduchi,Gm streaming,4,[],https://github.com/MDSplus/mdsplus/pull/1694,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1694#issuecomment-494857410,"Added method stream() to python class Event
Minor fixes to node.js server and to the html page",The MDS event payload is going to be received by a JavaScript program (Node.js). That's why the data packed is converted in ASCII. In any case the packet is composed of one or few samples since the streaming is for visualization,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1695,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-494936318,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495083687,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"You are assuming that in case long is used, the time unit is nanosecond. This is not true, indeed we often use int64 to store UTC time expressed in milliseconds.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495084453,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"When we decided to use double representation, we got rid of the implicit conversion of all times in nanoseconds unit, and therefore now every time is a number related to the chosen units, so no division / multiplication for 1e9 must be done.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495095599,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,this is just because in xtreeshr we do the same. i would be happy to get rid of it in xtreeshr but this would break current behaviour. bottomline is we need to treat int64 in mdsmisc thesame way as we do in xtreeshr.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495106836,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"Ok, but what xtreeshr does is totally transparent outside XTreeGetTimedRecord.
In ScopeUtilities.c,  estimateNumSamples does an estimation of the number of samples based on the actual delta value, that is totally unrelated to the way XTreeGetTimedRecord works.
By the way, I remember to have  already removed that division by 1e9 some time ago since it broke jScope when zooming into waveformes with absolute UTC time.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495108302,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"We may later think about a different implementation of XTreeshr without the implicit conversion to nanoseconds, but this is unrelated to ScopeUtilities",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495109227,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,...and if I am not wrong you already worked out the xtreeshr stuff.....,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495110045,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"...ok, but without removing the 1e9 stuff....",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495115073,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,hmm well the connection with xtree is duevto thebsettimecontext. and yes you are right i need to fix min and max too. the 1e9 in mdsmisc is only to compensate the 1e9 in xtreeshr. the output shoult then be in tge same data type and scale as the source.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,11,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495116098,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"But, again, you should disregard completely the 1e9 stuff outside the XTreeGetTimedRecord() internals.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495122525,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"min max is not affected as it will use NULL instead.
again if mdsmisc want to make use of settimecontext we need to treat long differently. we can use a dtype_q delta or compensate the 1e9. as i said the output is not affected.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,13,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495126290,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"Maybe I am missing something.....why should I be concerned about 1E9  even if I use SetTimeContext passing int64 times? In normal use cases int64 is used to represent absolute times that may have ns units (EPICS times) or ms unit (UTC times). In any case the passed min and max to SetTimeContext will be consistent with the signals being read.  I don'care If they are internally multiplied /divided by 1E9 in xtreeshr, what I am interested in is that signals read afterwords (of course with times consistent to what has been passed to SetTimeContext) return only the portion within min and max.
In other words, no time unit is assumed by SetTimeContext and XTreeGetTimedRecord().",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,14,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495248465,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,What you are missing is that the delta is calculated based on the segment Limits with would be a direct cast of int64 to double. Before mdsmisc put delta in settimecontext as is (direct cast as double not int64). xtreeshr well interpret the as-is delta in seconds. It will also notice the data's dim is in int64 and interpret it as nanoseconds. Consequently it will convert the one in the other and introduce the factor 1e9 to delta. To make it compare as is units with as is units we can compensate delta by dividing 1e9.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,15,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495262615,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"Ah, I see.... if I understand, you are in this way computing delta in double. In case segment limits were given in int64  (i.e.  jScope is dealing with absolute times) there is a misinterpretation by xtreeshr of the information stored is SetTimeContext. Why not converting also delta in int64 (from the computed double value) in this case (absolute times)  instead of exposing the internal xtreeshr 1E9 stuff in mdsmisc?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,16,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495287750,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,Basically we could do that but dividing delta by 1e9 is a one-liner while changing the datatype of delta would require some more elements. At minimum you would need to change deltaP to use DTYPE_Q and point to a int64.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,17,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495643399,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"I think that  changing  deltaP to use DTYPE_Q and point to a int64 when isLong is returned true by estimateNumSamples()  is much better, even if it requires some lines more.
In this case the xtreeshr internals are not exposed elsewhere and if we decide to change anything inside xtreeshr there are no side effects.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,18,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495663135,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"maybe, but if we change xtreeshr we can as well delete the line. in fact, we would want to get rid of the entire extra handling anyway. so we need to touch the file anyway.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/GabrieleManduchi,19,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495676834,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"""""""""""maybe, but if we change xtreeshr we can as well delete the line. in fact, we would want to get rid of the entire extra handling anyway. so we need to touch the fike anyway""""""""""
This is exactly what I want to avoid!!  In few months no one will remember this and in case xtreeshr will be changed sometimes in future,  jScope will break and it will take time to figure out what happened. Another thing is getting rid of the entire extra handling. If we'll do it after changing xtreeshr, good, we have cleaned code, if we forget or decide to postpone it, nothing gets broken anyway.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1695,2019-05-22T19:09:08Z,2019-05-26T19:33:26Z,2019-05-26T19:33:31Z,MERGED,True,42,29,2,https://github.com/zack-vii,"Fix: mdsmisc.GetXYSignalXd set TimeContext based on SegLimit, isLong?",5,[],https://github.com/MDSplus/mdsplus/pull/1695,https://github.com/zack-vii,20,https://github.com/MDSplus/mdsplus/pull/1695#issuecomment-495903761,It Dimensions are stored as int64 delta need to be converted to sec in order to get correct data.,"well that would be the changelog:
-    if (isLong) delta /= 1e9; // quick compensation of xtreeshr conversion
-    deltaP = (delta>1e-9) ? &deltaD : NULL;
+    // since xtreeshr has a special handling for int64 timestamps we need to address this here
+    // one way would be to compensate the 1e9 factor or we pass delta as DTYPE_Q
+    if (isLong) {
+      if (delta >= 1.5) {
+        deltaP = &deltaD;
+        *(int64_t*)&delta = (int64_t)(delta+.5);
+        deltaD.dtype = DTYPE_Q;
+      } else deltaP = NULL;
+    } else
+      deltaP = (delta>1e-9) ? &deltaD : NULL;
i would rather add a test that will alarm us and add a comment to xtresshr that will remind us. but I think it is unlikely that we will change xtreeshr. It suites us well with combined dimensions in double sec and int64 ns plotted in on scope.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1696,2019-05-23T20:39:51Z,2019-06-10T20:23:00Z,2019-06-10T20:23:00Z,MERGED,True,176,177,2,https://github.com/WhoBrokeTheBuild,"Fix: Synchronize ACQ423 & ACQ435, account for first buffer read time",4,[],https://github.com/MDSplus/mdsplus/pull/1696,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1696,"Update the ACQ423 and ACQ435 device classes to more closely match each other
Update trig_time to properly account for the time between triggering, and the first 4096 bytes being read
Removing stream function from ACQ435","Update the ACQ423 and ACQ435 device classes to more closely match each other
Update trig_time to properly account for the time between triggering, and the first 4096 bytes being read
Removing stream function from ACQ435",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/1698,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.","Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-495718559,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",Retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-495744587,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/AndreaRigoni,4,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-495973192,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-496006526,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-496006769,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-496008264,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/AndreaRigoni,8,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-496477419,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.","Tom, could you give me a hint on how to test the conflict? I don't see it .. but I'm not actually rebasing the all branch, because I merged alpha on this branch at a certain point to update the commits from alpha.. there seems to be any conflict in this way.. do I have to rebase the entire branch? If so I may have to start over and apply all these commits picking cherries from here into alpha :-)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/tfredian,9,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-496527039,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.","Hmmm, if you look at this pr page on github it says there is a conflict preventing rebasing. To the right of the Remase and Merge"" section there is a ""view command line instructions"" link which shows:
Step 1: From your project repository, check out a new branch and test the changes.
git checkout -b AndreaRigoni-git_release alpha
git pull https://github.com/AndreaRigoni/mdsplus.git git_release

Step 2: Merge the changes and update on GitHub.
git checkout alpha
git merge --no-ff AndreaRigoni-git_release
git push origin alpha

So I tried the following instead:
git checkout alpha
git pull
git checkout -b AndreaRigoni-git_release alpha
git pull https://github.com/AndreaRigoni/mdsplus.git git_release
git rebase alpha

This produced complaints about conflicts so I then did git status and got:
[twf@cmodws103 mdsplus-alpha]$ git status
rebase in progress; onto 82ae6ff
You are currently rebasing branch 'AndreaRigoni-git_release' on '82ae6ff'.
  (fix conflicts and then run ""git rebase --continue"")
  (use ""git rebase --skip"" to skip this patch)
  (use ""git rebase --abort"" to check out the original branch)

Unmerged paths:
  (use ""git reset HEAD <file>..."" to unstage)
  (use ""git add <file>..."" to mark resolution)

        both modified:   Makefile.inc.in
        both modified:   configure.ac
        both added:      m4/ax_git_revision.m4


I'm not sure but I suspect if you replace those three files with the contents of your PR branch files, do the git add of each, and then git rebase --continue you'll end up with the new branch rebase on current alpha and then push that new branch to your project and do another PR.
Hope this helps....",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1698,2019-05-24T16:42:00Z,2019-05-29T07:14:30Z,2019-06-07T11:34:07Z,CLOSED,False,5,13,6,https://github.com/AndreaRigoni,Git release,12,[],https://github.com/MDSplus/mdsplus/pull/1698,https://github.com/AndreaRigoni,10,https://github.com/MDSplus/mdsplus/pull/1698#issuecomment-496815088,"Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH
Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",moved to #1701 to rebase alpha instead of merge commits.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1699,2019-05-28T09:52:05Z,2019-05-30T08:50:21Z,2019-11-25T10:22:17Z,MERGED,True,8,0,1,https://github.com/GabrieleManduchi,"Fix:handle the case the expression refers to a segments nid, but chan…",1,[],https://github.com/MDSplus/mdsplus/pull/1699,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1699,"…ges timebase
In case the expression being displayed on jScope refers to a segmented node, but re-defines timebase, the mechanism for resampling based on segment information fails. This has been fixed by making recIsSegmented() more conservative so that it gives off if a SIGNAL or FUNCTION descriptor is found when traversion the expression","…ges timebase
In case the expression being displayed on jScope refers to a segmented node, but re-defines timebase, the mechanism for resampling based on segment information fails. This has been fixed by making recIsSegmented() more conservative so that it gives off if a SIGNAL or FUNCTION descriptor is found when traversion the expression",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1700,2019-05-28T12:52:57Z,2019-06-06T14:04:33Z,2019-06-06T14:04:38Z,MERGED,True,3,4,1,https://github.com/joshStillerman,Update README.md,4,[],https://github.com/MDSplus/mdsplus/pull/1700,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1700,Change to google map,Change to google map,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1701,2019-05-28T16:50:20Z,2019-05-30T08:51:03Z,2019-05-30T08:51:04Z,MERGED,True,7,21,9,https://github.com/tfredian,Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH,2,[],https://github.com/MDSplus/mdsplus/pull/1701,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1701,"Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.","Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1701,2019-05-28T16:50:20Z,2019-05-30T08:51:03Z,2019-05-30T08:51:04Z,MERGED,True,7,21,9,https://github.com/tfredian,Fix: removed reference to RELEASE_COMMIT and RELEASE_BRANCH,2,[],https://github.com/MDSplus/mdsplus/pull/1701,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1701#issuecomment-496654761,"Now available as GIT_COMMIT and GIT_BRANCH
If a RELEASE_VERSION has not been set by trigger.sh the RELEASE_TAG will be
equal to GIT_TAG. And the GIT_TAG has the unique commit hash inside.","I will eventually clean up the deploy scripts to simplify the git commands used to determine whether a minor or patch release is required and to reduce the number of environment variables passed around to specify release info which is now determined by configure. The trigger jobs could detect a new release and add a local release tag to be used by the build jobs, This will be done in a subsequent pull request.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1702,2019-05-30T10:47:35Z,2019-06-04T13:35:55Z,2019-06-28T14:08:24Z,MERGED,True,1541,621,12,https://github.com/GabrieleManduchi,Feature:Support for RedPitaya ADC board,3,[],https://github.com/MDSplus/mdsplus/pull/1702,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1702,Added full support for flexible data acquisition using RedPitaya board. Refer to device_support/redpitaya/README for description and installation instructions.,Added full support for flexible data acquisition using RedPitaya board. Refer to device_support/redpitaya/README for description and installation instructions.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1702,2019-05-30T10:47:35Z,2019-06-04T13:35:55Z,2019-06-28T14:08:24Z,MERGED,True,1541,621,12,https://github.com/GabrieleManduchi,Feature:Support for RedPitaya ADC board,3,[],https://github.com/MDSplus/mdsplus/pull/1702,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1702#issuecomment-498675123,Added full support for flexible data acquisition using RedPitaya board. Refer to device_support/redpitaya/README for description and installation instructions.,"Including the bit fie ?
…
 On Jun 4, 2019, at 9:34 AM, Andrea Rigoni ***@***.***> wrote:

 @AndreaRigoni approved this pull request.

 All files are there, it needs the linux version to match 4.4.0 for the driver to work but now it is written in the description at least.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub <#1702?email_source=notifications&email_token=ABY5AZJKX4DH44LHHDP67NTPYZVNPA5CNFSM4HRC5P5KYY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOB2QT2LQ#pullrequestreview-245447982>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABY5AZNLDV3HSEGL3TGNAH3PYZVNPANCNFSM4HRC5P5A>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1703,2019-05-30T15:09:09Z,2019-06-04T13:50:04Z,2019-06-04T13:50:14Z,MERGED,True,56,83252,8,https://github.com/tfredian,Build: Add improvements in release tagging and ChangeLog,1,[],https://github.com/MDSplus/mdsplus/pull/1703,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1703,"Use git describe --tags to determine latest release
Remove old ChangeLog from sources and generate ChangeLog during ""make install""
Numerous improvements in git commands used during release builds","Use git describe --tags to determine latest release
Remove old ChangeLog from sources and generate ChangeLog during ""make install""
Numerous improvements in git commands used during release builds",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1703,2019-05-30T15:09:09Z,2019-06-04T13:50:04Z,2019-06-04T13:50:14Z,MERGED,True,56,83252,8,https://github.com/tfredian,Build: Add improvements in release tagging and ChangeLog,1,[],https://github.com/MDSplus/mdsplus/pull/1703,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1703#issuecomment-497383573,"Use git describe --tags to determine latest release
Remove old ChangeLog from sources and generate ChangeLog during ""make install""
Numerous improvements in git commands used during release builds",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1705,2019-06-05T15:04:42Z,2019-06-05T18:01:15Z,2019-08-17T10:16:51Z,MERGED,True,113,73,2,https://github.com/zack-vii,Zck win installer,5,[],https://github.com/MDSplus/mdsplus/pull/1705,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1705,"Windows installer:


will notify the user if things went wrong in system folders (install and uninstall).


will properly stop and remove ""MDSplus 8000"" and ""MDSplus 8100"" service when uninstalling.


will rename files that cannot be removed but have been ignored by the user


renamed file will be scheduled for removal during the next reboot


fixed a rar mem access issue in xtreeshr","Windows installer:


will notify the user if things went wrong in system folders (install and uninstall).


will properly stop and remove ""MDSplus 8000"" and ""MDSplus 8100"" service when uninstalling.


will rename files that cannot be removed but have been ignored by the user


renamed file will be scheduled for removal during the next reboot


fixed a rar mem access issue in xtreeshr",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1705,2019-06-05T15:04:42Z,2019-06-05T18:01:15Z,2019-08-17T10:16:51Z,MERGED,True,113,73,2,https://github.com/zack-vii,Zck win installer,5,[],https://github.com/MDSplus/mdsplus/pull/1705,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1705#issuecomment-499123041,"Windows installer:


will notify the user if things went wrong in system folders (install and uninstall).


will properly stop and remove ""MDSplus 8000"" and ""MDSplus 8100"" service when uninstalling.


will rename files that cannot be removed but have been ignored by the user


renamed file will be scheduled for removal during the next reboot


fixed a rar mem access issue in xtreeshr",this addresses issue #1704,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1706,2019-06-05T16:23:56Z,2019-06-05T19:22:35Z,2019-06-05T19:22:35Z,MERGED,True,7,18,1,https://github.com/tfredian,Build: Fix publish operation,1,[],https://github.com/MDSplus/mdsplus/pull/1706,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1706,"Changes to the trigger.sh script prevented new releases from
being published to the public repositories. This fixes that
problem.","Changes to the trigger.sh script prevented new releases from
being published to the public repositories. This fixes that
problem.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1706,2019-06-05T16:23:56Z,2019-06-05T19:22:35Z,2019-06-05T19:22:35Z,MERGED,True,7,18,1,https://github.com/tfredian,Build: Fix publish operation,1,[],https://github.com/MDSplus/mdsplus/pull/1706,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1706#issuecomment-499212352,"Changes to the trigger.sh script prevented new releases from
being published to the public repositories. This fixes that
problem.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1707,2019-06-05T21:31:55Z,2019-06-06T14:03:52Z,2019-06-06T14:03:57Z,MERGED,True,5,6,1,https://github.com/zack-vii,Fix: memory access violation when multi; remuser == NULL,1,[],https://github.com/MDSplus/mdsplus/pull/1707,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1707,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1708,2019-06-07T08:52:16Z,2019-06-07T11:32:53Z,2019-06-07T11:33:01Z,MERGED,True,7,4,1,https://github.com/GabrieleManduchi,Fix:remove exception in mdsScope.js when receiving a null error messa…,1,[],https://github.com/MDSplus/mdsplus/pull/1708,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1708,…ge from the server,…ge from the server,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1709,2019-06-07T11:33:46Z,2019-06-07T12:38:21Z,2019-11-25T10:21:26Z,MERGED,True,3,11,1,https://github.com/GabrieleManduchi,"Fix:remove STAR outputs, not supported by CODAC Core driver",2,[],https://github.com/MDSplus/mdsplus/pull/1709,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1709,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1710,2019-06-10T20:12:49Z,2019-06-10T20:30:13Z,2019-06-11T14:50:09Z,MERGED,True,2,5,1,https://github.com/tfredian,Build: trigger.sh not tagging new release on github,1,[],https://github.com/MDSplus/mdsplus/pull/1710,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1710,The new builds were not tagging the new releases on github. This should fix this problem.,The new builds were not tagging the new releases on github. This should fix this problem.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1711,2019-06-12T18:42:59Z,2019-06-17T21:11:05Z,2019-06-17T21:17:10Z,CLOSED,False,328,334,111,https://github.com/tfredian,Feature: Reorganize the MDSplus python module,2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1711,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1711,"In the past the MDSplus python module code was in directory
called mdsobjects/python. To facilitate simpler use of the python
module the directory of the module is now python/MDSplus. One
can easily access the module simply by including something like
/usr/local/mdsplus/python in the PYTHONPATH environment variable
and python will look for MDSplus in that directory when importing.
The MDSplus installers will now avoid copying the python code from
/usr/local/mdsplus/python/MDSplus but instead simply create a
symlink to that directory in the python site-packages directory.
This will greatly avoid the problem of the python module getting out
of sync with the MDSplus libraries.","In the past the MDSplus python module code was in directory
called mdsobjects/python. To facilitate simpler use of the python
module the directory of the module is now python/MDSplus. One
can easily access the module simply by including something like
/usr/local/mdsplus/python in the PYTHONPATH environment variable
and python will look for MDSplus in that directory when importing.
The MDSplus installers will now avoid copying the python code from
/usr/local/mdsplus/python/MDSplus but instead simply create a
symlink to that directory in the python site-packages directory.
This will greatly avoid the problem of the python module getting out
of sync with the MDSplus libraries.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1711,2019-06-12T18:42:59Z,2019-06-17T21:11:05Z,2019-06-17T21:17:10Z,CLOSED,False,328,334,111,https://github.com/tfredian,Feature: Reorganize the MDSplus python module,2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1711,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1711#issuecomment-501484605,"In the past the MDSplus python module code was in directory
called mdsobjects/python. To facilitate simpler use of the python
module the directory of the module is now python/MDSplus. One
can easily access the module simply by including something like
/usr/local/mdsplus/python in the PYTHONPATH environment variable
and python will look for MDSplus in that directory when importing.
The MDSplus installers will now avoid copying the python code from
/usr/local/mdsplus/python/MDSplus but instead simply create a
symlink to that directory in the python site-packages directory.
This will greatly avoid the problem of the python module getting out
of sync with the MDSplus libraries.","Hi Tom, I would suggest you to have a look at how setup.py gets the release number if you install from directory.. it seems to try importing mdsplus_version that doesn't exist:
from mdsplus_version import mdsplus_version
release=mdsplus_version
This resolves to me as having always the same egg package 1.0 installed in site-packages
Do we prefer this ?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1711,2019-06-12T18:42:59Z,2019-06-17T21:11:05Z,2019-06-17T21:17:10Z,CLOSED,False,328,334,111,https://github.com/tfredian,Feature: Reorganize the MDSplus python module,2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1711,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1711#issuecomment-501728554,"In the past the MDSplus python module code was in directory
called mdsobjects/python. To facilitate simpler use of the python
module the directory of the module is now python/MDSplus. One
can easily access the module simply by including something like
/usr/local/mdsplus/python in the PYTHONPATH environment variable
and python will look for MDSplus in that directory when importing.
The MDSplus installers will now avoid copying the python code from
/usr/local/mdsplus/python/MDSplus but instead simply create a
symlink to that directory in the python site-packages directory.
This will greatly avoid the problem of the python module getting out
of sync with the MDSplus libraries.","Andrea, actually with these changes there should never be an egg package unless someone uses pip to install the package (mostly for pip --user support). The new setup.py will just install a symlink to /usr/local/mdsplus/python/MDSplus in site-packages. Another possibility would be to remove the setup.py completely which would require the PYTHONPATH env to include /usr/local/mdsplus/python. The problem we're trying to resolve is the case where the version of the python module is out of sync with the installed MDSplus libraries etc. We have users who want to run their own python program which is a different version than the system python programs. The use the setup.py to install in their own python and then when an system wide MDSplus update occurs their installed MDSplus python version gets out of sync. The first attempt to solve this was to do the version comparison and complain when it gets out of sync. This probably caused confusion instead of really solving the problem. Just adding an MDSplus  symlink to the directory containing the python code in site-packages seems to solve the problem but is not a standard practice and when using a tool like pip it is difficult to even determine where it needs to create the symlink. The use of PYTHONPATH would work but some users might define PYTHONPATH in their own scripts without merging in whatever PYTHONPATH was previously defined so the script might omit the MDSplus module. I haven't researched the many options for distutils and/or setuptools to see if there is some better and/or standard way to deal with this. I agree that if we continue to provide a setup.py it should handle the version info properly for cases where it won't just create a symlink. I don't know what problems it might cause but we could just make setup.py print a message to use PYTHONPATH and exit with an error. Any better ideas on how to handle this are certainly welcome. Perhaps a topic of discussion at the MDSplus developers meeting if not solved before then.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1711,2019-06-12T18:42:59Z,2019-06-17T21:11:05Z,2019-06-17T21:17:10Z,CLOSED,False,328,334,111,https://github.com/tfredian,Feature: Reorganize the MDSplus python module,2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1711,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1711#issuecomment-501867310,"In the past the MDSplus python module code was in directory
called mdsobjects/python. To facilitate simpler use of the python
module the directory of the module is now python/MDSplus. One
can easily access the module simply by including something like
/usr/local/mdsplus/python in the PYTHONPATH environment variable
and python will look for MDSplus in that directory when importing.
The MDSplus installers will now avoid copying the python code from
/usr/local/mdsplus/python/MDSplus but instead simply create a
symlink to that directory in the python site-packages directory.
This will greatly avoid the problem of the python module getting out
of sync with the MDSplus libraries.",I think I may have figured out how to get setup.py to create a .pth file instead of doing the symlink thing. I got it to work with the /usr/local/mdsplus/python directory hardcoded  in the setup.py but will have to change that to try to detect the location of the setup.py and use it's parent directory for the .pth file. I will also fix the release handling in the setup.py and push changes to the PR on Monday hopefully.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1711,2019-06-12T18:42:59Z,2019-06-17T21:11:05Z,2019-06-17T21:17:10Z,CLOSED,False,328,334,111,https://github.com/tfredian,Feature: Reorganize the MDSplus python module,2,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1711,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1711#issuecomment-502750258,"In the past the MDSplus python module code was in directory
called mdsobjects/python. To facilitate simpler use of the python
module the directory of the module is now python/MDSplus. One
can easily access the module simply by including something like
/usr/local/mdsplus/python in the PYTHONPATH environment variable
and python will look for MDSplus in that directory when importing.
The MDSplus installers will now avoid copying the python code from
/usr/local/mdsplus/python/MDSplus but instead simply create a
symlink to that directory in the python site-packages directory.
This will greatly avoid the problem of the python module getting out
of sync with the MDSplus libraries.",Do not merge yet. Ran into a problem with Windows installer with python module.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1712,2019-06-17T15:05:34Z,2019-06-17T16:03:08Z,2019-06-17T16:03:12Z,MERGED,True,64,45,4,https://github.com/zack-vii,Zck mdip stuck recv,3,[],https://github.com/MDSplus/mdsplus/pull/1712,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1712,"mdsip seems to get stuck in recv when hosting. This replaces the blocking recv with a timeout loop select.
Furthermore the requested username of the client will be store in connection struct for debugging purposes (since the process uid might have mapped it to something else or not map at all).
Finally thick clients wont keep connections open when they become unused. this should improve the situation with dangling connections as a cleanup currently requires the user to trigger disconnect old connection. TODO: if the keep allive feature for unused connections should be required we should spawn a thread cleaning up old connection after some time out if not reuse by then.","mdsip seems to get stuck in recv when hosting. This replaces the blocking recv with a timeout loop select.
Furthermore the requested username of the client will be store in connection struct for debugging purposes (since the process uid might have mapped it to something else or not map at all).
Finally thick clients wont keep connections open when they become unused. this should improve the situation with dangling connections as a cleanup currently requires the user to trigger disconnect old connection. TODO: if the keep allive feature for unused connections should be required we should spawn a thread cleaning up old connection after some time out if not reuse by then.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1712,2019-06-17T15:05:34Z,2019-06-17T16:03:08Z,2019-06-17T16:03:12Z,MERGED,True,64,45,4,https://github.com/zack-vii,Zck mdip stuck recv,3,[],https://github.com/MDSplus/mdsplus/pull/1712,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1712#issuecomment-502734940,"mdsip seems to get stuck in recv when hosting. This replaces the blocking recv with a timeout loop select.
Furthermore the requested username of the client will be store in connection struct for debugging purposes (since the process uid might have mapped it to something else or not map at all).
Finally thick clients wont keep connections open when they become unused. this should improve the situation with dangling connections as a cleanup currently requires the user to trigger disconnect old connection. TODO: if the keep allive feature for unused connections should be required we should spawn a thread cleaning up old connection after some time out if not reuse by then.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1712,2019-06-17T15:05:34Z,2019-06-17T16:03:08Z,2019-06-17T16:03:12Z,MERGED,True,64,45,4,https://github.com/zack-vii,Zck mdip stuck recv,3,[],https://github.com/MDSplus/mdsplus/pull/1712,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1712#issuecomment-502746296,"mdsip seems to get stuck in recv when hosting. This replaces the blocking recv with a timeout loop select.
Furthermore the requested username of the client will be store in connection struct for debugging purposes (since the process uid might have mapped it to something else or not map at all).
Finally thick clients wont keep connections open when they become unused. this should improve the situation with dangling connections as a cleanup currently requires the user to trigger disconnect old connection. TODO: if the keep allive feature for unused connections should be required we should spawn a thread cleaning up old connection after some time out if not reuse by then.",windows had a hick up last test but succeeded in run .#3560,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1713,2019-06-17T21:24:02Z,2019-06-18T12:47:27Z,2019-06-18T12:47:27Z,MERGED,True,340,346,111,https://github.com/tfredian,Feature: Reorganize python module,7,[],https://github.com/MDSplus/mdsplus/pull/1713,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1713,"The directory structure for the MDSplus python module
is being changed from mdsplus/mdsobjects/python to
mdsplus/python/mdsplus. This enables the use of the module
by simply defining PYTHONPATH=/python.
The setup.py in the module has been changed to add an mdsplus.pth
file to the python site packages which directs python to reference
the module in the mdsplus/python/MDSplus directory similar to
what changing PYTHONPATH would do.
The windows installer will also compile the python code in the mdsplus/python/MDSplus during
installation.","The directory structure for the MDSplus python module
is being changed from mdsplus/mdsobjects/python to
mdsplus/python/mdsplus. This enables the use of the module
by simply defining PYTHONPATH=/python.
The setup.py in the module has been changed to add an mdsplus.pth
file to the python site packages which directs python to reference
the module in the mdsplus/python/MDSplus directory similar to
what changing PYTHONPATH would do.
The windows installer will also compile the python code in the mdsplus/python/MDSplus during
installation.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1714,2019-06-18T19:34:03Z,2019-06-21T12:54:53Z,2019-08-17T10:16:49Z,MERGED,True,88,67,13,https://github.com/zack-vii,Fixes some memory issues and undefined behavior ,9,[],https://github.com/MDSplus/mdsplus/pull/1714,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1714,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1714,2019-06-18T19:34:03Z,2019-06-21T12:54:53Z,2019-08-17T10:16:49Z,MERGED,True,88,67,13,https://github.com/zack-vii,Fixes some memory issues and undefined behavior ,9,[],https://github.com/MDSplus/mdsplus/pull/1714,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1714#issuecomment-503291096,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1714,2019-06-18T19:34:03Z,2019-06-21T12:54:53Z,2019-08-17T10:16:49Z,MERGED,True,88,67,13,https://github.com/zack-vii,Fixes some memory issues and undefined behavior ,9,[],https://github.com/MDSplus/mdsplus/pull/1714,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1714#issuecomment-503648381,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1714,2019-06-18T19:34:03Z,2019-06-21T12:54:53Z,2019-08-17T10:16:49Z,MERGED,True,88,67,13,https://github.com/zack-vii,Fixes some memory issues and undefined behavior ,9,[],https://github.com/MDSplus/mdsplus/pull/1714,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1714#issuecomment-503662760,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1715,2019-06-24T13:45:19Z,2019-06-25T23:18:15Z,2019-11-25T10:21:33Z,CLOSED,False,4,4,2,https://github.com/GabrieleManduchi,Fix:fix random crashes in Distributed Client,1,[],https://github.com/MDSplus/mdsplus/pull/1715,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1715,"When calling remote disconnect, disconnectFromMds was called with wrong id in case a connection whith h.connections == 0 was found in the host list. This can happen (and indeed it happened often in our configuration) if some subtree is missing.
In addition, binary not has been used in place of the wrong logical not  in DisconnectConnections","When calling remote disconnect, disconnectFromMds was called with wrong id in case a connection whith h.connections == 0 was found in the host list. This can happen (and indeed it happened often in our configuration) if some subtree is missing.
In addition, binary not has been used in place of the wrong logical not  in DisconnectConnections",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1715,2019-06-24T13:45:19Z,2019-06-25T23:18:15Z,2019-11-25T10:21:33Z,CLOSED,False,4,4,2,https://github.com/GabrieleManduchi,Fix:fix random crashes in Distributed Client,1,[],https://github.com/MDSplus/mdsplus/pull/1715,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1715#issuecomment-505234686,"When calling remote disconnect, disconnectFromMds was called with wrong id in case a connection whith h.connections == 0 was found in the host list. This can happen (and indeed it happened often in our configuration) if some subtree is missing.
In addition, binary not has been used in place of the wrong logical not  in DisconnectConnections",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1715,2019-06-24T13:45:19Z,2019-06-25T23:18:15Z,2019-11-25T10:21:33Z,CLOSED,False,4,4,2,https://github.com/GabrieleManduchi,Fix:fix random crashes in Distributed Client,1,[],https://github.com/MDSplus/mdsplus/pull/1715,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1715#issuecomment-505319769,"When calling remote disconnect, disconnectFromMds was called with wrong id in case a connection whith h.connections == 0 was found in the host list. This can happen (and indeed it happened often in our configuration) if some subtree is missing.
In addition, binary not has been used in place of the wrong logical not  in DisconnectConnections",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1715,2019-06-24T13:45:19Z,2019-06-25T23:18:15Z,2019-11-25T10:21:33Z,CLOSED,False,4,4,2,https://github.com/GabrieleManduchi,Fix:fix random crashes in Distributed Client,1,[],https://github.com/MDSplus/mdsplus/pull/1715,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1715#issuecomment-505458776,"When calling remote disconnect, disconnectFromMds was called with wrong id in case a connection whith h.connections == 0 was found in the host list. This can happen (and indeed it happened often in our configuration) if some subtree is missing.
In addition, binary not has been used in place of the wrong logical not  in DisconnectConnections",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1715,2019-06-24T13:45:19Z,2019-06-25T23:18:15Z,2019-11-25T10:21:33Z,CLOSED,False,4,4,2,https://github.com/GabrieleManduchi,Fix:fix random crashes in Distributed Client,1,[],https://github.com/MDSplus/mdsplus/pull/1715,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1715#issuecomment-505657210,"When calling remote disconnect, disconnectFromMds was called with wrong id in case a connection whith h.connections == 0 was found in the host list. This can happen (and indeed it happened often in our configuration) if some subtree is missing.
In addition, binary not has been used in place of the wrong logical not  in DisconnectConnections",might have been fixed by #1723,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1716,2019-06-24T16:54:26Z,2019-06-24T17:55:13Z,2019-06-24T17:55:13Z,MERGED,True,14,15,3,https://github.com/tfredian,Fix: Repair python updating scripts,1,[],https://github.com/MDSplus/mdsplus/pull/1716,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1716,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1716,2019-06-24T16:54:26Z,2019-06-24T17:55:13Z,2019-06-24T17:55:13Z,MERGED,True,14,15,3,https://github.com/tfredian,Fix: Repair python updating scripts,1,[],https://github.com/MDSplus/mdsplus/pull/1716,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1716#issuecomment-505104439,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1717,2019-06-24T20:56:25Z,2019-06-24T21:14:03Z,2019-06-24T21:14:03Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Typo in debian python install script,1,[],https://github.com/MDSplus/mdsplus/pull/1717,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1717,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1719,2019-06-25T13:00:05Z,2019-06-25T13:49:16Z,2019-06-25T13:49:24Z,MERGED,True,12,7,2,https://github.com/tfredian,Fix: More fixes to installers,1,[],https://github.com/MDSplus/mdsplus/pull/1719,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1719,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1720,2019-06-25T13:22:20Z,2019-06-25T13:39:59Z,2019-11-25T10:21:34Z,MERGED,True,2,1,1,https://github.com/joshStillerman,Fix: TCL do/method with args segfault,1,[],https://github.com/MDSplus/mdsplus/pull/1720,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1720,"The call to process the arguments in TclDoMethod was passing the
address of a descriptor to TdiIntrisic.  It needed to pass the address
of this pointer because the input argument is declared:
struct descriptor *list[]","The call to process the arguments in TclDoMethod was passing the
address of a descriptor to TdiIntrisic.  It needed to pass the address
of this pointer because the input argument is declared:
struct descriptor *list[]",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1720,2019-06-25T13:22:20Z,2019-06-25T13:39:59Z,2019-11-25T10:21:34Z,MERGED,True,2,1,1,https://github.com/joshStillerman,Fix: TCL do/method with args segfault,1,[],https://github.com/MDSplus/mdsplus/pull/1720,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1720#issuecomment-505442771,"The call to process the arguments in TclDoMethod was passing the
address of a descriptor to TdiIntrisic.  It needed to pass the address
of this pointer because the input argument is declared:
struct descriptor *list[]",Fixes #1720,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1721,2019-06-25T13:47:29Z,2019-06-25T17:08:30Z,2019-08-17T10:16:47Z,MERGED,True,183,247,3,https://github.com/zack-vii,Fix: uniform thread and tunnel implementation,1,[],https://github.com/MDSplus/mdsplus/pull/1721,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1721,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1721,2019-06-25T13:47:29Z,2019-06-25T17:08:30Z,2019-08-17T10:16:47Z,MERGED,True,183,247,3,https://github.com/zack-vii,Fix: uniform thread and tunnel implementation,1,[],https://github.com/MDSplus/mdsplus/pull/1721,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1721#issuecomment-505535220,,~Thread formally was  a dirty copy of ~Tunnel to ensure this will not break anything. However this makes it hard to maintain. This solved the problem in a similar manner as the tcp/udt protocol.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1723,2019-06-25T15:55:01Z,2019-06-25T19:42:51Z,2019-06-25T23:20:28Z,MERGED,True,92,56,2,https://github.com/zack-vii,Zck distributed connections,6,[],https://github.com/MDSplus/mdsplus/pull/1723,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1723,attempt to fix #1722 and issue with distributed client implementation addressed by #1715,attempt to fix #1722 and issue with distributed client implementation addressed by #1715,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1723,2019-06-25T15:55:01Z,2019-06-25T19:42:51Z,2019-06-25T23:20:28Z,MERGED,True,92,56,2,https://github.com/zack-vii,Zck distributed connections,6,[],https://github.com/MDSplus/mdsplus/pull/1723,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1723#issuecomment-505512049,attempt to fix #1722 and issue with distributed client implementation addressed by #1715,"In DisconnectConnection() you want to enter the block if any flag bit except CON_DISCONNECT is set
this corresponds to c->state & ~CON_DISCONNECT, which is different from  !(c->state & CON_DISCONNECT)
if you use !(c->state & CON_DISCONNECT ) the result is true if bit CON_DISCONNECT is false,
I don't' think this is the condition you expected.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1723,2019-06-25T15:55:01Z,2019-06-25T19:42:51Z,2019-06-25T23:20:28Z,MERGED,True,92,56,2,https://github.com/zack-vii,Zck distributed connections,6,[],https://github.com/MDSplus/mdsplus/pull/1723,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1723#issuecomment-505526692,attempt to fix #1722 and issue with distributed client implementation addressed by #1715,"well it the condition that I intended today, but I have to overthink if that was the condition I intended back then.
edit: but you are right the other way would be nonsense given teh c->state |= CON_DISCONNECT",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1723,2019-06-25T15:55:01Z,2019-06-25T19:42:51Z,2019-06-25T23:20:28Z,MERGED,True,92,56,2,https://github.com/zack-vii,Zck distributed connections,6,[],https://github.com/MDSplus/mdsplus/pull/1723,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1723#issuecomment-505564166,attempt to fix #1722 and issue with distributed client implementation addressed by #1715,"This change improves the performance problem described in #1722 but doesn't do as well as my PR (which I closed because of this PR). With these changes the time for opening of a cmod tree is reduced to 16 seconds with a total of 18 connections. Just setting USE_TIME=60 in current alpha drops the time to open the tree back down to 1 second. Changing the timeout in this pr to 60 seconds did not help.
Also the DEBUG macro is still defined so this PR will cause debug printouts.
If this can't be tweaked to give the 1 second open speed I can reopen my PR to simply enable the 60 second USE_TIME value.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1723,2019-06-25T15:55:01Z,2019-06-25T19:42:51Z,2019-06-25T23:20:28Z,MERGED,True,92,56,2,https://github.com/zack-vii,Zck distributed connections,6,[],https://github.com/MDSplus/mdsplus/pull/1723,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1723#issuecomment-505566255,attempt to fix #1722 and issue with distributed client implementation addressed by #1715,I think you may need to use a time field in the host_t struct. Just having a thread periodically cleaning unused connections does not solve the issue of excessive reconnections to servers.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1723,2019-06-25T15:55:01Z,2019-06-25T19:42:51Z,2019-06-25T23:20:28Z,MERGED,True,92,56,2,https://github.com/zack-vii,Zck distributed connections,6,[],https://github.com/MDSplus/mdsplus/pull/1723,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/1723#issuecomment-505582860,attempt to fix #1722 and issue with distributed client implementation addressed by #1715,I put in a commit that makes this work. It now opens that cmod tree in 1 second like it used to and does the host_list_cleanup only every 10 seconds after any connection activity.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1724,2019-06-25T17:45:41Z,2019-06-25T17:46:46Z,2019-06-25T17:46:46Z,CLOSED,False,2,1,1,https://github.com/tfredian,Fix: keep distributed connections open for 60 seconds,1,[],https://github.com/MDSplus/mdsplus/pull/1724,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1724,"Distributed client connections to servers will be left open for
60 seconds to prevent excessive connect and disconnects causing
a performance deterioration.
This fixes #1722","Distributed client connections to servers will be left open for
60 seconds to prevent excessive connect and disconnects causing
a performance deterioration.
This fixes #1722",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1725,2019-06-25T23:30:51Z,2019-06-26T12:38:02Z,2019-06-26T13:02:27Z,MERGED,True,46,21,1,https://github.com/zack-vii,Fix:  reduce forced and reset only if needed,1,[],https://github.com/MDSplus/mdsplus/pull/1725,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1725,"Adds the idle state of the clean up thread back in.
This prevents the rar but yet possible interference with a dis-/connect in sync with the 10sec timeout.
Also it minimizes the overhead.
Forced way to disconnect now only disconnects conid, honoring the timeout for all other connections.
Connect does only reset the timer but never arms it.
Disconnect only arms the timeout if connection counter requires it and never resets.","Adds the idle state of the clean up thread back in.
This prevents the rar but yet possible interference with a dis-/connect in sync with the 10sec timeout.
Also it minimizes the overhead.
Forced way to disconnect now only disconnects conid, honoring the timeout for all other connections.
Connect does only reset the timer but never arms it.
Disconnect only arms the timeout if connection counter requires it and never resets.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1725,2019-06-25T23:30:51Z,2019-06-26T12:38:02Z,2019-06-26T13:02:27Z,MERGED,True,46,21,1,https://github.com/zack-vii,Fix:  reduce forced and reset only if needed,1,[],https://github.com/MDSplus/mdsplus/pull/1725,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1725#issuecomment-505661262,"Adds the idle state of the clean up thread back in.
This prevents the rar but yet possible interference with a dis-/connect in sync with the 10sec timeout.
Also it minimizes the overhead.
Forced way to disconnect now only disconnects conid, honoring the timeout for all other connections.
Connect does only reset the timer but never arms it.
Disconnect only arms the timeout if connection counter requires it and never resets.",no idea why this is needed,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1725,2019-06-25T23:30:51Z,2019-06-26T12:38:02Z,2019-06-26T13:02:27Z,MERGED,True,46,21,1,https://github.com/zack-vii,Fix:  reduce forced and reset only if needed,1,[],https://github.com/MDSplus/mdsplus/pull/1725,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1725#issuecomment-505852119,"Adds the idle state of the clean up thread back in.
This prevents the rar but yet possible interference with a dis-/connect in sync with the 10sec timeout.
Also it minimizes the overhead.
Forced way to disconnect now only disconnects conid, honoring the timeout for all other connections.
Connect does only reset the timer but never arms it.
Disconnect only arms the timeout if connection counter requires it and never resets.",I think this may improve performance,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1726,2019-06-26T12:23:59Z,2019-06-26T16:54:21Z,2019-06-26T16:55:40Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Repair mac release version handling,1,[],https://github.com/MDSplus/mdsplus/pull/1726,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1726,"The build script used the --output-delimiter option to cut but
this is not supported on macosx.","The build script used the --output-delimiter option to cut but
this is not supported on macosx.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1727,2019-06-26T14:16:51Z,2019-06-26T16:53:11Z,2019-11-25T10:21:35Z,MERGED,True,28,28,10,https://github.com/joshStillerman,Fix: getOriginalPartName returns a str not String,1,[],https://github.com/MDSplus/mdsplus/pull/1727,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1727,"getOriginalPartName used to return an MDSplus String object.
Several of the Mit Device models then called its getString method
to get a python string from it.
This was changed (when ?) to return a python string, which does
not have a getString method.
Since the python string is a more natural response, the device
code is now changed to assume it returns a python str.","getOriginalPartName used to return an MDSplus String object.
Several of the Mit Device models then called its getString method
to get a python string from it.
This was changed (when ?) to return a python string, which does
not have a getString method.
Since the python string is a more natural response, the device
code is now changed to assume it returns a python str.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1728,2019-06-26T14:34:49Z,2019-07-01T12:31:27Z,2019-08-17T10:15:52Z,MERGED,True,46,98,3,https://github.com/zack-vii,Feature: added int64 return values from lib calls and wrapped __ALPHA,4,[],https://github.com/MDSplus/mdsplus/pull/1728,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1728,"turns out it was not possible to do LIB->CALL:Q()
also this reduces code doubling and skips code that is of no use ifndef __ALPHA","turns out it was not possible to do LIB->CALL:Q()
also this reduces code doubling and skips code that is of no use ifndef __ALPHA",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1728,2019-06-26T14:34:49Z,2019-07-01T12:31:27Z,2019-08-17T10:15:52Z,MERGED,True,46,98,3,https://github.com/zack-vii,Feature: added int64 return values from lib calls and wrapped __ALPHA,4,[],https://github.com/MDSplus/mdsplus/pull/1728,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1728#issuecomment-505932434,"turns out it was not possible to do LIB->CALL:Q()
also this reduces code doubling and skips code that is of no use ifndef __ALPHA","Hmmm, I just now noticed that you removed the checks for __vms 2 years ago and left the __ALPHA code blocks in place. I believe the __ALPHA checks were there to handle vms systems running OpenVMS on the VAX Alpha hardware. I think all the references to the __ALPHA macro could have been removed when we discontinued vms support so this code could be greatly cleaned up.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1728,2019-06-26T14:34:49Z,2019-07-01T12:31:27Z,2019-08-17T10:15:52Z,MERGED,True,46,98,3,https://github.com/zack-vii,Feature: added int64 return values from lib calls and wrapped __ALPHA,4,[],https://github.com/MDSplus/mdsplus/pull/1728,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1728#issuecomment-506210041,"turns out it was not possible to do LIB->CALL:Q()
also this reduces code doubling and skips code that is of no use ifndef __ALPHA",great,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1729,2019-06-26T17:22:27Z,2019-06-26T17:32:23Z,2019-06-26T17:32:24Z,MERGED,True,51,46,3,https://github.com/tfredian,Fix: More installer repairs,1,[],https://github.com/MDSplus/mdsplus/pull/1729,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1729,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1730,2019-06-26T18:30:32Z,2019-06-26T18:45:44Z,2019-06-26T18:45:45Z,MERGED,True,1,0,1,https://github.com/tfredian,Fix: Another packaging fix,1,[],https://github.com/MDSplus/mdsplus/pull/1730,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1730,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1731,2019-06-26T21:03:13Z,2019-07-01T16:00:24Z,2019-07-01T16:00:24Z,MERGED,True,262700,235665,1798,https://github.com/tfredian,Twf promote stable alpha,855,[],https://github.com/MDSplus/mdsplus/pull/1731,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1731,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1733,2019-06-28T15:59:29Z,2019-07-01T06:50:38Z,2019-11-25T10:21:35Z,MERGED,True,15,5,2,https://github.com/GabrieleManduchi,Feature:add range fields to redpitaya; remove debug message in datast…,1,[],https://github.com/MDSplus/mdsplus/pull/1733,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1733,…reams,…reams,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1734,2019-07-01T15:54:42Z,2019-07-08T15:28:42Z,2019-07-08T15:30:05Z,MERGED,True,1,1,1,https://github.com/tfredian,Feature: Add node obeys usage when using .name syntax,1,[],https://github.com/MDSplus/mdsplus/pull/1734,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1734,"In the past when adding a new node the code would look for a leading
period and would add a child node (usage structure) even if the usage
specified depicted a typical member node.
This change will create a child node only under the following conditions:

The usage is ""structure"" or ""subtree""
The usage is ""any"" (default in most cases) and the node name is
preceeded by a period.

Otherwise a member node will be created with the specified usage.
This fixes #1732","In the past when adding a new node the code would look for a leading
period and would add a child node (usage structure) even if the usage
specified depicted a typical member node.
This change will create a child node only under the following conditions:

The usage is ""structure"" or ""subtree""
The usage is ""any"" (default in most cases) and the node name is
preceeded by a period.

Otherwise a member node will be created with the specified usage.
This fixes #1732",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1735,2019-07-02T15:20:40Z,2019-07-03T20:57:10Z,2019-07-03T20:57:10Z,MERGED,True,14,11,1,https://github.com/seanalsop,Fix: Small fixes for acq435st.py.,4,[],https://github.com/MDSplus/mdsplus/pull/1735,https://github.com/seanalsop,1,https://github.com/MDSplus/mdsplus/pull/1735,This is my first PR to MDSplus - and was just the changes I needed to make to get an acq1001+acq435 combo to stream. Let me know if there is anything I need to change.,This is my first PR to MDSplus - and was just the changes I needed to make to get an acq1001+acq435 combo to stream. Let me know if there is anything I need to change.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1735,2019-07-02T15:20:40Z,2019-07-03T20:57:10Z,2019-07-03T20:57:10Z,MERGED,True,14,11,1,https://github.com/seanalsop,Fix: Small fixes for acq435st.py.,4,[],https://github.com/MDSplus/mdsplus/pull/1735,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1735#issuecomment-507724258,This is my first PR to MDSplus - and was just the changes I needed to make to get an acq1001+acq435 combo to stream. Let me know if there is anything I need to change.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1735,2019-07-02T15:20:40Z,2019-07-03T20:57:10Z,2019-07-03T20:57:10Z,MERGED,True,14,11,1,https://github.com/seanalsop,Fix: Small fixes for acq435st.py.,4,[],https://github.com/MDSplus/mdsplus/pull/1735,https://github.com/seanalsop,3,https://github.com/MDSplus/mdsplus/pull/1735#issuecomment-508037742,This is my first PR to MDSplus - and was just the changes I needed to make to get an acq1001+acq435 combo to stream. Let me know if there is anything I need to change.,"Hi Josh,
I don't think you're being overly critical at all, I'd like to get this right.
1 - There was a mix of 2 and 3 digit channel numbers in the file. This was throwing
an error. I have changed all of the channel numbers to 2 digits now.
2 - I think the node name changes were the digits in the channel numbers?
3 - The imports actually weren't present at all. The script was error-ing out. I
agree, it's definitely cleaner to have them inside the functions. I've made a
commit to move them into their relevant functions. I have not yet moved Queue.
Since it is used in two functions inside the class it would require an import
and then adding ""self."" to the module calls. If you want this implemented I am
happy to do so. I had a look for Queue in the git history but couldn't find
anything.


Syntax problems were mostly just missing ""self."" that were throwing errors.


Without renaming Worker to MDSWorker it was throwing an error. I changed this
just to get the script to run as I saw that Worker was renamed to MDWorker in an
earlier commit but the call to it wasn't changed.


There was one part that I wanted to highlight - I added a ""first = True"" inside
the run function. I'm not sure if it is correct for it to be there. Again this
was a change I made just to get the script to stream from the system, so I know
it works, I just wanted to make sure this was okay.
Once you're happy with the changes I'll close this PR and open a new one
starting with ""Fix:"".
Thanks for taking the time to look through the PR.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1736,2019-07-05T12:49:22Z,2019-07-08T16:30:16Z,2019-07-08T16:30:16Z,MERGED,True,1,1,1,https://github.com/seanalsop,"Fix: acq2106_423st.py was throwing an error due to a missing ""dev."".",1,[],https://github.com/MDSplus/mdsplus/pull/1736,https://github.com/seanalsop,1,https://github.com/MDSplus/mdsplus/pull/1736,Small PR to fix a bug in the acq2106_423st.py file. This was causing the script to error out.,Small PR to fix a bug in the acq2106_423st.py file. This was causing the script to error out.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1736,2019-07-05T12:49:22Z,2019-07-08T16:30:16Z,2019-07-08T16:30:16Z,MERGED,True,1,1,1,https://github.com/seanalsop,"Fix: acq2106_423st.py was throwing an error due to a missing ""dev."".",1,[],https://github.com/MDSplus/mdsplus/pull/1736,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1736#issuecomment-508748267,Small PR to fix a bug in the acq2106_423st.py file. This was causing the script to error out.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1736,2019-07-05T12:49:22Z,2019-07-08T16:30:16Z,2019-07-08T16:30:16Z,MERGED,True,1,1,1,https://github.com/seanalsop,"Fix: acq2106_423st.py was throwing an error due to a missing ""dev."".",1,[],https://github.com/MDSplus/mdsplus/pull/1736,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1736#issuecomment-509233450,Small PR to fix a bug in the acq2106_423st.py file. This was causing the script to error out.,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1736,2019-07-05T12:49:22Z,2019-07-08T16:30:16Z,2019-07-08T16:30:16Z,MERGED,True,1,1,1,https://github.com/seanalsop,"Fix: acq2106_423st.py was throwing an error due to a missing ""dev."".",1,[],https://github.com/MDSplus/mdsplus/pull/1736,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1736#issuecomment-509273858,Small PR to fix a bug in the acq2106_423st.py file. This was causing the script to error out.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1742,2019-07-15T17:22:26Z,2019-07-15T21:14:13Z,2019-07-15T21:14:19Z,MERGED,True,37,11,5,https://github.com/tfredian,Feature: Add support for fc30,1,[],https://github.com/MDSplus/mdsplus/pull/1742,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1742,New compilers required code changes for warnings and obsoleted statements.,New compilers required code changes for warnings and obsoleted statements.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1743,2019-07-17T07:56:34Z,2019-07-23T12:13:07Z,2019-11-25T10:21:36Z,MERGED,True,383,646,8,https://github.com/GabrieleManduchi,Gm add treetdimethods,6,[],https://github.com/MDSplus/mdsplus/pull/1743,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1743,"Added Tree methods tdiData(), tsiEvaluate(), tdiExecute(), tdiCompile() in order to avoid the non thread safe usage of setActiveTree. Now C++ interface is on step with the python one.
Added the corresponding test unit.
In addition, the test unit for TreeSegments has been fixed (I wonder if it was actually executed when making tests....) , and the node.js interface for streaming updated","Added Tree methods tdiData(), tsiEvaluate(), tdiExecute(), tdiCompile() in order to avoid the non thread safe usage of setActiveTree. Now C++ interface is on step with the python one.
Added the corresponding test unit.
In addition, the test unit for TreeSegments has been fixed (I wonder if it was actually executed when making tests....) , and the node.js interface for streaming updated",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1744,2019-07-17T19:51:34Z,2019-07-17T21:17:22Z,2019-07-17T21:17:22Z,MERGED,True,37,11,5,https://github.com/tfredian,Feature: Add support for fc30,1,[],https://github.com/MDSplus/mdsplus/pull/1744,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1744,New compilers required code changes for warnings and obsoleted statements.,New compilers required code changes for warnings and obsoleted statements.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1748,2019-07-23T16:26:15Z,2019-07-24T10:21:31Z,2019-11-25T10:21:37Z,MERGED,True,18,9,2,https://github.com/GabrieleManduchi,Fis:reversed dimension order in get SubArray and,3,[],https://github.com/MDSplus/mdsplus/pull/1748,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1748,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1748,2019-07-23T16:26:15Z,2019-07-24T10:21:31Z,2019-11-25T10:21:37Z,MERGED,True,18,9,2,https://github.com/GabrieleManduchi,Fis:reversed dimension order in get SubArray and,3,[],https://github.com/MDSplus/mdsplus/pull/1748,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1748#issuecomment-514506204,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1750,2019-07-24T19:31:28Z,2019-08-02T16:07:52Z,2019-08-17T10:15:49Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: cast rfa to Uint64 in python api,1,[],https://github.com/MDSplus/mdsplus/pull/1750,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1750,addresses #1655,addresses #1655,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1750,2019-07-24T19:31:28Z,2019-08-02T16:07:52Z,2019-08-17T10:15:49Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: cast rfa to Uint64 in python api,1,[],https://github.com/MDSplus/mdsplus/pull/1750,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1750#issuecomment-516771384,addresses #1655,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1750,2019-07-24T19:31:28Z,2019-08-02T16:07:52Z,2019-08-17T10:15:49Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: cast rfa to Uint64 in python api,1,[],https://github.com/MDSplus/mdsplus/pull/1750,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1750#issuecomment-516809521,addresses #1655,"looks like an issue with mdstcpip
http://jenkins2.mdsplus.org/job/fc28/2752/
free(): invalid pointer
... again/still possibly when a connection is dropped.
http://jenkins2.mdsplus.org/job/fc28/2752/artifact/tests/64/python/MDSplus/tests/connectionUnitTest.log/*view*/
should not be related to this PR though",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1750,2019-07-24T19:31:28Z,2019-08-02T16:07:52Z,2019-08-17T10:15:49Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: cast rfa to Uint64 in python api,1,[],https://github.com/MDSplus/mdsplus/pull/1750,https://github.com/pfbuxton,4,https://github.com/MDSplus/mdsplus/pull/1750#issuecomment-517196114,addresses #1655,"This issue is also present when one uses the alternative Python method for accessing data:
conn = Connection(MDSplus_IP_address)
conn.openTree(tree,pulseNo)
time_inserted = conn.get(""getnci(""+place_to_read+"",'TIME_INSERTED')"").data()
Also when accessing data in Matlab.
In all three cases the overflow behaves differently, so a different number is generated.
Thanks,
Peter",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1750,2019-07-24T19:31:28Z,2019-08-02T16:07:52Z,2019-08-17T10:15:49Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: cast rfa to Uint64 in python api,1,[],https://github.com/MDSplus/mdsplus/pull/1750,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/1750#issuecomment-517405353,addresses #1655,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1750,2019-07-24T19:31:28Z,2019-08-02T16:07:52Z,2019-08-17T10:15:49Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: cast rfa to Uint64 in python api,1,[],https://github.com/MDSplus/mdsplus/pull/1750,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/1750#issuecomment-517730755,addresses #1655,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1751,2019-07-29T10:20:04Z,2019-07-29T11:58:38Z,2019-11-25T10:21:37Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,Fix:handle  empty string arrays,1,[],https://github.com/MDSplus/mdsplus/pull/1751,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1751,Added a check for size 0 in order to avoid possible division by zero (in case length == 0),Added a check for size 0 in order to avoid possible division by zero (in case length == 0),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1753,2019-07-29T12:49:19Z,2019-07-29T19:18:33Z,2019-11-25T10:21:37Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,Fix:handle  empty string arrays,1,[],https://github.com/MDSplus/mdsplus/pull/1753,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1753,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1754,addresses #1752,addresses #1752,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-516611959,addresses #1752,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-516630407,addresses #1752,"This PR looks scary but it only juggles with build files of java projects and javatraverser2. I simplified the Makefiles a lot by using wildcard instead of detailed lists. this is possibly also doable for jscope but it i got scarred by its complexity. maybe it is useful to put jtraverser and jscope in packages and add the appropriate folder structure. But i leave that to you or to later.
Once we have an account for jenkins set up we can deploy maven projects via
deploy/build.sh --os=maven --publish --keys=/mdsplus/certs
maybe as part of trigger.sh in the publish phase.
currently i published the parent pom, mdsplus-api, and jtraverser2 on maven-central
https://search.maven.org/search?q=g:org.mdsplus
I think mdsobjects or mdsclient could be candidates. but jscope and jtraverser would need some do-over.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-516717208,addresses #1752,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-518101316,addresses #1752,"Anyone, any opinion on this?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-518234488,addresses #1752,"I don't.  Don't know anything about maven. Seems fine to me. How big a
change to the way we do java things would it be? Are there downsides? 
Effort/Complexity/Other ?
…
-Josh
On 8/5/19 2:20 AM, Timo Schroeder wrote:

 Anyone, any opinion on this?

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#1754?email_source=notifications&email_token=ABY5AZJ5K2AIGHN42AAQS6LQC7BBTA5CNFSM4IHYNFW2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD3QZSRA#issuecomment-518101316>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABY5AZPQ3KOJXHJDQVWGLXDQC7BBTANCNFSM4IHYNFWQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-518289978,addresses #1752,well for in here I meant the relocation of projects in ./java/. this pr does what needed to be done for jtraverser2. we can add more projects later if we want. this pr does not change anything essential in other projects but simplifies the way they are built.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/joshStillerman,8,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-518291004,addresses #1752,"Good by me.  I will let the java enthusiasts chime in if they want to.
…
On 8/5/19 11:48 AM, Timo Schroeder wrote:

 well for in here I meant the relocation of projects in ./java/. this
 pr does what needed to be done for jtraverser2. we can add more
 projects later if we want. this pr does not change anything essential
 in other projects but simplifies the way they are built.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#1754?email_source=notifications&email_token=ABY5AZJVEIEFMQPSRBWTR2LQDBDV3A5CNFSM4IHYNFW2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD3SHUOQ#issuecomment-518289978>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABY5AZJIPLFKOYHFI2KRY5LQDBDV3ANCNFSM4IHYNFWQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-518326481,addresses #1752,"I am in holidays now but in a copule pf days
…
On Mon, 05 Aug 2019 08:50:53 -0700   Timo Schroeder ***@***.***> wrote:
 Assigned #1754 to @GabrieleManduchi.

 --
 You are receiving this because you were assigned.
 Reply to this email directly or view it on GitHub:
 #1754 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1754,2019-07-30T04:58:12Z,2019-08-29T09:08:49Z,2019-10-31T23:28:31Z,CLOSED,False,33231,33707,1172,https://github.com/zack-vii,java maven,22,[],https://github.com/MDSplus/mdsplus/pull/1754,https://github.com/GabrieleManduchi,10,https://github.com/MDSplus/mdsplus/pull/1754#issuecomment-518326986,addresses #1752,"I am on holidays now but in a couple of days i will look at it
…
On Mon, 05 Aug 2019 08:50:53 -0700   Timo Schroeder ***@***.***> wrote:
 Assigned #1754 to @GabrieleManduchi.

 --
 You are receiving this because you were assigned.
 Reply to this email directly or view it on GitHub:
 #1754 (comment)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1756,2019-07-31T16:45:45Z,2019-08-05T15:54:10Z,2019-08-05T15:54:11Z,MERGED,True,2,2,1,https://github.com/santorofer,"Modified the Python Tree() class, specifically the dir() method to return the default path to a node and not always the TOP value.",3,[],https://github.com/MDSplus/mdsplus/pull/1756,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1756,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1756,2019-07-31T16:45:45Z,2019-08-05T15:54:10Z,2019-08-05T15:54:11Z,MERGED,True,2,2,1,https://github.com/santorofer,"Modified the Python Tree() class, specifically the dir() method to return the default path to a node and not always the TOP value.",3,[],https://github.com/MDSplus/mdsplus/pull/1756,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1756#issuecomment-516929200,,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1756,2019-07-31T16:45:45Z,2019-08-05T15:54:10Z,2019-08-05T15:54:11Z,MERGED,True,2,2,1,https://github.com/santorofer,"Modified the Python Tree() class, specifically the dir() method to return the default path to a node and not always the TOP value.",3,[],https://github.com/MDSplus/mdsplus/pull/1756,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/1756#issuecomment-516930615,,"The method dir() belonging to the Tree() class was returning only the value of the TOP node path:
self.top.dir()
Now it will return the value of the default node path:
self.default.dir()
The old behavior is now in a method called dirTop().",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1756,2019-07-31T16:45:45Z,2019-08-05T15:54:10Z,2019-08-05T15:54:11Z,MERGED,True,2,2,1,https://github.com/santorofer,"Modified the Python Tree() class, specifically the dir() method to return the default path to a node and not always the TOP value.",3,[],https://github.com/MDSplus/mdsplus/pull/1756,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1756#issuecomment-516933569,,"well dir prints from the node it is callen from. and top is the top node. please dont chsnge that. instrad you could add a dir method tho thebtree class that prints from default.

On 31 Jul 2019 18:50, Fernando Santoro <notifications@github.com> wrote:

The method dir() belonging to the Tree() class was returning only the value of the TOP node path:

self.top.dir()

Now it will return the value of the default node path:

self.default.dir()

The old behavior is now in a method called dirTop().

—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FMDSplus%2Fmdsplus%2Fpull%2F1756%3Femail_source%3Dnotifications%26email_token%3DABPRFLRF4N5EBQNFHY5ZN43QCG7D7A5CNFSM4IIITGSKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD3H3YNY%23issuecomment-516930615&data=02%7C01%7C%7C84a194c5a73842b8904308d715d724f1%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637001886085571660&sdata=k%2FtGqiUOKaukcsLhgbgZT9pXH%2F31aqFP8szzXR5MXo0%3D&reserved=0>, or mute the thread<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FABPRFLSBQOT7M6P6WN5OGT3QCG7D7ANCNFSM4IIITGSA&data=02%7C01%7C%7C84a194c5a73842b8904308d715d724f1%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637001886085581665&sdata=Z%2FiBTLuxaymCzRJimk0YzTKMzm%2FDYje%2F17wc1haXqb0%3D&reserved=0>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1756,2019-07-31T16:45:45Z,2019-08-05T15:54:10Z,2019-08-05T15:54:11Z,MERGED,True,2,2,1,https://github.com/santorofer,"Modified the Python Tree() class, specifically the dir() method to return the default path to a node and not always the TOP value.",3,[],https://github.com/MDSplus/mdsplus/pull/1756,https://github.com/santorofer,5,https://github.com/MDSplus/mdsplus/pull/1756#issuecomment-516937043,,"Hi Timo,
Well, the dir() method I modified is in the Tree() class, not the one in the TreeNode().
The way Tree() dir() was written was to always print top, am I right? Shouldn't be printing the relative path from the default node (if it is set to one different from TOP)?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1756,2019-07-31T16:45:45Z,2019-08-05T15:54:10Z,2019-08-05T15:54:11Z,MERGED,True,2,2,1,https://github.com/santorofer,"Modified the Python Tree() class, specifically the dir() method to return the default path to a node and not always the TOP value.",3,[],https://github.com/MDSplus/mdsplus/pull/1756,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1756#issuecomment-516939601,,"i see, well then at least i woikd avoid topdir as new api since node.tree.top.dir() would do the trick from any node.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1756,2019-07-31T16:45:45Z,2019-08-05T15:54:10Z,2019-08-05T15:54:11Z,MERGED,True,2,2,1,https://github.com/santorofer,"Modified the Python Tree() class, specifically the dir() method to return the default path to a node and not always the TOP value.",3,[],https://github.com/MDSplus/mdsplus/pull/1756,https://github.com/santorofer,7,https://github.com/MDSplus/mdsplus/pull/1756#issuecomment-516940905,,"Hi Timo,
I understand, it makes sense. I can remove that new method knowing that we can achieve the same thing ""manually"".
Cheers!
Fernando",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1757,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.","…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1757#issuecomment-517208286,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1757#issuecomment-517215644,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.","Apparently the test procedure is broken.....
try last time....",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1757#issuecomment-517215723,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1757#issuecomment-517804360,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1757#issuecomment-517925971,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.","hi Tom
Thanks!
I am now on holidays until august 22 in the Mountains
I Guess you are now in cape cod


Ciao
Gabriele
…
On Fri, 02 Aug 2019 11:40:01 -0700   Tom Fredian ***@***.***> wrote:
 tfredian approved this pull request.


 --
 You are receiving this because you authored the thread.
 Reply to this email directly or view it on GitHub:
 #1757 (review)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1757#issuecomment-518292493,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/1757#issuecomment-518539372,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1757,2019-08-01T08:56:13Z,2019-08-08T12:10:10Z,2019-11-25T10:21:39Z,MERGED,True,9,8,3,https://github.com/GabrieleManduchi,Feature:Use Compile in place of Execute to return dimension in getSeg…,2,[],https://github.com/MDSplus/mdsplus/pull/1757,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/1757#issuecomment-518563634,"…ment()
It may happen that getSegment() is used even in case the associate dimension is inconsistent. Using TdiExecute() for the returned dim in this case makes getSegment() fail or crash. The problem is solved by just compiling the returned dimension.  NOTE: dimension must be consisted when the whole signal ir retrieved, i.e. when xtreeshr is involved.","Understood why it does not pass tditests/treeshr, it is a direct consequence of the change. It is not an error but the test program needs to be changed. I will do it in a couple of days when I will have a more stable network connection",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1758,2019-08-05T18:54:50Z,2019-08-12T16:57:10Z,2019-08-28T12:16:09Z,MERGED,True,41,41,41,https://github.com/tfredian,Build: Switch to using mdsplus/builder docker images,1,[],https://github.com/MDSplus/mdsplus/pull/1758,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1758,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1758,2019-08-05T18:54:50Z,2019-08-12T16:57:10Z,2019-08-28T12:16:09Z,MERGED,True,41,41,41,https://github.com/tfredian,Build: Switch to using mdsplus/builder docker images,1,[],https://github.com/MDSplus/mdsplus/pull/1758,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1758#issuecomment-518395613,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1758,2019-08-05T18:54:50Z,2019-08-12T16:57:10Z,2019-08-28T12:16:09Z,MERGED,True,41,41,41,https://github.com/tfredian,Build: Switch to using mdsplus/builder docker images,1,[],https://github.com/MDSplus/mdsplus/pull/1758,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1758#issuecomment-519608012,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1759,2019-08-08T20:52:50Z,2019-08-13T16:11:36Z,2019-08-13T19:36:41Z,MERGED,True,2540,2488,13,https://github.com/tfredian,Feature: Add SANDBOX,3,[],https://github.com/MDSplus/mdsplus/pull/1759,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1759,"This feature provides a SANDBOX setting which will disable the use
of the spawn function or the py() tdi function for security reasons.
The SANDBOX setting can be turned on using the MdsShr->MdsEnableSandbox()
function. Once enabled for the process it cannot be disabled. When
enabled the LibSpawn function will return and error and execution of the py()
function will also be disabled. You can now also add mdsip.hosts mapping rules
such as:
 | SANDBOX
and if the connection matches the string it will enable SANDBOX in the mdsip
process and use the nobody uid.","This feature provides a SANDBOX setting which will disable the use
of the spawn function or the py() tdi function for security reasons.
The SANDBOX setting can be turned on using the MdsShr->MdsEnableSandbox()
function. Once enabled for the process it cannot be disabled. When
enabled the LibSpawn function will return and error and execution of the py()
function will also be disabled. You can now also add mdsip.hosts mapping rules
such as:
 | SANDBOX
and if the connection matches the string it will enable SANDBOX in the mdsip
process and use the nobody uid.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1759,2019-08-08T20:52:50Z,2019-08-13T16:11:36Z,2019-08-13T19:36:41Z,MERGED,True,2540,2488,13,https://github.com/tfredian,Feature: Add SANDBOX,3,[],https://github.com/MDSplus/mdsplus/pull/1759,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1759#issuecomment-520502091,"This feature provides a SANDBOX setting which will disable the use
of the spawn function or the py() tdi function for security reasons.
The SANDBOX setting can be turned on using the MdsShr->MdsEnableSandbox()
function. Once enabled for the process it cannot be disabled. When
enabled the LibSpawn function will return and error and execution of the py()
function will also be disabled. You can now also add mdsip.hosts mapping rules
such as:
 | SANDBOX
and if the connection matches the string it will enable SANDBOX in the mdsip
process and use the nobody uid.","Tab not spaces ?  I would have Said: space not tab.  We should decide on
a coding standard.  And run lint
…
On 8/12/19 12:41 PM, Stephen Lane-Walsh wrote:

 ***@***.**** approved this pull request.

 Looks great! Just the few nitpicks

 ------------------------------------------------------------------------

 In mdsshr/Makefile.in
 <#1759 (comment)>:

 > @@ -34,6 +34,7 @@ SOURCES = \
           MdsGetSetShotId.c \
           MdsGetStdMsg.c \
           MdsPk.c \
 +	MdsSandbox.c \

 nit: Tab not spaces

 ------------------------------------------------------------------------

 In include/mdsshr.h
 <#1759 (comment)>:

 > @@ -90,6 +91,7 @@ extern int MdsFree1Dx(mdsdsc_xd_t *const dsc, void **const zone);
   extern int MdsMsg(const int status, const char *const fmt, ...);
   extern int MDSQueueEvent(const char *const event, int *const eventid);
   extern int MDSGetEventQueue(const int eventid, const int timeout, int *const data_len, char **const data);
 +extern int MdsSandbox();

 Maybe something like |MdsIsSandbox()|? or |MdsSandboxEnabled()|?

 ------------------------------------------------------------------------

 In python/MDSplus/mdsExceptions.py
 <#1759 (comment)>:

 > @@ -2211,7 +2211,7 @@ class TreeINVTAG(TreeException):

   class TreeNOPATH(TreeException):
     status=265392114
 -  message=""No 'treename'_path environment variable defined. Cannot locate tree files.""
 +  message=""No 'treename'_path or default_tree_path environment variables defined. Cannot locate tree files.""

 Nice catch

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#1759?email_source=notifications&email_token=ABY5AZM5KNXMXUA7DDTNOPLQEGHCRA5CNFSM4IKOMBK2YY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCBJAV4A#pullrequestreview-273812208>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABY5AZOJ3A2HNJXJ25VTEKTQEGHCRANCNFSM4IKOMBKQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1759,2019-08-08T20:52:50Z,2019-08-13T16:11:36Z,2019-08-13T19:36:41Z,MERGED,True,2540,2488,13,https://github.com/tfredian,Feature: Add SANDBOX,3,[],https://github.com/MDSplus/mdsplus/pull/1759,https://github.com/WhoBrokeTheBuild,3,https://github.com/MDSplus/mdsplus/pull/1759#issuecomment-520502769,"This feature provides a SANDBOX setting which will disable the use
of the spawn function or the py() tdi function for security reasons.
The SANDBOX setting can be turned on using the MdsShr->MdsEnableSandbox()
function. Once enabled for the process it cannot be disabled. When
enabled the LibSpawn function will return and error and execution of the py()
function will also be disabled. You can now also add mdsip.hosts mapping rules
such as:
 | SANDBOX
and if the connection matches the string it will enable SANDBOX in the mdsip
process and use the nobody uid.","Yeah good call Josh, this is what I meant:
""Use spaces like the lines around it, instead of a tab""
But +1 to coding standard and linting",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1761,2019-08-13T14:32:37Z,2019-08-13T16:13:18Z,2019-11-25T10:21:40Z,MERGED,True,24,15,2,https://github.com/joshStillerman,Fix: Dispatch replies not sent when client restart,3,[],https://github.com/MDSplus/mdsplus/pull/1761,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1761,"ServerSendReply is used by dispatch to send status back to
requesting clients. It creates a socket to the client for
this purpose and keeps a list of these socket / port combinations
for reuse.
If a client dispatches an action and exits, then is run again, the
second time, ServerSendReply does not notice that saved socket is
not valid.  It writes the message to the old socket, and the client
never sees the response.
It turns out that the first write to a socket whose far side is no
longer running succeeds.  Errors are only reported, and detectible,
on subsequent writes.
(https://www.softlab.ntua.gr/facilities/documentation/unix/unix-socket-faq/unix-socket-faq-2.html)
said:  It is less clear what happens to write() calls in this case; I would expect EPIPE, not on the next call, but the one after. about the
matter
Breaking the write into 2 chunks allows the code to detect this
condition, and make a new socket.
Fixes: #1760","ServerSendReply is used by dispatch to send status back to
requesting clients. It creates a socket to the client for
this purpose and keeps a list of these socket / port combinations
for reuse.
If a client dispatches an action and exits, then is run again, the
second time, ServerSendReply does not notice that saved socket is
not valid.  It writes the message to the old socket, and the client
never sees the response.
It turns out that the first write to a socket whose far side is no
longer running succeeds.  Errors are only reported, and detectible,
on subsequent writes.
(https://www.softlab.ntua.gr/facilities/documentation/unix/unix-socket-faq/unix-socket-faq-2.html)
said:  It is less clear what happens to write() calls in this case; I would expect EPIPE, not on the next call, but the one after. about the
matter
Breaking the write into 2 chunks allows the code to detect this
condition, and make a new socket.
Fixes: #1760",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1762,2019-08-14T11:14:41Z,2019-08-14T15:12:30Z,2019-08-17T10:15:55Z,MERGED,True,34,29,2,https://github.com/zack-vii,Zck server reply,2,[],https://github.com/MDSplus/mdsplus/pull/1762,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1762,This should be a cleaner version of pr #1761 and still resolve issue #1760 .,This should be a cleaner version of pr #1761 and still resolve issue #1760 .,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1762,2019-08-14T11:14:41Z,2019-08-14T15:12:30Z,2019-08-17T10:15:55Z,MERGED,True,34,29,2,https://github.com/zack-vii,Zck server reply,2,[],https://github.com/MDSplus/mdsplus/pull/1762,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1762#issuecomment-521225288,This should be a cleaner version of pr #1761 and still resolve issue #1760 .,Great find that a send of length 0 detects the broken socket! I guess you need a #pragma to avoid the clobbered warnings if the warning is not really a problem. I wonder if we could also check the client list periodically by issuing a couple 0 length sends to the sockets.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1762,2019-08-14T11:14:41Z,2019-08-14T15:12:30Z,2019-08-17T10:15:55Z,MERGED,True,34,29,2,https://github.com/zack-vii,Zck server reply,2,[],https://github.com/MDSplus/mdsplus/pull/1762,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1762#issuecomment-521246523,This should be a cleaner version of pr #1761 and still resolve issue #1760 .,i think the send 0 length only detects the broken pipe because we send the header first. so looping through tge clients would not work. the clobered is due to the pthread_cleanup eventually i only need to split tge staus in allocation and initialisation. will check it later when maya takes a nap.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1762,2019-08-14T11:14:41Z,2019-08-14T15:12:30Z,2019-08-17T10:15:55Z,MERGED,True,34,29,2,https://github.com/zack-vii,Zck server reply,2,[],https://github.com/MDSplus/mdsplus/pull/1762,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1762#issuecomment-521335359,This should be a cleaner version of pr #1761 and still resolve issue #1760 .,Yep.  I experimented with two 0 byte sends on a disconnected socket and it didn't produce an error return. Oh well... I guess it is unlikely the client list would accumulate many disconnected sockets anyway.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1764,2019-08-14T20:03:11Z,2019-08-15T00:55:19Z,2019-08-28T12:16:11Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Restore menu updates for Windows,1,[],https://github.com/MDSplus/mdsplus/pull/1764,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1764,"The latest Windows operating system updates seemed to deprecate
the use of a obsolete Windows message used to trigger the update
of the Start Menu items after new shortcuts are added or deleted during
a package installation or removal. This fix changes the message
type sent after the MDSplus installation to ensure the menus are
updated.
This fixes #1763","The latest Windows operating system updates seemed to deprecate
the use of a obsolete Windows message used to trigger the update
of the Start Menu items after new shortcuts are added or deleted during
a package installation or removal. This fix changes the message
type sent after the MDSplus installation to ensure the menus are
updated.
This fixes #1763",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1764,2019-08-14T20:03:11Z,2019-08-15T00:55:19Z,2019-08-28T12:16:11Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Restore menu updates for Windows,1,[],https://github.com/MDSplus/mdsplus/pull/1764,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1764#issuecomment-521400414,"The latest Windows operating system updates seemed to deprecate
the use of a obsolete Windows message used to trigger the update
of the Start Menu items after new shortcuts are added or deleted during
a package installation or removal. This fix changes the message
type sent after the MDSplus installation to ensure the menus are
updated.
This fixes #1763",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1765,2019-08-14T20:05:26Z,2019-08-15T00:54:39Z,2019-08-28T12:16:13Z,MERGED,True,2,2,1,https://github.com/tfredian,Fix: Restore menu updates for Windows,1,[],https://github.com/MDSplus/mdsplus/pull/1765,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1765,"The latest Windows operating system updates seemed to deprecate
the use of a obsolete Windows message used to trigger the update
of the Start Menu items after new shortcuts are added or deleted during
a package installation or removal. This fix changes the message
type sent after the MDSplus installation to ensure the menus are
updated.","The latest Windows operating system updates seemed to deprecate
the use of a obsolete Windows message used to trigger the update
of the Start Menu items after new shortcuts are added or deleted during
a package installation or removal. This fix changes the message
type sent after the MDSplus installation to ensure the menus are
updated.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1766,2019-08-15T12:57:29Z,2019-09-01T08:34:01Z,2019-09-01T08:34:05Z,MERGED,True,35126,33755,1208,https://github.com/zack-vii,Fix: Use junit maven with java classes and apps,24,[],https://github.com/MDSplus/mdsplus/pull/1766,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1766,"updates jtraverser2 (bugfixes and features)
reorganizes java projects in ./java and unifies their Makefile (except jscope)
enables junit framework for java projects
implements junit for mdsplus-api (api part or jtraverser2)
further changed structure of src folders to go together with maven
added access to the maven publish goal for future publication on maven
https://search.maven.org/search?q=g:org.mdsplus
https://oss.sonatype.org/content/repositories/snapshots/org/mdsplus/mdsplus-api","updates jtraverser2 (bugfixes and features)
reorganizes java projects in ./java and unifies their Makefile (except jscope)
enables junit framework for java projects
implements junit for mdsplus-api (api part or jtraverser2)
further changed structure of src folders to go together with maven
added access to the maven publish goal for future publication on maven
https://search.maven.org/search?q=g:org.mdsplus
https://oss.sonatype.org/content/repositories/snapshots/org/mdsplus/mdsplus-api",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1766,2019-08-15T12:57:29Z,2019-09-01T08:34:01Z,2019-09-01T08:34:05Z,MERGED,True,35126,33755,1208,https://github.com/zack-vii,Fix: Use junit maven with java classes and apps,24,[],https://github.com/MDSplus/mdsplus/pull/1766,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1766#issuecomment-522133349,"updates jtraverser2 (bugfixes and features)
reorganizes java projects in ./java and unifies their Makefile (except jscope)
enables junit framework for java projects
implements junit for mdsplus-api (api part or jtraverser2)
further changed structure of src folders to go together with maven
added access to the maven publish goal for future publication on maven
https://search.maven.org/search?q=g:org.mdsplus
https://oss.sonatype.org/content/repositories/snapshots/org/mdsplus/mdsplus-api",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1766,2019-08-15T12:57:29Z,2019-09-01T08:34:01Z,2019-09-01T08:34:05Z,MERGED,True,35126,33755,1208,https://github.com/zack-vii,Fix: Use junit maven with java classes and apps,24,[],https://github.com/MDSplus/mdsplus/pull/1766,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1766#issuecomment-522147675,"updates jtraverser2 (bugfixes and features)
reorganizes java projects in ./java and unifies their Makefile (except jscope)
enables junit framework for java projects
implements junit for mdsplus-api (api part or jtraverser2)
further changed structure of src folders to go together with maven
added access to the maven publish goal for future publication on maven
https://search.maven.org/search?q=g:org.mdsplus
https://oss.sonatype.org/content/repositories/snapshots/org/mdsplus/mdsplus-api","unfortunately, I think this is a real thing. something in MdsDescrToCstring but I am not sure yet why.
maybe a descriptor that I pass from within java code or its a null string that needs to be honored with a if length==0.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1766,2019-08-15T12:57:29Z,2019-09-01T08:34:01Z,2019-09-01T08:34:05Z,MERGED,True,35126,33755,1208,https://github.com/zack-vii,Fix: Use junit maven with java classes and apps,24,[],https://github.com/MDSplus/mdsplus/pull/1766,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1766#issuecomment-522285662,"updates jtraverser2 (bugfixes and features)
reorganizes java projects in ./java and unifies their Makefile (except jscope)
enables junit framework for java projects
implements junit for mdsplus-api (api part or jtraverser2)
further changed structure of src folders to go together with maven
added access to the maven publish goal for future publication on maven
https://search.maven.org/search?q=g:org.mdsplus
https://oss.sonatype.org/content/repositories/snapshots/org/mdsplus/mdsplus-api",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1766,2019-08-15T12:57:29Z,2019-09-01T08:34:01Z,2019-09-01T08:34:05Z,MERGED,True,35126,33755,1208,https://github.com/zack-vii,Fix: Use junit maven with java classes and apps,24,[],https://github.com/MDSplus/mdsplus/pull/1766,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1766#issuecomment-523014336,"updates jtraverser2 (bugfixes and features)
reorganizes java projects in ./java and unifies their Makefile (except jscope)
enables junit framework for java projects
implements junit for mdsplus-api (api part or jtraverser2)
further changed structure of src folders to go together with maven
added access to the maven publish goal for future publication on maven
https://search.maven.org/search?q=g:org.mdsplus
https://oss.sonatype.org/content/repositories/snapshots/org/mdsplus/mdsplus-api",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1766,2019-08-15T12:57:29Z,2019-09-01T08:34:01Z,2019-09-01T08:34:05Z,MERGED,True,35126,33755,1208,https://github.com/zack-vii,Fix: Use junit maven with java classes and apps,24,[],https://github.com/MDSplus/mdsplus/pull/1766,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1766#issuecomment-525347486,"updates jtraverser2 (bugfixes and features)
reorganizes java projects in ./java and unifies their Makefile (except jscope)
enables junit framework for java projects
implements junit for mdsplus-api (api part or jtraverser2)
further changed structure of src folders to go together with maven
added access to the maven publish goal for future publication on maven
https://search.maven.org/search?q=g:org.mdsplus
https://oss.sonatype.org/content/repositories/snapshots/org/mdsplus/mdsplus-api","this includes pr #1754 .
@AndreaRigoni @GabrieleManduchi : Do we have your blessings on this one?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1766,2019-08-15T12:57:29Z,2019-09-01T08:34:01Z,2019-09-01T08:34:05Z,MERGED,True,35126,33755,1208,https://github.com/zack-vii,Fix: Use junit maven with java classes and apps,24,[],https://github.com/MDSplus/mdsplus/pull/1766,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1766#issuecomment-525875817,"updates jtraverser2 (bugfixes and features)
reorganizes java projects in ./java and unifies their Makefile (except jscope)
enables junit framework for java projects
implements junit for mdsplus-api (api part or jtraverser2)
further changed structure of src folders to go together with maven
added access to the maven publish goal for future publication on maven
https://search.maven.org/search?q=g:org.mdsplus
https://oss.sonatype.org/content/repositories/snapshots/org/mdsplus/mdsplus-api","Timo, Josh and I discussed the advantage of doing squash and merges for all pull requests. I changed the settings on mdsplus to only allow squash and merge. The commit title then uses the PR title and the commit comment uses the first comment in the PR. I changed your PR title to conform to our naming scheme. I made it a FIX instead of simply a BUILD since you had some fix commits. Can you edit the PR comment to better describe what all this PR entails including some mention of the fixes applied over and above the main purpose of the PR?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1767,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-522279840,,the definitions for JRE and UIL were broken but everything seemed to be good. no that the definitions are correct the packaging of some OS's is broken. which one is right? should we just remove the lines?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-523014157,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-527068971,,both vars are/can be defined globally. its save to remove the lines,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-527439628,,"Several of these JRE and UIL assignments in the configure.ac seemed to have been added by Fernando six months ago. Looking at the changes I am not entirely sure why they were added. It probably is no longer critical to even support 32-bit motif applications but if we do intend to support them it is important that /usr/bin/uil32 is used when building the uid's for 32-bit platforms. I don't know if these changes will cause the 64-bit uil to be used instead of uil32 on platforms where the docker image contains both uil and uil32.
As far as JRE is concerned, I couldn't find where the value JRE is even being used except perhaps in cconfigure.ac where it is deciding whether to build java or not.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-527467166,,Well thing is the curretn version does not set the var either due to a syntax error (extra spaces ' '). So unless we are facing uil problems under 32 bit already... this should not change the outcome of the build but instead cleanup the configure.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/santorofer,7,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-527478978,,"Hi Tom,

I remember making those changes when I was working on the issue of installing MDSplus from source for Mac. But I cannot find the original commits in Git. I’m trying to remember what was the original issue that needed these changes.
I will go back to my notes and check.

Thank you Tom,
Fernando
…
 On Sep 3, 2019, at 8:37 AM, Tom Fredian ***@***.***> wrote:

 Several of these JRE and UIL assignments in the configure.ac seemed to have been added by Fernando six months ago. Looking at the changes I am not entirely sure why they were added. It probably is no longer critical to even support 32-bit motif applications but if we do intend to support them it is important that /usr/bin/uil32 is used when building the uid's for 32-bit platforms. I don't know if these changes will cause the 64-bit uil to be used instead of uil32 on platforms where the docker image contains both uil and uil32.

 As far as JRE is concerned, I couldn't find where the value JRE is even being used except perhaps in cconfigure.ac where it is deciding whether to build java or not.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub <#1767?email_source=notifications&email_token=AKW7QGILCED6MRNQDCRSSNLQHZLB3A5CNFSM4IMQWXO2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5YBODA#issuecomment-527439628>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AKW7QGKF5RFCO4WL34G3EHDQHZLB3ANCNFSM4IMQWXOQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/santorofer,8,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-527661740,,"Hi Timo,
I was wondering, what was the issue that you are trying to fix? Or how did you notice that there was a problem?
Cheers!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528031398,,"Well if you run configure on all oses i checked you will notice that these lines are infact syntax error and have no effect. ("" = "" should be replaced by ""="")
14:30:05 checking for visual studio... no
14:30:05 /mdsplus-docker/jenkins/workspace/fc21/src/configure: line 8588: JRE: command not found
14:30:05 /mdsplus-docker/jenkins/workspace/fc21/src/configure: line 8589: UIL: command not found
14:30:05 checking size of long... 8

So in short, I figured this is not OK.
It might be that the os you intended to fix allows the syntax. Basically the spaces need to be removed but this causes issues during build. so if you added those lines, maybe you can check if they do what you need them to do. Possibly you get the same result without them.
If not can you explain what you intended to do or what os is affected by this change.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/santorofer,10,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528119514,,"Hi Timo,
What I remember is that I made some changes to configure.ac so that Java programs can be used in Mac, and the UIL compiler can be used to compile the Motif applications.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/santorofer,11,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528119845,,The OS that can potentially be affected will be Mac OS X. I believe.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528228624,,"hm well for mac it was/is
UILCMD=""uil""
*apple-darwin*) echo ""Configuring for MacOS X"";
       JRE = """";
       UIL = ""/usr/bin/uil"";
So even osx should interpret both lines as a function call instead of a env var assignment.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,13,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528230825,,"When you run configure watch out for
checking for uil... /usr/bin/uil

which should not be changed by this commit.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/santorofer,14,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528380478,,"Hi Timo,
So, this is strange because I remember being able to fix the issue of not having some of the Motif application working in Mac OSX after adding the line to the “uil” compiler, and not only that, the location of that compiler was /usr/bin/. Now it seems that that compiler, well, a link to the compiler, is located under /usr/local/bin :

/usr/local/bin/uil@ -> ../Cellar/openmotif/2.3.8/bin/uil

So, in other words, for Mac it should be now:

UIL=""/usr/local/bin/uil”;

Am I right?

For Linux, I couldn’t find any uil, only uic which is actually the compiler for QT GUI toolkit….
Cheers,
Fernando
…
 On Sep 5, 2019, at 3:09 AM, Timo Schroeder ***@***.***> wrote:

 When you run configure watch out for

 checking for uil... /usr/bin/uil

 which should not be changed by this commit.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,15,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528436132,,"So you a compiling for mac on your mac where it cannot find uil? jenkins macosx slave in alpha configures as follows
e.g. ttp://jenkins2.mdsplus.org/job/macosx/1767/consoleFull
17:30:59 /Users/twf/jenkins/workspace/macosx/src/configure: line 8699: JRE: command not found
17:30:59 
17:30:59 Error: additional UIL source file: /usr/bin/uil was ignored
17:30:59 
17:30:59 Severe: error opening source file: =
...
17:31:06 checking for uil... /usr/local/bin/uil

So setting UIL to /usr/bin/uil obviously did not work.
Question though: does this PR produce the correct motif applications on jenkins.
I triggered a new build just now. you can download the binaries from its workspace once its done.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/santorofer,16,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528438615,,"Hi Timo,

If I use:

UIL=""/usr/local/bin/uil”;

And then run autoconf, I get a configure script that doesn’t show those errors.
Ok, I will test your new build as soon as is done.

Thanks
…
 On Sep 5, 2019, at 11:54 AM, Timo Schroeder ***@***.***> wrote:

 So you a compiling for mac on your mac where it cannot find uil? jenkins macosx slave in alpha configures as follows
 e.g. ttp://jenkins2.mdsplus.org/job/macosx/1767/consoleFull

 17:30:59 /Users/twf/jenkins/workspace/macosx/src/configure: line 8699: JRE: command not found
 17:30:59
 17:30:59 Error: additional UIL source file: /usr/bin/uil was ignored
 17:30:59
 17:30:59 Severe: error opening source file: =
 ...
 17:31:06 checking for uil... /usr/local/bin/uil
 So setting UIL to /usr/bin/uil obviously did not work.
 Question though: does this PR produce the correct motif applications on jenkins.
 I triggered a new build just now. you can download the binaries from its workspace once its done.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub <#1767?email_source=notifications&email_token=AKW7QGPOJN57GQZL7FCE5S3QIETSTA5CNFSM4IMQWXO2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD57UXJA#issuecomment-528436132>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AKW7QGIVI5SPCLLYJEVMQYTQIETSTANCNFSM4IMQWXOQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,17,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528439883,,"its done. this pr still results in
17:57:42 checking for uil... /usr/local/bin/uil

so the configure script finds the file and there is no need to hardcode it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/santorofer,18,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528579153,,"Hi Timo,

Yes, I understand. Removing those hardcoded paths in configure.ac sounds good to me.

I actually went into Jenkins and downloaded, for example, dwscope from the Workspace:

<http://jenkins2.mdsplus.org/job/macosx/ws/build/macosx/zck_jre_uil/test/dwscope/>

And I then downloaded dwscope into my Mac and it works fine it seems.
So, I think this looks good.
Cheers,
Fernando
…
 On Sep 5, 2019, at 12:03 PM, Timo Schroeder ***@***.***> wrote:

 its done. this pr still results in

 17:57:42 checking for uil... /usr/local/bin/uil
 so the configure script finds the file and there is no need to hardcode it.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub <#1767?email_source=notifications&email_token=AKW7QGNWPFCVMAPQJKIWILLQIEUTPA5CNFSM4IMQWXO2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD57VUSY#issuecomment-528439883>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AKW7QGICNWMXEK4OTF6GQJTQIEUTPANCNFSM4IMQWXOQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1767,2019-08-18T00:03:53Z,2019-09-06T14:46:15Z,2019-10-31T23:28:29Z,MERGED,True,2,20,2,https://github.com/zack-vii,Build: fixed JRE and UIL def in configure,1,[],https://github.com/MDSplus/mdsplus/pull/1767,https://github.com/zack-vii,19,https://github.com/MDSplus/mdsplus/pull/1767#issuecomment-528609283,,Could someone please approve this PR?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1768,2019-08-19T19:09:49Z,2019-08-20T17:20:00Z,2019-10-31T23:28:33Z,MERGED,True,85,90,14,https://github.com/zack-vii,Zck mdsdescrtocstring,7,[],https://github.com/MDSplus/mdsplus/pull/1768,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1768,fixes some basic issues found during #1766,fixes some basic issues found during #1766,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1768,2019-08-19T19:09:49Z,2019-08-20T17:20:00Z,2019-10-31T23:28:33Z,MERGED,True,85,90,14,https://github.com/zack-vii,Zck mdsdescrtocstring,7,[],https://github.com/MDSplus/mdsplus/pull/1768,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1768#issuecomment-523013224,fixes some basic issues found during #1766,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1769,2019-08-23T20:51:40Z,2019-08-26T16:24:26Z,2019-08-26T16:24:26Z,MERGED,True,303,42,8,https://github.com/santorofer,Tree find node,10,[],https://github.com/MDSplus/mdsplus/pull/1769,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1769,"This pull request is in relation to the following issue:
[https://github.com//issues/1749]
The following was done to address the issues:
In C:
TreeFindNode.c
New:        _TreeFindNodeRelative()
Modified: _TreeFindNode()  (this function now calls the one above)
New:        _TreeFindNodeWildRelative()
Modified: _TreeFindNodeWild() (this function now calls the one above)
treeshr.h
Added:
TreeFindNodeRelative()
_TreeFindNodeRelative()
TreeFindNodeWildRelative()
_TreeFindNodeWildRelative()
In Python
tree.py
Modified:
TreeNode.getNode() to use _TreeFindNodeRelative()
TreeNode.getNodeWild() that calls TreeNode._getNodeWild() to use _TreeNodeFindWildRelative()
In C++
mdstreeobjects.cpp
Modified: TreeNode::getNode() to use _TreeFindNodeRelative()
Added:     TreeNode::getNodeWild(two parameters) to use _TreeFindNodeWildRelative()
TreeNode::getNodeWild(one parameter)
mdsobjects.h
Added: declarations for the getNodeWild() of type TreeNodeArray.
Test example codes:
For Python: if the tree env variable is cryocon18i_path
    tree = Tree('cryocon18i',-1)
    node = tree.getNode('\\cryocon18i::top:cryo18i')
    node.getNodeWild('input_a','Signal')
    tree.setDefault(node)
    tree.getNode('input_a')
For C++:
/* Code to test the modifcations explained in:
https://github.com/MDSplus/mdsplus/issues/1749
Usage:
    Please, modified the tree path and tree name to use one particular tree.
*/
#include <mdsobjects.h>
#include <iostream> 
#include <stdlib.h>
#include <array>
using namespace MDSplus;

int main(int argc, char *argv[])
{
    Tree *tree;
    try {
	    tree = new Tree(""cryocon18i"", -1);
    } catch(MdsException &exc)
    {
	    std::cout << ""Error opening tree "" << ""cryocon18i"" << "": ""  << exc.what() << std::endl;
	    exit(0);
    }

    TreeNode *sub     = tree->getNode(""\\cryocon18i::top:cryo18i"");
    std::cout << ""Value of device (*sub): "";
    std::cout << sub << std::endl;

    tree->setDefault(sub);
    TreeNode *subNode = tree->getNode(""input_a"");
    std::cout << ""Value of node (*subNode) relative to device (*sub): "";
    std::cout << subNode << std::endl;

    tree->setDefault(sub);
    TreeNodeArray *nodeArr = tree->getNodeWild(""***"");
    StringArray *names1    = nodeArr->getPath();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nodeArr->getNumNodes(); i++)
        std::cout << names1->getElementAt(i) << std::endl;

    TreeNodeArray *nidsArr = sub->getNodeWild(""***"");
    StringArray *names2    = nidsArr->getPath();
    Int32Array *nids       = nidsArr->getNid();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << nids->getElementAt(i) << std::endl;

    std::cout << ""Value of wild card names for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << names2->getElementAt(i) << std::endl;
    

    return 0; 
}","This pull request is in relation to the following issue:
[https://github.com//issues/1749]
The following was done to address the issues:
In C:
TreeFindNode.c
New:        _TreeFindNodeRelative()
Modified: _TreeFindNode()  (this function now calls the one above)
New:        _TreeFindNodeWildRelative()
Modified: _TreeFindNodeWild() (this function now calls the one above)
treeshr.h
Added:
TreeFindNodeRelative()
_TreeFindNodeRelative()
TreeFindNodeWildRelative()
_TreeFindNodeWildRelative()
In Python
tree.py
Modified:
TreeNode.getNode() to use _TreeFindNodeRelative()
TreeNode.getNodeWild() that calls TreeNode._getNodeWild() to use _TreeNodeFindWildRelative()
In C++
mdstreeobjects.cpp
Modified: TreeNode::getNode() to use _TreeFindNodeRelative()
Added:     TreeNode::getNodeWild(two parameters) to use _TreeFindNodeWildRelative()
TreeNode::getNodeWild(one parameter)
mdsobjects.h
Added: declarations for the getNodeWild() of type TreeNodeArray.
Test example codes:
For Python: if the tree env variable is cryocon18i_path
    tree = Tree('cryocon18i',-1)
    node = tree.getNode('\\cryocon18i::top:cryo18i')
    node.getNodeWild('input_a','Signal')
    tree.setDefault(node)
    tree.getNode('input_a')
For C++:
/* Code to test the modifcations explained in:
https://github.com/MDSplus/mdsplus/issues/1749
Usage:
    Please, modified the tree path and tree name to use one particular tree.
*/
#include <mdsobjects.h>
#include <iostream> 
#include <stdlib.h>
#include <array>
using namespace MDSplus;

int main(int argc, char *argv[])
{
    Tree *tree;
    try {
	    tree = new Tree(""cryocon18i"", -1);
    } catch(MdsException &exc)
    {
	    std::cout << ""Error opening tree "" << ""cryocon18i"" << "": ""  << exc.what() << std::endl;
	    exit(0);
    }

    TreeNode *sub     = tree->getNode(""\\cryocon18i::top:cryo18i"");
    std::cout << ""Value of device (*sub): "";
    std::cout << sub << std::endl;

    tree->setDefault(sub);
    TreeNode *subNode = tree->getNode(""input_a"");
    std::cout << ""Value of node (*subNode) relative to device (*sub): "";
    std::cout << subNode << std::endl;

    tree->setDefault(sub);
    TreeNodeArray *nodeArr = tree->getNodeWild(""***"");
    StringArray *names1    = nodeArr->getPath();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nodeArr->getNumNodes(); i++)
        std::cout << names1->getElementAt(i) << std::endl;

    TreeNodeArray *nidsArr = sub->getNodeWild(""***"");
    StringArray *names2    = nidsArr->getPath();
    Int32Array *nids       = nidsArr->getNid();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << nids->getElementAt(i) << std::endl;

    std::cout << ""Value of wild card names for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << names2->getElementAt(i) << std::endl;
    

    return 0; 
}",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1769,2019-08-23T20:51:40Z,2019-08-26T16:24:26Z,2019-08-26T16:24:26Z,MERGED,True,303,42,8,https://github.com/santorofer,Tree find node,10,[],https://github.com/MDSplus/mdsplus/pull/1769,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1769#issuecomment-524458255,"This pull request is in relation to the following issue:
[https://github.com//issues/1749]
The following was done to address the issues:
In C:
TreeFindNode.c
New:        _TreeFindNodeRelative()
Modified: _TreeFindNode()  (this function now calls the one above)
New:        _TreeFindNodeWildRelative()
Modified: _TreeFindNodeWild() (this function now calls the one above)
treeshr.h
Added:
TreeFindNodeRelative()
_TreeFindNodeRelative()
TreeFindNodeWildRelative()
_TreeFindNodeWildRelative()
In Python
tree.py
Modified:
TreeNode.getNode() to use _TreeFindNodeRelative()
TreeNode.getNodeWild() that calls TreeNode._getNodeWild() to use _TreeNodeFindWildRelative()
In C++
mdstreeobjects.cpp
Modified: TreeNode::getNode() to use _TreeFindNodeRelative()
Added:     TreeNode::getNodeWild(two parameters) to use _TreeFindNodeWildRelative()
TreeNode::getNodeWild(one parameter)
mdsobjects.h
Added: declarations for the getNodeWild() of type TreeNodeArray.
Test example codes:
For Python: if the tree env variable is cryocon18i_path
    tree = Tree('cryocon18i',-1)
    node = tree.getNode('\\cryocon18i::top:cryo18i')
    node.getNodeWild('input_a','Signal')
    tree.setDefault(node)
    tree.getNode('input_a')
For C++:
/* Code to test the modifcations explained in:
https://github.com/MDSplus/mdsplus/issues/1749
Usage:
    Please, modified the tree path and tree name to use one particular tree.
*/
#include <mdsobjects.h>
#include <iostream> 
#include <stdlib.h>
#include <array>
using namespace MDSplus;

int main(int argc, char *argv[])
{
    Tree *tree;
    try {
	    tree = new Tree(""cryocon18i"", -1);
    } catch(MdsException &exc)
    {
	    std::cout << ""Error opening tree "" << ""cryocon18i"" << "": ""  << exc.what() << std::endl;
	    exit(0);
    }

    TreeNode *sub     = tree->getNode(""\\cryocon18i::top:cryo18i"");
    std::cout << ""Value of device (*sub): "";
    std::cout << sub << std::endl;

    tree->setDefault(sub);
    TreeNode *subNode = tree->getNode(""input_a"");
    std::cout << ""Value of node (*subNode) relative to device (*sub): "";
    std::cout << subNode << std::endl;

    tree->setDefault(sub);
    TreeNodeArray *nodeArr = tree->getNodeWild(""***"");
    StringArray *names1    = nodeArr->getPath();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nodeArr->getNumNodes(); i++)
        std::cout << names1->getElementAt(i) << std::endl;

    TreeNodeArray *nidsArr = sub->getNodeWild(""***"");
    StringArray *names2    = nidsArr->getPath();
    Int32Array *nids       = nidsArr->getNid();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << nids->getElementAt(i) << std::endl;

    std::cout << ""Value of wild card names for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << names2->getElementAt(i) << std::endl;
    

    return 0; 
}",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1769,2019-08-23T20:51:40Z,2019-08-26T16:24:26Z,2019-08-26T16:24:26Z,MERGED,True,303,42,8,https://github.com/santorofer,Tree find node,10,[],https://github.com/MDSplus/mdsplus/pull/1769,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1769#issuecomment-524861156,"This pull request is in relation to the following issue:
[https://github.com//issues/1749]
The following was done to address the issues:
In C:
TreeFindNode.c
New:        _TreeFindNodeRelative()
Modified: _TreeFindNode()  (this function now calls the one above)
New:        _TreeFindNodeWildRelative()
Modified: _TreeFindNodeWild() (this function now calls the one above)
treeshr.h
Added:
TreeFindNodeRelative()
_TreeFindNodeRelative()
TreeFindNodeWildRelative()
_TreeFindNodeWildRelative()
In Python
tree.py
Modified:
TreeNode.getNode() to use _TreeFindNodeRelative()
TreeNode.getNodeWild() that calls TreeNode._getNodeWild() to use _TreeNodeFindWildRelative()
In C++
mdstreeobjects.cpp
Modified: TreeNode::getNode() to use _TreeFindNodeRelative()
Added:     TreeNode::getNodeWild(two parameters) to use _TreeFindNodeWildRelative()
TreeNode::getNodeWild(one parameter)
mdsobjects.h
Added: declarations for the getNodeWild() of type TreeNodeArray.
Test example codes:
For Python: if the tree env variable is cryocon18i_path
    tree = Tree('cryocon18i',-1)
    node = tree.getNode('\\cryocon18i::top:cryo18i')
    node.getNodeWild('input_a','Signal')
    tree.setDefault(node)
    tree.getNode('input_a')
For C++:
/* Code to test the modifcations explained in:
https://github.com/MDSplus/mdsplus/issues/1749
Usage:
    Please, modified the tree path and tree name to use one particular tree.
*/
#include <mdsobjects.h>
#include <iostream> 
#include <stdlib.h>
#include <array>
using namespace MDSplus;

int main(int argc, char *argv[])
{
    Tree *tree;
    try {
	    tree = new Tree(""cryocon18i"", -1);
    } catch(MdsException &exc)
    {
	    std::cout << ""Error opening tree "" << ""cryocon18i"" << "": ""  << exc.what() << std::endl;
	    exit(0);
    }

    TreeNode *sub     = tree->getNode(""\\cryocon18i::top:cryo18i"");
    std::cout << ""Value of device (*sub): "";
    std::cout << sub << std::endl;

    tree->setDefault(sub);
    TreeNode *subNode = tree->getNode(""input_a"");
    std::cout << ""Value of node (*subNode) relative to device (*sub): "";
    std::cout << subNode << std::endl;

    tree->setDefault(sub);
    TreeNodeArray *nodeArr = tree->getNodeWild(""***"");
    StringArray *names1    = nodeArr->getPath();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nodeArr->getNumNodes(); i++)
        std::cout << names1->getElementAt(i) << std::endl;

    TreeNodeArray *nidsArr = sub->getNodeWild(""***"");
    StringArray *names2    = nidsArr->getPath();
    Int32Array *nids       = nidsArr->getNid();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << nids->getElementAt(i) << std::endl;

    std::cout << ""Value of wild card names for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << names2->getElementAt(i) << std::endl;
    

    return 0; 
}",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1769,2019-08-23T20:51:40Z,2019-08-26T16:24:26Z,2019-08-26T16:24:26Z,MERGED,True,303,42,8,https://github.com/santorofer,Tree find node,10,[],https://github.com/MDSplus/mdsplus/pull/1769,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1769#issuecomment-524886305,"This pull request is in relation to the following issue:
[https://github.com//issues/1749]
The following was done to address the issues:
In C:
TreeFindNode.c
New:        _TreeFindNodeRelative()
Modified: _TreeFindNode()  (this function now calls the one above)
New:        _TreeFindNodeWildRelative()
Modified: _TreeFindNodeWild() (this function now calls the one above)
treeshr.h
Added:
TreeFindNodeRelative()
_TreeFindNodeRelative()
TreeFindNodeWildRelative()
_TreeFindNodeWildRelative()
In Python
tree.py
Modified:
TreeNode.getNode() to use _TreeFindNodeRelative()
TreeNode.getNodeWild() that calls TreeNode._getNodeWild() to use _TreeNodeFindWildRelative()
In C++
mdstreeobjects.cpp
Modified: TreeNode::getNode() to use _TreeFindNodeRelative()
Added:     TreeNode::getNodeWild(two parameters) to use _TreeFindNodeWildRelative()
TreeNode::getNodeWild(one parameter)
mdsobjects.h
Added: declarations for the getNodeWild() of type TreeNodeArray.
Test example codes:
For Python: if the tree env variable is cryocon18i_path
    tree = Tree('cryocon18i',-1)
    node = tree.getNode('\\cryocon18i::top:cryo18i')
    node.getNodeWild('input_a','Signal')
    tree.setDefault(node)
    tree.getNode('input_a')
For C++:
/* Code to test the modifcations explained in:
https://github.com/MDSplus/mdsplus/issues/1749
Usage:
    Please, modified the tree path and tree name to use one particular tree.
*/
#include <mdsobjects.h>
#include <iostream> 
#include <stdlib.h>
#include <array>
using namespace MDSplus;

int main(int argc, char *argv[])
{
    Tree *tree;
    try {
	    tree = new Tree(""cryocon18i"", -1);
    } catch(MdsException &exc)
    {
	    std::cout << ""Error opening tree "" << ""cryocon18i"" << "": ""  << exc.what() << std::endl;
	    exit(0);
    }

    TreeNode *sub     = tree->getNode(""\\cryocon18i::top:cryo18i"");
    std::cout << ""Value of device (*sub): "";
    std::cout << sub << std::endl;

    tree->setDefault(sub);
    TreeNode *subNode = tree->getNode(""input_a"");
    std::cout << ""Value of node (*subNode) relative to device (*sub): "";
    std::cout << subNode << std::endl;

    tree->setDefault(sub);
    TreeNodeArray *nodeArr = tree->getNodeWild(""***"");
    StringArray *names1    = nodeArr->getPath();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nodeArr->getNumNodes(); i++)
        std::cout << names1->getElementAt(i) << std::endl;

    TreeNodeArray *nidsArr = sub->getNodeWild(""***"");
    StringArray *names2    = nidsArr->getPath();
    Int32Array *nids       = nidsArr->getNid();
    std::cout << ""Value of wild card nids for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << nids->getElementAt(i) << std::endl;

    std::cout << ""Value of wild card names for tree device (*sub): "";
    for(int i = 0; i < nidsArr->getNumNodes(); i++)
        std::cout << names2->getElementAt(i) << std::endl;
    

    return 0; 
}",add to whitelist,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1770,2019-08-27T07:33:54Z,2019-08-27T08:09:54Z,2019-11-25T10:20:01Z,MERGED,True,9,1,2,https://github.com/GabrieleManduchi,Fix:TreeNode::data(),1,[],https://github.com/MDSplus/mdsplus/pull/1770,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1770,"After the changes in setActiveTree() usage, method data() must be changed in order to set the nid-associated tree before evaluating. The mutex has been changed to recursive in order to avoid deadlocks.","After the changes in setActiveTree() usage, method data() must be changed in order to set the nid-associated tree before evaluating. The mutex has been changed to recursive in order to avoid deadlocks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1771,2019-08-27T15:09:12Z,2019-08-27T19:47:35Z,2019-11-25T10:20:00Z,MERGED,True,1822,444,5,https://github.com/joshStillerman, Fix: TreeFindNodeWild gets confused when looking deeper,6,[],https://github.com/MDSplus/mdsplus/pull/1771,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1771,"TreeFindNodeWild fails to return the matching children of
nodes that it has found:
TCL> dir

\ENGINEERING::PS_CAMAC.TMX

 :AURORA_1     :DDECODER     :INCAA_1      :J221_1       :L8212_1
 :L8212_2      :L8212_3      :TR16_1       :TR16_2       :TR16_3

Total of 10 nodes.
TCL> dir tr16*:input_01:startidx

\ENGINEERING::PS_CAMAC.TMX:TR16_1:INPUT_01

 :STARTIDX

Total of 1 node.

\ENGINEERING::PS_CAMAC.TMX:TR16_2

 :INPUT_01

Total of 1 node.

\ENGINEERING::PS_CAMAC.TMX:TR16_3

 :INPUT_01

Total of 1 node.

Grand total of 3 nodes.
TCL>

Fix: Can not parse :**:startidx  …
While fixing the original problem found:

parse errors from flex are not returned to the C code correctly
The string ::startidx did not parse (though .:startidx OK)

Test: add tests for TreeFindNodeWild bugs
3 things fixed and tested

flex not reporting errors
flex not parsing :**:xxx
TreeFindNodeWild not dealing with **tail args correctly

Changed tabs to spaces in this C module (sorry)","TreeFindNodeWild fails to return the matching children of
nodes that it has found:
TCL> dir

\ENGINEERING::PS_CAMAC.TMX

 :AURORA_1     :DDECODER     :INCAA_1      :J221_1       :L8212_1
 :L8212_2      :L8212_3      :TR16_1       :TR16_2       :TR16_3

Total of 10 nodes.
TCL> dir tr16*:input_01:startidx

\ENGINEERING::PS_CAMAC.TMX:TR16_1:INPUT_01

 :STARTIDX

Total of 1 node.

\ENGINEERING::PS_CAMAC.TMX:TR16_2

 :INPUT_01

Total of 1 node.

\ENGINEERING::PS_CAMAC.TMX:TR16_3

 :INPUT_01

Total of 1 node.

Grand total of 3 nodes.
TCL>

Fix: Can not parse :**:startidx  …
While fixing the original problem found:

parse errors from flex are not returned to the C code correctly
The string ::startidx did not parse (though .:startidx OK)

Test: add tests for TreeFindNodeWild bugs
3 things fixed and tested

flex not reporting errors
flex not parsing :**:xxx
TreeFindNodeWild not dealing with **tail args correctly

Changed tabs to spaces in this C module (sorry)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1772,2019-08-27T19:56:09Z,2019-08-28T12:14:56Z,2019-08-28T13:12:09Z,CLOSED,False,547,351,5,https://github.com/tfredian,Fix: Repair bugs in TreeFindNodeWild,7,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1772,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1772,"TreeFindNodeWild fails to return the matching children of
nodes that it has found:
TCL> dir

\ENGINEERING::PS_CAMAC.TMX

 :AURORA_1     :DDECODER     :INCAA_1      :J221_1       :L8212_1
 :L8212_2      :L8212_3      :TR16_1       :TR16_2       :TR16_3

Total of 10 nodes.
TCL> dir tr16*:input_01:startidx

\ENGINEERING::PS_CAMAC.TMX:TR16_1:INPUT_01

 :STARTIDX

Total of 1 node.

\ENGINEERING::PS_CAMAC.TMX:TR16_2

 :INPUT_01

Total of 1 node.

\ENGINEERING::PS_CAMAC.TMX:TR16_3

 :INPUT_01

Total of 1 node.

Grand total of 3 nodes.
TCL>

Fix: Can not parse *:***:startidx  …
While fixing the original problem found:

parse errors from flex are not returned to the C code correctly
The string *:***:startidx did not parse (though *.***:startidx OK)

Test: add tests for TreeFindNodeWild bugs
3 things fixed and tested

flex not reporting errors
flex not parsing *:***:xxx
TreeFindNodeWild not dealing with **tail args correctly

Changed tabs to spaces in this C module (sorry)","TreeFindNodeWild fails to return the matching children of
nodes that it has found:
TCL> dir

\ENGINEERING::PS_CAMAC.TMX

 :AURORA_1     :DDECODER     :INCAA_1      :J221_1       :L8212_1
 :L8212_2      :L8212_3      :TR16_1       :TR16_2       :TR16_3

Total of 10 nodes.
TCL> dir tr16*:input_01:startidx

\ENGINEERING::PS_CAMAC.TMX:TR16_1:INPUT_01

 :STARTIDX

Total of 1 node.

\ENGINEERING::PS_CAMAC.TMX:TR16_2

 :INPUT_01

Total of 1 node.

\ENGINEERING::PS_CAMAC.TMX:TR16_3

 :INPUT_01

Total of 1 node.

Grand total of 3 nodes.
TCL>

Fix: Can not parse *:***:startidx  …
While fixing the original problem found:

parse errors from flex are not returned to the C code correctly
The string *:***:startidx did not parse (though *.***:startidx OK)

Test: add tests for TreeFindNodeWild bugs
3 things fixed and tested

flex not reporting errors
flex not parsing *:***:xxx
TreeFindNodeWild not dealing with **tail args correctly

Changed tabs to spaces in this C module (sorry)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1773,2019-08-28T13:16:52Z,2019-08-28T18:01:09Z,2019-08-28T18:01:09Z,MERGED,True,1822,444,5,https://github.com/tfredian, Fix: TreeFindNodeWild gets confused when looking deeper,6,[],https://github.com/MDSplus/mdsplus/pull/1773,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1773,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1774,2019-08-29T13:30:43Z,2019-08-29T14:55:11Z,2019-08-29T15:13:11Z,MERGED,True,3495,3457,93,https://github.com/tfredian,Feature: Stable version upgrade to include alpha features and fixes,76,[],https://github.com/MDSplus/mdsplus/pull/1774,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1774,This brings the stable branch up to date with https://github.com/MDSplus/mdsplus/releases/tag/alpha_release-7-84-4,This brings the stable branch up to date with https://github.com/MDSplus/mdsplus/releases/tag/alpha_release-7-84-4,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1775,2019-08-29T14:58:51Z,2019-08-29T15:03:11Z,2019-11-25T10:19:59Z,MERGED,True,3457,3495,93,https://github.com/MDSplusBuilder,"Revert ""Feature: Stable version upgrade to include alpha features and fixes""",1,[],https://github.com/MDSplus/mdsplus/pull/1775,https://github.com/MDSplusBuilder,1,https://github.com/MDSplus/mdsplus/pull/1775,"Reverts #1774
The promotion did not work correctly.","Reverts #1774
The promotion did not work correctly.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1775,2019-08-29T14:58:51Z,2019-08-29T15:03:11Z,2019-11-25T10:19:59Z,MERGED,True,3457,3495,93,https://github.com/MDSplusBuilder,"Revert ""Feature: Stable version upgrade to include alpha features and fixes""",1,[],https://github.com/MDSplus/mdsplus/pull/1775,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1775#issuecomment-526225061,"Reverts #1774
The promotion did not work correctly.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1776,2019-08-29T16:10:57Z,2019-08-29T17:33:14Z,2019-08-29T18:20:27Z,MERGED,True,3496,3458,94,https://github.com/tfredian,Feature: Promote stable to alpha,76,[],https://github.com/MDSplus/mdsplus/pull/1776,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1776,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1776,2019-08-29T16:10:57Z,2019-08-29T17:33:14Z,2019-08-29T18:20:27Z,MERGED,True,3496,3458,94,https://github.com/tfredian,Feature: Promote stable to alpha,76,[],https://github.com/MDSplus/mdsplus/pull/1776,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1776#issuecomment-526276062,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1777,2019-08-29T17:34:56Z,2019-08-29T17:36:11Z,2019-11-25T10:19:59Z,MERGED,True,3458,3496,94,https://github.com/MDSplusBuilder,"Revert ""Feature: Promote stable to alpha""",1,[],https://github.com/MDSplus/mdsplus/pull/1777,https://github.com/MDSplusBuilder,1,https://github.com/MDSplus/mdsplus/pull/1777,Reverts #1776,Reverts #1776,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1777,2019-08-29T17:34:56Z,2019-08-29T17:36:11Z,2019-11-25T10:19:59Z,MERGED,True,3458,3496,94,https://github.com/MDSplusBuilder,"Revert ""Feature: Promote stable to alpha""",1,[],https://github.com/MDSplus/mdsplus/pull/1777,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1777#issuecomment-526286535,Reverts #1776,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1778,2019-08-29T18:31:34Z,2019-08-29T18:35:04Z,2019-08-29T18:35:10Z,CLOSED,False,3496,3458,94,https://github.com/tfredian,Feature: Promote stable to alpha,76,[],https://github.com/MDSplus/mdsplus/pull/1778,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1778,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1779,2019-08-29T18:39:59Z,2019-08-29T19:00:12Z,2019-08-29T19:00:12Z,MERGED,True,5357,3915,101,https://github.com/tfredian,Feature: Promote stable to alpha,76,[],https://github.com/MDSplus/mdsplus/pull/1779,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1779,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1780,2019-08-29T19:01:32Z,2019-08-29T19:02:39Z,2019-11-25T10:19:58Z,MERGED,True,3457,3495,93,https://github.com/MDSplusBuilder,"Revert ""Feature: Promote stable to alpha""",1,[],https://github.com/MDSplus/mdsplus/pull/1780,https://github.com/MDSplusBuilder,1,https://github.com/MDSplus/mdsplus/pull/1780,Reverts #1779,Reverts #1779,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1780,2019-08-29T19:01:32Z,2019-08-29T19:02:39Z,2019-11-25T10:19:58Z,MERGED,True,3457,3495,93,https://github.com/MDSplusBuilder,"Revert ""Feature: Promote stable to alpha""",1,[],https://github.com/MDSplus/mdsplus/pull/1780,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1780#issuecomment-526318692,Reverts #1779,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1781,2019-09-02T13:42:03Z,2019-09-03T13:46:56Z,2019-09-03T13:47:02Z,MERGED,True,288,89,7,https://github.com/zack-vii,Fix: SIGINT handling for readline and mdstcpip,5,[],https://github.com/MDSplus/mdsplus/pull/1781,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1781,"Originally the PR was intended to fix the Ctrl+C behaviour in readlind applications mdsdcl and tditest. Turned out this also allowed for user interruptions of select except for Windows. In order to enable interruptions for Windows a socket hack had to be used. looks quite compliated but its basically a self-connected DGRAM socket that is included in the select fd_set. The signal handler closes teh socket and cases select to return. While i was investigating i found that teh unix signel(2) method should only be used to set the handler to SIG_IGN or SIG_DFL. so I updated teh occurences in teh vincinity of the touched code. On that matter is routines used ABORT() to cleanup SocketList via shutdown(). I does this now under a few more circumstances. Unfortunately, there is no consistent way to guarantee cleanup procedure.","Originally the PR was intended to fix the Ctrl+C behaviour in readlind applications mdsdcl and tditest. Turned out this also allowed for user interruptions of select except for Windows. In order to enable interruptions for Windows a socket hack had to be used. looks quite compliated but its basically a self-connected DGRAM socket that is included in the select fd_set. The signal handler closes teh socket and cases select to return. While i was investigating i found that teh unix signel(2) method should only be used to set the handler to SIG_IGN or SIG_DFL. so I updated teh occurences in teh vincinity of the touched code. On that matter is routines used ABORT() to cleanup SocketList via shutdown(). I does this now under a few more circumstances. Unfortunately, there is no consistent way to guarantee cleanup procedure.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1781,2019-09-02T13:42:03Z,2019-09-03T13:46:56Z,2019-09-03T13:47:02Z,MERGED,True,288,89,7,https://github.com/zack-vii,Fix: SIGINT handling for readline and mdstcpip,5,[],https://github.com/MDSplus/mdsplus/pull/1781,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1781#issuecomment-527288286,"Originally the PR was intended to fix the Ctrl+C behaviour in readlind applications mdsdcl and tditest. Turned out this also allowed for user interruptions of select except for Windows. In order to enable interruptions for Windows a socket hack had to be used. looks quite compliated but its basically a self-connected DGRAM socket that is included in the select fd_set. The signal handler closes teh socket and cases select to return. While i was investigating i found that teh unix signel(2) method should only be used to set the handler to SIG_IGN or SIG_DFL. so I updated teh occurences in teh vincinity of the touched code. On that matter is routines used ABORT() to cleanup SocketList via shutdown(). I does this now under a few more circumstances. Unfortunately, there is no consistent way to guarantee cleanup procedure.",this pr addresses issue #1362,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1782,2019-09-02T15:37:42Z,2019-09-02T16:02:08Z,2019-09-02T16:02:09Z,MERGED,True,1,1,1,https://github.com/tfredian,Fix: Typo in promote.sh script,1,[],https://github.com/MDSplus/mdsplus/pull/1782,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1782,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1783,2019-09-02T16:14:45Z,2019-09-02T17:29:14Z,2019-09-02T17:29:15Z,MERGED,True,1,1,1,https://github.com/MDSplusBuilder,Fix: Type in promote script,1,[],https://github.com/MDSplus/mdsplus/pull/1783,https://github.com/MDSplusBuilder,1,https://github.com/MDSplus/mdsplus/pull/1783,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1783,2019-09-02T16:14:45Z,2019-09-02T17:29:14Z,2019-09-02T17:29:15Z,MERGED,True,1,1,1,https://github.com/MDSplusBuilder,Fix: Type in promote script,1,[],https://github.com/MDSplus/mdsplus/pull/1783,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1783#issuecomment-527196739,,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1784,2019-09-03T14:42:20Z,2019-09-06T07:47:32Z,2019-09-06T07:47:32Z,MERGED,True,1835,414,6,https://github.com/fmolon,Updated FLIR & BASLER cameras,3,[],https://github.com/MDSplus/mdsplus/pull/1784,https://github.com/fmolon,1,https://github.com/MDSplus/mdsplus/pull/1784,Changes only in FLIR and BASLER cameras (python device & device support),Changes only in FLIR and BASLER cameras (python device & device support),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1784,2019-09-03T14:42:20Z,2019-09-06T07:47:32Z,2019-09-06T07:47:32Z,MERGED,True,1835,414,6,https://github.com/fmolon,Updated FLIR & BASLER cameras,3,[],https://github.com/MDSplus/mdsplus/pull/1784,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1784#issuecomment-527489905,Changes only in FLIR and BASLER cameras (python device & device support),Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1787,2019-09-04T13:37:43Z,2019-09-04T18:30:18Z,2019-09-04T18:30:18Z,MERGED,True,10,1,3,https://github.com/tfredian,Fix: MdsGet1DxA's align should be able to handle size=0,1,[],https://github.com/MDSplus/mdsplus/pull/1787,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1787,"Fixes #1786
Which describes a segmentation fault that can occur when subscripting an empty array.
A regression test for this problem was also added.","Fixes #1786
Which describes a segmentation fault that can occur when subscripting an empty array.
A regression test for this problem was also added.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1787,2019-09-04T13:37:43Z,2019-09-04T18:30:18Z,2019-09-04T18:30:18Z,MERGED,True,10,1,3,https://github.com/tfredian,Fix: MdsGet1DxA's align should be able to handle size=0,1,[],https://github.com/MDSplus/mdsplus/pull/1787,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1787#issuecomment-527992775,"Fixes #1786
Which describes a segmentation fault that can occur when subscripting an empty array.
A regression test for this problem was also added.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1788,2019-09-04T18:27:48Z,2019-09-06T14:43:51Z,2019-09-06T14:43:54Z,CLOSED,False,25,3,1,https://github.com/tfredian,Feature: Convert nids in funs to paths,1,[],https://github.com/MDSplus/mdsplus/pull/1788,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1788,"When a node reference is hardcoded in side a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will automatically convert any nids found in a tdi fun
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.
For a test I used the sample main tree and I created a new main
shot 1 as follows:
TCL> edit/new main/shot=1
TCL> add node numeric/usage=numeric
TCL> put node numeric 42
TCL> write
then in TDIC:
TDI> treeopen('main',-1)
265388067
TDI> getnci(numeric,'nid_number')
4
TDI> treeopen('main',1)
265388041
TDI> getnci(numeric,'nid_number')
1
TDI> public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
TDI> test()
42
TDI> treeopen('main',-1)
265388067
TDI> test()
42
Using the alpha libraries the following is the behavior:
treeopen('main',1)
265388041
public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
test()
42
treeopen('main',-1)
265388067
test()
[1,2,3,4,5,6,7,8,9,10]
In this alpha case the numeric nid  (1 in shot 1) is stored in the fun and when switched to shot -1 it does not reference the numeric node but instead returns the content of the member node which in that tree is identified by nid 1.","When a node reference is hardcoded in side a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will automatically convert any nids found in a tdi fun
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.
For a test I used the sample main tree and I created a new main
shot 1 as follows:
TCL> edit/new main/shot=1
TCL> add node numeric/usage=numeric
TCL> put node numeric 42
TCL> write
then in TDIC:
TDI> treeopen('main',-1)
265388067
TDI> getnci(numeric,'nid_number')
4
TDI> treeopen('main',1)
265388041
TDI> getnci(numeric,'nid_number')
1
TDI> public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
TDI> test()
42
TDI> treeopen('main',-1)
265388067
TDI> test()
42
Using the alpha libraries the following is the behavior:
treeopen('main',1)
265388041
public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
test()
42
treeopen('main',-1)
265388067
test()
[1,2,3,4,5,6,7,8,9,10]
In this alpha case the numeric nid  (1 in shot 1) is stored in the fun and when switched to shot -1 it does not reference the numeric node but instead returns the content of the member node which in that tree is identified by nid 1.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1788,2019-09-04T18:27:48Z,2019-09-06T14:43:51Z,2019-09-06T14:43:54Z,CLOSED,False,25,3,1,https://github.com/tfredian,Feature: Convert nids in funs to paths,1,[],https://github.com/MDSplus/mdsplus/pull/1788,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1788#issuecomment-528034532,"When a node reference is hardcoded in side a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will automatically convert any nids found in a tdi fun
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.
For a test I used the sample main tree and I created a new main
shot 1 as follows:
TCL> edit/new main/shot=1
TCL> add node numeric/usage=numeric
TCL> put node numeric 42
TCL> write
then in TDIC:
TDI> treeopen('main',-1)
265388067
TDI> getnci(numeric,'nid_number')
4
TDI> treeopen('main',1)
265388041
TDI> getnci(numeric,'nid_number')
1
TDI> public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
TDI> test()
42
TDI> treeopen('main',-1)
265388067
TDI> test()
42
Using the alpha libraries the following is the behavior:
treeopen('main',1)
265388041
public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
test()
42
treeopen('main',-1)
265388067
test()
[1,2,3,4,5,6,7,8,9,10]
In this alpha case the numeric nid  (1 in shot 1) is stored in the fun and when switched to shot -1 it does not reference the numeric node but instead returns the content of the member node which in that tree is identified by nid 1.","i cannot check my self atm but could you verify if the treepath matches the string that defined the nid. i assume if you would reconstruct the path from the nid, you cannot preserve tge quality of the path (normal, full, minimal). this may break relative paths as default node may change.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1788,2019-09-04T18:27:48Z,2019-09-06T14:43:51Z,2019-09-06T14:43:54Z,CLOSED,False,25,3,1,https://github.com/tfredian,Feature: Convert nids in funs to paths,1,[],https://github.com/MDSplus/mdsplus/pull/1788,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1788#issuecomment-528041389,"When a node reference is hardcoded in side a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will automatically convert any nids found in a tdi fun
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.
For a test I used the sample main tree and I created a new main
shot 1 as follows:
TCL> edit/new main/shot=1
TCL> add node numeric/usage=numeric
TCL> put node numeric 42
TCL> write
then in TDIC:
TDI> treeopen('main',-1)
265388067
TDI> getnci(numeric,'nid_number')
4
TDI> treeopen('main',1)
265388041
TDI> getnci(numeric,'nid_number')
1
TDI> public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
TDI> test()
42
TDI> treeopen('main',-1)
265388067
TDI> test()
42
Using the alpha libraries the following is the behavior:
treeopen('main',1)
265388041
public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
test()
42
treeopen('main',-1)
265388067
test()
[1,2,3,4,5,6,7,8,9,10]
In this alpha case the numeric nid  (1 in shot 1) is stored in the fun and when switched to shot -1 it does not reference the numeric node but instead returns the content of the member node which in that tree is identified by nid 1.","TreeGetPath returns a full path string (including the \tree:: part). In the above example I just tried defining the test fun in shot 1 and then switching to shot -1, changing default to .subtree and executing the test() fun and it returned the numeric node as it should. No hurry if you want to do some more testing before reviewing the pr.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1788,2019-09-04T18:27:48Z,2019-09-06T14:43:51Z,2019-09-06T14:43:54Z,CLOSED,False,25,3,1,https://github.com/tfredian,Feature: Convert nids in funs to paths,1,[],https://github.com/MDSplus/mdsplus/pull/1788,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1788#issuecomment-528044862,"When a node reference is hardcoded in side a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will automatically convert any nids found in a tdi fun
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.
For a test I used the sample main tree and I created a new main
shot 1 as follows:
TCL> edit/new main/shot=1
TCL> add node numeric/usage=numeric
TCL> put node numeric 42
TCL> write
then in TDIC:
TDI> treeopen('main',-1)
265388067
TDI> getnci(numeric,'nid_number')
4
TDI> treeopen('main',1)
265388041
TDI> getnci(numeric,'nid_number')
1
TDI> public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
TDI> test()
42
TDI> treeopen('main',-1)
265388067
TDI> test()
42
Using the alpha libraries the following is the behavior:
treeopen('main',1)
265388041
public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
test()
42
treeopen('main',-1)
265388067
test()
[1,2,3,4,5,6,7,8,9,10]
In this alpha case the numeric nid  (1 in shot 1) is stored in the fun and when switched to shot -1 it does not reference the numeric node but instead returns the content of the member node which in that tree is identified by nid 1.",i will see to it tomorrow. have a nice day,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1788,2019-09-04T18:27:48Z,2019-09-06T14:43:51Z,2019-09-06T14:43:54Z,CLOSED,False,25,3,1,https://github.com/tfredian,Feature: Convert nids in funs to paths,1,[],https://github.com/MDSplus/mdsplus/pull/1788,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1788#issuecomment-528089052,"When a node reference is hardcoded in side a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will automatically convert any nids found in a tdi fun
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.
For a test I used the sample main tree and I created a new main
shot 1 as follows:
TCL> edit/new main/shot=1
TCL> add node numeric/usage=numeric
TCL> put node numeric 42
TCL> write
then in TDIC:
TDI> treeopen('main',-1)
265388067
TDI> getnci(numeric,'nid_number')
4
TDI> treeopen('main',1)
265388041
TDI> getnci(numeric,'nid_number')
1
TDI> public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
TDI> test()
42
TDI> treeopen('main',-1)
265388067
TDI> test()
42
Using the alpha libraries the following is the behavior:
treeopen('main',1)
265388041
public fun test(){return(numeric);}
Fun PUBLIC test () {
Return (NUMERIC);
}
test()
42
treeopen('main',-1)
265388067
test()
[1,2,3,4,5,6,7,8,9,10]
In this alpha case the numeric nid  (1 in shot 1) is stored in the fun and when switched to shot -1 it does not reference the numeric node but instead returns the content of the member node which in that tree is identified by nid 1.","Here is a cryptic illustration of what the code now produces when it compiles the fun:
>>> from MDSplus import Tree
>>> type(Tree('main',-1).tdiCompile('public fun test(){return(numeric);}').getDescs()[1].getDescs()[0])
<class 'MDSplus.tree.TreePath'>
>>> repr(Tree('main',-1).tdiCompile('public fun test(){return(numeric);}').getDescs()[1].getDescs()[0])
'\\MAIN::TOP:NUMERIC'

Here is what it used to do:
>>> type(Tree('main',-1).tdiCompile('public fun test(){return(numeric);}').getDescs()[1].getDescs()[0])
<class 'MDSplus.tree.TreeNode'>

Changing the default node on the tree does not change anything. When the fun is loaded it gets compiled and the node references are made into nid's if the nodes exist but just before the compilation compiles it converts all nids in the fun to treepath instances.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1789,2019-09-05T10:27:31Z,2019-09-06T14:43:29Z,2019-10-31T23:28:28Z,MERGED,True,183,259,4,https://github.com/zack-vii,Feature: convert path-like nids in tdi funs to tree_paths,4,[],https://github.com/MDSplus/mdsplus/pull/1789,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1789,"When a node reference is hardcoded inside a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will cause TdiYacc to convert any nid inside of tdi fun into
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.","When a node reference is hardcoded inside a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will cause TdiYacc to convert any nid inside of tdi fun into
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1789,2019-09-05T10:27:31Z,2019-09-06T14:43:29Z,2019-10-31T23:28:28Z,MERGED,True,183,259,4,https://github.com/zack-vii,Feature: convert path-like nids in tdi funs to tree_paths,4,[],https://github.com/MDSplus/mdsplus/pull/1789,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1789#issuecomment-528303470,"When a node reference is hardcoded inside a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will cause TdiYacc to convert any nid inside of tdi fun into
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.","I could not find my way thru the TdiYacc*.c to figure out where I could add the
++TdiRefZone.l_rel_path // should be placed at 'FUN('
--TdiRefZone.l_rel_path // should be placed at ')' if it terminates a FUN(
I added the lines in TdiVar.c instead where it covers all tdi funs read from .fun files. Manually defined functions will still suffer from issue #1785.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1789,2019-09-05T10:27:31Z,2019-09-06T14:43:29Z,2019-10-31T23:28:28Z,MERGED,True,183,259,4,https://github.com/zack-vii,Feature: convert path-like nids in tdi funs to tree_paths,4,[],https://github.com/MDSplus/mdsplus/pull/1789,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1789#issuecomment-528426443,"When a node reference is hardcoded inside a tdi fun the node
is converted into a nid (node id reference) at compile time when
the fun is first referenced. This will often cause problems if
subsequently the current process opens other trees since the nid
compiled into the function may not resolve to the same node in
the new tree context.
This change will cause TdiYacc to convert any nid inside of tdi fun into
to a tree path instance. When the function is executed, instead of
trying to reference the node by a nid, the function will now find
the node referenced using a tree path string. This should avoid
the potential conflicts when the current tree context is changed
after the initial loading of the tdi function.","Never mind, I found the two places where to add the lines. in fact they were meant to be there but have been commented out:
git blame
316f9d6f tdishr/TdiYacc.y             (mdsplus           1997-06-27 12:07:37 +0000 417)                                                         /*++TdiRefZone.l_rel_path;*/
316f9d6f tdishr/TdiYacc.y             (mdsplus           1997-06-27 12:07:37 +0000 435)         | fun stmt                              {/*TdiRefZone.l_rel_path--;*/",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1790,2019-09-05T21:53:53Z,2019-09-05T23:26:24Z,2019-09-05T23:26:25Z,MERGED,True,52,33,5,https://github.com/zack-vii,Build: fixed maven build scripts and gpg key,1,[],https://github.com/MDSplus/mdsplus/pull/1790,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1790,works now with jenkins task 2-maven,works now with jenkins task 2-maven,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1791,2019-09-06T11:48:41Z,2019-09-06T14:51:04Z,2019-09-06T14:51:04Z,MERGED,True,50,1,3,https://github.com/zack-vii,Build: added logic to determine if we should make a new maven release,1,[],https://github.com/MDSplus/mdsplus/pull/1791,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1791,This added some scripts to determine if the java projects in question have been updated since the last maven release. The 2-maven Task can now run automatically after an 1-alpha-release and will roll roll out a release only if necessary.,This added some scripts to determine if the java projects in question have been updated since the last maven release. The 2-maven Task can now run automatically after an 1-alpha-release and will roll roll out a release only if necessary.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1791,2019-09-06T11:48:41Z,2019-09-06T14:51:04Z,2019-09-06T14:51:04Z,MERGED,True,50,1,3,https://github.com/zack-vii,Build: added logic to determine if we should make a new maven release,1,[],https://github.com/MDSplus/mdsplus/pull/1791,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1791#issuecomment-528823838,This added some scripts to determine if the java projects in question have been updated since the last maven release. The 2-maven Task can now run automatically after an 1-alpha-release and will roll roll out a release only if necessary.,Hi all would be nice if someone could approve this PR. it only changed stuff in deploy/platform/maven,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1793,2019-09-11T08:50:33Z,2019-09-16T17:38:30Z,2019-10-31T23:28:25Z,MERGED,True,10,8,1,https://github.com/zack-vii,Build: bootstrap works without workspace; less relicts,1,[],https://github.com/MDSplus/mdsplus/pull/1793,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1793,This removes the unused workspace folder when performing a bootstrap.,This removes the unused workspace folder when performing a bootstrap.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1793,2019-09-11T08:50:33Z,2019-09-16T17:38:30Z,2019-10-31T23:28:25Z,MERGED,True,10,8,1,https://github.com/zack-vii,Build: bootstrap works without workspace; less relicts,1,[],https://github.com/MDSplus/mdsplus/pull/1793,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1793#issuecomment-531805243,This removes the unused workspace folder when performing a bootstrap.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1793,2019-09-11T08:50:33Z,2019-09-16T17:38:30Z,2019-10-31T23:28:25Z,MERGED,True,10,8,1,https://github.com/zack-vii,Build: bootstrap works without workspace; less relicts,1,[],https://github.com/MDSplus/mdsplus/pull/1793,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1793#issuecomment-531853991,This removes the unused workspace folder when performing a bootstrap.,I would prefer if Tom reviewed this.  I don't have enough context to say anything useful,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1794,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792","Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-530443993,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-530455115,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792","Apparently there is a lot more of the java code which is incompatible with java 6. Is it worth the effort to make the source compatible with 6 or just do what was suggested in the issue, hard coding source=1.8 instead?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-530468659,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",hm i tried leaving -source default to 1.8 but then javac would not compile because 1.6 and 1.8 are not compatible i that sense. seems like -target and -source should be the same.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-530470448,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",but I was not aware that we compile for java6 by default.  we could set the default to java 8,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-530492759,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",i deactivated the Javaversion setting for jtaverser2 and mdsplus-api as they are build for java8,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-530497005,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",I don't fully understand at what point this broke. We used to target Java 6 on our builds (I think not very long ago) and it worked just fine using java 1.8 to build for java 6. I know we targeted Java 6 for compatibility with the default java installed on certain OS's. Perhaps that is no longer required but who knows.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-530622540,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",hm not sure. mdsplus-api andbor jtraverser2 was only working with java8 from tge beginning i think. i played with source 8 target 6 but it complained. now it can build all prijects in 6 but mdsplu-api and jtraverser2. should be good to go.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-531215493,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1794,2019-09-11T09:43:09Z,2019-09-16T17:39:56Z,2019-09-16T17:39:56Z,MERGED,True,13,50,47,https://github.com/zack-vii,Fix: reactivate --with-java_target and made java compatible to java 6 ,5,[],https://github.com/MDSplus/mdsplus/pull/1794,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/1794#issuecomment-531851945,"Includes JAVAVERSION in JAVACFLAGS to enable flags in default java compiler code generated by autoconf.
modifies jscop and jtraverser2 source to be backwards compatible with java 6


replaced try-resource clause with try-finally-close
this should fix #1792",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1795,2019-09-12T11:27:45Z,2019-09-16T17:37:17Z,2019-09-16T17:37:17Z,MERGED,True,202,224,14,https://github.com/zack-vii, Feature: added Open Link to context menu,4,[],https://github.com/MDSplus/mdsplus/pull/1795,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1795,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1795,2019-09-12T11:27:45Z,2019-09-16T17:37:17Z,2019-09-16T17:37:17Z,MERGED,True,202,224,14,https://github.com/zack-vii, Feature: added Open Link to context menu,4,[],https://github.com/MDSplus/mdsplus/pull/1795,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1795#issuecomment-531773123,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1797,2019-09-14T13:47:04Z,2019-09-16T14:31:09Z,2019-11-25T10:19:57Z,MERGED,True,14,6,4,https://github.com/GabrieleManduchi,Fix:Top level devices in Java DecompileTree and Signal compile in mds…,2,[],https://github.com/MDSplus/mdsplus/pull/1797,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1797,"…objects cpp

Devices at top level were not recognized as devices. Not they are
The Signal descriptor now requires that length field be 0. Solved by adding a Signal specific convertToDsc() method overriding that of Compound","…objects cpp

Devices at top level were not recognized as devices. Not they are
The Signal descriptor now requires that length field be 0. Solved by adding a Signal specific convertToDsc() method overriding that of Compound",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1797,2019-09-14T13:47:04Z,2019-09-16T14:31:09Z,2019-11-25T10:19:57Z,MERGED,True,14,6,4,https://github.com/GabrieleManduchi,Fix:Top level devices in Java DecompileTree and Signal compile in mds…,2,[],https://github.com/MDSplus/mdsplus/pull/1797,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1797#issuecomment-531511544,"…objects cpp

Devices at top level were not recognized as devices. Not they are
The Signal descriptor now requires that length field be 0. Solved by adding a Signal specific convertToDsc() method overriding that of Compound",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1797,2019-09-14T13:47:04Z,2019-09-16T14:31:09Z,2019-11-25T10:19:57Z,MERGED,True,14,6,4,https://github.com/GabrieleManduchi,Fix:Top level devices in Java DecompileTree and Signal compile in mds…,2,[],https://github.com/MDSplus/mdsplus/pull/1797,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1797#issuecomment-531770665,"…objects cpp

Devices at top level were not recognized as devices. Not they are
The Signal descriptor now requires that length field be 0. Solved by adding a Signal specific convertToDsc() method overriding that of Compound",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1797,2019-09-14T13:47:04Z,2019-09-16T14:31:09Z,2019-11-25T10:19:57Z,MERGED,True,14,6,4,https://github.com/GabrieleManduchi,Fix:Top level devices in Java DecompileTree and Signal compile in mds…,2,[],https://github.com/MDSplus/mdsplus/pull/1797,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1797#issuecomment-531785474,"…objects cpp

Devices at top level were not recognized as devices. Not they are
The Signal descriptor now requires that length field be 0. Solved by adding a Signal specific convertToDsc() method overriding that of Compound",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1798,2019-09-16T18:46:40Z,2019-09-24T14:05:14Z,2019-10-31T23:28:23Z,MERGED,True,64,22,24,https://github.com/zack-vii,Build: added JAVASOURCE and JAVABOOTCLASSPATH,1,[],https://github.com/MDSplus/mdsplus/pull/1798,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1798,"this is a more transparent way to express the java version of the source files
based on JAVASOURCE and JAVABOOTCLASSPATH the build script will determine the default
values for -target and -bootclasspath if required.","this is a more transparent way to express the java version of the source files
based on JAVASOURCE and JAVABOOTCLASSPATH the build script will determine the default
values for -target and -bootclasspath if required.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1798,2019-09-16T18:46:40Z,2019-09-24T14:05:14Z,2019-10-31T23:28:23Z,MERGED,True,64,22,24,https://github.com/zack-vii,Build: added JAVASOURCE and JAVABOOTCLASSPATH,1,[],https://github.com/MDSplus/mdsplus/pull/1798,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1798#issuecomment-534090565,"this is a more transparent way to express the java version of the source files
based on JAVASOURCE and JAVABOOTCLASSPATH the build script will determine the default
values for -target and -bootclasspath if required.","could someone please approve this, thanks",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1799,2019-09-18T07:49:40Z,2019-09-24T14:03:29Z,2019-10-31T23:28:04Z,MERGED,True,17,2,1,https://github.com/zack-vii,Build: enable auto closing and release of maven deployment,1,[],https://github.com/MDSplus/mdsplus/pull/1799,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1799,This PR will finalize the master pom so we can automatically release to maven e.g. using the 3-maven job on jenkins.,This PR will finalize the master pom so we can automatically release to maven e.g. using the 3-maven job on jenkins.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1799,2019-09-18T07:49:40Z,2019-09-24T14:03:29Z,2019-10-31T23:28:04Z,MERGED,True,17,2,1,https://github.com/zack-vii,Build: enable auto closing and release of maven deployment,1,[],https://github.com/MDSplus/mdsplus/pull/1799,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1799#issuecomment-534090505,This PR will finalize the master pom so we can automatically release to maven e.g. using the 3-maven job on jenkins.,"could someone please approve this, thanks",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1800,2019-09-19T09:08:41Z,2019-09-19T13:37:13Z,2019-09-19T13:37:14Z,MERGED,True,7053,7004,11,https://github.com/GabrieleManduchi,Gm improve jscope,3,[],https://github.com/MDSplus/mdsplus/pull/1800,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1800,"A set of fixes in jScope for:

Fix error reporting that had been broken in the last improvements
Fix 2D signal visualization that had been broken by row and col TDI variable settings
Other minor fixes","A set of fixes in jScope for:

Fix error reporting that had been broken in the last improvements
Fix 2D signal visualization that had been broken by row and col TDI variable settings
Other minor fixes",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1803,2019-09-25T07:38:25Z,2019-09-25T14:59:16Z,2019-10-31T23:28:03Z,CLOSED,False,2,5,1,https://github.com/zack-vii,Fix: number of intervals in RANGE should round to lesser integer,1,[],https://github.com/MDSplus/mdsplus/pull/1803,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1803,"according to #1802 the behaviour of Range is wrong. Well its different from python's range. Given the source code, the difference might have been intentional.","according to #1802 the behaviour of Range is wrong. Well its different from python's range. Given the source code, the difference might have been intentional.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1803,2019-09-25T07:38:25Z,2019-09-25T14:59:16Z,2019-10-31T23:28:03Z,CLOSED,False,2,5,1,https://github.com/zack-vii,Fix: number of intervals in RANGE should round to lesser integer,1,[],https://github.com/MDSplus/mdsplus/pull/1803,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1803#issuecomment-534904973,"according to #1802 the behaviour of Range is wrong. Well its different from python's range. Given the source code, the difference might have been intentional.","tditest tests this behaviour and expects Range to exceed end. even with floor rounding this would not resemble pythons range. So far this pr would change our range so that
python:  n>=begin and n< end
mdsplus: n>=begin and n<=end         (pr)
mdsplus: n>=begin and n<=end+delta/2 (alpha)

for all elemens n produced by range.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1803,2019-09-25T07:38:25Z,2019-09-25T14:59:16Z,2019-10-31T23:28:03Z,CLOSED,False,2,5,1,https://github.com/zack-vii,Fix: number of intervals in RANGE should round to lesser integer,1,[],https://github.com/MDSplus/mdsplus/pull/1803,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1803#issuecomment-535064505,"according to #1802 the behaviour of Range is wrong. Well its different from python's range. Given the source code, the difference might have been intentional.","we can use
CULL([_s,_e],,_s:_e:_d)

to achieve the same think without changes to the codes.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1804,2019-09-25T10:08:18Z,2019-09-25T14:34:07Z,2019-09-25T14:34:07Z,MERGED,True,472,379,21,https://github.com/GabrieleManduchi,Gm improve jscope,13,[],https://github.com/MDSplus/mdsplus/pull/1804,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1804,"A bunch of fixes and improvements for jScope. (both jScope and ScopeUtilities.c in mdfsmisc).
In particular, event-driven updates for growing segmented signals have been optimized to minimize disk access in update. A memory leak leading to degraded performances after some utilization time has been fixed, too.
A fix has also been added to mstcpip/ProcessMessage.c in order to disconnect from registered events when a communication goes down. Previously, when a connection registered to a MDSplus event and then went down without unregistering the event, the AST routine for that event found connection pointer to null and crashed when using it.","A bunch of fixes and improvements for jScope. (both jScope and ScopeUtilities.c in mdfsmisc).
In particular, event-driven updates for growing segmented signals have been optimized to minimize disk access in update. A memory leak leading to degraded performances after some utilization time has been fixed, too.
A fix has also been added to mstcpip/ProcessMessage.c in order to disconnect from registered events when a communication goes down. Previously, when a connection registered to a MDSplus event and then went down without unregistering the event, the AST routine for that event found connection pointer to null and crashed when using it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1805,2019-09-26T13:27:08Z,2019-09-26T14:58:55Z,2019-09-26T14:58:55Z,MERGED,True,192,21,4,https://github.com/GabrieleManduchi,Gm improve jscope,15,[],https://github.com/MDSplus/mdsplus/pull/1805,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1805,"A set of fixes to enable optimized data access via jScope MdsDataProvider. Recent changes broke the  mechanism.
C++ methods befinSegmentResamples(), beginSegmentMinMax(), putSegmentesamples(), putSegmentMinMax() have been also added in addition to maheSegmentResample() and makeSegmentMinMax(). These method will be used bu devices producing large signals in order to enable jScope smart resampling.","A set of fixes to enable optimized data access via jScope MdsDataProvider. Recent changes broke the  mechanism.
C++ methods befinSegmentResamples(), beginSegmentMinMax(), putSegmentesamples(), putSegmentMinMax() have been also added in addition to maheSegmentResample() and makeSegmentMinMax(). These method will be used bu devices producing large signals in order to enable jScope smart resampling.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1806,2019-09-26T15:28:24Z,2019-09-27T06:46:04Z,2019-09-27T06:46:04Z,MERGED,True,0,2,1,https://github.com/GabrieleManduchi,Gm improve jscope,17,[],https://github.com/MDSplus/mdsplus/pull/1806,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1806,Remove a couple of forgotten debug messages,Remove a couple of forgotten debug messages,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1807,2019-09-26T17:17:50Z,2019-09-27T13:21:46Z,2019-09-27T13:21:46Z,MERGED,True,11,12,1,https://github.com/santorofer,Fix: Added CULL() to get the time dimension with correct segment lengths.,2,[],https://github.com/MDSplus/mdsplus/pull/1807,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1807,"Added CULL() to get the time dimension with the correct array ending for each segment.
So that, there will not be extra points in the dimension array.","Added CULL() to get the time dimension with the correct array ending for each segment.
So that, there will not be extra points in the dimension array.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1807,2019-09-26T17:17:50Z,2019-09-27T13:21:46Z,2019-09-27T13:21:46Z,MERGED,True,11,12,1,https://github.com/santorofer,Fix: Added CULL() to get the time dimension with correct segment lengths.,2,[],https://github.com/MDSplus/mdsplus/pull/1807,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1807#issuecomment-535604493,"Added CULL() to get the time dimension with the correct array ending for each segment.
So that, there will not be extra points in the dimension array.",Is the print at line 164 intentional or just a leftover debug statement?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1807,2019-09-26T17:17:50Z,2019-09-27T13:21:46Z,2019-09-27T13:21:46Z,MERGED,True,11,12,1,https://github.com/santorofer,Fix: Added CULL() to get the time dimension with correct segment lengths.,2,[],https://github.com/MDSplus/mdsplus/pull/1807,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1807#issuecomment-535605453,"Added CULL() to get the time dimension with the correct array ending for each segment.
So that, there will not be extra points in the dimension array.",also did you want to use a range for the first argument of CULL? I thought an Array worked better.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1807,2019-09-26T17:17:50Z,2019-09-27T13:21:46Z,2019-09-27T13:21:46Z,MERGED,True,11,12,1,https://github.com/santorofer,Fix: Added CULL() to get the time dimension with correct segment lengths.,2,[],https://github.com/MDSplus/mdsplus/pull/1807,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1807#issuecomment-535632842,"Added CULL() to get the time dimension with the correct array ending for each segment.
So that, there will not be extra points in the dimension array.","This code is not right.  There are some subtleties.  F and S and I
worked out the solution
…
On 9/26/19 1:25 PM, Tom Fredian wrote:

 also did you want to use a range for the first argument of CULL? I
 thought an Array worked better.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#1807?email_source=notifications&email_token=ABY5AZOD2HLOHXWAXKA2K33QLTWBNA5CNFSM4I24ZOW2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7WLBTI#issuecomment-535605453>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABY5AZLXTON7DXVMQWBDSSDQLTWBNANCNFSM4I24ZOWQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1808,2019-09-26T20:22:31Z,2019-09-27T13:20:24Z,2019-09-27T13:20:24Z,MERGED,True,14,16,4,https://github.com/WhoBrokeTheBuild,Fix: Fixing python3 compatibility with acq435st,1,[],https://github.com/MDSplus/mdsplus/pull/1808,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1808,"Changed import Queue to from queue import Queue
Changed syntax of relative imports to work in both python 2 and 3","Changed import Queue to from queue import Queue
Changed syntax of relative imports to work in both python 2 and 3",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1808,2019-09-26T20:22:31Z,2019-09-27T13:20:24Z,2019-09-27T13:20:24Z,MERGED,True,14,16,4,https://github.com/WhoBrokeTheBuild,Fix: Fixing python3 compatibility with acq435st,1,[],https://github.com/MDSplus/mdsplus/pull/1808,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1808#issuecomment-535673779,"Changed import Queue to from queue import Queue
Changed syntax of relative imports to work in both python 2 and 3","you might want to consider doing both, one in a try and thebother in the except so you will end up with a Queue for both py2 and py3",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1808,2019-09-26T20:22:31Z,2019-09-27T13:20:24Z,2019-09-27T13:20:24Z,MERGED,True,14,16,4,https://github.com/WhoBrokeTheBuild,Fix: Fixing python3 compatibility with acq435st,1,[],https://github.com/MDSplus/mdsplus/pull/1808,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1808#issuecomment-535674729,"Changed import Queue to from queue import Queue
Changed syntax of relative imports to work in both python 2 and 3","did you test the  import '.' stuff in both 2 and 3, and in mdstcl ?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1808,2019-09-26T20:22:31Z,2019-09-27T13:20:24Z,2019-09-27T13:20:24Z,MERGED,True,14,16,4,https://github.com/WhoBrokeTheBuild,Fix: Fixing python3 compatibility with acq435st,1,[],https://github.com/MDSplus/mdsplus/pull/1808,https://github.com/WhoBrokeTheBuild,4,https://github.com/MDSplus/mdsplus/pull/1808#issuecomment-535796259,"Changed import Queue to from queue import Queue
Changed syntax of relative imports to work in both python 2 and 3","Yep! This code all works for python 2 and 3, even the queue code.
…
On Thu, Sep 26, 2019, 4:32 PM Josh Stillerman ***@***.***> wrote:
 did you test the import '.' stuff in both 2 and 3, and in mdstcl ?

 —
 You are receiving this because you were assigned.
 Reply to this email directly, view it on GitHub
 <#1808?email_source=notifications&email_token=AAHSS7ZFUSZGGV5KTLDO63TQLUL5TA5CNFSM4I26VCF2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7W362I#issuecomment-535674729>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAHSS76CDXGOZ5LP4VX6BSDQLUL5TANCNFSM4I26VCFQ>
 .",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1808,2019-09-26T20:22:31Z,2019-09-27T13:20:24Z,2019-09-27T13:20:24Z,MERGED,True,14,16,4,https://github.com/WhoBrokeTheBuild,Fix: Fixing python3 compatibility with acq435st,1,[],https://github.com/MDSplus/mdsplus/pull/1808,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/1808#issuecomment-535919898,"Changed import Queue to from queue import Queue
Changed syntax of relative imports to work in both python 2 and 3","And mdstcl I assumeOn Sep 27, 2019 1:46 AM, Stephen Lane-Walsh <notifications@github.com> wrote:Yep! This code all works for python 2 and 3, even the queue code.

On Thu, Sep 26, 2019, 4:32 PM Josh Stillerman <notifications@github.com>
wrote:
 did you test the import '.' stuff in both 2 and 3, and in mdstcl ?

 —
 You are receiving this because you were assigned.
 Reply to this email directly, view it on GitHub
 <#1808?email_source=notifications&email_token=AAHSS7ZFUSZGGV5KTLDO63TQLUL5TA5CNFSM4I26VCF2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7W362I#issuecomment-535674729>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAHSS76CDXGOZ5LP4VX6BSDQLUL5TANCNFSM4I26VCFQ>
 .

—You are receiving this because your review was requested.Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1809,2019-09-30T13:54:47Z,2019-10-01T07:09:49Z,2019-10-01T07:57:58Z,MERGED,True,12,26,4,https://github.com/GabrieleManduchi,Gm improve jscope,21,[],https://github.com/MDSplus/mdsplus/pull/1809,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1809,Fixed jScope dynamic resampling. In some conditions (e.g. when zooming the end of a signal) low resolution regions were not updated,Fixed jScope dynamic resampling. In some conditions (e.g. when zooming the end of a signal) low resolution regions were not updated,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1809,2019-09-30T13:54:47Z,2019-10-01T07:09:49Z,2019-10-01T07:57:58Z,MERGED,True,12,26,4,https://github.com/GabrieleManduchi,Gm improve jscope,21,[],https://github.com/MDSplus/mdsplus/pull/1809,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1809#issuecomment-536585027,Fixed jScope dynamic resampling. In some conditions (e.g. when zooming the end of a signal) low resolution regions were not updated,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1809,2019-09-30T13:54:47Z,2019-10-01T07:09:49Z,2019-10-01T07:57:58Z,MERGED,True,12,26,4,https://github.com/GabrieleManduchi,Gm improve jscope,21,[],https://github.com/MDSplus/mdsplus/pull/1809,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1809#issuecomment-536632157,Fixed jScope dynamic resampling. In some conditions (e.g. when zooming the end of a signal) low resolution regions were not updated,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1811,2019-10-01T15:00:03Z,2019-10-01T15:56:55Z,2019-10-01T16:09:59Z,MERGED,True,110,74,7,https://github.com/GabrieleManduchi,Feature:display proper NCI info for segmented nodes,1,[],https://github.com/MDSplus/mdsplus/pull/1811,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1811,Now the number of segments is reported in display NCI and additional data such as dtype are displayed only for non segmented nodes,Now the number of segments is reported in display NCI and additional data such as dtype are displayed only for non segmented nodes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1812,2019-10-01T21:11:12Z,2019-10-01T21:17:52Z,2019-10-01T21:17:52Z,MERGED,True,4,4,1,https://github.com/WhoBrokeTheBuild,Fix: Resolving syntax errors introduced in PR#1808,1,[],https://github.com/MDSplus/mdsplus/pull/1812,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1812,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1813,2019-10-01T23:51:33Z,2019-10-02T08:46:10Z,2019-10-02T08:46:10Z,MERGED,True,2,1,1,https://github.com/zack-vii,Fix: create TdiRefZone.l_zone only if none exists,1,[],https://github.com/MDSplus/mdsplus/pull/1813,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1813,should fix issue #1810,should fix issue #1810,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1813,2019-10-01T23:51:33Z,2019-10-02T08:46:10Z,2019-10-02T08:46:10Z,MERGED,True,2,1,1,https://github.com/zack-vii,Fix: create TdiRefZone.l_zone only if none exists,1,[],https://github.com/MDSplus/mdsplus/pull/1813,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1813#issuecomment-537318461,should fix issue #1810,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1814,2019-10-02T10:02:13Z,2019-10-02T12:06:17Z,2019-10-02T12:06:17Z,MERGED,True,47,8,4,https://github.com/GabrieleManduchi,Gm improve jscope,25,[],https://github.com/MDSplus/mdsplus/pull/1814,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1814,"Final (hopefully) fixes/improvements to jScope. Now env variable MDSPLUS_DEFAULT_RESAMPLE_MODE is set to MinMax by jScope, and he threshold for using xtreeshr resampling has been lowered to 500000 samples. Moreover, ScopeUtilities has been fixed in order to report correct resolution factor in case of xtreeshr resampling","Final (hopefully) fixes/improvements to jScope. Now env variable MDSPLUS_DEFAULT_RESAMPLE_MODE is set to MinMax by jScope, and he threshold for using xtreeshr resampling has been lowered to 500000 samples. Moreover, ScopeUtilities has been fixed in order to report correct resolution factor in case of xtreeshr resampling",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1814,2019-10-02T10:02:13Z,2019-10-02T12:06:17Z,2019-10-02T12:06:17Z,MERGED,True,47,8,4,https://github.com/GabrieleManduchi,Gm improve jscope,25,[],https://github.com/MDSplus/mdsplus/pull/1814,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1814#issuecomment-537436271,"Final (hopefully) fixes/improvements to jScope. Now env variable MDSPLUS_DEFAULT_RESAMPLE_MODE is set to MinMax by jScope, and he threshold for using xtreeshr resampling has been lowered to 500000 samples. Moreover, ScopeUtilities has been fixed in order to report correct resolution factor in case of xtreeshr resampling",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1815,2019-10-02T21:07:10Z,2019-10-25T18:13:20Z,2019-10-25T18:13:20Z,MERGED,True,24,27,2,https://github.com/santorofer,Fix: acq2106_423 decimation fixes using MDSplus.Range() and correcting the ends of the range by accounting for decimation values.,9,[],https://github.com/MDSplus/mdsplus/pull/1815,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1815,"The changes are two fold:

To Homogenize the way acq435st.py and acq2106_423st.py deal with the creation of the time dimension segments. We have now corrected the ends of the ranges by accounting for the decimation value. We use MDSplus.Range(). The defined function called truncate() no longer is used.
Bring Queue and Empty Python 2 libraries to comply with Python 3 queue library

TODO

 Port changes to acq435st.py","The changes are two fold:

To Homogenize the way acq435st.py and acq2106_423st.py deal with the creation of the time dimension segments. We have now corrected the ends of the ranges by accounting for the decimation value. We use MDSplus.Range(). The defined function called truncate() no longer is used.
Bring Queue and Empty Python 2 libraries to comply with Python 3 queue library

TODO

 Port changes to acq435st.py",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1815,2019-10-02T21:07:10Z,2019-10-25T18:13:20Z,2019-10-25T18:13:20Z,MERGED,True,24,27,2,https://github.com/santorofer,Fix: acq2106_423 decimation fixes using MDSplus.Range() and correcting the ends of the range by accounting for decimation values.,9,[],https://github.com/MDSplus/mdsplus/pull/1815,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1815#issuecomment-537752391,"The changes are two fold:

To Homogenize the way acq435st.py and acq2106_423st.py deal with the creation of the time dimension segments. We have now corrected the ends of the ranges by accounting for the decimation value. We use MDSplus.Range(). The defined function called truncate() no longer is used.
Bring Queue and Empty Python 2 libraries to comply with Python 3 queue library

TODO

 Port changes to acq435st.py","now I see what you planned on doing with cull. why dont you use the window object instead which was meant for just this purpose.
from MDSplus import SUBTRACT,DIVIDE,UNARY_MINUS,Window,Range,Dimension
win  = Window(UNARY_MINUS(self.trigger_pre),SUBTRACT(self.trigger_post,1),self.trigger)
rang = Range(None,None,DIVIDE(1.,self.clock))
dim = Dimension(win,rang).setUnits('s')
where the self.xxx are nodes of the device.
with segments you just edit the window pre and post to first and last sample index stored in tha segment, where the index is rekative to the trigger (i.e. negative for pretrigger samples)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1815,2019-10-02T21:07:10Z,2019-10-25T18:13:20Z,2019-10-25T18:13:20Z,MERGED,True,24,27,2,https://github.com/santorofer,Fix: acq2106_423 decimation fixes using MDSplus.Range() and correcting the ends of the range by accounting for decimation values.,9,[],https://github.com/MDSplus/mdsplus/pull/1815,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/1815#issuecomment-538015476,"The changes are two fold:

To Homogenize the way acq435st.py and acq2106_423st.py deal with the creation of the time dimension segments. We have now corrected the ends of the ranges by accounting for the decimation value. We use MDSplus.Range(). The defined function called truncate() no longer is used.
Bring Queue and Empty Python 2 libraries to comply with Python 3 queue library

TODO

 Port changes to acq435st.py","Yes, you are right, my mistake. I'll correct it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1815,2019-10-02T21:07:10Z,2019-10-25T18:13:20Z,2019-10-25T18:13:20Z,MERGED,True,24,27,2,https://github.com/santorofer,Fix: acq2106_423 decimation fixes using MDSplus.Range() and correcting the ends of the range by accounting for decimation values.,9,[],https://github.com/MDSplus/mdsplus/pull/1815,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1815#issuecomment-544606148,"The changes are two fold:

To Homogenize the way acq435st.py and acq2106_423st.py deal with the creation of the time dimension segments. We have now corrected the ends of the ranges by accounting for the decimation value. We use MDSplus.Range(). The defined function called truncate() no longer is used.
Bring Queue and Empty Python 2 libraries to comply with Python 3 queue library

TODO

 Port changes to acq435st.py","@WhoBrokeTheBuild  and or @santorofer
Can you verify that this latest version gets the right answers ?  The code looks good.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1816,2019-10-03T01:35:43Z,2019-10-03T12:35:42Z,2019-10-31T23:28:00Z,MERGED,True,38,1,2,https://github.com/zack-vii,Fix: create TdiRefZone.l_zone only if none exists,2,[],https://github.com/MDSplus/mdsplus/pull/1816,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1816,fixes #1810 for stable,fixes #1810 for stable,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1818,2019-10-05T13:59:02Z,2019-10-21T13:34:27Z,2019-10-21T13:34:27Z,MERGED,True,0,1,1,https://github.com/merlea,Removing extra writes to stdout,1,[],https://github.com/MDSplus/mdsplus/pull/1818,https://github.com/merlea,1,https://github.com/MDSplus/mdsplus/pull/1818,It seems a previous cleanup missed a few writes to stdout.,It seems a previous cleanup missed a few writes to stdout.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1818,2019-10-05T13:59:02Z,2019-10-21T13:34:27Z,2019-10-21T13:34:27Z,MERGED,True,0,1,1,https://github.com/merlea,Removing extra writes to stdout,1,[],https://github.com/MDSplus/mdsplus/pull/1818,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1818#issuecomment-538652164,It seems a previous cleanup missed a few writes to stdout.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1818,2019-10-05T13:59:02Z,2019-10-21T13:34:27Z,2019-10-21T13:34:27Z,MERGED,True,0,1,1,https://github.com/merlea,Removing extra writes to stdout,1,[],https://github.com/MDSplus/mdsplus/pull/1818,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1818#issuecomment-539015704,It seems a previous cleanup missed a few writes to stdout.,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1819,2019-10-05T14:00:22Z,2019-10-08T07:33:10Z,2019-10-08T07:33:10Z,MERGED,True,0,3,1,https://github.com/merlea,Removing extra writes to stdout [stable],1,[],https://github.com/MDSplus/mdsplus/pull/1819,https://github.com/merlea,1,https://github.com/MDSplus/mdsplus/pull/1819,It seems a previous cleanup missed a few writes to stdout.,It seems a previous cleanup missed a few writes to stdout.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1819,2019-10-05T14:00:22Z,2019-10-08T07:33:10Z,2019-10-08T07:33:10Z,MERGED,True,0,3,1,https://github.com/merlea,Removing extra writes to stdout [stable],1,[],https://github.com/MDSplus/mdsplus/pull/1819,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1819#issuecomment-538652275,It seems a previous cleanup missed a few writes to stdout.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1819,2019-10-05T14:00:22Z,2019-10-08T07:33:10Z,2019-10-08T07:33:10Z,MERGED,True,0,3,1,https://github.com/merlea,Removing extra writes to stdout [stable],1,[],https://github.com/MDSplus/mdsplus/pull/1819,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1819#issuecomment-538861710,It seems a previous cleanup missed a few writes to stdout.,"The same patch has already been reported in alpha, but since those messages area annoying in ITER integrated modeling programs, we can report it directly in stable",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1819,2019-10-05T14:00:22Z,2019-10-08T07:33:10Z,2019-10-08T07:33:10Z,MERGED,True,0,3,1,https://github.com/merlea,Removing extra writes to stdout [stable],1,[],https://github.com/MDSplus/mdsplus/pull/1819,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1819#issuecomment-538862099,It seems a previous cleanup missed a few writes to stdout.,"Tom, how do we proceed? Can you report it directly in stable?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1819,2019-10-05T14:00:22Z,2019-10-08T07:33:10Z,2019-10-08T07:33:10Z,MERGED,True,0,3,1,https://github.com/merlea,Removing extra writes to stdout [stable],1,[],https://github.com/MDSplus/mdsplus/pull/1819,https://github.com/merlea,5,https://github.com/MDSplus/mdsplus/pull/1819#issuecomment-538876287,It seems a previous cleanup missed a few writes to stdout.,"Note that the two patches are slightly different, in alpha there is only one such statement removed as the others must have been removed earlier.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1819,2019-10-05T14:00:22Z,2019-10-08T07:33:10Z,2019-10-08T07:33:10Z,MERGED,True,0,3,1,https://github.com/merlea,Removing extra writes to stdout [stable],1,[],https://github.com/MDSplus/mdsplus/pull/1819,https://github.com/tfredian,6,https://github.com/MDSplus/mdsplus/pull/1819#issuecomment-538978531,It seems a previous cleanup missed a few writes to stdout.,"Gabriele, I assume your question is related to the: ""Can one of the admins verify this patch?""
This message is automatically generated when someone (other than a core MDSplus developer) makes a pull request. Since there is a potential vulnerability with someone putting harmful code into a PR which could be executed during a build and test, a member of the developer team has to simply use a comment on the PR with the phrase ""Ok to test"". This will cause the PR to be tested and if it passes the test we can approve and merge it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1819,2019-10-05T14:00:22Z,2019-10-08T07:33:10Z,2019-10-08T07:33:10Z,MERGED,True,0,3,1,https://github.com/merlea,Removing extra writes to stdout [stable],1,[],https://github.com/MDSplus/mdsplus/pull/1819,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1819#issuecomment-538978575,It seems a previous cleanup missed a few writes to stdout.,ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/seanalsop,1,https://github.com/MDSplus/mdsplus/pull/1820,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.","I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-539004819,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.",Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-539016544,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/tfredian,4,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-544667783,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.",This looks fine to me. There do seem to be quite a few print statements which are not controlled by the debug attribute. Should they always occur or should they depend on the debug attribute?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/seanalsop,5,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-545791463,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.","You're right there was some left over print statements, so I got rid of them. I've left some of the other print statements, because I like to know when each step has started/ended and I think it is probably useful for other users too.
Thanks!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/santorofer,6,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-547639463,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.","Hi Sean,
I've been testing this python MDSplus device code with acq2106 in our test rack. I noticed that the creation of the INPUT_xxx nodes was not happening because ""parts"" was not defined in init()  where you were appending the input nodes. I then moved the creation of those nodes up in the code just after parts[ ] is defined in  the class ACQ2106_MGT(). I am now able to have those nodes in my tree, but I don't seem to get data into them. I'm wondering if I'm not understanding how the ACQ is being triggered. There is a mode called ""role_default"", is that equivalent to a software trigger?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/santorofer,7,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-547655454,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.","Hi again, I understand now that selecting ""soft"" or ""automatic"" trigger actually set the device as a transient recorder, am I correct?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/santorofer,8,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-547678416,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.","I think I know why the streaming was not started, it's because the MDSWorker tread was not started in the init() method. This is what I see now:
Running init
acq400_hapi.Acq2106_MgtDram8 172.20.240.13
acq400_hapi.Acq2106 172.20.240.13
Netclient.init 172.20.240.13 4220
Netclient.init 172.20.240.13 4221
Netclient.init 172.20.240.13 4222
Netclient.init 172.20.240.13 2235
Netclient.init 172.20.240.13 4233
Netclient.init 172.20.240.13 4232
Netclient.init 172.20.240.13 4234
uut 172.20.240.13 site 11 not populated
But I still don't get data in the input nodes...
What are the numbers in the last column of that output?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/seanalsop,9,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-547791604,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.","Hi Fernando,
Thanks for taking the time to look at this. As of yesterday Peter and I were
making some quality of life changes and we'd left it in a bad state - so I think
this is why you were having some issues.
To answer your questions:
The creation of the INPUT_xxx nodes was originally being done in init(), but we
were experimenting with moving them.
Automatic or soft are the method of trigger you want to use for
the digitizer. In the init method it will configure the system for whatever
trigger the user has asked for (hard, soft or automatic).
The numbers in the last column of the output you provided are the port numbers
that HAPI is connecting to under the hood. The python establishes these connections
when it is invoked so it can configure the UUT.
I'd like to close this PR for now because we want to add some more features.
I'll reopen in the next day or two once they're done.
Thanks again for taking a look at the code! I'll make sure it is fully functional
by the next time you use it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1820,2019-10-07T13:14:54Z,2019-10-30T08:35:33Z,2019-10-30T13:46:50Z,CLOSED,False,272,0,1,https://github.com/seanalsop,Feature: Added support for acq2106+MGT-DRAM.,30,[],https://github.com/MDSplus/mdsplus/pull/1820,https://github.com/santorofer,10,https://github.com/MDSplus/mdsplus/pull/1820#issuecomment-547911110,"I've adapted one of the other acq400 scripts to work with MGT-DRAM. Let me know if there is anything that needs changed.
Note: this does need the current acq400_hapi to work correctly, either installed via PIP or pointed to via PYTHONPATH.","Hi Sean,
No problem at all. We are anxious to use it in our new test rack!.
One of the issue that the code had, specifically in the init() method of the acq2106_mgt() device class was that it was missing the the start of the MDSWorker tread:
    thread = self.MDSWorker(self)
    thread.start()

, so that it was never really trying to collect the data. I am now able to run it, but the issue I'm seeing now is that I'm getting a Queue.Empty exception when trying to get the full buffer (buf = self.full_buffers.get(block=True, timeout=1) also from the init() method.
Yes, let us now how things evolve from. your side.
Cheers.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1821,2019-10-09T18:39:02Z,2019-10-09T20:32:35Z,2019-10-09T20:43:39Z,MERGED,True,477,469,22,https://github.com/zack-vii,Feature: reentrant TdiCompile,4,[],https://github.com/MDSplus/mdsplus/pull/1821,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1821,"before TdiCompile had some limitations:


For recursion must pass LEX:
zone status bol cur end
tdiyylval tdiyyval
tdiyytext[YYLMAX] tdiyyleng tdiyymorfg tdiyytchar tdiyyin? tdiyyout?
For recursion must pass YACC also:
tdiyydebug? tdiyyv[YYMAXDEPTH] tdiyychar tdiyynerrs tdiyyerrflag
Thus no recursion because the tdiyy's are built into LEX and YACC.
IMMEDIATE (`) must never call COMPILE. NEED to prevent this.

this PR  supports (`) on COMPILE","before TdiCompile had some limitations:


For recursion must pass LEX:
zone status bol cur end
tdiyylval tdiyyval
tdiyytext[YYLMAX] tdiyyleng tdiyymorfg tdiyytchar tdiyyin? tdiyyout?
For recursion must pass YACC also:
tdiyydebug? tdiyyv[YYMAXDEPTH] tdiyychar tdiyynerrs tdiyyerrflag
Thus no recursion because the tdiyy's are built into LEX and YACC.
IMMEDIATE (`) must never call COMPILE. NEED to prevent this.

this PR  supports (`) on COMPILE",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1821,2019-10-09T18:39:02Z,2019-10-09T20:32:35Z,2019-10-09T20:43:39Z,MERGED,True,477,469,22,https://github.com/zack-vii,Feature: reentrant TdiCompile,4,[],https://github.com/MDSplus/mdsplus/pull/1821,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1821#issuecomment-540150704,"before TdiCompile had some limitations:


For recursion must pass LEX:
zone status bol cur end
tdiyylval tdiyyval
tdiyytext[YYLMAX] tdiyyleng tdiyymorfg tdiyytchar tdiyyin? tdiyyout?
For recursion must pass YACC also:
tdiyydebug? tdiyyv[YYMAXDEPTH] tdiyychar tdiyynerrs tdiyyerrflag
Thus no recursion because the tdiyy's are built into LEX and YACC.
IMMEDIATE (`) must never call COMPILE. NEED to prevent this.

this PR  supports (`) on COMPILE","Sorry I know. I tend to do a lot of cleanups. This helps me to understand the code better and eventually whats lets is a clear picture of whats actually preventing me from achieving the original goal.
What finally led to the solution was embedding the globals used by TdiYacc and TdiLex into the respective funtions and pass the shared var as argument. Well and the fact the the TDI_STACK_IDX should be controlled by TdiYacc_IMMEDIATE rather than TdiCompile.
I think the code could be threadsafe it it was not for the public vars. But the test in MdsExpressionCompileTest that fails should probably not be run multithreaded.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1821,2019-10-09T18:39:02Z,2019-10-09T20:32:35Z,2019-10-09T20:43:39Z,MERGED,True,477,469,22,https://github.com/zack-vii,Feature: reentrant TdiCompile,4,[],https://github.com/MDSplus/mdsplus/pull/1821,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1821#issuecomment-540168826,"before TdiCompile had some limitations:


For recursion must pass LEX:
zone status bol cur end
tdiyylval tdiyyval
tdiyytext[YYLMAX] tdiyyleng tdiyymorfg tdiyytchar tdiyyin? tdiyyout?
For recursion must pass YACC also:
tdiyydebug? tdiyyv[YYMAXDEPTH] tdiyychar tdiyynerrs tdiyyerrflag
Thus no recursion because the tdiyy's are built into LEX and YACC.
IMMEDIATE (`) must never call COMPILE. NEED to prevent this.

this PR  supports (`) on COMPILE",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1822,2019-10-09T23:53:30Z,2019-10-10T18:14:39Z,2019-10-31T23:27:09Z,CLOSED,False,11,18,5,https://github.com/zack-vii, Fix: Tdi1IfError has no need for TDI_ON_ERROR to keep,3,[],https://github.com/MDSplus/mdsplus/pull/1822,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1822,plus some small fixes,plus some small fixes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1822,2019-10-09T23:53:30Z,2019-10-10T18:14:39Z,2019-10-31T23:27:09Z,CLOSED,False,11,18,5,https://github.com/zack-vii, Fix: Tdi1IfError has no need for TDI_ON_ERROR to keep,3,[],https://github.com/MDSplus/mdsplus/pull/1822,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1822#issuecomment-540707859,plus some small fixes,Included in #1823,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1823,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it","tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540301152,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540635807,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it",this PR builds on changes in #1822,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540637648,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it",For discussion. Another implementation would be to exchange the TdiThreadStatic in a way that would hold one per connection. Not sure if this would be better but it would require another API function to discard the buffer when the connection is dropped.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540646025,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it",Is there some reason you changed the EMPTYXD macro in mdsdescrip.h??? Normally an xd without any data should have a length field of zero. Since it didn't seem to break anything I assume the code dealing with xd descriptors looks at the pointer before using the length but why change it in the first place.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540647438,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it",There is it seemed the XD methods do not update the length filed (at least not in all cases) whihc left length ==0 at any time. thus the GetErrorText method was always discarding the detailed TRACE and replaced it with the GetMsg of status. it would be much safer to check for pointer!=NULL in all cases.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540648700,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it","but you are right there are a few more locations where it checks for length, maybe instead we should fix teh Xd methods",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540650274,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it","hm from
mdsshr/MdsXdRoutines.c:82 MdsGet1Dx()
    if STATUS_OK {
      dsc_ptr->length = 0;
      dsc_ptr->l_length = *length_ptr;
      dsc_ptr->class = CLASS_XD;
      dsc_ptr->dtype = *dtype_ptr;
    }
which is not good or non intuitive at least.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/tfredian,9,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540650314,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it","Yep, it would be much better to fix the length handling.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1823,2019-10-10T01:19:00Z,2019-10-10T18:13:41Z,2019-10-31T23:27:16Z,MERGED,True,172,114,23,https://github.com/zack-vii,Feature: add --server option to tditest to run thru mdsip,13,[],https://github.com/MDSplus/mdsplus/pull/1823,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/1823#issuecomment-540671082,"tditest --server mdsip-server:8000

will now open a tditest session where every command will be executed via mdsvalue on the selected server.
Some bugfixes and performance tweaks for mdsip's ProcessMessage:

reuse TdiThreadStatic
fixed error handling (was supposed to return full trace but was broken)
dont clear DEBUG so client can use it","i reverted the length = sizeof(void*) and added a comment to mdsdecrip.h CLASS_XD about length
in commit
Fix: GetErrorText should check pointer",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1825,2019-10-14T11:33:12Z,2019-10-15T13:54:27Z,2019-10-15T13:54:27Z,MERGED,True,54,32,2,https://github.com/zack-vii,Fix: debian python post-install,2,[],https://github.com/MDSplus/mdsplus/pull/1825,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1825,should fix most of #1824,should fix most of #1824,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1825,2019-10-14T11:33:12Z,2019-10-15T13:54:27Z,2019-10-15T13:54:27Z,MERGED,True,54,32,2,https://github.com/zack-vii,Fix: debian python post-install,2,[],https://github.com/MDSplus/mdsplus/pull/1825,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1825#issuecomment-541632892,should fix most of #1824,works on a fresh installation of buster,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1826,2019-10-15T21:08:39Z,2019-10-16T13:11:39Z,2019-10-16T13:11:42Z,MERGED,True,6,17,13,https://github.com/zack-vii,Build: added debian stretch,3,[],https://github.com/MDSplus/mdsplus/pull/1826,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1826,added debian stretch 64bit and split debian wheezy,added debian stretch 64bit and split debian wheezy,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1826,2019-10-15T21:08:39Z,2019-10-16T13:11:39Z,2019-10-16T13:11:42Z,MERGED,True,6,17,13,https://github.com/zack-vii,Build: added debian stretch,3,[],https://github.com/MDSplus/mdsplus/pull/1826,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1826#issuecomment-542411515,added debian stretch 64bit and split debian wheezy,"the jenkins job should be updated after merge
in job lists replace 'debian_wheezy' with 'debian7-32,debian7-64,debian9-64'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1826,2019-10-15T21:08:39Z,2019-10-16T13:11:39Z,2019-10-16T13:11:42Z,MERGED,True,6,17,13,https://github.com/zack-vii,Build: added debian stretch,3,[],https://github.com/MDSplus/mdsplus/pull/1826,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1826#issuecomment-542411835,added debian stretch 64bit and split debian wheezy,once both pr are committed we could remove the debian_wheeze opts and job,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1827,2019-10-15T21:21:29Z,2019-10-16T13:11:20Z,2019-10-16T13:11:25Z,MERGED,True,60,41,6,https://github.com/zack-vii,Build: added debian stretch stable,3,[],https://github.com/MDSplus/mdsplus/pull/1827,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1827,fixes for python post-installer and stretch,fixes for python post-installer and stretch,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1827,2019-10-15T21:21:29Z,2019-10-16T13:11:20Z,2019-10-16T13:11:25Z,MERGED,True,60,41,6,https://github.com/zack-vii,Build: added debian stretch stable,3,[],https://github.com/MDSplus/mdsplus/pull/1827,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1827#issuecomment-542411464,fixes for python post-installer and stretch,"the jenkins job should be updated after merge
in job lists replace 'debian_wheezy' with 'debian7-32,debian7-64,debian9-64'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1830,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829","A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-544941843,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829","Yep, xd.ref was missing from the the arglist. I just added it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/tfredian,3,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-544946797,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829","Hmmm,... this needs some testing. I tried doing a part_name method on a device and it segfaulted.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-544966077,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829",I fixed it today but did not get the chance to commit. will do so in an hour or so,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545000769,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829","oops... I was working on the fix at the same time. In trying to test this with Tree('subtree',-1).A14.INPUT_1.doMethod('part_name')
I found some other unexpected results. I'm not sure if the original TreeDoMethod worked with things like part_name but the existing one does not. The part_name method for most of the C based devices uses StrCopyDx which doesn't support an xd for the output. It may not be worth fixing this issue. Not sure how the original part name strings are generated for C devices.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545011720,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829","no worries, I just had to do a quick fix so a colleague could use mdsplus to do some test shots. my doMethod

```python
         arglist=[self.ctx]
         xd=_dsc.descriptor_xd()
        argsobj = [_scr.Int32(self.nid),_scr.String(method),None]
         argsobj+= list(map(_dat.Data,args))
         arglist+= list(map(_dat.Data.byref,argsobj))
        arglist[2] = _C.Int32(len(args))
        arglist+= [xd.ref]
        _exc.checkStatus(_TreeShr._TreeDoMethodA(*arglist))
         return xd._setTree(self.tree).value
```
edited",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/tfredian,7,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545012362,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829",The original part name code is calling _TreeDoMethod and passes a descriptor_d for the answer so that is still working. Not sure we need to change things for a python doMethod() implementation but I'm not entirely sure why the TreeDoMethodA routines stick the status in the output xd since methods should be able to load an answer in the output xd. The routine itself returns the status so if the status is ok the method implementation is responsible for loading the output xd.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545013162,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829",it was so it can be used for amy method. returning mdsplus objects. not only status,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545013650,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829",I have to cjeck in _c.Int32 should be _scr.Int32,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545016433,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829",I updated the code,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545026377,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829",it only converst status into xd for c methods as thatvwa the only thing they returned sobfar. we could change that if required. the xd was maily meant for python methods,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/tfredian,12,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545027038,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829","You update the code where??? This PR only has commits from me and it seems to work. I only tested it with part_name which uncovered 1) the part name code doesn't work with an xd output and 2) the _TreeDoMethodA implementation overwrites anything put in the xd with the status return of the method call. If I change the macro used by C devices to use MdsCopyDxXd instead of StrCopyDx the contents of the xd in _TreeDoMethodA does contain the string but that immediately gets overwritten with a dtype_long with the status return. I have not tested the handling of args with the _TreeDoMethodA call. Your suggested code in the comment above will not work as _TreeDoMethodA expects to be called with ctx, desc(nid),desc(method),len(nargs),pointer-to-array-descr-ptrs,xd.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/tfredian,13,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545028420,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829","As I said it might not be worth ""fixing"". I suspect there won't be many new C devices implemented if any and I think the only methods in existing C device that returned data was part_name and GetNci is using _TreeDoMethod and passing a descriptor_d for the output and works.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1830,2019-10-21T18:42:40Z,2019-10-22T15:47:59Z,2019-10-22T15:51:07Z,MERGED,True,10,5,1,https://github.com/tfredian,Fix: repair python TreeNode.doMethod() method,3,['DO NOT MERGE'],https://github.com/MDSplus/mdsplus/pull/1830,https://github.com/zack-vii,14,https://github.com/MDSplus/mdsplus/pull/1830#issuecomment-545029096,"A change to the python TreeNode implementation broke the doMethod
method. This should fix #1829",we should chsnge the c methods part of TreeDoMethodA to leave xd untouched then. and return status instead if status not ok. basically treat it like py and tdi methods,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1831,2019-10-21T19:16:27Z,2019-10-22T12:27:51Z,2019-10-22T12:27:51Z,MERGED,True,13,0,1,https://github.com/tfredian,Feature: Add python TreeNode.tcl() method,2,[],https://github.com/MDSplus/mdsplus/pull/1831,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1831,"Add tcl method to TreeNode which uses the TreeNode as the current
default node before executing the command.","Add tcl method to TreeNode which uses the TreeNode as the current
default node before executing the command.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1831,2019-10-21T19:16:27Z,2019-10-22T12:27:51Z,2019-10-22T12:27:51Z,MERGED,True,13,0,1,https://github.com/tfredian,Feature: Add python TreeNode.tcl() method,2,[],https://github.com/MDSplus/mdsplus/pull/1831,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1831#issuecomment-544937738,"Add tcl method to TreeNode which uses the TreeNode as the current
default node before executing the command.",thx,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1832,2019-10-22T16:05:36Z,2019-10-22T19:27:33Z,2019-10-31T23:27:02Z,MERGED,True,1,10,1,https://github.com/zack-vii,Fix: assume propper c method,1,[],https://github.com/MDSplus/mdsplus/pull/1832,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1832,Return status as status and leave out_ptr untouched,Return status as status and leave out_ptr untouched,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1832,2019-10-22T16:05:36Z,2019-10-22T19:27:33Z,2019-10-31T23:27:02Z,MERGED,True,1,10,1,https://github.com/zack-vii,Fix: assume propper c method,1,[],https://github.com/MDSplus/mdsplus/pull/1832,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1832#issuecomment-545102087,Return status as status and leave out_ptr untouched,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1833,2019-10-22T20:20:54Z,2019-10-23T15:14:16Z,2019-10-23T15:14:16Z,MERGED,True,12,2,5,https://github.com/tfredian,Fix: Allow py doMethod('part_name') on C devices,2,[],https://github.com/MDSplus/mdsplus/pull/1833,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1833,"The  C based devices expected a CLASS_D descriptor for
the output of the ""part_name"" method. This change will
allow the method to output to either a CLASS_D or a CLASS_XD
descriptor.
With this change one can do things like:
partname=devicenode.doMethod('part_name')
This change also adds some tests for the doMethod('part_name') and
getnci(node,'original_part_name') with C devices.","The  C based devices expected a CLASS_D descriptor for
the output of the ""part_name"" method. This change will
allow the method to output to either a CLASS_D or a CLASS_XD
descriptor.
With this change one can do things like:
partname=devicenode.doMethod('part_name')
This change also adds some tests for the doMethod('part_name') and
getnci(node,'original_part_name') with C devices.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1834,2019-10-24T19:46:09Z,2019-10-24T20:57:18Z,2019-10-24T20:57:23Z,MERGED,True,17,6,3,https://github.com/zack-vii,Fix: jtraverser2 had issues with plotting signals,2,[],https://github.com/MDSplus/mdsplus/pull/1834,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1834,fixes plotting of segmented nodes and scales of individual segments using $VALUE,fixes plotting of segmented nodes and scales of individual segments using $VALUE,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1835,2019-10-24T20:23:53Z,2019-10-24T22:02:10Z,2019-10-24T22:02:10Z,MERGED,True,17,17,14,https://github.com/santorofer,Fix: Initializing the xds with EMPTY_XD,1,[],https://github.com/MDSplus/mdsplus/pull/1835,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1835,"Several Tdishr code needed to have xds sig[], uni[] and dat[] initialized. This should fix an issue that we saw when using CULL().","Several Tdishr code needed to have xds sig[], uni[] and dat[] initialized. This should fix an issue that we saw when using CULL().",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1836,2019-10-24T20:56:38Z,2019-10-28T13:15:06Z,2019-10-31T23:26:59Z,MERGED,True,4,3,1,https://github.com/zack-vii,Build: updated updatepkg script to use same fc version as bootstrap a…,1,[],https://github.com/MDSplus/mdsplus/pull/1836,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1836,In case @GabrieleManduchi is not quite done yet with his  MARTe2 streaming PR.,In case @GabrieleManduchi is not quite done yet with his  MARTe2 streaming PR.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1836,2019-10-24T20:56:38Z,2019-10-28T13:15:06Z,2019-10-31T23:26:59Z,MERGED,True,4,3,1,https://github.com/zack-vii,Build: updated updatepkg script to use same fc version as bootstrap a…,1,[],https://github.com/MDSplus/mdsplus/pull/1836,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1836#issuecomment-546108514,In case @GabrieleManduchi is not quite done yet with his  MARTe2 streaming PR.,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1837,2019-10-24T21:14:50Z,2019-10-24T23:25:23Z,2019-10-24T23:25:28Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: plot position when plotting SegmentScale,1,[],https://github.com/MDSplus/mdsplus/pull/1837,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1837,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1837,2019-10-24T21:14:50Z,2019-10-24T23:25:23Z,2019-10-24T23:25:28Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: plot position when plotting SegmentScale,1,[],https://github.com/MDSplus/mdsplus/pull/1837,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/1837#issuecomment-546130019,,"Hey Timo,
What does the new paramter to ""GraphPanel.newPlot"" do? I mean:
JOptionPane.getRootFrame()",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1837,2019-10-24T21:14:50Z,2019-10-24T23:25:23Z,2019-10-24T23:25:28Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: plot position when plotting SegmentScale,1,[],https://github.com/MDSplus/mdsplus/pull/1837,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1837#issuecomment-546131182,,it returns the reference to the parentin frame. to the plotting routine this will mean it opens the window near the caller window instead centered of the currently acrive desktop. basically it prevents the avtive area from jumping around.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1838,2019-10-25T00:17:32Z,2019-10-25T15:49:37Z,2019-10-25T15:49:53Z,MERGED,True,1,1,1,https://github.com/zack-vii,Build: re-include debian_wheezy for special JDK_DIR,1,[],https://github.com/MDSplus/mdsplus/pull/1838,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1838,fixes debian_wheezy packaging issue,fixes debian_wheezy packaging issue,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1839,2019-10-25T10:02:47Z,2019-10-25T15:23:12Z,2019-11-25T10:18:56Z,MERGED,True,14781,1797,51,https://github.com/GabrieleManduchi,Gm marte2 streaming,66,[],https://github.com/MDSplus/mdsplus/pull/1839,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1839,"A bunch of new MDSplus devices for MARTe2 integration
Added also Oscilloscope mode in streaming framework","A bunch of new MDSplus devices for MARTe2 integration
Added also Oscilloscope mode in streaming framework",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1840,2019-10-29T15:25:13Z,2019-10-31T22:11:05Z,2019-10-31T22:11:14Z,MERGED,True,11,5,3,https://github.com/zack-vii, Fix: properly skip progression of loop in OperateF/Cmean and OperateF/Cfun,2,[],https://github.com/MDSplus/mdsplus/pull/1840,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1840,"possibly added from windows. be careful with chmod x
scripts marked executable without !# (e.g. #!/usr/bin/python)


It does not seem to happen too often but in case
CvtConvertFloat(pid,dtype,&val,DTYPE_NATIVE_DOUBLE,0)
would have failed during mean or fun type mask3 functions
result would override roprand.","possibly added from windows. be careful with chmod x
scripts marked executable without !# (e.g. #!/usr/bin/python)


It does not seem to happen too often but in case
CvtConvertFloat(pid,dtype,&val,DTYPE_NATIVE_DOUBLE,0)
would have failed during mean or fun type mask3 functions
result would override roprand.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1845,2019-11-05T14:43:59Z,2019-11-12T14:41:36Z,2019-11-26T21:53:01Z,MERGED,True,5,2,1,https://github.com/zack-vii,Feature: get segments limits as expression via tdi's GetSegmentLimits,1,[],https://github.com/MDSplus/mdsplus/pull/1845,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1845,"since you can put expressions as start and end you shouldbe able to read them.
this change should honor old bahaviour and is only active if extra args are provided","since you can put expressions as start and end you shouldbe able to read them.
this change should honor old bahaviour and is only active if extra args are provided",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1846,2019-11-06T15:48:40Z,2019-11-08T13:49:39Z,2019-11-26T21:51:07Z,MERGED,True,10,2,2,https://github.com/zack-vii,Fix: trunc files when doing new on MDS_IO_OPEN_ONE,2,[],https://github.com/MDSplus/mdsplus/pull/1846,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1846,"if you did create pules or edit tree/new, the treefiles would not get truncated but hold the old data if the file existed.","if you did create pules or edit tree/new, the treefiles would not get truncated but hold the old data if the file existed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1846,2019-11-06T15:48:40Z,2019-11-08T13:49:39Z,2019-11-26T21:51:07Z,MERGED,True,10,2,2,https://github.com/zack-vii,Fix: trunc files when doing new on MDS_IO_OPEN_ONE,2,[],https://github.com/MDSplus/mdsplus/pull/1846,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1846#issuecomment-551654083,"if you did create pules or edit tree/new, the treefiles would not get truncated but hold the old data if the file existed.",was justva typo in the test tgat did not matter under linux.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1846,2019-11-06T15:48:40Z,2019-11-08T13:49:39Z,2019-11-26T21:51:07Z,MERGED,True,10,2,2,https://github.com/zack-vii,Fix: trunc files when doing new on MDS_IO_OPEN_ONE,2,[],https://github.com/MDSplus/mdsplus/pull/1846,https://github.com/merlea,3,https://github.com/MDSplus/mdsplus/pull/1846#issuecomment-552522838,"if you did create pules or edit tree/new, the treefiles would not get truncated but hold the old data if the file existed.","Hello,
Thanks for the fix. It would be nice to see this make it in stable too, especially for applications within IMAS.
Best,
Antoine.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1848,2019-11-11T10:58:35Z,2019-11-11T11:52:58Z,2019-11-11T11:52:58Z,MERGED,True,32,13,4,https://github.com/zack-vii,Feature: allow to set default resample mode at runtime,4,[],https://github.com/MDSplus/mdsplus/pull/1848,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1848,"removed the once from get_default allowing updates to default_mode
added _resample_mode to SetTimeContext for an easy switch
allows abbreviations for resample mode, e.g. 'm' is sufficient for minmax","removed the once from get_default allowing updates to default_mode
added _resample_mode to SetTimeContext for an easy switch
allows abbreviations for resample mode, e.g. 'm' is sufficient for minmax",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1849,2019-11-11T11:45:26Z,2019-11-20T17:36:55Z,2019-11-26T21:50:46Z,MERGED,True,6,11,1,https://github.com/zack-vii,Build: replaced default-jre with java-runtime and postinstall fixups,4,[],https://github.com/MDSplus/mdsplus/pull/1849,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1849,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1850,2019-11-12T10:01:51Z,2019-11-12T11:09:52Z,2019-11-26T21:50:43Z,MERGED,True,9,7,1,https://github.com/zack-vii,Fix: avoid statics in XTreeDefaultResample,1,[],https://github.com/MDSplus/mdsplus/pull/1850,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1850,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1852,2019-11-12T14:37:30Z,2019-11-13T13:46:26Z,2019-11-13T13:46:26Z,MERGED,True,10,2,2,https://github.com/tfredian,Fix: trunc files when doing new on MDS_IO_OPEN_ONE (#1846),1,[],https://github.com/MDSplus/mdsplus/pull/1852,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1852,"Fix: trunc files when doing new on MDS_IO_OPEN_ONE


Tests: test the O_TRUNC on new","Fix: trunc files when doing new on MDS_IO_OPEN_ONE


Tests: test the O_TRUNC on new",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1852,2019-11-12T14:37:30Z,2019-11-13T13:46:26Z,2019-11-13T13:46:26Z,MERGED,True,10,2,2,https://github.com/tfredian,Fix: trunc files when doing new on MDS_IO_OPEN_ONE (#1846),1,[],https://github.com/MDSplus/mdsplus/pull/1852,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1852#issuecomment-553295517,"Fix: trunc files when doing new on MDS_IO_OPEN_ONE


Tests: test the O_TRUNC on new",I would approve it but self-approved ?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1854,2019-11-13T10:51:06Z,2019-11-13T13:32:31Z,2019-11-25T10:19:01Z,MERGED,True,117,135,4,https://github.com/GabrieleManduchi,Gm threadsafe compile,4,[],https://github.com/MDSplus/mdsplus/pull/1854,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1854,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1855,2019-11-15T13:56:54Z,2019-11-15T15:47:07Z,2019-11-25T10:18:59Z,MERGED,True,4762,5207,703,https://github.com/GabrieleManduchi,Feature:Added updateSegment VIs and Timestamped segment support VIs,2,[],https://github.com/MDSplus/mdsplus/pull/1855,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1855,"Added VIs fior beginTimestampedSegment, putTimestampedSegment, updateSegment","Added VIs fior beginTimestampedSegment, putTimestampedSegment, updateSegment",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1857,2019-11-22T07:37:06Z,2019-11-26T16:33:13Z,2020-02-08T00:14:56Z,MERGED,True,4680,493,91,https://github.com/GabrieleManduchi,Gm java mdsobjects tests,21,[],https://github.com/MDSplus/mdsplus/pull/1857,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1857,"Test suited added to java mdsobjects and integrated in make
Basically the same tests performed in c++ mdsobjects have been replicaed in java.
Of course this highlighted several bugs in the original java library that have been fixed now.","Test suited added to java mdsobjects and integrated in make
Basically the same tests performed in c++ mdsobjects have been replicaed in java.
Of course this highlighted several bugs in the original java library that have been fixed now.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1857,2019-11-22T07:37:06Z,2019-11-26T16:33:13Z,2020-02-08T00:14:56Z,MERGED,True,4680,493,91,https://github.com/GabrieleManduchi,Gm java mdsobjects tests,21,[],https://github.com/MDSplus/mdsplus/pull/1857,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1857#issuecomment-557519586,"Test suited added to java mdsobjects and integrated in make
Basically the same tests performed in c++ mdsobjects have been replicaed in java.
Of course this highlighted several bugs in the original java library that have been fixed now.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1858,2019-11-25T20:09:23Z,2019-11-26T21:15:00Z,2019-11-26T21:50:34Z,CLOSED,False,711,492,10,https://github.com/zack-vii,Feature: added TreeXNciSegments,14,[],https://github.com/MDSplus/mdsplus/pull/1858,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1858,"added XNciSegment support to treeshr
segment related _Tree*(dbid,nid,...) methods have now  _TreeXNci*(dbid,nid,xnci...) representations.
cleanup and compress should handle them correctly due teo copy_named_attributes fixup
added test's  to tditest","added XNciSegment support to treeshr
segment related _Tree*(dbid,nid,...) methods have now  _TreeXNci*(dbid,nid,xnci...) representations.
cleanup and compress should handle them correctly due teo copy_named_attributes fixup
added test's  to tditest",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1858,2019-11-25T20:09:23Z,2019-11-26T21:15:00Z,2019-11-26T21:50:34Z,CLOSED,False,711,492,10,https://github.com/zack-vii,Feature: added TreeXNciSegments,14,[],https://github.com/MDSplus/mdsplus/pull/1858,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1858#issuecomment-558819978,"added XNciSegment support to treeshr
segment related _Tree*(dbid,nid,...) methods have now  _TreeXNci*(dbid,nid,xnci...) representations.
cleanup and compress should handle them correctly due teo copy_named_attributes fixup
added test's  to tditest",closed in favor of #1861,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1859,2019-11-25T22:35:10Z,2019-11-26T12:55:47Z,2019-11-26T21:50:37Z,MERGED,True,1,1,1,https://github.com/zack-vii,Build: re-include debian_wheezy for special JDK_DIR (#1838),1,[],https://github.com/MDSplus/mdsplus/pull/1859,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1859,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1860,2019-11-26T13:12:16Z,2019-11-26T14:46:49Z,2019-11-26T14:46:49Z,MERGED,True,30976,16399,934,https://github.com/tfredian,Feature: Promote stable branch to current alpha,51,[],https://github.com/MDSplus/mdsplus/pull/1860,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1860,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1861,2019-11-26T15:55:43Z,2019-11-26T21:11:44Z,2019-11-26T21:50:32Z,MERGED,True,3437,2698,54,https://github.com/zack-vii,Feature: Clean version of TreeSegments.c after XNci feature,21,[],https://github.com/MDSplus/mdsplus/pull/1861,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1861,"needs some bugfix, this is just to broadband compiler warnings that may help to track down the issues","needs some bugfix, this is just to broadband compiler warnings that may help to track down the issues",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1861,2019-11-26T15:55:43Z,2019-11-26T21:11:44Z,2019-11-26T21:50:32Z,MERGED,True,3437,2698,54,https://github.com/zack-vii,Feature: Clean version of TreeSegments.c after XNci feature,21,[],https://github.com/MDSplus/mdsplus/pull/1861,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1861#issuecomment-558801616,"needs some bugfix, this is just to broadband compiler warnings that may help to track down the issues",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1862,2019-11-27T10:16:52Z,2019-12-06T00:58:23Z,2020-02-08T00:12:53Z,CLOSED,False,2,1,1,https://github.com/zack-vii,Fix: Call.setArguments,1,[],https://github.com/MDSplus/mdsplus/pull/1862,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1862,did not change arguments,did not change arguments,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1862,2019-11-27T10:16:52Z,2019-12-06T00:58:23Z,2020-02-08T00:12:53Z,CLOSED,False,2,1,1,https://github.com/zack-vii,Fix: Call.setArguments,1,[],https://github.com/MDSplus/mdsplus/pull/1862,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1862#issuecomment-562385638,did not change arguments,included in #1871,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1863,2019-11-27T15:29:19Z,2019-12-03T10:00:14Z,2019-12-03T10:00:14Z,MERGED,True,137,131,2,https://github.com/tfredian,Fix: TCL DO/METHOD /IF option problem and TCL HELP improvements,2,['test required'],https://github.com/MDSplus/mdsplus/pull/1863,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1863,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1864,2019-11-29T12:10:54Z,2019-12-06T11:20:32Z,2019-12-13T12:43:24Z,CLOSED,False,1759,2036,100,https://github.com/zack-vii,Feature: mdsplus-api without JavaMdsLib,27,[],https://github.com/MDSplus/mdsplus/pull/1864,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1864,"Inspired by issue #1538 i removed the jni entirely and replaced its purpose with ""mdspi -P tunnel""
In the process several memcheck and helgrind issues were found and fixed.
TODO: fix lock-order issue between tdivar and tdicompile locks
http://jenkins2.mdsplus.org/job/fc25/4521/
TODO2: javamds,java/mdsobjects MdsTreeTest and MdsTreeNodeTest have memory issies, e.g. Tree does not free Dbid","Inspired by issue #1538 i removed the jni entirely and replaced its purpose with ""mdspi -P tunnel""
In the process several memcheck and helgrind issues were found and fixed.
TODO: fix lock-order issue between tdivar and tdicompile locks
http://jenkins2.mdsplus.org/job/fc25/4521/
TODO2: javamds,java/mdsobjects MdsTreeTest and MdsTreeNodeTest have memory issies, e.g. Tree does not free Dbid",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1864,2019-11-29T12:10:54Z,2019-12-06T11:20:32Z,2019-12-13T12:43:24Z,CLOSED,False,1759,2036,100,https://github.com/zack-vii,Feature: mdsplus-api without JavaMdsLib,27,[],https://github.com/MDSplus/mdsplus/pull/1864,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/1864#issuecomment-562057587,"Inspired by issue #1538 i removed the jni entirely and replaced its purpose with ""mdspi -P tunnel""
In the process several memcheck and helgrind issues were found and fixed.
TODO: fix lock-order issue between tdivar and tdicompile locks
http://jenkins2.mdsplus.org/job/fc25/4521/
TODO2: javamds,java/mdsobjects MdsTreeTest and MdsTreeNodeTest have memory issies, e.g. Tree does not free Dbid","Hi Timo! If you look at your mdsplus fork you should have a pull request 12 with the leak fixed
I'm not in the review list so I will leave it to someone else :-)
cheers",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1864,2019-11-29T12:10:54Z,2019-12-06T11:20:32Z,2019-12-13T12:43:24Z,CLOSED,False,1759,2036,100,https://github.com/zack-vii,Feature: mdsplus-api without JavaMdsLib,27,[],https://github.com/MDSplus/mdsplus/pull/1864,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1864#issuecomment-562535437,"Inspired by issue #1538 i removed the jni entirely and replaced its purpose with ""mdspi -P tunnel""
In the process several memcheck and helgrind issues were found and fixed.
TODO: fix lock-order issue between tdivar and tdicompile locks
http://jenkins2.mdsplus.org/job/fc25/4521/
TODO2: javamds,java/mdsobjects MdsTreeTest and MdsTreeNodeTest have memory issies, e.g. Tree does not free Dbid",megerd as part of RP #1866,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1866,2019-12-02T17:04:15Z,2019-12-06T09:54:19Z,2019-12-13T12:43:22Z,MERGED,True,2766,4549,112,https://github.com/zack-vii,Feature: fixed TdiVar/TdiCompile lockissue by making them threadsafe&reentrant,38,[],https://github.com/MDSplus/mdsplus/pull/1866,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1866,"refactor TdiLex: removed unused vars and embedded globals


removed lock from TdiCompile


made TdiVar lock reentrant


optimized TdiHash table



This should fix the remaining helgrind issue in PR #1864




side effect: TdiCompile in now threadsafe and can be operated multithreaded w/o lock




TdiCompile should be way faster.","refactor TdiLex: removed unused vars and embedded globals


removed lock from TdiCompile


made TdiVar lock reentrant


optimized TdiHash table



This should fix the remaining helgrind issue in PR #1864




side effect: TdiCompile in now threadsafe and can be operated multithreaded w/o lock




TdiCompile should be way faster.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1868,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s","performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-561564287,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",includes #1866 and #1864,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-562176992,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s","Hi Timo, I was wondering, why did you change from using STATICdef like:
#define STATIC_ROUTINE static
to just use: static when defining the static internal routines?
I guess is also an improvement in compilation?
Cheers",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-562537304,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s","no there is not but as far as i know the STATICdef predates the whole threadstatic stuff and is obsolete. its just easier to understand the code if the default decorators are used e.g. STATIC_CONSTANT: one would assume static const but is static only .. however you cannot change it to static const as it is also used at places where you dont want const
stuff like that",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-562537473,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",I rebased it after the merge of pr #1866,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-562550861,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-562556409,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-562570290,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s","Is this correct in ScopeUtilities?
*dMin = xMin ? to_doublex(xMin->pointer,xMin->dtype,-INFINITY,TRUE) : *sMin;
*dMax = xMax ? to_doublex(xMax->pointer,xMax->dtype,-INFINITY,TRUE) : *sMax;
both refer to -INFINITY",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-562588388,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",good find. i fixed that and the issue that failed the test. seemed as no that we can do more in parallel flows in underlying libs become a thing. I ran the treeUnitTest  in an endless loop for a while now and seems to work now.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-562588795,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",also i could rebase the RP #1871 on alpha so both PRs are independent.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-563936836,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",Could someone please review this pr?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-565702670,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",I broke it down into smaller chunks,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1868,2019-12-03T22:36:59Z,2019-12-17T20:57:39Z,2019-12-17T20:57:42Z,MERGED,True,1070,1315,80,https://github.com/zack-vii,Fix: fixed performance issues,11,[],https://github.com/MDSplus/mdsplus/pull/1868,https://github.com/joshStillerman,13,https://github.com/MDSplus/mdsplus/pull/1868#issuecomment-566184073,"performance of tdicompile increased

GET_TDITHREADSTATIC_P if costly so we pass the pointer to statics when we can.
LibResetVmZone and LibVmGet were slow
removed broken old code that is obviously not needed anymore (e.g. use_get_record_fun)
test case



time for i in `seq 1 100`; do tditest /git/mdsplus/tditest/testing/test-tdishr.tdi >/dev/null; done
before
real    0m10.142s
user    0m8.580s
sys     0m0.380s

after
real    0m8.115s
user    0m6.548s
sys     0m0.368s",I leave the reviewing of this to others....,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1870,2019-12-04T14:27:44Z,2019-12-04T15:57:49Z,2020-02-08T00:14:30Z,CLOSED,False,3,6,1,https://github.com/GabrieleManduchi,Fix:time context in ScopeUtilities,1,[],https://github.com/MDSplus/mdsplus/pull/1870,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1870,"Reset time context was called too early, in some cases before actually evaluating the signal","Reset time context was called too early, in some cases before actually evaluating the signal",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1870,2019-12-04T14:27:44Z,2019-12-04T15:57:49Z,2020-02-08T00:14:30Z,CLOSED,False,3,6,1,https://github.com/GabrieleManduchi,Fix:time context in ScopeUtilities,1,[],https://github.com/MDSplus/mdsplus/pull/1870,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1870#issuecomment-561708720,"Reset time context was called too early, in some cases before actually evaluating the signal","true...it was in the right place....I was misled by other factors, I close the PR",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1871,2019-12-06T00:54:16Z,2019-12-10T14:20:48Z,2019-12-10T14:20:52Z,MERGED,True,2628,1997,62,https://github.com/zack-vii,Fix: fixed the treectx flaws in javamds and updated java/tests,11,[],https://github.com/MDSplus/mdsplus/pull/1871,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1871,"jni will now use ctx whenever possible.
Tree open and close operation carefully handle ctx
memcheck is now satisfied.
fixed MDSplus.MdsConnectionTest's mdsip spawn
Addresses issues pointed out in #1538
Includes PR #1862","jni will now use ctx whenever possible.
Tree open and close operation carefully handle ctx
memcheck is now satisfied.
fixed MDSplus.MdsConnectionTest's mdsip spawn
Addresses issues pointed out in #1538
Includes PR #1862",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1871,2019-12-06T00:54:16Z,2019-12-10T14:20:48Z,2019-12-10T14:20:52Z,MERGED,True,2628,1997,62,https://github.com/zack-vii,Fix: fixed the treectx flaws in javamds and updated java/tests,11,[],https://github.com/MDSplus/mdsplus/pull/1871,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1871#issuecomment-563936535,"jni will now use ctx whenever possible.
Tree open and close operation carefully handle ctx
memcheck is now satisfied.
fixed MDSplus.MdsConnectionTest's mdsip spawn
Addresses issues pointed out in #1538
Includes PR #1862",Would you please review this pr?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1872,2019-12-09T14:37:50Z,2019-12-10T07:01:19Z,2020-02-08T00:14:32Z,MERGED,True,4,0,1,https://github.com/GabrieleManduchi,Fix:jScope event update,1,[],https://github.com/MDSplus/mdsplus/pull/1872,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1872,Make sure the number of poitnts does not overflow internal arrays,Make sure the number of poitnts does not overflow internal arrays,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1873,2019-12-10T12:02:30Z,2020-01-14T18:34:39Z,2020-01-14T18:34:40Z,CLOSED,False,327,0,1,https://github.com/seanalsop,MGT-DRAM device support.,41,"['feedback required', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1873,https://github.com/seanalsop,1,https://github.com/MDSplus/mdsplus/pull/1873,Added support for MGT-DRAM as an MDSplus device.,Added support for MGT-DRAM as an MDSplus device.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1873,2019-12-10T12:02:30Z,2020-01-14T18:34:39Z,2020-01-14T18:34:40Z,CLOSED,False,327,0,1,https://github.com/seanalsop,MGT-DRAM device support.,41,"['feedback required', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1873,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1873#issuecomment-564002246,Added support for MGT-DRAM as an MDSplus device.,Can one of the admins verify this patch?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1873,2019-12-10T12:02:30Z,2020-01-14T18:34:39Z,2020-01-14T18:34:40Z,CLOSED,False,327,0,1,https://github.com/seanalsop,MGT-DRAM device support.,41,"['feedback required', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1873,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1873#issuecomment-566813241,Added support for MGT-DRAM as an MDSplus device.,last but not least it could use a rebase,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1873,2019-12-10T12:02:30Z,2020-01-14T18:34:39Z,2020-01-14T18:34:40Z,CLOSED,False,327,0,1,https://github.com/seanalsop,MGT-DRAM device support.,41,"['feedback required', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1873,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1873#issuecomment-574312016,Added support for MGT-DRAM as an MDSplus device.,lack of feedback,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1874,2019-12-13T23:45:12Z,2019-12-18T16:01:03Z,2019-12-18T16:01:06Z,MERGED,True,25,14,2,https://github.com/zack-vii,Fix: python37 initializes threads already during Py_InitializeEx,2,[],https://github.com/MDSplus/mdsplus/pull/1874,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1874,"This PR deals with the new behaviour of python3.7 which initializes thread during Py_InitializeEx automatically. hence the check is true hence we dont save the ThreadState .. hence calling a python method wil not restore the correct GIL .. hence we run into a deadlock.
this fixes teh init order and conditioning to properly save the threadstate for all python version and both cases.. main is non/python, e.g. tditest, and main is python calling tdi calling python again.","This PR deals with the new behaviour of python3.7 which initializes thread during Py_InitializeEx automatically. hence the check is true hence we dont save the ThreadState .. hence calling a python method wil not restore the correct GIL .. hence we run into a deadlock.
this fixes teh init order and conditioning to properly save the threadstate for all python version and both cases.. main is non/python, e.g. tditest, and main is python calling tdi calling python again.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1874,2019-12-13T23:45:12Z,2019-12-18T16:01:03Z,2019-12-18T16:01:06Z,MERGED,True,25,14,2,https://github.com/zack-vii,Fix: python37 initializes threads already during Py_InitializeEx,2,[],https://github.com/MDSplus/mdsplus/pull/1874,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1874#issuecomment-566182571,"This PR deals with the new behaviour of python3.7 which initializes thread during Py_InitializeEx automatically. hence the check is true hence we dont save the ThreadState .. hence calling a python method wil not restore the correct GIL .. hence we run into a deadlock.
this fixes teh init order and conditioning to properly save the threadstate for all python version and both cases.. main is non/python, e.g. tditest, and main is python calling tdi calling python again.","This looks good, but a quick conversation / explanation would be helpful",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1874,2019-12-13T23:45:12Z,2019-12-18T16:01:03Z,2019-12-18T16:01:06Z,MERGED,True,25,14,2,https://github.com/zack-vii,Fix: python37 initializes threads already during Py_InitializeEx,2,[],https://github.com/MDSplus/mdsplus/pull/1874,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1874#issuecomment-566204903,"This PR deals with the new behaviour of python3.7 which initializes thread during Py_InitializeEx automatically. hence the check is true hence we dont save the ThreadState .. hence calling a python method wil not restore the correct GIL .. hence we run into a deadlock.
this fixes teh init order and conditioning to properly save the threadstate for all python version and both cases.. main is non/python, e.g. tditest, and main is python calling tdi calling python again.","This PR deals with the new behaviour of python3.7 which initializes thread during Py_InitializeEx automatically. hence the check is true hence we dont save the ThreadState .. hence calling a python method wil not restore the correct GIL .. hence we run into a deadlock.
this fixes teh init order and conditioning to properly save the threadstate for all python version and both cases.. main is non/python, e.g. tditest, and main is python calling tdi calling python again.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1875,2019-12-14T09:15:59Z,2019-12-18T09:36:50Z,2019-12-18T09:47:03Z,MERGED,True,90,114,5,https://github.com/zack-vii,Fix: nullpointer access in ScopeUtilities if no limits specified,7,[],https://github.com/MDSplus/mdsplus/pull/1875,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1875,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1875,2019-12-14T09:15:59Z,2019-12-18T09:36:50Z,2019-12-18T09:47:03Z,MERGED,True,90,114,5,https://github.com/zack-vii,Fix: nullpointer access in ScopeUtilities if no limits specified,7,[],https://github.com/MDSplus/mdsplus/pull/1875,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1875#issuecomment-566451669,,"Not sure that the use of int16_t in ScopeUtilities (line 662 old, 631 new)  is correct........",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1875,2019-12-14T09:15:59Z,2019-12-18T09:36:50Z,2019-12-18T09:47:03Z,MERGED,True,90,114,5,https://github.com/zack-vii,Fix: nullpointer access in ScopeUtilities if no limits specified,7,[],https://github.com/MDSplus/mdsplus/pull/1875,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1875#issuecomment-566457544,,"good find, fixed it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1875,2019-12-14T09:15:59Z,2019-12-18T09:36:50Z,2019-12-18T09:47:03Z,MERGED,True,90,114,5,https://github.com/zack-vii,Fix: nullpointer access in ScopeUtilities if no limits specified,7,[],https://github.com/MDSplus/mdsplus/pull/1875,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1875#issuecomment-566463288,,"Another thing: lines
*(int *)&retArr[idx] = yLabel->length;
swap4(&retArr[idx]);
are replaced by
SWAP32(&retArr[idx],&yLabel->length);
but  it seems to me that  yLabel->length is a short, and in the replacement it is considered as long",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1875,2019-12-14T09:15:59Z,2019-12-18T09:36:50Z,2019-12-18T09:47:03Z,MERGED,True,90,114,5,https://github.com/zack-vii,Fix: nullpointer access in ScopeUtilities if no limits specified,7,[],https://github.com/MDSplus/mdsplus/pull/1875,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1875#issuecomment-566464857,,This is just like in the original code. Since length is unsigned but java can only handle signed length is written out as int. Thus the full int has to be swapped for java is bigendian,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1875,2019-12-14T09:15:59Z,2019-12-18T09:36:50Z,2019-12-18T09:47:03Z,MERGED,True,90,114,5,https://github.com/zack-vii,Fix: nullpointer access in ScopeUtilities if no limits specified,7,[],https://github.com/MDSplus/mdsplus/pull/1875,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1875#issuecomment-566539799,,"ylabel->length is a short. I agree that we possibly need swapping but instruction  SWAP32(&retArr[idx],&yLabel->length); copies (possibly swapped) bytes that do not belong to yLabel->length (2 bytes).
Am I missing anything?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1875,2019-12-14T09:15:59Z,2019-12-18T09:36:50Z,2019-12-18T09:47:03Z,MERGED,True,90,114,5,https://github.com/zack-vii,Fix: nullpointer access in ScopeUtilities if no limits specified,7,[],https://github.com/MDSplus/mdsplus/pull/1875,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/1875#issuecomment-566916924,,"Seems ok now, but just one last question: why do you mask length field (short) with 0xffff?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1875,2019-12-14T09:15:59Z,2019-12-18T09:36:50Z,2019-12-18T09:47:03Z,MERGED,True,90,114,5,https://github.com/zack-vii,Fix: nullpointer access in ScopeUtilities if no limits specified,7,[],https://github.com/MDSplus/mdsplus/pull/1875,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1875#issuecomment-566933716,,to make sure its unsigned. its also doing the cast to int. i am not sure if this is necessary but it is a more obvious variant of casting to int that tells you: 'this is an unsigned short'.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1876,2019-12-14T09:35:28Z,2019-12-18T16:09:52Z,2019-12-18T16:13:01Z,MERGED,True,63,106,8,https://github.com/zack-vii,Fix: race condition in MDS_IO_(UN)LOCK,5,[],https://github.com/MDSplus/mdsplus/pull/1876,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1876,added easier constructor for recursive locks,added easier constructor for recursive locks,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1876,2019-12-14T09:35:28Z,2019-12-18T16:09:52Z,2019-12-18T16:13:01Z,MERGED,True,63,106,8,https://github.com/zack-vii,Fix: race condition in MDS_IO_(UN)LOCK,5,[],https://github.com/MDSplus/mdsplus/pull/1876,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1876#issuecomment-566181559,added easier constructor for recursive locks,Can we talk about this one also ?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1876,2019-12-14T09:35:28Z,2019-12-18T16:09:52Z,2019-12-18T16:13:01Z,MERGED,True,63,106,8,https://github.com/zack-vii,Fix: race condition in MDS_IO_(UN)LOCK,5,[],https://github.com/MDSplus/mdsplus/pull/1876,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1876#issuecomment-566205155,added easier constructor for recursive locks,the lock has to guard the MDS_IO_LOCK call. never seemed to be a problem. but the removal of the tdicompile lock made this flaw apparent,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1877,2019-12-14T09:36:39Z,2019-12-18T16:12:34Z,2019-12-18T16:12:38Z,MERGED,True,102,0,3,https://github.com/zack-vii,Tests: added coz-profiler header,2,[],https://github.com/MDSplus/mdsplus/pull/1877,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1877,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1877,2019-12-14T09:36:39Z,2019-12-18T16:12:34Z,2019-12-18T16:12:38Z,MERGED,True,102,0,3,https://github.com/zack-vii,Tests: added coz-profiler header,2,[],https://github.com/MDSplus/mdsplus/pull/1877,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1877#issuecomment-566180585,,I have no clue what this is about.  Never heard of 'coz',True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1877,2019-12-14T09:36:39Z,2019-12-18T16:12:34Z,2019-12-18T16:12:38Z,MERGED,True,102,0,3,https://github.com/zack-vii,Tests: added coz-profiler header,2,[],https://github.com/MDSplus/mdsplus/pull/1877,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1877#issuecomment-566206115,,"This profiler i use to detect the performance issues.
https://www.youtube.com/watch?v=r-TLSBdHe1A
https://www.youtube.com/watch?v=jE0V-p1odPg",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1878,2019-12-14T09:42:22Z,2019-12-16T19:25:13Z,2019-12-16T19:25:17Z,MERGED,True,23,25,2,https://github.com/zack-vii,Fix: improved performance of critical function Lib*Vm routines,3,[],https://github.com/MDSplus/mdsplus/pull/1878,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1878,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1879,2019-12-14T10:19:19Z,2019-12-16T19:24:51Z,2019-12-16T19:24:55Z,MERGED,True,5,5,2,https://github.com/zack-vii,Build: if debug is disabled dont do debug; no -g,1,[],https://github.com/MDSplus/mdsplus/pull/1879,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1879,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1880,2019-12-15T00:41:39Z,2019-12-17T16:41:34Z,2019-12-17T16:41:39Z,MERGED,True,69,4690,109,https://github.com/zack-vii,Build: removed exports and def from source.,2,[],https://github.com/MDSplus/mdsplus/pull/1880,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1880,build them with gendef on-the-fly from dll when needed in mdsobjects/cpp instead,build them with gendef on-the-fly from dll when needed in mdsobjects/cpp instead,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1880,2019-12-15T00:41:39Z,2019-12-17T16:41:34Z,2019-12-17T16:41:39Z,MERGED,True,69,4690,109,https://github.com/zack-vii,Build: removed exports and def from source.,2,[],https://github.com/MDSplus/mdsplus/pull/1880,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1880#issuecomment-566207355,build them with gendef on-the-fly from dll when needed in mdsobjects/cpp instead,"get rid of the def files that are used for visual studio and generate them during build from the dlls via gendef. this avoids mysterious errors due to outdated def files.
This PR may require a rebase after pr #1868 is merged",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1881,2019-12-15T15:44:41Z,2019-12-18T19:17:53Z,2019-12-18T19:17:57Z,MERGED,True,326,371,24,https://github.com/zack-vii,Fix: split pthread into logical sections,2,[],https://github.com/MDSplus/mdsplus/pull/1881,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1881,"pthread_port.h has become pretty big and some of teh stuff is only remotelly pthread related. it stated out as a port for pthread to get windows on board but extended into a general header for all kinds of stuff. this just splits it into its topics, condition, socket stuff pthread-stuff. his requires a rebase if the nci lock is merged","pthread_port.h has become pretty big and some of teh stuff is only remotelly pthread related. it stated out as a port for pthread to get windows on board but extended into a general header for all kinds of stuff. this just splits it into its topics, condition, socket stuff pthread-stuff. his requires a rebase if the nci lock is merged",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1882,2019-12-15T15:45:51Z,2019-12-16T19:25:34Z,2019-12-16T19:25:38Z,MERGED,True,95,101,2,https://github.com/zack-vii,Fix: removed unused old import and fixd intptr cast,2,[],https://github.com/MDSplus/mdsplus/pull/1882,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1882,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1883,2019-12-17T15:45:58Z,2019-12-18T09:47:39Z,2019-12-18T09:47:45Z,MERGED,True,6393,91,31,https://github.com/GabrieleManduchi,Gm marte2 streaming,1,[],https://github.com/MDSplus/mdsplus/pull/1883,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1883,MARTe2 devices updated to the latest version used in the meeting demo,MARTe2 devices updated to the latest version used in the meeting demo,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1883,2019-12-17T15:45:58Z,2019-12-18T09:47:39Z,2019-12-18T09:47:45Z,MERGED,True,6393,91,31,https://github.com/GabrieleManduchi,Gm marte2 streaming,1,[],https://github.com/MDSplus/mdsplus/pull/1883,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1883#issuecomment-566652281,MARTe2 devices updated to the latest version used in the meeting demo,could you rebase this branch please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1883,2019-12-17T15:45:58Z,2019-12-18T09:47:39Z,2019-12-18T09:47:45Z,MERGED,True,6393,91,31,https://github.com/GabrieleManduchi,Gm marte2 streaming,1,[],https://github.com/MDSplus/mdsplus/pull/1883,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1883#issuecomment-566658420,MARTe2 devices updated to the latest version used in the meeting demo,ported protections to 644,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1883,2019-12-17T15:45:58Z,2019-12-18T09:47:39Z,2019-12-18T09:47:45Z,MERGED,True,6393,91,31,https://github.com/GabrieleManduchi,Gm marte2 streaming,1,[],https://github.com/MDSplus/mdsplus/pull/1883,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1883#issuecomment-566666968,MARTe2 devices updated to the latest version used in the meeting demo,I rebased it (hard) turns out its just adding a few devices so its safe. @GabrieleManduchi please reset your local branch to this one or better to alpha once the pr is merged.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1883,2019-12-17T15:45:58Z,2019-12-18T09:47:39Z,2019-12-18T09:47:45Z,MERGED,True,6393,91,31,https://github.com/GabrieleManduchi,Gm marte2 streaming,1,[],https://github.com/MDSplus/mdsplus/pull/1883,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1883#issuecomment-566686830,MARTe2 devices updated to the latest version used in the meeting demo,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1884,2019-12-17T19:36:42Z,2019-12-18T18:03:07Z,2019-12-18T18:03:51Z,MERGED,True,46,40,17,https://github.com/zack-vii,Build: add debug information for alpha builds,12,[],https://github.com/MDSplus/mdsplus/pull/1884,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1884,"added -g to the compiler without breaking the logic of configure simply by using the
'--enable-debug=info' parameter if branch is alpha. worked locally but the jenkins test are not on branch alpha so.. its hard to test.
nonetheless changing the -O to -Og revealed more uninitialized compiler warnings
But then i had to drop -Og because some OS g++ did not support it.","added -g to the compiler without breaking the logic of configure simply by using the
'--enable-debug=info' parameter if branch is alpha. worked locally but the jenkins test are not on branch alpha so.. its hard to test.
nonetheless changing the -O to -Og revealed more uninitialized compiler warnings
But then i had to drop -Og because some OS g++ did not support it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1885,2019-12-17T21:04:33Z,2019-12-18T16:22:40Z,2019-12-18T16:22:44Z,MERGED,True,0,5,1,https://github.com/zack-vii,Fix: removed unused code in TreeOpen.c,1,[],https://github.com/MDSplus/mdsplus/pull/1885,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1885,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1886,2019-12-18T20:54:17Z,2019-12-20T21:14:46Z,2019-12-20T21:14:47Z,MERGED,True,105,0,1,https://github.com/WhoBrokeTheBuild,Adding basic InfluxDB historian device,4,[],https://github.com/MDSplus/mdsplus/pull/1886,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1886,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1887,2019-12-20T21:30:06Z,2019-12-26T21:15:27Z,2020-02-08T00:13:04Z,MERGED,True,22,18,1,https://github.com/joshStillerman,Fix:  Infinite loop in host_list_cleanup,1,[],https://github.com/MDSplus/mdsplus/pull/1887,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1887,"treeshr/RemoteAccess.c
host_list_cleanup  had a loop which checked on existing connections
in the case that the connection at the top of this list was not
the one it was looking for, the 'continue' statement caused the loop
iteration to complete without changing the loop boolean (host).
added code to move host to next element in list","treeshr/RemoteAccess.c
host_list_cleanup  had a loop which checked on existing connections
in the case that the connection at the top of this list was not
the one it was looking for, the 'continue' statement caused the loop
iteration to complete without changing the loop boolean (host).
added code to move host to next element in list",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1887,2019-12-20T21:30:06Z,2019-12-26T21:15:27Z,2020-02-08T00:13:04Z,MERGED,True,22,18,1,https://github.com/joshStillerman,Fix:  Infinite loop in host_list_cleanup,1,[],https://github.com/MDSplus/mdsplus/pull/1887,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1887#issuecomment-569071529,"treeshr/RemoteAccess.c
host_list_cleanup  had a loop which checked on existing connections
in the case that the connection at the top of this list was not
the one it was looking for, the 'continue' statement caused the loop
iteration to complete without changing the loop boolean (host).
added code to move host to next element in list",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1888,2019-12-21T09:59:16Z,2019-12-26T21:31:08Z,2019-12-26T21:31:18Z,MERGED,True,2,0,1,https://github.com/zack-vii,Fix: nullstring in python dev-by-zero exception,1,[],https://github.com/MDSplus/mdsplus/pull/1888,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1888,py(''),py(''),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1888,2019-12-21T09:59:16Z,2019-12-26T21:31:08Z,2019-12-26T21:31:18Z,MERGED,True,2,0,1,https://github.com/zack-vii,Fix: nullstring in python dev-by-zero exception,1,[],https://github.com/MDSplus/mdsplus/pull/1888,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1888#issuecomment-568502899,py(''),retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1890,2019-12-24T15:33:17Z,2019-12-26T19:15:27Z,2019-12-26T19:15:27Z,MERGED,True,2,0,2,https://github.com/tfredian,Fix: Add influxhistorian.py to htsdevices packaging,1,[],https://github.com/MDSplus/mdsplus/pull/1890,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1890,"Recent update added new file to a package but did not
updated expected package content file","Recent update added new file to a package but did not
updated expected package content file",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1891,2019-12-31T15:08:43Z,2020-01-01T00:02:15Z,2020-02-08T00:13:32Z,MERGED,True,6,0,1,https://github.com/joshStillerman,Docs: Add User survey to README,1,[],https://github.com/MDSplus/mdsplus/pull/1891,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1891,Adding a link to the user survey,Adding a link to the user survey,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1891,2019-12-31T15:08:43Z,2020-01-01T00:02:15Z,2020-02-08T00:13:32Z,MERGED,True,6,0,1,https://github.com/joshStillerman,Docs: Add User survey to README,1,[],https://github.com/MDSplus/mdsplus/pull/1891,https://github.com/tfredian,2,https://github.com/MDSplus/mdsplus/pull/1891#issuecomment-569986693,Adding a link to the user survey,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1893,2020-01-03T14:38:10Z,2020-01-07T16:34:03Z,2020-01-07T16:34:07Z,MERGED,True,35,29,4,https://github.com/zack-vii,Fix: mdsplus-api issues with mdsip/ssh,4,[],https://github.com/MDSplus/mdsplus/pull/1893,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1893,"connection to ssh did not work because default ssh port was not used
connection to hanging mdsip caused thread to deadlock, added timeout where appropriate","connection to ssh did not work because default ssh port was not used
connection to hanging mdsip caused thread to deadlock, added timeout where appropriate",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1894,2020-01-04T06:02:07Z,2020-01-07T16:27:22Z,2020-01-07T16:27:25Z,MERGED,True,49,5,3,https://github.com/zack-vii,Tests: enable debian9 memcheck,2,[],https://github.com/MDSplus/mdsplus/pull/1894,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1894,"since fc26 builds for both 64 and 32 bit memcheck takes quite long with little benefit. Detected extra issues are expected due to different python/java/libc versions and should be suppressed anyway.
Debian9 is a modern os that can test on 64 bit with a recent valgrind version.
Its much faster, i.e.  <20 min compared to >50 min on fc26.","since fc26 builds for both 64 and 32 bit memcheck takes quite long with little benefit. Detected extra issues are expected due to different python/java/libc versions and should be suppressed anyway.
Debian9 is a modern os that can test on 64 bit with a recent valgrind version.
Its much faster, i.e.  <20 min compared to >50 min on fc26.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1895,2020-01-04T06:11:57Z,2020-01-07T16:27:06Z,2020-01-07T16:28:03Z,MERGED,True,87,1,2,https://github.com/zack-vii,Tests: setup for python3.5 on debian9-64,2,[],https://github.com/MDSplus/mdsplus/pull/1895,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1895,#1894 for stable  ... conflict resolved by adding pyhton3.7 suppressions for fc30,#1894 for stable  ... conflict resolved by adding pyhton3.7 suppressions for fc30,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1896,2020-01-07T17:20:15Z,2020-01-08T17:32:40Z,2020-01-08T17:32:44Z,MERGED,True,134,157,4,https://github.com/zack-vii,Fix: MdsEvent locks - recursivity is not required,4,[],https://github.com/MDSplus/mdsplus/pull/1896,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1896,"MdsEvents and UdpEvents used recursive locks but there is no need for it.

replaced locks with faster regular mutexes and some clean up","MdsEvents and UdpEvents used recursive locks but there is no need for it.

replaced locks with faster regular mutexes and some clean up",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1897,2020-01-07T22:15:19Z,2020-01-22T17:54:08Z,2020-01-22T17:56:35Z,MERGED,True,765,786,45,https://github.com/zack-vii,Fix: mdsip issue with ThreadStatics - MDSplusThreadStatic,8,[],https://github.com/MDSplus/mdsplus/pull/1897,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1897,"combine all ThreadStatics in shared lib mdsshr so the thread state can be shared with child threads like in ProcessMessage, i.e. parent waits for Thread to finish before continuing (Thread is used to implements cancelation)","combine all ThreadStatics in shared lib mdsshr so the thread state can be shared with child threads like in ProcessMessage, i.e. parent waits for Thread to finish before continuing (Thread is used to implements cancelation)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1898,2020-01-07T22:27:41Z,2020-01-09T00:49:40Z,2020-01-09T00:49:45Z,MERGED,True,38,33,1,https://github.com/zack-vii,Fix: reduce number of calls to MdsShrGetThreadStatic (huge overhead),1,[],https://github.com/MDSplus/mdsplus/pull/1898,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1898,getting the ThreadStatic is expensive,getting the ThreadStatic is expensive,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1899,2020-01-08T13:12:27Z,2020-01-08T17:39:09Z,2020-01-08T17:39:14Z,MERGED,True,25,13,6,https://github.com/zack-vii,Build: debian build script for py3,4,[],https://github.com/MDSplus/mdsplus/pull/1899,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1899,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1900,2020-01-08T13:14:17Z,2020-01-08T17:19:49Z,2020-01-08T17:19:53Z,MERGED,True,24,12,5,https://github.com/zack-vii,Build: debian build script for py3 (stable),3,[],https://github.com/MDSplus/mdsplus/pull/1900,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1900,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1901,2020-01-08T14:58:03Z,2020-01-08T17:31:46Z,2020-01-08T17:32:12Z,MERGED,True,8,9,2,https://github.com/zack-vii,Fix: MdsException should not take char* as arg; possible leak,1,[],https://github.com/MDSplus/mdsplus/pull/1901,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1901,"fixes issue reported in
http://jenkins2.mdsplus.org/job/debian9-64/534/
c.f.
https://stackoverflow.com/questions/20575291/memory-leak-using-c-exceptions","fixes issue reported in
http://jenkins2.mdsplus.org/job/debian9-64/534/
c.f.
https://stackoverflow.com/questions/20575291/memory-leak-using-c-exceptions",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1903,2020-01-14T18:33:42Z,2020-01-17T17:00:30Z,2020-01-17T17:00:34Z,MERGED,True,139,127,2,https://github.com/zack-vii,Fix: TDI hostfile method can execute arbitrary code; cleanup,2,[],https://github.com/MDSplus/mdsplus/pull/1903,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1903,"increase security of mdsip:
TDIhostfile mode: may be exploited by manipulating the remote username
exit mdsip if setup is invalid; e.g. if no hostfile, become_user failes, TdiExecute not loaded, or tdi fuinction not found.","increase security of mdsip:
TDIhostfile mode: may be exploited by manipulating the remote username
exit mdsip if setup is invalid; e.g. if no hostfile, become_user failes, TdiExecute not loaded, or tdi fuinction not found.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1903,2020-01-14T18:33:42Z,2020-01-17T17:00:30Z,2020-01-17T17:00:34Z,MERGED,True,139,127,2,https://github.com/zack-vii,Fix: TDI hostfile method can execute arbitrary code; cleanup,2,[],https://github.com/MDSplus/mdsplus/pull/1903,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1903#issuecomment-575702765,"increase security of mdsip:
TDIhostfile mode: may be exploited by manipulating the remote username
exit mdsip if setup is invalid; e.g. if no hostfile, become_user failes, TdiExecute not loaded, or tdi fuinction not found.","the exploitation would send a username that is similar to this
"");public fun a(optional _a, optional _b){return(""root"");};a(""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1903,2020-01-14T18:33:42Z,2020-01-17T17:00:30Z,2020-01-17T17:00:34Z,MERGED,True,139,127,2,https://github.com/zack-vii,Fix: TDI hostfile method can execute arbitrary code; cleanup,2,[],https://github.com/MDSplus/mdsplus/pull/1903,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1903#issuecomment-575703177,"increase security of mdsip:
TDIhostfile mode: may be exploited by manipulating the remote username
exit mdsip if setup is invalid; e.g. if no hostfile, become_user failes, TdiExecute not loaded, or tdi fuinction not found.","OK, good catch
On 1/17/20 11:42 AM, Timo Schroeder wrote:

 the exploitation would send a username that is similar to this
 "");public fun a(optional _a, optional _b){return(""root"");};a(""

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#1903?email_source=notifications&email_token=ABY5AZP3Y3LJXG6DINUJD33Q6HNW3A5CNFSM4KGXTZEKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEJIIN3I#issuecomment-575702765>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZIOZXJ4OE5CH3BXDOTQ6HNW3ANCNFSM4KGXTZEA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1905,2020-01-16T09:22:55Z,2020-01-16T19:36:55Z,2020-01-16T19:36:59Z,MERGED,True,32,30,7,https://github.com/zack-vii,Fix: mdsplus-api comma(...) as arg support,1,[],https://github.com/MDSplus/mdsplus/pull/1905,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1905,"execute('fun($)',comma(1,2)) expands to fun(1,2), protect with ($;)
addresses  #1904","execute('fun($)',comma(1,2)) expands to fun(1,2), protect with ($;)
addresses  #1904",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1907,2020-01-23T00:08:08Z,2020-02-10T15:01:30Z,2020-02-10T15:01:34Z,MERGED,True,9416,4175,98,https://github.com/zack-vii,"Fix: compiler refactor, resync with bison and flex",19,"['bug', 'build&deploy', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1907,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1907,"reimplements the lex (flex) yacc (bison) parser generators.
side effect:


fixes a few compiler bugs: e.g. the missing last char of labels
label:code was compiled as lebe : code (c.f. tditest/testing/test-tdishr.ans)


improved parser accuracy due to resolved conflicts


fixes invalid memory access in TdiGetArgs e.g. when called from Tdi1BuildPath


the code generators yylex/gen are included in bootstrap.","reimplements the lex (flex) yacc (bison) parser generators.
side effect:


fixes a few compiler bugs: e.g. the missing last char of labels
label:code was compiled as lebe : code (c.f. tditest/testing/test-tdishr.ans)


improved parser accuracy due to resolved conflicts


fixes invalid memory access in TdiGetArgs e.g. when called from Tdi1BuildPath


the code generators yylex/gen are included in bootstrap.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1907,2020-01-23T00:08:08Z,2020-02-10T15:01:30Z,2020-02-10T15:01:34Z,MERGED,True,9416,4175,98,https://github.com/zack-vii,"Fix: compiler refactor, resync with bison and flex",19,"['bug', 'build&deploy', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1907,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1907#issuecomment-579783981,"reimplements the lex (flex) yacc (bison) parser generators.
side effect:


fixes a few compiler bugs: e.g. the missing last char of labels
label:code was compiled as lebe : code (c.f. tditest/testing/test-tdishr.ans)


improved parser accuracy due to resolved conflicts


fixes invalid memory access in TdiGetArgs e.g. when called from Tdi1BuildPath


the code generators yylex/gen are included in bootstrap.","its done, i think. tdi parser is conflict free and fully reentrant/threadsafe
mdsdcl parser currently used intercative mode with trainling context
Variable trailing context rule at line 60
Variable trailing context rule at line 80
Variable trailing context rule at line 105
Variable trailing context rule at line 115
Variable trailing context rules entail a large performance penalty
yylex/mdsdclDeltatimeToSeconds.l
Variable trailing context rule at line 46
Variable trailing context rules entail a large performance penalty
yylex/ocldToXml.l

which if omitted would increase performance. maybe later if we feel like it",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1907,2020-01-23T00:08:08Z,2020-02-10T15:01:30Z,2020-02-10T15:01:34Z,MERGED,True,9416,4175,98,https://github.com/zack-vii,"Fix: compiler refactor, resync with bison and flex",19,"['bug', 'build&deploy', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1907,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1907#issuecomment-579784947,"reimplements the lex (flex) yacc (bison) parser generators.
side effect:


fixes a few compiler bugs: e.g. the missing last char of labels
label:code was compiled as lebe : code (c.f. tditest/testing/test-tdishr.ans)


improved parser accuracy due to resolved conflicts


fixes invalid memory access in TdiGetArgs e.g. when called from Tdi1BuildPath


the code generators yylex/gen are included in bootstrap.","Cool -

   Is your PR ready for review?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1907,2020-01-23T00:08:08Z,2020-02-10T15:01:30Z,2020-02-10T15:01:34Z,MERGED,True,9416,4175,98,https://github.com/zack-vii,"Fix: compiler refactor, resync with bison and flex",19,"['bug', 'build&deploy', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1907,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1907#issuecomment-579787065,"reimplements the lex (flex) yacc (bison) parser generators.
side effect:


fixes a few compiler bugs: e.g. the missing last char of labels
label:code was compiled as lebe : code (c.f. tditest/testing/test-tdishr.ans)


improved parser accuracy due to resolved conflicts


fixes invalid memory access in TdiGetArgs e.g. when called from Tdi1BuildPath


the code generators yylex/gen are included in bootstrap.",I think so. i am open for discussion.. got to leave now though. post you questions here and i will answer them as soon as i can.. i am on vacation till monday but available at times.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1907,2020-01-23T00:08:08Z,2020-02-10T15:01:30Z,2020-02-10T15:01:34Z,MERGED,True,9416,4175,98,https://github.com/zack-vii,"Fix: compiler refactor, resync with bison and flex",19,"['bug', 'build&deploy', 'code quality']",https://github.com/MDSplus/mdsplus/pull/1907,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1907#issuecomment-580033630,"reimplements the lex (flex) yacc (bison) parser generators.
side effect:


fixes a few compiler bugs: e.g. the missing last char of labels
label:code was compiled as lebe : code (c.f. tditest/testing/test-tdishr.ans)


improved parser accuracy due to resolved conflicts


fixes invalid memory access in TdiGetArgs e.g. when called from Tdi1BuildPath


the code generators yylex/gen are included in bootstrap.",The last sanitizer isseu has been resolved it seems. ready to go.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1912,2020-01-31T11:00:43Z,2020-02-03T07:46:27Z,2020-02-08T00:13:28Z,MERGED,True,7,3,1,https://github.com/GabrieleManduchi,Fix:empty segments crashed the new version of XTreeGetRecord,2,[],https://github.com/MDSplus/mdsplus/pull/1912,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1912,The crash occurred in Squish section. A check has been added before in order to pass only non empty segments to Squish function.,The crash occurred in Squish section. A check has been added before in order to pass only non empty segments to Squish function.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1913,2020-02-03T21:56:04Z,2020-02-04T14:14:22Z,2020-02-04T14:14:22Z,MERGED,True,12,11,1,https://github.com/WhoBrokeTheBuild,Fix cryocon18i to use `t2` instead of `now`,1,['bug'],https://github.com/MDSplus/mdsplus/pull/1913,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1913,"Replace old python 2 style formatting with python 3 formatting
Fix python 3 incompatibiity with string.upper","Replace old python 2 style formatting with python 3 formatting
Fix python 3 incompatibiity with string.upper",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1915,2020-02-06T17:26:56Z,2020-02-06T18:01:00Z,2020-02-06T18:05:21Z,MERGED,True,1,0,1,https://github.com/zack-vii,Fix: added EINVAL to the list of expected errnos,1,[],https://github.com/MDSplus/mdsplus/pull/1915,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1915,"Error occurs if client or server (in an other thread) decides to drop connection after an exception, etc.
Kind of a race condition but has not impact as recv catches it (this way).","Error occurs if client or server (in an other thread) decides to drop connection after an exception, etc.
Kind of a race condition but has not impact as recv catches it (this way).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1916,2020-02-07T18:02:02Z,2020-02-07T18:02:49Z,2020-02-07T18:02:49Z,CLOSED,False,31037,16399,941,https://github.com/tfredian,Feature: Promote stable to alpha,7,[],https://github.com/MDSplus/mdsplus/pull/1916,https://github.com/tfredian,1,https://github.com/MDSplus/mdsplus/pull/1916,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1917,2020-02-07T18:54:04Z,2020-02-07T19:18:28Z,2020-02-08T00:14:18Z,MERGED,True,1,0,1,https://github.com/joshStillerman,fix: add a dummy file  so the repo changes and a new stable is built,1,[],https://github.com/MDSplus/mdsplus/pull/1917,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1917,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1919,2020-02-10T08:52:39Z,2020-02-14T02:30:54Z,2020-02-14T02:30:59Z,MERGED,True,1,0,1,https://github.com/zack-vii,Build: added find to requirements for install script mdsplus-python,2,[],https://github.com/MDSplus/mdsplus/pull/1919,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1919,#1918 : added find to requirement,#1918 : added find to requirement,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1920,2020-02-10T09:26:00Z,2020-02-14T02:31:21Z,2020-02-14T02:31:26Z,MERGED,True,13,17,2,https://github.com/zack-vii,Build: keep track of last successful release in single file,3,[],https://github.com/MDSplus/mdsplus/pull/1920,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1920,increase maintainability,increase maintainability,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1921,2020-02-10T10:14:21Z,2020-02-14T16:34:57Z,2020-04-08T14:23:14Z,MERGED,True,24,4,2,https://github.com/zack-vii,Build: update repo in publish,1,[],https://github.com/MDSplus/mdsplus/pull/1921,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1921,"... instead of keeping copies in both /release and /publish

increases maintainability","... instead of keeping copies in both /release and /publish

increases maintainability",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1922,2020-02-10T13:57:20Z,2020-02-25T23:32:30Z,2020-04-08T14:23:12Z,MERGED,True,254,195,78,https://github.com/zack-vii,Fix: use generalized MDSVERSION in each core lib,7,[],https://github.com/MDSplus/mdsplus/pull/1922,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1922,"reactivated MdsRelease / MdsReleaseDsc
unified _version.py
added for some more libs

 MdsShr->MdsRelease:T()
 TreeShr->TreeRelease:T()
 TdiShr->TdiRelease:T()
 XTreeShr->XTreeRelease:T()
 MdsIpShr->MdsIpRelease:T()

 Mdsdcl->MdsdclRelease:T()
 MdsMisc->MdsMiscRelease:T()","reactivated MdsRelease / MdsReleaseDsc
unified _version.py
added for some more libs

 MdsShr->MdsRelease:T()
 TreeShr->TreeRelease:T()
 TdiShr->TdiRelease:T()
 XTreeShr->XTreeRelease:T()
 MdsIpShr->MdsIpRelease:T()

 Mdsdcl->MdsdclRelease:T()
 MdsMisc->MdsMiscRelease:T()",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1922,2020-02-10T13:57:20Z,2020-02-25T23:32:30Z,2020-04-08T14:23:12Z,MERGED,True,254,195,78,https://github.com/zack-vii,Fix: use generalized MDSVERSION in each core lib,7,[],https://github.com/MDSplus/mdsplus/pull/1922,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1922#issuecomment-590849071,"reactivated MdsRelease / MdsReleaseDsc
unified _version.py
added for some more libs

 MdsShr->MdsRelease:T()
 TreeShr->TreeRelease:T()
 TdiShr->TdiRelease:T()
 XTreeShr->XTreeRelease:T()
 MdsIpShr->MdsIpRelease:T()

 Mdsdcl->MdsdclRelease:T()
 MdsMisc->MdsMiscRelease:T()",soo?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1923,2020-02-10T20:16:58Z,2020-02-11T12:20:40Z,2020-02-11T12:21:02Z,MERGED,True,17,7,5,https://github.com/zack-vii,Fix: ensure timeout to prevail on a real network,4,[],https://github.com/MDSplus/mdsplus/pull/1923,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1923,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1924,2020-02-10T20:17:09Z,2020-02-11T11:53:26Z,2020-02-11T11:53:31Z,MERGED,True,17,7,5,https://github.com/zack-vii,Fix: ensure timeout to prevail on a real network,4,[],https://github.com/MDSplus/mdsplus/pull/1924,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1924,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1927,2020-02-12T11:41:13Z,2020-02-12T14:24:00Z,2020-02-12T14:24:00Z,MERGED,True,83,40,5,https://github.com/zack-vii,Fix: clearer handling of access rights; honour denied (\!),3,[],https://github.com/MDSplus/mdsplus/pull/1927,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1927,"!             : deny prefix or general DENY if no match string
                may be surrounded by space
multi         : match for multi mode - server will become this user on startup
user@1.2.3.*  : user from ip mask
user@hostname : user from host
user@*        : user from anywhere
*@1.2.3.4     : anyone from ip
*@hostname    : anyone from host
*             : anyone from anywhere","!             : deny prefix or general DENY if no match string
                may be surrounded by space
multi         : match for multi mode - server will become this user on startup
user@1.2.3.*  : user from ip mask
user@hostname : user from host
user@*        : user from anywhere
*@1.2.3.4     : anyone from ip
*@hostname    : anyone from host
*             : anyone from anywhere",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1928,2020-02-12T19:09:35Z,2020-02-12T19:38:24Z,2020-02-12T19:38:24Z,MERGED,True,88,50,2,https://github.com/zack-vii,Fix: mdsip hostfile mapping,2,[],https://github.com/MDSplus/mdsplus/pull/1928,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1928,"skip rule if cannot map_to_user
allows
*@server | MAP_TO_USER
*@server | nobody
which maps known users to local accounts and all other to nobody instead of denying immediately.","skip rule if cannot map_to_user
allows
*@server | MAP_TO_USER
*@server | nobody
which maps known users to local accounts and all other to nobody instead of denying immediately.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1929,2020-02-13T17:11:09Z,2020-02-14T17:24:04Z,2020-02-14T17:24:56Z,MERGED,True,121,51,8,https://github.com/zack-vii,Feature: adds tests for CheckClient and fixes issues on the way,7,[],https://github.com/MDSplus/mdsplus/pull/1929,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1929,"Added support for SIZE SHAPE ... on APD
Added special character ""@"" to tditest that can be used to suppress
CheckClient shall not exit the process on issues but deny access instead
rtype MISSING should not try to read return value as it might be undefined behavior
use lib->fun:MISSING() if fun is ""void fun()""
APD array should return MISSING just like arrays if index out of bounds

Concludes fix of issue #1926 for patch in stable.","Added support for SIZE SHAPE ... on APD
Added special character ""@"" to tditest that can be used to suppress
CheckClient shall not exit the process on issues but deny access instead
rtype MISSING should not try to read return value as it might be undefined behavior
use lib->fun:MISSING() if fun is ""void fun()""
APD array should return MISSING just like arrays if index out of bounds

Concludes fix of issue #1926 for patch in stable.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1931,2020-02-13T23:29:55Z,2020-02-14T01:08:43Z,2020-04-08T14:23:15Z,MERGED,True,98,90,4,https://github.com/zack-vii,Fix: TdiLex failed to match comment,2,[],https://github.com/MDSplus/mdsplus/pull/1931,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1931,"regexp swallowed * of / when comment ended on ""**""+""/""
i.e. an even number of '' followed by '/'","regexp swallowed * of / when comment ended on ""**""+""/""
i.e. an even number of '' followed by '/'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1932,2020-02-16T13:11:36Z,2020-02-16T15:58:32Z,2020-02-16T15:58:36Z,CLOSED,False,45,25,4,https://github.com/zack-vii,Zck alpha,2,[],https://github.com/MDSplus/mdsplus/pull/1932,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1932,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/HerveAncher,1,https://github.com/MDSplus/mdsplus/pull/1933,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-588269803,,"Can one of the admins verify this patch? If it looks ok add a comment to the pull request containing the phrase ""ok to test""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-588275750,,"Someone else may want to speak to this.... As far as I know we do all of
our windows builds using cygwin.  If you have it building in visual
studio, and the files you changed are not ones we use for the standard
releases, I am fine with updating them.  You may want to add a section
under 'building from source' on www.mdsplus.org describing how to build
MDSplus using visual studio.

On a separate track:  I am surprised to see our previous commits in your
Commit summary.  I am guessing that a rebase instead of a merge would
have eliminated them.  Does anyone know if we NEED TO REBASE to accept
this PR ?
…
-Josh",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/HerveAncher,4,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-588680246,,"About building MDSplus with VS, yes, we need to first build library with Cygwin or MinGW (I use MinGW) and after generate the compliant library with the script I have modified.
The goal is to have libraries compatibles with MSVC to be able to link directly under VS.
For the PR, you right, if think a rebase would be better. Maybe my forked repo was not up to date.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/tfredian,5,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-589747935,,"A couple comments on this PR. This looks good to me but  perhaps Gabriele should take a look at the java Makefile improvements and approve after the PR is updated. The MDSplus C based libraries are indeed built with mingw64 not cygwin. Unfortunately C++ based libraries built with mingw64 are not compatible with applications built using VS so we provide both VS versions and MingW versions of those libraries. Perhaps the easiest way to rebase this is to pull the latest alpha and make another branch and cherry pick your commit from this branch into the new branch and force push the new branch to replace this branch.
Another important comment is that one of the core development team must respond to the automatic comment about the ""ok to txxx"". For security reasons the PR will not be automatically tested if it was created by someone not a member of the MDSplus development team. A core developer should review the changes to make sure there are no suspicious security hacks in the code and if all looks good the developer should enter a comment on the PR with the ""ok to txxx"" phrase in it so the PR will be properly tested.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-589896242,,"@HerveAncher  You should definitely rebase this branch from current alpha so it is clear what actually changed. Also it o would be good to know why you thing this is necessary to add. Whats the purpose of adding vs files to the branch and why is it required to change the makefiles. I assume the vs stuff is a nice to have so users can quickly build extensions with vs but i dont see why that would be necessary, especially since we apparently have 2017 project files already. Could one not use those in vs 2019 and upgrade. users still using 2017 would not be able to use 2019 project files though.
If you wish to ad them anyway we should put them in a dedicated folder that is not touching or touched by the build chain. Please explain what difficulties you try to overcome.
First though rebase, please. It might help understanding.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-590233658,,Hm well you were supposed to fix issues that occured during the rebasing process. that is clearing out all the >>>>.. and <<<<.. stuff. I also have the feeeing you rebased against your local alpha branch. I will try to get it right for you. just explain what you are trying to solve in this pr.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-590248890,,"Ok i cecked it out and test it. we wont be able to use this pr. it contains soecifics to essantial build scripts that wont work for us.

removal of dual arch support.
change of filepath that are required to find build bins on wine

There is at least one errors/warnings in the cpp code aboit unused vars.
For local testing, please use docker and our building tools:
deploy/build.sh --os=windows --test --release
This will have to run thru without any error and of course it is required to produce a complete and working installer for windows.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-590257901,,"For a propperly rebaded branch please reset --hard to
https://github.com/MDSplus/mdsplus.git HerveAncher-VS2017-2019
or manually rebase
# update your upstream
git fetch https://github.com/MDSplus/mdsplus.git # may work
# reset to your original ""git reset --hard 90c308d
git rebase alpha_release-7-97-0 -i
# the editor, remove all commits but yours. should be the last 5
The force push.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/HerveAncher,10,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-590269066,,Thanks for the steps to properly rebase.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-590855426,,"Since you did not tell us what you are trying to accomplish, I will make a wild guess. You wish to use the event stream under Windows. how about we include the code and wrap it in a macro e.g. if def HAVE_PTHREAD_H or similar. so you can build it in you vs environment. since we do not have pthread in our wine environment yet we wont be able to include it by default.
would that be sufficient. I doubt you are using the batch files to build but if you do. I would like to ask you to store them with your project as they are windows specific and wont work in our wine environment.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1933,2020-02-19T14:46:13Z,2020-02-25T19:18:24Z,2020-02-25T19:18:25Z,CLOSED,False,138,116,25,https://github.com/HerveAncher,Move Visual Studio files from 2017 to 2019,5,"['DO NOT MERGE', 'feedback required']",https://github.com/MDSplus/mdsplus/pull/1933,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/1933#issuecomment-591021691,,what we can take away from this i gathered in PR #1935,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1934,2020-02-19T22:31:11Z,2020-02-26T00:15:10Z,2020-02-26T00:15:10Z,MERGED,True,66,42,1,https://github.com/WhoBrokeTheBuild,Update influxhistorian device class,3,['enhancement'],https://github.com/MDSplus/mdsplus/pull/1934,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/1934,"Surround import influxdb with try/catch to fail cleanly when the package is not installed
Change DATA_COUNT to 500
Add CREDENTIALS file support
Cleanup LAST_READ and add START_TIME
Generalize TAG_PATH to WHERE and FUNCTION to SELECT
Use proper prameters to have influx return milliseconds, instead of trying to parse timestamps","Surround import influxdb with try/catch to fail cleanly when the package is not installed
Change DATA_COUNT to 500
Add CREDENTIALS file support
Cleanup LAST_READ and add START_TIME
Generalize TAG_PATH to WHERE and FUNCTION to SELECT
Use proper prameters to have influx return milliseconds, instead of trying to parse timestamps",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1935,2020-02-25T13:27:12Z,2020-02-26T11:32:40Z,2020-02-26T11:49:23Z,MERGED,True,101,100,26,https://github.com/zack-vii,Feature: datastream for windows,5,[],https://github.com/MDSplus/mdsplus/pull/1935,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1935,extracted from #1933,extracted from #1933,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1935,2020-02-25T13:27:12Z,2020-02-26T11:32:40Z,2020-02-26T11:49:23Z,MERGED,True,101,100,26,https://github.com/zack-vii,Feature: datastream for windows,5,[],https://github.com/MDSplus/mdsplus/pull/1935,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1935#issuecomment-591053661,extracted from #1933,requires alpine patch from #1922,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1935,2020-02-25T13:27:12Z,2020-02-26T11:32:40Z,2020-02-26T11:49:23Z,MERGED,True,101,100,26,https://github.com/zack-vii,Feature: datastream for windows,5,[],https://github.com/MDSplus/mdsplus/pull/1935,https://github.com/HerveAncher,3,https://github.com/MDSplus/mdsplus/pull/1935#issuecomment-591287418,extracted from #1933,"Dear zack-vii,
Thanks for these adaptations. In the PR #1933 I effectively not specify what was my goal.
So here is it: We use MDSplus to store data as backend in specific project named IMAS.
Currently, I build MDSplus with MinGW and my previous commits in MDS were enough to do that.
Now, I would like to compile MDSplus with the last MSVC compiler, to compile all of my project with MSVC, and I have modified visual-studio-build.bat for this purpose.
Perhaps I need to defined some of my var (like VSVER, VCVER and WKVER) to be compliant by default with VS2017, the version you used.
The second point is the output directories (BUILD86 and BUILD64), I cannot use \workspace\releasebld\ because on my Windows system, this directory does not exist.
The third point is the command vsbuild use in Makefile. What is it?
I directly compile under Windows, so I do not use wine. I think if Wine if available, I can use it ans call your command vsbuild and in other case call directly visual-studio-build.bat
So I propose to make some adaptations by letting the default value for the parameters as there are, and check if some of them are passed to the Batch and use them in this case.
Now I will wait until this PR will accepted and merged and after that I will propose my adaptations as described above.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1935,2020-02-25T13:27:12Z,2020-02-26T11:32:40Z,2020-02-26T11:49:23Z,MERGED,True,101,100,26,https://github.com/zack-vii,Feature: datastream for windows,5,[],https://github.com/MDSplus/mdsplus/pull/1935,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1935#issuecomment-591386887,extracted from #1933,"i think the visual-studio-build.bat scipt should rather go into deploy/packaging/windows as it is only used in for release builds. I might be mistaken, but vsbuild could be a relique from days when we did not use wine yet. since your will you be building all mdsplus modules under vs or just mdsobjects. it might be best to ratger duplicate the batch script and call it *_win.bat where you can run it with arguments. the changes required to make both worlds happy in one file might just be too much. since we have to maintain the file it would be best to keep them simple or they may break when changes come around. if you feel like it, you could share your project files and we can work something out.
cheers
Timo",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1936,2020-02-26T15:28:35Z,2020-02-26T18:46:26Z,2020-02-26T18:47:05Z,MERGED,True,1957,81422,78,https://github.com/zack-vii,Build: run bootstrap during trigger.sh and removed output,10,[],https://github.com/MDSplus/mdsplus/pull/1936,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1936,"Now bootstrap includes also yacc/lex and gen_messages
We should move any other autogenerated code there as well.
users can run ./bootstrap to create the files w/o docker","Now bootstrap includes also yacc/lex and gen_messages
We should move any other autogenerated code there as well.
users can run ./bootstrap to create the files w/o docker",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1936,2020-02-26T15:28:35Z,2020-02-26T18:46:26Z,2020-02-26T18:47:05Z,MERGED,True,1957,81422,78,https://github.com/zack-vii,Build: run bootstrap during trigger.sh and removed output,10,[],https://github.com/MDSplus/mdsplus/pull/1936,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1936#issuecomment-591575812,"Now bootstrap includes also yacc/lex and gen_messages
We should move any other autogenerated code there as well.
users can run ./bootstrap to create the files w/o docker","@MDSplus/core :
please have a look at it and vote if you think it is OK not to keep autoconf and automake output in the repo. everything can be build using
./bootstrap",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1938,2020-02-27T18:52:34Z,2020-02-27T19:44:45Z,2020-04-08T14:23:07Z,MERGED,True,2,2983,3,https://github.com/zack-vii,Fix: match white space in TdiLex.l,2,[],https://github.com/MDSplus/mdsplus/pull/1938,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1938,"fixes issue #1937

\l is not a valid regexp escape sequence
\f is missing from skippable breaks","fixes issue #1937

\l is not a valid regexp escape sequence
\f is missing from skippable breaks",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1939,2020-03-03T20:03:04Z,2020-03-09T15:44:54Z,2020-03-09T15:44:58Z,MERGED,True,318,37,3,https://github.com/zack-vii,Feature: mdsrecord and cached decorators to tree.py,6,[],https://github.com/MDSplus/mdsplus/pull/1939,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1939,"This adds two useful decorators I use in all of my devices; I figured they might be useful to others as well.
updated TestDevice:

show usage of mdsrecord, cached_property, and with_mdsrecords
changed coding style to comply with PEP8 for best practice

added tests","This adds two useful decorators I use in all of my devices; I figured they might be useful to others as well.
updated TestDevice:

show usage of mdsrecord, cached_property, and with_mdsrecords
changed coding style to comply with PEP8 for best practice

added tests",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1939,2020-03-03T20:03:04Z,2020-03-09T15:44:54Z,2020-03-09T15:44:58Z,MERGED,True,318,37,3,https://github.com/zack-vii,Feature: mdsrecord and cached decorators to tree.py,6,[],https://github.com/MDSplus/mdsplus/pull/1939,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1939#issuecomment-594144750,"This adds two useful decorators I use in all of my devices; I figured they might be useful to others as well.
updated TestDevice:

show usage of mdsrecord, cached_property, and with_mdsrecords
changed coding style to comply with PEP8 for best practice

added tests","@WhoBrokeTheBuild : Since you are active in the pydevice business, this might interest you.
feedback appreciated.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1939,2020-03-03T20:03:04Z,2020-03-09T15:44:54Z,2020-03-09T15:44:58Z,MERGED,True,318,37,3,https://github.com/zack-vii,Feature: mdsrecord and cached decorators to tree.py,6,[],https://github.com/MDSplus/mdsplus/pull/1939,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1939#issuecomment-594145204,"This adds two useful decorators I use in all of my devices; I figured they might be useful to others as well.
updated TestDevice:

show usage of mdsrecord, cached_property, and with_mdsrecords
changed coding style to comply with PEP8 for best practice

added tests","jenkins has trouble running docker on some workers (e.g. mfews04, mfews05, mfews09, ...):
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

seems resolved",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1940,2020-03-04T17:01:31Z,2020-03-09T16:40:18Z,2020-04-08T14:23:00Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: show example overview for wgsi even without trailing /,2,[],https://github.com/MDSplus/mdsplus/pull/1940,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1940,"before: http://server:80/mdsplus showed 404 error
now: http://server:80/mdsplus is the same as http://server:80/mdsplus/","before: http://server:80/mdsplus showed 404 error
now: http://server:80/mdsplus is the same as http://server:80/mdsplus/",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1940,2020-03-04T17:01:31Z,2020-03-09T16:40:18Z,2020-04-08T14:23:00Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: show example overview for wgsi even without trailing /,2,[],https://github.com/MDSplus/mdsplus/pull/1940,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1940#issuecomment-596612188,"before: http://server:80/mdsplus showed 404 error
now: http://server:80/mdsplus is the same as http://server:80/mdsplus/",@joshStillerman  poke ;),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1940,2020-03-04T17:01:31Z,2020-03-09T16:40:18Z,2020-04-08T14:23:00Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: show example overview for wgsi even without trailing /,2,[],https://github.com/MDSplus/mdsplus/pull/1940,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1940#issuecomment-596622702,"before: http://server:80/mdsplus showed 404 error
now: http://server:80/mdsplus is the same as http://server:80/mdsplus/",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1941,2020-03-05T09:44:46Z,2020-03-09T11:12:39Z,2020-03-09T11:12:39Z,CLOSED,False,5834,3207,200,https://github.com/HerveAncher,Manage compatible libraries compilation under VS2019,2,[],https://github.com/MDSplus/mdsplus/pull/1941,https://github.com/HerveAncher,1,https://github.com/MDSplus/mdsplus/pull/1941,"Dear all,
After my previous PR #1933 merged by @zack-vii in #1935 I come back with a new PR which is manage better the integration of VS2019 (and also VS2017).
Lot of files were modified because I called ./bootstrap and ./configure at root and this command regenerate several files, like Makefile.
The main modifications are there:
Manage atribute for MSVC (mostly in .c and .h files):
#if defined(__GNUC__ ) || defined(__clang__)
#  define UNUSED_ARGUMENT __attribute__((__unused__))
#else
#  define UNUSED_ARGUMENT
#endif

Add new arguments to manage Visual Studio to configure script:
--with-visual-studio-ver=VS_VER
--with-visual-cpp-ver=VC_VER
-with-windows-sdk-ver=WK_VER
--with-windows-pthread-dir=WIN_PTHREADDIR

Fix asterisks escapement and comments in Lex files.
Normally, with these modifications, you should be able to compile MDSplus safety under Linux and Cygwin (I did it under Ubuntu 18.04 and MinGW-w64).","Dear all,
After my previous PR #1933 merged by @zack-vii in #1935 I come back with a new PR which is manage better the integration of VS2019 (and also VS2017).
Lot of files were modified because I called ./bootstrap and ./configure at root and this command regenerate several files, like Makefile.
The main modifications are there:
Manage atribute for MSVC (mostly in .c and .h files):
#if defined(__GNUC__ ) || defined(__clang__)
#  define UNUSED_ARGUMENT __attribute__((__unused__))
#else
#  define UNUSED_ARGUMENT
#endif

Add new arguments to manage Visual Studio to configure script:
--with-visual-studio-ver=VS_VER
--with-visual-cpp-ver=VC_VER
-with-windows-sdk-ver=WK_VER
--with-windows-pthread-dir=WIN_PTHREADDIR

Fix asterisks escapement and comments in Lex files.
Normally, with these modifications, you should be able to compile MDSplus safety under Linux and Cygwin (I did it under Ubuntu 18.04 and MinGW-w64).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1941,2020-03-05T09:44:46Z,2020-03-09T11:12:39Z,2020-03-09T11:12:39Z,CLOSED,False,5834,3207,200,https://github.com/HerveAncher,Manage compatible libraries compilation under VS2019,2,[],https://github.com/MDSplus/mdsplus/pull/1941,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1941#issuecomment-595130506,"Dear all,
After my previous PR #1933 merged by @zack-vii in #1935 I come back with a new PR which is manage better the integration of VS2019 (and also VS2017).
Lot of files were modified because I called ./bootstrap and ./configure at root and this command regenerate several files, like Makefile.
The main modifications are there:
Manage atribute for MSVC (mostly in .c and .h files):
#if defined(__GNUC__ ) || defined(__clang__)
#  define UNUSED_ARGUMENT __attribute__((__unused__))
#else
#  define UNUSED_ARGUMENT
#endif

Add new arguments to manage Visual Studio to configure script:
--with-visual-studio-ver=VS_VER
--with-visual-cpp-ver=VC_VER
-with-windows-sdk-ver=WK_VER
--with-windows-pthread-dir=WIN_PTHREADDIR

Fix asterisks escapement and comments in Lex files.
Normally, with these modifications, you should be able to compile MDSplus safety under Linux and Cygwin (I did it under Ubuntu 18.04 and MinGW-w64).","Can one of the admins verify this patch? If it looks ok add a comment to the pull request containing the phrase ""ok to test""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1941,2020-03-05T09:44:46Z,2020-03-09T11:12:39Z,2020-03-09T11:12:39Z,CLOSED,False,5834,3207,200,https://github.com/HerveAncher,Manage compatible libraries compilation under VS2019,2,[],https://github.com/MDSplus/mdsplus/pull/1941,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1941#issuecomment-595183506,"Dear all,
After my previous PR #1933 merged by @zack-vii in #1935 I come back with a new PR which is manage better the integration of VS2019 (and also VS2017).
Lot of files were modified because I called ./bootstrap and ./configure at root and this command regenerate several files, like Makefile.
The main modifications are there:
Manage atribute for MSVC (mostly in .c and .h files):
#if defined(__GNUC__ ) || defined(__clang__)
#  define UNUSED_ARGUMENT __attribute__((__unused__))
#else
#  define UNUSED_ARGUMENT
#endif

Add new arguments to manage Visual Studio to configure script:
--with-visual-studio-ver=VS_VER
--with-visual-cpp-ver=VC_VER
-with-windows-sdk-ver=WK_VER
--with-windows-pthread-dir=WIN_PTHREADDIR

Fix asterisks escapement and comments in Lex files.
Normally, with these modifications, you should be able to compile MDSplus safety under Linux and Cygwin (I did it under Ubuntu 18.04 and MinGW-w64).","@HerveAncher : Hi again. First please rebase your changes from recent alpha. As you noticed we autogenerate some files using bootstrap. Your patch need to be based on the autoconfig and automake input files or it will break. To prevent conflicts due to direct editing of auto-generated files we removed all such files from the repo. do not include output files of bootstrap to the commit.
This will also make it easier to track down the core of your change.
PS: once you did the rebase (manually seems to be the best option, via cherry-pick) you need to force push it  with
git push -f",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1941,2020-03-05T09:44:46Z,2020-03-09T11:12:39Z,2020-03-09T11:12:39Z,CLOSED,False,5834,3207,200,https://github.com/HerveAncher,Manage compatible libraries compilation under VS2019,2,[],https://github.com/MDSplus/mdsplus/pull/1941,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1941#issuecomment-595190673,"Dear all,
After my previous PR #1933 merged by @zack-vii in #1935 I come back with a new PR which is manage better the integration of VS2019 (and also VS2017).
Lot of files were modified because I called ./bootstrap and ./configure at root and this command regenerate several files, like Makefile.
The main modifications are there:
Manage atribute for MSVC (mostly in .c and .h files):
#if defined(__GNUC__ ) || defined(__clang__)
#  define UNUSED_ARGUMENT __attribute__((__unused__))
#else
#  define UNUSED_ARGUMENT
#endif

Add new arguments to manage Visual Studio to configure script:
--with-visual-studio-ver=VS_VER
--with-visual-cpp-ver=VC_VER
-with-windows-sdk-ver=WK_VER
--with-windows-pthread-dir=WIN_PTHREADDIR

Fix asterisks escapement and comments in Lex files.
Normally, with these modifications, you should be able to compile MDSplus safety under Linux and Cygwin (I did it under Ubuntu 18.04 and MinGW-w64).","about the UNUSED_ARGUMENT.. would it not be easier to teach your compiler this macro?
#define __attribute__(...)
At least you definetly dont want to define UNUSED_ARGUMENT in every file but centralized in include/..",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1941,2020-03-05T09:44:46Z,2020-03-09T11:12:39Z,2020-03-09T11:12:39Z,CLOSED,False,5834,3207,200,https://github.com/HerveAncher,Manage compatible libraries compilation under VS2019,2,[],https://github.com/MDSplus/mdsplus/pull/1941,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1941#issuecomment-595290694,"Dear all,
After my previous PR #1933 merged by @zack-vii in #1935 I come back with a new PR which is manage better the integration of VS2019 (and also VS2017).
Lot of files were modified because I called ./bootstrap and ./configure at root and this command regenerate several files, like Makefile.
The main modifications are there:
Manage atribute for MSVC (mostly in .c and .h files):
#if defined(__GNUC__ ) || defined(__clang__)
#  define UNUSED_ARGUMENT __attribute__((__unused__))
#else
#  define UNUSED_ARGUMENT
#endif

Add new arguments to manage Visual Studio to configure script:
--with-visual-studio-ver=VS_VER
--with-visual-cpp-ver=VC_VER
-with-windows-sdk-ver=WK_VER
--with-windows-pthread-dir=WIN_PTHREADDIR

Fix asterisks escapement and comments in Lex files.
Normally, with these modifications, you should be able to compile MDSplus safety under Linux and Cygwin (I did it under Ubuntu 18.04 and MinGW-w64).",As last time it did what i suggested and put up a separate PR #1943 . please iterate on the branch referred to in that PR.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1941,2020-03-05T09:44:46Z,2020-03-09T11:12:39Z,2020-03-09T11:12:39Z,CLOSED,False,5834,3207,200,https://github.com/HerveAncher,Manage compatible libraries compilation under VS2019,2,[],https://github.com/MDSplus/mdsplus/pull/1941,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1941#issuecomment-596465143,"Dear all,
After my previous PR #1933 merged by @zack-vii in #1935 I come back with a new PR which is manage better the integration of VS2019 (and also VS2017).
Lot of files were modified because I called ./bootstrap and ./configure at root and this command regenerate several files, like Makefile.
The main modifications are there:
Manage atribute for MSVC (mostly in .c and .h files):
#if defined(__GNUC__ ) || defined(__clang__)
#  define UNUSED_ARGUMENT __attribute__((__unused__))
#else
#  define UNUSED_ARGUMENT
#endif

Add new arguments to manage Visual Studio to configure script:
--with-visual-studio-ver=VS_VER
--with-visual-cpp-ver=VC_VER
-with-windows-sdk-ver=WK_VER
--with-windows-pthread-dir=WIN_PTHREADDIR

Fix asterisks escapement and comments in Lex files.
Normally, with these modifications, you should be able to compile MDSplus safety under Linux and Cygwin (I did it under Ubuntu 18.04 and MinGW-w64).",Great input. a filtered version of the suggestions has been compiled in #1943,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1942,2020-03-05T15:24:42Z,2020-03-05T15:34:26Z,2020-03-05T15:36:27Z,CLOSED,False,149,410,28,https://github.com/zack-vii,Build: added support for other visual studio compiler,4,[],https://github.com/MDSplus/mdsplus/pull/1942,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1942,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h . just force push you fixed version to your branch in PR #1941.
FYI: please follow the commit convention. the commit title should start with ""Build: ""","@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h . just force push you fixed version to your branch in PR #1941.
FYI: please follow the commit convention. the commit title should start with ""Build: """,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1942,2020-03-05T15:24:42Z,2020-03-05T15:34:26Z,2020-03-05T15:36:27Z,CLOSED,False,149,410,28,https://github.com/zack-vii,Build: added support for other visual studio compiler,4,[],https://github.com/MDSplus/mdsplus/pull/1942,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1942#issuecomment-595293330,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h . just force push you fixed version to your branch in PR #1941.
FYI: please follow the commit convention. the commit title should start with ""Build: """,branch name too long for version.h header resubmitted in #1943,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1943,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/HerveAncher,2,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-595698203,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","@zack-vii I have just cloned your branch on my computer and run it to ensure all is fine.
I still have error during Lex interpretation on these files:
yylex/cmdParse.l
Règle de contexte traîné variable à la ligne 60
Règle de contexte traîné variable à la ligne 80
Règle de contexte traîné variable à la ligne 105
Règle de contexte traîné variable à la ligne 115

yylex/mdsdclDeltatimeToSeconds.l
Règle de contexte traîné variable à la ligne 46

This is about the asterisk escapement, I need on my system to add a backslash on it to generate properly C files.
In mdsdatastreams.cpp under Windows, it is not possible to allocate variable without constant size (lines 402 and 410):
-char msgBuf[strlen(name) + 256];
+char* msgBuf = new char[strlen(name) + 256];
+delete[] msgBuf;

This code is the same as lines 419 and 436.
About the visual-studio-build.bat Batch, I understand what you mean.
But to support VS2019, I do not know how to deal without introduce the version of compiler and SDK and a way to specify them.
Remember that I compile MDSplus on Windows 10 directly, no Docker, no VM ad no Wine on my case (that is why I absolutely need WIN_PTHREADDIR).
I can create a new file call visual-studio-dll.bat where I will put my code, but how call it from mdsobjects/cpp/Makefile?
Adding some VS flag in configure.ac was not a good way?
VSDLL target need to be defined to install DLL, and if I define it with the current config, the Makefile will try to call Wine command.
So I think the using @HAVE_WINE_TRUE@ is the good manner to disable Wine command, and just showing a warning to tell user that somethin is missing (as I did):
@HAVE_WINE_TRUE@		for i in $(top_builddir)/defs/*.def; do \
@HAVE_WINE_TRUE@			wine cmd.exe /C ""cd @MAKESHLIBDIR@ & @VS_DIR@\\@VS_ARCH@\\bin\\lib /MACHINE:@VS_ARCH@ /DEF:Z:$${deffile////\\}"" ; \
@HAVE_WINE_TRUE@		done ;
@HAVE_WINE_TRUE@		wine cmd.exe /C vsbuild @VS_DIR@ @VS_ARCH@ @MAKESHLIBDIR@ ;
@HAVE_WINE_FALSE@		echo ""No Wine configuration detected, please install Wine!"" ;

I this case, I can call make command without error, call another Windows Batch to generate DLL with Visual Studio 2019, and finally call make install, I did it and it works.
Otherwise, all is fine.
You can merge these modifications and please introduce the points I described above?
Regards.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-595723189,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","The lex stuff are warnings about performance drawbacks. That is normal as those parsers are not optimized.

I can create a new file call visual-studio-dll.bat where I will put my code, but how call it from mdsobjects/cpp/Makefile?

You dont. Its not meant to be called by the Makefile. It is called when we package the installer in order to include the vs compatible lib files. I your case: Make it a post compile step and just run it directly.
I have woven in your other suggestions though.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-595725714,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .",PS it would be great if you could share your project files. we could offer them together with you batch script. to other user that wish to accomplish what you are trying,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/HerveAncher,5,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-595760067,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","@zack-vii thanks for the 2 commits.
Currently I call these commands to compile under Windows/MinGW-w64 (on your branch):
./bootstrap
./configure --disable-valgrind --prefix=/c/IMAS/mdsplus-7.97.0_windows --with-visual-studio
make
cd mdsobjects/cpp
export WIN_PTHREADDIR=C:/vcpkg/installed/x64-windows
export VS_VER=2019
export VC_VER=14.24.28314
export WK_VER=10.0.17134.0
./visual-studio-build.bat ""$@""
cd ../..
make install

The flag --with-visual-studio is used without parameter, just to declare it and generate proper elements in Makefile.
Of course, the visual-studio-build.bat is mine, with WIN_PTHREADDIR and VS2017/VS2019 management and @HAVE_WINE_TRUE@ trick in Makefile.in
Please find my files in attachment:
VS2019.zip",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-596464646,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .",Thanks for the project files. I will work on them once i got some more free time. I am still running VS2017 community. I think assume there is a free (community) release of VS2019. but since it takes some time to install... once the PR are merged i will publish a depersonalized version for users to download in the mdsobjects cpp section of mdsplus.org.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/HerveAncher,7,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-597514305,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","Dear @zack-vii what about the files mdsdcl/yylex/cmdParse.l and mdsdcl/yylex/mdsdclDeltatimeToSeconds.l?
Without the escapement of asterisk character, I cannot compile it under Windows/MinGW, because during the ./bootstrap command, the Lex source files generation failed.
Do you think my adjustments of theses files can be safely integrated to this PR?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-597738835,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","Dear @zack-vii what about the files mdsdcl/yylex/cmdParse.l and mdsdcl/yylex/mdsdclDeltatimeToSeconds.l?
Without the escapement of asterisk character, I cannot compile it under Windows/MinGW, because during the ./bootstrap command, the Lex source files generation failed.
Do you think my adjustments of theses files can be safely integrated to this PR?

If you escape the asterix, the parser would look for an actual '*' instead of a variable number of {blanks}. So sorry escaping is not an option as it would break the parsers function. why does your lex fail? which version.
I am addressing the parser issue in PR #1951
please check if it already fixes mdsdclDeltatimeToSeconds.l. working on cmdParser but it more tricky",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/HerveAncher,9,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-598605056,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","@zack-vii I have just resync the last alpha branch, the compilation under MinGW is fine and after calling my visual-studio-build.bat I am able to compile properly additionnal DLL and lib.
The new stable release will be the good one for VS2019!
As you describe, I think getting a specific Windows Batch on MDSplus wiki will be a good manner to allow users doing what I did.
Let me know when this kind of Batch will be available, I will complete my script by adding a wget/curl command to grab the file from wiki.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/HerveAncher,10,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-621663179,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","Dear @zack-vii Hi,
I would like to know if you plain to release a new version of MDSplus with the VS2019 support.
I give you my actual visual-studio-build.bat the one I use from the folder .\mdsobjects\cpp\ to compile lib and DLL for Windows under Windows OS.
You said that putting this version on the MDSplus wiki will be a good solution, I plain to add a link in my README pointing to this file, and explain how to compile MDSplus with VS2019 and VCPKG:
Compile MDSplus sources under MSYS2 MinGW 64-bit terminal:
./bootstrap
./configure --disable-valgrind --prefix=/c/IMAS/mdsplus-7.97.0_windows --with-visual-studio
make

Call the following command to compile compatible Windows DLL:
cd mdsobjects/cpp
export WIN_PTHREADDIR=%VCPKG_DIR%/installed/x64-windows
export VS_VER=2019
export VC_VER=14.25.28610
export WK_VER=10.0.17134.0
./visual-studio-build.bat ""$@""
cd ../..

And finally install all libraries:
make install

You can use these instructions to explain how to proceed on your wiki. Thanks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-621679333,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","Hi @HerveAncher,
I read this and had a great idea how to get this rolling. Maybe its worth pouring your contribution files in git repository owned by you and with public read access.
You would add mdsplus as a submodule e.g. in
./mdsplus

put you how-to in
./README.md

and place the rest of the files, vs project files of the versions you have tested, batch scripts, etc. next to it.
./<rest>

Then we can link your project on mdsplus.org under user contributions (http://www.mdsplus.org/index.php?title=User_Contrib) and you have full control over your files.
You can even allow pull requests from other users if you wish.
What do you think? Sounds easier for the both of us to maintain. I could help you to get started if you need.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/HerveAncher,12,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-627191594,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","Dear @zack-vii,
I have just open an issue: #2021
Do you think that this kind of issue should be resolved quickly?
I also need to know if the merge you did about VS2019 build in alpha_release-7-100-0 should be integrated in the next stable release?
Currently, I need to used alpha branch to compile MDSplus for Windows. I hope to use the stable branch soon.
Regards.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1943,2020-03-05T15:34:52Z,2020-03-12T20:29:24Z,2020-05-12T09:35:05Z,MERGED,True,93,119,41,https://github.com/zack-vii,Build: added support for other visual studio compiler,6,[],https://github.com/MDSplus/mdsplus/pull/1943,https://github.com/zack-vii,13,https://github.com/MDSplus/mdsplus/pull/1943#issuecomment-627227290,"@HerveAncher : please check this one out and add the mdsplus/mdsconfig.h header where you have a conflict with __attribute__ stuff. You may find that mdsplus/mdsconfig.h is already included but only if WINDOWS_H is undefined. In that case, please move it out of this condition as it is handled in mdsconfig.h .","Hi @HerveAncher,
we will eventually promote alpha to stable... stable does not change oftern if you wish to use stable you may cherry-pick the commit from alpha. Stable is basically an old alpha with some bugfixes on top but we wont merge features or non-essential commits to stable direktly because this may break more the it helps and could make stable unstable.
It is safe to use the alpha branch atm. especially if you are developing yourself as this way you may help shape the current head of MDSplus to work best with your apis.
Personal opinion, stable is overrated and one should only use it when going into operation. better though would be to freeze updates on alpha and run the version you tested.
I will see what i can do about the jTraverser stuff.
Cheers
Timo",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1944,2020-03-09T12:20:26Z,2020-03-09T14:48:36Z,2020-03-09T14:48:37Z,MERGED,True,47,3,2,https://github.com/zack-vii,Build: more descriptive error if bootstrap prog unavailable,1,[],https://github.com/MDSplus/mdsplus/pull/1944,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1944,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1945,2020-03-09T20:15:27Z,2020-03-09T20:20:25Z,2020-03-09T20:20:29Z,CLOSED,False,35,21,2,https://github.com/zack-vii,Fix: fix python cast with units and help and error,1,[],https://github.com/MDSplus/mdsplus/pull/1945,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1945,"The core issue its that descriptors dont unpack With_Error With_Help and With_Units for performance reasons. I think this is a good thing but int() str() long() and float() dont support it
this PR changes it but i am not sure about str()","The core issue its that descriptors dont unpack With_Error With_Help and With_Units for performance reasons. I think this is a good thing but int() str() long() and float() dont support it
this PR changes it but i am not sure about str()",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1946,2020-03-09T20:20:12Z,2020-03-12T20:30:14Z,2020-03-12T20:30:18Z,MERGED,True,45,22,3,https://github.com/zack-vii,Fix: fix python cast with units and help and error,1,[],https://github.com/MDSplus/mdsplus/pull/1946,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1946,"The core issue its that descriptors dont unpack WithError Properties and WithUnits for performance reasons. I think this is a good thing but int() str() long() and float() dont support it
this PR changes it. also it restores the str behavior for WithError WithUnits and Parameter","The core issue its that descriptors dont unpack WithError Properties and WithUnits for performance reasons. I think this is a good thing but int() str() long() and float() dont support it
this PR changes it. also it restores the str behavior for WithError WithUnits and Parameter",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1947,2020-03-10T02:59:56Z,2020-03-10T12:49:23Z,2020-03-10T12:49:32Z,MERGED,True,73,39,6,https://github.com/zack-vii,Fix: fixed ssh and tunnel MdsIp.Connection mdsplus-api,1,[],https://github.com/MDSplus/mdsplus/pull/1947,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1947,improves performance and stability of ssh and tunnel connection,improves performance and stability of ssh and tunnel connection,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1948,2020-03-10T17:04:37Z,2020-03-10T17:38:47Z,2020-03-10T17:38:50Z,MERGED,True,26,21,1,https://github.com/zack-vii,Fix: improved performance of MdsIpTcp; use two selectors,1,[],https://github.com/MDSplus/mdsplus/pull/1948,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1948,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1949,2020-03-10T19:38:21Z,2020-03-12T20:53:41Z,2020-03-12T20:53:44Z,MERGED,True,103,0,3,https://github.com/zack-vii,Feature: added MDSplusAPI to MATLAB for optional access,2,[],https://github.com/MDSplus/mdsplus/pull/1949,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1949,"API does not require any setup other than adding the ./matlab folder to MATLAB path.
API comes with hands-on example.
API is portable and does not require any local binaries if remote connection is used.","API does not require any setup other than adding the ./matlab folder to MATLAB path.
API comes with hands-on example.
API is portable and does not require any local binaries if remote connection is used.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1949,2020-03-10T19:38:21Z,2020-03-12T20:53:41Z,2020-03-12T20:53:44Z,MERGED,True,103,0,3,https://github.com/zack-vii,Feature: added MDSplusAPI to MATLAB for optional access,2,[],https://github.com/MDSplus/mdsplus/pull/1949,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1949#issuecomment-597300502,"API does not require any setup other than adding the ./matlab folder to MATLAB path.
API comes with hands-on example.
API is portable and does not require any local binaries if remote connection is used.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1950,2020-03-11T14:01:57Z,2020-03-12T20:31:47Z,2020-03-12T20:31:54Z,MERGED,True,554,545,16,https://github.com/zack-vii,Fix: old Matlab api; no javalibpath on modern matlab and python3 bridge,3,[],https://github.com/MDSplus/mdsplus/pull/1950,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1950,"java bridge now works out of the box without adding paths to anything but matlab path

addpath(fullfile(getenv(""MDSPLUS_DIR""),""matlab""));
savepath();

python bridge provides workaround for int64 on python2
python bridge now works with python3 as well

briges are only tested when activated
mdstest(true)  % tests explicitly the python bridge
mdstest(false)  % tests explicitly the java bridge","java bridge now works out of the box without adding paths to anything but matlab path

addpath(fullfile(getenv(""MDSPLUS_DIR""),""matlab""));
savepath();

python bridge provides workaround for int64 on python2
python bridge now works with python3 as well

briges are only tested when activated
mdstest(true)  % tests explicitly the python bridge
mdstest(false)  % tests explicitly the java bridge",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1951,2020-03-11T20:14:41Z,2020-03-12T20:31:19Z,2020-03-13T08:21:54Z,MERGED,True,183,127,11,https://github.com/zack-vii,Fix: mdsdcl parser,8,[],https://github.com/MDSplus/mdsplus/pull/1951,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1951,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1951,2020-03-11T20:14:41Z,2020-03-12T20:31:19Z,2020-03-13T08:21:54Z,MERGED,True,183,127,11,https://github.com/zack-vii,Fix: mdsdcl parser,8,[],https://github.com/MDSplus/mdsplus/pull/1951,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1951#issuecomment-598295831,,@HerveAncher : I finished fixing the mdsdcl parser please check if this also solves your problem,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1951,2020-03-11T20:14:41Z,2020-03-12T20:31:19Z,2020-03-13T08:21:54Z,MERGED,True,183,127,11,https://github.com/zack-vii,Fix: mdsdcl parser,8,[],https://github.com/MDSplus/mdsplus/pull/1951,https://github.com/HerveAncher,3,https://github.com/MDSplus/mdsplus/pull/1951#issuecomment-598603908,,"@zack-vii I have just checked the last alpha branch, and the modification in parser work pretty well! Thanks ;°D",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1951,2020-03-11T20:14:41Z,2020-03-12T20:31:19Z,2020-03-13T08:21:54Z,MERGED,True,183,127,11,https://github.com/zack-vii,Fix: mdsdcl parser,8,[],https://github.com/MDSplus/mdsplus/pull/1951,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1951#issuecomment-598604773,,"awesome, thats great news

Get Outlook for Android<https://aka.ms/ghei36>
…
________________________________
From: HerveAncher <notifications@github.com>
Sent: Friday, March 13, 2020 9:19:24 AM
To: MDSplus/mdsplus <mdsplus@noreply.github.com>
Cc: Timo Schroeder <zack.vii@live.com>; Mention <mention@noreply.github.com>
Subject: Re: [MDSplus/mdsplus] Fix: mdsdcl parser (#1951)


@zack-vii<https://eur05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fzack-vii&data=02%7C01%7C%7Ccae312529c0543fe40c908d7c7273e25%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637196843660241704&sdata=WbX1VvAb89viTomiHe%2By0vVUrusBp3F9bEhV3pJBOsg%3D&reserved=0> I have just checked the last alpha branch, and the modification in parser work pretty well! Thanks ;°D

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub<https://eur05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FMDSplus%2Fmdsplus%2Fpull%2F1951%23issuecomment-598603908&data=02%7C01%7C%7Ccae312529c0543fe40c908d7c7273e25%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637196843660241704&sdata=1gsxJ8VET0RwvPqNgW1k1U94sUTYFBFBQiOKtYFFCgc%3D&reserved=0>, or unsubscribe<https://eur05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FABPRFLW4GNE22SLD4PSGDU3RHHUAZANCNFSM4LF54BUA&data=02%7C01%7C%7Ccae312529c0543fe40c908d7c7273e25%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637196843660251697&sdata=ASmkSAsTNEhaT8CEihXBIA1Pk1auHA6gioalljvX6PE%3D&reserved=0>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1952,2020-03-20T00:42:49Z,2020-03-23T17:34:40Z,2020-03-23T17:34:40Z,MERGED,True,28,7,2,https://github.com/zack-vii,"Feature: filters, mdsrecord and tracebacks",3,[],https://github.com/MDSplus/mdsplus/pull/1952,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1952,"adds useful filters to mdsrecord
uses a safer way to address device nodes in with_mdsrecords
restored traceback in mdsip logs when piped to file","adds useful filters to mdsrecord
uses a safer way to address device nodes in with_mdsrecords
restored traceback in mdsip logs when piped to file",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1954,2020-03-23T16:28:37Z,2020-03-23T17:06:50Z,2020-04-08T14:23:02Z,MERGED,True,12,12,3,https://github.com/zack-vii,Fix: use single quotes to make a matlab string,1,[],https://github.com/MDSplus/mdsplus/pull/1954,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1954,should fix #1953,should fix #1953,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1959,2020-03-30T12:21:13Z,2020-03-30T12:49:05Z,2020-03-30T12:49:08Z,MERGED,True,2,2,1,https://github.com/zack-vii,Fix: Tree.PyDevice should use tostr,1,[],https://github.com/MDSplus/mdsplus/pull/1959,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1959,enables addDevice with python3,enables addDevice with python3,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1960,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608292906,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","I followed your instructions, installed your branch and added jDevices to classpath, but I cannot set-up devices included in jDevices. I did not understand whether the device bean classes have been already moved to jDevices. If not I can do it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608314157,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",they have not. they would have to be piacked with jtraverser2 or they woild conflict with jtraverser. you need to manually compile them and add them to classpath for testing. they require jtraverser2.jar and jscope.jar,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608333465,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","It is not a big work to move the java beans stuff from jTraverser to jdevices, jTraverser does not make use of them. I will do it next week, after I have finished preparing the MARTe stuff for Josh. I am looking forward to using jTraverser2 that may become the default tool for MDSplus. One thing however:  when openng a pulse file in jTraverser2 the default is readonly, I woild prefer normal because our users would be otherwise confused.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608335085,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","You missed the point. if we want to keep jtraverer, we need to pack the new devicebean stuff with jtraverser2 as they use the same class names but different content. the files that need to go into jTraverser2 are in java/jdevices/src/jtraverser2/java",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608338700,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","I am just saying that it is possible to move the java beans stuff for jdevices from jTraverser to jdevices. jTraverser does not need the device beans classes except when issuing a device set-up (just calling Setup method). The device bean classes will be used privately by jDevices.
Therefore there will be no confilict with jTraverser and jTraverser2 about device setups, both will be using the  jdevices.jar classes.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608339602,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","Of course thi will require re-writing some code of the java beans classes that will not use anymore jTraverser classes for writing.
Now I see the point: for writing and reading in the tree the device bean classes need an abstracton (now they use jTraverser classes).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608339775,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","no there will be a conflict as you will have two files each. one that works with jtraverser and one that works with jtraverser2.
Device* (jt) and Device* (jt2)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608340588,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","Ok, I need to look a little into them. We may think of a a common interface to be implemented by jTraverser and jTraverser2. Such an object will be passed to device beans classes for interacting with the pulse file. In any case some cleaning of the device bean classes is needed.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608340769,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",well we could also solve this with abstract classes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,11,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608341673,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","exactly. Next week I plan to do this exercise in jTraverser, i.e. cleaning the device beans classes and using such an object for tree operation. Once it has been made, it suffices providing a different implementation/subclass for jTraverser2 and then there would be no incompatibilities.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608344237,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","Then please investigate the Devcie* adaptations for jtraverser2. so you can draw the line for the interface as close to the devicebeans as possible. e.g. use int typed nids, and keep in mind that subtree holds both the context and the api but i guess we can solve this by iterating over the interface next week",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,13,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-608353940,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","Ok, give me a few days for finishing the marte stuff, and then I will work on it. Not getting bored even if locked........",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,14,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-611661853,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",#1977 paves the way for the pydevices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,15,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627245107,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","I am now working on a first re-organzation of jTraverser representing the first step towards the jTraverser-independent device beans (and device forms) implementation. In this step a java interface (TreeInterface.java) is being defined that defines all the data access operations. In this first implementation, this interface relies on MDSplus.Data objects, not to access the tree (left to the TreeInterface implementation) but to provide a generic container for data to be used by device beans.  We shall discuss later if this is the best solution or if there other ways to represent data to be read/written by device beans.
I would like to merge this version into alpha (when it will be ready, after rebasing it on alpha) before proceeding to the next step, that is the separation in a new directory of all the device beans stuff that will be independent from jTraverser.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,16,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627290653,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",Can we remove teh DeviceBeans.jar as it is a copy of jTraverser.jar on can use that instead,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,17,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627310652,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","I dont think we need to EXPOSE Data as we could have getFloatArray(Object) methods in the interface. the devicebeans only know Strings for expressions and raw arrays float[] int[] etc. for data.
nids may be exposed as Object as well or int if needed. all api functionality should be hidden in the interface.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,18,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627311712,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","DeviceBeans.jar is currently a copy of jTraverser, but it will be a self-consistent jar containing only the device beans. It is required by netbeans for building Device forms. DeviceBeans.jar should be mainained, or it will break the netbeans applications people use here for building device forms, that are configured using that jar.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,19,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627313393,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","Do you mean that when reading some composite data from the interface, such as an action or a signal, you get the decompiled version? And viceversa?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,20,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627313738,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","for nids no problem, they are already int",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,21,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627314336,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",plus getInt() and getFloat() for other operations such as displaying a waveform?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,22,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627314895,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","Do you mean that when reading some composite data from the interface, such as an action or a signal, you get the decompiled version? And viceversa?

YEs since in teh end it is put in a TextEdit form anyway",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,23,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627315948,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","Ok, I will do so",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,24,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627316652,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","plus getInt() and getFloat() for other operations such as displaying a waveform?

correct. well for the datatypes we need. Its probably copy and paste to do it for all native ones.
each in their Scalar and Array form and String.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,25,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627317595,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","DeviceBeans.jar is currently a copy of jTraverser, but it will be a self-consistent jar containing only the device beans. It is required by netbeans for building Device forms. DeviceBeans.jar should be mainained, or it will break the netbeans applications people use here for building device forms, that are configured using that jar.

It should be build in jDevices then.
nothing breaks if they would use jTraverser.jar instead of DeviceBeans.jar right. or is the name important.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,26,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627319031,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","If you change the name, you need to change the configuration of all the netbeans builder tools people use here..... DeviceBeans.jar will be eventually a jar containing only the device beans, not the devices themselves. It is a jar that is fed to netbeans.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,27,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627319880,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",This can be handled via a mklink though,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,28,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627321179,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",Most people use it on Windows. It makes sense to keep it: it is (it will be) the minimal jar that is required by netbeans.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,29,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627321789,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","so what does it need atm if it does not need anything from jtraverser
or does it only need teh Device* classes",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,30,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627322320,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",will that become the interface ... it currently does not contain any DEvice class as those are in jDevcies.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,31,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627322414,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",The java beans contain methods that are intended to be called only by a Java builder tool as Netbeans,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,32,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627322955,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",Those methods are used by the java IDE for building device forms,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,33,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627323680,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",At the same time those bean object will build up the components of device forms in jdevices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,34,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627323801,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",That's why they should live in a separate jar,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,35,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627323820,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",So the Device*.java modules that are listed in Manifest,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,36,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627324139,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",The beans that are known by the IDE are declared in the Manifest,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,37,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627415398,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",I changed it to use ln to link the file so on linux systems it will be just a symbolic link.. on windows it should be what it was before we implemented make-jars. RP #2022,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,38,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627417347,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","For now ok, but it will be again a separate jar when device beans will be hosted in a separate directory (other than jtraverser and jdevices)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,39,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-627419140,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","sure, but i figured i weave it in as i was fixing the build scripts for windows anyway. so HerveAncher can move on. If you have a minute can you review the PR and then we should rebase",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,40,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-628283995,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",I rebased the upstream branch. jtraverser java files should be unaffected though,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,41,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-628416723,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",I am working on a separate branch affecting only jTraverser and mdsobjects java. I will rebase it to the current alpha before issuing a PR (I need some days more),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,42,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637752563,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","@GabrieleManduchi : i used your branch gm-new-jtraverser and adapted teh interface to meet the requirements for maven and jtraverser2. also I removed the dependence of DeviceBeans and use reflection instead. this way devicebeans is more a plugin. we need to update the caller scripts, no?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,43,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637758332,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","They have already been changed (for jTraverser, CompileTree, DecompileTree, jDispatcherIp)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,44,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637758769,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","If you commit your changes in the branch, I can try it here",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,45,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637759694,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",this one is compete but the scripts for jtraverser2 then.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,46,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637760554,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",hm you missed *.bat for windows,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,47,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637761929,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","The directory and Makefile.am for DeviceBeans have been made, not sure I added DeviceBeans  in the main make",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/GabrieleManduchi,48,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637762383,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958","Oh  now I read better....yes, I did not add the .bat yet",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,49,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637770099,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",I think this is it then ready for testing.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,50,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637775757,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",the windows installer should update soon and will be available in https://mdsplus.org/dist/release/Windows/zck_jt2_devb/MDSplus-zck_jt2_devb-7.105-3.exe,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,51,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637784313,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",I messed up the batch files but rest should work,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,52,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637803729,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",Great I tested jTraverser2 and jTraverser with DEMOADC on Windows and it works.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1960,2020-03-30T18:56:46Z,2020-06-03T06:32:35Z,2020-11-16T13:56:05Z,MERGED,True,10772,21764,287,https://github.com/zack-vii,Feature: jTraverser and DeviceBeans,18,[],https://github.com/MDSplus/mdsplus/pull/1960,https://github.com/zack-vii,53,https://github.com/MDSplus/mdsplus/pull/1960#issuecomment-637804993,"This is for sharing progress with @GabrieleManduchi
TODO:

build jar and add to jTraverser2 startup scripts
fix jTraverser.bat for windows
add pydevice pkg
update the javatraverser?.bat (issue #2021)
maybe remove the .mak files

@GabrieleManduchi
TEST new editors on dtacq example

add pydevices from repo tp MDS_PYDEVICE_PATH
start jTraverser2
open new tree
add ACQ2106_ACQ480x6
check out Setup Device

TEST devicebeans support

complie java/jdevices/src/jtraverser2/java into $OUTDIR
$OUTDIR,jTraverser2.jar;jScope.jar;jDevices.jar to classpath and start jTraverser2
open new tree
add device
check out Setup Device

waves and others seem to work except the ones mentioned in #1958",mdsobjects was missing get/setNciFlags i co9mmented it out and replace4d it with a java implementation.. you may switch back to native code onch mdsobjects is fixed. but maybe this could be done in a subsequent PR.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1961,2020-03-31T20:55:19Z,2020-04-09T16:46:25Z,2020-04-09T16:46:28Z,MERGED,True,114,115,7,https://github.com/zack-vii,Fix: fixed issues preventing use with pypy,11,[],https://github.com/MDSplus/mdsplus/pull/1961,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1961,"allows use with much faster pypy
numpy is tricky to install but MDSplus does not need all features and can be imported with these fixes
tested with pypy2.7.12 form debian buster repo (pypy-numpy installed manually)
some fixes may also improve performance by using pythonic style and directer conversion","allows use with much faster pypy
numpy is tricky to install but MDSplus does not need all features and can be imported with these fixes
tested with pypy2.7.12 form debian buster repo (pypy-numpy installed manually)
some fixes may also improve performance by using pythonic style and directer conversion",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1961,2020-03-31T20:55:19Z,2020-04-09T16:46:25Z,2020-04-09T16:46:28Z,MERGED,True,114,115,7,https://github.com/zack-vii,Fix: fixed issues preventing use with pypy,11,[],https://github.com/MDSplus/mdsplus/pull/1961,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1961#issuecomment-607348080,"allows use with much faster pypy
numpy is tricky to install but MDSplus does not need all features and can be imported with these fixes
tested with pypy2.7.12 form debian buster repo (pypy-numpy installed manually)
some fixes may also improve performance by using pythonic style and directer conversion","dataUnitTest works except
+ # pypy
- # CPython
  numpy.array([MDSplus.dTRUE()]).dtype
+ dtype('object')
- dtype('uint8')
the issue lies within numpy bins that does different checks on the list elements. - nofix?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1961,2020-03-31T20:55:19Z,2020-04-09T16:46:25Z,2020-04-09T16:46:28Z,MERGED,True,114,115,7,https://github.com/zack-vii,Fix: fixed issues preventing use with pypy,11,[],https://github.com/MDSplus/mdsplus/pull/1961,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1961#issuecomment-607375474,"allows use with much faster pypy
numpy is tricky to install but MDSplus does not need all features and can be imported with these fixes
tested with pypy2.7.12 form debian buster repo (pypy-numpy installed manually)
some fixes may also improve performance by using pythonic style and directer conversion","some performance boost fro CPython
- #alpha
+ #zck_python
time for i in `seq 1 10` ; do PYTHONPATH=$MDSPLUS_DIR/python nice -n 20 python $MDSPLUS_DIR/python/MDSplus/tests/dataUnitTest.py all; done
- real    0m15.693s
- user    0m15.412s
+ user    0m12.880s
- sys     0m0.228s
+ sys     0m0.264s
pypy succeeds treeUnitTest",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1963,2020-04-01T11:59:41Z,2020-04-01T12:35:46Z,2020-04-01T13:36:50Z,MERGED,True,3,2,1,https://github.com/zack-vii,Build: updated deploy/updatepkg.sh,1,[],https://github.com/MDSplus/mdsplus/pull/1963,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1963,resolves issue #1962,resolves issue #1962,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1964,2020-04-01T13:05:25Z,2020-04-01T13:18:15Z,2020-04-01T13:26:03Z,CLOSED,False,868,70,5,https://github.com/GabrieleManduchi,Gm python streaming,8,[],https://github.com/MDSplus/mdsplus/pull/1964,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1964,Update of node.js server and associated html files  for streaming visualization,Update of node.js server and associated html files  for streaming visualization,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1964,2020-04-01T13:05:25Z,2020-04-01T13:18:15Z,2020-04-01T13:26:03Z,CLOSED,False,868,70,5,https://github.com/GabrieleManduchi,Gm python streaming,8,[],https://github.com/MDSplus/mdsplus/pull/1964,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1964#issuecomment-607244009,Update of node.js server and associated html files  for streaming visualization,It appears thet gm-python-streaming is too long!!!!!!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1965,2020-04-01T13:23:37Z,2020-04-01T15:17:58Z,2020-04-01T15:17:59Z,MERGED,True,868,70,5,https://github.com/GabrieleManduchi,Gm streaming,2,[],https://github.com/MDSplus/mdsplus/pull/1965,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1965,New version of Node.js and associated html fies for straming viualization,New version of Node.js and associated html fies for straming viualization,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1965,2020-04-01T13:23:37Z,2020-04-01T15:17:58Z,2020-04-01T15:17:59Z,MERGED,True,868,70,5,https://github.com/GabrieleManduchi,Gm streaming,2,[],https://github.com/MDSplus/mdsplus/pull/1965,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1965#issuecomment-607249571,New version of Node.js and associated html fies for straming viualization,"yest the limit is 12 character for teh branch name.. sorry: Please dont forget to rebase your project to most recent alpha. i figured if you
git pull upstream alpha

and then
git rebase upstream/alpha

you are less likely to encounter a conflict",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1965,2020-04-01T13:23:37Z,2020-04-01T15:17:58Z,2020-04-01T15:17:59Z,MERGED,True,868,70,5,https://github.com/GabrieleManduchi,Gm streaming,2,[],https://github.com/MDSplus/mdsplus/pull/1965,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1965#issuecomment-607260132,New version of Node.js and associated html fies for straming viualization,"I performed the rebase and force pushed to this branch please
git fetch upstream
git reset --hard upstream/gm-streaming

where upstream points to https://github.com/MDSPlus/mdsplus.git",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1967,2020-04-01T23:51:13Z,2020-04-02T12:59:47Z,2020-04-02T12:59:49Z,MERGED,True,339,251,5,https://github.com/zack-vii,Fix: tdi parser to allow keywords for labels,5,[],https://github.com/MDSplus/mdsplus/pull/1967,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1967,"is supposed to fix #1966
However, puts back some shift/reduce conflicts.
Ideally one would write down all syntax and regroup but this seems unlikely as not all old code may be compatible with a clean parser.","is supposed to fix #1966
However, puts back some shift/reduce conflicts.
Ideally one would write down all syntax and regroup but this seems unlikely as not all old code may be compatible with a clean parser.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1967,2020-04-01T23:51:13Z,2020-04-02T12:59:47Z,2020-04-02T12:59:49Z,MERGED,True,339,251,5,https://github.com/zack-vii,Fix: tdi parser to allow keywords for labels,5,[],https://github.com/MDSplus/mdsplus/pull/1967,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1967#issuecomment-607822451,"is supposed to fix #1966
However, puts back some shift/reduce conflicts.
Ideally one would write down all syntax and regroup but this seems unlikely as not all old code may be compatible with a clean parser.","its already in the pr

@zack-vii
Tests: case is supposed to be ok for path
9109e7e",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1968,2020-04-03T13:19:19Z,2020-04-09T16:45:55Z,2020-04-09T16:45:57Z,MERGED,True,733,102,12,https://github.com/GabrieleManduchi,Gm marte2 sample,4,[],https://github.com/MDSplus/mdsplus/pull/1968,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1968,Update MARTe2 MDSplus framework + devices for Demo,Update MARTe2 MDSplus framework + devices for Demo,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1968,2020-04-03T13:19:19Z,2020-04-09T16:45:55Z,2020-04-09T16:45:57Z,MERGED,True,733,102,12,https://github.com/GabrieleManduchi,Gm marte2 sample,4,[],https://github.com/MDSplus/mdsplus/pull/1968,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/1968#issuecomment-608450109,Update MARTe2 MDSplus framework + devices for Demo,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1968,2020-04-03T13:19:19Z,2020-04-09T16:45:55Z,2020-04-09T16:45:57Z,MERGED,True,733,102,12,https://github.com/GabrieleManduchi,Gm marte2 sample,4,[],https://github.com/MDSplus/mdsplus/pull/1968,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/1968#issuecomment-608477971,Update MARTe2 MDSplus framework + devices for Demo,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1968,2020-04-03T13:19:19Z,2020-04-09T16:45:55Z,2020-04-09T16:45:57Z,MERGED,True,733,102,12,https://github.com/GabrieleManduchi,Gm marte2 sample,4,[],https://github.com/MDSplus/mdsplus/pull/1968,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/1968#issuecomment-608517164,Update MARTe2 MDSplus framework + devices for Demo,retest this please again,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1968,2020-04-03T13:19:19Z,2020-04-09T16:45:55Z,2020-04-09T16:45:57Z,MERGED,True,733,102,12,https://github.com/GabrieleManduchi,Gm marte2 sample,4,[],https://github.com/MDSplus/mdsplus/pull/1968,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1968#issuecomment-608629546,Update MARTe2 MDSplus framework + devices for Demo,rebase this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1968,2020-04-03T13:19:19Z,2020-04-09T16:45:55Z,2020-04-09T16:45:57Z,MERGED,True,733,102,12,https://github.com/GabrieleManduchi,Gm marte2 sample,4,[],https://github.com/MDSplus/mdsplus/pull/1968,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1968#issuecomment-608636095,Update MARTe2 MDSplus framework + devices for Demo,reason for the tests to fail was an issue with docker on one of the workers,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1968,2020-04-03T13:19:19Z,2020-04-09T16:45:55Z,2020-04-09T16:45:57Z,MERGED,True,733,102,12,https://github.com/GabrieleManduchi,Gm marte2 sample,4,[],https://github.com/MDSplus/mdsplus/pull/1968,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/1968#issuecomment-608649570,Update MARTe2 MDSplus framework + devices for Demo,"I was looking at the workers trying to disable the ones that were
broken.  But then had a meeting.  I guess it knows to ignore the ones
that are down, but (obviously) not the ones that are broken

Thanks
…
-Josh",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1969,2020-04-05T20:23:35Z,2020-04-09T17:38:56Z,2020-11-16T13:56:17Z,MERGED,True,144,59,4,https://github.com/zack-vii,Feature: tditest added help and quiet mode: added arguments,2,[],https://github.com/MDSplus/mdsplus/pull/1969,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1969,"you can do shebang
#!/usr/local/mdpslus/bin/tditest -q
and call the tdi file with arguments that will be stored  _$0 _$1 ... idends","you can do shebang
#!/usr/local/mdpslus/bin/tditest -q
and call the tdi file with arguments that will be stored  _$0 _$1 ... idends",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1969,2020-04-05T20:23:35Z,2020-04-09T17:38:56Z,2020-11-16T13:56:17Z,MERGED,True,144,59,4,https://github.com/zack-vii,Feature: tditest added help and quiet mode: added arguments,2,[],https://github.com/MDSplus/mdsplus/pull/1969,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1969#issuecomment-609815271,"you can do shebang
#!/usr/local/mdpslus/bin/tditest -q
and call the tdi file with arguments that will be stored  _$0 _$1 ... idends","this time docker was not running on mfews10.
fixed by logging onto it and executing systemctl start docker
retest this please",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1969,2020-04-05T20:23:35Z,2020-04-09T17:38:56Z,2020-11-16T13:56:17Z,MERGED,True,144,59,4,https://github.com/zack-vii,Feature: tditest added help and quiet mode: added arguments,2,[],https://github.com/MDSplus/mdsplus/pull/1969,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1969#issuecomment-611641713,"you can do shebang
#!/usr/local/mdpslus/bin/tditest -q
and call the tdi file with arguments that will be stored  _$0 _$1 ... idends","the --quiet flag is also veryusefull when debuggin as you done end up debugging the Write(,DEBUG( ))
so you dont need to skip thru all of your breakpoints",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1971,2020-04-07T07:51:35Z,2020-04-07T08:06:13Z,2020-04-07T08:07:41Z,CLOSED,False,1,1,1,https://github.com/GabrieleManduchi,Fix : do not generate exception if debug not specified,1,[],https://github.com/MDSplus/mdsplus/pull/1971,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1971,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1972,2020-04-07T08:10:00Z,2020-04-07T09:47:48Z,2020-04-07T09:47:49Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,Fix : do not generate exception if debug not specified,1,[],https://github.com/MDSplus/mdsplus/pull/1972,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1972,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1973,2020-04-07T23:20:39Z,2020-04-09T16:46:55Z,2020-04-09T16:48:20Z,MERGED,True,70,74,1,https://github.com/zack-vii,Fix: dropped the concerns about conflicts,3,[],https://github.com/MDSplus/mdsplus/pull/1973,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1973,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1974,2020-04-08T13:46:27Z,2020-04-08T17:30:54Z,2020-04-08T17:30:58Z,MERGED,True,3,2,1,https://github.com/zack-vii,Fix: makeSegments bug in check_compress_dim,1,"['bug', 'HIGH PRIORITY']",https://github.com/MDSplus/mdsplus/pull/1974,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1974,Resolves TREE-E-INVDTPUSG error on MakeSegment due to bug in check_compress_dim.,Resolves TREE-E-INVDTPUSG error on MakeSegment due to bug in check_compress_dim.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1974,2020-04-08T13:46:27Z,2020-04-08T17:30:54Z,2020-04-08T17:30:58Z,MERGED,True,3,2,1,https://github.com/zack-vii,Fix: makeSegments bug in check_compress_dim,1,"['bug', 'HIGH PRIORITY']",https://github.com/MDSplus/mdsplus/pull/1974,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1974#issuecomment-610976296,Resolves TREE-E-INVDTPUSG error on MakeSegment due to bug in check_compress_dim.,"sure: but i found that the method is called twice. need to go back to my desk.
this fixed writing but seems reading is now a problem
I will add some tests once i found the other issue",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1974,2020-04-08T13:46:27Z,2020-04-08T17:30:54Z,2020-04-08T17:30:58Z,MERGED,True,3,2,1,https://github.com/zack-vii,Fix: makeSegments bug in check_compress_dim,1,"['bug', 'HIGH PRIORITY']",https://github.com/MDSplus/mdsplus/pull/1974,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1974#issuecomment-610979114,Resolves TREE-E-INVDTPUSG error on MakeSegment due to bug in check_compress_dim.,strange that it is now covered by our tests,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1974,2020-04-08T13:46:27Z,2020-04-08T17:30:54Z,2020-04-08T17:30:58Z,MERGED,True,3,2,1,https://github.com/zack-vii,Fix: makeSegments bug in check_compress_dim,1,"['bug', 'HIGH PRIORITY']",https://github.com/MDSplus/mdsplus/pull/1974,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1974#issuecomment-610993708,Resolves TREE-E-INVDTPUSG error on MakeSegment due to bug in check_compress_dim.,well now its easier to explain.. begin_sinfo was calling checkcompress with 'mdsdsc_xd_t' but checkcompress expected 'mdsdsc_xd_t *',True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1974,2020-04-08T13:46:27Z,2020-04-08T17:30:54Z,2020-04-08T17:30:58Z,MERGED,True,3,2,1,https://github.com/zack-vii,Fix: makeSegments bug in check_compress_dim,1,"['bug', 'HIGH PRIORITY']",https://github.com/MDSplus/mdsplus/pull/1974,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1974#issuecomment-611000514,Resolves TREE-E-INVDTPUSG error on MakeSegment due to bug in check_compress_dim.,writing and reading works now.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1975,2020-04-08T15:30:52Z,2020-04-08T22:21:55Z,2020-04-08T22:21:55Z,CLOSED,False,1723,152,15,https://github.com/seanalsop,New D-TACQ devices for streaming and transient captures.,46,[],https://github.com/MDSplus/mdsplus/pull/1975,https://github.com/seanalsop,1,https://github.com/MDSplus/mdsplus/pull/1975,"Both acq1001 and acq2106 are included.
Also included is a new copy of acq400_hapi, which (some of) the code in the devices relies on.","Both acq1001 and acq2106 are included.
Also included is a new copy of acq400_hapi, which (some of) the code in the devices relies on.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1975,2020-04-08T15:30:52Z,2020-04-08T22:21:55Z,2020-04-08T22:21:55Z,CLOSED,False,1723,152,15,https://github.com/seanalsop,New D-TACQ devices for streaming and transient captures.,46,[],https://github.com/MDSplus/mdsplus/pull/1975,https://github.com/MDSplusBuilder,2,https://github.com/MDSplus/mdsplus/pull/1975#issuecomment-611027282,"Both acq1001 and acq2106 are included.
Also included is a new copy of acq400_hapi, which (some of) the code in the devices relies on.","Can one of the admins verify this patch? If it looks ok add a comment to the pull request containing the phrase ""ok to test""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1975,2020-04-08T15:30:52Z,2020-04-08T22:21:55Z,2020-04-08T22:21:55Z,CLOSED,False,1723,152,15,https://github.com/seanalsop,New D-TACQ devices for streaming and transient captures.,46,[],https://github.com/MDSplus/mdsplus/pull/1975,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/1975#issuecomment-611037059,"Both acq1001 and acq2106 are included.
Also included is a new copy of acq400_hapi, which (some of) the code in the devices relies on.",ok to test,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1975,2020-04-08T15:30:52Z,2020-04-08T22:21:55Z,2020-04-08T22:21:55Z,CLOSED,False,1723,152,15,https://github.com/seanalsop,New D-TACQ devices for streaming and transient captures.,46,[],https://github.com/MDSplus/mdsplus/pull/1975,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1975#issuecomment-611062880,"Both acq1001 and acq2106 are included.
Also included is a new copy of acq400_hapi, which (some of) the code in the devices relies on.",rebase this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1975,2020-04-08T15:30:52Z,2020-04-08T22:21:55Z,2020-04-08T22:21:55Z,CLOSED,False,1723,152,15,https://github.com/seanalsop,New D-TACQ devices for streaming and transient captures.,46,[],https://github.com/MDSplus/mdsplus/pull/1975,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1975#issuecomment-611063438,"Both acq1001 and acq2106 are included.
Also included is a new copy of acq400_hapi, which (some of) the code in the devices relies on.",also unfortunatly teh branch name can only have 12 chars,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1975,2020-04-08T15:30:52Z,2020-04-08T22:21:55Z,2020-04-08T22:21:55Z,CLOSED,False,1723,152,15,https://github.com/seanalsop,New D-TACQ devices for streaming and transient captures.,46,[],https://github.com/MDSplus/mdsplus/pull/1975,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/1975#issuecomment-611081353,"Both acq1001 and acq2106 are included.
Also included is a new copy of acq400_hapi, which (some of) the code in the devices relies on.","and if you are at it. it would be great if the devices would work with both python2 and 3
e.g.:
if sys.version_info<(3,):
    import Queue as queue
else:
    import queue",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1975,2020-04-08T15:30:52Z,2020-04-08T22:21:55Z,2020-04-08T22:21:55Z,CLOSED,False,1723,152,15,https://github.com/seanalsop,New D-TACQ devices for streaming and transient captures.,46,[],https://github.com/MDSplus/mdsplus/pull/1975,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/1975#issuecomment-611224741,"Both acq1001 and acq2106 are included.
Also included is a new copy of acq400_hapi, which (some of) the code in the devices relies on.",PR :  #1976 has these issues addressed and replaces this PR,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1976,2020-04-08T17:13:37Z,2020-04-09T16:55:09Z,2020-04-09T16:55:10Z,MERGED,True,586,1185,17,https://github.com/zack-vii,New D-TACQ devices for streaming and transient captures. (rebase),48,[],https://github.com/MDSplus/mdsplus/pull/1976,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1976,#1975,#1975,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1976,2020-04-08T17:13:37Z,2020-04-09T16:55:09Z,2020-04-09T16:55:10Z,MERGED,True,586,1185,17,https://github.com/zack-vii,New D-TACQ devices for streaming and transient captures. (rebase),48,[],https://github.com/MDSplus/mdsplus/pull/1976,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1976#issuecomment-611088721,#1975,"we should not ship https://github.com/petermilne/acq400_hapi
at least not as proper part but as submodule.
I would suggest to throw a warning if module is not found mentioning this url",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1976,2020-04-08T17:13:37Z,2020-04-09T16:55:09Z,2020-04-09T16:55:10Z,MERGED,True,586,1185,17,https://github.com/zack-vii,New D-TACQ devices for streaming and transient captures. (rebase),48,[],https://github.com/MDSplus/mdsplus/pull/1976,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1976#issuecomment-611088921,#1975,still should be pyhton3 ready,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1976,2020-04-08T17:13:37Z,2020-04-09T16:55:09Z,2020-04-09T16:55:10Z,MERGED,True,586,1185,17,https://github.com/zack-vii,New D-TACQ devices for streaming and transient captures. (rebase),48,[],https://github.com/MDSplus/mdsplus/pull/1976,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/1976#issuecomment-611120112,#1975,"given that acq400_hapi is also used by acq400Devcies it is advised not to ship in at submodule of HTSDevcies.
also packaging need to be updated. we should combine all pure python pydevices into package mdsplus-pydevices.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1976,2020-04-08T17:13:37Z,2020-04-09T16:55:09Z,2020-04-09T16:55:10Z,MERGED,True,586,1185,17,https://github.com/zack-vii,New D-TACQ devices for streaming and transient captures. (rebase),48,[],https://github.com/MDSplus/mdsplus/pull/1976,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/1976#issuecomment-611193842,#1975,fixed acq400Devices so they would work with and without acq400_base also fixed Queue,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1977,2020-04-08T22:09:15Z,2021-08-18T16:17:10Z,2021-08-18T16:17:11Z,CLOSED,False,7714,3754,295,https://github.com/zack-vii,Feature: unified pydevices,5,[],https://github.com/MDSplus/mdsplus/pull/1977,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1977,but mit and rfx as they come with c lib and java stuff,but mit and rfx as they come with c lib and java stuff,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1977,2020-04-08T22:09:15Z,2021-08-18T16:17:10Z,2021-08-18T16:17:11Z,CLOSED,False,7714,3754,295,https://github.com/zack-vii,Feature: unified pydevices,5,[],https://github.com/MDSplus/mdsplus/pull/1977,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1977#issuecomment-682487063,but mit and rfx as they come with c lib and java stuff,"Timo -

   Reorg sounds good.  Can we discuss ?  When is good for you?
On 8/26/20 3:55 PM, Timo Schroeder wrote:

 @zack-vii <https://github.com/zack-vii> requested your review on:
 #1977 <#1977> Feature: unified
 pydevices.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#1977 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZP5TYNAWHYGRWLQIN3SCVSBNANCNFSM4MEIWDHQ>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1977,2020-04-08T22:09:15Z,2021-08-18T16:17:10Z,2021-08-18T16:17:11Z,CLOSED,False,7714,3754,295,https://github.com/zack-vii,Feature: unified pydevices,5,[],https://github.com/MDSplus/mdsplus/pull/1977,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/1977#issuecomment-901247568,but mit and rfx as they come with c lib and java stuff,closed as it is now to tedious.. to recover.. it will remain in history,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1978,2020-04-08T22:59:10Z,2020-04-09T16:40:29Z,2020-04-09T16:40:32Z,MERGED,True,1,0,1,https://github.com/zack-vii,Tests: test compress_segments,1,[],https://github.com/MDSplus/mdsplus/pull/1978,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1978,delivered the test that was missing on PR #1974,delivered the test that was missing on PR #1974,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1979,2020-04-08T23:03:30Z,2020-04-09T16:22:14Z,2020-04-09T16:22:15Z,MERGED,True,268,238,5,https://github.com/zack-vii,Fix: makeSegments bug in begin_check calling checkcompress,5,"['bug', 'stable only', 'HIGH PRIORITY']",https://github.com/MDSplus/mdsplus/pull/1979,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1979,"apply fix and ad test to stable too
#1974 #1978","apply fix and ad test to stable too
#1974 #1978",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1980,2020-04-09T08:32:30Z,2020-04-09T16:42:11Z,2020-04-09T16:42:15Z,MERGED,True,160,160,1,https://github.com/zack-vii, Build: upgraded github access,2,[],https://github.com/MDSplus/mdsplus/pull/1980,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1980,should resolve issue #1970,should resolve issue #1970,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1982,2020-04-10T12:38:46Z,2020-04-10T12:50:07Z,2020-05-04T12:57:35Z,CLOSED,False,1,1,1,https://github.com/joshStillerman,Fix: python Event.stream not using signal name,1,[],https://github.com/MDSplus/mdsplus/pull/1982,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1982,"The python entrypoint for Event.stream always used the eventname
'STREAMING'.  Changed to use the input argument 'signal'","The python entrypoint for Event.stream always used the eventname
'STREAMING'.  Changed to use the input argument 'signal'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1982,2020-04-10T12:38:46Z,2020-04-10T12:50:07Z,2020-05-04T12:57:35Z,CLOSED,False,1,1,1,https://github.com/joshStillerman,Fix: python Event.stream not using signal name,1,[],https://github.com/MDSplus/mdsplus/pull/1982,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1982#issuecomment-612015260,"The python entrypoint for Event.stream always used the eventname
'STREAMING'.  Changed to use the input argument 'signal'",name to long,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1983,2020-04-10T12:45:47Z,2020-04-13T16:57:37Z,2020-05-04T12:58:08Z,CLOSED,False,1,1,1,https://github.com/joshStillerman,Fix: python Event.stream not using signal name,1,[],https://github.com/MDSplus/mdsplus/pull/1983,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/1983,"The python entrypoint for Event.stream always used the eventname
'STREAMING'.  Changed to use the input argument 'signal'","The python entrypoint for Event.stream always used the eventname
'STREAMING'.  Changed to use the input argument 'signal'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1983,2020-04-10T12:45:47Z,2020-04-13T16:57:37Z,2020-05-04T12:58:08Z,CLOSED,False,1,1,1,https://github.com/joshStillerman,Fix: python Event.stream not using signal name,1,[],https://github.com/MDSplus/mdsplus/pull/1983,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/1983#issuecomment-612987462,"The python entrypoint for Event.stream always used the eventname
'STREAMING'.  Changed to use the input argument 'signal'",This is wrong - now I understand,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1985,2020-04-10T14:40:49Z,2020-04-13T16:56:57Z,2020-11-16T13:57:00Z,MERGED,True,2,2,1,https://github.com/zack-vii,Build: truncate long branch names at 12chars,1,[],https://github.com/MDSplus/mdsplus/pull/1985,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1985,"truncate too long branch names at 12 chars atumatically to better support pull requests
fixes #1984","truncate too long branch names at 12 chars atumatically to better support pull requests
fixes #1984",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1988,2020-04-14T12:48:05Z,2020-04-14T16:07:26Z,2020-04-14T16:07:30Z,MERGED,True,25,7,5,https://github.com/zack-vii,"Fix: subscripting signals with test dims; MAP, X_TO_I, and BSEARCH",4,[],https://github.com/MDSplus/mdsplus/pull/1988,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1988,fixes #1987,fixes #1987,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1989,2020-04-14T16:20:04Z,2020-04-14T20:43:30Z,2020-04-14T20:43:34Z,MERGED,True,96,14,47,https://github.com/zack-vii," Fix: subscripting signals with test dims; MAP, X_TO_I, and BSEARCH",2,[],https://github.com/MDSplus/mdsplus/pull/1989,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1989,fixed issue #1987 in stable,fixed issue #1987 in stable,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1990,2020-04-15T10:52:55Z,2020-04-15T12:50:24Z,2020-04-15T12:50:25Z,MERGED,True,523,523,23,https://github.com/GabrieleManduchi,Fix : port RfxDevices to python3,2,[],https://github.com/MDSplus/mdsplus/pull/1990,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1990,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1991,2020-04-16T12:52:30Z,2020-04-16T15:27:43Z,2020-04-16T15:27:46Z,MERGED,True,3,1,1,https://github.com/zack-vii,Fix: getShotDB use default_tree_path if <tree>_path not found,1,[],https://github.com/MDSplus/mdsplus/pull/1991,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1991,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1992,2020-04-16T12:52:51Z,2020-04-16T15:12:59Z,2020-04-16T15:13:06Z,MERGED,True,3,1,1,https://github.com/zack-vii,Fix: getShotDB use default_tree_path if <tree>_path not found,1,[],https://github.com/MDSplus/mdsplus/pull/1992,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1992,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1993,2020-04-16T14:18:42Z,2020-04-16T15:07:34Z,2020-04-16T15:07:35Z,MERGED,True,172,418,9,https://github.com/GabrieleManduchi,Gm redpitaya,2,[],https://github.com/MDSplus/mdsplus/pull/1993,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/1993,"Up-to date RedPitaya ADC support. Single and multiple triggers, level driven triggering, internal, external clock and DIO4 highway clock and events","Up-to date RedPitaya ADC support. Single and multiple triggers, level driven triggering, internal, external clock and DIO4 highway clock and events",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1996,2020-04-20T08:49:34Z,2020-04-21T19:39:00Z,2020-04-21T19:39:01Z,MERGED,True,1,0,1,https://github.com/zack-vii,Fix: added missing SET NODE in tcl help summary,2,[],https://github.com/MDSplus/mdsplus/pull/1996,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1996,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1997,2020-04-20T23:05:56Z,2021-02-22T21:38:12Z,2021-02-22T21:38:12Z,CLOSED,False,489,50,6,https://github.com/santorofer,Feature: Add ACQ WRPG device class,32,['notest'],https://github.com/MDSplus/mdsplus/pull/1997,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/1997,"This PR contains basically one additions and 3 changes:
Addition:

New MDSplus device class to create and load an STL table into the D-TACQ WRPG. These are in acq2106_WRPG.py.

Changes:

Changes to the D-TACQ's new streaming device class. The controls or knobs to the WR clocks were added, as well as the triggerig highway to use WR messaging as triggers.
Changes to the deploy packaging, Debina and Redhat, adding the new device class.","This PR contains basically one additions and 3 changes:
Addition:

New MDSplus device class to create and load an STL table into the D-TACQ WRPG. These are in acq2106_WRPG.py.

Changes:

Changes to the D-TACQ's new streaming device class. The controls or knobs to the WR clocks were added, as well as the triggerig highway to use WR messaging as triggers.
Changes to the deploy packaging, Debina and Redhat, adding the new device class.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1997,2020-04-20T23:05:56Z,2021-02-22T21:38:12Z,2021-02-22T21:38:12Z,CLOSED,False,489,50,6,https://github.com/santorofer,Feature: Add ACQ WRPG device class,32,['notest'],https://github.com/MDSplus/mdsplus/pull/1997,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/1997#issuecomment-617081058,"This PR contains basically one additions and 3 changes:
Addition:

New MDSplus device class to create and load an STL table into the D-TACQ WRPG. These are in acq2106_WRPG.py.

Changes:

Changes to the D-TACQ's new streaming device class. The controls or knobs to the WR clocks were added, as well as the triggerig highway to use WR messaging as triggers.
Changes to the deploy packaging, Debina and Redhat, adding the new device class.",fixup in PR #1998,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1998,2020-04-21T09:59:08Z,2020-04-21T17:38:30Z,2020-11-16T13:57:09Z,CLOSED,False,255,35,5,https://github.com/zack-vii,Feature: added fixup version of acq2106_WRPG,5,[],https://github.com/MDSplus/mdsplus/pull/1998,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1998,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1998,2020-04-21T09:59:08Z,2020-04-21T17:38:30Z,2020-11-16T13:57:09Z,CLOSED,False,255,35,5,https://github.com/zack-vii,Feature: added fixup version of acq2106_WRPG,5,[],https://github.com/MDSplus/mdsplus/pull/1998,https://github.com/WhoBrokeTheBuild,2,https://github.com/MDSplus/mdsplus/pull/1998#issuecomment-617309594,,Why is this a duplicate of Fernando's PR? We should instead modify his PR with the required files. Fernando can give you access to his branch,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,1999,2020-04-21T18:52:07Z,2020-04-21T19:14:09Z,2020-04-21T19:15:48Z,MERGED,True,32,18,1,https://github.com/zack-vii,"Fix: added dprint(lv,fmt,args...) to Devices",1,[],https://github.com/MDSplus/mdsplus/pull/1999,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/1999,"subclasses can use dprint to print debug messages base on debug level read from DEBUG_DEVICES env.
self.dprint(1, ""parameter=%d"", 2)","subclasses can use dprint to print debug messages base on debug level read from DEBUG_DEVICES env.
self.dprint(1, ""parameter=%d"", 2)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2000,2020-04-23T02:19:29Z,2020-04-23T08:05:51Z,2020-04-23T08:05:57Z,MERGED,True,17,7,3,https://github.com/zack-vii,Fix: jtraverser2 when built with maven was missing icons,3,[],https://github.com/MDSplus/mdsplus/pull/2000,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2000,"fixes the maven scripts to build when maven projects changed.
fixed --release mkdir RELEASEDIR
fixed missin resources in jtraverser2","fixes the maven scripts to build when maven projects changed.
fixed --release mkdir RELEASEDIR
fixed missin resources in jtraverser2",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2000,2020-04-23T02:19:29Z,2020-04-23T08:05:51Z,2020-04-23T08:05:57Z,MERGED,True,17,7,3,https://github.com/zack-vii,Fix: jtraverser2 when built with maven was missing icons,3,[],https://github.com/MDSplus/mdsplus/pull/2000,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2000#issuecomment-618205534,"fixes the maven scripts to build when maven projects changed.
fixed --release mkdir RELEASEDIR
fixed missin resources in jtraverser2","Timo, will I merge, too?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2002,2020-04-24T15:50:59Z,2020-04-25T19:37:45Z,2020-04-25T19:37:46Z,MERGED,True,921,76,12,https://github.com/GabrieleManduchi,Gm marte2 devices,5,[],https://github.com/MDSplus/mdsplus/pull/2002,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2002,"Added StreamIn MARTE2 device, several other fixes to MARTE2 devices","Added StreamIn MARTE2 device, several other fixes to MARTE2 devices",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2005,2020-04-27T11:38:54Z,2020-04-27T12:14:18Z,2020-04-27T12:14:30Z,MERGED,True,23,6,1,https://github.com/zack-vii,Fixed: updatepkg,3,[],https://github.com/MDSplus/mdsplus/pull/2005,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2005,"fixed updatepkg to resist predefined WORKSPACE env, and arbitrary BRANCH names, and calls from anywhere.","fixed updatepkg to resist predefined WORKSPACE env, and arbitrary BRANCH names, and calls from anywhere.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2005,2020-04-27T11:38:54Z,2020-04-27T12:14:18Z,2020-04-27T12:14:30Z,MERGED,True,23,6,1,https://github.com/zack-vii,Fixed: updatepkg,3,[],https://github.com/MDSplus/mdsplus/pull/2005,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2005#issuecomment-619930240,"fixed updatepkg to resist predefined WORKSPACE env, and arbitrary BRANCH names, and calls from anywhere.","Tested on jenkins:
http://jenkins2.mdsplus.org/job/3-updatepkg/5/console",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2005,2020-04-27T11:38:54Z,2020-04-27T12:14:18Z,2020-04-27T12:14:30Z,MERGED,True,23,6,1,https://github.com/zack-vii,Fixed: updatepkg,3,[],https://github.com/MDSplus/mdsplus/pull/2005,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2005#issuecomment-619931302,"fixed updatepkg to resist predefined WORKSPACE env, and arbitrary BRANCH names, and calls from anywhere.","new Jenkins job can be used to create package files
http://jenkins2.mdsplus.org/job/3-updatepkg/lastSuccessfulBuild/artifact/deploy/packaging",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2005,2020-04-27T11:38:54Z,2020-04-27T12:14:18Z,2020-04-27T12:14:30Z,MERGED,True,23,6,1,https://github.com/zack-vii,Fixed: updatepkg,3,[],https://github.com/MDSplus/mdsplus/pull/2005,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2005#issuecomment-619947418,"fixed updatepkg to resist predefined WORKSPACE env, and arbitrary BRANCH names, and calls from anywhere.",Thanks Timo,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2009,2020-04-28T13:25:20Z,2020-04-29T20:16:05Z,2020-04-29T20:16:06Z,MERGED,True,102,27,3,https://github.com/zack-vii,"Feature: support ssh_config User, HostName, Port, and ProxyJump",1,[],https://github.com/MDSplus/mdsplus/pull/2009,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2009,"Added support for some essential ssh_config entries, namely StrictHostKeyChecking, User, HostName, Port, and ProxyJump.
Automatically resolve ProxyJump path and connect thru proxies.
TODO: Support for ProxyCommand. This will be much more difficult as using the command required prompts for passphrase, password, hostkey confirmations. Using internals would required proper parsing and would limit support for a selected number of tools. e.g. nc/netcat -> Socket, ssh -> JSch.Session.ExecChannel. And will not be part of this PR.","Added support for some essential ssh_config entries, namely StrictHostKeyChecking, User, HostName, Port, and ProxyJump.
Automatically resolve ProxyJump path and connect thru proxies.
TODO: Support for ProxyCommand. This will be much more difficult as using the command required prompts for passphrase, password, hostkey confirmations. Using internals would required proper parsing and would limit support for a selected number of tools. e.g. nc/netcat -> Socket, ssh -> JSch.Session.ExecChannel. And will not be part of this PR.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2009,2020-04-28T13:25:20Z,2020-04-29T20:16:05Z,2020-04-29T20:16:06Z,MERGED,True,102,27,3,https://github.com/zack-vii,"Feature: support ssh_config User, HostName, Port, and ProxyJump",1,[],https://github.com/MDSplus/mdsplus/pull/2009,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2009#issuecomment-620608219,"Added support for some essential ssh_config entries, namely StrictHostKeyChecking, User, HostName, Port, and ProxyJump.
Automatically resolve ProxyJump path and connect thru proxies.
TODO: Support for ProxyCommand. This will be much more difficult as using the command required prompts for passphrase, password, hostkey confirmations. Using internals would required proper parsing and would limit support for a selected number of tools. e.g. nc/netcat -> Socket, ssh -> JSch.Session.ExecChannel. And will not be part of this PR.","Timo

   Very interesting and very timely.  Just this morning I put in a
ticket (local) raising the issue of how external users connect into MIT
mdsip over ssh.  We currently do this by allowing ssh to our data
server, and need to change this.  Let me know when you think this PR is
ready for review.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2009,2020-04-28T13:25:20Z,2020-04-29T20:16:05Z,2020-04-29T20:16:06Z,MERGED,True,102,27,3,https://github.com/zack-vii,"Feature: support ssh_config User, HostName, Port, and ProxyJump",1,[],https://github.com/MDSplus/mdsplus/pull/2009,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2009#issuecomment-620771420,"Added support for some essential ssh_config entries, namely StrictHostKeyChecking, User, HostName, Port, and ProxyJump.
Automatically resolve ProxyJump path and connect thru proxies.
TODO: Support for ProxyCommand. This will be much more difficult as using the command required prompts for passphrase, password, hostkey confirmations. Using internals would required proper parsing and would limit support for a selected number of tools. e.g. nc/netcat -> Socket, ssh -> JSch.Session.ExecChannel. And will not be part of this PR.","jTraverser2 is a standalone so it can be tested using
http://jenkins2.mdsplus.org/job/maven/770/artifact/jars/java/jtraverser2/jTraverser2.jar",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2009,2020-04-28T13:25:20Z,2020-04-29T20:16:05Z,2020-04-29T20:16:06Z,MERGED,True,102,27,3,https://github.com/zack-vii,"Feature: support ssh_config User, HostName, Port, and ProxyJump",1,[],https://github.com/MDSplus/mdsplus/pull/2009,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2009#issuecomment-621435965,"Added support for some essential ssh_config entries, namely StrictHostKeyChecking, User, HostName, Port, and ProxyJump.
Automatically resolve ProxyJump path and connect thru proxies.
TODO: Support for ProxyCommand. This will be much more difficult as using the command required prompts for passphrase, password, hostkey confirmations. Using internals would required proper parsing and would limit support for a selected number of tools. e.g. nc/netcat -> Socket, ssh -> JSch.Session.ExecChannel. And will not be part of this PR.",@GabrieleManduchi could you please review this PR?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2010,2020-04-28T15:24:45Z,2020-04-28T16:57:27Z,2020-04-28T16:57:29Z,MERGED,True,2,1,1,https://github.com/zack-vii,Fix: Support for old thick client api,1,[],https://github.com/MDSplus/mdsplus/pull/2010,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2010,this fixes issue #2007 and #2006,this fixes issue #2007 and #2006,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2010,2020-04-28T15:24:45Z,2020-04-28T16:57:27Z,2020-04-28T16:57:29Z,MERGED,True,2,1,1,https://github.com/zack-vii,Fix: Support for old thick client api,1,[],https://github.com/MDSplus/mdsplus/pull/2010,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2010#issuecomment-620722235,this fixes issue #2007 and #2006,"http://www.mdsplus.org/dist/el6/stable/RPMS/i686/mdsplus-kernel-6.1-15.el6.i686.rpm
Tested with a server running in docker.
Setup server image:
docker run -itu 0 --privileged --network=host mdsplus/builder:rhel6 /bin/bash
wget http://www.mdsplus.org/dist/el6/stable/RPMS/i686/mdsplus-kernel-
yum install mdsplus-kernel-6.1-15.el6.i686.rpm
echo ""main_path /tmp"" > /etc/mdsplus.conf
. /usr/local/mdsplus/setup.sh
mdstcl
edit main/new
write
quit
exit
exit
docker container commit <containerid> testserver
run MdsIp server
docker run -itu 0 --privileged  -p 9000:8000 testserver /bin/bash
mdsip -m -p 8000 -h /usr/local/mdsplus/etc/mdsip.hosts

test script
main_path=localhost:9000:: tditest
treeopen('main')
265389633
mdsconnect(""localhost:9000"")
2
mdsvalue(""MdsShr->MdsRelease:T()"")
""MDSplus, beta version""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2012,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-624816240,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","@GabrieleManduchi I am not sure if ""Feature :"" and ""Fix :"" will be recognized correctly please omit the "" "" (space) between the keyword and the ':'.
You can do this via
git fetch
git rebase origin/alpha -i
# replace pick with r (for reword)
# remove the space
git push -f
now that you added pid please integrate it in MARTE2_PYTHON_PID instead of having an extra file. same or the others. gempy can be part of the superclass file",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-624822904,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","@GabrieleManduchi : you kind of undid my changes though... you need to reset --hard you local branch otherwise you local version will undo all teh fixes
i will rebase and add the last two commits of yours",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-624901036,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","how could I undo your changes? I pulled your version and made the fixes required to make it run, and then pushed the changes. What is wrong in this?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-624912686,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",pygam.py and pid.py must be separate from MARTE2_PYTHON.py and MARTE2_PYTHON_PID.py because pid and pygam are used also  by MARTe2 that knows nothing about MDSplus devices.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-624917716,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","hmm strange then well when you pulled thats doing a merge.. anyway i did not read this in time.. I integrated pid in the device.
if the pdi and pygem are external files then they should not be included in MDSplus as that would clash when versions change.
In that case the FALLBACK BUILDER should suffice.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-624927836,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","I fixed the BUILDER so it should work with your external pid and pygem files. please checkout
branch zck_marte2_pid for the changes i made to make pid and pygem safe to use ... did not test it though.. just so you get an idea what would be necessary and how it could be done.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-624928778,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","Oh and one important thing, please consider wrapping the checks in initialize in a if debug or make it an extra function check or test so you can run it during development but not every time the device is loaded.. this is for performance",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625053112,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","ok, thanks, I will checkout zck_marte2_pid and verify if it works",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625078837,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",no i meamt use this pr's branch for testing and merge but get inspiration from the zck_marte2_pid to eventually refactor pid and multiply. just make sure this pr works as expected when you have pid and multiply available.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,11,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625085542,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","ok, I will look into it shortly",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,12,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625153749,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","Checked gm_marte2_devices, removed pygam.py and pid.py: thanks to BUILDER_FALLBACK they do not harm when working on different devices and are not reachable from PYTHONPATH. Of course for using MARTE2 devices they must be available in PYTHONPATH but this makes sense. (pid.py and pygam.py now belong to MARTe2 distribution)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,13,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625155917,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","Now, before pushing gm-marte2.devices take note that I did the following actions

pulled the latest origin version
Solved a few merge conflicts: all the conflicts made sense
commited the removal of pid.py an pygam.py
As you can see this is the normal git usage, I am now ready to push it. Anything against it?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,14,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625176254,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","there should not be any merge conflict. there should not be any merge. you cannot pull as this would try to reapply the fixed commits onto the local broken ones.
you pull approach only works if we have a clean history but i needed to rebase your branch and change commit messages etc. so git would not know what to do.
you need to
git reset --hard origin/gm-marte2-devices
then test and fix if needed and commit",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,15,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625179776,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","if you added stuff after my takeover push it to a different branch first. you may cherrypick the commits after. resetting. use
git reflog
git log new_branch

to select the hash of the commit and then
git cherry-pick <hash>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,16,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625183923,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","Ok, I did a reset --hard. It turns out to be equivalent to my version when merging a few conflicts. Anyway it is all ok now. There is only an updated RfxDevices/device not related to MARTE2 (and not developed by me, but they asked me to report in alpha)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,17,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625185560,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",cool =) then you may push the changes if any and we can finish it up,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,18,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625186400,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",moving to jTraverser stuff now,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,19,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625198366,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",well i fixed the CEAN device as well. what did you add as feature? problably this is waht i found when i did diff as it reverted my fixes. in particular indentation return 0 instead of raising exceptions. print instead of dprint and parts assembly,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,20,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625204115,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",@GabrieleManduchi can you approve this PR when you think we are done here. I will build the import string fix on the updated alpha then,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,21,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625242701,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly","Approved, but the reason why merging is blocked is unclear to me.....",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,22,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625244628,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",Never used commit signing before,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/zack-vii,23,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625314861,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",i activated it to see what it does. well seems like we wont be using it ;),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2012,2020-04-30T17:03:48Z,2020-05-07T15:09:58Z,2020-05-07T15:11:59Z,MERGED,True,4708,4662,78,https://github.com/zack-vii,Fix: RfxDevices for pyhton2 and python3,27,[],https://github.com/MDSplus/mdsplus/pull/2012,https://github.com/GabrieleManduchi,24,https://github.com/MDSplus/mdsplus/pull/2012#issuecomment-625315610,"major style fix and common badied replaced with goodies

class generation
class inheritance and field access
submodule import
tabs and indentation
third party dependencies during class generation
parts assembly",thanks!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2013,2020-05-04T12:57:06Z,2020-05-06T12:49:47Z,2020-05-06T13:30:04Z,MERGED,True,12,2,5,https://github.com/zack-vii,Feature: add LIB->ROUTINE:C that frees the returned pointer to TdiCall,2,[],https://github.com/MDSplus/mdsplus/pull/2013,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2013,"first commit adds test that should fail with memchecks.
second commit adds feature and alters test to use :C instead of :T
fixes issue #1865","first commit adds test that should fail with memchecks.
second commit adds feature and alters test to use :C instead of :T
fixes issue #1865",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2013,2020-05-04T12:57:06Z,2020-05-06T12:49:47Z,2020-05-06T13:30:04Z,MERGED,True,12,2,5,https://github.com/zack-vii,Feature: add LIB->ROUTINE:C that frees the returned pointer to TdiCall,2,[],https://github.com/MDSplus/mdsplus/pull/2013,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2013#issuecomment-624650346,"first commit adds test that should fail with memchecks.
second commit adds feature and alters test to use :C instead of :T
fixes issue #1865","I updated the wiki
http://www.mdsplus.org/index.php/Documentation:Reference:TDI_C1#KIND
but i have the feeling this is not the only place that needs to be updated",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2017,2020-05-06T12:33:17Z,2020-05-06T13:28:32Z,2020-05-06T13:28:33Z,MERGED,True,3,3,1,https://github.com/joshStillerman,Fix: matlab2015b does not have startsWith,1,[],https://github.com/MDSplus/mdsplus/pull/2017,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2017,"Change mdsToMatlab.m  to use strncmp instead of startsWith.  That
function was not present in older versions of matlab.","Change mdsToMatlab.m  to use strncmp instead of startsWith.  That
function was not present in older versions of matlab.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2018,2020-05-06T15:43:45Z,2020-05-25T14:58:28Z,2020-05-25T14:58:29Z,MERGED,True,91,57,3,https://github.com/zack-vii,Fix: consider all entries in CASE() and fixes switch and case when used in function form,6,[],https://github.com/MDSplus/mdsplus/pull/2018,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2018,"Allows multiple ranges in case
switch(5) {
  case default {
    _ = $FALSE;
    break;
  }
  case(0:2, 4:6, 8:10) {
    _ = $TRUE;
    break;
  }
};_
1BU

as well as its function form
switch(5, statement(\
 default(statement(_ = $FALSE, break())),\
 case((0:2, 4:6, 8:10), statement(_ = $TRUE, break())),\
));_
1BU

before multiple ranges in case were allowed but only the last one was tests against because they are combined in a OPC_COMMA which was evaluated first. Similar COMMA combination prevented evaluation of function form switch. This may apply to FOR UNTIL etc. as well. but will be considered in a separate PR","Allows multiple ranges in case
switch(5) {
  case default {
    _ = $FALSE;
    break;
  }
  case(0:2, 4:6, 8:10) {
    _ = $TRUE;
    break;
  }
};_
1BU

as well as its function form
switch(5, statement(\
 default(statement(_ = $FALSE, break())),\
 case((0:2, 4:6, 8:10), statement(_ = $TRUE, break())),\
));_
1BU

before multiple ranges in case were allowed but only the last one was tests against because they are combined in a OPC_COMMA which was evaluated first. Similar COMMA combination prevented evaluation of function form switch. This may apply to FOR UNTIL etc. as well. but will be considered in a separate PR",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2018,2020-05-06T15:43:45Z,2020-05-25T14:58:28Z,2020-05-25T14:58:29Z,MERGED,True,91,57,3,https://github.com/zack-vii,Fix: consider all entries in CASE() and fixes switch and case when used in function form,6,[],https://github.com/MDSplus/mdsplus/pull/2018,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2018#issuecomment-633471129,"Allows multiple ranges in case
switch(5) {
  case default {
    _ = $FALSE;
    break;
  }
  case(0:2, 4:6, 8:10) {
    _ = $TRUE;
    break;
  }
};_
1BU

as well as its function form
switch(5, statement(\
 default(statement(_ = $FALSE, break())),\
 case((0:2, 4:6, 8:10), statement(_ = $TRUE, break())),\
));_
1BU

before multiple ranges in case were allowed but only the last one was tests against because they are combined in a OPC_COMMA which was evaluated first. Similar COMMA combination prevented evaluation of function form switch. This may apply to FOR UNTIL etc. as well. but will be considered in a separate PR",So can I merge this at some point ;),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2019,2020-05-06T16:18:38Z,2020-05-13T21:07:36Z,2020-05-13T21:07:37Z,MERGED,True,61,65,10,https://github.com/zack-vii,Fix: use opcode_t as default pointer type for function desc; fixup length in mitdevices,2,[],https://github.com/MDSplus/mdsplus/pull/2019,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2019,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2019,2020-05-06T16:18:38Z,2020-05-13T21:07:36Z,2020-05-13T21:07:37Z,MERGED,True,61,65,10,https://github.com/zack-vii,Fix: use opcode_t as default pointer type for function desc; fixup length in mitdevices,2,[],https://github.com/MDSplus/mdsplus/pull/2019,https://github.com/WhoBrokeTheBuild,2,https://github.com/MDSplus/mdsplus/pull/2019#issuecomment-628072807,,What's the benefit of opcode_t over uint8_t?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2019,2020-05-06T16:18:38Z,2020-05-13T21:07:36Z,2020-05-13T21:07:37Z,MERGED,True,61,65,10,https://github.com/zack-vii,Fix: use opcode_t as default pointer type for function desc; fixup length in mitdevices,2,[],https://github.com/MDSplus/mdsplus/pull/2019,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2019#issuecomment-628237313,,"opcode_t is an enum. it is the expected pointer type for mds_function_t. Exceptions are typically due to manually constructed broken descriptors (c.f. mitdevice fixes).
Using it opcode_t as default allows gdb to displays the name of the enum value (OPC_) instead of a broken string or uint8 chunk of the uint16 value that represents the opcode_t. Which if a great help.",True,{'THUMBS_UP': ['https://github.com/WhoBrokeTheBuild']}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2020,2020-05-07T20:04:26Z,2020-05-08T18:00:58Z,2020-05-08T18:00:59Z,MERGED,True,9,2,3,https://github.com/joshStillerman,Fix: fix sign compare warning on lex generated c c,2,[],https://github.com/MDSplus/mdsplus/pull/2020,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2020,"Using the new bootstrap and attempting to then build MDSplus on
Ubuntu-10 with deploy/build.sh  the build fails because the code
generated by lex in mdsdcl and tdishr generates a warning.
I am not sure why our builds are succeeding, my guess is the
bison/flex on UB18 is newer or older than what was used for the
kits.","Using the new bootstrap and attempting to then build MDSplus on
Ubuntu-10 with deploy/build.sh  the build fails because the code
generated by lex in mdsdcl and tdishr generates a warning.
I am not sure why our builds are succeeding, my guess is the
bison/flex on UB18 is newer or older than what was used for the
kits.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2020,2020-05-07T20:04:26Z,2020-05-08T18:00:58Z,2020-05-08T18:00:59Z,MERGED,True,9,2,3,https://github.com/joshStillerman,Fix: fix sign compare warning on lex generated c c,2,[],https://github.com/MDSplus/mdsplus/pull/2020,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2020#issuecomment-625831714,"Using the new bootstrap and attempting to then build MDSplus on
Ubuntu-10 with deploy/build.sh  the build fails because the code
generated by lex in mdsdcl and tdishr generates a warning.
I am not sure why our builds are succeeding, my guess is the
bison/flex on UB18 is newer or older than what was used for the
kits.","The versions I am using are:
 ***@***.***:~$ uname -a
 Linux mfews07 4.15.0-88-generic #88-Ubuntu SMP Tue Feb 11 20:11:34 UTC
 2020 x86_64 x86_64 x86_64 GNU/Linux
 ***@***.***:~$ gcc -v
 Using built-in specs.
 COLLECT_GCC=gcc
 COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper
 OFFLOAD_TARGET_NAMES=nvptx-none
 OFFLOAD_TARGET_DEFAULT=1
 Target: x86_64-linux-gnu
 Configured with: ../src/configure -v --with-pkgversion='Ubuntu
 7.5.0-3ubuntu1~18.04'
 --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs
 --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++
 --prefix=/usr --with-gcc-major-version-only --program-suffix=-7
 --program-prefix=x86_64-linux-gnu- --enable-shared
 --enable-linker-build-id --libexecdir=/usr/lib
 --without-included-gettext --enable-threads=posix --libdir=/usr/lib
 --enable-nls --enable-bootstrap --enable-clocale=gnu
 --enable-libstdcxx-debug --enable-libstdcxx-time=yes
 --with-default-libstdcxx-abi=new --enable-gnu-unique-object
 --disable-vtable-verify --enable-libmpx --enable-plugin
 --enable-default-pie --with-system-zlib --with-target-system-zlib
 --enable-objc-gc=auto --enable-multiarch --disable-werror
 --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32
 --enable-multilib --with-tune=generic
 --enable-offload-targets=nvptx-none --without-cuda-driver
 --enable-checking=release --build=x86_64-linux-gnu
 --host=x86_64-linux-gnu --target=x86_64-linux-gnu
 Thread model: posix
 gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)
 ***@***.***:~$ flex -v
 ^C
 ***@***.***:~$ flex -V
 flex 2.6.4
 ***@***.***:~$ bison -V
 bison (GNU Bison) 3.0.4
 Written by Robert Corbett and Richard Stallman.

 Copyright (C) 2015 Free Software Foundation, Inc.
 This is free software; see the source for copying conditions. There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
 PURPOSE.
I could sed the code, but I thought it better to just turn off the
warning for those 2 compiles.
On 5/8/20 5:52 AM, Timo Schroeder wrote:

 ***@***.**** commented on this pull request.

 Hm can you specify where it is happening. i had a similar issue before
 and fixed it with a sed command , however bootstapping with different
 version may cause different warnings.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2020 (review)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZON4P3LNOBPMIDXDLLRQPI4RANCNFSM4M3TYMYA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2020,2020-05-07T20:04:26Z,2020-05-08T18:00:58Z,2020-05-08T18:00:59Z,MERGED,True,9,2,3,https://github.com/joshStillerman,Fix: fix sign compare warning on lex generated c c,2,[],https://github.com/MDSplus/mdsplus/pull/2020,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2020#issuecomment-625903076,"Using the new bootstrap and attempting to then build MDSplus on
Ubuntu-10 with deploy/build.sh  the build fails because the code
generated by lex in mdsdcl and tdishr generates a warning.
I am not sure why our builds are succeeding, my guess is the
bison/flex on UB18 is newer or older than what was used for the
kits.",fine with me. can you comment out the sed line in the yylex.gen file. we then wont need it anymore.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2022,2020-05-12T12:28:20Z,2020-05-12T20:33:34Z,2020-05-12T20:33:39Z,MERGED,True,235,805,21,https://github.com/zack-vii,Build: fix windows java scripts and startup files,7,[],https://github.com/MDSplus/mdsplus/pull/2022,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2022,fixes issue #2021,fixes issue #2021,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2022,2020-05-12T12:28:20Z,2020-05-12T20:33:34Z,2020-05-12T20:33:39Z,MERGED,True,235,805,21,https://github.com/zack-vii,Build: fix windows java scripts and startup files,7,[],https://github.com/MDSplus/mdsplus/pull/2022,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2022#issuecomment-627496415,fixes issue #2021,http://www.mdsplus.org/dist/release/Windows/zck_win_make_java/MDSplus-zck_win_make_java-7.104-2.exe,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2022,2020-05-12T12:28:20Z,2020-05-12T20:33:34Z,2020-05-12T20:33:39Z,MERGED,True,235,805,21,https://github.com/zack-vii,Build: fix windows java scripts and startup files,7,[],https://github.com/MDSplus/mdsplus/pull/2022,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2022#issuecomment-627504750,fixes issue #2021,"DeviceBeans.jar on windows remains a copy
@GabrieleManduchi the last push should have fixed the shortcuts. Could you review this PR, please?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2023,2020-05-12T12:43:47Z,2020-05-25T15:39:56Z,2020-05-25T15:39:57Z,MERGED,True,1,3103,2,https://github.com/zack-vii,Build: removed bootstrap output,2,[],https://github.com/MDSplus/mdsplus/pull/2023,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2023,not needed for build_docs as it can do bootstrap before generating docs,not needed for build_docs as it can do bootstrap before generating docs,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2026,2020-05-22T18:19:47Z,2020-05-22T21:45:28Z,2020-05-22T21:45:29Z,MERGED,True,61,20,2,https://github.com/joshStillerman,Feature: expand width of MARTE2 I/O devices,1,[],https://github.com/MDSplus/mdsplus/pull/2026,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2026,"The original MARTE2_STREAM_IN device only accepted 4 values from
the MDSplus Event Stream.  This is now 16
The original MARTE2_STREAM device only stored 8 values from.
This is now 16","The original MARTE2_STREAM_IN device only accepted 4 values from
the MDSplus Event Stream.  This is now 16
The original MARTE2_STREAM device only stored 8 values from.
This is now 16",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2027,2020-05-25T11:09:18Z,2020-05-26T12:23:14Z,2020-05-26T12:23:18Z,MERGED,True,548,521,13,https://github.com/zack-vii,Fix: deco of no-node should be compilable,8,[],https://github.com/MDSplus/mdsplus/pull/2027,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2027,"Decompiles nids as \NODE::NOT.FOUND which is likely to evaluate again to TreeNNF error but can compile.
Fixes compile crash of e.g. ""<verb""
proper fix: remove symbolic operators from label.
failsafe: explicidly NULL rptr.
MULS -> only used for MOD (rename to MOD), MUL only used for '/' and '%', '*' special due use as MISSING.

fixes issue #2025","Decompiles nids as \NODE::NOT.FOUND which is likely to evaluate again to TreeNNF error but can compile.
Fixes compile crash of e.g. ""<verb""
proper fix: remove symbolic operators from label.
failsafe: explicidly NULL rptr.
MULS -> only used for MOD (rename to MOD), MUL only used for '/' and '%', '*' special due use as MISSING.

fixes issue #2025",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2027,2020-05-25T11:09:18Z,2020-05-26T12:23:14Z,2020-05-26T12:23:18Z,MERGED,True,548,521,13,https://github.com/zack-vii,Fix: deco of no-node should be compilable,8,[],https://github.com/MDSplus/mdsplus/pull/2027,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2027#issuecomment-633650784,"Decompiles nids as \NODE::NOT.FOUND which is likely to evaluate again to TreeNNF error but can compile.
Fixes compile crash of e.g. ""<verb""
proper fix: remove symbolic operators from label.
failsafe: explicidly NULL rptr.
MULS -> only used for MOD (rename to MOD), MUL only used for '/' and '%', '*' special due use as MISSING.

fixes issue #2025","Seems ok to me, shall I approve?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2027,2020-05-25T11:09:18Z,2020-05-26T12:23:14Z,2020-05-26T12:23:18Z,MERGED,True,548,521,13,https://github.com/zack-vii,Fix: deco of no-node should be compilable,8,[],https://github.com/MDSplus/mdsplus/pull/2027,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2027#issuecomment-633670403,"Decompiles nids as \NODE::NOT.FOUND which is likely to evaluate again to TreeNNF error but can compile.
Fixes compile crash of e.g. ""<verb""
proper fix: remove symbolic operators from label.
failsafe: explicidly NULL rptr.
MULS -> only used for MOD (rename to MOD), MUL only used for '/' and '%', '*' special due use as MISSING.

fixes issue #2025","now it should be good. when it succeeds the test, yes please review and approve, thanks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2028,2020-05-25T22:20:46Z,2020-06-02T18:53:38Z,2020-06-02T18:53:42Z,MERGED,True,653,492,5,https://github.com/zack-vii,Fix: updated constants,6,[],https://github.com/MDSplus/mdsplus/pull/2028,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2028,"use M_PI as PI
updated precision on constants
replaced measured value by definition if available
use double precision for data w/o error
correct error by error due to cast (loss of precision)
fixes two error entries that had wrong order of magnitude (missing exp)","use M_PI as PI
updated precision on constants
replaced measured value by definition if available
use double precision for data w/o error
correct error by error due to cast (loss of precision)
fixes two error entries that had wrong order of magnitude (missing exp)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2030,2020-05-26T14:05:09Z,2020-06-02T18:55:29Z,2020-06-02T18:55:42Z,MERGED,True,95,57,4,https://github.com/zack-vii,Fix: zero with empty shape should produce scalar,4,[],https://github.com/MDSplus/mdsplus/pull/2030,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2030,fixes issue #2029,fixes issue #2029,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2032,2020-05-28T13:56:59Z,2020-05-28T20:29:38Z,2020-11-16T13:56:09Z,MERGED,True,17,15,1,https://github.com/zack-vii,Fix: PyDoMethod exception handling missing model and method,1,[],https://github.com/MDSplus/mdsplus/pull/2032,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2032,fixed #2031,fixed #2031,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2032,2020-05-28T13:56:59Z,2020-05-28T20:29:38Z,2020-11-16T13:56:09Z,MERGED,True,17,15,1,https://github.com/zack-vii,Fix: PyDoMethod exception handling missing model and method,1,[],https://github.com/MDSplus/mdsplus/pull/2032,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2032#issuecomment-635546370,fixed #2031,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2033,2020-05-28T20:49:04Z,2020-06-02T18:33:02Z,2020-11-16T13:56:07Z,MERGED,True,33,35,2,https://github.com/zack-vii,Build: fixed release version info from git,1,[],https://github.com/MDSplus/mdsplus/pull/2033,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2033,fixed #2008,fixed #2008,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2033,2020-05-28T20:49:04Z,2020-06-02T18:33:02Z,2020-11-16T13:56:07Z,MERGED,True,33,35,2,https://github.com/zack-vii,Build: fixed release version info from git,1,[],https://github.com/MDSplus/mdsplus/pull/2033,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2033#issuecomment-635606515,fixed #2008,@WhoBrokeTheBuild looks like the m4/ax_git_revision.m4 script was clearing the vars.. no it should work or fallback top version 0.0.0 if awk is unawailable,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2034,2020-05-28T22:30:03Z,2020-06-02T18:54:57Z,2020-06-02T18:55:00Z,MERGED,True,17,15,1,https://github.com/zack-vii,Fix: dispatch/build becomes a runaway id num_actions == 1,2,[],https://github.com/MDSplus/mdsplus/pull/2034,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2034,This fixed the runaway,This fixed the runaway,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2035,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)","using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638183306,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)","Timo, note that jdispatcher and jserver are fully documented in MDSplus tutorial",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638183681,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)","The reason for 1.6 was due to matlab, but maybe now it is no more necessary",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638185389,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)","jServer has a main,  the startup script is correct (maybe you were confused by Server.java, that is a component of jDispatcher)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638186504,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)",not sure there is yet any user of WaveDisplay..........,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638251696,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)",oh if there is a jServer that might be.. nothing showed up when i started it,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638271312,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)","yes, indeed it waits for incoming actions to be executed",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638501983,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)",@GabrieleManduchi : were you still using the jdispatcher at RFX? I when through the code and found several bugs. I cleaned it up pretty good. and it works for far i can tell. well i would need a proper test tree. currently has a test tree with one DEMOADC device but was running on windows so the lib was not available. it did try INIT and STORE though.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638907974,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)",Hi @GabrieleManduchi I know its a lot of changes but the seemed necessary. the jDispatcher is pretty smooth now and has great features for doing test measurements and debugging.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-638912282,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)","Windows installer will be available here once the test is complete
https://www.mdsplus.org/dist/release/Windows/zck_jar_manifest/MDSplus-zck_jar_manifest-7.106-0.exe",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/GabrieleManduchi,11,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-639287099,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)","Good if you revise jDispatcher code, it is pretty old (20 years). Nevertheless we have always used it and we are still using it in our facility (and plan to use in the new RFX machine). I believe it is much better in functionality than the C dispatcher and server version, In our RFX application we use around 40 jServers and in these years it behaved pretty well.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/GabrieleManduchi,12,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-639288159,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)","When you have finished it, I can try it in a dry run on our NBTF test facility. What is important is that the protocol between jdispatcher and jservers is not changed, otherwise it would be very difficult to upgrade the system in our system with tens of actor nodes.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2035,2020-06-02T22:01:27Z,2020-06-05T06:47:04Z,2020-06-05T07:00:15Z,MERGED,True,16285,21628,335,https://github.com/zack-vii,"Feature: jDispatcher great bug fix, fixed also bugs in jScope. structured classes",25,[],https://github.com/MDSplus/mdsplus/pull/2035,https://github.com/zack-vii,13,https://github.com/MDSplus/mdsplus/pull/2035#issuecomment-639297002,"using manifest and java -jar
use personalized packaging our packages should start with ""mds.""
first attempt to split jscope in two layers (still inter-dependency during compilation but critical functionality of WaveDisplay available w/o jScope)
unified java projects Makefile.am layout
fixed jdispatcher thread managements, several typos and overly complicated/unsafe loops, typos in varnames, missing cleanup of resources.
jDispatchMonitor allows to start/stop local jServers
jDispatchMonitor can spawn a local jDispatcherIp if none found.
jDispatcher resolves Dispatch and Task of a node if it is a node ref
use execute (USING(TCL(""do ""//$),,$,$), nodepath, shot expt) which works with treerefs in action
jDispatcher looks in more folders for jDispatcher_.properties
JDispatchMonitor could provides menu to send predefined TCL commands to jDispatcherIp server.
updated default jDispatcher.property with a general example
TODO:
JUnit Test for the non-GUI components (low priority)",the protocol jdispatcher -> jServer should be as before. Feature wise its done i think. next would be the unit test.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2036,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638088929,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",Sorry...I have been too quick...,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638092534,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","Parent off is not the same of !parentNode.isOn, and indeed TreeIsOn returns either TreeON, TreeOFF and TreePARENT_OFF(i.e. the node has not turned off, but one ancestor has been turned off)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638095588,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",i am aware of the concept of parent_state just saying if you have a isOn intuitively it pairs better with parentOn,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638098581,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","Right, probably I followed (more than 10 years ago...) more strictly the original treeshr  naming approach (TreePARENT_OFF)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638122540,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","No,  in this case the passed mask may contain more than one bit set (it is up to the caller to build the approprate mask)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638123076,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",wait....I must look into it,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638123530,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","yes, you are  right",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638125332,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",@GabrieleManduchi I ll just do it real quick.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,10,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638125714,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","Hmmm....the constants NciMxxx passed to getNciFlag already contain the bit shifted, so it is not correct to make a further shift in getNciFlags",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638126168,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",but they do call the native getNciFlag,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638126438,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",look at the current diff and you will see this it how it was before,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,13,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638127689,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","ok, seems so, anyway I will test it afterwards",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,14,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638129232,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","hmm but based on Database
11:49:25 /home/jenkins/slave/workspace/1-pull-request-test/java/jtraverser/src/main/java/Database.java:251: error: method getNciFlag in class TreeNode cannot be applied to given types;
11:49:25 		return node.getNciFlag(flagMask);
you where using it as mask.. so there is another inconsistency i will see if there are more hint on how it was implemented before",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,15,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638133384,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","looks like originally you implemented it as FlagId which is teh right way to do as the return type is boolean and i assume there is no logic to consolidate mask with more than one bit set. Database is using it wrong though, same with setFlag",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,16,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638138485,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",hmm well the method is unused so it does not matter.. i renamed the argument in Database to it is not missleading,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,17,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638139448,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated",@GabrieleManduchi :  I approved it. Can you merge it if you agree with my modifications?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/zack-vii,18,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638147775,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","can be tested with
https://www.mdsplus.org/dist/release/Windows/gm-fix-mdsobjects/MDSplus-gm-fix-mdsobjects-7.105-4.exe",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2036,2020-06-03T07:23:06Z,2020-06-03T11:59:20Z,2020-06-03T12:13:13Z,MERGED,True,39,21,4,https://github.com/GabrieleManduchi,Fix:update .h include for TreeNode,3,[],https://github.com/MDSplus/mdsplus/pull/2036,https://github.com/GabrieleManduchi,19,https://github.com/MDSplus/mdsplus/pull/2036#issuecomment-638156948,"setNciFlags and getNciFlags were already implemented in mdsobjects.c, but I did not update (i.e. generate via javah) the include file. Now the new one has been generated","Everything seems ok, thanks",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2038,2020-06-03T12:14:43Z,2020-06-03T12:18:07Z,2020-06-03T12:18:08Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: DeviceChoice init comboB when setting choices,1,[],https://github.com/MDSplus/mdsplus/pull/2038,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2038,found a bug in DeviceChoice,found a bug in DeviceChoice,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2039,2020-06-03T14:55:57Z,2020-06-03T16:19:10Z,2020-06-03T16:19:13Z,MERGED,True,17,90,7,https://github.com/zack-vii,Fix: some bugs in devicebeans,6,[],https://github.com/MDSplus/mdsplus/pull/2039,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2039,"wrong while condition prevented components from being investigated
broken getUsage in jtraverser2 prevented DeviceDispatcher to show actions
wrong scope of num_actions prevented actions to be found
jtraverser2 would return ""*"" on getDataExpr if no data, Interface expects Exception","wrong while condition prevented components from being investigated
broken getUsage in jtraverser2 prevented DeviceDispatcher to show actions
wrong scope of num_actions prevented actions to be found
jtraverser2 would return ""*"" on getDataExpr if no data, Interface expects Exception",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2039,2020-06-03T14:55:57Z,2020-06-03T16:19:10Z,2020-06-03T16:19:13Z,MERGED,True,17,90,7,https://github.com/zack-vii,Fix: some bugs in devicebeans,6,[],https://github.com/MDSplus/mdsplus/pull/2039,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2039#issuecomment-638275175,"wrong while condition prevented components from being investigated
broken getUsage in jtraverser2 prevented DeviceDispatcher to show actions
wrong scope of num_actions prevented actions to be found
jtraverser2 would return ""*"" on getDataExpr if no data, Interface expects Exception","even though there are a few bugs. the interface works quite well. The Interface probable should get some documentation so it is clearer what is expected (Exceptions, string format, etc.)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2040,2020-06-04T14:25:58Z,2020-06-04T15:15:25Z,2020-06-04T15:15:26Z,MERGED,True,4,6,2,https://github.com/GabrieleManduchi,Gm fix jscope drag,3,[],https://github.com/MDSplus/mdsplus/pull/2040,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2040,"Now the information passed is the full path including experiment name, change jScope Transferable accordingly.","Now the information passed is the full path including experiment name, change jScope Transferable accordingly.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2042,2020-06-05T10:21:44Z,2020-06-05T10:56:15Z,2020-06-05T10:56:18Z,MERGED,True,3326,2067,29,https://github.com/zack-vii,Build: use code formater on jdispatcher,1,[],https://github.com/MDSplus/mdsplus/pull/2042,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2042,"And cleanup java/{Formater,Cleanup}.xml
We should use eclipse and these Formater, Cleanup rules on more projects. which helps readability and maintainability of the code.
This does not change the behavior of the compiled code.
Ideally set Formater and Cleanup rules as SaveAction","And cleanup java/{Formater,Cleanup}.xml
We should use eclipse and these Formater, Cleanup rules on more projects. which helps readability and maintainability of the code.
This does not change the behavior of the compiled code.
Ideally set Formater and Cleanup rules as SaveAction",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2044,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-639427121,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","@GabrieleManduchi
the DEBUG stuff can go away now.. before it was a tdi function GetLastError() which was not defined.. what does it do.. should it no be in ./tdi/dev_support?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-639450130,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045",ready,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640432021,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","@GabrieleManduchi Can you review this please. and on that note, can you send me a copy of you getLastError tdi function. It should probably follow the naming schema Dev* and we should eventually provide a generic version of it in ./tdi/dev_support",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640468110,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","getLastError.fun is in tdiRfxDevices, we have no chenged version in respect of that
I wil now check your branch on a simple demo for jDispatcer, jServer jDispatchMonitor. If it works I will approve the PR, but be aware that there may be problems when running on a larger system (deadlocks, etc as we experienced in the original development). However I cannot now test on a real world system (our production system). Later this summer there will be a long shutdown and in that occasion I will test thoroughly the dispatcher stuff (but let it be n alpha now anyway)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640480590,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","Ah i see.  hm we could then change it to
PUBLIC FUN DevGetLastError(IN _expt, IN _shot, IN _action_path)
{
  RETURN(IF_ERROR(TEXT(PUBLIC _last_device_error), """"));
}

and
PUBLIC FUN DevClearLastError(IN _expt, IN _shot, IN _action_path)
{
  PUBLIC _last_device_error=*;
}

and document it. This way users would be able to override it if they have a different scheme to investigate issues.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640485954,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045",I am missing something......how can I checkout  zack-vii:zck-jdispatch-debug??,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640487799,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","next to Squash and merge there is ""view command line instructions""
Step 1: From your project repository, check out a new branch and test the changes.

git checkout -b zack-vii-zck-jdispatch-debug alpha
git pull https://github.com/zack-vii/mdsplus.git zck-jdispatch-debug",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640496496,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","I have a commit that would rename getLastError and move it to dev_support, also it adds a DevClearLastError that resets it in case the error is not handled in action so it wont print the wrong message",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640496781,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045",once this is merged i can make it an new commit?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640502270,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","or you can try it altogether already
git pull https://github.com/zack-vii/mdsplus.git  zck-get-last-error
I tried it on windows with a dummy device task
public _last_device_error=""MYERROR"";0

and it works as i would expect it.
Server:  Mon Jun 08 11:55:07 CEST 2020, Failed \TEST::TOP:PHANTOM:ACTIONSERVER:SOFT_TRIGGER in TEST shot 1: %SS-W-SUCCESS, Success; MYERROR",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/GabrieleManduchi,12,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640504853,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","ok, I will try later today, I have an urgent task now.....",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2044,2020-06-05T11:04:57Z,2020-06-08T18:45:00Z,2020-06-08T18:45:05Z,CLOSED,False,1570,1138,6,https://github.com/zack-vii,Fix: use doAction and Data.getMdsMsg,6,[],https://github.com/MDSplus/mdsplus/pull/2044,https://github.com/zack-vii,13,https://github.com/MDSplus/mdsplus/pull/2044#issuecomment-640804915,"This restore old bahaviour but handles exception if GetLastError is not found.
For full funktionality we need mdsobjects doAction fixed #2045","Hm I will close this PR in favor of #2049 , I would like to merge that one before alpha releases.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2045,2020-06-05T11:59:30Z,2020-06-07T21:58:03Z,2020-06-07T21:58:08Z,MERGED,True,6,242,1,https://github.com/zack-vii,Fix: mdsobjects doAction use TdiDoTask,3,[],https://github.com/MDSplus/mdsplus/pull/2045,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2045,I could not test it again.. maybe you can or will do it on monday,I could not test it again.. maybe you can or will do it on monday,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2046,2020-06-05T13:26:27Z,2020-06-08T06:52:34Z,2020-06-09T17:31:24Z,CLOSED,False,39,28,9,https://github.com/GabrieleManduchi,Fix:Missing tree context in fixup nid in copydx,3,[],https://github.com/MDSplus/mdsplus/pull/2046,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2046,TreePutRecord TreeFixupNid needs also tree context otherwise TreeGetPath() fails whan getting the path of a node in a different subtree. (see issue 2043).  MdsCopyDxXdOutZ has been changed to account for an additional parameter to FixupNid. Subsequent changes around derive from this,TreePutRecord TreeFixupNid needs also tree context otherwise TreeGetPath() fails whan getting the path of a node in a different subtree. (see issue 2043).  MdsCopyDxXdOutZ has been changed to account for an additional parameter to FixupNid. Subsequent changes around derive from this,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2046,2020-06-05T13:26:27Z,2020-06-08T06:52:34Z,2020-06-09T17:31:24Z,CLOSED,False,39,28,9,https://github.com/GabrieleManduchi,Fix:Missing tree context in fixup nid in copydx,3,[],https://github.com/MDSplus/mdsplus/pull/2046,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2046#issuecomment-639480422,TreePutRecord TreeFixupNid needs also tree context otherwise TreeGetPath() fails whan getting the path of a node in a different subtree. (see issue 2043).  MdsCopyDxXdOutZ has been changed to account for an additional parameter to FixupNid. Subsequent changes around derive from this,"Timo, have a look also to the change I had to do in ServerBuildDispatchTable. The previous usage of fixup_nid there was wrong as it declared an int argument, while a pointer argument was passedby CopyDxXdOutZ",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2046,2020-06-05T13:26:27Z,2020-06-08T06:52:34Z,2020-06-09T17:31:24Z,CLOSED,False,39,28,9,https://github.com/GabrieleManduchi,Fix:Missing tree context in fixup nid in copydx,3,[],https://github.com/MDSplus/mdsplus/pull/2046,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2046#issuecomment-639487757,TreePutRecord TreeFixupNid needs also tree context otherwise TreeGetPath() fails whan getting the path of a node in a different subtree. (see issue 2043).  MdsCopyDxXdOutZ has been changed to account for an additional parameter to FixupNid. Subsequent changes around derive from this,"Check also the change in TdiGetDbi. Again, the argument for fixup_nid was wrongly declared as int",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2046,2020-06-05T13:26:27Z,2020-06-08T06:52:34Z,2020-06-09T17:31:24Z,CLOSED,False,39,28,9,https://github.com/GabrieleManduchi,Fix:Missing tree context in fixup nid in copydx,3,[],https://github.com/MDSplus/mdsplus/pull/2046,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2046#issuecomment-639495516,TreePutRecord TreeFixupNid needs also tree context otherwise TreeGetPath() fails whan getting the path of a node in a different subtree. (see issue 2043).  MdsCopyDxXdOutZ has been changed to account for an additional parameter to FixupNid. Subsequent changes around derive from this,i already left for the weekend. will check it on sunday when i am back home.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2046,2020-06-05T13:26:27Z,2020-06-08T06:52:34Z,2020-06-09T17:31:24Z,CLOSED,False,39,28,9,https://github.com/GabrieleManduchi,Fix:Missing tree context in fixup nid in copydx,3,[],https://github.com/MDSplus/mdsplus/pull/2046,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2046#issuecomment-640252917,TreePutRecord TreeFixupNid needs also tree context otherwise TreeGetPath() fails whan getting the path of a node in a different subtree. (see issue 2043).  MdsCopyDxXdOutZ has been changed to account for an additional parameter to FixupNid. Subsequent changes around derive from this,"I dont think we can make that api change, those methods are EXPORTED function so they may be used in user code.  instead we would need to somhow pass the second arg. as part of the first. e.g. is teh arg is usually a descriptor it could be a DTYPE_LIST with ctx and the usual arg1. better would be to have an _fixupd_nid that takes a array of two pointers. and pass the required args in that array",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2046,2020-06-05T13:26:27Z,2020-06-08T06:52:34Z,2020-06-09T17:31:24Z,CLOSED,False,39,28,9,https://github.com/GabrieleManduchi,Fix:Missing tree context in fixup nid in copydx,3,[],https://github.com/MDSplus/mdsplus/pull/2046,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2046#issuecomment-640278490,TreePutRecord TreeFixupNid needs also tree context otherwise TreeGetPath() fails whan getting the path of a node in a different subtree. (see issue 2043).  MdsCopyDxXdOutZ has been changed to account for an additional parameter to FixupNid. Subsequent changes around derive from this,"@GabrieleManduchi : i made an alternative PR the should have the same fix/ but also for Segment and without breaking the API in #2047 . Can you check if this fixes your problem, review it, and close this one, please?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2047,2020-06-07T20:23:58Z,2020-06-08T06:52:35Z,2020-06-08T06:52:36Z,MERGED,True,62,62,4,https://github.com/zack-vii,Fix: fixed tree_fixup_nid to accept dbid,1,[],https://github.com/MDSplus/mdsplus/pull/2047,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2047,this should fix #2046 also for Segments and without breaking the API,this should fix #2046 also for Segments and without breaking the API,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2048,2020-06-08T07:16:34Z,2020-06-08T07:43:44Z,2020-06-08T07:43:45Z,MERGED,True,2,2,1,https://github.com/GabrieleManduchi,Fix:wrong package name in data providers,1,[],https://github.com/MDSplus/mdsplus/pull/2048,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2048,"the old jScope package name has been replaced by mds.jscope, otherwise Data Providers are not activated by jScope","the old jScope package name has been replaced by mds.jscope, otherwise Data Providers are not activated by jScope",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2049,2020-06-08T10:09:49Z,2020-06-08T20:26:35Z,2020-06-09T07:04:14Z,MERGED,True,1590,1148,13,https://github.com/zack-vii,Fix: use DevClearLastError and DevGetLastError instead of getLastError,7,[],https://github.com/MDSplus/mdsplus/pull/2049,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2049,"builds on #2044
requires rebase once #2044 is merged","builds on #2044
requires rebase once #2044 is merged",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2049,2020-06-08T10:09:49Z,2020-06-08T20:26:35Z,2020-06-09T07:04:14Z,MERGED,True,1590,1148,13,https://github.com/zack-vii,Fix: use DevClearLastError and DevGetLastError instead of getLastError,7,[],https://github.com/MDSplus/mdsplus/pull/2049,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2049#issuecomment-640748847,"builds on #2044
requires rebase once #2044 is merged",@GabrieleManduchi : Can i merge this if we do a full test late on anyway ? maybe just do a quick stylistic review. are you ok with generalising the GetLastError fun and move into kernel so its available even without RfxDevices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2049,2020-06-08T10:09:49Z,2020-06-08T20:26:35Z,2020-06-09T07:04:14Z,MERGED,True,1590,1148,13,https://github.com/zack-vii,Fix: use DevClearLastError and DevGetLastError instead of getLastError,7,[],https://github.com/MDSplus/mdsplus/pull/2049,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2049#issuecomment-640797466,"builds on #2044
requires rebase once #2044 is merged",https://www.mdsplus.org/dist/release/Windows/zck-get-last-error/MDSplus-zck-get-last-error-7.107-0.exe,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2049,2020-06-08T10:09:49Z,2020-06-08T20:26:35Z,2020-06-09T07:04:14Z,MERGED,True,1590,1148,13,https://github.com/zack-vii,Fix: use DevClearLastError and DevGetLastError instead of getLastError,7,[],https://github.com/MDSplus/mdsplus/pull/2049,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2049#issuecomment-641077620,"builds on #2044
requires rebase once #2044 is merged","Ok, I will do anyway a quick test today",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2051,2020-06-08T17:50:10Z,2020-06-08T20:26:58Z,2020-06-08T20:27:02Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: TreeShr.TreeDoMethodA expects a nid descriptor; must not be int32,1,[],https://github.com/MDSplus/mdsplus/pull/2051,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2051,should fix #2050,should fix #2050,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2053,2020-06-09T12:21:22Z,2020-06-09T17:20:34Z,2020-06-09T17:20:38Z,MERGED,True,16387,17802,149,https://github.com/zack-vii,Fix: repackage jScope: fixing dataprovider,6,[],https://github.com/MDSplus/mdsplus/pull/2053,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2053,"fixed nullpointer on disconnect
fixed dataprovider
made jScope selfsustained again by including mds.connection
mdsobjects is only required for MdsDataProviderStreaming
all DataProviders are under mds.provider","fixed nullpointer on disconnect
fixed dataprovider
made jScope selfsustained again by including mds.connection
mdsobjects is only required for MdsDataProviderStreaming
all DataProviders are under mds.provider",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2053,2020-06-09T12:21:22Z,2020-06-09T17:20:34Z,2020-06-09T17:20:38Z,MERGED,True,16387,17802,149,https://github.com/zack-vii,Fix: repackage jScope: fixing dataprovider,6,[],https://github.com/MDSplus/mdsplus/pull/2053,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2053#issuecomment-641293372,"fixed nullpointer on disconnect
fixed dataprovider
made jScope selfsustained again by including mds.connection
mdsobjects is only required for MdsDataProviderStreaming
all DataProviders are under mds.provider","Ok as soon as it is merged, I will check it again",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2054,2020-06-09T19:39:40Z,2020-06-11T10:08:00Z,2020-06-11T10:10:55Z,MERGED,True,0,7,7,https://github.com/zack-vii,Build: dropped javabootclass,1,[],https://github.com/MDSplus/mdsplus/pull/2054,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2054,"rt6 might not be required. Does anyone recall the necessity of this classes. Were they only required when we were building on each platform (due to different jdk versions)?
Is java 8 ok for device beans?
The maven artifacts are built in java 8 and can be found here
http://jenkins2.mdsplus.org/job/maven/984/artifact/maven/
they work with 7.107.x alpha binaries.
If OK i would like to switch to java 8 for all but maybe mdsobjects (to support older matlab)","rt6 might not be required. Does anyone recall the necessity of this classes. Were they only required when we were building on each platform (due to different jdk versions)?
Is java 8 ok for device beans?
The maven artifacts are built in java 8 and can be found here
http://jenkins2.mdsplus.org/job/maven/984/artifact/maven/
they work with 7.107.x alpha binaries.
If OK i would like to switch to java 8 for all but maybe mdsobjects (to support older matlab)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2055,2020-06-09T19:40:35Z,2020-06-09T20:50:32Z,2020-06-10T09:01:28Z,MERGED,True,1694,2594,22,https://github.com/zack-vii,Fix: cleanup DataProvider: private methods and removed unused,1,[],https://github.com/MDSplus/mdsplus/pull/2055,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2055,looks like most DataProvider where copied from MdsDataProvider but only implement DataProvider which resulted in a lot of unused methods.,looks like most DataProvider where copied from MdsDataProvider but only implement DataProvider which resulted in a lot of unused methods.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2055,2020-06-09T19:40:35Z,2020-06-09T20:50:32Z,2020-06-10T09:01:28Z,MERGED,True,1694,2594,22,https://github.com/zack-vii,Fix: cleanup DataProvider: private methods and removed unused,1,[],https://github.com/MDSplus/mdsplus/pull/2055,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2055#issuecomment-641774626,looks like most DataProvider where copied from MdsDataProvider but only implement DataProvider which resulted in a lot of unused methods.,"Well, most of them are old providers no more used (e.g. TwuDataProvider for Textor no more existing). Sooner or later I will get rid of them.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2055,2020-06-09T19:40:35Z,2020-06-09T20:50:32Z,2020-06-10T09:01:28Z,MERGED,True,1694,2594,22,https://github.com/zack-vii,Fix: cleanup DataProvider: private methods and removed unused,1,[],https://github.com/MDSplus/mdsplus/pull/2055,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2055#issuecomment-641789859,looks like most DataProvider where copied from MdsDataProvider but only implement DataProvider which resulted in a lot of unused methods.,"Ok, it works, but the current package splitting does not make much sense.
What makes sense the division in providers and jScope, because the only interface between code of the provider objects and that of jScope is the DataProvider interface.  jScope, if we really want, may be split in waveform and jscope, i.e. the code for plotting waves and that for assembilng waveforms in jscope.  I my work on it, but I have currently more urgent tasks",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2055,2020-06-09T19:40:35Z,2020-06-09T20:50:32Z,2020-06-10T09:01:28Z,MERGED,True,1694,2594,22,https://github.com/zack-vii,Fix: cleanup DataProvider: private methods and removed unused,1,[],https://github.com/MDSplus/mdsplus/pull/2055,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2055#issuecomment-641793608,looks like most DataProvider where copied from MdsDataProvider but only implement DataProvider which resulted in a lot of unused methods.,"To be more specific: mds.provider.access and mds.connection are not meaningful, they gather classes that have no shared functionality.
I see now that you have already split mds.jscope and mds.wave, which makes sense.
Anyway, let's keep the current organization, when I find some time I will remove old classes no more used, and the organization possibly becomes clearer.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2055,2020-06-09T19:40:35Z,2020-06-09T20:50:32Z,2020-06-10T09:01:28Z,MERGED,True,1694,2594,22,https://github.com/zack-vii,Fix: cleanup DataProvider: private methods and removed unused,1,[],https://github.com/MDSplus/mdsplus/pull/2055,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2055#issuecomment-641859229,looks like most DataProvider where copied from MdsDataProvider but only implement DataProvider which resulted in a lot of unused methods.,"the split of mds.connection as it was the only  thing that was needed for jdispatcher. moving it to mdsobjects droped its dependency of jscope entirely. the other packaging helps a lot in terms of public private package access rights. ideally you weoikd want everything as private a possible so you would know whats what. therfore it helps to understand side effects when working on a feature/bugfix.
I am glad you are ok with it.
next step would be for me to maven it.
and then to merge it with jscopew7x. which features a.o. rgba images, and we need switch or logic that controls the meaning of int64 times, ms or ns.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2056,2020-06-10T17:11:40Z,2020-06-10T22:17:29Z,2020-06-11T06:32:01Z,MERGED,True,840,542,6,https://github.com/zack-vii,Fix: add mdsobjects to maven and a minor improvement for mdsplus-api,4,[],https://github.com/MDSplus/mdsplus/pull/2056,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2056,"added pom for mdsobjects to be build for maven
jscope was to follow but mindterm is not available.. maybe use jsch instead","added pom for mdsobjects to be build for maven
jscope was to follow but mindterm is not available.. maybe use jsch instead",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2056,2020-06-10T17:11:40Z,2020-06-10T22:17:29Z,2020-06-11T06:32:01Z,MERGED,True,840,542,6,https://github.com/zack-vii,Fix: add mdsobjects to maven and a minor improvement for mdsplus-api,4,[],https://github.com/MDSplus/mdsplus/pull/2056,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2056#issuecomment-642440012,"added pom for mdsobjects to be build for maven
jscope was to follow but mindterm is not available.. maybe use jsch instead","We can get rid of JetDataProvider and consequently of mindterm. The refer to the old RDA interface provided more than 15 years ago at Jet, but now Jet exports data directly in MDSplus format.
So feel free to remove them.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2057,2020-06-10T22:35:22Z,2020-06-11T08:06:02Z,2020-06-11T08:06:04Z,MERGED,True,385,183,11,https://github.com/zack-vii,Feature: jScope to use jsch for ssh and added to maven,3,[],https://github.com/MDSplus/mdsplus/pull/2057,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2057,"@GabrieleManduchi
Could you test the ssh functionality, i.e. the ssh tunnel for MdsDataProvider. I switched to jsch as it is available on maven. what it does is as before.. you forward a remote port to local. but it can also interpret .ssh/config, i.e. i follows ProxyJump definitions.
in particular: Please double check it teh notations are correct:
argument = server:11111
tunnelport = 22222

will create a tunnel according to
ssh -L 22222:127.0.0.1:11111 server

So tunnelport is expected to be a int .. is that correct?","@GabrieleManduchi
Could you test the ssh functionality, i.e. the ssh tunnel for MdsDataProvider. I switched to jsch as it is available on maven. what it does is as before.. you forward a remote port to local. but it can also interpret .ssh/config, i.e. i follows ProxyJump definitions.
in particular: Please double check it teh notations are correct:
argument = server:11111
tunnelport = 22222

will create a tunnel according to
ssh -L 22222:127.0.0.1:11111 server

So tunnelport is expected to be a int .. is that correct?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2057,2020-06-10T22:35:22Z,2020-06-11T08:06:02Z,2020-06-11T08:06:04Z,MERGED,True,385,183,11,https://github.com/zack-vii,Feature: jScope to use jsch for ssh and added to maven,3,[],https://github.com/MDSplus/mdsplus/pull/2057,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2057#issuecomment-642362321,"@GabrieleManduchi
Could you test the ssh functionality, i.e. the ssh tunnel for MdsDataProvider. I switched to jsch as it is available on maven. what it does is as before.. you forward a remote port to local. but it can also interpret .ssh/config, i.e. i follows ProxyJump definitions.
in particular: Please double check it teh notations are correct:
argument = server:11111
tunnelport = 22222

will create a tunnel according to
ssh -L 22222:127.0.0.1:11111 server

So tunnelport is expected to be a int .. is that correct?","full jar files for testing can be found here
http://jenkins2.mdsplus.org/job/maven/984/artifact/maven/
they work with 7.107.x alpha binaries",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2057,2020-06-10T22:35:22Z,2020-06-11T08:06:02Z,2020-06-11T08:06:04Z,MERGED,True,385,183,11,https://github.com/zack-vii,Feature: jScope to use jsch for ssh and added to maven,3,[],https://github.com/MDSplus/mdsplus/pull/2057,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2057#issuecomment-642442851,"@GabrieleManduchi
Could you test the ssh functionality, i.e. the ssh tunnel for MdsDataProvider. I switched to jsch as it is available on maven. what it does is as before.. you forward a remote port to local. but it can also interpret .ssh/config, i.e. i follows ProxyJump definitions.
in particular: Please double check it teh notations are correct:
argument = server:11111
tunnelport = 22222

will create a tunnel according to
ssh -L 22222:127.0.0.1:11111 server

So tunnelport is expected to be a int .. is that correct?","Good for the tunneling, even if we use it very seldomly",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2058,2020-06-11T09:37:13Z,2020-06-11T10:07:08Z,2020-06-11T10:07:09Z,MERGED,True,2001,4317,49,https://github.com/zack-vii,Fix: remove jet and fixup of interfaces,2,[],https://github.com/MDSplus/mdsplus/pull/2058,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2058,"I removed the JetDataprovider and replaced it with the former JetMdsDataProvider
I cleaned up the interfaces","I removed the JetDataprovider and replaced it with the former JetMdsDataProvider
I cleaned up the interfaces",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2058,2020-06-11T09:37:13Z,2020-06-11T10:07:08Z,2020-06-11T10:07:09Z,MERGED,True,2001,4317,49,https://github.com/zack-vii,Fix: remove jet and fixup of interfaces,2,[],https://github.com/MDSplus/mdsplus/pull/2058,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2058#issuecomment-642542691,"I removed the JetDataprovider and replaced it with the former JetMdsDataProvider
I cleaned up the interfaces",thanks for doing a job I always wanted to do.....,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2058,2020-06-11T09:37:13Z,2020-06-11T10:07:08Z,2020-06-11T10:07:09Z,MERGED,True,2001,4317,49,https://github.com/zack-vii,Fix: remove jet and fixup of interfaces,2,[],https://github.com/MDSplus/mdsplus/pull/2058,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2058#issuecomment-642542989,"I removed the JetDataprovider and replaced it with the former JetMdsDataProvider
I cleaned up the interfaces","Check this out =)
https://search.maven.org/search?q=g:org.mdsplus",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2059,2020-06-11T13:39:17Z,2020-06-11T16:23:11Z,2020-06-11T16:23:12Z,MERGED,True,835,2680,17,https://github.com/zack-vii,Fix: last cleanup before maven release,7,[],https://github.com/MDSplus/mdsplus/pull/2059,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2059,"As you suggested, I removed the DataAccess stuff and added a mechanism thats should populate the Provider list dynamically","As you suggested, I removed the DataAccess stuff and added a mechanism thats should populate the Provider list dynamically",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2059,2020-06-11T13:39:17Z,2020-06-11T16:23:11Z,2020-06-11T16:23:12Z,MERGED,True,835,2680,17,https://github.com/zack-vii,Fix: last cleanup before maven release,7,[],https://github.com/MDSplus/mdsplus/pull/2059,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2059#issuecomment-642710583,"As you suggested, I removed the DataAccess stuff and added a mechanism thats should populate the Provider list dynamically","done :)
Can you merge it, please? so i wont be tempted to add more ;)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2060,2020-06-12T11:55:40Z,2020-06-16T21:06:25Z,2020-06-16T21:06:26Z,MERGED,True,176422,174883,734,https://github.com/zack-vii,Fix: applied Formater and Cleanup on all maven projects,17,[],https://github.com/MDSplus/mdsplus/pull/2060,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2060,This should ensure that future pull requests will only show actual changes.,This should ensure that future pull requests will only show actual changes.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2060,2020-06-12T11:55:40Z,2020-06-16T21:06:25Z,2020-06-16T21:06:26Z,MERGED,True,176422,174883,734,https://github.com/zack-vii,Fix: applied Formater and Cleanup on all maven projects,17,[],https://github.com/MDSplus/mdsplus/pull/2060,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2060#issuecomment-644731534,This should ensure that future pull requests will only show actual changes.,@GabrieleManduchi : Can i merge this? i have a PR for jServer. it does not set the action result yet.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2060,2020-06-12T11:55:40Z,2020-06-16T21:06:25Z,2020-06-16T21:06:26Z,MERGED,True,176422,174883,734,https://github.com/zack-vii,Fix: applied Formater and Cleanup on all maven projects,17,[],https://github.com/MDSplus/mdsplus/pull/2060,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2060#issuecomment-644741805,This should ensure that future pull requests will only show actual changes.,"Hard to look at 640 files.... anyway go ahead, when you have done I will make a quick check (the big one for jdispatcher and jserver is somewhat postponed unitl the next shudownd).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2060,2020-06-12T11:55:40Z,2020-06-16T21:06:25Z,2020-06-16T21:06:26Z,MERGED,True,176422,174883,734,https://github.com/zack-vii,Fix: applied Formater and Cleanup on all maven projects,17,[],https://github.com/MDSplus/mdsplus/pull/2060,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2060#issuecomment-644840679,This should ensure that future pull requests will only show actual changes.,thanks. i will always do some basic testing before i merge java related commits.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2061,2020-06-13T00:42:36Z,2020-06-16T15:24:33Z,2020-06-16T15:24:34Z,MERGED,True,444,635,15,https://github.com/zack-vii,Fix: prevent LOCK_FAILURE on windows,7,[],https://github.com/MDSplus/mdsplus/pull/2061,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2061,"Real issue is that some method lock and  call TreePutNci which locks as well.
the lock is not reentrant and does not keep track of number of locks.
LOCK = locked
protected access
{
  LOCK = locked
  protected access
  UNLOCK = unlocked
}
unprotected access - assumed to be protected
UNLOCK = fail","Real issue is that some method lock and  call TreePutNci which locks as well.
the lock is not reentrant and does not keep track of number of locks.
LOCK = locked
protected access
{
  LOCK = locked
  protected access
  UNLOCK = unlocked
}
unprotected access - assumed to be protected
UNLOCK = fail",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2061,2020-06-13T00:42:36Z,2020-06-16T15:24:33Z,2020-06-16T15:24:34Z,MERGED,True,444,635,15,https://github.com/zack-vii,Fix: prevent LOCK_FAILURE on windows,7,[],https://github.com/MDSplus/mdsplus/pull/2061,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2061#issuecomment-643553119,"Real issue is that some method lock and  call TreePutNci which locks as well.
the lock is not reentrant and does not keep track of number of locks.
LOCK = locked
protected access
{
  LOCK = locked
  protected access
  UNLOCK = unlocked
}
unprotected access - assumed to be protected
UNLOCK = fail","enabling debug revealed that there is at least one more nested io_lock.
edit: fixed using the locked tracker",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2061,2020-06-13T00:42:36Z,2020-06-16T15:24:33Z,2020-06-16T15:24:34Z,MERGED,True,444,635,15,https://github.com/zack-vii,Fix: prevent LOCK_FAILURE on windows,7,[],https://github.com/MDSplus/mdsplus/pull/2061,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2061#issuecomment-644215974,"Real issue is that some method lock and  call TreePutNci which locks as well.
the lock is not reentrant and does not keep track of number of locks.
LOCK = locked
protected access
{
  LOCK = locked
  protected access
  UNLOCK = unlocked
}
unprotected access - assumed to be protected
UNLOCK = fail",new implementation used locked counter to keep track of nci lock. will only lock first time and unlock last time.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2062,2020-06-15T16:11:53Z,2020-06-15T17:14:00Z,2020-06-15T17:14:01Z,MERGED,True,1,1,1,https://github.com/zack-vii,Tests: silent test build tab,1,[],https://github.com/MDSplus/mdsplus/pull/2062,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2062,remove unnecessary logs between tests,remove unnecessary logs between tests,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2063,2020-06-15T23:57:52Z,2020-06-16T16:09:56Z,2020-06-16T16:09:58Z,MERGED,True,85,119,8,https://github.com/zack-vii,Fix: compiler warings properly fixed,2,[],https://github.com/MDSplus/mdsplus/pull/2063,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2063,fixes issues that were suppressed; mainly memcpy instead of strncpy,fixes issues that were suppressed; mainly memcpy instead of strncpy,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2064,2020-06-16T21:49:42Z,2020-06-16T22:20:29Z,2020-06-16T22:20:31Z,MERGED,True,5,11,1,https://github.com/zack-vii,Fix: get previous segment without opening file again,1,[],https://github.com/MDSplus/mdsplus/pull/2064,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2064,on windows there is still a bug this should fix it before alpha release,on windows there is still a bug this should fix it before alpha release,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2065,2020-06-17T13:22:34Z,2020-06-18T15:42:20Z,2020-06-18T15:42:21Z,MERGED,True,1814,1796,39,https://github.com/zack-vii,Fix: fixup filters hide hidden files and __pycache__; print shows in …,11,[],https://github.com/MDSplus/mdsplus/pull/2065,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2065,"…mdsip, err does not","…mdsip, err does not",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2065,2020-06-17T13:22:34Z,2020-06-18T15:42:20Z,2020-06-18T15:42:21Z,MERGED,True,1814,1796,39,https://github.com/zack-vii,Fix: fixup filters hide hidden files and __pycache__; print shows in …,11,[],https://github.com/MDSplus/mdsplus/pull/2065,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2065#issuecomment-645560997,"…mdsip, err does not","This the last time I attempt to fix mitdevices. it just systax correction mostly tabs, print, and Exception, one wrong import
Now that the findPydevices if fixed we see how broken mitdevices are",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2065,2020-06-17T13:22:34Z,2020-06-18T15:42:20Z,2020-06-18T15:42:21Z,MERGED,True,1814,1796,39,https://github.com/zack-vii,Fix: fixup filters hide hidden files and __pycache__; print shows in …,11,[],https://github.com/MDSplus/mdsplus/pull/2065,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2065#issuecomment-645878710,"…mdsip, err does not",can you review this so we can rebase #2066 onto this fix so we can identify potential issues with the changes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2066,2020-06-18T04:18:33Z,2021-04-13T04:52:38Z,2021-04-13T04:56:19Z,CLOSED,False,1261,74,10,https://github.com/santorofer,Build: New WRTD device and ACQ400_TR device,40,['notest'],https://github.com/MDSplus/mdsplus/pull/2066,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2066,"I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node","I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2066,2020-06-18T04:18:33Z,2021-04-13T04:52:38Z,2021-04-13T04:56:19Z,CLOSED,False,1261,74,10,https://github.com/santorofer,Build: New WRTD device and ACQ400_TR device,40,['notest'],https://github.com/MDSplus/mdsplus/pull/2066,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2066#issuecomment-645859461,"I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node",perfect i was just ficxin the foiurmat string in tha one. can you check it with the changes i mad in the other pr #2065 . you need to use % style as the {} is not supported by rhel6's python.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2066,2020-06-18T04:18:33Z,2021-04-13T04:52:38Z,2021-04-13T04:56:19Z,CLOSED,False,1261,74,10,https://github.com/santorofer,Build: New WRTD device and ACQ400_TR device,40,['notest'],https://github.com/MDSplus/mdsplus/pull/2066,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2066#issuecomment-645861878,"I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node",how does this pr relate to #1997 ? is it not affecting the same devices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2066,2020-06-18T04:18:33Z,2021-04-13T04:52:38Z,2021-04-13T04:56:19Z,CLOSED,False,1261,74,10,https://github.com/santorofer,Build: New WRTD device and ACQ400_TR device,40,['notest'],https://github.com/MDSplus/mdsplus/pull/2066,https://github.com/seanalsop,4,https://github.com/MDSplus/mdsplus/pull/2066#issuecomment-679178553,"I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node",Peter and I are working on a WR unified sync_role. We will suggest changes to init functions once this has been done.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2066,2020-06-18T04:18:33Z,2021-04-13T04:52:38Z,2021-04-13T04:56:19Z,CLOSED,False,1261,74,10,https://github.com/santorofer,Build: New WRTD device and ACQ400_TR device,40,['notest'],https://github.com/MDSplus/mdsplus/pull/2066,https://github.com/santorofer,5,https://github.com/MDSplus/mdsplus/pull/2066#issuecomment-679183903,"I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node","Hi Sean, thank you. Yes, excellent.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2066,2020-06-18T04:18:33Z,2021-04-13T04:52:38Z,2021-04-13T04:56:19Z,CLOSED,False,1261,74,10,https://github.com/santorofer,Build: New WRTD device and ACQ400_TR device,40,['notest'],https://github.com/MDSplus/mdsplus/pull/2066,https://github.com/santorofer,6,https://github.com/MDSplus/mdsplus/pull/2066#issuecomment-705360984,"I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node","Dear Sean and Peter,

I was wondering if you had the chance to work on the  WR-aware sync_role?

Cheers!
Fernando
…
 On Aug 24, 2020, at 9:59 AM, seanalsop ***@***.***> wrote:


 Peter and I are working on a WR unified sync_role. We will suggest changes to init functions once this has been done.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub <#2066 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AKW7QGINJHDZOWYOGFAIOILSCJ54TANCNFSM4OBGIIMA>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2066,2020-06-18T04:18:33Z,2021-04-13T04:52:38Z,2021-04-13T04:56:19Z,CLOSED,False,1261,74,10,https://github.com/santorofer,Build: New WRTD device and ACQ400_TR device,40,['notest'],https://github.com/MDSplus/mdsplus/pull/2066,https://github.com/petermilne,7,https://github.com/MDSplus/mdsplus/pull/2066#issuecomment-705391920,"I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node","Hello Fernando

Good point. So I did code it up 23 days ago:
https://github.com/petermilne/acq400ioc/blob/epics7/CARE/SITE0/sync_role.wr

It's there in the current release:
acq2106_262> head /mnt/VERSION
RELEASE acq400-266-20200930164230

acq2106_262> ls /usr/local/CARE/SITE0/
fp_trg_out.common     sync_role.common
mb_clk_freq_check.py  sync_role.wr

# the knob gets selected on boot

acq2106_262> ls -l /etc/acq400/0/sync_role
lrwxrwxrwx    1 root     root            47 Oct  7 15:01 /etc/acq400/0/sync_role -> /usr/local/epics/scripts/SITE0/sync_role.common

# This is a regular system, a WR system should make the link to sync_role.wr

Sorry, I haven't had time to _look_ at WR in the last month, but it's now going to get REALLY important for the next month, so, if the .wr flavour of sync_role isn't working, we'll be able to fix it.

Meanwhile, do try it on your systems. It's really a big simplification of the regular sync_role (no masters or slaves).

Cheers

Peter
…
On 08/10/2020 07:30, Fernando Santoro wrote:
 Dear Sean and Peter,

 I was wondering if you had the chance to work on the  WR-aware sync_role?

 Cheers!
 Fernando

> On Aug 24, 2020, at 9:59 AM, seanalsop ***@***.***> wrote:
>
>
> Peter and I are working on a WR unified sync_role. We will suggest changes to init functions once this has been done.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub <#2066 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AKW7QGINJHDZOWYOGFAIOILSCJ54TANCNFSM4OBGIIMA>.
>




-- 
Peter Milne
Director of Sales
www.d-tacq.com",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2066,2020-06-18T04:18:33Z,2021-04-13T04:52:38Z,2021-04-13T04:56:19Z,CLOSED,False,1261,74,10,https://github.com/santorofer,Build: New WRTD device and ACQ400_TR device,40,['notest'],https://github.com/MDSplus/mdsplus/pull/2066,https://github.com/santorofer,8,https://github.com/MDSplus/mdsplus/pull/2066#issuecomment-818436236,"I have here, in this pull request, and adding: a WRTD device, and some changes to the ACQ400_TR_BASE.
The WRTD device is used to set up the WR messages used to trigger capture, including the selection of sources and signals used for that when a particular message is used as a trigger.
The ACQ400_TR_BASE class now has several changes, including:
1- ability to select between using external triggers or software trigger, or WR messages.
2- the data is recorded as an MDSplus signal, i.e data with a window and an axis.
3- calibrated signal data is included in the subnode as CAL_INPUT of the INPUT_XXX node","Closing, since most of the changes done in this PR has now been developed in new independent PRs. Another words, this PR has been superseded by new PRs addressing many of the changes shown here.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2067,2020-06-18T11:01:03Z,2020-06-18T15:45:23Z,2020-06-18T15:45:27Z,CLOSED,False,2863,2202,48,https://github.com/zack-vii,Fix: New wrtd device test rebased fixes,34,[],https://github.com/MDSplus/mdsplus/pull/2067,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2067,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2067,2020-06-18T11:01:03Z,2020-06-18T15:45:23Z,2020-06-18T15:45:27Z,CLOSED,False,2863,2202,48,https://github.com/zack-vii,Fix: New wrtd device test rebased fixes,34,[],https://github.com/MDSplus/mdsplus/pull/2067,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2067#issuecomment-646111652,,server its purpose,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2068,2020-06-21T13:21:57Z,2020-06-22T18:42:55Z,2020-06-22T18:42:56Z,MERGED,True,662,2891,10,https://github.com/zack-vii,Feature: small improvements to tree.py,3,[],https://github.com/MDSplus/mdsplus/pull/2068,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2068,"tree.open(shot=5): switched current tree to shot 5
device.parts missing type defaults to none aka structure
copy copies extra fields. propagated instance properties like debug when directly assigned for debugging/testing","tree.open(shot=5): switched current tree to shot 5
device.parts missing type defaults to none aka structure
copy copies extra fields. propagated instance properties like debug when directly assigned for debugging/testing",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2069,2020-06-22T18:18:08Z,2020-06-22T18:45:26Z,2020-06-22T18:45:27Z,MERGED,True,30,9,2,https://github.com/zack-vii,Fix: compression of timestamped segments,2,[],https://github.com/MDSplus/mdsplus/pull/2069,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2069,was overwriting dim with dat due to an issue in read_segment,was overwriting dim with dat due to an issue in read_segment,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2070,2020-06-22T18:55:39Z,2020-07-08T19:04:40Z,2020-07-08T19:04:41Z,MERGED,True,25,20,1,https://github.com/zack-vii,Fix: added phases to phase table,1,[],https://github.com/MDSplus/mdsplus/pull/2070,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2070,"provide a more versatile phase table as default.
leave room for fill-ins by incrementing defualt phase id by 10 (commodore style)
added pre, post, trigger, store2 as aliases.","provide a more versatile phase table as default.
leave room for fill-ins by incrementing defualt phase id by 10 (commodore style)
added pre, post, trigger, store2 as aliases.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2070,2020-06-22T18:55:39Z,2020-07-08T19:04:40Z,2020-07-08T19:04:41Z,MERGED,True,25,20,1,https://github.com/zack-vii,Fix: added phases to phase table,1,[],https://github.com/MDSplus/mdsplus/pull/2070,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2070#issuecomment-647736863,"provide a more versatile phase table as default.
leave room for fill-ins by incrementing defualt phase id by 10 (commodore style)
added pre, post, trigger, store2 as aliases.","looks like this triggered an issue in TdiSort.c
http://jenkins2.mdsplus.org/job/fc27/5996/artifact/tests/64-san-thread/mdsobjects/cpp/testing/MdsExpressionCompileTest.log/*view*/
this issue is addressed in #2072",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2070,2020-06-22T18:55:39Z,2020-07-08T19:04:40Z,2020-07-08T19:04:41Z,MERGED,True,25,20,1,https://github.com/zack-vii,Fix: added phases to phase table,1,[],https://github.com/MDSplus/mdsplus/pull/2070,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2070#issuecomment-655489161,"provide a more versatile phase table as default.
leave room for fill-ins by incrementing defualt phase id by 10 (commodore style)
added pre, post, trigger, store2 as aliases.","anything against this PR?
Idea was to use more general names for phases.. this way we can make more universal device defaults settings.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2070,2020-06-22T18:55:39Z,2020-07-08T19:04:40Z,2020-07-08T19:04:41Z,MERGED,True,25,20,1,https://github.com/zack-vii,Fix: added phases to phase table,1,[],https://github.com/MDSplus/mdsplus/pull/2070,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2070#issuecomment-655512441,"provide a more versatile phase table as default.
leave room for fill-ins by incrementing defualt phase id by 10 (commodore style)
added pre, post, trigger, store2 as aliases.","from my side nothing against, as we use jDispatcher.......",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2071,2020-06-22T19:06:17Z,2020-06-22T19:47:39Z,2020-06-22T19:47:40Z,MERGED,True,27,27,1,https://github.com/zack-vii,Fix: dprint may be activated later,1,[],https://github.com/MDSplus/mdsplus/pull/2071,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2071,allows to activate debug for individual devices be setting the debug field of the instance,allows to activate debug for individual devices be setting the debug field of the instance,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2072,2020-06-22T19:57:04Z,2020-06-22T23:49:34Z,2020-06-22T23:49:35Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: no need for ran to be static and would introduce a data-race,1,[],https://github.com/MDSplus/mdsplus/pull/2072,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2072,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2073,2020-06-25T10:25:08Z,2020-06-26T13:47:18Z,2020-06-26T13:47:20Z,MERGED,True,20,3,4,https://github.com/GabrieleManduchi,Fix:Wrong shell files,1,[],https://github.com/MDSplus/mdsplus/pull/2073,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2073,"Shell files CompileTree and DecompileTree did not make correct reference to java classes (now in mds.jtraverser package)
On many linux systems xinetd /etc/rc.d/init.d/xinetd  does not exist anymore and service command must be called instead.
post_install_script failed if symbolic links already /etc/profile.d/mdsplus.csh and /etc/profile.d/mdsplus.sh already present","Shell files CompileTree and DecompileTree did not make correct reference to java classes (now in mds.jtraverser package)
On many linux systems xinetd /etc/rc.d/init.d/xinetd  does not exist anymore and service command must be called instead.
post_install_script failed if symbolic links already /etc/profile.d/mdsplus.csh and /etc/profile.d/mdsplus.sh already present",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2074,2020-06-26T14:49:35Z,2020-06-27T14:44:10Z,2020-06-27T14:44:12Z,MERGED,True,4,2,2,https://github.com/GabrieleManduchi,Gm fix new jtraverser,1,[],https://github.com/MDSplus/mdsplus/pull/2074,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2074,"An unmanaged exception was generated when open tree failed, now an error message is displayed


DeviceChoice returned incorrect text field (missing quotes)","An unmanaged exception was generated when open tree failed, now an error message is displayed


DeviceChoice returned incorrect text field (missing quotes)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2074,2020-06-26T14:49:35Z,2020-06-27T14:44:10Z,2020-06-27T14:44:12Z,MERGED,True,4,2,2,https://github.com/GabrieleManduchi,Gm fix new jtraverser,1,[],https://github.com/MDSplus/mdsplus/pull/2074,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2074#issuecomment-650569687,"An unmanaged exception was generated when open tree failed, now an error message is displayed


DeviceChoice returned incorrect text field (missing quotes)",thanks Timo,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2075,2020-07-01T12:58:12Z,2020-07-06T17:54:33Z,2020-07-06T17:54:34Z,MERGED,True,37,0,1,https://github.com/GabrieleManduchi,Fix:protect cpp mdsevent AST with a mutex to avoid race conditions,3,[],https://github.com/MDSplus/mdsplus/pull/2075,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2075,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2075,2020-07-01T12:58:12Z,2020-07-06T17:54:33Z,2020-07-06T17:54:34Z,MERGED,True,37,0,1,https://github.com/GabrieleManduchi,Fix:protect cpp mdsevent AST with a mutex to avoid race conditions,3,[],https://github.com/MDSplus/mdsplus/pull/2075,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2075#issuecomment-652403140,,Protect AST used in MDSEvent object with a mutex to avoid race conditions,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2075,2020-07-01T12:58:12Z,2020-07-06T17:54:33Z,2020-07-06T17:54:34Z,MERGED,True,37,0,1,https://github.com/GabrieleManduchi,Fix:protect cpp mdsevent AST with a mutex to avoid race conditions,3,[],https://github.com/MDSplus/mdsplus/pull/2075,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2075#issuecomment-652852928,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2075,2020-07-01T12:58:12Z,2020-07-06T17:54:33Z,2020-07-06T17:54:34Z,MERGED,True,37,0,1,https://github.com/GabrieleManduchi,Fix:protect cpp mdsevent AST with a mutex to avoid race conditions,3,[],https://github.com/MDSplus/mdsplus/pull/2075,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2075#issuecomment-652870111,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2075,2020-07-01T12:58:12Z,2020-07-06T17:54:33Z,2020-07-06T17:54:34Z,MERGED,True,37,0,1,https://github.com/GabrieleManduchi,Fix:protect cpp mdsevent AST with a mutex to avoid race conditions,3,[],https://github.com/MDSplus/mdsplus/pull/2075,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2075#issuecomment-654141985,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2075,2020-07-01T12:58:12Z,2020-07-06T17:54:33Z,2020-07-06T17:54:34Z,MERGED,True,37,0,1,https://github.com/GabrieleManduchi,Fix:protect cpp mdsevent AST with a mutex to avoid race conditions,3,[],https://github.com/MDSplus/mdsplus/pull/2075,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/2075#issuecomment-654262022,,"Josh, now tests are passed, could you accept my PR?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2080,2020-07-09T15:34:36Z,2020-07-10T13:48:19Z,2020-07-10T13:48:20Z,MERGED,True,186,285,7,https://github.com/GabrieleManduchi,Gm java streams,5,[],https://github.com/MDSplus/mdsplus/pull/2080,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2080,Event based data streams in java,Event based data streams in java,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2080,2020-07-09T15:34:36Z,2020-07-10T13:48:19Z,2020-07-10T13:48:20Z,MERGED,True,186,285,7,https://github.com/GabrieleManduchi,Gm java streams,5,[],https://github.com/MDSplus/mdsplus/pull/2080,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2080#issuecomment-656279538,Event based data streams in java,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2080,2020-07-09T15:34:36Z,2020-07-10T13:48:19Z,2020-07-10T13:48:20Z,MERGED,True,186,285,7,https://github.com/GabrieleManduchi,Gm java streams,5,[],https://github.com/MDSplus/mdsplus/pull/2080,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2080#issuecomment-656625400,Event based data streams in java,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2080,2020-07-09T15:34:36Z,2020-07-10T13:48:19Z,2020-07-10T13:48:20Z,MERGED,True,186,285,7,https://github.com/GabrieleManduchi,Gm java streams,5,[],https://github.com/MDSplus/mdsplus/pull/2080,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2080#issuecomment-656636425,Event based data streams in java,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2083,2020-07-20T14:50:23Z,2020-07-20T19:43:35Z,2020-07-20T19:43:35Z,MERGED,True,1,1,1,https://github.com/wuhao-thu,Fix: System.arraycopy argument order in TdiShr.java,1,[],https://github.com/MDSplus/mdsplus/pull/2083,https://github.com/wuhao-thu,1,https://github.com/MDSplus/mdsplus/pull/2083,"Fix a bug which could cause a NullPointerException when calling tdiCompile because of the misuse of arraycopy, where it should copy the elements of ""args1"" to ""args"", instead of the other way round.","Fix a bug which could cause a NullPointerException when calling tdiCompile because of the misuse of arraycopy, where it should copy the elements of ""args1"" to ""args"", instead of the other way round.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2083,2020-07-20T14:50:23Z,2020-07-20T19:43:35Z,2020-07-20T19:43:35Z,MERGED,True,1,1,1,https://github.com/wuhao-thu,Fix: System.arraycopy argument order in TdiShr.java,1,[],https://github.com/MDSplus/mdsplus/pull/2083,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2083#issuecomment-661096980,"Fix a bug which could cause a NullPointerException when calling tdiCompile because of the misuse of arraycopy, where it should copy the elements of ""args1"" to ""args"", instead of the other way round.","I quickly checked the occurrences of arraycopy in mdsplus-api and the rest seemed correct, puh.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2083,2020-07-20T14:50:23Z,2020-07-20T19:43:35Z,2020-07-20T19:43:35Z,MERGED,True,1,1,1,https://github.com/wuhao-thu,Fix: System.arraycopy argument order in TdiShr.java,1,[],https://github.com/MDSplus/mdsplus/pull/2083,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2083#issuecomment-661098371,"Fix a bug which could cause a NullPointerException when calling tdiCompile because of the misuse of arraycopy, where it should copy the elements of ""args1"" to ""args"", instead of the other way round.",ok to test.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2084,2020-07-22T07:38:41Z,2020-07-22T15:14:58Z,2020-07-22T15:14:59Z,MERGED,True,44,6,8,https://github.com/AndreaRigoni,Build: Compiling fixes,7,[],https://github.com/MDSplus/mdsplus/pull/2084,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/2084,"Hi all, I just added some fixes because mdsplus did not compile anymore to me.
WARNING gfortran changed the policies for mismatched arguments types the code should be fixed.
I added a suppressing flag to FFLAGS as a simple workaround, see: https://gcc.gnu.org/gcc-10/porting_to.html","Hi all, I just added some fixes because mdsplus did not compile anymore to me.
WARNING gfortran changed the policies for mismatched arguments types the code should be fixed.
I added a suppressing flag to FFLAGS as a simple workaround, see: https://gcc.gnu.org/gcc-10/porting_to.html",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2084,2020-07-22T07:38:41Z,2020-07-22T15:14:58Z,2020-07-22T15:14:59Z,MERGED,True,44,6,8,https://github.com/AndreaRigoni,Build: Compiling fixes,7,[],https://github.com/MDSplus/mdsplus/pull/2084,https://github.com/AndreaRigoni,2,https://github.com/MDSplus/mdsplus/pull/2084#issuecomment-662340501,"Hi all, I just added some fixes because mdsplus did not compile anymore to me.
WARNING gfortran changed the policies for mismatched arguments types the code should be fixed.
I added a suppressing flag to FFLAGS as a simple workaround, see: https://gcc.gnu.org/gcc-10/porting_to.html",I got some other errors in jenkins ..,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2084,2020-07-22T07:38:41Z,2020-07-22T15:14:58Z,2020-07-22T15:14:59Z,MERGED,True,44,6,8,https://github.com/AndreaRigoni,Build: Compiling fixes,7,[],https://github.com/MDSplus/mdsplus/pull/2084,https://github.com/AndreaRigoni,3,https://github.com/MDSplus/mdsplus/pull/2084#issuecomment-662342752,"Hi all, I just added some fixes because mdsplus did not compile anymore to me.
WARNING gfortran changed the policies for mismatched arguments types the code should be fixed.
I added a suppressing flag to FFLAGS as a simple workaround, see: https://gcc.gnu.org/gcc-10/porting_to.html",I pushed the wrong button and closed the pull request .. sorry,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2084,2020-07-22T07:38:41Z,2020-07-22T15:14:58Z,2020-07-22T15:14:59Z,MERGED,True,44,6,8,https://github.com/AndreaRigoni,Build: Compiling fixes,7,[],https://github.com/MDSplus/mdsplus/pull/2084,https://github.com/AndreaRigoni,4,https://github.com/MDSplus/mdsplus/pull/2084#issuecomment-662365928,"Hi all, I just added some fixes because mdsplus did not compile anymore to me.
WARNING gfortran changed the policies for mismatched arguments types the code should be fixed.
I added a suppressing flag to FFLAGS as a simple workaround, see: https://gcc.gnu.org/gcc-10/porting_to.html",I'm getting more and more errors in fortran.. I wonder why they were not already an issue before my changes :-/,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2084,2020-07-22T07:38:41Z,2020-07-22T15:14:58Z,2020-07-22T15:14:59Z,MERGED,True,44,6,8,https://github.com/AndreaRigoni,Build: Compiling fixes,7,[],https://github.com/MDSplus/mdsplus/pull/2084,https://github.com/AndreaRigoni,5,https://github.com/MDSplus/mdsplus/pull/2084#issuecomment-662429446,"Hi all, I just added some fixes because mdsplus did not compile anymore to me.
WARNING gfortran changed the policies for mismatched arguments types the code should be fixed.
I added a suppressing flag to FFLAGS as a simple workaround, see: https://gcc.gnu.org/gcc-10/porting_to.html","I found why, it was that mdslib did not declare FFLAGS in the Makefile so it did not complain with warning because it actually skip to flag them as error at all.. now I added all the usual flags and, after them for the sole mdslib and mdsmath, I added -Wno-errors so it behaves like before.
Of course it is not good, however it permits us to compile with gcc >= 10 for now..
we should then fix the fortran crap when we will have enough passion for that. :-)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2084,2020-07-22T07:38:41Z,2020-07-22T15:14:58Z,2020-07-22T15:14:59Z,MERGED,True,44,6,8,https://github.com/AndreaRigoni,Build: Compiling fixes,7,[],https://github.com/MDSplus/mdsplus/pull/2084,https://github.com/AndreaRigoni,6,https://github.com/MDSplus/mdsplus/pull/2084#issuecomment-662512791,"Hi all, I just added some fixes because mdsplus did not compile anymore to me.
WARNING gfortran changed the policies for mismatched arguments types the code should be fixed.
I added a suppressing flag to FFLAGS as a simple workaround, see: https://gcc.gnu.org/gcc-10/porting_to.html","Off course, I'll open it now. Thanks Timo ! :-)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2090,2020-07-30T00:53:35Z,2020-08-14T15:02:53Z,2020-08-14T15:02:58Z,MERGED,True,73,171,5,https://github.com/zack-vii,Fix: use gperf to generate TdiHash,3,['enhancement'],https://github.com/MDSplus/mdsplus/pull/2090,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2090,"May make tdi even faster as the hashfun is optimized for set.  e.g. not all chars must be considered to get unique hash values. no more filling of the hash table at runtime.
addresses #2089","May make tdi even faster as the hashfun is optimized for set.  e.g. not all chars must be considered to get unique hash values. no more filling of the hash table at runtime.
addresses #2089",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2090,2020-07-30T00:53:35Z,2020-08-14T15:02:53Z,2020-08-14T15:02:58Z,MERGED,True,73,171,5,https://github.com/zack-vii,Fix: use gperf to generate TdiHash,3,['enhancement'],https://github.com/MDSplus/mdsplus/pull/2090,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2090#issuecomment-673429306,"May make tdi even faster as the hashfun is optimized for set.  e.g. not all chars must be considered to get unique hash values. no more filling of the hash table at runtime.
addresses #2089",anyone wants to drop a comment on this one?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2094,2020-08-12T18:45:25Z,2021-08-18T16:14:38Z,2022-01-10T11:50:14Z,CLOSED,False,466,0,5,https://github.com/joshStillerman,Feature:  Add new python incaa dio2 device support,8,['notest'],https://github.com/MDSplus/mdsplus/pull/2094,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2094,"This is a new implementation of the RfxDevices DIO2 device type.
The implementation is preliminary, no store, no record events.  Code is needed for LHCD operation
at General Atomics
the tdi based one was too difficult to debug.","This is a new implementation of the RfxDevices DIO2 device type.
The implementation is preliminary, no store, no record events.  Code is needed for LHCD operation
at General Atomics
the tdi based one was too difficult to debug.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2094,2020-08-12T18:45:25Z,2021-08-18T16:14:38Z,2022-01-10T11:50:14Z,CLOSED,False,466,0,5,https://github.com/joshStillerman,Feature:  Add new python incaa dio2 device support,8,['notest'],https://github.com/MDSplus/mdsplus/pull/2094,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2094#issuecomment-673749827,"This is a new implementation of the RfxDevices DIO2 device type.
The implementation is preliminary, no store, no record events.  Code is needed for LHCD operation
at General Atomics
the tdi based one was too difficult to debug.","itvfailed because java did not compile. so the classes to test were missing.
http://jenkins2.mdsplus.org/job/1-pull-request-test/2489/console
something about MdsException.DevPYDEVICE_NOT_FOUND missing",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2094,2020-08-12T18:45:25Z,2021-08-18T16:14:38Z,2022-01-10T11:50:14Z,CLOSED,False,466,0,5,https://github.com/joshStillerman,Feature:  Add new python incaa dio2 device support,8,['notest'],https://github.com/MDSplus/mdsplus/pull/2094,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2094#issuecomment-674061488,"This is a new implementation of the RfxDevices DIO2 device type.
The implementation is preliminary, no store, no record events.  Code is needed for LHCD operation
at General Atomics
the tdi based one was too difficult to debug.",Please re review,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2094,2020-08-12T18:45:25Z,2021-08-18T16:14:38Z,2022-01-10T11:50:14Z,CLOSED,False,466,0,5,https://github.com/joshStillerman,Feature:  Add new python incaa dio2 device support,8,['notest'],https://github.com/MDSplus/mdsplus/pull/2094,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2094#issuecomment-708511998,"This is a new implementation of the RfxDevices DIO2 device type.
The implementation is preliminary, no store, no record events.  Code is needed for LHCD operation
at General Atomics
the tdi based one was too difficult to debug.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2094,2020-08-12T18:45:25Z,2021-08-18T16:14:38Z,2022-01-10T11:50:14Z,CLOSED,False,466,0,5,https://github.com/joshStillerman,Feature:  Add new python incaa dio2 device support,8,['notest'],https://github.com/MDSplus/mdsplus/pull/2094,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2094#issuecomment-743312718,"This is a new implementation of the RfxDevices DIO2 device type.
The implementation is preliminary, no store, no record events.  Code is needed for LHCD operation
at General Atomics
the tdi based one was too difficult to debug.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2094,2020-08-12T18:45:25Z,2021-08-18T16:14:38Z,2022-01-10T11:50:14Z,CLOSED,False,466,0,5,https://github.com/joshStillerman,Feature:  Add new python incaa dio2 device support,8,['notest'],https://github.com/MDSplus/mdsplus/pull/2094,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2094#issuecomment-901245595,"This is a new implementation of the RfxDevices DIO2 device type.
The implementation is preliminary, no store, no record events.  Code is needed for LHCD operation
at General Atomics
the tdi based one was too difficult to debug.",closed due to inactivity,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2096,2020-08-17T15:09:32Z,2020-08-26T20:36:57Z,2020-08-26T20:37:00Z,MERGED,True,175,104,4,https://github.com/zack-vii,"Fix: move imports in tdi/dev_support/*.py, so they may survive module…",1,[],https://github.com/MDSplus/mdsplus/pull/2096,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2096,"… reloads and co.
not trivial with original layout when it is loaded from libpython withing python. MDSplus objects unloaded but reload was not triggered as import was outside of function definition. this is due to the way we import and cache pythonic tdi funs.","… reloads and co.
not trivial with original layout when it is loaded from libpython withing python. MDSplus objects unloaded but reload was not triggered as import was outside of function definition. this is due to the way we import and cache pythonic tdi funs.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2096,2020-08-17T15:09:32Z,2020-08-26T20:36:57Z,2020-08-26T20:37:00Z,MERGED,True,175,104,4,https://github.com/zack-vii,"Fix: move imports in tdi/dev_support/*.py, so they may survive module…",1,[],https://github.com/MDSplus/mdsplus/pull/2096,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2096#issuecomment-680680105,"… reloads and co.
not trivial with original layout when it is loaded from libpython withing python. MDSplus objects unloaded but reload was not triggered as import was outside of function definition. this is due to the way we import and cache pythonic tdi funs.","anyone,",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2097,2020-08-19T07:06:47Z,2020-08-19T09:16:35Z,2020-08-19T09:16:36Z,MERGED,True,19,2,2,https://github.com/GabrieleManduchi,Gm java streams,8,[],https://github.com/MDSplus/mdsplus/pull/2097,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2097,Let jScope optimize a larger class of expressions (including nid references to nodes containing in turn other expressions including segmented nodes),Let jScope optimize a larger class of expressions (including nid references to nodes containing in turn other expressions including segmented nodes),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2098,2020-08-19T09:24:05Z,2020-08-19T13:11:05Z,2020-08-19T13:11:06Z,MERGED,True,22,3,1,https://github.com/GabrieleManduchi,Feature:MARTe2 types,1,[],https://github.com/MDSplus/mdsplus/pull/2098,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2098,Use explicit typecast for parameters in generated GAMs and DataSources,Use explicit typecast for parameters in generated GAMs and DataSources,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2099,2020-08-20T02:14:31Z,2020-08-26T09:43:29Z,2020-08-26T09:43:33Z,MERGED,True,69,22,10,https://github.com/zack-vii,Fix: device setup,2,[],https://github.com/MDSplus/mdsplus/pull/2099,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2099,"to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path","to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2099,2020-08-20T02:14:31Z,2020-08-26T09:43:29Z,2020-08-26T09:43:33Z,MERGED,True,69,22,10,https://github.com/zack-vii,Fix: device setup,2,[],https://github.com/MDSplus/mdsplus/pull/2099,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2099#issuecomment-680297094,"to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path","Timo, I was trying to test it, to see what I get if I run your java command. So I cloned your repo and checkout your  ""zck-device-setup"".
When I build it, using ""bootstrap"" and then configure, I'm not getting in the end the directory structure that you are expecting.
For example, I don't have ""java/classes"", and also I don't see ""java/jtraverser2/src/main/java/mds/devices/Device.java"". What I get is ""java/jtraverser2/classes/mds/devices""
Am I building it wrong?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2099,2020-08-20T02:14:31Z,2020-08-26T09:43:29Z,2020-08-26T09:43:33Z,MERGED,True,69,22,10,https://github.com/zack-vii,Fix: device setup,2,[],https://github.com/MDSplus/mdsplus/pull/2099,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2099#issuecomment-680329227,"to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path","hm well i nad is a short version but in the end in an installed fs there should be a java/classes folder in $MDSPLUS_DIR where you find all .jar files.
Device.java is here
https://github.com/MDSplus/mdsplus/blob/alpha/java/jtraverser2/src/main/java/mds/devices/Device.java
which will be compiled and packed into jtraverser2.jar. tge other jars are requred to open the setup,
as an easy way use the jtraverser2 bin script and replave the entrypoint with mds.devices.Device . that should do it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2099,2020-08-20T02:14:31Z,2020-08-26T09:43:29Z,2020-08-26T09:43:33Z,MERGED,True,69,22,10,https://github.com/zack-vii,Fix: device setup,2,[],https://github.com/MDSplus/mdsplus/pull/2099,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2099#issuecomment-680415986,"to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path","i added the executable scripts setupDevice.template/bat in java/jtraverser2
e.g. \TEST::TOP:DEVICE is DIO2 device
setupDevice test -1 DEVICE",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2099,2020-08-20T02:14:31Z,2020-08-26T09:43:29Z,2020-08-26T09:43:33Z,MERGED,True,69,22,10,https://github.com/zack-vii,Fix: device setup,2,[],https://github.com/MDSplus/mdsplus/pull/2099,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2099#issuecomment-680510853,"to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path","retest this please
failed because /mdsplus was not mounted on all slaves",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2099,2020-08-20T02:14:31Z,2020-08-26T09:43:29Z,2020-08-26T09:43:33Z,MERGED,True,69,22,10,https://github.com/zack-vii,Fix: device setup,2,[],https://github.com/MDSplus/mdsplus/pull/2099,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2099#issuecomment-680532265,"to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path","TODO: tdi calls should use something like:
execute(""spawn('setupDevice $ $ $')"", $EXPT, $SHOT, getnci(_nid, ""FULLPATH""))

python could use os.system() or subprocess.POpen or similar
edit: on that note if the tdi functions are converted to python scripts they could use a shared python method to do the system call",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2099,2020-08-20T02:14:31Z,2020-08-26T09:43:29Z,2020-08-26T09:43:33Z,MERGED,True,69,22,10,https://github.com/zack-vii,Fix: device setup,2,[],https://github.com/MDSplus/mdsplus/pull/2099,https://github.com/santorofer,7,https://github.com/MDSplus/mdsplus/pull/2099#issuecomment-680680142,"to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path","Hi Timo,
Just tested your setupDevice executable with one of our test trees that had a DIO2.
It worked well, it seems.
Cheers!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2099,2020-08-20T02:14:31Z,2020-08-26T09:43:29Z,2020-08-26T09:43:33Z,MERGED,True,69,22,10,https://github.com/zack-vii,Fix: device setup,2,[],https://github.com/MDSplus/mdsplus/pull/2099,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2099#issuecomment-680685394,"to call it from within MDSPLUS_DIR/java/classes
java -cp ""jTraverser2.jar;Devicebeans.jar;jDevices.jar;jScope.jar"" mds.devices.Device expt shot path",great thanks for testing. how do we go from here. i can implement the puthon api. should it be a separate pr? or should we merge this first,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2100,2020-08-20T12:13:01Z,2020-08-26T19:54:11Z,2020-08-26T20:35:13Z,CLOSED,False,37,54,6,https://github.com/GabrieleManduchi,"Fix:removed __init__.py no more required, that breaks MARTE2 python d…",6,[],https://github.com/MDSplus/mdsplus/pull/2100,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2100,…evices,…evices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2100,2020-08-20T12:13:01Z,2020-08-26T19:54:11Z,2020-08-26T20:35:13Z,CLOSED,False,37,54,6,https://github.com/GabrieleManduchi,"Fix:removed __init__.py no more required, that breaks MARTE2 python d…",6,[],https://github.com/MDSplus/mdsplus/pull/2100,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2100#issuecomment-678256435,…evices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2100,2020-08-20T12:13:01Z,2020-08-26T19:54:11Z,2020-08-26T20:35:13Z,CLOSED,False,37,54,6,https://github.com/GabrieleManduchi,"Fix:removed __init__.py no more required, that breaks MARTE2 python d…",6,[],https://github.com/MDSplus/mdsplus/pull/2100,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2100#issuecomment-679945447,…evices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2100,2020-08-20T12:13:01Z,2020-08-26T19:54:11Z,2020-08-26T20:35:13Z,CLOSED,False,37,54,6,https://github.com/GabrieleManduchi,"Fix:removed __init__.py no more required, that breaks MARTE2 python d…",6,[],https://github.com/MDSplus/mdsplus/pull/2100,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2100#issuecomment-680080136,…evices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2100,2020-08-20T12:13:01Z,2020-08-26T19:54:11Z,2020-08-26T20:35:13Z,CLOSED,False,37,54,6,https://github.com/GabrieleManduchi,"Fix:removed __init__.py no more required, that breaks MARTE2 python d…",6,[],https://github.com/MDSplus/mdsplus/pull/2100,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2100#issuecomment-680694960,…evices,For the moment I revert init.py . In a later PR I will move MARTe2 devices into a separate RfxDevices directory,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2100,2020-08-20T12:13:01Z,2020-08-26T19:54:11Z,2020-08-26T20:35:13Z,CLOSED,False,37,54,6,https://github.com/GabrieleManduchi,"Fix:removed __init__.py no more required, that breaks MARTE2 python d…",6,[],https://github.com/MDSplus/mdsplus/pull/2100,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2100#issuecomment-681087381,…evices,would be solved by #1977,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2100,2020-08-20T12:13:01Z,2020-08-26T19:54:11Z,2020-08-26T20:35:13Z,CLOSED,False,37,54,6,https://github.com/GabrieleManduchi,"Fix:removed __init__.py no more required, that breaks MARTE2 python d…",6,[],https://github.com/MDSplus/mdsplus/pull/2100,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2100#issuecomment-681090436,…evices,device integration included in #1977 (e560e81),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2101,2020-08-26T08:13:46Z,2020-08-26T16:33:06Z,2020-08-26T16:33:07Z,MERGED,True,20,21,3,https://github.com/GabrieleManduchi,Fix: jtraverser crash,3,[],https://github.com/MDSplus/mdsplus/pull/2101,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2101,Handle empty nodes in DeviceChoice avoiding jTraverser crash,Handle empty nodes in DeviceChoice avoiding jTraverser crash,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2101,2020-08-26T08:13:46Z,2020-08-26T16:33:06Z,2020-08-26T16:33:07Z,MERGED,True,20,21,3,https://github.com/GabrieleManduchi,Fix: jtraverser crash,3,[],https://github.com/MDSplus/mdsplus/pull/2101,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2101#issuecomment-680740429,Handle empty nodes in DeviceChoice avoiding jTraverser crash,"$ git checkout gm-fix-jtraverser
Branch gm-fix-jtraverser set up to track remote branch gm-fix-jtraverser from upstream.
Switched to a new branch 'gm-fix-jtraverser'
$ git rebase upstream/alpha -i
Successfully rebased and updated refs/heads/gm-fix-jtraverser.
$ git push -f",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2101,2020-08-26T08:13:46Z,2020-08-26T16:33:06Z,2020-08-26T16:33:07Z,MERGED,True,20,21,3,https://github.com/GabrieleManduchi,Fix: jtraverser crash,3,[],https://github.com/MDSplus/mdsplus/pull/2101,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2101#issuecomment-680755623,Handle empty nodes in DeviceChoice avoiding jTraverser crash,"A better management is now provided:

An exception is issued by Database.getString() and Database.getStringArray() rather than crashing
DeviceChoice displays no choice if the item is missing",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2101,2020-08-26T08:13:46Z,2020-08-26T16:33:06Z,2020-08-26T16:33:07Z,MERGED,True,20,21,3,https://github.com/GabrieleManduchi,Fix: jtraverser crash,3,[],https://github.com/MDSplus/mdsplus/pull/2101,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2101#issuecomment-680796120,Handle empty nodes in DeviceChoice avoiding jTraverser crash,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2101,2020-08-26T08:13:46Z,2020-08-26T16:33:06Z,2020-08-26T16:33:07Z,MERGED,True,20,21,3,https://github.com/GabrieleManduchi,Fix: jtraverser crash,3,[],https://github.com/MDSplus/mdsplus/pull/2101,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2101#issuecomment-680973553,Handle empty nodes in DeviceChoice avoiding jTraverser crash,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2102,2020-08-26T09:07:25Z,2020-08-26T19:31:47Z,2020-08-26T19:31:55Z,CLOSED,False,12,6,41,https://github.com/GabrieleManduchi,DRAFT: Reorganize RfxDevices into verdor/model like folder structure,3,[],https://github.com/MDSplus/mdsplus/pull/2102,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2102,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2102,2020-08-26T09:07:25Z,2020-08-26T19:31:47Z,2020-08-26T19:31:55Z,CLOSED,False,12,6,41,https://github.com/GabrieleManduchi,DRAFT: Reorganize RfxDevices into verdor/model like folder structure,3,[],https://github.com/MDSplus/mdsplus/pull/2102,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2102#issuecomment-681080262,,woven into PR #1977,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2103,2020-08-26T15:02:29Z,2020-08-28T06:55:57Z,2020-08-28T06:55:58Z,MERGED,True,88,8,3,https://github.com/GabrieleManduchi,Feature:added streaming of serialized times and samples,3,[],https://github.com/MDSplus/mdsplus/pull/2103,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2103,Allow sending serialized times and samples retaining full back compatibility,Allow sending serialized times and samples retaining full back compatibility,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2103,2020-08-26T15:02:29Z,2020-08-28T06:55:57Z,2020-08-28T06:55:58Z,MERGED,True,88,8,3,https://github.com/GabrieleManduchi,Feature:added streaming of serialized times and samples,3,[],https://github.com/MDSplus/mdsplus/pull/2103,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2103#issuecomment-681087006,Allow sending serialized times and samples retaining full back compatibility,"17:05:42 /mdsplus-docker/jenkins/workspace/fc28/src/mdsobjects/cpp/mdsdatastreams.cpp: In static member function 'static void MDSplus::EventStream::send(int, const char*, MDSplus::Data*, MDSplus::Data*)':
17:05:42 /mdsplus-docker/jenkins/workspace/fc28/src/mdsobjects/cpp/mdsdatastreams.cpp:463:12: error: null destination pointer [-Werror=format-overflow=]
17:05:42      sprintf(msgBuf, ""%d %s B %d "", shot, name, nTimesSer);
17:05:42      ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
17:05:42 cc1plus: all warnings being treated as errors",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2103,2020-08-26T15:02:29Z,2020-08-28T06:55:57Z,2020-08-28T06:55:58Z,MERGED,True,88,8,3,https://github.com/GabrieleManduchi,Feature:added streaming of serialized times and samples,3,[],https://github.com/MDSplus/mdsplus/pull/2103,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2103#issuecomment-681624811,Allow sending serialized times and samples retaining full back compatibility,"Thanks, unfortunately my local compiler does not issue any warning. Anyway, maybe it wants the passed args explictly initialized, let's see.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2103,2020-08-26T15:02:29Z,2020-08-28T06:55:57Z,2020-08-28T06:55:58Z,MERGED,True,88,8,3,https://github.com/GabrieleManduchi,Feature:added streaming of serialized times and samples,3,[],https://github.com/MDSplus/mdsplus/pull/2103,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2103#issuecomment-681760891,Allow sending serialized times and samples retaining full back compatibility,"good morning Gabriele: pro tip ;)
ate you using docker. use the picky os and run
deploy/build.sh --os=fc28 --test -i

to run it in interactive mode. then you can compile just the file in question as you code.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2103,2020-08-26T15:02:29Z,2020-08-28T06:55:57Z,2020-08-28T06:55:58Z,MERGED,True,88,8,3,https://github.com/GabrieleManduchi,Feature:added streaming of serialized times and samples,3,[],https://github.com/MDSplus/mdsplus/pull/2103,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2103#issuecomment-681795691,Allow sending serialized times and samples retaining full back compatibility,"Good tip, I will keep in mind for the next time, thanks!",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2104,2020-08-27T06:46:22Z,2020-09-03T15:50:41Z,2020-09-03T15:50:41Z,MERGED,True,26,9,1,https://github.com/santorofer,Acq435 hardware filter,5,[],https://github.com/MDSplus/mdsplus/pull/2104,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2104,"These are modifications to the acq435st.py MDSplus pydevice to keep the hardware filter (aka hardware decimation or Accumulate/Decimate filter) inside a range of values between 0 and 4.
1- INIT function now check the value enter in the node of the tree for hardware filter to be inside the range. Then, set the value directly in the ACQ box using its knobs. If a value is outside the range, a warning is printed, and the decimation is set to 0, i.e no decimation.
2- The run function of the MDSWorker now reads the hardware decimation value that was set directly from the ACQ box. Then, the calculation of dt is perform.","These are modifications to the acq435st.py MDSplus pydevice to keep the hardware filter (aka hardware decimation or Accumulate/Decimate filter) inside a range of values between 0 and 4.
1- INIT function now check the value enter in the node of the tree for hardware filter to be inside the range. Then, set the value directly in the ACQ box using its knobs. If a value is outside the range, a warning is printed, and the decimation is set to 0, i.e no decimation.
2- The run function of the MDSWorker now reads the hardware decimation value that was set directly from the ACQ box. Then, the calculation of dt is perform.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2108,WEll that was easy enough. should prevent issue #2105,WEll that was easy enough. should prevent issue #2105,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685898103,WEll that was easy enough. should prevent issue #2105,but wasn't that the point. this ensures the install dir is private hence the warning all content will be DELETED in caps. just like it will be when you uninstall.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685903748,WEll that was easy enough. should prevent issue #2105,secondly purging the target dir ensures a clean install.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685904725,WEll that was easy enough. should prevent issue #2105,I just assume if we would simply prevetn you from installing users would complain about the requirement to manually remove teh folder. and if they continue without the folder will be wiped on uninstall anyway.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685906765,WEll that was easy enough. should prevent issue #2105,https://www.mdsplus.org/dist/release/Windows/z_pydevices/MDSplus-z_pydevices-7.111-0.exe,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685909313,WEll that was easy enough. should prevent issue #2105,"I guess I am thinking - belt and suspenders.  We do what you suggest AND we rm the dirs we create /r. and the parent not /r
on uninstall.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685914117,WEll that was easy enough. should prevent issue #2105,Then it will take longe to fix and or will require good maintainance as currently there is no log on files and folders that are copied appart from files that would be installed in system folder when installed for all users.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/joshStillerman,8,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685921505,WEll that was easy enough. should prevent issue #2105,"I am just suggesting we remove the directories we create in \program
files\MDsplus:
 09/02/2020  02:26 PM <DIR>          java
 08/29/2020  06:19 PM             1,568 MDSplus-License.rtf
 08/29/2020  06:20 PM               766 mdsplus.ico
 09/02/2020  02:26 PM    <DIR>          python
 09/02/2020  02:26 PM    <DIR>          tdi
 09/02/2020  02:26 PM             1,955 uninstall.dat
 09/02/2020  02:26 PM           108,633 uninstall.exe
 09/02/2020  02:26 PM    <DIR>          xml
there are potentially a few more like MATLAB, IDL

that list does not change.
On 9/2/20 2:21 PM, Timo Schroeder wrote:

 Then it will take longe to fix and or will require good maintainance
 as currently there is no log on files that are copier appart from
 files that would be installed in system folder when installed for all
 users.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2108 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZIUAYVNM3455QON33DSD2ELZANCNFSM4QTNK5WA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685926979,WEll that was easy enough. should prevent issue #2105,"Not sure what you are afrait of accidentally removing during uninstall if we do ""RmDit /r $InstDir"". Given that probably: ""This has not been a problem for 30 years"" ;) if i may quote tom.
The target may not be Program Files/MDSplus but any target chosen by the user. and this target may as well have folders like pyhton, tdi, matlab, xml, etc. already in it. So if we want to be sure, we would have to check for each one.
Or we simply trust in the user to be sane and know what it means to DELETE... Maybe we can recycle the old folder instead, i.e. move it to trash so it could be restored.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685927640,WEll that was easy enough. should prevent issue #2105,https://nsis.sourceforge.io/mediawiki/index.php?title=Send_to_Recycle_Bin&oldid=4076,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/joshStillerman,11,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685930707,WEll that was easy enough. should prevent issue #2105,"Perfect!
On 9/2/20 2:45 PM, Timo Schroeder wrote:

 https://nsis.sourceforge.io/mediawiki/index.php?title=Send_to_Recycle_Bin&oldid=4076

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2108 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZLYYMKR2I66L5T2S33SD2HFFANCNFSM4QTNK5WA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685962359,WEll that was easy enough. should prevent issue #2105,hm recycle does not seem to work like that on modern windows .. it asks for admin elevation even when the target folder and its parent is owned by the user.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/joshStillerman,13,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685969194,WEll that was easy enough. should prevent issue #2105,"weird that you can permanently delete stuff but not recycle it.
On 9/2/20 3:55 PM, Timo Schroeder wrote:

 hm recycle does not seem to work like that on modern windows .. it
 asks for admin elevation even when the target folder and its parent is
 owned by the user.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2108 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZOMA5JJUNWDQ7DY6C3SD2PMNANCNFSM4QTNK5WA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/joshStillerman,14,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685976508,WEll that was easy enough. should prevent issue #2105,"how about a move command ?

move MDSplus \$Recycle.Bin
On 9/2/20 3:55 PM, Timo Schroeder wrote:

 hm recycle does not seem to work like that on modern windows .. it
 asks for admin elevation even when the target folder and its parent is
 owned by the user.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2108 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZOMA5JJUNWDQ7DY6C3SD2PMNANCNFSM4QTNK5WA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,15,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685988710,WEll that was easy enough. should prevent issue #2105,"elevation seems to work as i can run the whole thing as admin but if i run it on userlevel it does not work. movin to $Recycle.Bin wont work as $Recycle.Bin contains the user specific subdirs that are encoded with its SUID, s i would need to get that first. however that usually leads to a corrupt recycle journal. at least it did back then on XP forcing you to fix it by emptying the bin
...
Through what i found RmDir /r is the default behaviour for uninstall.  you sure we want to be special given the efford",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,16,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685990881,WEll that was easy enough. should prevent issue #2105,i mean i can rename it but then what if the new name already exists. i could try to hack something to work on my machine but will it work on other versions. i caqn try to recycle which should work as admin and remdir if it fails but to be honest the recycle code looks quite complecated and currently relies on an undocumented 'feature' that may not be as is for newer versions of nsis. it will still remove permanently if recycle bin is not available or disabled.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,17,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-685993469,WEll that was easy enough. should prevent issue #2105,about the permission thing.. it seems teh api is outdated and since vista there is a new one.. but c++ only and thus cannot be used from nsis ootb. pesumably the new api is not just safer to use (the other one requires to hack a double null termination of the path or it may delete more than requested or crashes) but also uses an implementation that does not require elevated permissions.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,18,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-686031349,WEll that was easy enough. should prevent issue #2105,interesting.. if you use SHFileOperation FO_DELETE without the FOF_ALLOWUNDO flag no elevation is required. however this will delete the file permanently to its tha access to the recyclebin that requires elevation. i think i will give up at this point.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,19,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-686062573,WEll that was easy enough. should prevent issue #2105,"this may be out only other option.. but i wont be able to implement it any time soon
https://nsis.sourceforge.io/Uninstall_only_installed_files

remove cached python files",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,20,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-686269745,WEll that was easy enough. should prevent issue #2105,"I change it to try recycle wihch will try to move it to the bin and if it fails it will prompt if folder should be deleted. I also had to tweak the uninstall old as it would complain about uninstall.exe being used. that should be sufficient As you would have to confirm more than once before you doom yourself, that is  when InstDir is a sensible folder and you decided to continue installing and confirmed it being wiped.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/joshStillerman,21,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-686606253,WEll that was easy enough. should prevent issue #2105,"This sounds great -  Thanks for your persistence.
-Josh
On 9/3/20 1:50 AM, Timo Schroeder wrote:

 I change it to try recycle wihch will try to move it to the bin and if
 it fails it will prompt if folder should be deleted. I also had to
 tweak the uninstall old as it would complain about uninstall.exe being
 used. that should be sufficient As you would have to confirm more than
 once before you doom yourself, that is when InstDir is a sensible
 folder and you decided to continue installing and confirmed it being
 wiped.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2108 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZISU3S2NJNC6CGXO3DSD4VEHANCNFSM4QTNK5WA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2108,2020-09-02T17:43:18Z,2020-09-05T05:59:19Z,2020-09-05T05:59:20Z,MERGED,True,451,392,10,https://github.com/zack-vii,Build: show warning during install if target dir already exists,5,[],https://github.com/MDSplus/mdsplus/pull/2108,https://github.com/zack-vii,22,https://github.com/MDSplus/mdsplus/pull/2108#issuecomment-686954623,WEll that was easy enough. should prevent issue #2105,so? the issue was marked urgent... any feedback?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2110,2020-09-03T16:10:10Z,2020-09-03T20:00:59Z,2020-09-03T20:00:59Z,MERGED,True,23,22,1,https://github.com/santorofer,Using sync_role() to set SR and triggers,6,[],https://github.com/MDSplus/mdsplus/pull/2110,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2110,"We have replaced the calls to set the sample rate and the trigger with a new function: sync_role().
    # USAGE sync_role {fpmaster|rpmaster|master|slave|solo} [CLKHZ] [FIN]
    # modifiers [CLK|TRG:SENSE=falling|rising] [CLK|TRG:DX=d0|d1]
    # modifiers [TRG=int|ext]
    # modifiers [CLKDIV=div]","We have replaced the calls to set the sample rate and the trigger with a new function: sync_role().
    # USAGE sync_role {fpmaster|rpmaster|master|slave|solo} [CLKHZ] [FIN]
    # modifiers [CLK|TRG:SENSE=falling|rising] [CLK|TRG:DX=d0|d1]
    # modifiers [TRG=int|ext]
    # modifiers [CLKDIV=div]",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2112,2020-09-04T15:00:47Z,2020-09-04T21:20:42Z,2020-09-04T21:20:42Z,MERGED,True,20,14,1,https://github.com/santorofer,Fix: Improve HW filtering (this also fixes a bad merge),4,[],https://github.com/MDSplus/mdsplus/pull/2112,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2112,"Just a small changes to the HW filtering algorithm. Also, this PR will fix a bad merge/build of the version of the acq435st.py that is currently in ""Release:  alpha_release_7.111.1""
1- there a check has been added to be sure that if the acq435 returns a HW filter = 0, that this is set to 1 instead, which. means: no hardware decimation.
2- the bad merge code that was in the INIT() is now the correct one, where the HW_filter is set.
3- The hardware filter tree node  now is not a power of 2. Instead it is the actual hardware sample decimation. It is in the range of [1,32] where 1 (and 0) means ""decimation disabled"")
4- We read the value set in the INIT() function directly from the box when using it in the MDSworker.","Just a small changes to the HW filtering algorithm. Also, this PR will fix a bad merge/build of the version of the acq435st.py that is currently in ""Release:  alpha_release_7.111.1""
1- there a check has been added to be sure that if the acq435 returns a HW filter = 0, that this is set to 1 instead, which. means: no hardware decimation.
2- the bad merge code that was in the INIT() is now the correct one, where the HW_filter is set.
3- The hardware filter tree node  now is not a power of 2. Instead it is the actual hardware sample decimation. It is in the range of [1,32] where 1 (and 0) means ""decimation disabled"")
4- We read the value set in the INIT() function directly from the box when using it in the MDSworker.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2115,2020-09-14T17:52:18Z,2020-09-25T10:31:41Z,2020-09-25T10:31:42Z,MERGED,True,8,0,3,https://github.com/zack-vii,Fix: added mission SET_TYPE parameter definition in tcl:set_versions,2,[],https://github.com/MDSplus/mdsplus/pull/2115,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2115,… old parser was sloppy and glossed over this,… old parser was sloppy and glossed over this,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2115,2020-09-14T17:52:18Z,2020-09-25T10:31:41Z,2020-09-25T10:31:42Z,MERGED,True,8,0,3,https://github.com/zack-vii,Fix: added mission SET_TYPE parameter definition in tcl:set_versions,2,[],https://github.com/MDSplus/mdsplus/pull/2115,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2115#issuecomment-692238627,… old parser was sloppy and glossed over this,"retest this please
mfews08 ran out of disk space",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2115,2020-09-14T17:52:18Z,2020-09-25T10:31:41Z,2020-09-25T10:31:42Z,MERGED,True,8,0,3,https://github.com/zack-vii,Fix: added mission SET_TYPE parameter definition in tcl:set_versions,2,[],https://github.com/MDSplus/mdsplus/pull/2115,https://github.com/jonathanschilling,3,https://github.com/MDSplus/mdsplus/pull/2115#issuecomment-698840135,… old parser was sloppy and glossed over this,@joshStillerman @GabrieleManduchi May I kindly ask if there has been time yet to review the suggested changes?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2115,2020-09-14T17:52:18Z,2020-09-25T10:31:41Z,2020-09-25T10:31:42Z,MERGED,True,8,0,3,https://github.com/zack-vii,Fix: added mission SET_TYPE parameter definition in tcl:set_versions,2,[],https://github.com/MDSplus/mdsplus/pull/2115,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2115#issuecomment-698854900,… old parser was sloppy and glossed over this,Seems ok to me,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2116,2020-09-14T18:24:08Z,2020-10-07T17:02:14Z,2020-10-07T17:02:15Z,MERGED,True,96,75,5,https://github.com/zack-vii,Fix: mdsplus-api: added missing TreeSetDbiItm to set versioning dbi,1,[],https://github.com/MDSplus/mdsplus/pull/2116,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2116,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2116,2020-09-14T18:24:08Z,2020-10-07T17:02:14Z,2020-10-07T17:02:15Z,MERGED,True,96,75,5,https://github.com/zack-vii,Fix: mdsplus-api: added missing TreeSetDbiItm to set versioning dbi,1,[],https://github.com/MDSplus/mdsplus/pull/2116,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2116#issuecomment-692232906,,"This is what the author of #2114 was looking for. we tried using ""SET VERSION"" first but this was a typo in the mdsplus.org docu..(fixed it) then used SET VERSTIONS whihc triggered #2114.
please review #2114 and #2115 as soon as you can so he can proceed. Thanks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2116,2020-09-14T18:24:08Z,2020-10-07T17:02:14Z,2020-10-07T17:02:15Z,MERGED,True,96,75,5,https://github.com/zack-vii,Fix: mdsplus-api: added missing TreeSetDbiItm to set versioning dbi,1,[],https://github.com/MDSplus/mdsplus/pull/2116,https://github.com/jonathanschilling,3,https://github.com/MDSplus/mdsplus/pull/2116#issuecomment-698840260,,@GabrieleManduchi May I kindly ask if there has been time yet to review the suggested changes?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2117,2020-09-15T16:00:19Z,2020-09-16T07:27:28Z,2020-11-03T15:31:42Z,CLOSED,False,17,0,1,https://github.com/GabrieleManduchi,Fix:let no args tdiExecute and tdiCompile in Tree.java,1,[],https://github.com/MDSplus/mdsplus/pull/2117,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2117,Variable args do not handle the case no args,Variable args do not handle the case no args,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2117,2020-09-15T16:00:19Z,2020-09-16T07:27:28Z,2020-11-03T15:31:42Z,CLOSED,False,17,0,1,https://github.com/GabrieleManduchi,Fix:let no args tdiExecute and tdiCompile in Tree.java,1,[],https://github.com/MDSplus/mdsplus/pull/2117,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2117#issuecomment-693203919,Variable args do not handle the case no args,Unfortunately they are not covered by the Data... arguments. I discovered this just calling tdiCompile with no args.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2117,2020-09-15T16:00:19Z,2020-09-16T07:27:28Z,2020-11-03T15:31:42Z,CLOSED,False,17,0,1,https://github.com/GabrieleManduchi,Fix:let no args tdiExecute and tdiCompile in Tree.java,1,[],https://github.com/MDSplus/mdsplus/pull/2117,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2117#issuecomment-693204754,Variable args do not handle the case no args,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2117,2020-09-15T16:00:19Z,2020-09-16T07:27:28Z,2020-11-03T15:31:42Z,CLOSED,False,17,0,1,https://github.com/GabrieleManduchi,Fix:let no args tdiExecute and tdiCompile in Tree.java,1,[],https://github.com/MDSplus/mdsplus/pull/2117,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2117#issuecomment-693208578,Variable args do not handle the case no args,"could you check in debug. i use it that way a lot in mdsplus-api. and otherwise this question on SO does not make sense
https://stackoverflow.com/questions/12751746/requiring-at-least-one-element-in-java-variable-argument-list",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2117,2020-09-15T16:00:19Z,2020-09-16T07:27:28Z,2020-11-03T15:31:42Z,CLOSED,False,17,0,1,https://github.com/GabrieleManduchi,Fix:let no args tdiExecute and tdiCompile in Tree.java,1,[],https://github.com/MDSplus/mdsplus/pull/2117,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2117#issuecomment-693209130,Variable args do not handle the case no args,calling tdiCompile with no args is an issue as you need at least the String expr.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2117,2020-09-15T16:00:19Z,2020-09-16T07:27:28Z,2020-11-03T15:31:42Z,CLOSED,False,17,0,1,https://github.com/GabrieleManduchi,Fix:let no args tdiExecute and tdiCompile in Tree.java,1,[],https://github.com/MDSplus/mdsplus/pull/2117,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2117#issuecomment-693213668,Variable args do not handle the case no args,"Also the unit ttest covers it in
java/mdsobjects/src/test/java/MDSplus/MdsTreeTest.java
DataTest line 36-39",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2117,2020-09-15T16:00:19Z,2020-09-16T07:27:28Z,2020-11-03T15:31:42Z,CLOSED,False,17,0,1,https://github.com/GabrieleManduchi,Fix:let no args tdiExecute and tdiCompile in Tree.java,1,[],https://github.com/MDSplus/mdsplus/pull/2117,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2117#issuecomment-693219984,Variable args do not handle the case no args,"Really strange, I repeat the tests on my side.........",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2117,2020-09-15T16:00:19Z,2020-09-16T07:27:28Z,2020-11-03T15:31:42Z,CLOSED,False,17,0,1,https://github.com/GabrieleManduchi,Fix:let no args tdiExecute and tdiCompile in Tree.java,1,[],https://github.com/MDSplus/mdsplus/pull/2117,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/2117#issuecomment-693226951,Variable args do not handle the case no args,"You are right, I discard the PR  I don't know why I got those compilation errors ....",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2118,2020-09-16T20:42:55Z,2020-10-08T05:52:44Z,2020-10-08T05:52:45Z,MERGED,True,96,75,1,https://github.com/santorofer,Feature: ACQ2106 with 435ELF modules,16,[],https://github.com/MDSplus/mdsplus/pull/2118,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2118,"This new python device, based on the acq2106_423st.py and the acq435st.py codes :
1- Builds an MDSplus device for a acq2106 plus N number of 435ELF modules.
2- Handle the clock settings and sample rates with sync_role()
3- Includes looping through the slots to set the hardware filtering for each of them.
This removes the acq435st.py, use a single site acq2106_435st instead.","This new python device, based on the acq2106_423st.py and the acq435st.py codes :
1- Builds an MDSplus device for a acq2106 plus N number of 435ELF modules.
2- Handle the clock settings and sample rates with sync_role()
3- Includes looping through the slots to set the hardware filtering for each of them.
This removes the acq435st.py, use a single site acq2106_435st instead.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2119,2020-09-17T15:00:58Z,2020-09-18T12:42:17Z,2020-09-18T12:42:18Z,MERGED,True,28643,2922,40,https://github.com/GabrieleManduchi,Feature:new devices,2,[],https://github.com/MDSplus/mdsplus/pull/2119,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2119,Bunch of devices+setup for Rfx and MARTe2,Bunch of devices+setup for Rfx and MARTe2,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2120,2020-09-21T18:30:56Z,2020-09-21T20:17:05Z,2020-10-13T16:11:34Z,MERGED,True,1,0,1,https://github.com/joshStillerman,Build: add a rhel8 (centos8),1,[],https://github.com/MDSplus/mdsplus/pull/2120,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2120,"Once the PR for the Docker Builder for RHEL8 is approved and build/pushed
(I am a little fuzzy on this)
This can be built as a platform.
It fails one test not finding the a12(4?)__part_name.fun function.
Presumably something has to be done to add this platform to jenkins.","Once the PR for the Docker Builder for RHEL8 is approved and build/pushed
(I am a little fuzzy on this)
This can be built as a platform.
It fails one test not finding the a12(4?)__part_name.fun function.
Presumably something has to be done to add this platform to jenkins.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2121,New MARTE2_SIMULINK_GENERIC device,New MARTE2_SIMULINK_GENERIC device,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-697697653,New MARTE2_SIMULINK_GENERIC device,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-697821438,New MARTE2_SIMULINK_GENERIC device,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-697940503,New MARTE2_SIMULINK_GENERIC device,"Because they are called by the corresponding java devices. The 'Check' and 'Fill Fields' buttons in the dw setups for MARTE2_SUPERVISOR, MARTE2_PYTHON_GENERIC and MARTE2_SIMULINK_GENERIC perform an evaluation of those funs",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-697952711,New MARTE2_SIMULINK_GENERIC device,"This failed. because the manifest file was not updated to reflect the new files in the kit
14:22:02 94,95d93
14:22:02 < ./usr/local/mdsplus/tdi/java/fillMartePythonFields.py
14:22:02 < ./usr/local/mdsplus/tdi/java/fillMarteSimulinkFields.py
14:22:02 
14:22:02 ======================================================
14:22:02 
14:22:02 Failure: Problem with contents of mdsplus-other-kernel-7.112-0.fc18.noarch.rpm
14:22:02 
14:22:02 ======================================================
14:22:02 
14:22:05 9231159421d9eb0a709e351af364c62c6e8bec915aca022c681bb66f8cb6016f
14:22:05 
14:22:05 ======================================================
14:22:05 
14:22:05 Docker redhat_docker_build.sh returned failure
14:22:05 status when exiting from mdsplus/builder:fc18
14:22:05 
14:22:05 ======================================================
14:22:05 
14:22:05 
14:22:05 ============================================
14:22:05 
14:22:05 Failure: The build was unsuccessful!
14:22:05 
14:22:05 ============================================
14:22:05",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-698011759,New MARTE2_SIMULINK_GENERIC device,"shouldn't they be methods of the device ?  and in the device code ? 
this is not critical, whereas getting into a kit I can install is!
-Josh
On 9/23/20 3:59 PM, GabrieleManduchi wrote:

 Because they are called by the corresponding java devices. The 'Check'
 and 'Fill Fields' buttons in the dw setups for MARTE2_SUPERVISOR,
 MARTE2_PYTHON_GENERIC and MARTE2_SIMULINK_GENERIC perform an
 evaluation of those funs

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2121 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZPEQOH7V444WSEFNCLSHJHSTANCNFSM4RVWWHKQ>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-698152779,New MARTE2_SIMULINK_GENERIC device,"Hmmm, they may be invoked directly from jTraverser by evaluating expression tcl('do/method  check/fill...'). The problem is that those methods return a string that explains what is the error and is displayed by dw setup and method devices do not return string. Indeed the python expression catches the generated exceptions to retrieve and return the error message.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-698216689,New MARTE2_SIMULINK_GENERIC device,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/joshStillerman,9,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-698363227,New MARTE2_SIMULINK_GENERIC device,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2121,2020-09-22T12:25:46Z,2020-09-24T19:51:51Z,2020-09-24T19:51:52Z,MERGED,True,5657,110,18,https://github.com/GabrieleManduchi,Gm devices,15,[],https://github.com/MDSplus/mdsplus/pull/2121,https://github.com/joshStillerman,10,https://github.com/MDSplus/mdsplus/pull/2121#issuecomment-698397325,New MARTE2_SIMULINK_GENERIC device,restest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2122,2020-09-23T13:06:32Z,2020-09-25T06:56:00Z,2020-09-25T06:56:01Z,MERGED,True,25,5,2,https://github.com/GabrieleManduchi,Fix:handle the case of missing field for DeviceCoice and give better …,2,[],https://github.com/MDSplus/mdsplus/pull/2122,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2122,…explanation of error,…explanation of error,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2122,2020-09-23T13:06:32Z,2020-09-25T06:56:00Z,2020-09-25T06:56:01Z,MERGED,True,25,5,2,https://github.com/GabrieleManduchi,Fix:handle the case of missing field for DeviceCoice and give better …,2,[],https://github.com/MDSplus/mdsplus/pull/2122,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2122#issuecomment-697381307,…explanation of error,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2122,2020-09-23T13:06:32Z,2020-09-25T06:56:00Z,2020-09-25T06:56:01Z,MERGED,True,25,5,2,https://github.com/GabrieleManduchi,Fix:handle the case of missing field for DeviceCoice and give better …,2,[],https://github.com/MDSplus/mdsplus/pull/2122,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2122#issuecomment-697698638,…explanation of error,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2122,2020-09-23T13:06:32Z,2020-09-25T06:56:00Z,2020-09-25T06:56:01Z,MERGED,True,25,5,2,https://github.com/GabrieleManduchi,Fix:handle the case of missing field for DeviceCoice and give better …,2,[],https://github.com/MDSplus/mdsplus/pull/2122,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2122#issuecomment-698297302,…explanation of error,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2122,2020-09-23T13:06:32Z,2020-09-25T06:56:00Z,2020-09-25T06:56:01Z,MERGED,True,25,5,2,https://github.com/GabrieleManduchi,Fix:handle the case of missing field for DeviceCoice and give better …,2,[],https://github.com/MDSplus/mdsplus/pull/2122,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2122#issuecomment-698551818,…explanation of error,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2126,2020-09-30T20:57:13Z,2020-10-30T16:56:26Z,2020-10-30T16:56:26Z,MERGED,True,21,5,1,https://github.com/orozda,Fix: IDL bug in evaluate causing dimension truncation in mdsvalue,1,[],https://github.com/MDSplus/mdsplus/pull/2126,https://github.com/orozda,1,https://github.com/MDSplus/mdsplus/pull/2126,"These changes were made to fix bug brought up in issue 2125, more info in issue.
Link: #2125
in file idl/mdsvalue.pro, starting at line 27, mdsvalue uses either idl function execute or custom function ""evaluate"" depending on whether it is being called from VM. The issue was narrowed down to be in ""evaluate"" function. The logic added would remove the need to call execute or evaluate, since they are only used on a string and must fit into one of the case statements.","These changes were made to fix bug brought up in issue 2125, more info in issue.
Link: #2125
in file idl/mdsvalue.pro, starting at line 27, mdsvalue uses either idl function execute or custom function ""evaluate"" depending on whether it is being called from VM. The issue was narrowed down to be in ""evaluate"" function. The logic added would remove the need to call execute or evaluate, since they are only used on a string and must fit into one of the case statements.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2126,2020-09-30T20:57:13Z,2020-10-30T16:56:26Z,2020-10-30T16:56:26Z,MERGED,True,21,5,1,https://github.com/orozda,Fix: IDL bug in evaluate causing dimension truncation in mdsvalue,1,[],https://github.com/MDSplus/mdsplus/pull/2126,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2126#issuecomment-719657558,"These changes were made to fix bug brought up in issue 2125, more info in issue.
Link: #2125
in file idl/mdsvalue.pro, starting at line 27, mdsvalue uses either idl function execute or custom function ""evaluate"" depending on whether it is being called from VM. The issue was narrowed down to be in ""evaluate"" function. The logic added would remove the need to call execute or evaluate, since they are only used on a string and must fit into one of the case statements.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2127,2020-10-06T15:38:46Z,2020-10-07T17:04:52Z,2020-10-07T17:04:52Z,MERGED,True,2,2,1,https://github.com/AndreaRigoni,fix: python wrong comparison,1,[],https://github.com/MDSplus/mdsplus/pull/2127,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/2127,"You should use == and != to compare variables values and use the Python is and is not operators only when you want to check whether two variables point to the same memory address.
taken from: https://realpython.com/python-is-identity-vs-equality/","You should use == and != to compare variables values and use the Python is and is not operators only when you want to check whether two variables point to the same memory address.
taken from: https://realpython.com/python-is-identity-vs-equality/",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2128,2020-10-08T15:19:52Z,2020-10-08T15:52:00Z,2020-10-08T15:52:01Z,MERGED,True,7238,446,26,https://github.com/GabrieleManduchi,Gm devices,26,[],https://github.com/MDSplus/mdsplus/pull/2128,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2128,Fixes and new components of MARTe2 devices,Fixes and new components of MARTe2 devices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2129,2020-10-09T11:14:29Z,2020-10-09T17:37:29Z,2020-11-03T15:30:24Z,MERGED,True,9756,187,6,https://github.com/GabrieleManduchi,Gm devices,32,[],https://github.com/MDSplus/mdsplus/pull/2129,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2129,Some fixes to MARTe2 devices and DW setup,Some fixes to MARTe2 devices and DW setup,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2130,2020-10-13T11:47:17Z,2020-10-14T13:43:30Z,2020-10-14T13:43:31Z,MERGED,True,19,5,1,https://github.com/GabrieleManduchi,Fix:report correctly Parameter type and dimensions,3,[],https://github.com/MDSplus/mdsplus/pull/2130,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2130,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2131,2020-10-13T15:43:17Z,2020-10-14T14:18:42Z,2020-10-14T14:18:43Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,Build(deps-dev): Bump junit from 4.13 to 4.13.1 in /java,1,['dependencies'],https://github.com/MDSplus/mdsplus/pull/2131,https://github.com/apps/dependabot,1,https://github.com/MDSplus/mdsplus/pull/2131,"Bumps junit from 4.13 to 4.13.1.

Release notes
Sourced from junit's releases.

JUnit 4.13.1
Please refer to the release notes for details.



Changelog
Sourced from junit's changelog.

Summary of changes in version 4.13.1
Rules
Security fix: TemporaryFolder now limits access to temporary folders on Java 1.7 or later
A local information disclosure vulnerability in TemporaryFolder has been fixed. See the published security advisory for details.
Test Runners
[Pull request #1669:](junit-team/junit#1669) Make FrameworkField constructor public
Prior to this change, custom runners could make FrameworkMethod instances, but not FrameworkField instances. This small change allows for both now, because FrameworkField's constructor has been promoted from package-private to public.



Commits

1b683f4 [maven-release-plugin] prepare release r4.13.1
ce6ce3a Draft 4.13.1 release notes
c29dd82 Change version to 4.13.1-SNAPSHOT
1d17486 Add a link to assertThrows in exception testing
543905d Use separate line for annotation in Javadoc
510e906 Add sub headlines to class Javadoc
610155b Merge pull request from GHSA-269g-pwp5-87pp
b6cfd1e Explicitly wrap float parameter for consistency (#1671)
a5d205c Fix GitHub link in FAQ (#1672)
3a5c6b4 Deprecated since jdk9 replacing constructor instance of Double and Float (#1660)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps junit from 4.13 to 4.13.1.

Release notes
Sourced from junit's releases.

JUnit 4.13.1
Please refer to the release notes for details.



Changelog
Sourced from junit's changelog.

Summary of changes in version 4.13.1
Rules
Security fix: TemporaryFolder now limits access to temporary folders on Java 1.7 or later
A local information disclosure vulnerability in TemporaryFolder has been fixed. See the published security advisory for details.
Test Runners
[Pull request #1669:](junit-team/junit#1669) Make FrameworkField constructor public
Prior to this change, custom runners could make FrameworkMethod instances, but not FrameworkField instances. This small change allows for both now, because FrameworkField's constructor has been promoted from package-private to public.



Commits

1b683f4 [maven-release-plugin] prepare release r4.13.1
ce6ce3a Draft 4.13.1 release notes
c29dd82 Change version to 4.13.1-SNAPSHOT
1d17486 Add a link to assertThrows in exception testing
543905d Use separate line for annotation in Javadoc
510e906 Add sub headlines to class Javadoc
610155b Merge pull request from GHSA-269g-pwp5-87pp
b6cfd1e Explicitly wrap float parameter for consistency (#1671)
a5d205c Fix GitHub link in FAQ (#1672)
3a5c6b4 Deprecated since jdk9 replacing constructor instance of Double and Float (#1660)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2131,2020-10-13T15:43:17Z,2020-10-14T14:18:42Z,2020-10-14T14:18:43Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,Build(deps-dev): Bump junit from 4.13 to 4.13.1 in /java,1,['dependencies'],https://github.com/MDSplus/mdsplus/pull/2131,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2131#issuecomment-708412029,"Bumps junit from 4.13 to 4.13.1.

Release notes
Sourced from junit's releases.

JUnit 4.13.1
Please refer to the release notes for details.



Changelog
Sourced from junit's changelog.

Summary of changes in version 4.13.1
Rules
Security fix: TemporaryFolder now limits access to temporary folders on Java 1.7 or later
A local information disclosure vulnerability in TemporaryFolder has been fixed. See the published security advisory for details.
Test Runners
[Pull request #1669:](junit-team/junit#1669) Make FrameworkField constructor public
Prior to this change, custom runners could make FrameworkMethod instances, but not FrameworkField instances. This small change allows for both now, because FrameworkField's constructor has been promoted from package-private to public.



Commits

1b683f4 [maven-release-plugin] prepare release r4.13.1
ce6ce3a Draft 4.13.1 release notes
c29dd82 Change version to 4.13.1-SNAPSHOT
1d17486 Add a link to assertThrows in exception testing
543905d Use separate line for annotation in Javadoc
510e906 Add sub headlines to class Javadoc
610155b Merge pull request from GHSA-269g-pwp5-87pp
b6cfd1e Explicitly wrap float parameter for consistency (#1671)
a5d205c Fix GitHub link in FAQ (#1672)
3a5c6b4 Deprecated since jdk9 replacing constructor instance of Double and Float (#1660)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2132,2020-10-13T15:45:47Z,2020-10-13T17:26:48Z,2020-10-13T17:26:49Z,MERGED,True,80,2,3,https://github.com/GabrieleManduchi,Fix:broken open for new files and wrong DeviceChannel behavior,1,[],https://github.com/MDSplus/mdsplus/pull/2132,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2132,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2133,2020-10-15T11:39:05Z,2020-10-15T12:30:06Z,2020-10-15T12:30:07Z,MERGED,True,5609,4015,6,https://github.com/GabrieleManduchi,Gm fix simulink generic,6,[],https://github.com/MDSplus/mdsplus/pull/2133,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2133,Added MARTe2 Logger device to look ad data flows,Added MARTe2 Logger device to look ad data flows,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2134,2020-10-16T20:29:09Z,2020-10-21T12:08:00Z,2020-10-21T12:08:01Z,MERGED,True,6,1,1,https://github.com/joshStillerman,Build: there are no globus 32bit RHEL8 rpms,1,[],https://github.com/MDSplus/mdsplus/pull/2134,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2134,"Remove the -with-gsi 32 bit tests for RHEL8 since there are no
32 bit globus RPMS","Remove the -with-gsi 32 bit tests for RHEL8 since there are no
32 bit globus RPMS",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2135,2020-10-19T05:41:42Z,2020-10-20T02:00:13Z,2020-10-20T02:00:14Z,MERGED,True,16,1,2,https://github.com/santorofer,Acq400s minimum sample rate requirement,4,[],https://github.com/MDSplus/mdsplus/pull/2135,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2135,"A simple error check has been added to both 423ELF and 435ELF. The minimum recommended value from D-Tacq to execute this devices is 10KHz.
From email conversations with Peter Milne, from D-Tacq:
""For lower rate output, the ACQ435 logic does include a simple
accumulate and decimate filter:
http://www.d-tacq.com/resources/d-tacq-4G-acq4xx-UserGuide-r33.pdf
13.1
set.site 1 NACC 8
decimate by 8, 10kHz becomes 1.25kHz.
It's best to keep to powers of 2, then voltage scaling is preserved.
If that is too much of a restriction, ACQ42x does have a filter that preserves scaling for any value of NACC.
The NACC filter means that the ADC logic can run at acceptable speeds, but since it does reduce DMA data rate, if your plan is to run at very low rates, then it's a good idea to reduce the DMA buffer length. It's best to run with > 10 DMA buffers/second, both for responsiveness, and to avoid DMA timeouts.
To set buffer len: 4GUG#28.2.7""","A simple error check has been added to both 423ELF and 435ELF. The minimum recommended value from D-Tacq to execute this devices is 10KHz.
From email conversations with Peter Milne, from D-Tacq:
""For lower rate output, the ACQ435 logic does include a simple
accumulate and decimate filter:
http://www.d-tacq.com/resources/d-tacq-4G-acq4xx-UserGuide-r33.pdf
13.1
set.site 1 NACC 8
decimate by 8, 10kHz becomes 1.25kHz.
It's best to keep to powers of 2, then voltage scaling is preserved.
If that is too much of a restriction, ACQ42x does have a filter that preserves scaling for any value of NACC.
The NACC filter means that the ADC logic can run at acceptable speeds, but since it does reduce DMA data rate, if your plan is to run at very low rates, then it's a good idea to reduce the DMA buffer length. It's best to run with > 10 DMA buffers/second, both for responsiveness, and to avoid DMA timeouts.
To set buffer len: 4GUG#28.2.7""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2135,2020-10-19T05:41:42Z,2020-10-20T02:00:13Z,2020-10-20T02:00:14Z,MERGED,True,16,1,2,https://github.com/santorofer,Acq400s minimum sample rate requirement,4,[],https://github.com/MDSplus/mdsplus/pull/2135,https://github.com/WhoBrokeTheBuild,2,https://github.com/MDSplus/mdsplus/pull/2135#issuecomment-712456522,"A simple error check has been added to both 423ELF and 435ELF. The minimum recommended value from D-Tacq to execute this devices is 10KHz.
From email conversations with Peter Milne, from D-Tacq:
""For lower rate output, the ACQ435 logic does include a simple
accumulate and decimate filter:
http://www.d-tacq.com/resources/d-tacq-4G-acq4xx-UserGuide-r33.pdf
13.1
set.site 1 NACC 8
decimate by 8, 10kHz becomes 1.25kHz.
It's best to keep to powers of 2, then voltage scaling is preserved.
If that is too much of a restriction, ACQ42x does have a filter that preserves scaling for any value of NACC.
The NACC filter means that the ADC logic can run at acceptable speeds, but since it does reduce DMA data rate, if your plan is to run at very low rates, then it's a good idea to reduce the DMA buffer length. It's best to run with > 10 DMA buffers/second, both for responsiveness, and to avoid DMA timeouts.
To set buffer len: 4GUG#28.2.7""","Overall looks great, I would however move the 10000 into a constant variable in the class like MIN_FREQUENCY or something",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2136,2020-10-19T10:37:50Z,2020-10-20T14:49:50Z,2020-10-20T14:49:52Z,MERGED,True,154,44,3,https://github.com/GabrieleManduchi,Gm fix simulink generic,9,[],https://github.com/MDSplus/mdsplus/pull/2136,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2136,"Added optional printout of GAM I/O
Exported setting in SIMULINK_GENERIC DW Setup","Added optional printout of GAM I/O
Exported setting in SIMULINK_GENERIC DW Setup",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2137,2020-10-20T15:36:48Z,2020-10-21T13:03:35Z,2020-10-21T13:03:36Z,MERGED,True,172056,35150,32,https://github.com/GabrieleManduchi,Feature:new devices for ITER NBTF Test Facility and a fix to DeviceWave bean,5,[],https://github.com/MDSplus/mdsplus/pull/2137,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2137,"Except for a minor fix in DeviceWave java bean, this PR addresses only support software for National devices (in device_support-national) and related RFX devices","Except for a minor fix in DeviceWave java bean, this PR addresses only support software for National devices (in device_support-national) and related RFX devices",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2137,2020-10-20T15:36:48Z,2020-10-21T13:03:35Z,2020-10-21T13:03:36Z,MERGED,True,172056,35150,32,https://github.com/GabrieleManduchi,Feature:new devices for ITER NBTF Test Facility and a fix to DeviceWave bean,5,[],https://github.com/MDSplus/mdsplus/pull/2137,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2137#issuecomment-713119574,"Except for a minor fix in DeviceWave java bean, this PR addresses only support software for National devices (in device_support-national) and related RFX devices",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2137,2020-10-20T15:36:48Z,2020-10-21T13:03:35Z,2020-10-21T13:03:36Z,MERGED,True,172056,35150,32,https://github.com/GabrieleManduchi,Feature:new devices for ITER NBTF Test Facility and a fix to DeviceWave bean,5,[],https://github.com/MDSplus/mdsplus/pull/2137,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2137#issuecomment-713519213,"Except for a minor fix in DeviceWave java bean, this PR addresses only support software for National devices (in device_support-national) and related RFX devices","some issues
http://jenkins2.mdsplus.org/job/debian9-64/2404/valgrindResult/",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2138,2020-10-21T04:50:11Z,2020-10-21T14:10:16Z,2020-10-21T14:10:17Z,MERGED,True,18,12,1,https://github.com/santorofer,423ELF full use of sync_role() function,2,[],https://github.com/MDSplus/mdsplus/pull/2138,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2138,The code now uses solely the sync_role() functions to set clocks and triggers.,The code now uses solely the sync_role() functions to set clocks and triggers.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2139,2020-10-21T11:38:06Z,2020-10-21T13:06:33Z,2020-10-21T13:06:34Z,MERGED,True,14,8,1,https://github.com/zack-vii,"Fix: MdsIpTcp.close(), close socket first so it does not hang",1,[],https://github.com/MDSplus/mdsplus/pull/2139,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2139,solves issues with jtraverser2 connect,solves issues with jtraverser2 connect,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2141,2020-10-22T14:38:59Z,2020-10-22T16:02:40Z,2020-10-22T16:02:41Z,MERGED,True,26,16,4,https://github.com/joshStillerman,Jas rhel8,2,[],https://github.com/MDSplus/mdsplus/pull/2141,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2141,This PR makes the RHEL8 platform 64 Bit only,This PR makes the RHEL8 platform 64 Bit only,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2141,2020-10-22T14:38:59Z,2020-10-22T16:02:40Z,2020-10-22T16:02:41Z,MERGED,True,26,16,4,https://github.com/joshStillerman,Jas rhel8,2,[],https://github.com/MDSplus/mdsplus/pull/2141,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2141#issuecomment-714574873,This PR makes the RHEL8 platform 64 Bit only,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2143,2020-10-26T16:30:11Z,2020-10-26T17:05:59Z,2020-10-26T17:06:00Z,MERGED,True,30,14,4,https://github.com/joshStillerman,Add RHEL8 Platform to stable,4,[],https://github.com/MDSplus/mdsplus/pull/2143,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2143,Build: Add RHEL8 platform,Build: Add RHEL8 platform,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2145,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.","The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-718790088,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-718810644,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",retest this please - I increased the timeout on the windoz job,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-718875594,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",retest this please - I have disabled some of the slower builders in an attempt to get it not to timeout,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-718936540,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.","This was timing out because the windoz test suite is hanging.  After poking around in the running docker I can not see why.  The only change in the PR was to replace RemoteAccess.c.
Can anyone help with this ?
I think the next step is to only replace the one routine that was checking for the old version and reporting UNSUPPORTED instead of the whole file.
Thoughts ?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-718967412,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",windows sometimes times out.. if it happens more frequently maybe the RemoteAccess.c relies on other changes.?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-718989548,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",retest this please - I think this time it did run out of time vs getting stuck,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,8,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-718994383,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.","now I am confused.... it is true that: https://github.com/MDSplus/mdsplus/pull/2145/files/8101bb84cc69e148ed3275f723ee37bbd4d9eece
is indentation only - though that was not my intent.  The link above your comment:
8101bb8
shows more significant change.
Basically what should be there now is the stable version of RemoteAccess.c with the one routine that was returning UNSUP replaced with the alpha.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-719449729,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",I should add the Ubuntu18 fix as well,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,10,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-719656551,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",can someone  approve this PR?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2145,2020-10-29T13:50:30Z,2020-10-30T09:39:00Z,2020-10-30T16:30:22Z,MERGED,True,23,23,1,https://github.com/joshStillerman,Fix: Treeshr can not open thick to very old server,2,[],https://github.com/MDSplus/mdsplus/pull/2145,https://github.com/joshStillerman,11,https://github.com/MDSplus/mdsplus/pull/2145#issuecomment-719656910,"The current stable fails to open a tree using thick client when
the server is sufficently old.
In particular a server from
4352e8d4978c4d2f375b2d0094078295e826bbbb

Replacing RemoteAccess.c with the current alpha version appear to
fix this.",or does 'merged' above mean that it is already there?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2146,2020-10-30T09:52:45Z,2020-11-06T16:41:06Z,2020-11-06T16:41:07Z,MERGED,True,10,16,1,https://github.com/zack-vii,Build: fixed Ubuntu18 reprepro by adding explicit export,2,[],https://github.com/MDSplus/mdsplus/pull/2146,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2146,"should fix the reprepro issue on ubuntu18 .. newer version refuse to export implicitly and return a non-zero errorcode.. causing publish to fail.
copied from alpha -  where it seems to work
@joshStillerman : if you could merge this before the next build.. otherwise the ubuntu18 repo needs manual fix again.","should fix the reprepro issue on ubuntu18 .. newer version refuse to export implicitly and return a non-zero errorcode.. causing publish to fail.
copied from alpha -  where it seems to work
@joshStillerman : if you could merge this before the next build.. otherwise the ubuntu18 repo needs manual fix again.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2146,2020-10-30T09:52:45Z,2020-11-06T16:41:06Z,2020-11-06T16:41:07Z,MERGED,True,10,16,1,https://github.com/zack-vii,Build: fixed Ubuntu18 reprepro by adding explicit export,2,[],https://github.com/MDSplus/mdsplus/pull/2146,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2146#issuecomment-720697069,"should fix the reprepro issue on ubuntu18 .. newer version refuse to export implicitly and return a non-zero errorcode.. causing publish to fail.
copied from alpha -  where it seems to work
@joshStillerman : if you could merge this before the next build.. otherwise the ubuntu18 repo needs manual fix again.",ok looks like alpha may fix stable since its cleaning it up when it runs but we should still merge this to be safe,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2147,2020-10-30T15:17:19Z,2020-11-01T16:53:44Z,2020-11-03T15:29:27Z,CLOSED,False,15053,131,13,https://github.com/GabrieleManduchi,Gm spider devices,5,[],https://github.com/MDSplus/mdsplus/pull/2147,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2147,New MARTe2 devices a some fixes to other RFX devices and device support code,New MARTe2 devices a some fixes to other RFX devices and device support code,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2147,2020-10-30T15:17:19Z,2020-11-01T16:53:44Z,2020-11-03T15:29:27Z,CLOSED,False,15053,131,13,https://github.com/GabrieleManduchi,Gm spider devices,5,[],https://github.com/MDSplus/mdsplus/pull/2147,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2147#issuecomment-719669940,New MARTe2 devices a some fixes to other RFX devices and device support code,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2147,2020-10-30T15:17:19Z,2020-11-01T16:53:44Z,2020-11-03T15:29:27Z,CLOSED,False,15053,131,13,https://github.com/GabrieleManduchi,Gm spider devices,5,[],https://github.com/MDSplus/mdsplus/pull/2147,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2147#issuecomment-719773838,New MARTe2 devices a some fixes to other RFX devices and device support code,"if you look at the full console output:
http://jenkins2.mdsplus.org/job/fc28/lastFailedBuild/consoleFull

you can see that some of the tests failed:
 *13:00:24* PASS: taskUnitTest.py
 *13:00:26* FAIL: dclUnitTest.py
 *13:00:27* FAIL: treeUnitTest.py
 *13:00:27* PASS: dataUnitTest.py
 *13:00:28* PASS: connectionUnitTest.py
 *13:00:28* PASS: segmentsUnitTest.py
 *13:00:32* FAIL: threadsUnitTest.py
 *13:00:32*
 ============================================================================
 *13:00:32* Testsuite summary for MDSplus 7a
 *13:00:32*
 ============================================================================
 *13:00:32* *# TOTAL: 7*
 *13:00:32* # PASS: 4
 *13:00:32* # SKIP:  0
 *13:00:32* # XFAIL: 0
 *13:00:32* # FAIL: 3
 *13:00:32* # XPASS: 0
 *13:00:32* # ERROR: 0

And then to the artifacts of this build:

http://jenkins2.mdsplus.org/job/fc28/lastFailedBuild/artifact/tests/64/python/MDSplus/tests/dclUnitTest.log

 runTest (MDSplus.tests.dclUnitTest.Tests) ... Error calling fun in MDSDEVICES
 ERROR

 ======================================================================
 ERROR: runTest (MDSplus.tests.dclUnitTest.Tests)
 ----------------------------------------------------------------------
 Traceback (most recent call last):
    File ""/mdsplus-docker/jenkins/workspace/fc28/src/python/MDSplus/tests/_UnitTest.py"", line 63, in runTest
      self.__getattribute__(test)()
    File ""/mdsplus-docker/jenkins/workspace/fc28/src/python/MDSplus/tests/dclUnitTest.py"", line 43, in interface
      Device.PyDevice('TestDevice').Add(pytree,'TESTDEVICE_I')
    File ""/mdsplus-docker/jenkins/workspace/fc28/src/python/MDSplus/tree.py"", line 3638, in PyDevice
      models = _dat.Data.execute('MdsDevices()').data()
    File ""/mdsplus-docker/jenkins/workspace/fc28/src/python/MDSplus/mdsdata.py"", line 468, in execute
      return TdiExecute(*args,**kwargs)
    File ""/mdsplus-docker/jenkins/workspace/fc28/src/python/MDSplus/mdsdata.py"", line 78, in TdiExecute
      return _cmp.EXECUTE(expression,*_unwrap(args))._setTree(**kwargs).evaluate()
    File ""/mdsplus-docker/jenkins/workspace/fc28/src/python/MDSplus/compound.py"", line 348, in evaluate
      _exc.checkStatus(_TdiShr. TdiIntrinsic(               self.opcode,nargs,argslist,xd.ref))
    File ""/mdsplus-docker/jenkins/workspace/fc28/src/python/MDSplus/mdsExceptions.py"", line 94, in checkStatus
      raise exception
 MDSplus.mdsExceptions.MDSplusERROR: %MDSPLUS-E-ERROR, Error

 ----------------------------------------------------------------------
 Ran 1 test in 1.811s

 FAILED (errors=1)
 PyLib=""libpython3.6m.so.1.0""
 FAIL dclUnitTest.py (exit status: 1)
Why it failed is a separate question.  It would be strange that it only
failed this on some of the platforms.  Might be worth retesting ? 
Wiping the workspaces for those builders ?
On 10/30/20 12:52 PM, GabrieleManduchi wrote:

 retest this please

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#2147 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZIMXO26DN2KEE6GKSTSNLVORANCNFSM4TFC67RQ>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2147,2020-10-30T15:17:19Z,2020-11-01T16:53:44Z,2020-11-03T15:29:27Z,CLOSED,False,15053,131,13,https://github.com/GabrieleManduchi,Gm spider devices,5,[],https://github.com/MDSplus/mdsplus/pull/2147,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2147#issuecomment-719793645,New MARTe2 devices a some fixes to other RFX devices and device support code,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2147,2020-10-30T15:17:19Z,2020-11-01T16:53:44Z,2020-11-03T15:29:27Z,CLOSED,False,15053,131,13,https://github.com/GabrieleManduchi,Gm spider devices,5,[],https://github.com/MDSplus/mdsplus/pull/2147,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2147#issuecomment-719794144,New MARTe2 devices a some fixes to other RFX devices and device support code,"Really strange, no reason for the failure, I added only a couple of devices and did not touch any core source.  Retesting now......",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2147,2020-10-30T15:17:19Z,2020-11-01T16:53:44Z,2020-11-03T15:29:27Z,CLOSED,False,15053,131,13,https://github.com/GabrieleManduchi,Gm spider devices,5,[],https://github.com/MDSplus/mdsplus/pull/2147,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/2147#issuecomment-719806381,New MARTe2 devices a some fixes to other RFX devices and device support code,"Nope, it behaves  in a very strange way. FC28 fails without any error in its console output....Others give strange errors. I will issue a test PR with just a trivial change to see if there are any problems in the check procedure",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2147,2020-10-30T15:17:19Z,2020-11-01T16:53:44Z,2020-11-03T15:29:27Z,CLOSED,False,15053,131,13,https://github.com/GabrieleManduchi,Gm spider devices,5,[],https://github.com/MDSplus/mdsplus/pull/2147,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2147#issuecomment-720118164,New MARTe2 devices a some fixes to other RFX devices and device support code,"I don't' knon why this PR refuses to pass the checks. I reported the same changes in another PR which had better luck, so I close this",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2148,2020-10-30T21:31:26Z,2020-11-02T08:30:35Z,2020-11-02T08:30:36Z,MERGED,True,14957,35,9,https://github.com/GabrieleManduchi,Fix:wrong gain in streaming,5,[],https://github.com/MDSplus/mdsplus/pull/2148,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2148,A single change in a python device in order to test PR check,A single change in a python device in order to test PR check,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2149,2020-11-02T19:58:41Z,2020-11-02T22:10:19Z,2020-11-02T22:10:20Z,MERGED,True,1041,19,18,https://github.com/joshStillerman,Build: remove dependencies on /usr/bin/python,1,[],https://github.com/MDSplus/mdsplus/pull/2149,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2149,"RPM seems to search the code and decide we need /usr/bin/python which
does not exist on rhel8","RPM seems to search the code and decide we need /usr/bin/python which
does not exist on rhel8",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2150,2020-11-02T20:07:55Z,2020-11-02T22:09:22Z,2020-11-02T22:09:23Z,MERGED,True,1040,18,17,https://github.com/joshStillerman,Build: remove dependencies on /usr/bin/python,1,[],https://github.com/MDSplus/mdsplus/pull/2150,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2150,"RPM seems to search the code and decide we need /usr/bin/python which
does not exist on rhel8","RPM seems to search the code and decide we need /usr/bin/python which
does not exist on rhel8",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2151,2020-11-05T10:50:39Z,2020-11-05T13:34:31Z,2020-11-05T13:34:33Z,MERGED,True,1933,46,11,https://github.com/GabrieleManduchi,Gm spider devices,5,[],https://github.com/MDSplus/mdsplus/pull/2151,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2151,New MARTe2 devices and an update in National support device library,New MARTe2 devices and an update in National support device library,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2152,2020-11-05T20:05:03Z,2020-11-06T19:18:34Z,2020-11-06T19:18:35Z,MERGED,True,4,4,4,https://github.com/joshStillerman,Build: more RHEL8 dependencies,3,[],https://github.com/MDSplus/mdsplus/pull/2152,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2152,"this fixes a few more kit dependencies
Potentially does not create the scripts that run the python programs.
Want to see what the 'real' tests show","this fixes a few more kit dependencies
Potentially does not create the scripts that run the python programs.
Want to see what the 'real' tests show",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2153,2020-11-06T19:55:48Z,2020-11-16T20:51:15Z,2020-11-23T16:56:12Z,CLOSED,False,1091,3,5,https://github.com/joshStillerman,Jas more rhel8 deps s,4,[],https://github.com/MDSplus/mdsplus/pull/2153,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2153,Same changes as just made to alpha,Same changes as just made to alpha,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2154,2020-11-09T07:45:00Z,2020-11-17T23:55:42Z,2020-11-17T23:55:42Z,MERGED,True,22,21,1,https://github.com/santorofer,Feature: Add choices of master and slave to the sync_role call for acq2106_423st.py,3,[],https://github.com/MDSplus/mdsplus/pull/2154,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2154,"The following are the changes to acq2106_423st.py:
1- Without changing the structure of the tree nodes, now the TRIG_NODE now accept the strings: ""master"" or ""slave"" in the following way:
{'path':':TRIG_MODE',   'type':'text',    'value': 'master:hard', 'options':('no_write_shot',)},
i.e.
role:trig_mode
I'm wondering if this is a good idea or not. In this way we don't need to add another node, called for example, ROLE.
2- Getting and setting of the calibration variables are now done using the call to:
uut.fetch_all_calibration()
So there is no need to loop through the cards to set the coefficients.","The following are the changes to acq2106_423st.py:
1- Without changing the structure of the tree nodes, now the TRIG_NODE now accept the strings: ""master"" or ""slave"" in the following way:
{'path':':TRIG_MODE',   'type':'text',    'value': 'master:hard', 'options':('no_write_shot',)},
i.e.
role:trig_mode
I'm wondering if this is a good idea or not. In this way we don't need to add another node, called for example, ROLE.
2- Getting and setting of the calibration variables are now done using the call to:
uut.fetch_all_calibration()
So there is no need to loop through the cards to set the coefficients.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2155,2020-11-09T16:17:06Z,2020-11-16T14:11:14Z,2020-11-16T14:11:15Z,MERGED,True,4,0,1,https://github.com/joshStillerman,Jas alpha debian requirements,4,[],https://github.com/MDSplus/mdsplus/pull/2155,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2155,builds failing because the tests for java require python and numpy,builds failing because the tests for java require python and numpy,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2158,2020-11-10T21:24:37Z,2020-11-16T16:19:41Z,2020-11-16T16:19:42Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Jas more build fixes,4,[],https://github.com/MDSplus/mdsplus/pull/2158,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2158,rhel5 choking building kits.  Could be an issue of which python is being run.  Switch to 'system python',rhel5 choking building kits.  Could be an issue of which python is being run.  Switch to 'system python',True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2159,2020-11-12T18:16:30Z,2020-11-13T08:33:45Z,2020-11-13T08:33:46Z,MERGED,True,625,9,6,https://github.com/GabrieleManduchi,Gm fix jtraverser,9,[],https://github.com/MDSplus/mdsplus/pull/2159,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2159,"A new device+DW setup (EL_PROBES_SCG)
A fix for jTraverser node rename
A fix to avoid OutOfBounds Exception in jScope when giving wrong dimensions
A FUN for time conversion improved","A new device+DW setup (EL_PROBES_SCG)
A fix for jTraverser node rename
A fix to avoid OutOfBounds Exception in jScope when giving wrong dimensions
A FUN for time conversion improved",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2160,2020-11-15T23:05:06Z,2020-11-16T07:06:25Z,2020-11-16T07:06:26Z,MERGED,True,119,26,9,https://github.com/zack-vii,Fix: thread-safe TreeMakeSegments and co,4,[],https://github.com/MDSplus/mdsplus/pull/2160,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2160,This should fix the issue #2156 .. added test that was fixed by this.. so looks promissing.,This should fix the issue #2156 .. added test that was fixed by this.. so looks promissing.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2161,2020-11-16T10:03:51Z,2020-11-16T13:25:41Z,2020-11-16T13:25:42Z,MERGED,True,93,10,4,https://github.com/GabrieleManduchi,Fix:changed wrong field,2,[],https://github.com/MDSplus/mdsplus/pull/2161,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2161,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2163,2020-11-16T13:55:29Z,2020-11-16T20:34:24Z,2020-11-16T20:34:25Z,MERGED,True,103,51,6,https://github.com/zack-vii,Fix: use open file descriptor locks which are thread safe,6,[],https://github.com/MDSplus/mdsplus/pull/2163,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2163,may not help for windows. i added the test to make for verification,may not help for windows. i added the test to make for verification,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2163,2020-11-16T13:55:29Z,2020-11-16T20:34:24Z,2020-11-16T20:34:25Z,MERGED,True,103,51,6,https://github.com/zack-vii,Fix: use open file descriptor locks which are thread safe,6,[],https://github.com/MDSplus/mdsplus/pull/2163,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2163#issuecomment-728291009,may not help for windows. i added the test to make for verification,"Test should be good now.. this solution works way better than #2160.
Through this PR threads are treated as foreign processes and will block untill teh file lock is released even if held by thread of the same process.  Windows seems to have done thread unique locks natively.
it may make the pydevice workaround with threads self.dev = dev.copy() obsolete.. but this should be tested.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2164,2020-11-16T17:43:01Z,2020-11-16T20:49:57Z,2020-11-23T16:55:28Z,CLOSED,False,4,0,1,https://github.com/joshStillerman,Jas rhel update bin,5,[],https://github.com/MDSplus/mdsplus/pull/2164,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2164,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2165,2020-11-16T20:48:54Z,2020-11-16T21:17:50Z,2020-11-16T21:17:51Z,MERGED,True,8,4,1,https://github.com/joshStillerman,Build: rhel8 packaging,6,[],https://github.com/MDSplus/mdsplus/pull/2165,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2165,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2166,2020-11-17T12:58:42Z,2020-11-24T00:03:10Z,2020-11-24T00:03:11Z,MERGED,True,776,2767,54,https://github.com/zack-vii,Build: use libblas if available.. it is maintained and possibly better than our old versions,17,[],https://github.com/MDSplus/mdsplus/pull/2166,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2166,cleanup some fortran stuff. got rid of some warnings or the necessity to suppress all warnings,cleanup some fortran stuff. got rid of some warnings or the necessity to suppress all warnings,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2166,2020-11-17T12:58:42Z,2020-11-24T00:03:10Z,2020-11-24T00:03:11Z,MERGED,True,776,2767,54,https://github.com/zack-vii,Build: use libblas if available.. it is maintained and possibly better than our old versions,17,[],https://github.com/MDSplus/mdsplus/pull/2166,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2166#issuecomment-730616108,cleanup some fortran stuff. got rid of some warnings or the necessity to suppress all warnings,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2166,2020-11-17T12:58:42Z,2020-11-24T00:03:10Z,2020-11-24T00:03:11Z,MERGED,True,776,2767,54,https://github.com/zack-vii,Build: use libblas if available.. it is maintained and possibly better than our old versions,17,[],https://github.com/MDSplus/mdsplus/pull/2166,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2166#issuecomment-732416761,cleanup some fortran stuff. got rid of some warnings or the necessity to suppress all warnings,should be good now... activated tests for mdslib and fixed issues that popped up.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2167,2020-11-17T15:17:16Z,2020-11-18T08:31:42Z,2020-11-18T08:31:43Z,MERGED,True,13,22,3,https://github.com/joshStillerman,Fix: Allow thick to open from OLD servers,2,[],https://github.com/MDSplus/mdsplus/pull/2167,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2167,"The current alpha can open trees served by very old servers via
thick client.  In particular ones served by mdsplus built from:
4352e8d4978c4d2f375b2d0094078295e826bbbb

This ports alpha's routines involved in this in TreeOpen and
RemoteAccess into stable.
Note:  once the tree is opened, not all operations work. This is
true for the current alpha also.
$mdstcl

TCL> set tree test
TCL> dir
Error message was: %TDI-E-UNKNOWN_VAR, Unknown/undefined variable name
mdsdcl: --> failed on line 'dir'

Total of 0 nodes.","The current alpha can open trees served by very old servers via
thick client.  In particular ones served by mdsplus built from:
4352e8d4978c4d2f375b2d0094078295e826bbbb

This ports alpha's routines involved in this in TreeOpen and
RemoteAccess into stable.
Note:  once the tree is opened, not all operations work. This is
true for the current alpha also.
$mdstcl

TCL> set tree test
TCL> dir
Error message was: %TDI-E-UNKNOWN_VAR, Unknown/undefined variable name
mdsdcl: --> failed on line 'dir'

Total of 0 nodes.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2168,2020-11-17T15:54:20Z,2020-11-17T16:39:53Z,2020-11-17T16:39:54Z,MERGED,True,6,0,1,https://github.com/GabrieleManduchi,Fix:handle xz(x) 2D visualization mode,1,[],https://github.com/MDSplus/mdsplus/pull/2168,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2168,That 2D visualization mode was not correclty managed in Waveform,That 2D visualization mode was not correclty managed in Waveform,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2169,2020-11-18T19:51:05Z,2020-11-18T20:47:08Z,2020-11-18T20:47:09Z,MERGED,True,40,10,3,https://github.com/zack-vii,Build: alpine and redhat fixes,1,[],https://github.com/MDSplus/mdsplus/pull/2169,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2169,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2170,2020-11-18T19:56:59Z,2020-11-18T19:57:36Z,2020-11-23T16:55:27Z,CLOSED,False,1502,355,82,https://github.com/joshStillerman,Jas stable build fix,18,[],https://github.com/MDSplus/mdsplus/pull/2170,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2170,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2171,2020-11-18T20:07:58Z,2020-11-18T20:47:35Z,2020-11-18T20:47:36Z,MERGED,True,14,5,1,https://github.com/zack-vii,Build: fixed for old rhel5,1,[],https://github.com/MDSplus/mdsplus/pull/2171,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2171,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2172,2020-11-19T13:55:55Z,2020-11-19T17:35:35Z,2020-11-19T17:36:40Z,MERGED,True,62,49,10,https://github.com/zack-vii,Build: windows mdsip_service,8,[],https://github.com/MDSplus/mdsplus/pull/2172,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2172,a new version of wine complains. return type is void,a new version of wine complains. return type is void,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2172,2020-11-19T13:55:55Z,2020-11-19T17:35:35Z,2020-11-19T17:36:40Z,MERGED,True,62,49,10,https://github.com/zack-vii,Build: windows mdsip_service,8,[],https://github.com/MDSplus/mdsplus/pull/2172,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2172#issuecomment-730399696,a new version of wine complains. return type is void,"same here
when i updated the docker image a newer gcc was complaining. nor sure it it actually changes the binaries now.. whihc is why i decided it is more a Build pr than a Fix.. but it avoids a -Werror under the new compiler",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2172,2020-11-19T13:55:55Z,2020-11-19T17:35:35Z,2020-11-19T17:36:40Z,MERGED,True,62,49,10,https://github.com/zack-vii,Build: windows mdsip_service,8,[],https://github.com/MDSplus/mdsplus/pull/2172,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2172#issuecomment-730482054,a new version of wine complains. return type is void,"fixes a race, and potential overflow and finished docker-srcdir implementation for trigger.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2172,2020-11-19T13:55:55Z,2020-11-19T17:35:35Z,2020-11-19T17:36:40Z,MERGED,True,62,49,10,https://github.com/zack-vii,Build: windows mdsip_service,8,[],https://github.com/MDSplus/mdsplus/pull/2172,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2172#issuecomment-730529156,a new version of wine complains. return type is void,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2173,2020-11-19T13:58:37Z,2020-11-19T15:30:32Z,2020-11-19T15:30:33Z,MERGED,True,6,6,2,https://github.com/zack-vii,Build: windows mdsip_service,2,[],https://github.com/MDSplus/mdsplus/pull/2173,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2173,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2173,2020-11-19T13:58:37Z,2020-11-19T15:30:32Z,2020-11-19T15:30:33Z,MERGED,True,6,6,2,https://github.com/zack-vii,Build: windows mdsip_service,2,[],https://github.com/MDSplus/mdsplus/pull/2173,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2173#issuecomment-730399260,,when i updated the docker image a newer gcc was complaining. nor sure it it actually changes the binaries now.. whihc is why i decided it is more a Build pr than a Fix.. but it avoids a -Werror under the new compiler,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2174,2020-11-19T16:22:51Z,2020-11-19T18:53:20Z,2020-11-23T16:55:24Z,CLOSED,False,0,0,0,https://github.com/zack-vii,"Fix: race, buffer, and trigger",0,[],https://github.com/MDSplus/mdsplus/pull/2174,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2174,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2175,2020-11-20T13:59:24Z,2020-11-23T15:03:47Z,2020-11-23T15:03:48Z,MERGED,True,27,16,12,https://github.com/zack-vii,Fix: fc32 werrors stable,4,[],https://github.com/MDSplus/mdsplus/pull/2175,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2175,"fixes #2162 ; tested on fc32
fixes to satisfy gcc10 and python3.8 on ubuntu20 fc32","fixes #2162 ; tested on fc32
fixes to satisfy gcc10 and python3.8 on ubuntu20 fc32",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2176,2020-11-20T14:30:38Z,2020-11-23T14:44:38Z,2020-11-23T14:44:39Z,MERGED,True,9,9,4,https://github.com/zack-vii,Fix: fc32 werrors alpha,2,[],https://github.com/MDSplus/mdsplus/pull/2176,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2176,fixes to satisfy gcc10 and python3.8 on ubuntu20 fc32,fixes to satisfy gcc10 and python3.8 on ubuntu20 fc32,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2177,2020-11-25T15:47:50Z,2020-12-01T18:24:52Z,2020-12-01T18:24:53Z,MERGED,True,674,149,3,https://github.com/GabrieleManduchi,Gm marte2 struct,4,[],https://github.com/MDSplus/mdsplus/pull/2177,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2177,Added support for structured Inputs and Outputs for GAMs; Allow directly defining expressions returning signals in GAM inputs,Added support for structured Inputs and Outputs for GAMs; Allow directly defining expressions returning signals in GAM inputs,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2178,2020-11-27T11:32:24Z,2020-11-27T14:51:03Z,2020-11-27T14:51:04Z,MERGED,True,9,3,2,https://github.com/GabrieleManduchi,Fix:porting to java mdsobjects,2,[],https://github.com/MDSplus/mdsplus/pull/2178,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2178,Use TreeNode method getNid() in place of old interface getInt(),Use TreeNode method getNid() in place of old interface getInt(),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2179,2020-11-30T20:50:15Z,2020-12-01T18:20:57Z,2020-12-01T18:20:58Z,MERGED,True,2,2,1,https://github.com/joshStillerman,Fix: move acq2106_435 from python 2 to python3,1,[],https://github.com/MDSplus/mdsplus/pull/2179,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2179,"The current version of acq400_hapi from d-tacq is not python2
compatible.  Switching DAQ processes from python2 to python3
causes the error:
map object is not subscriptable

This is because the map is a generator.  The fix is to wrap the
2 map s in the code in list()","The current version of acq400_hapi from d-tacq is not python2
compatible.  Switching DAQ processes from python2 to python3
causes the error:
map object is not subscriptable

This is because the map is a generator.  The fix is to wrap the
2 map s in the code in list()",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2180,2020-11-30T23:04:19Z,2020-12-02T02:11:48Z,2020-12-02T02:11:48Z,MERGED,True,31,12,1,https://github.com/santorofer,"Feature: Add to 435st device the master/slave choices to trigger mode, and calibration coefficients are fetched from each UUT channel.",5,[],https://github.com/MDSplus/mdsplus/pull/2180,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2180,"The following are the two changes to the 435st device code:
1- a backward compatible changes to the trigger mode, to account for the choices of master or slave, plus hard or soft triggers.
2- Each channel calibration coefficients are read directly by asking the UUT API: i.e. uut.fetch_all_calibration()","The following are the two changes to the 435st device code:
1- a backward compatible changes to the trigger mode, to account for the choices of master or slave, plus hard or soft triggers.
2- Each channel calibration coefficients are read directly by asking the UUT API: i.e. uut.fetch_all_calibration()",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2180,2020-11-30T23:04:19Z,2020-12-02T02:11:48Z,2020-12-02T02:11:48Z,MERGED,True,31,12,1,https://github.com/santorofer,"Feature: Add to 435st device the master/slave choices to trigger mode, and calibration coefficients are fetched from each UUT channel.",5,[],https://github.com/MDSplus/mdsplus/pull/2180,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2180#issuecomment-736796958,"The following are the two changes to the 435st device code:
1- a backward compatible changes to the trigger mode, to account for the choices of master or slave, plus hard or soft triggers.
2- Each channel calibration coefficients are read directly by asking the UUT API: i.e. uut.fetch_all_calibration()",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2180,2020-11-30T23:04:19Z,2020-12-02T02:11:48Z,2020-12-02T02:11:48Z,MERGED,True,31,12,1,https://github.com/santorofer,"Feature: Add to 435st device the master/slave choices to trigger mode, and calibration coefficients are fetched from each UUT channel.",5,[],https://github.com/MDSplus/mdsplus/pull/2180,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/2180#issuecomment-736927190,"The following are the two changes to the 435st device code:
1- a backward compatible changes to the trigger mode, to account for the choices of master or slave, plus hard or soft triggers.
2- Each channel calibration coefficients are read directly by asking the UUT API: i.e. uut.fetch_all_calibration()",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2181,2020-11-30T23:09:46Z,2020-12-01T18:24:25Z,2020-12-01T18:24:25Z,MERGED,True,9,2,1,https://github.com/santorofer,Fix: Add statement so that the value of the tree node for trigger mode is back compatible.,3,[],https://github.com/MDSplus/mdsplus/pull/2181,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2181,"Added some statement so that if the tree node containing the trigger mode is set to ""hard"" then, the code uses ""master""/""hard"". If it's ""soft"" then ""master/""soft"" is used.
Otherwise, it will be any combination allowed by ""sync_role()"", for example, master:hard, slave:hard, etc.","Added some statement so that if the tree node containing the trigger mode is set to ""hard"" then, the code uses ""master""/""hard"". If it's ""soft"" then ""master/""soft"" is used.
Otherwise, it will be any combination allowed by ""sync_role()"", for example, master:hard, slave:hard, etc.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2182,2020-12-02T23:41:33Z,2020-12-03T22:40:48Z,2020-12-03T22:44:24Z,MERGED,True,2,2,2,https://github.com/santorofer,Fix: Remove bug from super().__init__() in DeviceWorker class,2,[],https://github.com/MDSplus/mdsplus/pull/2182,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2182,"The code in the DeviceWorker class had a missing class name in the call to:
super(_ACQ2106_423ST.MDSWorker.DeviceWorker, self).init()
i.e. 'MDSWorker' was missing in that call.","The code in the DeviceWorker class had a missing class name in the call to:
super(_ACQ2106_423ST.MDSWorker.DeviceWorker, self).init()
i.e. 'MDSWorker' was missing in that call.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2182,2020-12-02T23:41:33Z,2020-12-03T22:40:48Z,2020-12-03T22:44:24Z,MERGED,True,2,2,2,https://github.com/santorofer,Fix: Remove bug from super().__init__() in DeviceWorker class,2,[],https://github.com/MDSplus/mdsplus/pull/2182,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2182#issuecomment-738399440,"The code in the DeviceWorker class had a missing class name in the call to:
super(_ACQ2106_423ST.MDSWorker.DeviceWorker, self).init()
i.e. 'MDSWorker' was missing in that call.","Thank you Timo!
…
 On Dec 3, 2020, at 4:41 PM, Timo Schroeder ***@***.***> wrote:


 Merged #2182 <#2182> into alpha.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub <#2182 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AKW7QGL6XBQPKQDAOCXFTXTSTAHX5ANCNFSM4ULGFDOQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2183,2020-12-04T14:34:57Z,2020-12-14T23:01:45Z,2020-12-14T23:01:46Z,MERGED,True,47,39,10,https://github.com/zack-vii,Fix: TREE proper AutoClosable and mode it enum,1,[],https://github.com/MDSplus/mdsplus/pull/2183,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2183,"constructor may fail if mode is not CLOSED which is typical for AutoClosable
no extra this.open() required if mode other than CLOSED is provided to Constructor
providing no Mode or mode CLOSED will not open TREE in constructor.. useful if only passed as reference e.g. in jtraverser2","constructor may fail if mode is not CLOSED which is typical for AutoClosable
no extra this.open() required if mode other than CLOSED is provided to Constructor
providing no Mode or mode CLOSED will not open TREE in constructor.. useful if only passed as reference e.g. in jtraverser2",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2184,2020-12-09T20:38:49Z,2020-12-15T19:08:09Z,2020-12-15T19:08:09Z,MERGED,True,48,26,1,https://github.com/WhoBrokeTheBuild,Fix: Performance issues in InfluxHistorian,3,[],https://github.com/MDSplus/mdsplus/pull/2184,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/2184,"Switch to Array versions of Float32/Uint64 conversion
Roughly 60x performance boost","Switch to Array versions of Float32/Uint64 conversion
Roughly 60x performance boost",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2184,2020-12-09T20:38:49Z,2020-12-15T19:08:09Z,2020-12-15T19:08:09Z,MERGED,True,48,26,1,https://github.com/WhoBrokeTheBuild,Fix: Performance issues in InfluxHistorian,3,[],https://github.com/MDSplus/mdsplus/pull/2184,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2184#issuecomment-744669847,"Switch to Array versions of Float32/Uint64 conversion
Roughly 60x performance boost",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2184,2020-12-09T20:38:49Z,2020-12-15T19:08:09Z,2020-12-15T19:08:09Z,MERGED,True,48,26,1,https://github.com/WhoBrokeTheBuild,Fix: Performance issues in InfluxHistorian,3,[],https://github.com/MDSplus/mdsplus/pull/2184,https://github.com/WhoBrokeTheBuild,3,https://github.com/MDSplus/mdsplus/pull/2184#issuecomment-745482364,"Switch to Array versions of Float32/Uint64 conversion
Roughly 60x performance boost",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2185,2020-12-10T14:39:38Z,2020-12-10T17:50:21Z,2021-02-21T16:48:04Z,CLOSED,False,1652,998,17,https://github.com/GabrieleManduchi,Gm fix devices,8,[],https://github.com/MDSplus/mdsplus/pull/2185,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2185,"A set of fixes+improvements for RfxDevices
A fix to DeviceWave java bean
A fix to jDispatcher (communication with jDIspatchMonitor)
Internal use of double vars  in Digital Filter","A set of fixes+improvements for RfxDevices
A fix to DeviceWave java bean
A fix to jDispatcher (communication with jDIspatchMonitor)
Internal use of double vars  in Digital Filter",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2185,2020-12-10T14:39:38Z,2020-12-10T17:50:21Z,2021-02-21T16:48:04Z,CLOSED,False,1652,998,17,https://github.com/GabrieleManduchi,Gm fix devices,8,[],https://github.com/MDSplus/mdsplus/pull/2185,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2185#issuecomment-742616251,"A set of fixes+improvements for RfxDevices
A fix to DeviceWave java bean
A fix to jDispatcher (communication with jDIspatchMonitor)
Internal use of double vars  in Digital Filter",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2185,2020-12-10T14:39:38Z,2020-12-10T17:50:21Z,2021-02-21T16:48:04Z,CLOSED,False,1652,998,17,https://github.com/GabrieleManduchi,Gm fix devices,8,[],https://github.com/MDSplus/mdsplus/pull/2185,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2185#issuecomment-742685174,"A set of fixes+improvements for RfxDevices
A fix to DeviceWave java bean
A fix to jDispatcher (communication with jDIspatchMonitor)
Internal use of double vars  in Digital Filter",As usual it fails for unknown reason. Shall proceed in smaller steps,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2186,2020-12-10T17:49:49Z,2020-12-11T10:58:13Z,2020-12-11T10:58:14Z,MERGED,True,1561,949,12,https://github.com/GabrieleManduchi,Fix:device bean; device; jDispatcher,5,[],https://github.com/MDSplus/mdsplus/pull/2186,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2186,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2188,2020-12-11T21:18:20Z,2020-12-11T21:48:38Z,2020-12-11T21:48:38Z,MERGED,True,19,4,1,https://github.com/WhoBrokeTheBuild,Fix: Add unique ID to event name in MdsEventTest,1,[],https://github.com/MDSplus/mdsplus/pull/2188,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/2188,"We believe that, when run on an machine with multiple executors, that these tests are leaking and causing each other to fail.
This adds a unique identifier to each event name, hoping to prevent that.","We believe that, when run on an machine with multiple executors, that these tests are leaking and causing each other to fail.
This adds a unique identifier to each event name, hoping to prevent that.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2190,2020-12-15T06:26:25Z,2020-12-23T19:48:47Z,2020-12-23T19:48:47Z,MERGED,True,205,0,3,https://github.com/santorofer,Feature: New ACQ2106 WRTD device,19,[],https://github.com/MDSplus/mdsplus/pull/2190,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2190,"This is a new WRTD device for ACQ2106.
The device:
1- Sets the global WR trigger message, or WR_ID
2- Defines the WR RX matches: i.e. the messages the receiver will respond to.
3- Sets the WR receiver (RX) and and transmitter (TX)
4- Sets the WR trigger source, i.e. FPTRG or HDMI
Usage:
TCL> do /meth wrtd init
For hardware trigger (FPTRG or HDMI):
TCL> do /meth wrtd trig
For immediate transmit of specific message:
TCL> do /meth wrtd trig /ARG=""""""shared_all""""""","This is a new WRTD device for ACQ2106.
The device:
1- Sets the global WR trigger message, or WR_ID
2- Defines the WR RX matches: i.e. the messages the receiver will respond to.
3- Sets the WR receiver (RX) and and transmitter (TX)
4- Sets the WR trigger source, i.e. FPTRG or HDMI
Usage:
TCL> do /meth wrtd init
For hardware trigger (FPTRG or HDMI):
TCL> do /meth wrtd trig
For immediate transmit of specific message:
TCL> do /meth wrtd trig /ARG=""""""shared_all""""""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2190,2020-12-15T06:26:25Z,2020-12-23T19:48:47Z,2020-12-23T19:48:47Z,MERGED,True,205,0,3,https://github.com/santorofer,Feature: New ACQ2106 WRTD device,19,[],https://github.com/MDSplus/mdsplus/pull/2190,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2190#issuecomment-747744629,"This is a new WRTD device for ACQ2106.
The device:
1- Sets the global WR trigger message, or WR_ID
2- Defines the WR RX matches: i.e. the messages the receiver will respond to.
3- Sets the WR receiver (RX) and and transmitter (TX)
4- Sets the WR trigger source, i.e. FPTRG or HDMI
Usage:
TCL> do /meth wrtd init
For hardware trigger (FPTRG or HDMI):
TCL> do /meth wrtd trig
For immediate transmit of specific message:
TCL> do /meth wrtd trig /ARG=""""""shared_all""""""","Latest changes:
1- Now INIT initializes WRTD from nodes of the tree. No arguments to the function are needed. I.e. messages to be sent or received are set in the nodes .
2- TRIG() with no arguments sets the WRTD to be waiting for an external trigger
2- TRIG() with an argument sets it to send an immediate WR message. If the a system has the RX variable set with the same  message, it will trigger.
3- TRIG method no longer in an independent thread.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2191,2020-12-16T07:16:34Z,2021-01-20T21:17:38Z,2021-01-20T21:17:39Z,MERGED,True,287,0,3,https://github.com/santorofer,Feature: New Generic WRPG device for acq2106,15,[],https://github.com/MDSplus/mdsplus/pull/2191,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2191,"This is a new WRPG generic device for acq2106.
The device:
1- distinguishes between systems that contains:
- GPG in site 0 (32 Channels DIO)
- PG in site 1 to 6 (4 or 32 Channels DIO)
2- Sets the GPG/PG unit, e.g. enable the module, set the trigger line, etc.
3- Creates the STL table from output nodes
4- Load the STL table into the GPG/PG module
The GPG/PG module can then be triggered with a WR trigger message using the TRIG method. Or can be triggered by hard or soft trigger as well.","This is a new WRPG generic device for acq2106.
The device:
1- distinguishes between systems that contains:
- GPG in site 0 (32 Channels DIO)
- PG in site 1 to 6 (4 or 32 Channels DIO)
2- Sets the GPG/PG unit, e.g. enable the module, set the trigger line, etc.
3- Creates the STL table from output nodes
4- Load the STL table into the GPG/PG module
The GPG/PG module can then be triggered with a WR trigger message using the TRIG method. Or can be triggered by hard or soft trigger as well.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2191,2020-12-16T07:16:34Z,2021-01-20T21:17:38Z,2021-01-20T21:17:39Z,MERGED,True,287,0,3,https://github.com/santorofer,Feature: New Generic WRPG device for acq2106,15,[],https://github.com/MDSplus/mdsplus/pull/2191,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2191#issuecomment-746852265,"This is a new WRPG generic device for acq2106.
The device:
1- distinguishes between systems that contains:
- GPG in site 0 (32 Channels DIO)
- PG in site 1 to 6 (4 or 32 Channels DIO)
2- Sets the GPG/PG unit, e.g. enable the module, set the trigger line, etc.
3- Creates the STL table from output nodes
4- Load the STL table into the GPG/PG module
The GPG/PG module can then be triggered with a WR trigger message using the TRIG method. Or can be triggered by hard or soft trigger as well.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2191,2020-12-16T07:16:34Z,2021-01-20T21:17:38Z,2021-01-20T21:17:39Z,MERGED,True,287,0,3,https://github.com/santorofer,Feature: New Generic WRPG device for acq2106,15,[],https://github.com/MDSplus/mdsplus/pull/2191,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/2191#issuecomment-750476974,"This is a new WRPG generic device for acq2106.
The device:
1- distinguishes between systems that contains:
- GPG in site 0 (32 Channels DIO)
- PG in site 1 to 6 (4 or 32 Channels DIO)
2- Sets the GPG/PG unit, e.g. enable the module, set the trigger line, etc.
3- Creates the STL table from output nodes
4- Load the STL table into the GPG/PG module
The GPG/PG module can then be triggered with a WR trigger message using the TRIG method. Or can be triggered by hard or soft trigger as well.","Since we have two different kinds of PG devices:
4 Channels (TIGA) and 32 Channels (non-TIGA)
First the acq2106_pg.py file allows you to create a class for 4 channels or for 32 channels. Similar to the way the acq2106_435st.py allows you to say how many sites the system has.
For example, from mdstcl you could say:
TCL>  add node wrpg_161 /model=acq2106_pg_32
And the device will then be a 32 channels GPG.
I guess I could have this done all from the same file instead of having to files.
But the idea is to be able to say how many channels the WRPG will have.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2191,2020-12-16T07:16:34Z,2021-01-20T21:17:38Z,2021-01-20T21:17:39Z,MERGED,True,287,0,3,https://github.com/santorofer,Feature: New Generic WRPG device for acq2106,15,[],https://github.com/MDSplus/mdsplus/pull/2191,https://github.com/santorofer,4,https://github.com/MDSplus/mdsplus/pull/2191#issuecomment-750755646,"This is a new WRPG generic device for acq2106.
The device:
1- distinguishes between systems that contains:
- GPG in site 0 (32 Channels DIO)
- PG in site 1 to 6 (4 or 32 Channels DIO)
2- Sets the GPG/PG unit, e.g. enable the module, set the trigger line, etc.
3- Creates the STL table from output nodes
4- Load the STL table into the GPG/PG module
The GPG/PG module can then be triggered with a WR trigger message using the TRIG method. Or can be triggered by hard or soft trigger as well.","Just to clarify, in the following commit:
""Add CH to the name of the classes for each channe""
I'm using our way of creating classes for the different number of channels, i.e classes for 4 and 32 channels.
On the other hand, in the following commit:
""Change the way the creation of the classes for different number of channels is done. Closer to D-Tacq design.""
The way to create those classes is closer to what D-Taqc had in mind. The number of channels are part of a list of channel available, ie. [4,32]
Both ways are working fine to create a device that in the end has 4 or 32 channels.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2193,2020-12-17T08:51:06Z,2020-12-18T18:22:43Z,2020-12-18T18:22:44Z,MERGED,True,402,338,6,https://github.com/GabrieleManduchi,Feature:add sw trigger on MDSplus event,2,[],https://github.com/MDSplus/mdsplus/pull/2193,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2193,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2193,2020-12-17T08:51:06Z,2020-12-18T18:22:43Z,2020-12-18T18:22:44Z,MERGED,True,402,338,6,https://github.com/GabrieleManduchi,Feature:add sw trigger on MDSplus event,2,[],https://github.com/MDSplus/mdsplus/pull/2193,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2193#issuecomment-747345525,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2193,2020-12-17T08:51:06Z,2020-12-18T18:22:43Z,2020-12-18T18:22:44Z,MERGED,True,402,338,6,https://github.com/GabrieleManduchi,Feature:add sw trigger on MDSplus event,2,[],https://github.com/MDSplus/mdsplus/pull/2193,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2193#issuecomment-747370471,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2193,2020-12-17T08:51:06Z,2020-12-18T18:22:43Z,2020-12-18T18:22:44Z,MERGED,True,402,338,6,https://github.com/GabrieleManduchi,Feature:add sw trigger on MDSplus event,2,[],https://github.com/MDSplus/mdsplus/pull/2193,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2193#issuecomment-747459872,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2193,2020-12-17T08:51:06Z,2020-12-18T18:22:43Z,2020-12-18T18:22:44Z,MERGED,True,402,338,6,https://github.com/GabrieleManduchi,Feature:add sw trigger on MDSplus event,2,[],https://github.com/MDSplus/mdsplus/pull/2193,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2193#issuecomment-747493938,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2193,2020-12-17T08:51:06Z,2020-12-18T18:22:43Z,2020-12-18T18:22:44Z,MERGED,True,402,338,6,https://github.com/GabrieleManduchi,Feature:add sw trigger on MDSplus event,2,[],https://github.com/MDSplus/mdsplus/pull/2193,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/2193#issuecomment-747547006,,"Hi Josh,
    I worked a bit with Nicolò, in order to figure out (remember) what is
the correct type of the output in python GAM

It must be a tuple (this comes from the fact that python C interface
exchanges only tuples) where the first element is np.ndarray with the same
shape as the number of outputs. So the correct execute code for PyReset is

def execute(x):
   global reset
   if not reset:
     y = np.float64(0.)
   else:
     y = np.float64(1.)
     reset = False

   return np.ndarray((1,),y),   #note the final comma, it is a tuple whose
only element is a numpy array of one element

the passed argument x is a numpy array with as many elements as the number
of inputs

On my system it works, let me know what happens on yours.

                          Gabriele",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2193,2020-12-17T08:51:06Z,2020-12-18T18:22:43Z,2020-12-18T18:22:44Z,MERGED,True,402,338,6,https://github.com/GabrieleManduchi,Feature:add sw trigger on MDSplus event,2,[],https://github.com/MDSplus/mdsplus/pull/2193,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2193#issuecomment-748106278,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2193,2020-12-17T08:51:06Z,2020-12-18T18:22:43Z,2020-12-18T18:22:44Z,MERGED,True,402,338,6,https://github.com/GabrieleManduchi,Feature:add sw trigger on MDSplus event,2,[],https://github.com/MDSplus/mdsplus/pull/2193,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/2193#issuecomment-748188312,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2196,2020-12-21T11:03:53Z,2020-12-22T08:27:20Z,2020-12-22T08:27:21Z,MERGED,True,42,23,1,https://github.com/GabrieleManduchi,Gm fix jscope img,4,[],https://github.com/MDSplus/mdsplus/pull/2196,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2196,Fix byte pixels so that all 8 bits (unsigned) are correclty used in java,Fix byte pixels so that all 8 bits (unsigned) are correclty used in java,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2196,2020-12-21T11:03:53Z,2020-12-22T08:27:20Z,2020-12-22T08:27:21Z,MERGED,True,42,23,1,https://github.com/GabrieleManduchi,Gm fix jscope img,4,[],https://github.com/MDSplus/mdsplus/pull/2196,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2196#issuecomment-748917190,Fix byte pixels so that all 8 bits (unsigned) are correclty used in java,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2196,2020-12-21T11:03:53Z,2020-12-22T08:27:20Z,2020-12-22T08:27:21Z,MERGED,True,42,23,1,https://github.com/GabrieleManduchi,Gm fix jscope img,4,[],https://github.com/MDSplus/mdsplus/pull/2196,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2196#issuecomment-749166908,Fix byte pixels so that all 8 bits (unsigned) are correclty used in java,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2196,2020-12-21T11:03:53Z,2020-12-22T08:27:20Z,2020-12-22T08:27:21Z,MERGED,True,42,23,1,https://github.com/GabrieleManduchi,Gm fix jscope img,4,[],https://github.com/MDSplus/mdsplus/pull/2196,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2196#issuecomment-749173028,Fix byte pixels so that all 8 bits (unsigned) are correclty used in java,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2196,2020-12-21T11:03:53Z,2020-12-22T08:27:20Z,2020-12-22T08:27:21Z,MERGED,True,42,23,1,https://github.com/GabrieleManduchi,Gm fix jscope img,4,[],https://github.com/MDSplus/mdsplus/pull/2196,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2196#issuecomment-749188065,Fix byte pixels so that all 8 bits (unsigned) are correclty used in java,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2198,2020-12-28T13:33:26Z,2020-12-28T16:55:38Z,2020-12-28T16:55:39Z,MERGED,True,34,8,1,https://github.com/zack-vii,Fix: fallback to old locking schema if new not available,3,[],https://github.com/MDSplus/mdsplus/pull/2198,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2198,"not using a mutex yet.
file locking is kind of broken in the sense of how rwlocks work..
How old file locks work in threads
Thread1: lock file for write - get file lock
Thread2: lock file for read- no operation as process already has lock of higher quality 
Thread2: release lock - process releases lock
Thread1: may still be writing in now unprotected file section
Thread1: release lock - unlock error (suppressed)

Only way to fix this is to have a mutex making the file exclusive;
Using one shared mutex would make all file io exclusive though.
Any other way would basically require us to implement the OFD_LOCKS ourselves just to support it for OSes that we will drop in the future.","not using a mutex yet.
file locking is kind of broken in the sense of how rwlocks work..
How old file locks work in threads
Thread1: lock file for write - get file lock
Thread2: lock file for read- no operation as process already has lock of higher quality 
Thread2: release lock - process releases lock
Thread1: may still be writing in now unprotected file section
Thread1: release lock - unlock error (suppressed)

Only way to fix this is to have a mutex making the file exclusive;
Using one shared mutex would make all file io exclusive though.
Any other way would basically require us to implement the OFD_LOCKS ourselves just to support it for OSes that we will drop in the future.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2199,2020-12-29T15:05:37Z,2020-12-29T16:06:27Z,2020-12-29T16:06:28Z,MERGED,True,13,9,4,https://github.com/GabrieleManduchi,Fix:some fixes to MARTe2 stuff and support funs for MITICA realtime c…,1,[],https://github.com/MDSplus/mdsplus/pull/2199,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2199,…ontrol,…ontrol,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2200,2020-12-30T18:03:58Z,2020-12-31T07:38:02Z,2020-12-31T07:38:03Z,MERGED,True,2104,218,14,https://github.com/GabrieleManduchi,Feature:improved and added camera support,1,[],https://github.com/MDSplus/mdsplus/pull/2200,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2200,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2201,2021-01-04T18:38:38Z,2021-01-12T18:22:45Z,2021-01-12T18:22:46Z,MERGED,True,170,59,7,https://github.com/zack-vii,Feature: _array[:] for flatten and _array[::] for squeeze,10,[],https://github.com/MDSplus/mdsplus/pull/2201,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2201,"flatten tdi arrays like matlab arrays
added squeeze method to remove dimensions of size 1.

flatten will discard boundaries (clears flag) if input dimct > 1 (should it always do that?)
squeeze will remove only the bounds that correspond to removed dims.
tditest has tests that demonstrate the usage.
todo: implement reshape for more advanced operations.","flatten tdi arrays like matlab arrays
added squeeze method to remove dimensions of size 1.

flatten will discard boundaries (clears flag) if input dimct > 1 (should it always do that?)
squeeze will remove only the bounds that correspond to removed dims.
tditest has tests that demonstrate the usage.
todo: implement reshape for more advanced operations.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2201,2021-01-04T18:38:38Z,2021-01-12T18:22:45Z,2021-01-12T18:22:46Z,MERGED,True,170,59,7,https://github.com/zack-vii,Feature: _array[:] for flatten and _array[::] for squeeze,10,[],https://github.com/MDSplus/mdsplus/pull/2201,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2201#issuecomment-754565404,"flatten tdi arrays like matlab arrays
added squeeze method to remove dimensions of size 1.

flatten will discard boundaries (clears flag) if input dimct > 1 (should it always do that?)
squeeze will remove only the bounds that correspond to removed dims.
tditest has tests that demonstrate the usage.
todo: implement reshape for more advanced operations.","new methods and syntax
_a = [[[[[1], [2]]], [[[3], [4]]]]]
[[[[[1], [2]]], [[[3], [4]]]]]

_b = Set_Range(1:2,1:1,1:3,1:6)
Set_Range(1:2,1:1,1:3,[[[1,2]], [[3,4]], [[5,6]]])

FLATTEN(_a)
[1,2,3,4]

_a[:]
[1,2,3,4]

_b[:]
[1,2,3,4,5,6]

SQUEEZE(_a)
[[1,2], [3,4]]

_a[::]
[[1,2], [3,4]]

_b[::]
Set_Range(1:2,1:3,[[1,2], [3,4], [5,6]])",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2201,2021-01-04T18:38:38Z,2021-01-12T18:22:45Z,2021-01-12T18:22:46Z,MERGED,True,170,59,7,https://github.com/zack-vii,Feature: _array[:] for flatten and _array[::] for squeeze,10,[],https://github.com/MDSplus/mdsplus/pull/2201,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2201#issuecomment-758814315,"flatten tdi arrays like matlab arrays
added squeeze method to remove dimensions of size 1.

flatten will discard boundaries (clears flag) if input dimct > 1 (should it always do that?)
squeeze will remove only the bounds that correspond to removed dims.
tditest has tests that demonstrate the usage.
todo: implement reshape for more advanced operations.",@joshStillerman : what about this one?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2202,2021-01-05T21:46:38Z,2021-01-12T16:31:42Z,2021-01-12T16:31:44Z,MERGED,True,834,1741,49,https://github.com/zack-vii,Fix: tools assisted tests for alpha - and fixes,27,[],https://github.com/MDSplus/mdsplus/pull/2202,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2202,This will likely fail because the supressions need to be updated. well .. not because jenkins does not trigger the jobs yet,This will likely fail because the supressions need to be updated. well .. not because jenkins does not trigger the jobs yet,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2202,2021-01-05T21:46:38Z,2021-01-12T16:31:42Z,2021-01-12T16:31:44Z,MERGED,True,834,1741,49,https://github.com/zack-vii,Fix: tools assisted tests for alpha - and fixes,27,[],https://github.com/MDSplus/mdsplus/pull/2202,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2202#issuecomment-755575903,This will likely fail because the supressions need to be updated. well .. not because jenkins does not trigger the jobs yet,"covered rhel8 issue with 32bit tests.. redhat can now use arch to restrict tests.
reset all suppressions and started to build suppressions for most modern os: fc32
added os jobs for all tool tests
enabled sanitiser for java tests - may fail miserably but with luck it will only requires some java suppressions
fixed java configuration",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2205,2021-01-07T18:21:40Z,2021-01-07T22:23:35Z,2021-01-07T22:23:36Z,MERGED,True,153,30,7,https://github.com/GabrieleManduchi,Gm national,3,[],https://github.com/MDSplus/mdsplus/pull/2205,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2205,Support files and improvements for National Instrument ADC multiwindow acquisition,Support files and improvements for National Instrument ADC multiwindow acquisition,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2206,2021-01-08T08:17:10Z,2021-01-11T21:57:54Z,2021-01-11T21:57:54Z,MERGED,True,17,10,1,https://github.com/santorofer,Fix: Add logic to account for non-consecutive sites,5,[],https://github.com/MDSplus/mdsplus/pull/2206,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2206,"I have added some logic to account for non-consecutive sites.
Mainly, I made used of the HAPI method:
uut.module.items()
to ask for what sites are actually physically populated by a 435ELF inside the ACQ.","I have added some logic to account for non-consecutive sites.
Mainly, I made used of the HAPI method:
uut.module.items()
to ask for what sites are actually physically populated by a 435ELF inside the ACQ.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2207,2021-01-11T10:55:54Z,2021-01-12T17:44:16Z,2021-01-12T17:44:17Z,MERGED,True,734,143,6,https://github.com/GabrieleManduchi,Gm segments,6,[],https://github.com/MDSplus/mdsplus/pull/2207,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2207,"Moved MakeSegmentResampled, MakeSegmentMinMax, BeginSegmentResampled, BeginSegmentMinMax, putSegmentResampled, PutSegmentMinMax into treeshr (from mdsobject/cpp).
Tests added in mdsobject/cpp/testing (to exercise both treeshr and MdsObjects interface)","Moved MakeSegmentResampled, MakeSegmentMinMax, BeginSegmentResampled, BeginSegmentMinMax, putSegmentResampled, PutSegmentMinMax into treeshr (from mdsobject/cpp).
Tests added in mdsobject/cpp/testing (to exercise both treeshr and MdsObjects interface)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2207,2021-01-11T10:55:54Z,2021-01-12T17:44:16Z,2021-01-12T17:44:17Z,MERGED,True,734,143,6,https://github.com/GabrieleManduchi,Gm segments,6,[],https://github.com/MDSplus/mdsplus/pull/2207,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2207#issuecomment-757947239,"Moved MakeSegmentResampled, MakeSegmentMinMax, BeginSegmentResampled, BeginSegmentMinMax, putSegmentResampled, PutSegmentMinMax into treeshr (from mdsobject/cpp).
Tests added in mdsobject/cpp/testing (to exercise both treeshr and MdsObjects interface)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2208,2021-01-11T20:19:17Z,2021-04-24T08:53:28Z,2021-04-24T08:53:41Z,CLOSED,False,1041,2034,44,https://github.com/zack-vii,Fix: tools assisted tests for stable - and fixes,25,[],https://github.com/MDSplus/mdsplus/pull/2208,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2208,#2202 for stable,#2202 for stable,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2208,2021-01-11T20:19:17Z,2021-04-24T08:53:28Z,2021-04-24T08:53:41Z,CLOSED,False,1041,2034,44,https://github.com/zack-vii,Fix: tools assisted tests for stable - and fixes,25,[],https://github.com/MDSplus/mdsplus/pull/2208,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2208#issuecomment-772801292,#2202 for stable,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2209,2021-01-12T17:46:40Z,2021-03-30T20:10:37Z,2021-03-30T20:10:37Z,MERGED,True,163,16,2,https://github.com/WhoBrokeTheBuild,Feature: Add Python interface to new Resampled Segment API,1,[],https://github.com/MDSplus/mdsplus/pull/2209,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/2209,"Add python API endpoints for the new functions:

beginSegmentResampled
beginSegmentMinMax
makeSegmentResampled
makeSegmentMinMax","Add python API endpoints for the new functions:

beginSegmentResampled
beginSegmentMinMax
makeSegmentResampled
makeSegmentMinMax",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2209,2021-01-12T17:46:40Z,2021-03-30T20:10:37Z,2021-03-30T20:10:37Z,MERGED,True,163,16,2,https://github.com/WhoBrokeTheBuild,Feature: Add Python interface to new Resampled Segment API,1,[],https://github.com/MDSplus/mdsplus/pull/2209,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2209#issuecomment-759499316,"Add python API endpoints for the new functions:

beginSegmentResampled
beginSegmentMinMax
makeSegmentResampled
makeSegmentMinMax",you may need to rebase this branch to alpha as it may be missing the new fc32 suppressions,True,{'THUMBS_UP': ['https://github.com/WhoBrokeTheBuild']}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2209,2021-01-12T17:46:40Z,2021-03-30T20:10:37Z,2021-03-30T20:10:37Z,MERGED,True,163,16,2,https://github.com/WhoBrokeTheBuild,Feature: Add Python interface to new Resampled Segment API,1,[],https://github.com/MDSplus/mdsplus/pull/2209,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2209#issuecomment-772815310,"Add python API endpoints for the new functions:

beginSegmentResampled
beginSegmentMinMax
makeSegmentResampled
makeSegmentMinMax","@WhoBrokeTheBuild : Could you reapply the formater that josh used on the modified files, so it is cleanu with current alpha. I resolved the merge conflicts but did not know the config for the formater to adapt your code blocks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2209,2021-01-12T17:46:40Z,2021-03-30T20:10:37Z,2021-03-30T20:10:37Z,MERGED,True,163,16,2,https://github.com/WhoBrokeTheBuild,Feature: Add Python interface to new Resampled Segment API,1,[],https://github.com/MDSplus/mdsplus/pull/2209,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2209#issuecomment-775394939,"Add python API endpoints for the new functions:

beginSegmentResampled
beginSegmentMinMax
makeSegmentResampled
makeSegmentMinMax",So what is the current state of this?  Did you (Timo) actually try to make the change referred to?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2209,2021-01-12T17:46:40Z,2021-03-30T20:10:37Z,2021-03-30T20:10:37Z,MERGED,True,163,16,2,https://github.com/WhoBrokeTheBuild,Feature: Add Python interface to new Resampled Segment API,1,[],https://github.com/MDSplus/mdsplus/pull/2209,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2209#issuecomment-775410308,"Add python API endpoints for the new functions:

beginSegmentResampled
beginSegmentMinMax
makeSegmentResampled
makeSegmentMinMax","No since this was in @WhoBrokeTheBuild 's fork, i did not what to mess with his branch as necessary to fix the merge conflicts.. also the cpp part does not seem to work, which i dont know anything of.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2209,2021-01-12T17:46:40Z,2021-03-30T20:10:37Z,2021-03-30T20:10:37Z,MERGED,True,163,16,2,https://github.com/WhoBrokeTheBuild,Feature: Add Python interface to new Resampled Segment API,1,[],https://github.com/MDSplus/mdsplus/pull/2209,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2209#issuecomment-775416521,"Add python API endpoints for the new functions:

beginSegmentResampled
beginSegmentMinMax
makeSegmentResampled
makeSegmentMinMax","OK -

   He is out today.  My cpp PR passed, so I merged it today.

In theory Gabriele moved the resample code to C and made new C++ that
called it.
On 2/8/21 3:06 PM, Timo Schroeder wrote:

 No since this was in @WhoBrokeTheBuild
 <https://github.com/WhoBrokeTheBuild> 's fork, i did not what to mess
 with his branch as necessary to fix the merge conflicts.. also the cpp
 part does not seem to work, which i dont know anything of.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#2209 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZN54R7TJQ6GF6ZAU3LS6A74FANCNFSM4V7SCJMA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2210,2021-01-12T19:14:40Z,2021-01-19T11:55:50Z,2021-01-19T11:55:51Z,MERGED,True,6,6,1,https://github.com/joshStillerman,Fix: the dio2 C code needs single prec. args,2,[],https://github.com/MDSplus/mdsplus/pull/2210,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2210,"Convert the delays and durations to single before passing them to
the C-code","Convert the delays and durations to single before passing them to
the C-code",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2211,2021-01-12T19:20:52Z,2021-01-19T11:55:20Z,2021-01-19T11:55:21Z,MERGED,True,26,4,2,https://github.com/joshStillerman,Fix: python3 sockets take bytes not strings,4,[],https://github.com/MDSplus/mdsplus/pull/2211,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2211,"The HtsDevices are now run using Python3.  The socket calls in the
crycon18i device needs to send bytes, and receive bytes instead of
strings","The HtsDevices are now run using Python3.  The socket calls in the
crycon18i device needs to send bytes, and receive bytes instead of
strings",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2214,2021-01-13T11:49:14Z,2021-01-15T19:56:22Z,2021-01-15T19:56:23Z,MERGED,True,5187,85,10,https://github.com/GabrieleManduchi,Feature:new SPIDER devices,6,[],https://github.com/MDSplus/mdsplus/pull/2214,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2214,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2214,2021-01-13T11:49:14Z,2021-01-15T19:56:22Z,2021-01-15T19:56:23Z,MERGED,True,5187,85,10,https://github.com/GabrieleManduchi,Feature:new SPIDER devices,6,[],https://github.com/MDSplus/mdsplus/pull/2214,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2214#issuecomment-759428347,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2214,2021-01-13T11:49:14Z,2021-01-15T19:56:22Z,2021-01-15T19:56:23Z,MERGED,True,5187,85,10,https://github.com/GabrieleManduchi,Feature:new SPIDER devices,6,[],https://github.com/MDSplus/mdsplus/pull/2214,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2214#issuecomment-761077199,,"Your changes are note python 3 compatible.. thats why the tests fail..
interface
Error importing from CRIO_FAU.py: invalid syntax (CRIO_FAU.py, line 75)
Traceback (most recent call last):
File ""/git/mdsplus/python/RfxDevices/init.py"", line 38, in _mimport
module = import(name, globals())
ModuleNotFoundError: No module named 'CRIO_FAU'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File ""/git/mdsplus/tdi/dev_support/MDSDEVICES.py"", line 69, in MDSDEVICES
ans += importDevices(module)
File ""/git/mdsplus/tdi/dev_support/MDSDEVICES.py"", line 40, in importDevices
module = import(name)
File ""/git/mdsplus/python/RfxDevices/init.py"", line 64, in
_mimport(filename[:-3])
File ""/git/mdsplus/python/RfxDevices/init.py"", line 40, in _mimport
module = import(name, globals(), level=level)
File ""/git/mdsplus/python/RfxDevices/CRIO_FAU.py"", line 75
print str(e)
^
SyntaxError: invalid syntax


Your changes are note python 3 compatible.. thats why the tests fail..
interface
Error importing from CRIO_FAU.py: invalid syntax (CRIO_FAU.py, line 75)
Traceback (most recent call last):
File ""/git/mdsplus/python/RfxDevices/init.py"", line 38, in _mimport
module = import(name, globals())
ModuleNotFoundError: No module named 'CRIO_FAU'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File ""/git/mdsplus/tdi/dev_support/MDSDEVICES.py"", line 69, in MDSDEVICES
ans += importDevices(module)
File ""/git/mdsplus/tdi/dev_support/MDSDEVICES.py"", line 40, in importDevices
module = import(name)
File ""/git/mdsplus/python/RfxDevices/init.py"", line 64, in
_mimport(filename[:-3])
File ""/git/mdsplus/python/RfxDevices/init.py"", line 40, in _mimport
module = import(name, globals(), level=level)
File ""/git/mdsplus/python/RfxDevices/CRIO_FAU.py"", line 75
print str(e)
^
SyntaxError: invalid syntax

corrected",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2214,2021-01-13T11:49:14Z,2021-01-15T19:56:22Z,2021-01-15T19:56:23Z,MERGED,True,5187,85,10,https://github.com/GabrieleManduchi,Feature:new SPIDER devices,6,[],https://github.com/MDSplus/mdsplus/pull/2214,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2214#issuecomment-761082301,,mi sono rotto!!!!!!!!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2216,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760025063,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","What did you do to get this.. if you wish to keep it in this form, it would make sense to provider a command tool in e.g. conf that will redo the formating... one thing though.. the imports are sometimes sensitive to order, e.g. winsock2.h must be imported before windows.h
/usr/x86_64-w64-mingw32/sys-root/mingw/include/winsock2.h:15:2: error: #warning Please include winsock2.h before windows.h",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760081248,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","I rebased to alpha as it seems the windows tests was deactivated (my bad) and i fixed the order.. would be good to have a script that would do the formatting, that acknowledges the exceptions (import order).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760252175,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","I used clang-format -i filename.c

and -i filename.h

We I wonder if there are hooks on commit, or we have to do it in a push hook
…
-Josh
On 1/14/21 4:43 AM, Timo Schroeder wrote:

 I rebased to alpha as it seems the windows tests was deactivated (my
 bad) and i fixed the order.. would be good to have a script that would
 do the formatting, that acknowledges the exceptions (import order).

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2216 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZOOAWIBL6B4V4P4RF3SZ24EZANCNFSM4WBJYTMQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760286939,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.",Did it reorder the includes ?  I am surprised,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760289504,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","Timo -
Here is an article about it... suggesting that we do this with our editors.
https://github.com/andrewseidl/githook-clang-format#:~:text=Once%20the%20pre%2Dcommit%20hook,repo%2C%20or%20set%20the%20hooks.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760345286,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.",Hm that could be the way to go. well we need to be able to tell it to keep the include order for some edge cases.. looks like it sorted them alphabetically. also I would like to add a manual script that would do it as well.. on the jenkins we could then run that script and reject the PR if the code does not comply with clang.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760346292,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.",We can add this and make clang a milestone with which we associate PRs that convert other libs.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/joshStillerman,9,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760363127,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","Timo -

   I don't know anything about  / never heard of milestones.  I think
all the initial formatting PRs should be 'semantics free'. There may be
an option that says 'do not reorder includes', I will check.  The web
page seems to say - program your tools to maintain this formatting, so
that formatting does not get mixed with semantics in PRs.  Which makes
sense to me.

I propose:

1 - look into include ordering

2 - look into failure modes

3 - maybe have a job that checks if the formatter is going to make any
changes, and if so, does it, and makes a PR.  We could do this in a
scheduled way.

4 - do the same for .py files.  (I don't think we want the default 8
spaces!)

5 - add any formatting customization, and editor customization scripts
to our git repo

Thoughts ?
…
-Josh
On 1/14/21 12:31 PM, Timo Schroeder wrote:

 We can add this and make clang a milestone with which we associate PRs
 that convert other libs.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2216 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZKBOCKWXMP4HJ5ZDWTSZ4S55ANCNFSM4WBJYTMQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760366998,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","Well i think it can reorder unless its critical.. like for the windows.h and winsock2.h so one would put a config file for the priority order or something. We would already benefit if we do in manually once and then stick with the formats. not sure if we would be able to agree on an IDE. I personally use a mix of nano and recently VS Code.. but for python sometimes Spyder. I think knowing what we want to got for is one thing. How we maintain the code as much in that style without breaking things is another.
A Milestone is something in git you can create and then you can assign PRs and issues to it so its easier to keep track of.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/zack-vii,11,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760368042,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","e.g. We had a milestone ""Improve code quality"" to which i added this PR just now.
As for treeshr this PR is already quite good i would say .. who we tell a formater to keep the order is on a different page.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2216,2021-01-13T19:33:23Z,2021-01-14T21:32:23Z,2021-01-14T21:32:24Z,MERGED,True,8269,7441,34,https://github.com/joshStillerman,Feature: Format all of treeshr using default clang,2,['code quality'],https://github.com/MDSplus/mdsplus/pull/2216,https://github.com/joshStillerman,12,https://github.com/MDSplus/mdsplus/pull/2216#issuecomment-760368200,"This is an attempt to apply clang-format to all of the code in
treeshr.
Feel free to reject this if you believe we should have more
customization of the format.","I think there are configs for all of the potential editors.

vi

vscode

atom

emacs
…
On 1/14/21 1:06 PM, Timo Schroeder wrote:

 Well i think it can reorder unless its critical.. like for the
 windows.h and winsock2.h so one would put a config file for the
 priority order or something. We would already benefit if we do in
 manually once and then stick with the formats. not sure if we would be
 able to agree on an IDE. I personally use a mix of nano and recently
 VS Code.. but for python sometimes Spyder. I think knowing what we
 want to got for is one thing. How we maintain the code as much in that
 style without breaking things is another.

 A Milestone is something in git you can create and then you can assign
 PRs and issues to it so its easier to keep track of.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2216 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZPMZC5JHTLKA26A2KLSZ4XDBANCNFSM4WBJYTMQ>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2217,2021-01-14T21:51:08Z,2021-01-19T13:46:45Z,2021-01-19T14:03:59Z,MERGED,True,78593,71514,543,https://github.com/joshStillerman,"Feature: Apply clang-format to all .c, .h, .cpp",18,['code quality'],https://github.com/MDSplus/mdsplus/pull/2217,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2217,"This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.","This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2217,2021-01-14T21:51:08Z,2021-01-19T13:46:45Z,2021-01-19T14:03:59Z,MERGED,True,78593,71514,543,https://github.com/joshStillerman,"Feature: Apply clang-format to all .c, .h, .cpp",18,['code quality'],https://github.com/MDSplus/mdsplus/pull/2217,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2217#issuecomment-760961197,"This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2217,2021-01-14T21:51:08Z,2021-01-19T13:46:45Z,2021-01-19T14:03:59Z,MERGED,True,78593,71514,543,https://github.com/joshStillerman,"Feature: Apply clang-format to all .c, .h, .cpp",18,['code quality'],https://github.com/MDSplus/mdsplus/pull/2217,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2217#issuecomment-760986568,"This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2217,2021-01-14T21:51:08Z,2021-01-19T13:46:45Z,2021-01-19T14:03:59Z,MERGED,True,78593,71514,543,https://github.com/joshStillerman,"Feature: Apply clang-format to all .c, .h, .cpp",18,['code quality'],https://github.com/MDSplus/mdsplus/pull/2217,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2217#issuecomment-761026559,"This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2217,2021-01-14T21:51:08Z,2021-01-19T13:46:45Z,2021-01-19T14:03:59Z,MERGED,True,78593,71514,543,https://github.com/joshStillerman,"Feature: Apply clang-format to all .c, .h, .cpp",18,['code quality'],https://github.com/MDSplus/mdsplus/pull/2217,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2217#issuecomment-761030887,"This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2217,2021-01-14T21:51:08Z,2021-01-19T13:46:45Z,2021-01-19T14:03:59Z,MERGED,True,78593,71514,543,https://github.com/joshStillerman,"Feature: Apply clang-format to all .c, .h, .cpp",18,['code quality'],https://github.com/MDSplus/mdsplus/pull/2217,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2217#issuecomment-761075321,"This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2217,2021-01-14T21:51:08Z,2021-01-19T13:46:45Z,2021-01-19T14:03:59Z,MERGED,True,78593,71514,543,https://github.com/joshStillerman,"Feature: Apply clang-format to all .c, .h, .cpp",18,['code quality'],https://github.com/MDSplus/mdsplus/pull/2217,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2217#issuecomment-761127244,"This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2217,2021-01-14T21:51:08Z,2021-01-19T13:46:45Z,2021-01-19T14:03:59Z,MERGED,True,78593,71514,543,https://github.com/joshStillerman,"Feature: Apply clang-format to all .c, .h, .cpp",18,['code quality'],https://github.com/MDSplus/mdsplus/pull/2217,https://github.com/joshStillerman,8,https://github.com/MDSplus/mdsplus/pull/2217#issuecomment-761859094,"This PR applies clang-format to all of the rest of the c and c++
source files in mdsplus.
For now it uses the default llvm formatting.
This breaks instances where both
windows.h
and
winsock2.h
are included.  (winsock2.h has to be first)
in theory a .clang-format file specifying the 'priority' of regexes
of the includes could prevent this.
I ran the default config, and checked for this case by hand.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2222,2021-01-19T14:10:25Z,2021-01-21T08:15:22Z,2021-01-21T08:15:23Z,MERGED,True,33962,28070,248,https://github.com/joshStillerman,Feature: format all python code default pep8,1,['code quality'],https://github.com/MDSplus/mdsplus/pull/2222,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2222,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2223,2021-01-19T18:18:14Z,2021-02-08T19:38:48Z,2021-02-08T19:38:49Z,MERGED,True,43605,45064,126,https://github.com/joshStillerman,Fix: try2 to format cpp code,4,[],https://github.com/MDSplus/mdsplus/pull/2223,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2223,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2223,2021-01-19T18:18:14Z,2021-02-08T19:38:48Z,2021-02-08T19:38:49Z,MERGED,True,43605,45064,126,https://github.com/joshStillerman,Fix: try2 to format cpp code,4,[],https://github.com/MDSplus/mdsplus/pull/2223,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2223#issuecomment-763074536,,"Timo -
This builds fine in my directory but fails on tdi_hash undefined symbol.  Can't see why, could you look ?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2223,2021-01-19T18:18:14Z,2021-02-08T19:38:48Z,2021-02-08T19:38:49Z,MERGED,True,43605,45064,126,https://github.com/joshStillerman,Fix: try2 to format cpp code,4,[],https://github.com/MDSplus/mdsplus/pull/2223,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2223#issuecomment-763074705,,Ohh I think I know,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2223,2021-01-19T18:18:14Z,2021-02-08T19:38:48Z,2021-02-08T19:38:49Z,MERGED,True,43605,45064,126,https://github.com/joshStillerman,Fix: try2 to format cpp code,4,[],https://github.com/MDSplus/mdsplus/pull/2223,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2223#issuecomment-771037050,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2223,2021-01-19T18:18:14Z,2021-02-08T19:38:48Z,2021-02-08T19:38:49Z,MERGED,True,43605,45064,126,https://github.com/joshStillerman,Fix: try2 to format cpp code,4,[],https://github.com/MDSplus/mdsplus/pull/2223,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2223#issuecomment-772577186,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2223,2021-01-19T18:18:14Z,2021-02-08T19:38:48Z,2021-02-08T19:38:49Z,MERGED,True,43605,45064,126,https://github.com/joshStillerman,Fix: try2 to format cpp code,4,[],https://github.com/MDSplus/mdsplus/pull/2223,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2223#issuecomment-772875139,,"hm i just realized doing stuff like
if STATUS_OK {
  this();
} else {
  that();
}
was a bad idea.
i should have kept it with ()
if (STATUS_OK) {
  this();
} else {
  that();
}
clang converted it like this
if 
  STATUS_OK {
    this();
  }
else {
  that();
}
on that note. do you have a command or script or profile now that one can use to format the files the same way as these commits?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2224,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-763120176,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","To set the gain and offset knobs for each of the channels, I'm using a technique that I'm sure it can be improved.
The gain and offset of each channel can be set, in python, using the following statement:
uut.s1.SC32_OFFSET_xx = self.getattr('INPUT_yyy:SC_OFFSET').data()
where xx is a number between 1 and 32. While yyy is a number between 1 and 96.
So, due to the fact that the channel number is in the name of the knob, I decided to do the following. For example:
    for ic in range(1,32):
        if site == 1:
            exec(""uut.s1.SC32_OFFSET_%2.2d = self.__getattr__('INPUT_%3.3d:SC_OFFSET').data()""%(ic, ic))
            exec(""uut.s1.SC32_G1_%2.2d     = self.__getattr__('INPUT_%3.3d:SC_GAIN1' ).data()""%(ic, ic))
            exec(""uut.s1.SC32_G2_%2.2d     = self.__getattr__('INPUT_%3.3d:SC_GAIN2' ).data()""%(ic, ic))

This is not a very efficient way to evaluate.
I wonder how this can be improved.?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-763126945,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","uhh no thats bad .. never exec
try setattra and getattr
    for ic in range(1, 32+1):
        if site == 1:
            setattr(uut.s1, 'SC32_OFFSET_%2.2d' % (ic,), getattr(self, 'INPUT_%3.3d:SC_OFFSET' % (ic,)).data())
            ...
EDIT: i assume last channel is 32, so range should be last +1",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,4,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-763128370,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","Thank you Timo. I knew exec() was not good, though it does the job during my testing of the settings of the different knobs.
Let me try this instead.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,5,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-763196582,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","Hi Timo,
Excellent, using setattr() did the trick. What is interesting is that using exec() or stator() doesn't improve the execution time. In other words, it takes the same amount of time to go through the 96 channels, and setting those knobs, using exec() or stator(). I was expecting that it will be faster. But obviously the bottle neck is the actual call to the HAPI library, I think.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,6,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-781509905,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","Example run:
Signal conditioning and Resampling:
Experiment: daqtest
Shot #57
Input 1Vpp
Chan 65 with Gain=2 -> input becomes 2 Vpp
IINPUT_065:RESAMPLED shows data reduced a factor of 100. (average every 100 samples)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-781539651,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","Fernando -

   The resampling looks great.  I am confused about the signal
conditioning.  If you are not changing the input signal (1V P2P) then
the retrieved data, (Volts into the system) should not change.  The raw
data should get 2x as big, but the scaling should take back out that
factor of 2.
-Josh
On 2/18/21 12:29 PM, Fernando Santoro wrote:

 Example run:

 Signal conditioning and Resampling:

 Experiment: daqtest
 Shot #57 <#57>
 Input 1Vpp
 Chan 65 with Gain=2 -> input becomes 2 Vpp
 IINPUT_065:RESAMPLED shows data reduced a factor of 100.

 Screen Shot 2021-02-18 at 11 28 28 AM
 <https://user-images.githubusercontent.com/44955673/108396442-771c0180-71dc-11eb-9f6b-6576276fbcc4.png>

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#2224 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZLMLU24XYHI6WVXJITS7VFANANCNFSM4WJMGCLA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,8,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-782406618,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","Josh, please, take a look at the changes now. I think now everything makes much more sense.
Please, let me know.
As another example run, see the following:
Experiment: daqtest
Shot #58
Input 1 Vpp
Chan 65 with Gain=2 -> the raw counts are now 2x bigger.
INPUT_065: scales back the raw counts to 1 Vpp.
INPUT_065:SC_INPUT: keep the raw data, which in this example become 2 Vpp.
INPUT_065:RESAMPLED shows data reduced a factor of 100. (average every 100 samples)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/joshStillerman,9,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-783643394,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/joshStillerman,10,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-784232585,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.","This is failing on RHEL6.
http://jenkins2.mdsplus.org/job/rhel6/7477/artifact/tests/64/tditest/testing/test-dev-py.log
Could it be python2 vs python3 ?
the complaint (only RH6) is:
Tcl('add node tdidev/model=a12')                                Tcl('add node tdidev/model=a12')
Error importing from acq2106_435sc.py: No module named import <
265389633                                                       265389633",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,11,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-786950125,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,12,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-789253753,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,13,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-802413894,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2224,2021-01-19T20:26:00Z,2021-03-30T17:18:26Z,2021-03-30T17:18:26Z,MERGED,True,422,71,5,https://github.com/santorofer,Feature: New Signal Conditioning device for ACQ2106.,30,[],https://github.com/MDSplus/mdsplus/pull/2224,https://github.com/santorofer,14,https://github.com/MDSplus/mdsplus/pull/2224#issuecomment-802818262,"This is a new ACQ2106_435 device for use on the new D-Tacq ACQ2106 SC32 (Signal Conditioning 32 Chans per site).
The new MDSplus device is a subclass of ACQ2106_435ST that add the following functionality:
1- Add control on the Global and Local (channel level) Gains and Offsets knobs. (if the actual device doesn't offset the signal, the knobs will still be there, but they will not do anything.)
3- Add a tree node called :INPUT_xxx:RESAMPLED, where the lower resolution, ie. re-sampled data will be store.
4- Add to the superclass, i.e. _ACQ2106_435ST, a method to find out which cards/sites are actually physically active.
5- Add to the init method of the superclass, a boolean argument to select if resampling will be used.
TODO:

Add functionality to be able to select different Sample Rates. For now it uses the fix rate from the ACQ2106 SC32 (i.e. at 40KHz). this can be changed by changing the CLKDIV knobs, and so get lower sample rates:
CLKDIV = 2 ---> SR = 20 KHz
CLKDIV = 4 ---> SR = 10 KHz
This will depend on the final D-Tacq solution for this device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2225,2021-01-22T01:57:11Z,2021-02-01T17:50:32Z,2021-02-01T17:50:32Z,MERGED,True,15,15,1,https://github.com/WhoBrokeTheBuild,Attempt to fix MdsConnectionTest,3,[],https://github.com/MDSplus/mdsplus/pull/2225,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/2225,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2225,2021-01-22T01:57:11Z,2021-02-01T17:50:32Z,2021-02-01T17:50:32Z,MERGED,True,15,15,1,https://github.com/WhoBrokeTheBuild,Attempt to fix MdsConnectionTest,3,[],https://github.com/MDSplus/mdsplus/pull/2225,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2225#issuecomment-765398625,,"These are failing on:
21:01:06 mkdir -p classes
21:01:06 echo timestamp > classjava.stamp
21:01:06 make[1]: *** No rule to make target '/jars_dir/java/mdsobjects/tests/tests.jar', needed by 'tests.jar'.  Stop.
21:01:06 make[1]: Leaving directory '/workspace/tests/64/java/mdsobjects/tests'
21:01:06 make: *** [Makefile:104: java/mdsobjects/tests] Error 2

Is it left over from some debugging step ?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2225,2021-01-22T01:57:11Z,2021-02-01T17:50:32Z,2021-02-01T17:50:32Z,MERGED,True,15,15,1,https://github.com/WhoBrokeTheBuild,Attempt to fix MdsConnectionTest,3,[],https://github.com/MDSplus/mdsplus/pull/2225,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2225#issuecomment-765605899,,not sure which one you mean.. it is supposed to be created by the make-jar .. if it is not there the java files could not be compiled. you have to check the main job (1-pull-request) for the logs,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2225,2021-01-22T01:57:11Z,2021-02-01T17:50:32Z,2021-02-01T17:50:32Z,MERGED,True,15,15,1,https://github.com/WhoBrokeTheBuild,Attempt to fix MdsConnectionTest,3,[],https://github.com/MDSplus/mdsplus/pull/2225,https://github.com/WhoBrokeTheBuild,4,https://github.com/MDSplus/mdsplus/pull/2225#issuecomment-768617777,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2225,2021-01-22T01:57:11Z,2021-02-01T17:50:32Z,2021-02-01T17:50:32Z,MERGED,True,15,15,1,https://github.com/WhoBrokeTheBuild,Attempt to fix MdsConnectionTest,3,[],https://github.com/MDSplus/mdsplus/pull/2225,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2225#issuecomment-768619927,,"I think my comment about java timestamps was misplaced here.  I am pretty sure that was about cross-compiling for RP, using  the docker that has already been built.  It just needs to not build the java stuff.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2225,2021-01-22T01:57:11Z,2021-02-01T17:50:32Z,2021-02-01T17:50:32Z,MERGED,True,15,15,1,https://github.com/WhoBrokeTheBuild,Attempt to fix MdsConnectionTest,3,[],https://github.com/MDSplus/mdsplus/pull/2225,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2225#issuecomment-769882154,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2226,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765323196,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765353292,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765383794,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765403453,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765444945,,ALway a different failing system!!!!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765445071,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765601782,,worked ;),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,9,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765906852,,"Well, it is hard to guess the difference comparing since the two formattings are different. I did not develop this personally, but the developers told me that the current version on the alpha broke the device. Maybe they reported the fixes and the return improvements in another working version. Anyway the currently submitted version works and is python3 compatib;le.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,10,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-765907144,,Sincerely we cannot afford devoting more time and tests (sessions are ongoing) to start again from the version on alpha and re-fix it.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2226,2021-01-22T10:09:22Z,2021-01-23T17:55:35Z,2021-01-23T17:55:36Z,MERGED,True,354,247,1,https://github.com/GabrieleManduchi,Fix:recover from return in BASLER camera,2,[],https://github.com/MDSplus/mdsplus/pull/2226,https://github.com/GabrieleManduchi,11,https://github.com/MDSplus/mdsplus/pull/2226#issuecomment-766136928,,"ok, thanks",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2228,2021-01-27T21:40:48Z,2021-01-28T18:49:54Z,2021-01-28T18:49:56Z,MERGED,True,2,1,1,https://github.com/joshStillerman,Fix: mdsip with compression fails to decode data,2,['bug'],https://github.com/MDSplus/mdsplus/pull/2228,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2228,"fixes MDSplus/mdsplus #2227
The code was using the dlen from the message header instead of the
one copied out of the first four bytes of the message body
#closes #2227","fixes MDSplus/mdsplus #2227
The code was using the dlen from the message header instead of the
one copied out of the first four bytes of the message body
#closes #2227",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2228,2021-01-27T21:40:48Z,2021-01-28T18:49:54Z,2021-01-28T18:49:56Z,MERGED,True,2,1,1,https://github.com/joshStillerman,Fix: mdsip with compression fails to decode data,2,['bug'],https://github.com/MDSplus/mdsplus/pull/2228,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2228#issuecomment-769115609,"fixes MDSplus/mdsplus #2227
The code was using the dlen from the message header instead of the
one copied out of the first four bytes of the message body
#closes #2227",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2230,2021-01-30T18:16:16Z,2021-02-02T16:55:07Z,2021-02-02T16:55:08Z,MERGED,True,1692,7,21,https://github.com/GabrieleManduchi,Gm grafana,3,[],https://github.com/MDSplus/mdsplus/pull/2230,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2230,New MDSplus-grafana interface,New MDSplus-grafana interface,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2230,2021-01-30T18:16:16Z,2021-02-02T16:55:07Z,2021-02-02T16:55:08Z,MERGED,True,1692,7,21,https://github.com/GabrieleManduchi,Gm grafana,3,[],https://github.com/MDSplus/mdsplus/pull/2230,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2230#issuecomment-770336353,New MDSplus-grafana interface,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2230,2021-01-30T18:16:16Z,2021-02-02T16:55:07Z,2021-02-02T16:55:08Z,MERGED,True,1692,7,21,https://github.com/GabrieleManduchi,Gm grafana,3,[],https://github.com/MDSplus/mdsplus/pull/2230,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2230#issuecomment-770756858,New MDSplus-grafana interface,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2230,2021-01-30T18:16:16Z,2021-02-02T16:55:07Z,2021-02-02T16:55:08Z,MERGED,True,1692,7,21,https://github.com/GabrieleManduchi,Gm grafana,3,[],https://github.com/MDSplus/mdsplus/pull/2230,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2230#issuecomment-771589047,New MDSplus-grafana interface,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2231,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes","The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771035560,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771115039,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771204265,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771209868,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771485539,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes","jenkins chokes on raspberry build.. it cannot write on /release

23:41:25 mkdir: cannot create directory '/release/updating-readme-install': Read-only file system
...",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771568489,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771569633,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes","the /mdsplus mount is read-only.. possibly due to an issue with the nfs server (mount option is rw and seems ok)
I switched 1-pull-request to use release- and publish-dir to /tmp/release and /tmp/publish, respectively.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/joshStillerman,9,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771719143,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes","I thought I fixed this.  Will check again.  We changed disk servers
On 2/2/21 4:10 AM, Timo Schroeder wrote:

 jenkins chokes on raspberry build.. it cannot write on /release

     00:21:38 rm: cannot remove
     '/release/alpha/DEBS/armhf/mdsplus-alpha-mssql_7.125.2_armhf.deb':
     Read-only file
     ...

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#2231 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZOHNYA7R52VCJEA3WDS466PZANCNFSM4W2ZHDUQ>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/joshStillerman,10,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771722306,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes","it seems to be mounted RW and the user mdsplus-jenkins can write to it. 
No clue what is going on.  this should be:

/mdsplus/release/RaspberryPi/  right ?  which is
 $ mount | grep scratch
 198.125.176.113:/export/scratch/mdsplus on /mdsplus type nfs
 (rw,relatime,vers=3,rsize=65536,wsize=65536,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,mountaddr=198.125.176.113,mountvers=3,mountport=635,mountproto=udp,local_lock=none,addr=198.125.176.113)

On 2/2/21 4:10 AM, Timo Schroeder wrote:

 jenkins chokes on raspberry build.. it cannot write on /release

     00:21:38 rm: cannot remove
     '/release/alpha/DEBS/armhf/mdsplus-alpha-mssql_7.125.2_armhf.deb':
     Read-only file
     ...

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#2231 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZOHNYA7R52VCJEA3WDS466PZANCNFSM4W2ZHDUQ>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/joshStillerman,11,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771723909,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes","Can we chat.  I think it is RW
On 2/2/21 6:27 AM, Timo Schroeder wrote:

 the /mdsplus mount is read-only.. possibly due to an issue with the
 nfs server (mount option is rw and seems ok)
 I switched 1-pull-request to use release- and publish-dir to
 /tmp/release and /tmp/publish, respectively.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#2231 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZMJH4H6JCR4U6SL6XLS47OQ3ANCNFSM4W2ZHDUQ>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2231,2021-01-31T00:06:39Z,2021-02-02T15:53:00Z,2021-02-02T15:53:00Z,MERGED,True,143,19,1,https://github.com/santorofer,Fix: Update of the README.INSTALL file,5,['documentation needed'],https://github.com/MDSplus/mdsplus/pull/2231,https://github.com/zack-vii,12,https://github.com/MDSplus/mdsplus/pull/2231#issuecomment-771726999,"The README.INSTALL has been updated to reflect the latest options for installing from the MDSplus available packages and by building and installing from source.
The following sections were added/created in the file:
A) Introduction
B) Installing MDSplus using packages/kits
C) Building MDSplus using Docker
D) Building MDSplus using configure and make
E) Special Notes","i know but try to write to it.. i think its an issue on the nfs servers end. however i could noit find /scratch/mdsplus

Get Outlook for Android<https://aka.ms/ghei36>
________________________________
From: Josh Stillerman <notifications@github.com>
Sent: Tuesday, February 2, 2021 4:39:45 PM
To: MDSplus/mdsplus <mdsplus@noreply.github.com>
Cc: Timo Schroeder <zack.vii@live.com>; Comment <comment@noreply.github.com>
Subject: Re: [MDSplus/mdsplus] Fix: Update of the README.INSTALL file (#2231)


Can we chat.  I think it is RW
On 2/2/21 6:27 AM, Timo Schroeder wrote:

 the /mdsplus mount is read-only.. possibly due to an issue with the
 nfs server (mount option is rw and seems ok)
 I switched 1-pull-request to use release- and publish-dir to
 /tmp/release and /tmp/publish, respectively.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#2231 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZMJH4H6JCR4U6SL6XLS47OQ3ANCNFSM4W2ZHDUQ>.

--
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
jas@mit.edu <mailto:jas@mit.edu>

—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FMDSplus%2Fmdsplus%2Fpull%2F2231%23issuecomment-771723909&data=04%7C01%7C%7Ce54d71065c7a4ee2899108d8c790c47f%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637478771866565509%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=WO6yYa655LPUgLOf0s2yBfzAQLywogb6aXRjZk9LvYg%3D&reserved=0>, or unsubscribe<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FABPRFLRUPDDWONMFAKDWDFLS5AMEDANCNFSM4W2ZHDUQ&data=04%7C01%7C%7Ce54d71065c7a4ee2899108d8c790c47f%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637478771866565509%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=6RXlz%2F8r9eVgzf84jWNgq1q0uNfkMefRXfZ49zBGxGU%3D&reserved=0>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2234,2021-02-12T17:59:12Z,2021-02-22T19:11:50Z,2021-02-22T19:11:50Z,CLOSED,False,192,71,1,https://github.com/santorofer,"Feature: Add Multi-sampling, i.e. re-sampling, of the data streaming",3,[],https://github.com/MDSplus/mdsplus/pull/2234,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2234,"1- The new make segments with resampling options has been added to the device streaming:
makeSegmentResampled()
2- Two new extra nodes:

RES_FACTOR
INPUT_xxx : RESAMPLED

3- A function to get from the UUT the active sites:
getSlots()
TODO:

Add WR capability.","1- The new make segments with resampling options has been added to the device streaming:
makeSegmentResampled()
2- Two new extra nodes:

RES_FACTOR
INPUT_xxx : RESAMPLED

3- A function to get from the UUT the active sites:
getSlots()
TODO:

Add WR capability.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2234,2021-02-12T17:59:12Z,2021-02-22T19:11:50Z,2021-02-22T19:11:50Z,CLOSED,False,192,71,1,https://github.com/santorofer,"Feature: Add Multi-sampling, i.e. re-sampling, of the data streaming",3,[],https://github.com/MDSplus/mdsplus/pull/2234,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2234#issuecomment-778469298,"1- The new make segments with resampling options has been added to the device streaming:
makeSegmentResampled()
2- Two new extra nodes:

RES_FACTOR
INPUT_xxx : RESAMPLED

3- A function to get from the UUT the active sites:
getSlots()
TODO:

Add WR capability.","Hello Gabriele,
I have a quick question.
I have made this changes to the acq2106_435st.py device to make use of:
makeSegmentResampled()
But, should I be using:
makeSegmentMinMax()
instead?
I can see the differences in the C code, but I'm not sure which of the two will be better for our streaming device. Will it depend on the actual signal that is being recorded.?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2234,2021-02-12T17:59:12Z,2021-02-22T19:11:50Z,2021-02-22T19:11:50Z,CLOSED,False,192,71,1,https://github.com/santorofer,"Feature: Add Multi-sampling, i.e. re-sampling, of the data streaming",3,[],https://github.com/MDSplus/mdsplus/pull/2234,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2234#issuecomment-783574426,"1- The new make segments with resampling options has been added to the device streaming:
makeSegmentResampled()
2- Two new extra nodes:

RES_FACTOR
INPUT_xxx : RESAMPLED

3- A function to get from the UUT the active sites:
getSlots()
TODO:

Add WR capability.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2237,2021-02-19T18:40:38Z,2021-02-21T16:24:23Z,2021-02-21T16:24:23Z,MERGED,True,1,1,1,https://github.com/AndreaRigoni,fix: m4_docker_build failed in recent autoconf version,1,[],https://github.com/MDSplus/mdsplus/pull/2237,https://github.com/AndreaRigoni,1,https://github.com/MDSplus/mdsplus/pull/2237,"With a recent version of autoconf the former version on line 53 in m4 macro for docker build ended up in this error:
../mdsplus/configure: line 3611: syntax error near unexpected token newline' ../mdsplus/configure: line 3611:     '''
properly handling line parentheses in m4 seem to fix the issue.","With a recent version of autoconf the former version on line 53 in m4 macro for docker build ended up in this error:
../mdsplus/configure: line 3611: syntax error near unexpected token newline' ../mdsplus/configure: line 3611:     '''
properly handling line parentheses in m4 seem to fix the issue.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2237,2021-02-19T18:40:38Z,2021-02-21T16:24:23Z,2021-02-21T16:24:23Z,MERGED,True,1,1,1,https://github.com/AndreaRigoni,fix: m4_docker_build failed in recent autoconf version,1,[],https://github.com/MDSplus/mdsplus/pull/2237,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2237#issuecomment-782699855,"With a recent version of autoconf the former version on line 53 in m4 macro for docker build ended up in this error:
../mdsplus/configure: line 3611: syntax error near unexpected token newline' ../mdsplus/configure: line 3611:     '''
properly handling line parentheses in m4 seem to fix the issue.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2238,2021-02-21T16:52:02Z,2021-02-22T10:22:03Z,2021-02-22T10:22:04Z,MERGED,True,40,13,2,https://github.com/GabrieleManduchi,Gm grafana,5,[],https://github.com/MDSplus/mdsplus/pull/2238,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2238,The instructions for installing the grafana plugin should work for the latest released plugin,The instructions for installing the grafana plugin should work for the latest released plugin,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2239,2021-02-22T17:45:18Z,2021-02-22T21:24:15Z,2021-02-22T21:24:15Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Build: don't try to build the java stuff on RaspPi,1,[],https://github.com/MDSplus/mdsplus/pull/2239,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2239,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2240,2021-02-23T07:33:04Z,2022-01-06T02:54:53Z,2022-01-06T02:54:53Z,MERGED,True,328,25,4,https://github.com/santorofer,Feature: New acq2106 435ELF transient device,20,[],https://github.com/MDSplus/mdsplus/pull/2240,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2240,"New acq2106_435tr transient device:
1- Add to the acq2106_435st superclass:

pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes

2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.","New acq2106_435tr transient device:
1- Add to the acq2106_435st superclass:

pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes

2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2240,2021-02-23T07:33:04Z,2022-01-06T02:54:53Z,2022-01-06T02:54:53Z,MERGED,True,328,25,4,https://github.com/santorofer,Feature: New acq2106 435ELF transient device,20,[],https://github.com/MDSplus/mdsplus/pull/2240,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2240#issuecomment-789254047,"New acq2106_435tr transient device:
1- Add to the acq2106_435st superclass:

pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes

2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2240,2021-02-23T07:33:04Z,2022-01-06T02:54:53Z,2022-01-06T02:54:53Z,MERGED,True,328,25,4,https://github.com/santorofer,Feature: New acq2106 435ELF transient device,20,[],https://github.com/MDSplus/mdsplus/pull/2240,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/2240#issuecomment-811469634,"New acq2106_435tr transient device:
1- Add to the acq2106_435st superclass:

pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes

2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2240,2021-02-23T07:33:04Z,2022-01-06T02:54:53Z,2022-01-06T02:54:53Z,MERGED,True,328,25,4,https://github.com/santorofer,Feature: New acq2106 435ELF transient device,20,[],https://github.com/MDSplus/mdsplus/pull/2240,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2240#issuecomment-901211759,"New acq2106_435tr transient device:
1- Add to the acq2106_435st superclass:

pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes

2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",another one?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2241,2021-02-24T15:17:32Z,2021-11-18T19:30:26Z,2021-11-18T19:30:26Z,MERGED,True,308,4,4,https://github.com/santorofer,Feature: New Acq2106 423ELF transient device,9,[],https://github.com/MDSplus/mdsplus/pull/2241,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2241,"New acq2106_423tr transient device:
1- Add to the acq2106_423st superclass:
pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes
2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.","New acq2106_423tr transient device:
1- Add to the acq2106_423st superclass:
pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes
2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2241,2021-02-24T15:17:32Z,2021-11-18T19:30:26Z,2021-11-18T19:30:26Z,MERGED,True,308,4,4,https://github.com/santorofer,Feature: New Acq2106 423ELF transient device,9,[],https://github.com/MDSplus/mdsplus/pull/2241,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2241#issuecomment-785412198,"New acq2106_423tr transient device:
1- Add to the acq2106_423st superclass:
pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes
2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2241,2021-02-24T15:17:32Z,2021-11-18T19:30:26Z,2021-11-18T19:30:26Z,MERGED,True,308,4,4,https://github.com/santorofer,Feature: New Acq2106 423ELF transient device,9,[],https://github.com/MDSplus/mdsplus/pull/2241,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/2241#issuecomment-789254228,"New acq2106_423tr transient device:
1- Add to the acq2106_423st superclass:
pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes
2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2241,2021-02-24T15:17:32Z,2021-11-18T19:30:26Z,2021-11-18T19:30:26Z,MERGED,True,308,4,4,https://github.com/santorofer,Feature: New Acq2106 423ELF transient device,9,[],https://github.com/MDSplus/mdsplus/pull/2241,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2241#issuecomment-811459223,"New acq2106_423tr transient device:
1- Add to the acq2106_423st superclass:
pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes
2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2241,2021-02-24T15:17:32Z,2021-11-18T19:30:26Z,2021-11-18T19:30:26Z,MERGED,True,308,4,4,https://github.com/santorofer,Feature: New Acq2106 423ELF transient device,9,[],https://github.com/MDSplus/mdsplus/pull/2241,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2241#issuecomment-901246305,"New acq2106_423tr transient device:
1- Add to the acq2106_423st superclass:
pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes
2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.",is this still a thing?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2241,2021-02-24T15:17:32Z,2021-11-18T19:30:26Z,2021-11-18T19:30:26Z,MERGED,True,308,4,4,https://github.com/santorofer,Feature: New Acq2106 423ELF transient device,9,[],https://github.com/MDSplus/mdsplus/pull/2241,https://github.com/santorofer,6,https://github.com/MDSplus/mdsplus/pull/2241#issuecomment-910425904,"New acq2106_423tr transient device:
1- Add to the acq2106_423st superclass:
pre-sample and post-sample tree nodes
trigger source and event0 source tree nodes
2- calibration expression written in the INPUT_xxx nodes
3- add a new parameter to the super-class init() method to be able to select between arming the digitizer when using the streaming device, or the transient device.","Hi Timo,
Yes, this device will be the transient recorder for the D-Tacq 2106 423. It just need one more review and then be merge. Also, there is another device similar to this one, but for the 435 (that was the other PR that was open).
I will be sure that this one is merge and then re-open the other one and do the same.
Cheers!
Fernando",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2242,2021-02-25T13:23:52Z,2021-02-28T19:33:22Z,2021-02-28T19:33:23Z,MERGED,True,1172,622,17,https://github.com/GabrieleManduchi,Gm devices,12,[],https://github.com/MDSplus/mdsplus/pull/2242,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2242,New devices and support for timeout in socket write for jDispatcher,New devices and support for timeout in socket write for jDispatcher,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2242,2021-02-25T13:23:52Z,2021-02-28T19:33:22Z,2021-02-28T19:33:23Z,MERGED,True,1172,622,17,https://github.com/GabrieleManduchi,Gm devices,12,[],https://github.com/MDSplus/mdsplus/pull/2242,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2242#issuecomment-785961797,New devices and support for timeout in socket write for jDispatcher,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2245,Minor changes to RFX devices,Minor changes to RFX devices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-789194682,Minor changes to RFX devices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-789503828,Minor changes to RFX devices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-790041519,Minor changes to RFX devices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-790112179,Minor changes to RFX devices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-791680718,Minor changes to RFX devices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/GabrieleManduchi,7,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-791735731,Minor changes to RFX devices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/joshStillerman,8,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-791975516,Minor changes to RFX devices,"retest this please
missing librealine",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/joshStillerman,9,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-791982216,Minor changes to RFX devices,"retest this please
(built without mac, now using it to test mac build)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/joshStillerman,10,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-792001631,Minor changes to RFX devices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2245,2021-03-02T14:45:34Z,2021-03-07T12:21:07Z,2021-03-07T12:21:08Z,MERGED,True,447,96,8,https://github.com/GabrieleManduchi,Gm devices,10,[],https://github.com/MDSplus/mdsplus/pull/2245,https://github.com/GabrieleManduchi,11,https://github.com/MDSplus/mdsplus/pull/2245#issuecomment-792259392,Minor changes to RFX devices,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2247,2021-03-08T08:41:16Z,2021-03-08T15:38:06Z,2021-03-28T20:44:30Z,MERGED,True,17772,560,48,https://github.com/GabrieleManduchi,Gm streams,28,[],https://github.com/MDSplus/mdsplus/pull/2247,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2247,Use JSON for stream payload. Allow arrays elements to be displayed in grafana.,Use JSON for stream payload. Allow arrays elements to be displayed in grafana.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2248,2021-03-08T20:57:22Z,2021-03-08T21:31:30Z,2021-03-08T21:31:31Z,MERGED,True,2,0,1,https://github.com/joshStillerman,"Feature: change the README.md, to force release",1,[],https://github.com/MDSplus/mdsplus/pull/2248,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2248,"commit_check_... seems to be checking the PR title
not the commits within it.  I need a release so
I am making this commit / PR.  Will fix check later","commit_check_... seems to be checking the PR title
not the commits within it.  I need a release so
I am making this commit / PR.  Will fix check later",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2251,2021-03-09T18:54:32Z,2021-03-09T20:47:38Z,2021-03-09T20:47:39Z,MERGED,True,1,0,1,https://github.com/joshStillerman,Build:  check for readline needs <unistd.h>,1,[],https://github.com/MDSplus/mdsplus/pull/2251,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2251,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2252,2021-03-09T20:06:05Z,2021-04-09T17:41:02Z,2021-04-09T17:41:02Z,MERGED,True,26,0,1,https://github.com/joshStillerman,Docs:  Add README.JENKINS.md,1,[],https://github.com/MDSplus/mdsplus/pull/2252,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2252,"The Jenkins build system needs to be described someplace.  Here is
a start on that.","The Jenkins build system needs to be described someplace.  Here is
a start on that.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2255,2021-03-13T06:48:24Z,2021-03-16T17:50:14Z,2021-03-16T17:50:14Z,MERGED,True,1,3,1,https://github.com/santorofer,Fix: building in macOS remove sed's dash,1,[],https://github.com/MDSplus/mdsplus/pull/2255,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2255,"When executing bootstrap in a Mac OS X system:
tdishr/yylex/TdiHash.gen
sed: -: No such file or directory
Solution:
Remove the ""-"" from:

$SRC
${GPERF:-gperf} $SRC | sed '/^#line/d' -
$OUT
In other words, the following works in Mac OS X as well as in Ubuntu Linux:


$SRC
${GPERF:-gperf} $SRC | sed '/^#line/d'
$OUT","When executing bootstrap in a Mac OS X system:
tdishr/yylex/TdiHash.gen
sed: -: No such file or directory
Solution:
Remove the ""-"" from:

$SRC
${GPERF:-gperf} $SRC | sed '/^#line/d' -
$OUT
In other words, the following works in Mac OS X as well as in Ubuntu Linux:


$SRC
${GPERF:-gperf} $SRC | sed '/^#line/d'
$OUT",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2256,2021-03-13T06:57:57Z,2021-03-16T19:24:26Z,2021-03-16T19:24:26Z,MERGED,True,1,1,1,https://github.com/santorofer,Fix: mdstcpip missing include signal header,1,[],https://github.com/MDSplus/mdsplus/pull/2256,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2256,"In Mac OS X Catalina, the build fails in:
/mdsplus/mdstcpip/ioroutinesx.h:93:3: error: implicit declaration of function 'raise' is invalid in C99
[-Werror,-Wimplicit-function-declaration]
raise(sig);
Solution:
Adding the missing header signal.h","In Mac OS X Catalina, the build fails in:
/mdsplus/mdstcpip/ioroutinesx.h:93:3: error: implicit declaration of function 'raise' is invalid in C99
[-Werror,-Wimplicit-function-declaration]
raise(sig);
Solution:
Adding the missing header signal.h",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2256,2021-03-13T06:57:57Z,2021-03-16T19:24:26Z,2021-03-16T19:24:26Z,MERGED,True,1,1,1,https://github.com/santorofer,Fix: mdstcpip missing include signal header,1,[],https://github.com/MDSplus/mdsplus/pull/2256,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2256#issuecomment-800479103,"In Mac OS X Catalina, the build fails in:
/mdsplus/mdstcpip/ioroutinesx.h:93:3: error: implicit declaration of function 'raise' is invalid in C99
[-Werror,-Wimplicit-function-declaration]
raise(sig);
Solution:
Adding the missing header signal.h",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2257,2021-03-18T10:43:52Z,2021-03-18T19:42:02Z,2021-03-18T19:42:03Z,MERGED,True,12471,1431,13,https://github.com/GabrieleManduchi,Gm devices,4,[],https://github.com/MDSplus/mdsplus/pull/2257,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2257,"-Minor fix to ScopeUtilities
-Some device-related fixes","-Minor fix to ScopeUtilities
-Some device-related fixes",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2260,2021-03-18T20:18:12Z,2021-04-09T17:38:56Z,2022-01-10T11:50:13Z,CLOSED,False,16,1,1,https://github.com/joshStillerman,Build: check for python2 or python3,1,[],https://github.com/MDSplus/mdsplus/pull/2260,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2260,#closes #2258,#closes #2258,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2260,2021-03-18T20:18:12Z,2021-04-09T17:38:56Z,2022-01-10T11:50:13Z,CLOSED,False,16,1,1,https://github.com/joshStillerman,Build: check for python2 or python3,1,[],https://github.com/MDSplus/mdsplus/pull/2260,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2260#issuecomment-802297981,#closes #2258,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2260,2021-03-18T20:18:12Z,2021-04-09T17:38:56Z,2022-01-10T11:50:13Z,CLOSED,False,16,1,1,https://github.com/joshStillerman,Build: check for python2 or python3,1,[],https://github.com/MDSplus/mdsplus/pull/2260,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2260#issuecomment-816754296,#closes #2258,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2260,2021-03-18T20:18:12Z,2021-04-09T17:38:56Z,2022-01-10T11:50:13Z,CLOSED,False,16,1,1,https://github.com/joshStillerman,Build: check for python2 or python3,1,[],https://github.com/MDSplus/mdsplus/pull/2260,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2260#issuecomment-816844397,#closes #2258,replaced by new more simple PR,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2261,2021-03-18T22:45:09Z,2021-04-09T17:40:35Z,2021-04-24T12:41:05Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: python version warning was hinting the wrong PYTHONPATH,1,[],https://github.com/MDSplus/mdsplus/pull/2261,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2261,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2262,2021-03-19T02:38:11Z,2021-03-22T13:57:33Z,2021-03-22T13:57:33Z,MERGED,True,15,21,1,https://github.com/dgarnier,update darwin to use @rpath loading,2,[],https://github.com/MDSplus/mdsplus/pull/2262,https://github.com/dgarnier,1,https://github.com/MDSplus/mdsplus/pull/2262,"This fixes most dependencies on DYLD_LIBRARY_PATH.  Other compiler flags changed to match linux/gcc.  Works on Big Sur with after bootstrap and from a fresh directory  (for openmotif installled with macports)
../mdsplus/configure --x-includes=/opt/local/include --x-libraries=/opt/local/lib --without-labview --exec-prefix=/usr/local/mdsplus --prefix=/usr/local/mdsplus","This fixes most dependencies on DYLD_LIBRARY_PATH.  Other compiler flags changed to match linux/gcc.  Works on Big Sur with after bootstrap and from a fresh directory  (for openmotif installled with macports)
../mdsplus/configure --x-includes=/opt/local/include --x-libraries=/opt/local/lib --without-labview --exec-prefix=/usr/local/mdsplus --prefix=/usr/local/mdsplus",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2262,2021-03-19T02:38:11Z,2021-03-22T13:57:33Z,2021-03-22T13:57:33Z,MERGED,True,15,21,1,https://github.com/dgarnier,update darwin to use @rpath loading,2,[],https://github.com/MDSplus/mdsplus/pull/2262,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2262#issuecomment-804045777,"This fixes most dependencies on DYLD_LIBRARY_PATH.  Other compiler flags changed to match linux/gcc.  Works on Big Sur with after bootstrap and from a fresh directory  (for openmotif installled with macports)
../mdsplus/configure --x-includes=/opt/local/include --x-libraries=/opt/local/lib --without-labview --exec-prefix=/usr/local/mdsplus --prefix=/usr/local/mdsplus",test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2263,2021-03-24T18:44:27Z,2021-03-24T21:25:35Z,2022-01-10T11:50:09Z,CLOSED,False,49,14,3,https://github.com/joshStillerman,Fix: old FORTRAN programs pass 1 for len,2,[],https://github.com/MDSplus/mdsplus/pull/2263,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2263,"Old MDSplus documentation for the fortran interface stated that
when calling MdsValue and not interested in the return length
argument to pass a ""1"".
An ugly fix which may break non fortran callers? prints a warning,
and does not attempt to overwrite a 1 passed by reference as the
last argument to MdsValue.
Updated fortran test programs to reflect this.
closes #2259","Old MDSplus documentation for the fortran interface stated that
when calling MdsValue and not interested in the return length
argument to pass a ""1"".
An ugly fix which may break non fortran callers? prints a warning,
and does not attempt to overwrite a 1 passed by reference as the
last argument to MdsValue.
Updated fortran test programs to reflect this.
closes #2259",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2264,2021-03-24T21:25:19Z,2021-03-31T20:59:19Z,2021-03-31T20:59:20Z,MERGED,True,59,9,14,https://github.com/joshStillerman,Feature: add libMdsFLib for old length arg,11,[],https://github.com/MDSplus/mdsplus/pull/2264,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2264,"A new version of MdsLib especially for broken old fortran programs
that does not try to overwrite length argument if it is 1 by
reference.","A new version of MdsLib especially for broken old fortran programs
that does not try to overwrite length argument if it is 1 by
reference.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2264,2021-03-24T21:25:19Z,2021-03-31T20:59:19Z,2021-03-31T20:59:20Z,MERGED,True,59,9,14,https://github.com/joshStillerman,Feature: add libMdsFLib for old length arg,11,[],https://github.com/MDSplus/mdsplus/pull/2264,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2264#issuecomment-807335870,"A new version of MdsLib especially for broken old fortran programs
that does not try to overwrite length argument if it is 1 by
reference.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2264,2021-03-24T21:25:19Z,2021-03-31T20:59:19Z,2021-03-31T20:59:20Z,MERGED,True,59,9,14,https://github.com/joshStillerman,Feature: add libMdsFLib for old length arg,11,[],https://github.com/MDSplus/mdsplus/pull/2264,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2264#issuecomment-809650414,"A new version of MdsLib especially for broken old fortran programs
that does not try to overwrite length argument if it is 1 by
reference.",restest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2264,2021-03-24T21:25:19Z,2021-03-31T20:59:19Z,2021-03-31T20:59:20Z,MERGED,True,59,9,14,https://github.com/joshStillerman,Feature: add libMdsFLib for old length arg,11,[],https://github.com/MDSplus/mdsplus/pull/2264,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2264#issuecomment-809729631,"A new version of MdsLib especially for broken old fortran programs
that does not try to overwrite length argument if it is 1 by
reference.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2264,2021-03-24T21:25:19Z,2021-03-31T20:59:19Z,2021-03-31T20:59:20Z,MERGED,True,59,9,14,https://github.com/joshStillerman,Feature: add libMdsFLib for old length arg,11,[],https://github.com/MDSplus/mdsplus/pull/2264,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2264#issuecomment-810234334,"A new version of MdsLib especially for broken old fortran programs
that does not try to overwrite length argument if it is 1 by
reference.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2264,2021-03-24T21:25:19Z,2021-03-31T20:59:19Z,2021-03-31T20:59:20Z,MERGED,True,59,9,14,https://github.com/joshStillerman,Feature: add libMdsFLib for old length arg,11,[],https://github.com/MDSplus/mdsplus/pull/2264,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2264#issuecomment-810546677,"A new version of MdsLib especially for broken old fortran programs
that does not try to overwrite length argument if it is 1 by
reference.","2 good suggestions.  Though

  - if Andrea is correct we need to this all in Makefile.am

  - It will not solve the memtest

  - Tom Suggests:
 sigaction(SIGSEGV, SIG_IGN, 0);
 *length=value
 sigaction(SIGSEGV,SIG_DFL, 0);

 or you could use the ""old action"" argument to get the old handler and
 put it back.
Thoughts ?
On 3/30/21 2:51 PM, Stephen Lane-Walsh wrote:

 ***@***.**** requested changes on this pull request.

 ------------------------------------------------------------------------

 In mdslib/Makefile.in
 <#2264 (comment)>:

 >  	$(COMPILE.c) $< $(OUTPUT_OPTION) -DFILENAME=MdsLib.c -D_CLIENT_ONLY
 +
 +MdsFLib.o: MdsLib.c

 Maybe we should make it |MdsLib_fortran| to match the |client| one above

 ------------------------------------------------------------------------

 In mdslib/testing/mdslib_ftest.f
 <#2264 (comment)>:

 > @@ -27,9 +27,9 @@ program mdslib_test
         enddo

         dsc = descr(IDTYPE_FLOAT,result,0,0)

 I think we should add another test at the bottom, instead of replacing
 the last test

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2264 (review)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZJ3PNQYOL6OA46437LTGIMS7ANCNFSM4ZYDFSNQ>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2264,2021-03-24T21:25:19Z,2021-03-31T20:59:19Z,2021-03-31T20:59:20Z,MERGED,True,59,9,14,https://github.com/joshStillerman,Feature: add libMdsFLib for old length arg,11,[],https://github.com/MDSplus/mdsplus/pull/2264,https://github.com/WhoBrokeTheBuild,7,https://github.com/MDSplus/mdsplus/pull/2264#issuecomment-810548523,"A new version of MdsLib especially for broken old fortran programs
that does not try to overwrite length argument if it is 1 by
reference.","There is no Makefile.am for Mdslib, there is one for the Mdslib/testing however. All of this looks correct to me.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2265,2021-03-28T20:43:23Z,2021-03-29T12:20:56Z,2021-03-29T12:20:56Z,MERGED,True,237,50,3,https://github.com/GabrieleManduchi,Gm multi stream,4,[],https://github.com/MDSplus/mdsplus/pull/2265,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2265,"Added support for multidimensional samples
Changed field names: seq_number -> sequential number (increasing); timestamp->UTC time at transmission","Added support for multidimensional samples
Changed field names: seq_number -> sequential number (increasing); timestamp->UTC time at transmission",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2266,2021-03-29T17:07:22Z,2021-04-12T20:20:41Z,2021-04-12T20:20:41Z,MERGED,True,2,1,2,https://github.com/santorofer,"Fix: mac-mdsplus-2 missing headers, readline and signal",3,[],https://github.com/MDSplus/mdsplus/pull/2266,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2266,"In the new Mac Builder, mac-mdsplus-2, Mac OS X Catalina, the build fails in:
/mdsplus/mdstcpip/ioroutinesx.h:93:3: error: implicit declaration of function 'raise' is invalid in C99
[-Werror,-Wimplicit-function-declaration]
raise(sig);
Solution:
Adding the missing header signal.h to mdstcpip/ioroutinesx.h.
Also:
conftest.c:45:3: error: implicit declaration of function 'close' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
close(0);
^
conftest.c:48:3: error: implicit declaration of function 'dup' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
dup(fd);
^
2 errors generated.
This is because close and dup are defined in <unistd.h> which is not included in the test program.
Solution:
Add missing header <unistd.h> to m4/m4_ac_search_readline.m4","In the new Mac Builder, mac-mdsplus-2, Mac OS X Catalina, the build fails in:
/mdsplus/mdstcpip/ioroutinesx.h:93:3: error: implicit declaration of function 'raise' is invalid in C99
[-Werror,-Wimplicit-function-declaration]
raise(sig);
Solution:
Adding the missing header signal.h to mdstcpip/ioroutinesx.h.
Also:
conftest.c:45:3: error: implicit declaration of function 'close' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
close(0);
^
conftest.c:48:3: error: implicit declaration of function 'dup' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
dup(fd);
^
2 errors generated.
This is because close and dup are defined in <unistd.h> which is not included in the test program.
Solution:
Add missing header <unistd.h> to m4/m4_ac_search_readline.m4",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2268,2021-04-04T22:39:23Z,2021-04-13T02:31:21Z,2021-04-13T12:23:19Z,MERGED,True,37,4,2,https://github.com/santorofer,Feature: Changes to acq2106 435st.py so that a trigger source can be manually chosen.,3,[],https://github.com/MDSplus/mdsplus/pull/2268,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2268,"Changes to the device acq2106_435st.py were done so that the trigger sources can be selected ""manually"" by:
adding a node in the tree, where the source name can be written. The source that can be selected, will be one of the following, depending on the signal highway (d0 or d1):
    # Signal highway d0:
    srcs_0 = ['EXT', 'HDMI', 'HOSTB', 'GPG0', 'DSP0', 'nc', 'WRTT0', 'NONE']
    # Signal highway d1:
    srcs_1 = ['STRIG', 'HOSTA', 'HDMI_GPIO', 'GPG1', 'DSP1', 'FP_SYNC', 'WRTT1', 'NONE']

Even those the ACQ's sync_role is able to set the system clocks and signal, it relies on the default setting of the source, since it's not able to set it itself. In other words, sync_role() will use the trigger source that has been set by default, in general, this will be for 'd0', 'EXT', and for 'd1', 'STRIG'. The changes made here to the device allow for the selection of any of the above trigger source options. Including WR trigger source, WRTT0 or WRTT1.","Changes to the device acq2106_435st.py were done so that the trigger sources can be selected ""manually"" by:
adding a node in the tree, where the source name can be written. The source that can be selected, will be one of the following, depending on the signal highway (d0 or d1):
    # Signal highway d0:
    srcs_0 = ['EXT', 'HDMI', 'HOSTB', 'GPG0', 'DSP0', 'nc', 'WRTT0', 'NONE']
    # Signal highway d1:
    srcs_1 = ['STRIG', 'HOSTA', 'HDMI_GPIO', 'GPG1', 'DSP1', 'FP_SYNC', 'WRTT1', 'NONE']

Even those the ACQ's sync_role is able to set the system clocks and signal, it relies on the default setting of the source, since it's not able to set it itself. In other words, sync_role() will use the trigger source that has been set by default, in general, this will be for 'd0', 'EXT', and for 'd1', 'STRIG'. The changes made here to the device allow for the selection of any of the above trigger source options. Including WR trigger source, WRTT0 or WRTT1.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2268,2021-04-04T22:39:23Z,2021-04-13T02:31:21Z,2021-04-13T12:23:19Z,MERGED,True,37,4,2,https://github.com/santorofer,Feature: Changes to acq2106 435st.py so that a trigger source can be manually chosen.,3,[],https://github.com/MDSplus/mdsplus/pull/2268,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2268#issuecomment-818692969,"Changes to the device acq2106_435st.py were done so that the trigger sources can be selected ""manually"" by:
adding a node in the tree, where the source name can be written. The source that can be selected, will be one of the following, depending on the signal highway (d0 or d1):
    # Signal highway d0:
    srcs_0 = ['EXT', 'HDMI', 'HOSTB', 'GPG0', 'DSP0', 'nc', 'WRTT0', 'NONE']
    # Signal highway d1:
    srcs_1 = ['STRIG', 'HOSTA', 'HDMI_GPIO', 'GPG1', 'DSP1', 'FP_SYNC', 'WRTT1', 'NONE']

Even those the ACQ's sync_role is able to set the system clocks and signal, it relies on the default setting of the source, since it's not able to set it itself. In other words, sync_role() will use the trigger source that has been set by default, in general, this will be for 'd0', 'EXT', and for 'd1', 'STRIG'. The changes made here to the device allow for the selection of any of the above trigger source options. Including WR trigger source, WRTT0 or WRTT1.","I did not look at this PR in detail, but calling sys.exit()  can NOT be
the right thing
On 4/12/21 10:28 PM, Stephen Lane-Walsh wrote:

 ***@***.**** commented on this pull request.

 ------------------------------------------------------------------------

 In pydevices/HtsDevices/acq2106_435st.py
 <#2268 (comment)>:

 > @@ -423,6 +437,25 @@ def init(self, resampling=0):
           # modifiers [CLKDIV=div]
           uut.s0.sync_role = '%s %s TRG:DX=%s' % (role, self.freq.data(), trg_dx)

 +        # The following allows for any source to be chosen, among other things the WR source.
 +        # Signal highway d0:
 +        srcs_0 = ['EXT', 'HDMI', 'HOSTB', 'GPG0', 'DSP0', 'nc', 'WRTT0', 'NONE']
 +        # Signal highway d1:
 +        srcs_1 = ['STRIG', 'HOSTA', 'HDMI_GPIO', 'GPG1', 'DSP1', 'FP_SYNC', 'WRTT1', 'NONE']
 +
 +        if trg_dx == 'd0':
 +            if str(self.trig_src.data()) in srcs_0:
 +                uut.s0.SIG_SRC_TRG_0   = str(self.trig_src.data())
 +            else:
 +                sys.exit(""TRIG_SRC should be one of {}"".format(srcs_0))

 We should get Timo's opinion on the proper way to report errors

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#2268 (review)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZIREIVKXD6BKN4BKC3TIOT3HANCNFSM42L3PSEA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2270,2021-04-07T13:15:46Z,2021-08-18T16:16:15Z,2022-01-10T11:50:09Z,CLOSED,False,3,3,2,https://github.com/joshStillerman,Fix: cpp not receiving new event based streams,1,[],https://github.com/MDSplus/mdsplus/pull/2270,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2270,"This change from Darren Garnier changes the event name to a char*
from a c++ string.  Seems to fix the problem.
Note:  Now that each stream is its own event, it is its own thread
and all of the logic checking on, saving and sending the name is no
longer needed.  Ths PR does not address this.","This change from Darren Garnier changes the event name to a char*
from a c++ string.  Seems to fix the problem.
Note:  Now that each stream is its own event, it is its own thread
and all of the logic checking on, saving and sending the name is no
longer needed.  Ths PR does not address this.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2270,2021-04-07T13:15:46Z,2021-08-18T16:16:15Z,2022-01-10T11:50:09Z,CLOSED,False,3,3,2,https://github.com/joshStillerman,Fix: cpp not receiving new event based streams,1,[],https://github.com/MDSplus/mdsplus/pull/2270,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2270#issuecomment-814941890,"This change from Darren Garnier changes the event name to a char*
from a c++ string.  Seems to fix the problem.
Note:  Now that each stream is its own event, it is its own thread
and all of the logic checking on, saving and sending the name is no
longer needed.  Ths PR does not address this.",Staring char * pointers to string is nor safe because the allocated memory can  go away meanwhile. std::string must be used in order to ensure proper allocation/deallocation of saved strings,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2270,2021-04-07T13:15:46Z,2021-08-18T16:16:15Z,2022-01-10T11:50:09Z,CLOSED,False,3,3,2,https://github.com/joshStillerman,Fix: cpp not receiving new event based streams,1,[],https://github.com/MDSplus/mdsplus/pull/2270,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2270#issuecomment-814944090,"This change from Darren Garnier changes the event name to a char*
from a c++ string.  Seems to fix the problem.
Note:  Now that each stream is its own event, it is its own thread
and all of the logic checking on, saving and sending the name is no
longer needed.  Ths PR does not address this.","We can not make it work at all.  This 'fix' did not do it regardless. 
Can you send a sample program that receives streams in C++?  Orig one,
and one from mdsplus.org do not work
On 4/7/21 10:04 AM, GabrieleManduchi wrote:

 Staring char * pointers to string is nor safe because the allocated
 memory can go away meanwhile. std::string must be used in order to
 ensure proper allocation/deallocation of saved strings

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2270 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZMORKRZT35ZAKHQ6MLTHRQ6LANCNFSM42QYX6LA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2270,2021-04-07T13:15:46Z,2021-08-18T16:16:15Z,2022-01-10T11:50:09Z,CLOSED,False,3,3,2,https://github.com/joshStillerman,Fix: cpp not receiving new event based streams,1,[],https://github.com/MDSplus/mdsplus/pull/2270,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2270#issuecomment-814945119,"This change from Darren Garnier changes the event name to a char*
from a c++ string.  Seems to fix the problem.
Note:  Now that each stream is its own event, it is its own thread
and all of the logic checking on, saving and sending the name is no
longer needed.  Ths PR does not address this.","maybe a short meeting ?
On 4/7/21 10:04 AM, GabrieleManduchi wrote:

 Staring char * pointers to string is nor safe because the allocated
 memory can go away meanwhile. std::string must be used in order to
 ensure proper allocation/deallocation of saved strings

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2270 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZMORKRZT35ZAKHQ6MLTHRQ6LANCNFSM42QYX6LA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2270,2021-04-07T13:15:46Z,2021-08-18T16:16:15Z,2022-01-10T11:50:09Z,CLOSED,False,3,3,2,https://github.com/joshStillerman,Fix: cpp not receiving new event based streams,1,[],https://github.com/MDSplus/mdsplus/pull/2270,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2270#issuecomment-814945709,"This change from Darren Garnier changes the event name to a char*
from a c++ string.  Seems to fix the problem.
Note:  Now that each stream is its own event, it is its own thread
and all of the logic checking on, saving and sending the name is no
longer needed.  Ths PR does not address this.",I work on it now......,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2270,2021-04-07T13:15:46Z,2021-08-18T16:16:15Z,2022-01-10T11:50:09Z,CLOSED,False,3,3,2,https://github.com/joshStillerman,Fix: cpp not receiving new event based streams,1,[],https://github.com/MDSplus/mdsplus/pull/2270,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2270#issuecomment-825750528,"This change from Darren Garnier changes the event name to a char*
from a c++ string.  Seems to fix the problem.
Note:  Now that each stream is its own event, it is its own thread
and all of the logic checking on, saving and sending the name is no
longer needed.  Ths PR does not address this.",Has this been fixed by some other PR ?  And can be closed ?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2270,2021-04-07T13:15:46Z,2021-08-18T16:16:15Z,2022-01-10T11:50:09Z,CLOSED,False,3,3,2,https://github.com/joshStillerman,Fix: cpp not receiving new event based streams,1,[],https://github.com/MDSplus/mdsplus/pull/2270,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2270#issuecomment-901246912,"This change from Darren Garnier changes the event name to a char*
from a c++ string.  Seems to fix the problem.
Note:  Now that each stream is its own event, it is its own thread
and all of the logic checking on, saving and sending the name is no
longer needed.  Ths PR does not address this.",closed due to inactivity,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2271,2021-04-07T14:55:30Z,2021-04-09T17:39:19Z,2021-04-09T17:39:20Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,Fix:use GetInt64() instead of GetInt() for absolute times,1,[],https://github.com/MDSplus/mdsplus/pull/2271,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2271,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2274,2021-04-09T17:38:23Z,2021-04-20T13:16:36Z,2022-01-10T11:50:08Z,CLOSED,False,3,3,1,https://github.com/joshStillerman,Fix:  bootstrap should always use python3,1,[],https://github.com/MDSplus/mdsplus/pull/2274,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2274,centos does not have default for python command.,centos does not have default for python command.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2274,2021-04-09T17:38:23Z,2021-04-20T13:16:36Z,2022-01-10T11:50:08Z,CLOSED,False,3,3,1,https://github.com/joshStillerman,Fix:  bootstrap should always use python3,1,[],https://github.com/MDSplus/mdsplus/pull/2274,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2274#issuecomment-818650751,centos does not have default for python command.,"might be better to define an alias for centos8, python3 is not available on older os.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2274,2021-04-09T17:38:23Z,2021-04-20T13:16:36Z,2022-01-10T11:50:08Z,CLOSED,False,3,3,1,https://github.com/joshStillerman,Fix:  bootstrap should always use python3,1,[],https://github.com/MDSplus/mdsplus/pull/2274,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2274#issuecomment-818671680,centos does not have default for python command.,"Which OSes?On Apr 13, 2021 7:06 AM, Timo Schroeder ***@***.***> wrote:
might be better to define an alias for centos8, python3 is not available on older os.

—You are receiving this because you authored the thread.Reply to this email directly, view it on GitHub, or unsubscribe.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2274,2021-04-09T17:38:23Z,2021-04-20T13:16:36Z,2022-01-10T11:50:08Z,CLOSED,False,3,3,1,https://github.com/joshStillerman,Fix:  bootstrap should always use python3,1,[],https://github.com/MDSplus/mdsplus/pull/2274,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2274#issuecomment-823266161,centos does not have default for python command.,replaced by PR that chooses best python,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2275,2021-04-09T21:12:42Z,2021-04-12T19:00:13Z,2021-04-12T19:00:14Z,MERGED,True,124,107,2,https://github.com/joshStillerman,Fix: change deps for RHEL8 in stable branch,2,[],https://github.com/MDSplus/mdsplus/pull/2275,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2275,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2275,2021-04-09T21:12:42Z,2021-04-12T19:00:13Z,2021-04-12T19:00:14Z,MERGED,True,124,107,2,https://github.com/joshStillerman,Fix: change deps for RHEL8 in stable branch,2,[],https://github.com/MDSplus/mdsplus/pull/2275,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2275#issuecomment-817983986,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2280,2021-04-12T18:43:47Z,2021-04-13T11:04:02Z,2021-04-13T11:04:05Z,CLOSED,False,6,1,6,https://github.com/zack-vii,upgraded deploy/os,1,[],https://github.com/MDSplus/mdsplus/pull/2280,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2280,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2280,2021-04-12T18:43:47Z,2021-04-13T11:04:02Z,2021-04-13T11:04:05Z,CLOSED,False,6,1,6,https://github.com/zack-vii,upgraded deploy/os,1,[],https://github.com/MDSplus/mdsplus/pull/2280,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2280#issuecomment-818044965,,ah yes .. well may not work because the used platform and the suppressions dont match,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2280,2021-04-12T18:43:47Z,2021-04-13T11:04:02Z,2021-04-13T11:04:05Z,CLOSED,False,6,1,6,https://github.com/zack-vii,upgraded deploy/os,1,[],https://github.com/MDSplus/mdsplus/pull/2280,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2280#issuecomment-818046000,,but the tests are skipped anyway,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2280,2021-04-12T18:43:47Z,2021-04-13T11:04:02Z,2021-04-13T11:04:05Z,CLOSED,False,6,1,6,https://github.com/zack-vii,upgraded deploy/os,1,[],https://github.com/MDSplus/mdsplus/pull/2280,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2280#issuecomment-818046192,,"How about just merging my PR ?
On 4/12/21 2:46 PM, Timo Schroeder wrote:

 ah yes .. well may not work because the used platform and the
 suppressions dont match

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#2280 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZLRDNUB5VMDLSDIHW3TIM5XVANCNFSM42Z2XQVA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2280,2021-04-12T18:43:47Z,2021-04-13T11:04:02Z,2021-04-13T11:04:05Z,CLOSED,False,6,1,6,https://github.com/zack-vii,upgraded deploy/os,1,[],https://github.com/MDSplus/mdsplus/pull/2280,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2280#issuecomment-818047339,,"Have a minute to zoom ?
On 4/12/21 2:47 PM, Timo Schroeder wrote:

 but the tests are skipped anyway

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#2280 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZKBM5JKF3IJVT5FXXDTIM55ZANCNFSM42Z2XQVA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2280,2021-04-12T18:43:47Z,2021-04-13T11:04:02Z,2021-04-13T11:04:05Z,CLOSED,False,6,1,6,https://github.com/zack-vii,upgraded deploy/os,1,[],https://github.com/MDSplus/mdsplus/pull/2280,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2280#issuecomment-818047753,,"sure that would be ok.. well if you merge this PR as well future PRs will simply
skip the tool tests
…
On 12/04/2021 20:48, Josh Stillerman wrote:
 How about just merging my PR ?


 On 4/12/21 2:46 PM, Timo Schroeder wrote:
 >
 > ah yes .. well may not work because the used platform and the
 > suppressions dont match
 >
 > —
 > You are receiving this because you are subscribed to this thread.
 > Reply to this email directly, view it on GitHub
 > <#2280 (comment)>,
 > or unsubscribe
 >
 <https://github.com/notifications/unsubscribe-auth/ABY5AZLRDNUB5VMDLSDIHW3TIM5XVANCNFSM42Z2XQVA>.
 >
 --
 *Joshua Stillerman*
 Research Engineer
 MIT Plasma Science and Fusion Center
 617.253.8176
 ***@***.*** ***@***.***>

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FMDSplus%2Fmdsplus%2Fpull%2F2280%23issuecomment-818046192&data=04%7C01%7C%7C5116845655794b0f315508d8fde387c1%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637538500954722736%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=XnPMQsa4mh7eYbmepEBmtimqdX2mwNRkPcKdUPUsUvQ%3D&reserved=0>,
 or unsubscribe
 <https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FABPRFLRHPWZP6YQEKENIL23TIM565ANCNFSM42Z2XQVA&data=04%7C01%7C%7C5116845655794b0f315508d8fde387c1%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637538500954732736%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=D82VLMe8CmjVDxOmTRQ0Nz8W6EUIHgidiQ%2FR06nyITs%3D&reserved=0>.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2280,2021-04-12T18:43:47Z,2021-04-13T11:04:02Z,2021-04-13T11:04:05Z,CLOSED,False,6,1,6,https://github.com/zack-vii,upgraded deploy/os,1,[],https://github.com/MDSplus/mdsplus/pull/2280,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2280#issuecomment-818648862,,not needed anymore due to promotion,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2282,2021-04-13T12:42:58Z,2021-04-20T13:19:18Z,2021-04-20T13:19:19Z,MERGED,True,79,10,6,https://github.com/GabrieleManduchi,Fix:remove useless time consuming opoeration in MDSUdpEvent,7,[],https://github.com/MDSplus/mdsplus/pull/2282,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2282,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2282,2021-04-13T12:42:58Z,2021-04-20T13:19:18Z,2021-04-20T13:19:19Z,MERGED,True,79,10,6,https://github.com/GabrieleManduchi,Fix:remove useless time consuming opoeration in MDSUdpEvent,7,[],https://github.com/MDSplus/mdsplus/pull/2282,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2282#issuecomment-818711490,,Can you provide more explanation of the changes ? Not really understanding the code it seems curious there are as many unprotected static variables in the module.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2282,2021-04-13T12:42:58Z,2021-04-20T13:19:18Z,2021-04-20T13:19:19Z,MERGED,True,79,10,6,https://github.com/GabrieleManduchi,Fix:remove useless time consuming opoeration in MDSUdpEvent,7,[],https://github.com/MDSplus/mdsplus/pull/2282,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2282#issuecomment-819283273,,"When I tested event streaming performance I realized that 3-4 ms are always lost in event communication, even when communicating among thread. After some investigation I realized that this was due the call to getserverbyname() issued by UdpEventGetPort(). So I moved its call to pthread_once already performed for socket creatuion, adding one more static variable sendPort. Anyeay this stati variable, as the other static variables in UdpEvent.c is only accessed in read, and the only write is performed withing pthread_once. Noe commubnitation time dropped from 3-4 ms to 80 us.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2282,2021-04-13T12:42:58Z,2021-04-20T13:19:18Z,2021-04-20T13:19:19Z,MERGED,True,79,10,6,https://github.com/GabrieleManduchi,Fix:remove useless time consuming opoeration in MDSUdpEvent,7,[],https://github.com/MDSplus/mdsplus/pull/2282,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2282#issuecomment-819283929,,"Anyway, wait before merging it. I am now adding the possibility of core assignment for UdpEventAst, that is mandatory if we want to use streams in real-time.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2282,2021-04-13T12:42:58Z,2021-04-20T13:19:18Z,2021-04-20T13:19:19Z,MERGED,True,79,10,6,https://github.com/GabrieleManduchi,Fix:remove useless time consuming opoeration in MDSUdpEvent,7,[],https://github.com/MDSplus/mdsplus/pull/2282,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2282#issuecomment-819380900,,Now I have added an additional routine in MDS event API: MdsEventAstMask which behaves as MdsEventAst but ensures that the listening thread runs on a core specified in the additional mask argument,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2282,2021-04-13T12:42:58Z,2021-04-20T13:19:18Z,2021-04-20T13:19:19Z,MERGED,True,79,10,6,https://github.com/GabrieleManduchi,Fix:remove useless time consuming opoeration in MDSUdpEvent,7,[],https://github.com/MDSplus/mdsplus/pull/2282,https://github.com/GabrieleManduchi,6,https://github.com/MDSplus/mdsplus/pull/2282#issuecomment-819457857,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2282,2021-04-13T12:42:58Z,2021-04-20T13:19:18Z,2021-04-20T13:19:19Z,MERGED,True,79,10,6,https://github.com/GabrieleManduchi,Fix:remove useless time consuming opoeration in MDSUdpEvent,7,[],https://github.com/MDSplus/mdsplus/pull/2282,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2282#issuecomment-819483106,,"Good find and good fix !  This performance is going to be fine for the
bagel, but will not cut it for our SDN.  We can worry about that later. 
Darren and I are seriously considering doing MARTe time with PTP-v2, and
using OPC_UA / multicast or OPC_UA/ethernet-TSN for the SDN
On 4/14/21 3:06 AM, GabrieleManduchi wrote:

 When I tested event streaming performance I realized that 3-4 ms are
 always lost in event communication, even when communicating among
 thread. After some investigation I realized that this was due the call
 to getserverbyname() issued by UdpEventGetPort(). So I moved its call
 to pthread_once already performed for socket creatuion, adding one
 more static variable sendPort. Anyeay this stati variable, as the
 other static variables in UdpEvent.c is only accessed in read, and the
 only write is performed withing pthread_once. Noe commubnitation time
 dropped from 3-4 ms to 80 us.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2282 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZIGDFHLXUE7APBHKPLTIU5H5ANCNFSM423IT2DQ>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2282,2021-04-13T12:42:58Z,2021-04-20T13:19:18Z,2021-04-20T13:19:19Z,MERGED,True,79,10,6,https://github.com/GabrieleManduchi,Fix:remove useless time consuming opoeration in MDSUdpEvent,7,[],https://github.com/MDSplus/mdsplus/pull/2282,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/2282#issuecomment-820151492,,"Josh, now I have terminated the fixes and added a new routine in the API  (MDsEventAstMask) that allows defining a CPU mask for the activated thread listening udp messages. This dramatically reduced jitter in my MARTe2 tests.
Could it check and if  you agree approve the PR?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2283,2021-04-13T18:45:16Z,2021-04-14T15:56:09Z,2021-04-14T15:56:10Z,MERGED,True,2,2,2,https://github.com/joshStillerman,Build: alpine-arm tests are timing out,2,[],https://github.com/MDSplus/mdsplus/pull/2283,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2283,For now disable them,For now disable them,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2283,2021-04-13T18:45:16Z,2021-04-14T15:56:09Z,2021-04-14T15:56:10Z,MERGED,True,2,2,2,https://github.com/joshStillerman,Build: alpine-arm tests are timing out,2,[],https://github.com/MDSplus/mdsplus/pull/2283,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2283#issuecomment-819080469,For now disable them,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2283,2021-04-13T18:45:16Z,2021-04-14T15:56:09Z,2021-04-14T15:56:10Z,MERGED,True,2,2,2,https://github.com/joshStillerman,Build: alpine-arm tests are timing out,2,[],https://github.com/MDSplus/mdsplus/pull/2283,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2283#issuecomment-819105578,For now disable them,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2284,2021-04-14T17:47:02Z,2021-04-14T18:32:09Z,2021-04-14T18:32:10Z,MERGED,True,94,78,2,https://github.com/santorofer,Fix: Rework on acq2106_435st trigger selection.,1,[],https://github.com/MDSplus/mdsplus/pull/2284,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2284,"Remove new TRIG_SRC node
Move functionality into existing TRIG_MODE node
TRIG_MODE can now be

hard, soft
master:hard, solo:soft, etc
master:ext, solo:wrtt0, fpmaster:fp_sync, etc.

Refactor .format() to % format
Move getUUT() to parent 435st class (overridden in 435sc)
Removed legacy trig_types
Moved constants to class scope

MIN_FREQUENCY
TRIG_SRC_OPTS_0
TRIG_SRC_OPTS_1

Removed initializing trigger sources to 'NONE'
Should be set automatically by sync_role
Wrap debug statements in if self.debug","Remove new TRIG_SRC node
Move functionality into existing TRIG_MODE node
TRIG_MODE can now be

hard, soft
master:hard, solo:soft, etc
master:ext, solo:wrtt0, fpmaster:fp_sync, etc.

Refactor .format() to % format
Move getUUT() to parent 435st class (overridden in 435sc)
Removed legacy trig_types
Moved constants to class scope

MIN_FREQUENCY
TRIG_SRC_OPTS_0
TRIG_SRC_OPTS_1

Removed initializing trigger sources to 'NONE'
Should be set automatically by sync_role
Wrap debug statements in if self.debug",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2287,2021-04-15T20:32:17Z,2021-04-20T18:39:28Z,2021-04-20T18:39:28Z,MERGED,True,1,1,1,https://github.com/merlea,Fix: fix exit condition in loop over tag links in _RemoveTagIdx,1,[],https://github.com/MDSplus/mdsplus/pull/2287,https://github.com/merlea,1,https://github.com/MDSplus/mdsplus/pull/2287,"Fix for #2278.
As mentioned in the issue, this loop exit condition should never be reached for a healthy tree. I thought about returning an error in case we do reach it but the function has a void return type.","Fix for #2278.
As mentioned in the issue, this loop exit condition should never be reached for a healthy tree. I thought about returning an error in case we do reach it but the function has a void return type.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2287,2021-04-15T20:32:17Z,2021-04-20T18:39:28Z,2021-04-20T18:39:28Z,MERGED,True,1,1,1,https://github.com/merlea,Fix: fix exit condition in loop over tag links in _RemoveTagIdx,1,[],https://github.com/MDSplus/mdsplus/pull/2287,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2287#issuecomment-823268402,"Fix for #2278.
As mentioned in the issue, this loop exit condition should never be reached for a healthy tree. I thought about returning an error in case we do reach it but the function has a void return type.",test his please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2287,2021-04-15T20:32:17Z,2021-04-20T18:39:28Z,2021-04-20T18:39:28Z,MERGED,True,1,1,1,https://github.com/merlea,Fix: fix exit condition in loop over tag links in _RemoveTagIdx,1,[],https://github.com/MDSplus/mdsplus/pull/2287,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2287#issuecomment-823363141,"Fix for #2278.
As mentioned in the issue, this loop exit condition should never be reached for a healthy tree. I thought about returning an error in case we do reach it but the function has a void return type.",test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2288,2021-04-15T21:20:17Z,2021-05-19T21:18:52Z,2021-05-19T21:18:53Z,MERGED,True,8180,7460,392,https://github.com/zack-vii,Feature: MdsIpThreadStatic ConnectionList; should fix deadlock and be faster,174,[],https://github.com/MDSplus/mdsplus/pull/2288,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2288,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2288,2021-04-15T21:20:17Z,2021-05-19T21:18:52Z,2021-05-19T21:18:53Z,MERGED,True,8180,7460,392,https://github.com/zack-vii,Feature: MdsIpThreadStatic ConnectionList; should fix deadlock and be faster,174,[],https://github.com/MDSplus/mdsplus/pull/2288,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2288#issuecomment-820742617,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,the python connection test fails.. might be because the mdsip is a single connection server (-s) server,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2288,2021-04-15T21:20:17Z,2021-05-19T21:18:52Z,2021-05-19T21:18:53Z,MERGED,True,8180,7460,392,https://github.com/zack-vii,Feature: MdsIpThreadStatic ConnectionList; should fix deadlock and be faster,174,[],https://github.com/MDSplus/mdsplus/pull/2288,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2288#issuecomment-824032597,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,Let me know when this is ready for review,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2288,2021-04-15T21:20:17Z,2021-05-19T21:18:52Z,2021-05-19T21:18:53Z,MERGED,True,8180,7460,392,https://github.com/zack-vii,Feature: MdsIpThreadStatic ConnectionList; should fix deadlock and be faster,174,[],https://github.com/MDSplus/mdsplus/pull/2288,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2288#issuecomment-824033775,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,well the mdsip cleanup one is first.. this is still in progress. i had it almost but then it was not possible to share one python Connection object between threads,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2288,2021-04-15T21:20:17Z,2021-05-19T21:18:52Z,2021-05-19T21:18:53Z,MERGED,True,8180,7460,392,https://github.com/zack-vii,Feature: MdsIpThreadStatic ConnectionList; should fix deadlock and be faster,174,[],https://github.com/MDSplus/mdsplus/pull/2288,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2288#issuecomment-831606497,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2288,2021-04-15T21:20:17Z,2021-05-19T21:18:52Z,2021-05-19T21:18:53Z,MERGED,True,8180,7460,392,https://github.com/zack-vii,Feature: MdsIpThreadStatic ConnectionList; should fix deadlock and be faster,174,[],https://github.com/MDSplus/mdsplus/pull/2288,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2288#issuecomment-843262536,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,"@joshStillerman : its a lot to process but this should enable your parallel fast remote write issue. The changes i made to mdstcpip are deep but in the process several hidden issues were discovered and fixed.
You usecase is should be covered by the python test connection_write_test.py.
Going through each commit may be a bit complicated as i had to adapt the implementation several times, sometimes discarding changes i made earlier. I think the best would be to either trust our tests and observe its performance in a real live setup.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2288,2021-04-15T21:20:17Z,2021-05-19T21:18:52Z,2021-05-19T21:18:53Z,MERGED,True,8180,7460,392,https://github.com/zack-vii,Feature: MdsIpThreadStatic ConnectionList; should fix deadlock and be faster,174,[],https://github.com/MDSplus/mdsplus/pull/2288,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2288#issuecomment-843447291,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,Wow -  This was a lot of work.  Can we go over it so that you are not the only one who knows what is here ?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2288,2021-04-15T21:20:17Z,2021-05-19T21:18:52Z,2021-05-19T21:18:53Z,MERGED,True,8180,7460,392,https://github.com/zack-vii,Feature: MdsIpThreadStatic ConnectionList; should fix deadlock and be faster,174,[],https://github.com/MDSplus/mdsplus/pull/2288,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2288#issuecomment-843492268,Added MdsIpThreadStatic to ensure threads use their own connections: prevents race conditions on server and deadlocks,sure,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2289,2021-04-19T16:39:26Z,2021-04-21T13:32:52Z,2021-04-23T15:51:35Z,MERGED,True,1593,1771,65,https://github.com/zack-vii,Feature: cleanup Mdsip,12,[],https://github.com/MDSplus/mdsplus/pull/2289,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2289,Eliminate MdsIpShr: mdsip needs a cleanup.. before i can efficiently tackler #2288,Eliminate MdsIpShr: mdsip needs a cleanup.. before i can efficiently tackler #2288,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2289,2021-04-19T16:39:26Z,2021-04-21T13:32:52Z,2021-04-23T15:51:35Z,MERGED,True,1593,1771,65,https://github.com/zack-vii,Feature: cleanup Mdsip,12,[],https://github.com/MDSplus/mdsplus/pull/2289,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2289#issuecomment-823372922,Eliminate MdsIpShr: mdsip needs a cleanup.. before i can efficiently tackler #2288,"based on #2293: removes timeout feature, that seems to potentially cause more damage that it is useful.
cleanup of mdstcpip so it can be reimplemented to multi thread connections which would prevent dead-lock during fast remote write operations",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2289,2021-04-19T16:39:26Z,2021-04-21T13:32:52Z,2021-04-23T15:51:35Z,MERGED,True,1593,1771,65,https://github.com/zack-vii,Feature: cleanup Mdsip,12,[],https://github.com/MDSplus/mdsplus/pull/2289,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2289#issuecomment-824032768,Eliminate MdsIpShr: mdsip needs a cleanup.. before i can efficiently tackler #2288,Let me know when this is ready for review,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2289,2021-04-19T16:39:26Z,2021-04-21T13:32:52Z,2021-04-23T15:51:35Z,MERGED,True,1593,1771,65,https://github.com/zack-vii,Feature: cleanup Mdsip,12,[],https://github.com/MDSplus/mdsplus/pull/2289,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2289#issuecomment-825751252,Eliminate MdsIpShr: mdsip needs a cleanup.. before i can efficiently tackler #2288,Is this PR closed ?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2290,2021-04-20T10:28:23Z,2021-04-20T15:09:30Z,2021-04-20T15:09:30Z,CLOSED,False,59652,43325,625,https://github.com/zack-vii,Build: clang format,9,[],https://github.com/MDSplus/mdsplus/pull/2290,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2290,"Adds .clang-format definition for reproducible results.
Adds ./clang-format.sh to perform formatting on all .c .h .hpp .cpp with exclusions and fixups
Fixed STATUS_OK in ifs and while etc
Applied the formatting","Adds .clang-format definition for reproducible results.
Adds ./clang-format.sh to perform formatting on all .c .h .hpp .cpp with exclusions and fixups
Fixed STATUS_OK in ifs and while etc
Applied the formatting",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2291,2021-04-20T12:24:16Z,2021-04-20T20:33:50Z,2022-01-10T11:50:07Z,CLOSED,False,14,3,1,https://github.com/joshStillerman,Fix: change boostrap to look for python,1,[],https://github.com/MDSplus/mdsplus/pull/2291,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2291,"Since Timo did not like the previous solution:
'assume python3'
Script now looks to see which python is installed.
Tries:
python3
python2
python","Since Timo did not like the previous solution:
'assume python3'
Script now looks to see which python is installed.
Tries:
python3
python2
python",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2291,2021-04-20T12:24:16Z,2021-04-20T20:33:50Z,2022-01-10T11:50:07Z,CLOSED,False,14,3,1,https://github.com/joshStillerman,Fix: change boostrap to look for python,1,[],https://github.com/MDSplus/mdsplus/pull/2291,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2291#issuecomment-823582236,"Since Timo did not like the previous solution:
'assume python3'
Script now looks to see which python is installed.
Tries:
python3
python2
python",merged as part of #2293,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2292,2021-04-20T12:30:47Z,2021-04-20T15:12:26Z,2021-04-20T15:12:27Z,MERGED,True,13,4,1,https://github.com/joshStillerman,"Fix: bootstrap looks for python3, python2, python",2,[],https://github.com/MDSplus/mdsplus/pull/2292,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2292,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2292,2021-04-20T12:30:47Z,2021-04-20T15:12:26Z,2021-04-20T15:12:27Z,MERGED,True,13,4,1,https://github.com/joshStillerman,"Fix: bootstrap looks for python3, python2, python",2,[],https://github.com/MDSplus/mdsplus/pull/2292,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2292#issuecomment-823307909,,looks fine. Will net let me review,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2293,2021-04-20T15:11:25Z,2021-04-20T18:37:46Z,2021-04-20T18:37:48Z,MERGED,True,59653,43325,625,https://github.com/zack-vii,Build: used standard clang-format tools with style file,9,[],https://github.com/MDSplus/mdsplus/pull/2293,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2293,This PR is the base of #2289,This PR is the base of #2289,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2293,2021-04-20T15:11:25Z,2021-04-20T18:37:46Z,2021-04-20T18:37:48Z,MERGED,True,59653,43325,625,https://github.com/zack-vii,Build: used standard clang-format tools with style file,9,[],https://github.com/MDSplus/mdsplus/pull/2293,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2293#issuecomment-823371442,This PR is the base of #2289,"added TreeFindNodeWild.c to yylex
added .clang-format style
added ./clang-format.sh script
added clang-format exclusions and fixups

Standard C03 prevent ""> >"" to "">>"" in cpp scripts
SED to unwrap multiline comments",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2294,2021-04-21T09:53:12Z,2021-04-21T12:46:00Z,2021-04-21T12:46:00Z,MERGED,True,40,29,2,https://github.com/GabrieleManduchi,Gm jscope perf,2,[],https://github.com/MDSplus/mdsplus/pull/2294,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2294,"Under some conditions jScope was evaluating the entire waveform when not required, thus slowing display","Under some conditions jScope was evaluating the entire waveform when not required, thus slowing display",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2294,2021-04-21T09:53:12Z,2021-04-21T12:46:00Z,2021-04-21T12:46:00Z,MERGED,True,40,29,2,https://github.com/GabrieleManduchi,Gm jscope perf,2,[],https://github.com/MDSplus/mdsplus/pull/2294,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2294#issuecomment-823998031,"Under some conditions jScope was evaluating the entire waveform when not required, thus slowing display",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2296,2021-04-23T14:18:10Z,2021-05-03T14:55:39Z,2021-05-03T14:55:39Z,MERGED,True,816,705,38,https://github.com/zack-vii,Tests: splits up python tests to get finer results,15,[],https://github.com/MDSplus/mdsplus/pull/2296,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2296,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2296,2021-04-23T14:18:10Z,2021-05-03T14:55:39Z,2021-05-03T14:55:39Z,MERGED,True,816,705,38,https://github.com/zack-vii,Tests: splits up python tests to get finer results,15,[],https://github.com/MDSplus/mdsplus/pull/2296,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2296#issuecomment-831314056,,fixed false positives and produces more useful results,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2299,2021-04-26T20:10:59Z,2021-08-18T16:13:09Z,2021-08-18T16:13:09Z,MERGED,True,12,11,1,https://github.com/WhoBrokeTheBuild,Feature: Minor improvements to InfluxHistorian,1,[],https://github.com/MDSplus/mdsplus/pull/2299,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/2299,"Start time query now uses >= instead of >
fVal/iVal/bVal is now discovered at runtime, instead of specifying in the SELECT node","Start time query now uses >= instead of >
fVal/iVal/bVal is now discovered at runtime, instead of specifying in the SELECT node",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2299,2021-04-26T20:10:59Z,2021-08-18T16:13:09Z,2021-08-18T16:13:09Z,MERGED,True,12,11,1,https://github.com/WhoBrokeTheBuild,Feature: Minor improvements to InfluxHistorian,1,[],https://github.com/MDSplus/mdsplus/pull/2299,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2299#issuecomment-839737000,"Start time query now uses >= instead of >
fVal/iVal/bVal is now discovered at runtime, instead of specifying in the SELECT node",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2299,2021-04-26T20:10:59Z,2021-08-18T16:13:09Z,2021-08-18T16:13:09Z,MERGED,True,12,11,1,https://github.com/WhoBrokeTheBuild,Feature: Minor improvements to InfluxHistorian,1,[],https://github.com/MDSplus/mdsplus/pull/2299,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2299#issuecomment-901217514,"Start time query now uses >= instead of >
fVal/iVal/bVal is now discovered at runtime, instead of specifying in the SELECT node",test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2299,2021-04-26T20:10:59Z,2021-08-18T16:13:09Z,2021-08-18T16:13:09Z,MERGED,True,12,11,1,https://github.com/WhoBrokeTheBuild,Feature: Minor improvements to InfluxHistorian,1,[],https://github.com/MDSplus/mdsplus/pull/2299,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2299#issuecomment-901244433,"Start time query now uses >= instead of >
fVal/iVal/bVal is now discovered at runtime, instead of specifying in the SELECT node",test fails due to unrelated issue.. can rebase as fork it is not on MDSplus,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2300,2021-04-26T20:56:27Z,2021-05-03T23:56:16Z,2021-05-03T23:56:17Z,MERGED,True,55,62,10,https://github.com/WhoBrokeTheBuild,Fix: Refactor out _MOVC3 macro,1,[],https://github.com/MDSplus/mdsplus/pull/2300,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/2300,"Replace all instances of _MOVC3(a, b, c) with memcpy(c, b, a)","Replace all instances of _MOVC3(a, b, c) with memcpy(c, b, a)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2300,2021-04-26T20:56:27Z,2021-05-03T23:56:16Z,2021-05-03T23:56:17Z,MERGED,True,55,62,10,https://github.com/WhoBrokeTheBuild,Fix: Refactor out _MOVC3 macro,1,[],https://github.com/MDSplus/mdsplus/pull/2300,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2300#issuecomment-831535687,"Replace all instances of _MOVC3(a, b, c) with memcpy(c, b, a)",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2301,2021-04-28T08:34:27Z,2021-05-03T09:33:30Z,2021-05-03T09:33:30Z,MERGED,True,7,1,1,https://github.com/GabrieleManduchi,Fix:avoid division by zero foir empty segment,3,[],https://github.com/MDSplus/mdsplus/pull/2301,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2301,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2301,2021-04-28T08:34:27Z,2021-05-03T09:33:30Z,2021-05-03T09:33:30Z,MERGED,True,7,1,1,https://github.com/GabrieleManduchi,Fix:avoid division by zero foir empty segment,3,[],https://github.com/MDSplus/mdsplus/pull/2301,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2301#issuecomment-828418135,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2301,2021-04-28T08:34:27Z,2021-05-03T09:33:30Z,2021-05-03T09:33:30Z,MERGED,True,7,1,1,https://github.com/GabrieleManduchi,Fix:avoid division by zero foir empty segment,3,[],https://github.com/MDSplus/mdsplus/pull/2301,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2301#issuecomment-828552882,,"Hi Timo, after installing clang, I get a lot of errors about unknown key 'ReflowComments'",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2301,2021-04-28T08:34:27Z,2021-05-03T09:33:30Z,2021-05-03T09:33:30Z,MERGED,True,7,1,1,https://github.com/GabrieleManduchi,Fix:avoid division by zero foir empty segment,3,[],https://github.com/MDSplus/mdsplus/pull/2301,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2301#issuecomment-828553243,,it is better you do it on a system where clang works properly,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2301,2021-04-28T08:34:27Z,2021-05-03T09:33:30Z,2021-05-03T09:33:30Z,MERGED,True,7,1,1,https://github.com/GabrieleManduchi,Fix:avoid division by zero foir empty segment,3,[],https://github.com/MDSplus/mdsplus/pull/2301,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2301#issuecomment-828560428,,"i did but should the line not be
int itemSize = (numData == 0) ? 0 : dataD->arsize / numData;",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2301,2021-04-28T08:34:27Z,2021-05-03T09:33:30Z,2021-05-03T09:33:30Z,MERGED,True,7,1,1,https://github.com/GabrieleManduchi,Fix:avoid division by zero foir empty segment,3,[],https://github.com/MDSplus/mdsplus/pull/2301,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2301#issuecomment-828566178,,"Furthermore you should add a test with empty segments to check it this is a clean solution (memory safe).
numData == 0 is if numDims <= 1 : line 234
  int numTimebase, numData = (numDims <= 1)
                                 ? (int)(dataD->arsize / dataD->length)
                                 : dims[numDims - 1];
Looks like it 'numData == 0' -> numTimebase = 0: line 246
  // Check data array too short
  if (numData < numTimebase)
    numTimebase = numData;
which will lead to a memory violation around line 267
  if (endD)
  {
    status = XTreeConvertToDouble(endD, &end);
    if (STATUS_NOT_OK)
      return status;
    if (end > fulltimebase[numTimebase - 1])
      end = fulltimebase[numTimebase - 1];
  }
  else
    end = fulltimebase[numTimebase - 1];",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2301,2021-04-28T08:34:27Z,2021-05-03T09:33:30Z,2021-05-03T09:33:30Z,MERGED,True,7,1,1,https://github.com/GabrieleManduchi,Fix:avoid division by zero foir empty segment,3,[],https://github.com/MDSplus/mdsplus/pull/2301,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2301#issuecomment-828569823,,"to me it looks like the easiest way to avoid downstream issues is to short circuit the arsize == 0 case.
something like
if (arsize == 0)
{
copy in to out;
}
else
{
do normal resampling
}
form answer;",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2301,2021-04-28T08:34:27Z,2021-05-03T09:33:30Z,2021-05-03T09:33:30Z,MERGED,True,7,1,1,https://github.com/GabrieleManduchi,Fix:avoid division by zero foir empty segment,3,[],https://github.com/MDSplus/mdsplus/pull/2301,https://github.com/GabrieleManduchi,8,https://github.com/MDSplus/mdsplus/pull/2301#issuecomment-828732020,,"right!
I have changed things to handle empty segments explicitly.
Moreover I discovered another error: at line 241, the input signal was wrongly passed as pointer to pointer",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2302,2021-05-03T11:00:30Z,2021-05-03T14:20:37Z,2021-09-16T10:58:39Z,MERGED,True,2,0,1,https://github.com/zack-vii,Build: fixed windows; ship libgcc_s_dw2 as 32 bit SEH is not yet supported ,1,[],https://github.com/MDSplus/mdsplus/pull/2302,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2302,may fix issue #2297,may fix issue #2297,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2303,2021-05-03T15:06:05Z,2021-05-03T21:09:43Z,2021-05-03T21:09:43Z,MERGED,True,2,0,1,https://github.com/zack-vii,Build: fixed windows 32 to ship libgcc_s_dw2 as SEH is not supported …,1,[],https://github.com/MDSplus/mdsplus/pull/2303,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2303,"…for 32 bit yet (#2302)
Solved the issue with libgcc_s_dw2 in  #2297","…for 32 bit yet (#2302)
Solved the issue with libgcc_s_dw2 in  #2297",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2304,2021-05-04T11:47:57Z,2021-05-04T12:45:49Z,2021-05-04T12:45:49Z,MERGED,True,328,341,6,https://github.com/zack-vii,Build: platform builds on empty/new release folder and format,2,[],https://github.com/MDSplus/mdsplus/pull/2304,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2304,Should automatically heal/setup /release and /publish folder for new oses,Should automatically heal/setup /release and /publish folder for new oses,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2304,2021-05-04T11:47:57Z,2021-05-04T12:45:49Z,2021-05-04T12:45:49Z,MERGED,True,328,341,6,https://github.com/zack-vii,Build: platform builds on empty/new release folder and format,2,[],https://github.com/MDSplus/mdsplus/pull/2304,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2304#issuecomment-831913262,Should automatically heal/setup /release and /publish folder for new oses,also fixed signing redhat packages for python3 dists like fc32,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2305,2021-05-04T19:31:16Z,2021-06-14T22:00:07Z,2021-06-14T22:02:20Z,CLOSED,False,23,1,1,https://github.com/santorofer,Fix: Add validation for the user's selection of the frequencies for the ACQ 2106 435 SC device.,2,[],https://github.com/MDSplus/mdsplus/pull/2305,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2305,"The class ACQ2106_435SC has now a series of user's input validation for the allowed frequency choices that the acq2106 435SC has.
The allowed frequencies are:
40KHz (boot-time default)
20KHz
10KHz
Otherwise, an exception is raised.","The class ACQ2106_435SC has now a series of user's input validation for the allowed frequency choices that the acq2106 435SC has.
The allowed frequencies are:
40KHz (boot-time default)
20KHz
10KHz
Otherwise, an exception is raised.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2305,2021-05-04T19:31:16Z,2021-06-14T22:00:07Z,2021-06-14T22:02:20Z,CLOSED,False,23,1,1,https://github.com/santorofer,Fix: Add validation for the user's selection of the frequencies for the ACQ 2106 435 SC device.,2,[],https://github.com/MDSplus/mdsplus/pull/2305,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2305#issuecomment-832190301,"The class ACQ2106_435SC has now a series of user's input validation for the allowed frequency choices that the acq2106 435SC has.
The allowed frequencies are:
40KHz (boot-time default)
20KHz
10KHz
Otherwise, an exception is raised.",I have done 3 tests for those 3 choices and all 3 tests have passed.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2305,2021-05-04T19:31:16Z,2021-06-14T22:00:07Z,2021-06-14T22:02:20Z,CLOSED,False,23,1,1,https://github.com/santorofer,Fix: Add validation for the user's selection of the frequencies for the ACQ 2106 435 SC device.,2,[],https://github.com/MDSplus/mdsplus/pull/2305,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/2305#issuecomment-861024209,"The class ACQ2106_435SC has now a series of user's input validation for the allowed frequency choices that the acq2106 435SC has.
The allowed frequencies are:
40KHz (boot-time default)
20KHz
10KHz
Otherwise, an exception is raised.","This PR is closed because D-Tacq has changed sync_role() so that certain SR frequencies can be used. Therefore, the corresponding clock plan is automatically chosen.
See, also related closed PR, ""Fix: explicitly setting the WRTD_TICKNS from tree node value #2323""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2306,2021-05-05T07:53:01Z,2021-05-05T13:14:32Z,2021-05-05T13:14:33Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,Fix:changed event API,1,[],https://github.com/MDSplus/mdsplus/pull/2306,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2306,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2309,2021-05-10T19:35:17Z,2021-05-12T12:37:48Z,2021-05-12T12:37:49Z,MERGED,True,404,1615,22,https://github.com/joshStillerman,Build: ub20 does not have python_numpy,13,[],https://github.com/MDSplus/mdsplus/pull/2309,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2309,"The dependecies in linux.xml  Only distinguish on 'platform'.
UB20 has different dependencies than UB<20.  Added new section to
linux.xml for specifying DIST dependencies and logic to
debian_build_debs.py to find and use this.
Eventually this should be refactored so that the 'DIST' section is
inside of the 'PLATFORM' section.
the RHEL8 hack (its own XML) can probably leverage this same thing.","The dependecies in linux.xml  Only distinguish on 'platform'.
UB20 has different dependencies than UB<20.  Added new section to
linux.xml for specifying DIST dependencies and logic to
debian_build_debs.py to find and use this.
Eventually this should be refactored so that the 'DIST' section is
inside of the 'PLATFORM' section.
the RHEL8 hack (its own XML) can probably leverage this same thing.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2309,2021-05-10T19:35:17Z,2021-05-12T12:37:48Z,2021-05-12T12:37:49Z,MERGED,True,404,1615,22,https://github.com/joshStillerman,Build: ub20 does not have python_numpy,13,[],https://github.com/MDSplus/mdsplus/pull/2309,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2309#issuecomment-838479459,"The dependecies in linux.xml  Only distinguish on 'platform'.
UB20 has different dependencies than UB<20.  Added new section to
linux.xml for specifying DIST dependencies and logic to
debian_build_debs.py to find and use this.
Eventually this should be refactored so that the 'DIST' section is
inside of the 'PLATFORM' section.
the RHEL8 hack (its own XML) can probably leverage this same thing.",@joshStillerman  This should do it. I changed the jenkins jobs to build packages for centos8 and ubuntu20 on pull-requests,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2309,2021-05-10T19:35:17Z,2021-05-12T12:37:48Z,2021-05-12T12:37:49Z,MERGED,True,404,1615,22,https://github.com/joshStillerman,Build: ub20 does not have python_numpy,13,[],https://github.com/MDSplus/mdsplus/pull/2309,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2309#issuecomment-838577391,"The dependecies in linux.xml  Only distinguish on 'platform'.
UB20 has different dependencies than UB<20.  Added new section to
linux.xml for specifying DIST dependencies and logic to
debian_build_debs.py to find and use this.
Eventually this should be refactored so that the 'DIST' section is
inside of the 'PLATFORM' section.
the RHEL8 hack (its own XML) can probably leverage this same thing.","Failed on alpine-3.6-armhf because it got stuck in java tests, unrelated though.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2310,2021-05-12T10:55:21Z,2021-05-12T13:12:33Z,2021-05-12T13:12:34Z,MERGED,True,15,3,2,https://github.com/GabrieleManduchi,Fix:jTraverer and jScope fixes,1,[],https://github.com/MDSplus/mdsplus/pull/2310,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2310,"jTraverser: avoid reading conglomerate nodes for gettin number of conglomerate elements
jScope: avoid reprating Signal.setXLimits if the limits passed are the same as before. Avoid possible loops triggered by detDataAsync() calls","jTraverser: avoid reading conglomerate nodes for gettin number of conglomerate elements
jScope: avoid reprating Signal.setXLimits if the limits passed are the same as before. Avoid possible loops triggered by detDataAsync() calls",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2310,2021-05-12T10:55:21Z,2021-05-12T13:12:33Z,2021-05-12T13:12:34Z,MERGED,True,15,3,2,https://github.com/GabrieleManduchi,Fix:jTraverer and jScope fixes,1,[],https://github.com/MDSplus/mdsplus/pull/2310,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2310#issuecomment-839699624,"jTraverser: avoid reading conglomerate nodes for gettin number of conglomerate elements
jScope: avoid reprating Signal.setXLimits if the limits passed are the same as before. Avoid possible loops triggered by detDataAsync() calls",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2312,2021-05-14T15:07:55Z,2021-05-17T08:28:47Z,2021-05-17T08:28:47Z,MERGED,True,6327,15852,68,https://github.com/GabrieleManduchi,Gm beans,25,[],https://github.com/MDSplus/mdsplus/pull/2312,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2312,"new java beans support for DW setup of MARTe2 Simulink devices
new MARTE2_SIMULINK devices
structure changed of MARTE2 devices
RedPitaya support","new java beans support for DW setup of MARTe2 Simulink devices
new MARTE2_SIMULINK devices
structure changed of MARTE2 devices
RedPitaya support",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2314,2021-05-21T23:52:24Z,2021-05-24T12:26:19Z,2021-05-24T12:26:19Z,MERGED,True,173,55,2,https://github.com/santorofer,Fix: Add extra selection for different trigger sources,4,[],https://github.com/MDSplus/mdsplus/pull/2314,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2314,"Add code to the acq 423s to allow for selection of trigger sources, other than hard and soft.
For example, the  MDSplus device for the ACQ2106 + 423 should be able to select WRTTs when the system is triggered by WR messages.","Add code to the acq 423s to allow for selection of trigger sources, other than hard and soft.
For example, the  MDSplus device for the ACQ2106 + 423 should be able to select WRTTs when the system is triggered by WR messages.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2315,2021-05-27T06:30:37Z,2021-06-23T19:46:58Z,2021-06-23T19:46:58Z,MERGED,True,947,0,2,https://github.com/santorofer,Feature: jDevices setup form for WRTD,15,[],https://github.com/MDSplus/mdsplus/pull/2315,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2315,"A device setup form was built.
It contains the necessary menus to create a WRTD device for ACQ digitizers as well as for PG/TIGA systems.
Example:","A device setup form was built.
It contains the necessary menus to create a WRTD device for ACQ digitizers as well as for PG/TIGA systems.
Example:",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2315,2021-05-27T06:30:37Z,2021-06-23T19:46:58Z,2021-06-23T19:46:58Z,MERGED,True,947,0,2,https://github.com/santorofer,Feature: jDevices setup form for WRTD,15,[],https://github.com/MDSplus/mdsplus/pull/2315,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2315#issuecomment-849381295,"A device setup form was built.
It contains the necessary menus to create a WRTD device for ACQ digitizers as well as for PG/TIGA systems.
Example:","hm, would it not make sense to layout the components of the form to better fit a screen. also one tab for one lonely text field seems odd. maybe you can fit the ones from the top in there too and rename the tab.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2315,2021-05-27T06:30:37Z,2021-06-23T19:46:58Z,2021-06-23T19:46:58Z,MERGED,True,947,0,2,https://github.com/santorofer,Feature: jDevices setup form for WRTD,15,[],https://github.com/MDSplus/mdsplus/pull/2315,https://github.com/santorofer,3,https://github.com/MDSplus/mdsplus/pull/2315#issuecomment-849918106,"A device setup form was built.
It contains the necessary menus to create a WRTD device for ACQ digitizers as well as for PG/TIGA systems.
Example:","Hi Timo, yes, I see what you mean. This is my first pass to the actual design of the form. What it's good is that the form works well when using it.
By creating those tabs I thought it will be clear what is what, instead of put them all in one page. But I understand whaat you mean. I will re-think it.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2315,2021-05-27T06:30:37Z,2021-06-23T19:46:58Z,2021-06-23T19:46:58Z,MERGED,True,947,0,2,https://github.com/santorofer,Feature: jDevices setup form for WRTD,15,[],https://github.com/MDSplus/mdsplus/pull/2315,https://github.com/santorofer,4,https://github.com/MDSplus/mdsplus/pull/2315#issuecomment-861661033,"A device setup form was built.
It contains the necessary menus to create a WRTD device for ACQ digitizers as well as for PG/TIGA systems.
Example:",GUI's test passed.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2315,2021-05-27T06:30:37Z,2021-06-23T19:46:58Z,2021-06-23T19:46:58Z,MERGED,True,947,0,2,https://github.com/santorofer,Feature: jDevices setup form for WRTD,15,[],https://github.com/MDSplus/mdsplus/pull/2315,https://github.com/santorofer,5,https://github.com/MDSplus/mdsplus/pull/2315#issuecomment-867049703,"A device setup form was built.
It contains the necessary menus to create a WRTD device for ACQ digitizers as well as for PG/TIGA systems.
Example:","I will merge this PR so that you can try out  this WRTD  Java form in alpha.
To test the form, one can create a test tree with one device:

TCL> add node wrtd /model=acq2106_WRTD
Open tree with jTraverser, then use ""Setup Device""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2316,2021-05-27T08:29:08Z,2021-06-01T10:43:38Z,2021-06-01T10:43:38Z,MERGED,True,1,0,1,https://github.com/zack-vii,Fix: add PULSE to phases (same as PON),1,[],https://github.com/MDSplus/mdsplus/pull/2316,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2316,Would be great to add this to the default.,Would be great to add this to the default.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2318,2021-06-01T10:01:27Z,2021-06-01T10:43:22Z,2021-06-01T10:43:22Z,MERGED,True,11,14,3,https://github.com/zack-vii,Fix: mdstcpip memory issue with jscope,2,[],https://github.com/MDSplus/mdsplus/pull/2318,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2318,"There was a double free causing the crash. also SupportsCompression is not a flag of client_type but according to jScope a bit in the status filed. .. jScope seems to be the only client that cares about compression but does not support DTYPE DSC .. I assume the code that i tried to revive there was commented out for that reason. I removed it, whoever in two commit in case we want this back some day.
Fixes #2318","There was a double free causing the crash. also SupportsCompression is not a flag of client_type but according to jScope a bit in the status filed. .. jScope seems to be the only client that cares about compression but does not support DTYPE DSC .. I assume the code that i tried to revive there was commented out for that reason. I removed it, whoever in two commit in case we want this back some day.
Fixes #2318",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2321,2021-06-09T16:25:57Z,2021-07-01T13:15:14Z,2021-07-01T13:15:15Z,MERGED,True,14,0,2,https://github.com/joshStillerman,Feature: Add extern entrypoint CamXlateLogicalname,1,[],https://github.com/MDSplus/mdsplus/pull/2321,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2321,"A user wants to call xlate_logicalname in camshr.  New entrypoint
added to expose this routine.
Closes issue:
#2319","A user wants to call xlate_logicalname in camshr.  New entrypoint
added to expose this routine.
Closes issue:
#2319",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2323,2021-06-14T04:58:39Z,2021-06-22T20:44:20Z,2021-06-22T20:44:20Z,MERGED,True,143,53,1,https://github.com/santorofer,Fix: explicitly setting the WRTD_TICKNS from tree node value,3,[],https://github.com/MDSplus/mdsplus/pull/2323,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2323,"The WRTD_TICKNS is now being set when INIT the device. The value is taken from the corresponding tree node:
uut.cC.WRTD_TICKNS = self.wr_init_wrtd_tickns.data()
The WRTD_TICKNS (clock tick interval in nsec), is the result of:

/ MBCKL

where the MBCKL is the mother board clock in MHz, which comes from  using  new defined clock plans. The plan is automatically selected by the sync_role() script, when the sample rate is input. The choices are:
10 kSPS (5M12 / 512)
20 kSPS (10M24/512)
40 kSPS (20M48/512)
80 kSPS (20M48/256)
128kSPS (32M768/256)
For example, if the sample rate is chosen to be 20KHz, then, the plan 10M24 is automatically selected by sync_role(). Therefore, the value for WRTD_TICKNS should be:
WRTD_TICKNS = 1./10240000 = 0.00000009765625 secs = 97.65625 nsecs","The WRTD_TICKNS is now being set when INIT the device. The value is taken from the corresponding tree node:
uut.cC.WRTD_TICKNS = self.wr_init_wrtd_tickns.data()
The WRTD_TICKNS (clock tick interval in nsec), is the result of:

/ MBCKL

where the MBCKL is the mother board clock in MHz, which comes from  using  new defined clock plans. The plan is automatically selected by the sync_role() script, when the sample rate is input. The choices are:
10 kSPS (5M12 / 512)
20 kSPS (10M24/512)
40 kSPS (20M48/512)
80 kSPS (20M48/256)
128kSPS (32M768/256)
For example, if the sample rate is chosen to be 20KHz, then, the plan 10M24 is automatically selected by sync_role(). Therefore, the value for WRTD_TICKNS should be:
WRTD_TICKNS = 1./10240000 = 0.00000009765625 secs = 97.65625 nsecs",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2323,2021-06-14T04:58:39Z,2021-06-22T20:44:20Z,2021-06-22T20:44:20Z,MERGED,True,143,53,1,https://github.com/santorofer,Fix: explicitly setting the WRTD_TICKNS from tree node value,3,[],https://github.com/MDSplus/mdsplus/pull/2323,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2323#issuecomment-861023010,"The WRTD_TICKNS is now being set when INIT the device. The value is taken from the corresponding tree node:
uut.cC.WRTD_TICKNS = self.wr_init_wrtd_tickns.data()
The WRTD_TICKNS (clock tick interval in nsec), is the result of:

/ MBCKL

where the MBCKL is the mother board clock in MHz, which comes from  using  new defined clock plans. The plan is automatically selected by the sync_role() script, when the sample rate is input. The choices are:
10 kSPS (5M12 / 512)
20 kSPS (10M24/512)
40 kSPS (20M48/512)
80 kSPS (20M48/256)
128kSPS (32M768/256)
For example, if the sample rate is chosen to be 20KHz, then, the plan 10M24 is automatically selected by sync_role(). Therefore, the value for WRTD_TICKNS should be:
WRTD_TICKNS = 1./10240000 = 0.00000009765625 secs = 97.65625 nsecs","This PR supersedes the closed PR #2305:
""Fix: Add validation for the user's selection of the frequencies for the ACQ 2106 435 SC device.""",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2324,2021-06-16T14:58:00Z,2021-06-17T07:27:39Z,2021-06-17T07:27:40Z,MERGED,True,31,12,4,https://github.com/GabrieleManduchi,Gm marte2 updates,2,[],https://github.com/MDSplus/mdsplus/pull/2324,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2324,"Better error reporting in MARTE2 Device Beans
A few fixes in MARTE2_COMPONENT and MARTE2_SIMULINK","Better error reporting in MARTE2 Device Beans
A few fixes in MARTE2_COMPONENT and MARTE2_SIMULINK",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2326,2021-06-21T14:07:23Z,2021-06-21T14:54:47Z,2021-06-21T14:54:47Z,MERGED,True,2,2,1,https://github.com/cenkoloji,"Fix: Compare ctx.value instead of ctx, fixes #2325",2,[],https://github.com/MDSplus/mdsplus/pull/2326,https://github.com/cenkoloji,1,https://github.com/MDSplus/mdsplus/pull/2326,"When instance of active tree is created (i.e. Tree()), comparing ctx
of node and tree result in node seeming to be from another tree
Note that there is another instance of ctx comparison: tree.py#L697.
I'm not sure if the same should be applied there.","When instance of active tree is created (i.e. Tree()), comparing ctx
of node and tree result in node seeming to be from another tree
Note that there is another instance of ctx comparison: tree.py#L697.
I'm not sure if the same should be applied there.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2326,2021-06-21T14:07:23Z,2021-06-21T14:54:47Z,2021-06-21T14:54:47Z,MERGED,True,2,2,1,https://github.com/cenkoloji,"Fix: Compare ctx.value instead of ctx, fixes #2325",2,[],https://github.com/MDSplus/mdsplus/pull/2326,https://github.com/cenkoloji,2,https://github.com/MDSplus/mdsplus/pull/2326#issuecomment-865065503,"When instance of active tree is created (i.e. Tree()), comparing ctx
of node and tree result in node seeming to be from another tree
Note that there is another instance of ctx comparison: tree.py#L697.
I'm not sure if the same should be applied there.",Related to issue #2325,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2326,2021-06-21T14:07:23Z,2021-06-21T14:54:47Z,2021-06-21T14:54:47Z,MERGED,True,2,2,1,https://github.com/cenkoloji,"Fix: Compare ctx.value instead of ctx, fixes #2325",2,[],https://github.com/MDSplus/mdsplus/pull/2326,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2326#issuecomment-865071294,"When instance of active tree is created (i.e. Tree()), comparing ctx
of node and tree result in node seeming to be from another tree
Note that there is another instance of ctx comparison: tree.py#L697.
I'm not sure if the same should be applied there.",test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2327,2021-06-21T14:59:08Z,2021-06-21T19:28:25Z,2021-06-21T19:28:25Z,MERGED,True,2,2,1,https://github.com/zack-vii,"Fix: Compare ctx.value instead of ctx, fixes #2325 (#2326)",1,[],https://github.com/MDSplus/mdsplus/pull/2327,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2327,"Compare ctx.value instead of ctx, fixes #2325

When instance of active tree is created (i.e. Tree()), comparing ctx
of node and tree result in node seeming to be from another tree","Compare ctx.value instead of ctx, fixes #2325

When instance of active tree is created (i.e. Tree()), comparing ctx
of node and tree result in node seeming to be from another tree",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2328,2021-06-21T15:43:28Z,2021-06-22T20:44:49Z,2021-06-22T20:44:49Z,MERGED,True,15,1,1,https://github.com/santorofer,Fix: Add validation for the user's choice of sample rate frequencies for SC devices,1,[],https://github.com/MDSplus/mdsplus/pull/2328,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2328,"A input validation was added to the 2106 435 SC (signal conditioning) subclass for the allowed frequencies (sample rates). Five different frequencies are allowed, corresponding to 5 difference clock plans designed by D-Tacq. These are:
    # 10 kSPS (5M12  /512)
    # 20 kSPS (10M24 /512)
    # 40 kSPS (20M48 /512)
    # 80 kSPS (20M48 /256)
    # 128kSPS (32M768/256)

An error is raised if user's selected frequency is no in that list.","A input validation was added to the 2106 435 SC (signal conditioning) subclass for the allowed frequencies (sample rates). Five different frequencies are allowed, corresponding to 5 difference clock plans designed by D-Tacq. These are:
    # 10 kSPS (5M12  /512)
    # 20 kSPS (10M24 /512)
    # 40 kSPS (20M48 /512)
    # 80 kSPS (20M48 /256)
    # 128kSPS (32M768/256)

An error is raised if user's selected frequency is no in that list.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2331,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/kgerickson,2,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-868354444,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","It might be worth waiting on merging this until we can better understand why it only affects connections between a new client and an old server.  I recall hitting a bug with similar server version characteristics, and the root cause was not so trivial.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/kgerickson,3,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-869202597,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","I think perhaps it would be good to split ""@zack-vii
removed extra free method in PutRecordRemote"" into two commits, one to do as the commit says, and another to rename the variable.  The commit of removing the extra free should only be a single line. This will help with future history management (for instance, with git bisect, or some such thing).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-869216800,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.",well we squash commit anyway. i need to check the MDSIP_MAX_VERSION sswitch for windows though.. for whatever reason the confirming print does not show in tditest,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/kgerickson,5,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-869223649,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.",Why do you squash commits? That explains why trying to go through the code history is a nightmare.  Can you stop doing that? :),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/kgerickson,6,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-869249110,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","As a side note, this is currently blocking mhd data recording on KSTAR, so if you could backport this to the stable branch when it's fixed, I'd appreciate it. I've run a few days of shots without being able to record, which is obviously not ideal.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-869424697,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","does it fix your issue though.. i added the test to get closer to your setup, i.e. older server/new client. but it is just a simulation and the core issue may be somewhere else.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/zack-vii,8,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-869565910,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","seems like wine swallows the confirmation print... use MDSMSG if env is defined (those are filtered out by default). now test should not fail under windows.
also the connection version is now adjusted during connect, which should reduce its impact on performance.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/zack-vii,9,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-869571086,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","@kgerickson : lacking time, I did not split the commit, but you may do so if you wish. Squashing makes it easier to apply patches to stable as well as it is only one cherry-pick alpha. I think given that we usually debug by releases to narrow down the issue we did not come across the history mess so  often. On the other hand we sometimes forget to commit while working on a patch resulting on two things happening at once, its pretty tedious to disentangle the steps when the share lines.  ;)
well if we squash or not.. i fine either way.. but squashing leads to a linear history without rebasing. I think that is why we decided on squashing.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/zack-vii,10,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-869608764,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/kgerickson,11,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-870122037,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","I'm building your branch on the affected system right now, will report back.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/kgerickson,12,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-870127123,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","I can confirm that this branch fixes my particular problem. I don't fully understand the change, so I can't review it, but at least it works for me.
I can split that one commit, but it will require rebasing this branch. I hope that's ok.
EDIT: I split the commit and pushed it. This should be good to merge.
EDIT2: what's the current process for backporting this to the release branch?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/zack-vii,13,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-870277774,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.",hm i could make a branch for stable.. not sure why the thread is not cleaning ip propery (asan test). i had it run for many iteration yesterday and it did not trip once. but jenkins failed again.. maybe i should switch back to processed (aka local://1),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2331,2021-06-25T05:58:12Z,2021-06-30T19:07:54Z,2021-06-30T19:07:55Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2331,https://github.com/zack-vii,14,https://github.com/MDSplus/mdsplus/pull/2331#issuecomment-871657229,"I wanted to fix #2330. I am not unsure if it does. Seems like our tests dont cover this issue and i could not reproduce it. Nevertheless, one free seems extra.","The reason why we do squash merge ,, now that i think of it is as this will trigger the version increments minor or release, it is based on the commit message of the  merge. so we would have to think of a new logic/mechanism to figure out what kind of improvement the merge request aimed at. That should be considered in the issue as well.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2332,2021-06-25T14:23:43Z,2021-08-18T15:53:01Z,2021-08-18T15:53:01Z,MERGED,True,59,21,4,https://github.com/joshStillerman,Docs:  Fix name of TreeShrHook.py example,1,[],https://github.com/MDSplus/mdsplus/pull/2332,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2332,"The distributed TreeHook.py.example is old and would not be called
if put in place.  This new one will work if enabled.","The distributed TreeHook.py.example is old and would not be called
if put in place.  This new one will work if enabled.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2333,2021-06-29T10:32:04Z,2021-06-30T17:08:45Z,2021-06-30T19:09:47Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2333,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2333,same as #2331 but on stable,same as #2331 but on stable,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2333,2021-06-29T10:32:04Z,2021-06-30T17:08:45Z,2021-06-30T19:09:47Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2333,https://github.com/kgerickson,2,https://github.com/MDSplus/mdsplus/pull/2333#issuecomment-871603508,same as #2331 but on stable,"With this being merged in to the stable branch, will a release be automatic, or do I have to request a new release from that branch?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2333,2021-06-29T10:32:04Z,2021-06-30T17:08:45Z,2021-06-30T19:09:47Z,MERGED,True,210,89,15,https://github.com/zack-vii,Fix: removed extra free method in PutRecordRemote,8,[],https://github.com/MDSplus/mdsplus/pull/2333,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2333#issuecomment-871658508,same as #2331 but on stable,it will automatically release tonight.. but if you wish to have it asap you can start the jenkins job for 1-stable-relaese,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2336,2021-07-01T13:30:40Z,2021-07-01T14:07:00Z,2021-07-01T14:07:01Z,MERGED,True,9,9,1,https://github.com/joshStillerman,Fix: change wait mode from 'Default' to 'Busy',1,[],https://github.com/MDSplus/mdsplus/pull/2336,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2336,"Default Wait mode does not seem to work in all circumstances.  this
commit changes it to 'Busy' wait instead.
Also: Encode strings for Python3 compatability.","Default Wait mode does not seem to work in all circumstances.  this
commit changes it to 'Busy' wait instead.
Also: Encode strings for Python3 compatability.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2338,2021-07-06T22:05:29Z,2021-07-13T07:27:57Z,2021-07-13T07:27:58Z,MERGED,True,12,6,1,https://github.com/zack-vii,Build: el7 has no python-numpy,1,[],https://github.com/MDSplus/mdsplus/pull/2338,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2338,should fix #2337,should fix #2337,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2339,2021-07-06T22:07:19Z,2021-07-13T07:28:12Z,2021-07-13T07:28:13Z,MERGED,True,12,6,1,https://github.com/zack-vii,Build: el7 has no python-numpy,1,['stable only'],https://github.com/MDSplus/mdsplus/pull/2339,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2339,should fix #2337,should fix #2337,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2346,2021-07-12T07:08:35Z,2021-07-12T12:02:36Z,2021-07-12T12:02:37Z,MERGED,True,2,2,1,https://github.com/GabrieleManduchi,Fix:change incorrect jScope property file,1,[],https://github.com/MDSplus/mdsplus/pull/2346,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2346,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2348,2021-07-12T15:43:54Z,2021-07-13T01:38:07Z,2021-07-13T01:38:07Z,MERGED,True,156,0,4,https://github.com/santorofer,Feature: New TDI python function that query Influxdb data from an MDSplus node,12,[],https://github.com/MDSplus/mdsplus/pull/2348,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2348,"A new python TDI function that allows for query data from InfluxDB from an MDSplus node.
The MDsplus node will contain a following function call:
influxSignal(
""fVal"",
""tagPath = 'ic/dc bus/i_focs_bus'"",
\TFMC::TOP.INFLUXDB:SERIES,
\TFMC::TOP.INFLUXDB:DATABASE,
\TFMC::TOP.INFLUXDB:CONFIG,
\TFMC::TOP.INFLUXDB:START_TIME,
\TFMC::TOP.INFLUXDB:END_TIME
)
where:
fVal = it's the field key
tagPAth =  this is the ""where"" part of the query
\TFMC::TOP.INFLUXDB:CONFIG is there the credential file is located. This file contains the IP address and port of the server.
This PR also contain a change to the acq2106_435st class, to correctly set the TRIG_TIME, i.e. the START_TIME for the beginning of the shot.","A new python TDI function that allows for query data from InfluxDB from an MDSplus node.
The MDsplus node will contain a following function call:
influxSignal(
""fVal"",
""tagPath = 'ic/dc bus/i_focs_bus'"",
\TFMC::TOP.INFLUXDB:SERIES,
\TFMC::TOP.INFLUXDB:DATABASE,
\TFMC::TOP.INFLUXDB:CONFIG,
\TFMC::TOP.INFLUXDB:START_TIME,
\TFMC::TOP.INFLUXDB:END_TIME
)
where:
fVal = it's the field key
tagPAth =  this is the ""where"" part of the query
\TFMC::TOP.INFLUXDB:CONFIG is there the credential file is located. This file contains the IP address and port of the server.
This PR also contain a change to the acq2106_435st class, to correctly set the TRIG_TIME, i.e. the START_TIME for the beginning of the shot.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2348,2021-07-12T15:43:54Z,2021-07-13T01:38:07Z,2021-07-13T01:38:07Z,MERGED,True,156,0,4,https://github.com/santorofer,Feature: New TDI python function that query Influxdb data from an MDSplus node,12,[],https://github.com/MDSplus/mdsplus/pull/2348,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2348#issuecomment-878616035,"A new python TDI function that allows for query data from InfluxDB from an MDSplus node.
The MDsplus node will contain a following function call:
influxSignal(
""fVal"",
""tagPath = 'ic/dc bus/i_focs_bus'"",
\TFMC::TOP.INFLUXDB:SERIES,
\TFMC::TOP.INFLUXDB:DATABASE,
\TFMC::TOP.INFLUXDB:CONFIG,
\TFMC::TOP.INFLUXDB:START_TIME,
\TFMC::TOP.INFLUXDB:END_TIME
)
where:
fVal = it's the field key
tagPAth =  this is the ""where"" part of the query
\TFMC::TOP.INFLUXDB:CONFIG is there the credential file is located. This file contains the IP address and port of the server.
This PR also contain a change to the acq2106_435st class, to correctly set the TRIG_TIME, i.e. the START_TIME for the beginning of the shot.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2349,2021-07-12T19:57:34Z,2021-07-13T07:27:29Z,2022-02-13T10:20:31Z,MERGED,True,96,32,29,https://github.com/joshStillerman,Fix: remove #pragma once from the code,1,[],https://github.com/MDSplus/mdsplus/pull/2349,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2349,"User reported that #pragma once, which is a nonstandard feature
is not supported by their compiler.  As it is 'nonstandard' it
seemed sensible to revert to #ifndef _FILENAME_EXT  instead.
Should resolve:
#2347","User reported that #pragma once, which is a nonstandard feature
is not supported by their compiler.  As it is 'nonstandard' it
seemed sensible to revert to #ifndef _FILENAME_EXT  instead.
Should resolve:
#2347",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2349,2021-07-12T19:57:34Z,2021-07-13T07:27:29Z,2022-02-13T10:20:31Z,MERGED,True,96,32,29,https://github.com/joshStillerman,Fix: remove #pragma once from the code,1,[],https://github.com/MDSplus/mdsplus/pull/2349,https://github.com/kgerickson,2,https://github.com/MDSplus/mdsplus/pull/2349#issuecomment-887747719,"User reported that #pragma once, which is a nonstandard feature
is not supported by their compiler.  As it is 'nonstandard' it
seemed sensible to revert to #ifndef _FILENAME_EXT  instead.
Should resolve:
#2347","This is actually not allowed.  All macro names prefixed with _ or __ are reserved, and cannot be used.  Please change this to use an allowable name.
That said, pragma once works with PGI, so this is a regression IMO that we fixed originally in 2015.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2349,2021-07-12T19:57:34Z,2021-07-13T07:27:29Z,2022-02-13T10:20:31Z,MERGED,True,96,32,29,https://github.com/joshStillerman,Fix: remove #pragma once from the code,1,[],https://github.com/MDSplus/mdsplus/pull/2349,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2349#issuecomment-887825934,"User reported that #pragma once, which is a nonstandard feature
is not supported by their compiler.  As it is 'nonstandard' it
seemed sensible to revert to #ifndef _FILENAME_EXT  instead.
Should resolve:
#2347","I made the change in response to your issue.  I can rip it back out, or
change the names for my IFDEFS.  Not sure why you put the issue given
the PG and all the other compilers we know about, seem to accept it.
-Josh
On 7/27/21 2:46 PM, kgerickson wrote:

 This is actually not allowed. All macro names prefixed with _ or __
 are reserved, and cannot be used. Please change this to use an
 allowable name.

 That said, pragma once works with PGI, so this is a regression IMO
 that we fixed originally in 2015.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2349 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZNJU2ACIQ5G4PAXXJ3TZ35IRANCNFSM5AHQK6KA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2349,2021-07-12T19:57:34Z,2021-07-13T07:27:29Z,2022-02-13T10:20:31Z,MERGED,True,96,32,29,https://github.com/joshStillerman,Fix: remove #pragma once from the code,1,[],https://github.com/MDSplus/mdsplus/pull/2349,https://github.com/kgerickson,4,https://github.com/MDSplus/mdsplus/pull/2349#issuecomment-887828658,"User reported that #pragma once, which is a nonstandard feature
is not supported by their compiler.  As it is 'nonstandard' it
seemed sensible to revert to #ifndef _FILENAME_EXT  instead.
Should resolve:
#2347","It wasn't my issue.........

On Tue, Jul 27, 2021, 10:51 Josh Stillerman ***@***.***>
wrote:
…
 I made the change in response to your issue.  I can rip it back out, or
 change the names for my IFDEFS.  Not sure why you put the issue given
 the PG and all the other compilers we know about, seem to accept it.

 -Josh

 On 7/27/21 2:46 PM, kgerickson wrote:
 >
 > This is actually not allowed. All macro names prefixed with _ or __
 > are reserved, and cannot be used. Please change this to use an
 > allowable name.
 >
 > That said, pragma once works with PGI, so this is a regression IMO
 > that we fixed originally in 2015.
 >
 > —
 > You are receiving this because you authored the thread.
 > Reply to this email directly, view it on GitHub
 > <#2349 (comment)>,
 > or unsubscribe
 > <
 https://github.com/notifications/unsubscribe-auth/ABY5AZNJU2ACIQ5G4PAXXJ3TZ35IRANCNFSM5AHQK6KA
 >.
 >
 --
 *Joshua Stillerman*
 Research Engineer
 MIT Plasma Science and Fusion Center
 617.253.8176
 ***@***.*** ***@***.***>

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2349 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ADL6D6SJR4JCDVI5CPKFSRDTZ4L4ZANCNFSM5AHQK6KA>
 .",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2349,2021-07-12T19:57:34Z,2021-07-13T07:27:29Z,2022-02-13T10:20:31Z,MERGED,True,96,32,29,https://github.com/joshStillerman,Fix: remove #pragma once from the code,1,[],https://github.com/MDSplus/mdsplus/pull/2349,https://github.com/kgerickson,5,https://github.com/MDSplus/mdsplus/pull/2349#issuecomment-1037713146,"User reported that #pragma once, which is a nonstandard feature
is not supported by their compiler.  As it is 'nonstandard' it
seemed sensible to revert to #ifndef _FILENAME_EXT  instead.
Should resolve:
#2347","Not sure where you stand with this, but to summarize my thoughts:

The change should be reverted or modified as described
Sterling wrote the issue, not me
Sterling is wrong

And for reference, I'm the one who introduced the concept of pragma once in the first place, so clearly I think it's the better choice :)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2349,2021-07-12T19:57:34Z,2021-07-13T07:27:29Z,2022-02-13T10:20:31Z,MERGED,True,96,32,29,https://github.com/joshStillerman,Fix: remove #pragma once from the code,1,[],https://github.com/MDSplus/mdsplus/pull/2349,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2349#issuecomment-1037991004,"User reported that #pragma once, which is a nonstandard feature
is not supported by their compiler.  As it is 'nonstandard' it
seemed sensible to revert to #ifndef _FILENAME_EXT  instead.
Should resolve:
#2347",I support #pragma once,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2351,2021-07-14T07:07:18Z,2021-07-19T09:56:26Z,2021-07-19T09:56:26Z,MERGED,True,1,1,1,https://github.com/GabrieleManduchi,Fix:changed decompile() no more supported to toString(),1,[],https://github.com/MDSplus/mdsplus/pull/2351,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2351,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2353,2021-07-17T11:33:39Z,2021-07-17T21:06:46Z,2021-07-17T21:06:46Z,MERGED,True,34,12,4,https://github.com/zack-vii,Fix: TreeShr cleanup connections only at key locations of the code,3,[],https://github.com/MDSplus/mdsplus/pull/2353,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2353,"This should fix issue #2352 by keeping connections in the treeshr connection list until the TreeOpen is complete.

convert unique into fixed length char for performance, was limited already and 64 bytes is plenty, even for ip6 addresses.","This should fix issue #2352 by keeping connections in the treeshr connection list until the TreeOpen is complete.

convert unique into fixed length char for performance, was limited already and 64 bytes is plenty, even for ip6 addresses.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2354,2021-07-17T11:42:11Z,2021-07-17T21:07:00Z,2021-07-17T21:07:01Z,MERGED,True,34,12,4,https://github.com/zack-vii,Fix: TreeShr cleanup connections only at key locations of the code,3,['stable only'],https://github.com/MDSplus/mdsplus/pull/2354,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2354,"This should fix issue #2352 by keeping connections in the treeshr connection list until the TreeOpen is complete.

convert unique into fixed length char for performance, was limited already and 64 bytes is plenty, even for ip6 addresses.","This should fix issue #2352 by keeping connections in the treeshr connection list until the TreeOpen is complete.

convert unique into fixed length char for performance, was limited already and 64 bytes is plenty, even for ip6 addresses.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2355,2021-07-19T14:45:02Z,2021-07-27T22:00:50Z,2021-07-27T22:00:50Z,MERGED,True,52,38,1,https://github.com/santorofer,Fix: Get clock plan and calculate the correct nanosec per ticks for the ACQ2106 WRTD TICKNS.,7,[],https://github.com/MDSplus/mdsplus/pull/2355,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2355,"The changes are in the acq2106_WRTD device.
1- Now the clock plan name is checked directly from the ACQ.
2- The name is used to to calculate the correct nanosec per tick value for the ACQ's uut.cC.WRTD_TICKNS","The changes are in the acq2106_WRTD device.
1- Now the clock plan name is checked directly from the ACQ.
2- The name is used to to calculate the correct nanosec per tick value for the ACQ's uut.cC.WRTD_TICKNS",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2356,2021-07-19T17:56:42Z,2021-07-27T22:01:38Z,2021-07-27T22:01:38Z,MERGED,True,85,27,3,https://github.com/santorofer,Fix: Influxdb signal with delta step,4,[],https://github.com/MDSplus/mdsplus/pull/2356,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2356,"Add INFLUX GROUP BY to the query:
groupBy = 'GROUP BY time(%sms)' % (deltaTimeMS,)
if the getSetTimeContext() contains the delta step.
Includes changes to 435st and 423st so that the start of the shot, the trig_time is recorded into the node at the start of stream.","Add INFLUX GROUP BY to the query:
groupBy = 'GROUP BY time(%sms)' % (deltaTimeMS,)
if the getSetTimeContext() contains the delta step.
Includes changes to 435st and 423st so that the start of the shot, the trig_time is recorded into the node at the start of stream.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2358,2021-07-21T14:39:42Z,2021-08-18T15:20:11Z,2021-10-18T18:57:15Z,CLOSED,False,140,124,10,https://github.com/joshStillerman,Fix: matlab fails to compile code with 'py.' if no python present,2,[],https://github.com/MDSplus/mdsplus/pull/2358,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2358,"This fix allows matlab mdsplus functions to work on computers that do not have a python interpreter.
Moves all references to 'py.' to functions in separate files.
closes #2357","This fix allows matlab mdsplus functions to work on computers that do not have a python interpreter.
Moves all references to 'py.' to functions in separate files.
closes #2357",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2358,2021-07-21T14:39:42Z,2021-08-18T15:20:11Z,2021-10-18T18:57:15Z,CLOSED,False,140,124,10,https://github.com/joshStillerman,Fix: matlab fails to compile code with 'py.' if no python present,2,[],https://github.com/MDSplus/mdsplus/pull/2358,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2358#issuecomment-884275515,"This fix allows matlab mdsplus functions to work on computers that do not have a python interpreter.
Moves all references to 'py.' to functions in separate files.
closes #2357","hm well i assume you tested it .. with MATLAB2021a. looks ok.. One proposal I have though. do you think it makes sense to hide the private functions by moving them into ./matlab/private/  otherwise we may be bound to keep them ""as users may relay on them"". basically on would only want functions in ./matlab that the user is expected to invoke.
the new files should go in there for sure.. maybe toe from/to and NATIVE functions as they are called by mdsvalue no?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2358,2021-07-21T14:39:42Z,2021-08-18T15:20:11Z,2021-10-18T18:57:15Z,CLOSED,False,140,124,10,https://github.com/joshStillerman,Fix: matlab fails to compile code with 'py.' if no python present,2,[],https://github.com/MDSplus/mdsplus/pull/2358,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2358#issuecomment-884296495,"This fix allows matlab mdsplus functions to work on computers that do not have a python interpreter.
Moves all references to 'py.' to functions in separate files.
closes #2357","Actually-

   I am heading out to walk my dogs.  I will be back by 12:30  and then
I have a meeting 1:45 - 3:00
-Josh
On 7/21/21 11:21 AM, Timo Schroeder wrote:

 hm well i assume you tested it .. with MATLAB2021a. looks ok.. One
 proposal I have though. do you think it makes sense to hide the
 private functions by moving them into ./matlab/private/ otherwise we
 may be bound to keep them ""as users may relay on them"". basically on
 would only want functions in ./matlab that the user is expected to invoke.
 the new files should go in there for sure.. maybe toe from/to and
 NATIVE functions as they are called by mdsvalue no?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2358 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZKKPMSW6EU7GUBQXA3TY3QWHANCNFSM5AYDKLJA>.

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.*** ***@***.***>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2359,2021-07-22T09:52:44Z,2021-10-25T09:38:01Z,2021-10-25T09:39:15Z,CLOSED,False,546,6,14,https://github.com/GabrieleManduchi,Gm marte2 devices,6,[],https://github.com/MDSplus/mdsplus/pull/2359,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2359,A fix to MARTE2_COMPONENT and two new MARTe2 devices (MARTE2_NI6723 and MARTE2_NI6255),A fix to MARTE2_COMPONENT and two new MARTe2 devices (MARTE2_NI6723 and MARTE2_NI6255),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2359,2021-07-22T09:52:44Z,2021-10-25T09:38:01Z,2021-10-25T09:39:15Z,CLOSED,False,546,6,14,https://github.com/GabrieleManduchi,Gm marte2 devices,6,[],https://github.com/MDSplus/mdsplus/pull/2359,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2359#issuecomment-884827467,A fix to MARTE2_COMPONENT and two new MARTe2 devices (MARTE2_NI6723 and MARTE2_NI6255),retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2359,2021-07-22T09:52:44Z,2021-10-25T09:38:01Z,2021-10-25T09:39:15Z,CLOSED,False,546,6,14,https://github.com/GabrieleManduchi,Gm marte2 devices,6,[],https://github.com/MDSplus/mdsplus/pull/2359,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2359#issuecomment-884995991,A fix to MARTE2_COMPONENT and two new MARTe2 devices (MARTE2_NI6723 and MARTE2_NI6255),retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2359,2021-07-22T09:52:44Z,2021-10-25T09:38:01Z,2021-10-25T09:39:15Z,CLOSED,False,546,6,14,https://github.com/GabrieleManduchi,Gm marte2 devices,6,[],https://github.com/MDSplus/mdsplus/pull/2359,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2359#issuecomment-901245181,A fix to MARTE2_COMPONENT and two new MARTe2 devices (MARTE2_NI6723 and MARTE2_NI6255),so is this now dead?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2359,2021-07-22T09:52:44Z,2021-10-25T09:38:01Z,2021-10-25T09:39:15Z,CLOSED,False,546,6,14,https://github.com/GabrieleManduchi,Gm marte2 devices,6,[],https://github.com/MDSplus/mdsplus/pull/2359,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2359#issuecomment-902658271,A fix to MARTE2_COMPONENT and two new MARTe2 devices (MARTE2_NI6723 and MARTE2_NI6255),looking at the dates I would say yes,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2361,2021-08-11T23:47:26Z,2021-08-18T15:48:22Z,2021-08-18T16:02:55Z,MERGED,True,103,0,3,https://github.com/fluffynukeit,Build: Add support for nix packaging (flake),3,[],https://github.com/MDSplus/mdsplus/pull/2361,https://github.com/fluffynukeit,1,https://github.com/MDSplus/mdsplus/pull/2361,"This PR makes the mdsplus repo a nix flake by adding flake.nix and flake.lock files.
I am new to mdsplus and started going through this tutorial to get acquainted.  I saw in the mdsplus repo and MDSplus/Docker  repos that Docker is used for heavily for both building mdsplus from source as well as running mdsplus programs without building.  This approach is reasonable and is one I have tried before myself many times but have been frustrated by all the hoops to jump through with docker-compose, environment variables, mapping X11 permissions, mapping external files into the container, inscrutable command line options, and more.  My opinion is that Docker is a good fit for deploying web services to the cloud, but a poor fit for a CLI or GUI interactive ecosystem.
Nix flakes from the nix package manager are an alternative build and installation solution that some, like myself, might find more approachable or more robust in this case.  An overview of flakes is provided here.  In short, the flake provides a fully specified build and install recipe for a package and all its dependencies, and installs in a way that is isolated from the rest of the user's system.  Here is an example.
dan@dan-desktop:~$ mdstcl
mdstcl: command not found
dan@dan-desktop:~$ jTraverser
jTraverser: command not found
dan@dan-desktop:~$ export my_tree_path=$(realpath Desktop/my_tree_tutorial)
dan@dan-desktop:~$ nix shell github:fluffynukeit/mdsplus/stable
dan@dan-desktop:~$ mdstcl
TCL> set tree my_tree
TCL> dir

\MY_TREE::TOP

 :NUM1         :NUM2         :NUM3         :TXT         

  MY_SUBTREE    SUB1        

Total of 6 nodes.
TCL> exit
dan@dan-desktop:~$ jTraverser
dan@dan-desktop:~$ exit
exit
dan@dan-desktop:~$ mdstcl
mdstcl: command not found

The nix shell command will build and/or install the package and all its dependencies the first time it's called.  Most of the dependencies are cached in binary form and don't need to be built from scratch.
I don't think that the PR is ready to be taken as-is because I don't have enough experience with mdsplus to test everything or anticipate every problem.  I'm hoping this PR starts a discussion on whether this path is a viable alternative to the docker route.  I'm hoping being able to more easily build from source helps to encourage more contributions from the community.
Anticipated Issues Collected from Discussion

Mdsplus gets installed in the nix store, which is read-only.  I've only skimmed the surface of the tutorial so far, but I have seen that new TCL functions and python functions are added by putting new files into the MDSPLUS_DIR path (read only in this case).  Is there any method of adding access to the files using environment variables instead of modifying the contents of MDSPLUS_DIR?","This PR makes the mdsplus repo a nix flake by adding flake.nix and flake.lock files.
I am new to mdsplus and started going through this tutorial to get acquainted.  I saw in the mdsplus repo and MDSplus/Docker  repos that Docker is used for heavily for both building mdsplus from source as well as running mdsplus programs without building.  This approach is reasonable and is one I have tried before myself many times but have been frustrated by all the hoops to jump through with docker-compose, environment variables, mapping X11 permissions, mapping external files into the container, inscrutable command line options, and more.  My opinion is that Docker is a good fit for deploying web services to the cloud, but a poor fit for a CLI or GUI interactive ecosystem.
Nix flakes from the nix package manager are an alternative build and installation solution that some, like myself, might find more approachable or more robust in this case.  An overview of flakes is provided here.  In short, the flake provides a fully specified build and install recipe for a package and all its dependencies, and installs in a way that is isolated from the rest of the user's system.  Here is an example.
dan@dan-desktop:~$ mdstcl
mdstcl: command not found
dan@dan-desktop:~$ jTraverser
jTraverser: command not found
dan@dan-desktop:~$ export my_tree_path=$(realpath Desktop/my_tree_tutorial)
dan@dan-desktop:~$ nix shell github:fluffynukeit/mdsplus/stable
dan@dan-desktop:~$ mdstcl
TCL> set tree my_tree
TCL> dir

\MY_TREE::TOP

 :NUM1         :NUM2         :NUM3         :TXT         

  MY_SUBTREE    SUB1        

Total of 6 nodes.
TCL> exit
dan@dan-desktop:~$ jTraverser
dan@dan-desktop:~$ exit
exit
dan@dan-desktop:~$ mdstcl
mdstcl: command not found

The nix shell command will build and/or install the package and all its dependencies the first time it's called.  Most of the dependencies are cached in binary form and don't need to be built from scratch.
I don't think that the PR is ready to be taken as-is because I don't have enough experience with mdsplus to test everything or anticipate every problem.  I'm hoping this PR starts a discussion on whether this path is a viable alternative to the docker route.  I'm hoping being able to more easily build from source helps to encourage more contributions from the community.
Anticipated Issues Collected from Discussion

Mdsplus gets installed in the nix store, which is read-only.  I've only skimmed the surface of the tutorial so far, but I have seen that new TCL functions and python functions are added by putting new files into the MDSPLUS_DIR path (read only in this case).  Is there any method of adding access to the files using environment variables instead of modifying the contents of MDSPLUS_DIR?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2361,2021-08-11T23:47:26Z,2021-08-18T15:48:22Z,2021-08-18T16:02:55Z,MERGED,True,103,0,3,https://github.com/fluffynukeit,Build: Add support for nix packaging (flake),3,[],https://github.com/MDSplus/mdsplus/pull/2361,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2361#issuecomment-897700265,"This PR makes the mdsplus repo a nix flake by adding flake.nix and flake.lock files.
I am new to mdsplus and started going through this tutorial to get acquainted.  I saw in the mdsplus repo and MDSplus/Docker  repos that Docker is used for heavily for both building mdsplus from source as well as running mdsplus programs without building.  This approach is reasonable and is one I have tried before myself many times but have been frustrated by all the hoops to jump through with docker-compose, environment variables, mapping X11 permissions, mapping external files into the container, inscrutable command line options, and more.  My opinion is that Docker is a good fit for deploying web services to the cloud, but a poor fit for a CLI or GUI interactive ecosystem.
Nix flakes from the nix package manager are an alternative build and installation solution that some, like myself, might find more approachable or more robust in this case.  An overview of flakes is provided here.  In short, the flake provides a fully specified build and install recipe for a package and all its dependencies, and installs in a way that is isolated from the rest of the user's system.  Here is an example.
dan@dan-desktop:~$ mdstcl
mdstcl: command not found
dan@dan-desktop:~$ jTraverser
jTraverser: command not found
dan@dan-desktop:~$ export my_tree_path=$(realpath Desktop/my_tree_tutorial)
dan@dan-desktop:~$ nix shell github:fluffynukeit/mdsplus/stable
dan@dan-desktop:~$ mdstcl
TCL> set tree my_tree
TCL> dir

\MY_TREE::TOP

 :NUM1         :NUM2         :NUM3         :TXT         

  MY_SUBTREE    SUB1        

Total of 6 nodes.
TCL> exit
dan@dan-desktop:~$ jTraverser
dan@dan-desktop:~$ exit
exit
dan@dan-desktop:~$ mdstcl
mdstcl: command not found

The nix shell command will build and/or install the package and all its dependencies the first time it's called.  Most of the dependencies are cached in binary form and don't need to be built from scratch.
I don't think that the PR is ready to be taken as-is because I don't have enough experience with mdsplus to test everything or anticipate every problem.  I'm hoping this PR starts a discussion on whether this path is a viable alternative to the docker route.  I'm hoping being able to more easily build from source helps to encourage more contributions from the community.
Anticipated Issues Collected from Discussion

Mdsplus gets installed in the nix store, which is read-only.  I've only skimmed the surface of the tutorial so far, but I have seen that new TCL functions and python functions are added by putting new files into the MDSPLUS_DIR path (read only in this case).  Is there any method of adding access to the files using environment variables instead of modifying the contents of MDSPLUS_DIR?","Daniel -
  Thank you for your PR.  I had never heard of the nix distribution. Until we can set up a docker to build and test the install, I think the right place for this would be in the User Contrib section of mdsplus.org <http://mdsplus.org/>.  There is a downloads page: https://www.mdsplus.org/index.php?title=User_Contrib:downloads&open=60654047435862686302239&page=User+Contrib.%2FDownloads <https://www.mdsplus.org/index.php?title=User_Contrib:downloads&open=60654047435862686302239&page=User+Contrib./Downloads> that it could be added to.

I defer to the rest of the MDSplus core developers if they think otherwise.  Did you build for nix or just create the packaging from one of our installation platforms?

Where are you from?  What are you working on?  You are welcome to join the MDSplus development effort, or just become a contributor to www.mdsplus.org <http://www.mdsplus.org/>. I think there is a button that says, ask for an account.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2361,2021-08-11T23:47:26Z,2021-08-18T15:48:22Z,2021-08-18T16:02:55Z,MERGED,True,103,0,3,https://github.com/fluffynukeit,Build: Add support for nix packaging (flake),3,[],https://github.com/MDSplus/mdsplus/pull/2361,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2361#issuecomment-897787457,"This PR makes the mdsplus repo a nix flake by adding flake.nix and flake.lock files.
I am new to mdsplus and started going through this tutorial to get acquainted.  I saw in the mdsplus repo and MDSplus/Docker  repos that Docker is used for heavily for both building mdsplus from source as well as running mdsplus programs without building.  This approach is reasonable and is one I have tried before myself many times but have been frustrated by all the hoops to jump through with docker-compose, environment variables, mapping X11 permissions, mapping external files into the container, inscrutable command line options, and more.  My opinion is that Docker is a good fit for deploying web services to the cloud, but a poor fit for a CLI or GUI interactive ecosystem.
Nix flakes from the nix package manager are an alternative build and installation solution that some, like myself, might find more approachable or more robust in this case.  An overview of flakes is provided here.  In short, the flake provides a fully specified build and install recipe for a package and all its dependencies, and installs in a way that is isolated from the rest of the user's system.  Here is an example.
dan@dan-desktop:~$ mdstcl
mdstcl: command not found
dan@dan-desktop:~$ jTraverser
jTraverser: command not found
dan@dan-desktop:~$ export my_tree_path=$(realpath Desktop/my_tree_tutorial)
dan@dan-desktop:~$ nix shell github:fluffynukeit/mdsplus/stable
dan@dan-desktop:~$ mdstcl
TCL> set tree my_tree
TCL> dir

\MY_TREE::TOP

 :NUM1         :NUM2         :NUM3         :TXT         

  MY_SUBTREE    SUB1        

Total of 6 nodes.
TCL> exit
dan@dan-desktop:~$ jTraverser
dan@dan-desktop:~$ exit
exit
dan@dan-desktop:~$ mdstcl
mdstcl: command not found

The nix shell command will build and/or install the package and all its dependencies the first time it's called.  Most of the dependencies are cached in binary form and don't need to be built from scratch.
I don't think that the PR is ready to be taken as-is because I don't have enough experience with mdsplus to test everything or anticipate every problem.  I'm hoping this PR starts a discussion on whether this path is a viable alternative to the docker route.  I'm hoping being able to more easily build from source helps to encourage more contributions from the community.
Anticipated Issues Collected from Discussion

Mdsplus gets installed in the nix store, which is read-only.  I've only skimmed the surface of the tutorial so far, but I have seen that new TCL functions and python functions are added by putting new files into the MDSPLUS_DIR path (read only in this case).  Is there any method of adding access to the files using environment variables instead of modifying the contents of MDSPLUS_DIR?","Sorry I read further down in your PR and have a few more answers for you:

you should not need to write to /usr/local/mdsplus ($MDSPLUS_DIR) with the possible exception of /usr/local/mdsplus/local. which is left undisturbed during updates
MDSplus looks for extensions to the TDI interpreter in a list of places specified by the ';' delimited list in the environment variable MDS_PATH.  For example we use:

jas@mfews03:~$ echo $MDS_PATH 
/usr/local/cmod/tdi;/usr/local/mdsplus/tdi


MDSplus looks for additional device method code in MDS_PYDEVICE_PATH .  I believe this is also ; delimitied.  Ours only has one element:

jas@mfews03:~$ echo $MDS_PYDEVICE_PATH 
/usr/local/mdsplus/pydevices


There is also $MDSMSG_PATH I don't know off the top of my head how this is used, it currently points to  '/usr/local/mdsplus/lib', so it is probably a place to look for shared image to find error messages in.
I apologize again for the piecemeal response, We will more fully read and digest your PR as soon as we have time.
-Josh",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2361,2021-08-11T23:47:26Z,2021-08-18T15:48:22Z,2021-08-18T16:02:55Z,MERGED,True,103,0,3,https://github.com/fluffynukeit,Build: Add support for nix packaging (flake),3,[],https://github.com/MDSplus/mdsplus/pull/2361,https://github.com/fluffynukeit,4,https://github.com/MDSplus/mdsplus/pull/2361#issuecomment-897896252,"This PR makes the mdsplus repo a nix flake by adding flake.nix and flake.lock files.
I am new to mdsplus and started going through this tutorial to get acquainted.  I saw in the mdsplus repo and MDSplus/Docker  repos that Docker is used for heavily for both building mdsplus from source as well as running mdsplus programs without building.  This approach is reasonable and is one I have tried before myself many times but have been frustrated by all the hoops to jump through with docker-compose, environment variables, mapping X11 permissions, mapping external files into the container, inscrutable command line options, and more.  My opinion is that Docker is a good fit for deploying web services to the cloud, but a poor fit for a CLI or GUI interactive ecosystem.
Nix flakes from the nix package manager are an alternative build and installation solution that some, like myself, might find more approachable or more robust in this case.  An overview of flakes is provided here.  In short, the flake provides a fully specified build and install recipe for a package and all its dependencies, and installs in a way that is isolated from the rest of the user's system.  Here is an example.
dan@dan-desktop:~$ mdstcl
mdstcl: command not found
dan@dan-desktop:~$ jTraverser
jTraverser: command not found
dan@dan-desktop:~$ export my_tree_path=$(realpath Desktop/my_tree_tutorial)
dan@dan-desktop:~$ nix shell github:fluffynukeit/mdsplus/stable
dan@dan-desktop:~$ mdstcl
TCL> set tree my_tree
TCL> dir

\MY_TREE::TOP

 :NUM1         :NUM2         :NUM3         :TXT         

  MY_SUBTREE    SUB1        

Total of 6 nodes.
TCL> exit
dan@dan-desktop:~$ jTraverser
dan@dan-desktop:~$ exit
exit
dan@dan-desktop:~$ mdstcl
mdstcl: command not found

The nix shell command will build and/or install the package and all its dependencies the first time it's called.  Most of the dependencies are cached in binary form and don't need to be built from scratch.
I don't think that the PR is ready to be taken as-is because I don't have enough experience with mdsplus to test everything or anticipate every problem.  I'm hoping this PR starts a discussion on whether this path is a viable alternative to the docker route.  I'm hoping being able to more easily build from source helps to encourage more contributions from the community.
Anticipated Issues Collected from Discussion

Mdsplus gets installed in the nix store, which is read-only.  I've only skimmed the surface of the tutorial so far, but I have seen that new TCL functions and python functions are added by putting new files into the MDSPLUS_DIR path (read only in this case).  Is there any method of adding access to the files using environment variables instead of modifying the contents of MDSPLUS_DIR?","@joshStillerman , thanks for your responses.  I do want to clarify that nix is a package manager available for any Linux distribution.  For instance, I am running nix on Ubuntu 20.04.  There is a related effort, NixOS, that is a Linux distribution that extends the philosophy of the nix package manager to the entire system, not just installed package management, but NixOS is not needed to install packages with nix.
In creating the nix ""derivation"" (their word for ""build recipe""), I did not use docker at all or make any assumptions about a particular Linux distribution.  Like docker, nix derivations allow software to be installed and run in a manner that is isolated from the rest of the host system, packaged with all its dependencies.  It differs in the manner in which isolation is achieved, though, which has nice consequences for the user experience for CLI and GUI interfaces, IMO.  In short, I expect that any Linux host computer with nix installed (and nix flake support enabled) could run the commands I gave and be similarly successful as I was.
I am from WA state and am joining the Zap Energy Inc startup next week.  Part of my responsibilities will include managing mdsplus.  I stared to dig into it but kept running in to an all-too-familiar friction with docker, so I gave the nix route a try and got it working, at least to my limited experience so far.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2361,2021-08-11T23:47:26Z,2021-08-18T15:48:22Z,2021-08-18T16:02:55Z,MERGED,True,103,0,3,https://github.com/fluffynukeit,Build: Add support for nix packaging (flake),3,[],https://github.com/MDSplus/mdsplus/pull/2361,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2361#issuecomment-901225693,"This PR makes the mdsplus repo a nix flake by adding flake.nix and flake.lock files.
I am new to mdsplus and started going through this tutorial to get acquainted.  I saw in the mdsplus repo and MDSplus/Docker  repos that Docker is used for heavily for both building mdsplus from source as well as running mdsplus programs without building.  This approach is reasonable and is one I have tried before myself many times but have been frustrated by all the hoops to jump through with docker-compose, environment variables, mapping X11 permissions, mapping external files into the container, inscrutable command line options, and more.  My opinion is that Docker is a good fit for deploying web services to the cloud, but a poor fit for a CLI or GUI interactive ecosystem.
Nix flakes from the nix package manager are an alternative build and installation solution that some, like myself, might find more approachable or more robust in this case.  An overview of flakes is provided here.  In short, the flake provides a fully specified build and install recipe for a package and all its dependencies, and installs in a way that is isolated from the rest of the user's system.  Here is an example.
dan@dan-desktop:~$ mdstcl
mdstcl: command not found
dan@dan-desktop:~$ jTraverser
jTraverser: command not found
dan@dan-desktop:~$ export my_tree_path=$(realpath Desktop/my_tree_tutorial)
dan@dan-desktop:~$ nix shell github:fluffynukeit/mdsplus/stable
dan@dan-desktop:~$ mdstcl
TCL> set tree my_tree
TCL> dir

\MY_TREE::TOP

 :NUM1         :NUM2         :NUM3         :TXT         

  MY_SUBTREE    SUB1        

Total of 6 nodes.
TCL> exit
dan@dan-desktop:~$ jTraverser
dan@dan-desktop:~$ exit
exit
dan@dan-desktop:~$ mdstcl
mdstcl: command not found

The nix shell command will build and/or install the package and all its dependencies the first time it's called.  Most of the dependencies are cached in binary form and don't need to be built from scratch.
I don't think that the PR is ready to be taken as-is because I don't have enough experience with mdsplus to test everything or anticipate every problem.  I'm hoping this PR starts a discussion on whether this path is a viable alternative to the docker route.  I'm hoping being able to more easily build from source helps to encourage more contributions from the community.
Anticipated Issues Collected from Discussion

Mdsplus gets installed in the nix store, which is read-only.  I've only skimmed the surface of the tutorial so far, but I have seen that new TCL functions and python functions are added by putting new files into the MDSPLUS_DIR path (read only in this case).  Is there any method of adding access to the files using environment variables instead of modifying the contents of MDSPLUS_DIR?",seems to be a thing then.. we have now way to test it though.. please report back if you are satisfied with the results,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2361,2021-08-11T23:47:26Z,2021-08-18T15:48:22Z,2021-08-18T16:02:55Z,MERGED,True,103,0,3,https://github.com/fluffynukeit,Build: Add support for nix packaging (flake),3,[],https://github.com/MDSplus/mdsplus/pull/2361,https://github.com/fluffynukeit,6,https://github.com/MDSplus/mdsplus/pull/2361#issuecomment-901234402,"This PR makes the mdsplus repo a nix flake by adding flake.nix and flake.lock files.
I am new to mdsplus and started going through this tutorial to get acquainted.  I saw in the mdsplus repo and MDSplus/Docker  repos that Docker is used for heavily for both building mdsplus from source as well as running mdsplus programs without building.  This approach is reasonable and is one I have tried before myself many times but have been frustrated by all the hoops to jump through with docker-compose, environment variables, mapping X11 permissions, mapping external files into the container, inscrutable command line options, and more.  My opinion is that Docker is a good fit for deploying web services to the cloud, but a poor fit for a CLI or GUI interactive ecosystem.
Nix flakes from the nix package manager are an alternative build and installation solution that some, like myself, might find more approachable or more robust in this case.  An overview of flakes is provided here.  In short, the flake provides a fully specified build and install recipe for a package and all its dependencies, and installs in a way that is isolated from the rest of the user's system.  Here is an example.
dan@dan-desktop:~$ mdstcl
mdstcl: command not found
dan@dan-desktop:~$ jTraverser
jTraverser: command not found
dan@dan-desktop:~$ export my_tree_path=$(realpath Desktop/my_tree_tutorial)
dan@dan-desktop:~$ nix shell github:fluffynukeit/mdsplus/stable
dan@dan-desktop:~$ mdstcl
TCL> set tree my_tree
TCL> dir

\MY_TREE::TOP

 :NUM1         :NUM2         :NUM3         :TXT         

  MY_SUBTREE    SUB1        

Total of 6 nodes.
TCL> exit
dan@dan-desktop:~$ jTraverser
dan@dan-desktop:~$ exit
exit
dan@dan-desktop:~$ mdstcl
mdstcl: command not found

The nix shell command will build and/or install the package and all its dependencies the first time it's called.  Most of the dependencies are cached in binary form and don't need to be built from scratch.
I don't think that the PR is ready to be taken as-is because I don't have enough experience with mdsplus to test everything or anticipate every problem.  I'm hoping this PR starts a discussion on whether this path is a viable alternative to the docker route.  I'm hoping being able to more easily build from source helps to encourage more contributions from the community.
Anticipated Issues Collected from Discussion

Mdsplus gets installed in the nix store, which is read-only.  I've only skimmed the surface of the tutorial so far, but I have seen that new TCL functions and python functions are added by putting new files into the MDSPLUS_DIR path (read only in this case).  Is there any method of adding access to the files using environment variables instead of modifying the contents of MDSPLUS_DIR?",I do have some additional updates in the works that will make it more robust.  I also have to put it through the paces a bit more.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2361,2021-08-11T23:47:26Z,2021-08-18T15:48:22Z,2021-08-18T16:02:55Z,MERGED,True,103,0,3,https://github.com/fluffynukeit,Build: Add support for nix packaging (flake),3,[],https://github.com/MDSplus/mdsplus/pull/2361,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2361#issuecomment-901236760,"This PR makes the mdsplus repo a nix flake by adding flake.nix and flake.lock files.
I am new to mdsplus and started going through this tutorial to get acquainted.  I saw in the mdsplus repo and MDSplus/Docker  repos that Docker is used for heavily for both building mdsplus from source as well as running mdsplus programs without building.  This approach is reasonable and is one I have tried before myself many times but have been frustrated by all the hoops to jump through with docker-compose, environment variables, mapping X11 permissions, mapping external files into the container, inscrutable command line options, and more.  My opinion is that Docker is a good fit for deploying web services to the cloud, but a poor fit for a CLI or GUI interactive ecosystem.
Nix flakes from the nix package manager are an alternative build and installation solution that some, like myself, might find more approachable or more robust in this case.  An overview of flakes is provided here.  In short, the flake provides a fully specified build and install recipe for a package and all its dependencies, and installs in a way that is isolated from the rest of the user's system.  Here is an example.
dan@dan-desktop:~$ mdstcl
mdstcl: command not found
dan@dan-desktop:~$ jTraverser
jTraverser: command not found
dan@dan-desktop:~$ export my_tree_path=$(realpath Desktop/my_tree_tutorial)
dan@dan-desktop:~$ nix shell github:fluffynukeit/mdsplus/stable
dan@dan-desktop:~$ mdstcl
TCL> set tree my_tree
TCL> dir

\MY_TREE::TOP

 :NUM1         :NUM2         :NUM3         :TXT         

  MY_SUBTREE    SUB1        

Total of 6 nodes.
TCL> exit
dan@dan-desktop:~$ jTraverser
dan@dan-desktop:~$ exit
exit
dan@dan-desktop:~$ mdstcl
mdstcl: command not found

The nix shell command will build and/or install the package and all its dependencies the first time it's called.  Most of the dependencies are cached in binary form and don't need to be built from scratch.
I don't think that the PR is ready to be taken as-is because I don't have enough experience with mdsplus to test everything or anticipate every problem.  I'm hoping this PR starts a discussion on whether this path is a viable alternative to the docker route.  I'm hoping being able to more easily build from source helps to encourage more contributions from the community.
Anticipated Issues Collected from Discussion

Mdsplus gets installed in the nix store, which is read-only.  I've only skimmed the surface of the tutorial so far, but I have seen that new TCL functions and python functions are added by putting new files into the MDSPLUS_DIR path (read only in this case).  Is there any method of adding access to the files using environment variables instead of modifying the contents of MDSPLUS_DIR?",great .. can you this time branch of alpha please. =) i will leave it in for now. feel free to open a new PR with you improvements when you are ready,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2364,2021-08-18T09:47:23Z,2021-08-18T11:21:23Z,2021-08-18T11:21:24Z,MERGED,True,5,12,1,https://github.com/zack-vii,Fix: extra free in execute_message,1,[],https://github.com/MDSplus/mdsplus/pull/2364,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2364,fixes: #2363 and is the server is updated #2340,fixes: #2363 and is the server is updated #2340,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2364,2021-08-18T09:47:23Z,2021-08-18T11:21:23Z,2021-08-18T11:21:24Z,MERGED,True,5,12,1,https://github.com/zack-vii,Fix: extra free in execute_message,1,[],https://github.com/MDSplus/mdsplus/pull/2364,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2364#issuecomment-901006768,fixes: #2363 and is the server is updated #2340,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2364,2021-08-18T09:47:23Z,2021-08-18T11:21:23Z,2021-08-18T11:21:24Z,MERGED,True,5,12,1,https://github.com/zack-vii,Fix: extra free in execute_message,1,[],https://github.com/MDSplus/mdsplus/pull/2364,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2364#issuecomment-901032411,fixes: #2363 and is the server is updated #2340,memcheck shows one leak which is most definetly not related to this PR,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2365,2021-08-18T13:20:42Z,2021-08-18T15:19:44Z,2021-08-18T15:19:45Z,MERGED,True,477,523,27,https://github.com/zack-vii,Fix: matlab support for 2021a; removed deprecated stuff,2,[],https://github.com/MDSplus/mdsplus/pull/2365,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2365,"fixes #2357, replaces #2358","fixes #2357, replaces #2358",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2365,2021-08-18T13:20:42Z,2021-08-18T15:19:44Z,2021-08-18T15:19:45Z,MERGED,True,477,523,27,https://github.com/zack-vii,Fix: matlab support for 2021a; removed deprecated stuff,2,[],https://github.com/MDSplus/mdsplus/pull/2365,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2365#issuecomment-901127770,"fixes #2357, replaces #2358","tested it without python:

mdstest(0) - passes, i.e. returns logical 1
mdstest(1) - prints error and switches to java bridge which passes


tested it with python:

mdstest(0) - passes
mdstest(1) - passes



all as expected",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2366,2021-08-18T14:37:51Z,2021-08-18T15:19:26Z,2021-08-18T15:19:26Z,MERGED,True,28,22,1,https://github.com/zack-vii,Build: python use setuptool as default,1,[],https://github.com/MDSplus/mdsplus/pull/2366,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2366,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2367,2021-08-18T16:28:53Z,2021-08-26T10:15:48Z,2021-08-26T10:15:48Z,MERGED,True,4,4,3,https://github.com/morgak,"Fix: camshr, for case when scsi host is > 9 and scsi linux device > 7",1,[],https://github.com/MDSplus/mdsplus/pull/2367,https://github.com/morgak,1,https://github.com/MDSplus/mdsplus/pull/2367,"Recently got a new dataserver connected to a CAMAC system.  The disk system on this dataserver uses the first 8 SCSI hosts/devices, these changes allow for higher-valued SCSI host numbers to work.
3 small changes:
1 - updated Makefile.in dependencies related to building camshr.
2 - In camshr/QueryHighwayType.c, allowed it to recognize SCSI host IDs with more than 1 digit (in my case, SCSI host for the controller is 14)
3 - In camshr/parse_crate_db.c, switched the strtol base to 10.  Base 0 incorrectly reads the device number (/dev/sgN) when N is greater than 7. (in crate.db it is written as a 3-digit number, the leading 0 becomes a problem).
Thanks,
Kyle Morgan (University of Washington)","Recently got a new dataserver connected to a CAMAC system.  The disk system on this dataserver uses the first 8 SCSI hosts/devices, these changes allow for higher-valued SCSI host numbers to work.
3 small changes:
1 - updated Makefile.in dependencies related to building camshr.
2 - In camshr/QueryHighwayType.c, allowed it to recognize SCSI host IDs with more than 1 digit (in my case, SCSI host for the controller is 14)
3 - In camshr/parse_crate_db.c, switched the strtol base to 10.  Base 0 incorrectly reads the device number (/dev/sgN) when N is greater than 7. (in crate.db it is written as a 3-digit number, the leading 0 becomes a problem).
Thanks,
Kyle Morgan (University of Washington)",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2367,2021-08-18T16:28:53Z,2021-08-26T10:15:48Z,2021-08-26T10:15:48Z,MERGED,True,4,4,3,https://github.com/morgak,"Fix: camshr, for case when scsi host is > 9 and scsi linux device > 7",1,[],https://github.com/MDSplus/mdsplus/pull/2367,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2367#issuecomment-901258291,"Recently got a new dataserver connected to a CAMAC system.  The disk system on this dataserver uses the first 8 SCSI hosts/devices, these changes allow for higher-valued SCSI host numbers to work.
3 small changes:
1 - updated Makefile.in dependencies related to building camshr.
2 - In camshr/QueryHighwayType.c, allowed it to recognize SCSI host IDs with more than 1 digit (in my case, SCSI host for the controller is 14)
3 - In camshr/parse_crate_db.c, switched the strtol base to 10.  Base 0 incorrectly reads the device number (/dev/sgN) when N is greater than 7. (in crate.db it is written as a 3-digit number, the leading 0 becomes a problem).
Thanks,
Kyle Morgan (University of Washington)","looks good, great someone used camshr.. we made some general changes and i was wondering if the driver still works. thanks for fixing the makefile and improving it, ok to test",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2367,2021-08-18T16:28:53Z,2021-08-26T10:15:48Z,2021-08-26T10:15:48Z,MERGED,True,4,4,3,https://github.com/morgak,"Fix: camshr, for case when scsi host is > 9 and scsi linux device > 7",1,[],https://github.com/MDSplus/mdsplus/pull/2367,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2367#issuecomment-906152585,"Recently got a new dataserver connected to a CAMAC system.  The disk system on this dataserver uses the first 8 SCSI hosts/devices, these changes allow for higher-valued SCSI host numbers to work.
3 small changes:
1 - updated Makefile.in dependencies related to building camshr.
2 - In camshr/QueryHighwayType.c, allowed it to recognize SCSI host IDs with more than 1 digit (in my case, SCSI host for the controller is 14)
3 - In camshr/parse_crate_db.c, switched the strtol base to 10.  Base 0 incorrectly reads the device number (/dev/sgN) when N is greater than 7. (in crate.db it is written as a 3-digit number, the leading 0 becomes a problem).
Thanks,
Kyle Morgan (University of Washington)",test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2369,2021-08-18T20:44:47Z,2021-08-18T21:36:06Z,2021-08-18T21:36:07Z,MERGED,True,497,409,17,https://github.com/zack-vii,"Fix: python exceptions, pep, and fixed bytes_list",1,[],https://github.com/MDSplus/mdsplus/pull/2369,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2369,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2369,2021-08-18T20:44:47Z,2021-08-18T21:36:06Z,2021-08-18T21:36:07Z,MERGED,True,497,409,17,https://github.com/zack-vii,"Fix: python exceptions, pep, and fixed bytes_list",1,[],https://github.com/MDSplus/mdsplus/pull/2369,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2369#issuecomment-901430891,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2371,2021-08-24T14:25:28Z,2021-08-26T23:19:13Z,2021-08-27T06:25:43Z,MERGED,True,70880,53323,44,https://github.com/GabrieleManduchi,Gm tree thread,19,[],https://github.com/MDSplus/mdsplus/pull/2371,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2371,A bunch of fixes required because of the recnt chantge in distributed client requesting every thread to open its own tree,A bunch of fixes required because of the recnt chantge in distributed client requesting every thread to open its own tree,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2371,2021-08-24T14:25:28Z,2021-08-26T23:19:13Z,2021-08-27T06:25:43Z,MERGED,True,70880,53323,44,https://github.com/GabrieleManduchi,Gm tree thread,19,[],https://github.com/MDSplus/mdsplus/pull/2371,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2371#issuecomment-906378361,A bunch of fixes required because of the recnt chantge in distributed client requesting every thread to open its own tree,"test failed because of an external issue
{
   python dl leak
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   obj:/usr/lib64/python3.8/lib-dynload
}",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2371,2021-08-24T14:25:28Z,2021-08-26T23:19:13Z,2021-08-27T06:25:43Z,MERGED,True,70880,53323,44,https://github.com/GabrieleManduchi,Gm tree thread,19,[],https://github.com/MDSplus/mdsplus/pull/2371,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2371#issuecomment-906388587,A bunch of fixes required because of the recnt chantge in distributed client requesting every thread to open its own tree,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2371,2021-08-24T14:25:28Z,2021-08-26T23:19:13Z,2021-08-27T06:25:43Z,MERGED,True,70880,53323,44,https://github.com/GabrieleManduchi,Gm tree thread,19,[],https://github.com/MDSplus/mdsplus/pull/2371,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2371#issuecomment-906806411,A bunch of fixes required because of the recnt chantge in distributed client requesting every thread to open its own tree,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2371,2021-08-24T14:25:28Z,2021-08-26T23:19:13Z,2021-08-27T06:25:43Z,MERGED,True,70880,53323,44,https://github.com/GabrieleManduchi,Gm tree thread,19,[],https://github.com/MDSplus/mdsplus/pull/2371,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2371#issuecomment-906957969,A bunch of fixes required because of the recnt chantge in distributed client requesting every thread to open its own tree,Thanks Timo,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2373,2021-08-25T09:05:49Z,2021-08-26T09:33:50Z,2021-08-26T09:33:51Z,MERGED,True,3,3,1,https://github.com/zack-vii,Fix: mdsmisc GetXYSignalXd() invalid free xd on error,1,[],https://github.com/MDSplus/mdsplus/pull/2373,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2373,"should fix #2372 :  uninitialized title, xlabel, ylabel on error.","should fix #2372 :  uninitialized title, xlabel, ylabel on error.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2373,2021-08-25T09:05:49Z,2021-08-26T09:33:50Z,2021-08-26T09:33:51Z,MERGED,True,3,3,1,https://github.com/zack-vii,Fix: mdsmisc GetXYSignalXd() invalid free xd on error,1,[],https://github.com/MDSplus/mdsplus/pull/2373,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2373#issuecomment-905322633,"should fix #2372 :  uninitialized title, xlabel, ylabel on error.","@GabrieleManduchi: you think this could be tested .. maybe using the python getSignalXY ,, would not help here though as we test with O0 ... unless asan and co.? might be worth adding a test a some point.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2373,2021-08-25T09:05:49Z,2021-08-26T09:33:50Z,2021-08-26T09:33:51Z,MERGED,True,3,3,1,https://github.com/zack-vii,Fix: mdsmisc GetXYSignalXd() invalid free xd on error,1,[],https://github.com/MDSplus/mdsplus/pull/2373,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2373#issuecomment-906225898,"should fix #2372 :  uninitialized title, xlabel, ylabel on error.",Why only changing the place where EMPTYXD are defined should solve the issue?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2373,2021-08-25T09:05:49Z,2021-08-26T09:33:50Z,2021-08-26T09:33:51Z,MERGED,True,3,3,1,https://github.com/zack-vii,Fix: mdsmisc GetXYSignalXd() invalid free xd on error,1,[],https://github.com/MDSplus/mdsplus/pull/2373,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2373#issuecomment-906234399,"should fix #2372 :  uninitialized title, xlabel, ylabel on error.",because this method uses the disencouraged goto statement. the variables are in scope but a previous goto can skip the initialization. as a consequence the pointer may not be null when it should. a better way would be to encapsulate the body into a static function and use return value to indecate the errorstate and ensure the cleanup in the calling function. feel free to improve it.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2373,2021-08-25T09:05:49Z,2021-08-26T09:33:50Z,2021-08-26T09:33:51Z,MERGED,True,3,3,1,https://github.com/zack-vii,Fix: mdsmisc GetXYSignalXd() invalid free xd on error,1,[],https://github.com/MDSplus/mdsplus/pull/2373,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2373#issuecomment-906248437,"should fix #2372 :  uninitialized title, xlabel, ylabel on error.","Ok, thanks, for the moment let's proceed in this way",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2376,2021-08-25T23:38:38Z,2021-08-26T13:58:25Z,2021-08-26T13:58:25Z,MERGED,True,65,122,1,https://github.com/zack-vii,"Fix: python setup, setupkw",1,[],https://github.com/MDSplus/mdsplus/pull/2376,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2376,should resolve issue #2374,should resolve issue #2374,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2378,2021-08-26T14:05:59Z,2021-08-30T13:44:20Z,2021-10-18T18:57:11Z,CLOSED,False,16,2,3,https://github.com/joshStillerman,Fix: on some systems UIDs are > 16 bits,1,[],https://github.com/MDSplus/mdsplus/pull/2378,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2378,"On systems using active directory uids can be constructed from
AD SIDs and may have bits in their high word set.  This PR
addresses #2375
If their are bits set in the high word of the UID then do not or in
the group.
When displaying in TCL, if the the low 16 bits of the owner do not
translate to a user, then try to translate all 32 bits to an owner","On systems using active directory uids can be constructed from
AD SIDs and may have bits in their high word set.  This PR
addresses #2375
If their are bits set in the high word of the UID then do not or in
the group.
When displaying in TCL, if the the low 16 bits of the owner do not
translate to a user, then try to translate all 32 bits to an owner",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2378,2021-08-26T14:05:59Z,2021-08-30T13:44:20Z,2021-10-18T18:57:11Z,CLOSED,False,16,2,3,https://github.com/joshStillerman,Fix: on some systems UIDs are > 16 bits,1,[],https://github.com/MDSplus/mdsplus/pull/2378,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2378#issuecomment-906487212,"On systems using active directory uids can be constructed from
AD SIDs and may have bits in their high word set.  This PR
addresses #2375
If their are bits set in the high word of the UID then do not or in
the group.
When displaying in TCL, if the the low 16 bits of the owner do not
translate to a user, then try to translate all 32 bits to an owner","Address sanitizer failing in tditest/mdsip0
DoMessage calls GetMdsMsgTOC which allocates the returned message.  The macro FREE_IF calls pthread_cleanup_pop which only executes the cleanup if there is a message.
It is not clear the malloc of the message in GetMdsMsgTOC would be cleaned up if the thread cleanup was executed, and it seems that FREE_IF does not do anything with its 1st argument, so does not care if the message was allocated.
This ASAN error should be unrelated to the PR in question.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2378,2021-08-26T14:05:59Z,2021-08-30T13:44:20Z,2021-10-18T18:57:11Z,CLOSED,False,16,2,3,https://github.com/joshStillerman,Fix: on some systems UIDs are > 16 bits,1,[],https://github.com/MDSplus/mdsplus/pull/2378,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2378#issuecomment-906507404,"On systems using active directory uids can be constructed from
AD SIDs and may have bits in their high word set.  This PR
addresses #2375
If their are bits set in the high word of the UID then do not or in
the group.
When displaying in TCL, if the the low 16 bits of the owner do not
translate to a user, then try to translate all 32 bits to an owner","yes it should be unrelated. i dont now how thois cpuld bbe fixed,. the cleanup should be executed if the execution doed not pass by FREE_IF in the regular way, purpose of the pthread cleanup (?) i am on vacation atm.. when i aam back i can dig a bit deeper into this.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2378,2021-08-26T14:05:59Z,2021-08-30T13:44:20Z,2021-10-18T18:57:11Z,CLOSED,False,16,2,3,https://github.com/joshStillerman,Fix: on some systems UIDs are > 16 bits,1,[],https://github.com/MDSplus/mdsplus/pull/2378,https://github.com/zack-vii,4,https://github.com/MDSplus/mdsplus/pull/2378#issuecomment-906507764,"On systems using active directory uids can be constructed from
AD SIDs and may have bits in their high word set.  This PR
addresses #2375
If their are bits set in the high word of the UID then do not or in
the group.
When displaying in TCL, if the the low 16 bits of the owner do not
translate to a user, then try to translate all 32 bits to an owner",test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2378,2021-08-26T14:05:59Z,2021-08-30T13:44:20Z,2021-10-18T18:57:11Z,CLOSED,False,16,2,3,https://github.com/joshStillerman,Fix: on some systems UIDs are > 16 bits,1,[],https://github.com/MDSplus/mdsplus/pull/2378,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2378#issuecomment-906708237,"On systems using active directory uids can be constructed from
AD SIDs and may have bits in their high word set.  This PR
addresses #2375
If their are bits set in the high word of the UID then do not or in
the group.
When displaying in TCL, if the the low 16 bits of the owner do not
translate to a user, then try to translate all 32 bits to an owner","How about we set a free bit in flags2 of the nci e.g. NciM_32BIT_UID_NCI 0x80
#define NciM_DATA_IN_ATT_BLOCK 0x01
#define NciV_DATA_IN_ATT_BLOCK 0
#define NciM_ERROR_ON_PUT 0x02
#define NciV_ERROR_ON_PUT 1
#define NciM_DATA_CONTIGUOUS 0x04
#define NciV_DATA_CONTIGUOUS 2
#define NciM_NON_VMS 0x08
#define NciV_NON_VMS 3
#define NciM_EXTENDED_NCI 0x10
#define NciV_EXTENDED_NCI 4
#define NciM_32BIT_UID_NCI 0x20
#define NciV_32BIT_UID_NCI 5
if the uid has high bits the flag will be set nad gid will be dropped. otherwise the bit is cleared and gid is attached. reading the uid is according to the flag. if user or group is not found it must have been deleted.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2378,2021-08-26T14:05:59Z,2021-08-30T13:44:20Z,2021-10-18T18:57:11Z,CLOSED,False,16,2,3,https://github.com/joshStillerman,Fix: on some systems UIDs are > 16 bits,1,[],https://github.com/MDSplus/mdsplus/pull/2378,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2378#issuecomment-906718501,"On systems using active directory uids can be constructed from
AD SIDs and may have bits in their high word set.  This PR
addresses #2375
If their are bits set in the high word of the UID then do not or in
the group.
When displaying in TCL, if the the low 16 bits of the owner do not
translate to a user, then try to translate all 32 bits to an owner","Actually I ran into this  because someone was wondering who wrote to some nodes on a tree, and I could not tell because the high bits of the UID. we ORed with the GID.
I think this 'quick fix'. That treats the 32 bits as a UID if the low 16 bits are not valid (in tcl dir /full) and fills it in with either UID and GID if there are no high bits in the UID is not bad.
I would like to go ahead with this, so I can tell who is writing data on my system.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2378,2021-08-26T14:05:59Z,2021-08-30T13:44:20Z,2021-10-18T18:57:11Z,CLOSED,False,16,2,3,https://github.com/joshStillerman,Fix: on some systems UIDs are > 16 bits,1,[],https://github.com/MDSplus/mdsplus/pull/2378,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2378#issuecomment-908355282,"On systems using active directory uids can be constructed from
AD SIDs and may have bits in their high word set.  This PR
addresses #2375
If their are bits set in the high word of the UID then do not or in
the group.
When displaying in TCL, if the the low 16 bits of the owner do not
translate to a user, then try to translate all 32 bits to an owner",replaced by #2379,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2379,2021-08-27T08:08:15Z,2021-08-30T13:42:48Z,2021-08-30T13:42:48Z,MERGED,True,45,25,6,https://github.com/zack-vii,Fix: on some systems UIDs are > 16 bits (alternative),3,[],https://github.com/MDSplus/mdsplus/pull/2379,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2379,alternative to #2378,alternative to #2378,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2383,2021-09-15T20:27:15Z,2021-09-16T20:51:31Z,2021-09-16T20:51:31Z,MERGED,True,1739,1451,56,https://github.com/zack-vii,Fix: add list fall-back implementation to support older servers,5,[],https://github.com/MDSplus/mdsplus/pull/2383,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2383,"jet is using a way old version of mdsplus, this may help reading data via mdsplus-api","jet is using a way old version of mdsplus, this may help reading data via mdsplus-api",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2383,2021-09-15T20:27:15Z,2021-09-16T20:51:31Z,2021-09-16T20:51:31Z,MERGED,True,1739,1451,56,https://github.com/zack-vii,Fix: add list fall-back implementation to support older servers,5,[],https://github.com/MDSplus/mdsplus/pull/2383,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2383#issuecomment-920937490,"jet is using a way old version of mdsplus, this may help reading data via mdsplus-api",I will leave this one to the Java types,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2383,2021-09-15T20:27:15Z,2021-09-16T20:51:31Z,2021-09-16T20:51:31Z,MERGED,True,1739,1451,56,https://github.com/zack-vii,Fix: add list fall-back implementation to support older servers,5,[],https://github.com/MDSplus/mdsplus/pull/2383,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2383#issuecomment-920962540,"jet is using a way old version of mdsplus, this may help reading data via mdsplus-api","also i am not happy with the formater results,,",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2385,2021-09-16T10:57:05Z,2021-09-16T14:11:26Z,2021-09-16T14:11:27Z,MERGED,True,1,1,1,https://github.com/zack-vii,Build: ac_default_prefix,1,[],https://github.com/MDSplus/mdsplus/pull/2385,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2385,Fixes #2384,Fixes #2384,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2386,2021-09-16T12:51:14Z,2021-09-16T14:38:17Z,2021-09-16T14:38:18Z,MERGED,True,1,1,1,https://github.com/zack-vii,Fix: check for previous installation,1,[],https://github.com/MDSplus/mdsplus/pull/2386,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2386,installer should check if remove returns y or n,installer should check if remove returns y or n,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2388,2021-09-17T07:49:53Z,2021-09-17T16:51:47Z,2021-09-17T16:51:48Z,MERGED,True,6,7,2,https://github.com/zack-vii,"Fix: drop read and trigger install by env var, default is PYTHONPATH",1,[],https://github.com/MDSplus/mdsplus/pull/2388,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2388,will still remember choice of last install,will still remember choice of last install,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2389,2021-09-17T12:47:16Z,2021-09-17T16:52:05Z,2021-09-17T16:52:06Z,MERGED,True,76,140,5,https://github.com/zack-vii,"Fix: mdsplus-api: improve mdsip, all by String",1,[],https://github.com/MDSplus/mdsplus/pull/2389,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2389,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2390,2021-09-17T15:04:19Z,2021-09-17T17:18:18Z,2021-09-17T17:18:19Z,MERGED,True,4,8,1,https://github.com/zack-vii,Fix: substitute stdout with stderr on mdsip -P tunnel,1,[],https://github.com/MDSplus/mdsplus/pull/2390,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2390,if it compiles it should fix #2387,if it compiles it should fix #2387,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2390,2021-09-17T15:04:19Z,2021-09-17T17:18:18Z,2021-09-17T17:18:19Z,MERGED,True,4,8,1,https://github.com/zack-vii,Fix: substitute stdout with stderr on mdsip -P tunnel,1,[],https://github.com/MDSplus/mdsplus/pull/2390,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2390#issuecomment-921881774,if it compiles it should fix #2387,"this implementation actually maps fileno 1 to fileno 2 which should provide most compatibility, i.e. all code that wants to write to stdout will instead write to stderr keeping the actual stdout clean for mdsip communication",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2394,2021-10-05T10:40:42Z,2021-10-11T13:16:15Z,2021-10-11T13:16:16Z,MERGED,True,453,183,8,https://github.com/GabrieleManduchi,Gm fix cpp ctx,12,[],https://github.com/MDSplus/mdsplus/pull/2394,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2394,"Handle the new limitation about tree context in multithreaded applications in order to let Tree and TreeNode instances be exchanged among different threads. The Tree contexts are now contained in a Tree private array indexed by thread id. When the Tree instance is used in a new thread, the tree is open again and the new context recorded in the array
Changed C++and Java versions + corresponding tests","Handle the new limitation about tree context in multithreaded applications in order to let Tree and TreeNode instances be exchanged among different threads. The Tree contexts are now contained in a Tree private array indexed by thread id. When the Tree instance is used in a new thread, the tree is open again and the new context recorded in the array
Changed C++and Java versions + corresponding tests",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2394,2021-10-05T10:40:42Z,2021-10-11T13:16:15Z,2021-10-11T13:16:16Z,MERGED,True,453,183,8,https://github.com/GabrieleManduchi,Gm fix cpp ctx,12,[],https://github.com/MDSplus/mdsplus/pull/2394,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2394#issuecomment-934574718,"Handle the new limitation about tree context in multithreaded applications in order to let Tree and TreeNode instances be exchanged among different threads. The Tree contexts are now contained in a Tree private array indexed by thread id. When the Tree instance is used in a new thread, the tree is open again and the new context recorded in the array
Changed C++and Java versions + corresponding tests","on fc32
looks like a java test fails.. with a critical exception core dump
16:50:27 /git/mdsplus/conf/test-driver: line 120: 21647 Aborted                 (core dumped) ""$@"" > $log_file 2>&1
16:50:27 FAIL: MDSplus.MdsTreeTest",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2394,2021-10-05T10:40:42Z,2021-10-11T13:16:15Z,2021-10-11T13:16:16Z,MERGED,True,453,183,8,https://github.com/GabrieleManduchi,Gm fix cpp ctx,12,[],https://github.com/MDSplus/mdsplus/pull/2394,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2394#issuecomment-934575768,"Handle the new limitation about tree context in multithreaded applications in order to let Tree and TreeNode instances be exchanged among different threads. The Tree contexts are now contained in a Tree private array indexed by thread id. When the Tree instance is used in a new thread, the tree is open again and the new context recorded in the array
Changed C++and Java versions + corresponding tests",http://jenkins2.mdsplus.org/job/fc32/ws/tests/64/java/mdsobjects/tests/MDSplus.MdsTreeTest.log/*view*/,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2394,2021-10-05T10:40:42Z,2021-10-11T13:16:15Z,2021-10-11T13:16:16Z,MERGED,True,453,183,8,https://github.com/GabrieleManduchi,Gm fix cpp ctx,12,[],https://github.com/MDSplus/mdsplus/pull/2394,https://github.com/GabrieleManduchi,4,https://github.com/MDSplus/mdsplus/pull/2394#issuecomment-937496812,"Handle the new limitation about tree context in multithreaded applications in order to let Tree and TreeNode instances be exchanged among different threads. The Tree contexts are now contained in a Tree private array indexed by thread id. When the Tree instance is used in a new thread, the tree is open again and the new context recorded in the array
Changed C++and Java versions + corresponding tests",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2394,2021-10-05T10:40:42Z,2021-10-11T13:16:15Z,2021-10-11T13:16:16Z,MERGED,True,453,183,8,https://github.com/GabrieleManduchi,Gm fix cpp ctx,12,[],https://github.com/MDSplus/mdsplus/pull/2394,https://github.com/zack-vii,5,https://github.com/MDSplus/mdsplus/pull/2394#issuecomment-937500181,"Handle the new limitation about tree context in multithreaded applications in order to let Tree and TreeNode instances be exchanged among different threads. The Tree contexts are now contained in a Tree private array indexed by thread id. When the Tree instance is used in a new thread, the tree is open again and the new context recorded in the array
Changed C++and Java versions + corresponding tests","since the issue in jenkins memcheck seems to be a some unrelated python cleanup thing. you may review the code and merge it.
I would suggest you use the ./clang-format before checking it in though.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2394,2021-10-05T10:40:42Z,2021-10-11T13:16:15Z,2021-10-11T13:16:16Z,MERGED,True,453,183,8,https://github.com/GabrieleManduchi,Gm fix cpp ctx,12,[],https://github.com/MDSplus/mdsplus/pull/2394,https://github.com/zack-vii,6,https://github.com/MDSplus/mdsplus/pull/2394#issuecomment-937501614,"Handle the new limitation about tree context in multithreaded applications in order to let Tree and TreeNode instances be exchanged among different threads. The Tree contexts are now contained in a Tree private array indexed by thread id. When the Tree instance is used in a new thread, the tree is open again and the new context recorded in the array
Changed C++and Java versions + corresponding tests","unfortunately, i currently dont have more time to review it further than that",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2398,2021-10-18T18:56:19Z,2021-11-03T18:31:18Z,2021-11-03T18:31:18Z,CLOSED,False,4454,310,44,https://github.com/joshStillerman,Feature: add compression methods,39,[],https://github.com/MDSplus/mdsplus/pull/2398,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2398,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2398,2021-10-18T18:56:19Z,2021-11-03T18:31:18Z,2021-11-03T18:31:18Z,CLOSED,False,4454,310,44,https://github.com/joshStillerman,Feature: add compression methods,39,[],https://github.com/MDSplus/mdsplus/pull/2398,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2398#issuecomment-949027694,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2398,2021-10-18T18:56:19Z,2021-11-03T18:31:18Z,2021-11-03T18:31:18Z,CLOSED,False,4454,310,44,https://github.com/joshStillerman,Feature: add compression methods,39,[],https://github.com/MDSplus/mdsplus/pull/2398,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2398#issuecomment-949591369,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2400,2021-10-20T14:28:42Z,2021-11-03T20:22:11Z,2021-11-03T20:22:12Z,MERGED,True,33,33,12,https://github.com/joshStillerman,Fix: fix misspelled exception names,3,[],https://github.com/MDSplus/mdsplus/pull/2400,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2400,closes: #2395,closes: #2395,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2400,2021-10-20T14:28:42Z,2021-11-03T20:22:11Z,2021-11-03T20:22:12Z,MERGED,True,33,33,12,https://github.com/joshStillerman,Fix: fix misspelled exception names,3,[],https://github.com/MDSplus/mdsplus/pull/2400,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2400#issuecomment-959825411,closes: #2395,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2402,2021-10-21T14:30:30Z,2021-10-22T10:24:46Z,2021-10-22T10:24:46Z,MERGED,True,4148,234,21,https://github.com/GabrieleManduchi,Mitica update,8,[],https://github.com/MDSplus/mdsplus/pull/2402,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2402,Set of updated MARTe2 devices,Set of updated MARTe2 devices,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2405,2021-10-27T17:13:20Z,2021-11-03T18:48:50Z,2021-11-03T18:48:50Z,MERGED,True,17,32,6,https://github.com/joshStillerman,Fix: mdsmisc GetXYSignalXd() invalid free xd on error (#2373),3,[],https://github.com/MDSplus/mdsplus/pull/2405,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2405,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2405,2021-10-27T17:13:20Z,2021-11-03T18:48:50Z,2021-11-03T18:48:50Z,MERGED,True,17,32,6,https://github.com/joshStillerman,Fix: mdsmisc GetXYSignalXd() invalid free xd on error (#2373),3,[],https://github.com/MDSplus/mdsplus/pull/2405,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2405#issuecomment-958336870,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2406,2021-10-28T21:17:12Z,2021-10-29T21:16:58Z,2021-10-29T21:16:58Z,MERGED,True,11,29,4,https://github.com/WhoBrokeTheBuild,Fix: Replace broken lib.exe with dlltool for windows build,1,[],https://github.com/MDSplus/mdsplus/pull/2406,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/2406,"Switch from lib.exe to dlltool
Move .lib generation from windows_docker_build.sh to Makefile
Add search for dlltool to configure.ac","Switch from lib.exe to dlltool
Move .lib generation from windows_docker_build.sh to Makefile
Add search for dlltool to configure.ac",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2406,2021-10-28T21:17:12Z,2021-10-29T21:16:58Z,2021-10-29T21:16:58Z,MERGED,True,11,29,4,https://github.com/WhoBrokeTheBuild,Fix: Replace broken lib.exe with dlltool for windows build,1,[],https://github.com/MDSplus/mdsplus/pull/2406,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2406#issuecomment-954249445,"Switch from lib.exe to dlltool
Move .lib generation from windows_docker_build.sh to Makefile
Add search for dlltool to configure.ac",looks great!,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2406,2021-10-28T21:17:12Z,2021-10-29T21:16:58Z,2021-10-29T21:16:58Z,MERGED,True,11,29,4,https://github.com/WhoBrokeTheBuild,Fix: Replace broken lib.exe with dlltool for windows build,1,[],https://github.com/MDSplus/mdsplus/pull/2406,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2406#issuecomment-954910265,"Switch from lib.exe to dlltool
Move .lib generation from windows_docker_build.sh to Makefile
Add search for dlltool to configure.ac",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2407,2021-10-30T18:31:28Z,2021-11-01T20:49:03Z,2021-11-01T20:49:03Z,MERGED,True,300,47,19,https://github.com/joshStillerman,Jas add compression methods two,30,[],https://github.com/MDSplus/mdsplus/pull/2407,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2407,"This PR adds numbered compression methods to node's NCIs.  The spare2 byte in the NCI is now 'COMPRESSION_METHOD'.
0 - original delta compress
1 - gzip compression","This PR adds numbered compression methods to node's NCIs.  The spare2 byte in the NCI is now 'COMPRESSION_METHOD'.
0 - original delta compress
1 - gzip compression",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2408,2021-11-01T08:30:17Z,2021-11-15T17:58:08Z,2021-11-15T17:58:08Z,MERGED,True,11,2,2,https://github.com/merlea,Fix: Inconsistent behavior for empty records #2401,1,[],https://github.com/MDSplus/mdsplus/pull/2408,https://github.com/merlea,1,https://github.com/MDSplus/mdsplus/pull/2408,"For mdsip, accept 0 as dimension when data length is also 0
For Tdi1GetNci, do not throw error for empty arrays

A more detailed description of the changes is in one of the issue comments.","For mdsip, accept 0 as dimension when data length is also 0
For Tdi1GetNci, do not throw error for empty arrays

A more detailed description of the changes is in one of the issue comments.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2408,2021-11-01T08:30:17Z,2021-11-15T17:58:08Z,2021-11-15T17:58:08Z,MERGED,True,11,2,2,https://github.com/merlea,Fix: Inconsistent behavior for empty records #2401,1,[],https://github.com/MDSplus/mdsplus/pull/2408,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2408#issuecomment-956211077,"For mdsip, accept 0 as dimension when data length is also 0
For Tdi1GetNci, do not throw error for empty arrays

A more detailed description of the changes is in one of the issue comments.",test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2408,2021-11-01T08:30:17Z,2021-11-15T17:58:08Z,2021-11-15T17:58:08Z,MERGED,True,11,2,2,https://github.com/merlea,Fix: Inconsistent behavior for empty records #2401,1,[],https://github.com/MDSplus/mdsplus/pull/2408,https://github.com/merlea,3,https://github.com/MDSplus/mdsplus/pull/2408#issuecomment-956308487,"For mdsip, accept 0 as dimension when data length is also 0
For Tdi1GetNci, do not throw error for empty arrays

A more detailed description of the changes is in one of the issue comments.","I agree and I don't quite understand the behaviour of the Tdi1GetNci function enough to see how to fix it.
By the way even on the alpha branch, I always get failing tests where the TDI function a12__part_name.fun seems to be missing, but the tests on the docker server are fine. Any clue what might be going wrong?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2408,2021-11-01T08:30:17Z,2021-11-15T17:58:08Z,2021-11-15T17:58:08Z,MERGED,True,11,2,2,https://github.com/merlea,Fix: Inconsistent behavior for empty records #2401,1,[],https://github.com/MDSplus/mdsplus/pull/2408,https://github.com/merlea,4,https://github.com/MDSplus/mdsplus/pull/2408#issuecomment-968870468,"For mdsip, accept 0 as dimension when data length is also 0
For Tdi1GetNci, do not throw error for empty arrays

A more detailed description of the changes is in one of the issue comments.","@joshStillerman looking at the logs there is 2 errors:

when asking for CHILD for a node without childs we now get an empty array instead of the TreeNNF error. The previous behaviour might indeed make more sense as we expect a NID in return.
when asking for CHILDREN_NIDS in the same situation we also now get an empty array instead of the TreeNNF error. There I think the empty array might be a better answer as the return type is a NID array.
What do you think?

I will provide a new version which only changes the behaviour in the cases I was mentioning in the original error but I think it might be worth considering this CHILDREN_NIDS case (or we can open another issue for that).",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2408,2021-11-01T08:30:17Z,2021-11-15T17:58:08Z,2021-11-15T17:58:08Z,MERGED,True,11,2,2,https://github.com/merlea,Fix: Inconsistent behavior for empty records #2401,1,[],https://github.com/MDSplus/mdsplus/pull/2408,https://github.com/merlea,5,https://github.com/MDSplus/mdsplus/pull/2408#issuecomment-968902552,"For mdsip, accept 0 as dimension when data length is also 0
For Tdi1GetNci, do not throw error for empty arrays

A more detailed description of the changes is in one of the issue comments.",This new version should pass the tests (I hope...).,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2408,2021-11-01T08:30:17Z,2021-11-15T17:58:08Z,2021-11-15T17:58:08Z,MERGED,True,11,2,2,https://github.com/merlea,Fix: Inconsistent behavior for empty records #2401,1,[],https://github.com/MDSplus/mdsplus/pull/2408,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2408#issuecomment-968956493,"For mdsip, accept 0 as dimension when data length is also 0
For Tdi1GetNci, do not throw error for empty arrays

A more detailed description of the changes is in one of the issue comments.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2408,2021-11-01T08:30:17Z,2021-11-15T17:58:08Z,2021-11-15T17:58:08Z,MERGED,True,11,2,2,https://github.com/merlea,Fix: Inconsistent behavior for empty records #2401,1,[],https://github.com/MDSplus/mdsplus/pull/2408,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2408#issuecomment-968990139,"For mdsip, accept 0 as dimension when data length is also 0
For Tdi1GetNci, do not throw error for empty arrays

A more detailed description of the changes is in one of the issue comments.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2409,2021-11-02T17:02:05Z,2021-11-02T20:21:49Z,2021-11-02T20:21:50Z,MERGED,True,10,6,1,https://github.com/joshStillerman,Fix: use DESCRIPTOR_CSTRING not DESCRIPTOR macro,1,[],https://github.com/MDSplus/mdsplus/pull/2409,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2409,"The DESCRIPTOR macro uses the size of its argument.  Since the code
is passing a pointer to a string, instead of an array, this is wrong.","The DESCRIPTOR macro uses the size of its argument.  Since the code
is passing a pointer to a string, instead of an array, this is wrong.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2410,2021-11-03T14:43:15Z,2021-11-03T18:00:38Z,2021-11-03T18:00:39Z,MERGED,True,36,34,1,https://github.com/joshStillerman,Fix: can not get cli_get_value a qualifier twice,2,[],https://github.com/MDSplus/mdsplus/pull/2410,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2410,"Can not and should not anyway ask for the value of the same
qualifier more than one time.
This change gets the compression method, if specified, outside of
the node loop.","Can not and should not anyway ask for the value of the same
qualifier more than one time.
This change gets the compression method, if specified, outside of
the node loop.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2411,2021-11-03T16:13:24Z,2021-11-03T17:10:01Z,2021-11-03T17:10:02Z,MERGED,True,0,9,1,https://github.com/GabrieleManduchi,Gm fix marte2,6,[],https://github.com/MDSplus/mdsplus/pull/2411,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2411,Removed Mode=ExpectsReply from generated cfg that potentially introduced deadlocks,Removed Mode=ExpectsReply from generated cfg that potentially introduced deadlocks,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2414,2021-11-05T10:42:56Z,2021-11-05T14:32:33Z,2021-11-05T14:32:34Z,MERGED,True,280,0,2,https://github.com/GabrieleManduchi,Gm fix treenode,7,[],https://github.com/MDSplus/mdsplus/pull/2414,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2414,Fixed evaluation of treenode data in treenode::getXXX() methods,Fixed evaluation of treenode data in treenode::getXXX() methods,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2415,2021-11-08T16:14:28Z,2021-11-10T10:24:34Z,2021-11-10T10:24:35Z,MERGED,True,49,3,2,https://github.com/GabrieleManduchi,Gm fix resample,10,[],https://github.com/MDSplus/mdsplus/pull/2415,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2415,"In XTreeDefaultResampleMode, when evaluating timebase in order to perform resampling, TdiData() is called. In this case the whole timebase must be read, not a resampled one, even if the timebase expressions refers to segmented nodes.
To make sure this happens, the current time context is reset to null start, end, delta before TdiData() and then reset to its original values after calling TdiData()","In XTreeDefaultResampleMode, when evaluating timebase in order to perform resampling, TdiData() is called. In this case the whole timebase must be read, not a resampled one, even if the timebase expressions refers to segmented nodes.
To make sure this happens, the current time context is reset to null start, end, delta before TdiData() and then reset to its original values after calling TdiData()",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2418,2021-11-12T20:59:12Z,2021-11-15T09:13:56Z,2021-11-15T09:13:56Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Fix: can not get/set current shot over thick,1,[],https://github.com/MDSplus/mdsplus/pull/2418,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2418,"The code to access the current shot id for thick client was checking
that the connection ID > 0.  0 is a valid (1st) connection ID>","The code to access the current shot id for thick client was checking
that the connection ID > 0.  0 is a valid (1st) connection ID>",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2418,2021-11-12T20:59:12Z,2021-11-15T09:13:56Z,2021-11-15T09:13:56Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Fix: can not get/set current shot over thick,1,[],https://github.com/MDSplus/mdsplus/pull/2418,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2418#issuecomment-967642660,"The code to access the current shot id for thick client was checking
that the connection ID > 0.  0 is a valid (1st) connection ID>",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2418,2021-11-12T20:59:12Z,2021-11-15T09:13:56Z,2021-11-15T09:13:56Z,MERGED,True,1,1,1,https://github.com/joshStillerman,Fix: can not get/set current shot over thick,1,[],https://github.com/MDSplus/mdsplus/pull/2418,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2418#issuecomment-967713112,"The code to access the current shot id for thick client was checking
that the connection ID > 0.  0 is a valid (1st) connection ID>",retest please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2420,2021-11-15T10:52:44Z,2021-11-19T13:00:06Z,2021-11-19T13:00:06Z,MERGED,True,14,32,1,https://github.com/zack-vii,Fix: #2419: fixed monitor queue,1,[],https://github.com/MDSplus/mdsplus/pull/2420,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2420,should fix helgrind issue in MdsServerShr,should fix helgrind issue in MdsServerShr,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2420,2021-11-15T10:52:44Z,2021-11-19T13:00:06Z,2021-11-19T13:00:06Z,MERGED,True,14,32,1,https://github.com/zack-vii,Fix: #2419: fixed monitor queue,1,[],https://github.com/MDSplus/mdsplus/pull/2420,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2420#issuecomment-969229339,should fix helgrind issue in MdsServerShr,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2422,2021-11-23T12:34:32Z,2021-11-23T16:33:27Z,2021-11-23T16:33:27Z,MERGED,True,33,46,1,https://github.com/zack-vii,mdsplus-api: trust in jsch when handling config,1,[],https://github.com/MDSplus/mdsplus/pull/2422,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2422,"rely on jsch to handle identity files. register with jsch object.
fixes ssh_config ""IdentityFile"". fixes usage of config for jumphosts.
fixes issue with new jet access;
HINT: jsch does not accept OPENSSH keys. convert them to RSA/EC/ etc. first.","rely on jsch to handle identity files. register with jsch object.
fixes ssh_config ""IdentityFile"". fixes usage of config for jumphosts.
fixes issue with new jet access;
HINT: jsch does not accept OPENSSH keys. convert them to RSA/EC/ etc. first.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2425,2021-12-01T20:20:22Z,2021-12-23T16:40:55Z,2021-12-23T16:40:55Z,MERGED,True,22,18,2,https://github.com/santorofer,"Fix: In a pydevice, move tree copy from init() to run() in the MDSWorker thread",1,[],https://github.com/MDSplus/mdsplus/pull/2425,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2425,"In order to resolve issues related to using distributed client (see #2360) when using MDSplus python devices (specifically, for acq2106_423st.py and acq2106_435st.py):

we make a copy of the tree object in the MDSWork thread, not in the init() but in the run() of that thread.","In order to resolve issues related to using distributed client (see #2360) when using MDSplus python devices (specifically, for acq2106_423st.py and acq2106_435st.py):

we make a copy of the tree object in the MDSWork thread, not in the init() but in the run() of that thread.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2425,2021-12-01T20:20:22Z,2021-12-23T16:40:55Z,2021-12-23T16:40:55Z,MERGED,True,22,18,2,https://github.com/santorofer,"Fix: In a pydevice, move tree copy from init() to run() in the MDSWorker thread",1,[],https://github.com/MDSplus/mdsplus/pull/2425,https://github.com/WhoBrokeTheBuild,2,https://github.com/MDSplus/mdsplus/pull/2425#issuecomment-985173492,"In order to resolve issues related to using distributed client (see #2360) when using MDSplus python devices (specifically, for acq2106_423st.py and acq2106_435st.py):

we make a copy of the tree object in the MDSWork thread, not in the init() but in the run() of that thread.",Retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2425,2021-12-01T20:20:22Z,2021-12-23T16:40:55Z,2021-12-23T16:40:55Z,MERGED,True,22,18,2,https://github.com/santorofer,"Fix: In a pydevice, move tree copy from init() to run() in the MDSWorker thread",1,[],https://github.com/MDSplus/mdsplus/pull/2425,https://github.com/zack-vii,3,https://github.com/MDSplus/mdsplus/pull/2425#issuecomment-1000278393,"In order to resolve issues related to using distributed client (see #2360) when using MDSplus python devices (specifically, for acq2106_423st.py and acq2106_435st.py):

we make a copy of the tree object in the MDSWork thread, not in the init() but in the run() of that thread.",in fact the dev.copy() may remain in __init__ but it should not be used/accessed outside of the thread. so the caching of the nodes in __init__ caused the tree to be opened in the main thread. making a copy in the thread may do the trick as copy() uses infos cached in python fields (.tree and .shot). this should not be alarming for other devices that do the copy during __init__() as long as they dont access it outside of their thread method.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2427,2021-12-06T15:52:27Z,,2022-05-02T12:36:42Z,OPEN,False,9,5,1,https://github.com/GabrieleManduchi,Gm fix redpitaya,1,[],https://github.com/MDSplus/mdsplus/pull/2427,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2427,Avoid blocking burst recording in the possible case  samples from previous burst are pending in queue without interrupt (no threshold reached),Avoid blocking burst recording in the possible case  samples from previous burst are pending in queue without interrupt (no threshold reached),True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2427,2021-12-06T15:52:27Z,,2022-05-02T12:36:42Z,OPEN,False,9,5,1,https://github.com/GabrieleManduchi,Gm fix redpitaya,1,[],https://github.com/MDSplus/mdsplus/pull/2427,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2427#issuecomment-1000266122,Avoid blocking burst recording in the possible case  samples from previous burst are pending in queue without interrupt (no threshold reached),maybe this branch should be rebased to disentangle all the merge commits.. btw you can use rebase as your default merge strategie,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/fluffynukeit,1,https://github.com/MDSplus/mdsplus/pull/2430,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.","This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2430#issuecomment-991017199,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.",test this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/fluffynukeit,3,https://github.com/MDSplus/mdsplus/pull/2430#issuecomment-991182461,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.","I would like to help.  Can you point me to a document describing how to run the test suite?  I'm somewhat at a loss on how to proceed.  stable_release-7-131-6, alpha_release-7-135-0, and my PR commit 48be5d1 all build fine from source with no indication of errors in the build log that I can find.
What is more, the extent of my PR is editing the README and deleting the flake.* files, which are not referenced in the codebase anywhere as far as I can tell.  I don't have any insight into how those sorts of changes could cause tests to start failing, but if you have any ideas to share, I can take a deeper look.
Would it help at all to rebase this onto different branch?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2430#issuecomment-991211301,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.","It could just be a glitch.  I will look at the logs.  and try to figure
out how you can run the tests.  You can use

mdsplus/deploy/build.sh  to run the tests
On 12/10/21 1:04 PM, Daniel Austin wrote:

 I would like to help. Can you point me to a document describing how to
 run the test suite? I'm somewhat at a loss on how to proceed.
 stable_release-7-131-6, alpha_release-7-135-0, and my PR commit
 48be5d1
 <48be5d1>
 all build fine from source with no indication of errors in the build
 log that I can find.

 What is more, the extent of my PR is editing the README and deleting
 the flake.* files, which are not referenced in the codebase anywhere
 as far as I can tell. I don't have any insight into how those sorts of
 changes could cause tests to start failing, but if you have any ideas
 to share, I can take a deeper look.

 Would it help at all to rebase this onto different branch?

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#2430 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZIBBMVDNQ3XCW7PS6DUQI6MFANCNFSM5JXO2EAA>.
 Triage notifications on the go with GitHub Mobile for iOS
 <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>
 or Android
 <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.


-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.***",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/fluffynukeit,5,https://github.com/MDSplus/mdsplus/pull/2430#issuecomment-996173742,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.","Hi. Following up on this, I'm not able to run the tests.  I'm not sure I'm doing it correctly.  Here is the output from my attempt.  Depending on how you feel about the level of effort in supporting my efforts, you might want to implement these changes on your own or just ignore them.  The scope is small so I'm having a hard time imagining why they would cause tests to fail, but they clearly are.  If you have ideas, I can look into it more, but, if it turns into a science project to find out what is going on, I'll need to divert my attention elsewhere unfortunately.
$ sudo ./deploy/build.sh --test --os=ubuntu20

Build script executing with the following combined options:

    --platform=debian --valgrind=memcheck,helgrind --dockerimage=mdsplus/builder:ubuntu20-64 --distname=Ubuntu20 --arch=amd64 --test --os=ubuntu20



running /home/dan/Desktop/mdsplus-deployment/test/source/deploy/platform/debian/debian_build.sh.
Building installers for amd64 using mdsplus/builder:ubuntu20-64
Error: No such network: ubuntu20
04bccd847e16148f37eb851ad95f78e599c02cd4c3d56f7017abe7d788b61f28
Unable to find image 'mdsplus/builder:ubuntu20-64' locally
ubuntu20-64: Pulling from mdsplus/builder
da7391352a9b: Pull complete 
14428a6d4bcd: Pull complete 
2c2d948710f2: Pull complete 
637e12b5049e: Pull complete 
Digest: sha256:64f7cd68beb131e15dd9bf16be8c6cca7439c393c15f80de28485862565136d3
Status: Downloaded newer image for mdsplus/builder:ubuntu20-64
standard_init_linux.go:228: exec user process caused: no such file or directory
f9f369df7add450cf2d056f4728d89e037f938f0d802eead912b2511113bb99d
ubuntu20
======================================================

Docker debian_docker_build.sh returned failure
status when exiting from mdsplus/builder:ubuntu20-64

======================================================
============================================

Failure: The build was unsuccessful!

============================================",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2430#issuecomment-996179285,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.","I think the Issue is that the original PR was against stable, and this one is against alpha.  I will see if I can straighten things out.
Separately, one of the problems with your build may be that the full test suite does not run on UB ?  I will test that and see",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2430#issuecomment-996185841,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.","I just built / tested it on UB18 no problem....
jas@mfews05:~/build$ ../mdsplus/deploy/build.sh --os=ubuntu18 --test

Build script executing with the following combined options:

    --platform=debian --valgrind=memcheck,helgrind --dockerimage=mdsplus/builder:ubuntu18-64 --distname=Ubuntu18 --arch=amd64 --os=ubuntu18 --test



running /home/jas/mdsplus/deploy/platform/debian/debian_build.sh.
Building installers for amd64 using mdsplus/builder:ubuntu18-64
Error: No such network: ubuntu18
a89f4c1fbdd8e7bad8acb58f955db2fd3d3c06daccad38c4f42f660fed28afa2
OS=ubuntu18
ARCH=amd64
CONFIGURE_EXTRA=--enable-debug=info
PUBLISH=
HOSTNAME=Ubuntu18
mdsevent_port=4000
TEST=yes
UPDATEPKG=
TEST_TIMEUNIT=
VALGRIND_TOOLS=
RELEASE=
SANITIZE=
BRANCH=alpha
CONFIGURE_PARAMS=
PWD=/
HOME=/workspace
DISTNAME=Ubuntu18
srcdir=/home/jas/mdsplus
TERM=xterm
RELEASE_VERSION=7.136.0
PLATFORM=debian
BNAME=-alpha
COLOR=
FLAVOR=alpha
SHLVL=1
JARS_DIR=
MAKE_JARS=
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ARCHES=amd64
_=/usr/bin/env
archlist= 64
~/tests/64 /
checking for docker... no
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-pc-linux-gnu

...
make[2]: Entering directory '/workspace/tests/64/java/mdsobjects/tests'
//// Performing tests /////
make[3]: Entering directory '/workspace/tests/64/java/mdsobjects/tests'
PASS: MDSplus.MdsDataTest
PASS: MDSplus.MdsConglomTest
PASS: MDSplus.MdsConnectionTest
PASS: MDSplus.MdsDimensionTest
PASS: MDSplus.MdsEventTest
PASS: MDSplus.MdsExpressionCompileTest
PASS: MDSplus.MdsFunctionTest
PASS: MDSplus.MdsRangeTest
PASS: MDSplus.MdsSignalTest
PASS: MDSplus.MdsStringTest
PASS: MDSplus.MdsTreeNodeTest
PASS: MDSplus.MdsTreeTest
PASS: MDSplus.MdsWindowTest
============================================================================
Testsuite summary for MDSplus 7a
============================================================================
# TOTAL: 13
# PASS:  13
# SKIP:  0
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================
make[3]: Leaving directory '/workspace/tests/64/java/mdsobjects/tests'
make[2]: Leaving directory '/workspace/tests/64/java/mdsobjects/tests'
make[1]: Leaving directory '/workspace/tests/64/testing'
/
TEST RESULTS:
SUCCESS
f33ed6a769336fdbb7adcc196ee87631bf26ad5fc9c0cedfa5892babe97a4cfd
ubuntu18
============================================

Success!

============================================

I will now try 20.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/joshStillerman,8,https://github.com/MDSplus/mdsplus/pull/2430#issuecomment-996188187,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.","UB20 fine also
Retest this please",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2430,2021-12-09T21:02:45Z,2021-12-17T13:25:48Z,2021-12-17T13:25:48Z,MERGED,True,0,100,3,https://github.com/fluffynukeit,Reverted PR 2361 changes that added nix support.,1,[],https://github.com/MDSplus/mdsplus/pull/2430,https://github.com/joshStillerman,9,https://github.com/MDSplus/mdsplus/pull/2430#issuecomment-996302995,"This change reverts PR #2361 in which I added nix support for mdsplus.
After working with nix and mdsplus for several months, my opinion is that the nix build option should not be included with the software.  I have a nix-based system working well for our internal needs, but doing so required deep understanding of MDSplus configuration.  A typical user or contributor would not and should not be expected to understand a second, orthogonal configuration philosophy.  If anyone wants to use nix as I do, they can write their own flake.nix file in a separate repo and configure it to build the mdsplus source from this repo, which is what I settled on.  So even I don't use the files from my PR any longer.","we were out of space on the root disk of the builder.
retest this please",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2432,2021-12-22T05:15:04Z,2021-12-23T22:40:36Z,2021-12-23T22:40:36Z,MERGED,True,71,65,2,https://github.com/santorofer,"Fix: Setting of Ac2106 435 Signal Conditioning Gains and Offsets in a more efficient way, i.e using PyEpics.",10,[],https://github.com/MDSplus/mdsplus/pull/2432,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2432,"The ACQ2106 SC device gains and offsets are now set for each channel every time the device is execute:
1- Global values nodes for gains and offsets were removed. In total 4 nodes were removed from the tree.
2- Setting of the gains and offsets is done directly using PyEpics. This implies a great improvement on time and performance of the device.","The ACQ2106 SC device gains and offsets are now set for each channel every time the device is execute:
1- Global values nodes for gains and offsets were removed. In total 4 nodes were removed from the tree.
2- Setting of the gains and offsets is done directly using PyEpics. This implies a great improvement on time and performance of the device.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2432,2021-12-22T05:15:04Z,2021-12-23T22:40:36Z,2021-12-23T22:40:36Z,MERGED,True,71,65,2,https://github.com/santorofer,"Fix: Setting of Ac2106 435 Signal Conditioning Gains and Offsets in a more efficient way, i.e using PyEpics.",10,[],https://github.com/MDSplus/mdsplus/pull/2432,https://github.com/santorofer,2,https://github.com/MDSplus/mdsplus/pull/2432#issuecomment-999820715,"The ACQ2106 SC device gains and offsets are now set for each channel every time the device is execute:
1- Global values nodes for gains and offsets were removed. In total 4 nodes were removed from the tree.
2- Setting of the gains and offsets is done directly using PyEpics. This implies a great improvement on time and performance of the device.","Josh, Stephen, I just removed the threading that was using when setting each of the sites' gains and offsets.
It seems to take slightly longer. What it does in the loop is to set and commit changes.
I think from taking 1 sec to do all three sites, now it takes 2.5 secs or so. I think we can live with it, and have less complexities introduced by the multithreading.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2432,2021-12-22T05:15:04Z,2021-12-23T22:40:36Z,2021-12-23T22:40:36Z,MERGED,True,71,65,2,https://github.com/santorofer,"Fix: Setting of Ac2106 435 Signal Conditioning Gains and Offsets in a more efficient way, i.e using PyEpics.",10,[],https://github.com/MDSplus/mdsplus/pull/2432,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2432#issuecomment-999832697,"The ACQ2106 SC device gains and offsets are now set for each channel every time the device is execute:
1- Global values nodes for gains and offsets were removed. In total 4 nodes were removed from the tree.
2- Setting of the gains and offsets is done directly using PyEpics. This implies a great improvement on time and performance of the device.","Great
On 12/22/21 2:43 PM, Fernando Santoro wrote:

 Josh, Stephen, I just removed the threading that was using when
 setting each of the sites' gains and offsets.
 It seems to take slightly longer. What it does in the loop is to set
 and commit changes.
 I think from taking 1 sec to do all three sites, now it takes 2.5 secs
 or so. I think we can live with it, and have less complexities
 introduced by the multithreading.

 —
 Reply to this email directly, view it on GitHub
 <#2432 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZLZKVYMBE7TQA2HLJDUSIS5DANCNFSM5KRWYZCA>.
 Triage notifications on the go with GitHub Mobile for iOS
 <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>
 or Android
 <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.

 You are receiving this because your review was requested.Message ID:
 ***@***.***>

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.***",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2432,2021-12-22T05:15:04Z,2021-12-23T22:40:36Z,2021-12-23T22:40:36Z,MERGED,True,71,65,2,https://github.com/santorofer,"Fix: Setting of Ac2106 435 Signal Conditioning Gains and Offsets in a more efficient way, i.e using PyEpics.",10,[],https://github.com/MDSplus/mdsplus/pull/2432,https://github.com/santorofer,4,https://github.com/MDSplus/mdsplus/pull/2432#issuecomment-1000419127,"The ACQ2106 SC device gains and offsets are now set for each channel every time the device is execute:
1- Global values nodes for gains and offsets were removed. In total 4 nodes were removed from the tree.
2- Setting of the gains and offsets is done directly using PyEpics. This implies a great improvement on time and performance of the device.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2433,2021-12-22T17:08:12Z,2021-12-23T12:16:05Z,2021-12-23T12:16:05Z,MERGED,True,1,1,1,https://github.com/WhoBrokeTheBuild,Switch Ubuntu18 to use python3-numpy,1,[],https://github.com/MDSplus/mdsplus/pull/2433,https://github.com/WhoBrokeTheBuild,1,https://github.com/MDSplus/mdsplus/pull/2433,"Currently, Ubuntu18 installs python-numpy, which in turn installs python2
I would like to switch it to python3-numpy, which will not install python2
@zack-vii I would like your input on this one","Currently, Ubuntu18 installs python-numpy, which in turn installs python2
I would like to switch it to python3-numpy, which will not install python2
@zack-vii I would like your input on this one",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2433,2021-12-22T17:08:12Z,2021-12-23T12:16:05Z,2021-12-23T12:16:05Z,MERGED,True,1,1,1,https://github.com/WhoBrokeTheBuild,Switch Ubuntu18 to use python3-numpy,1,[],https://github.com/MDSplus/mdsplus/pull/2433,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2433#issuecomment-999759302,"Currently, Ubuntu18 installs python-numpy, which in turn installs python2
I would like to switch it to python3-numpy, which will not install python2
@zack-vii I would like your input on this one",i support it. i think python3 is installed by default anyway sonit makes sense to use the python3 version of numpy. to set this for ubuntu-20 we might need to add a new filter similar to dist to the packaging... not sure.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2438,2022-01-08T13:19:55Z,2022-01-10T20:32:50Z,2022-01-10T20:32:50Z,MERGED,True,318,176,4,https://github.com/GabrieleManduchi,Gm fix bagel,14,[],https://github.com/MDSplus/mdsplus/pull/2438,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2438,Fix wrong generation for subsampling between threads,Fix wrong generation for subsampling between threads,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2440,2022-01-13T10:08:21Z,2022-01-19T16:59:30Z,2022-01-19T16:59:30Z,MERGED,True,2,2,2,https://github.com/GabrieleManduchi,Gm fix bagel,16,[],https://github.com/MDSplus/mdsplus/pull/2440,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2440,Fix field misaligment,Fix field misaligment,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2443,2022-01-25T14:48:29Z,2022-02-04T17:05:29Z,2022-02-04T17:05:30Z,MERGED,True,1046,101,12,https://github.com/GabrieleManduchi,Gm redp dac,13,[],https://github.com/MDSplus/mdsplus/pull/2443,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2443,Added support for RedPitaya DAC implemetation,Added support for RedPitaya DAC implemetation,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2443,2022-01-25T14:48:29Z,2022-02-04T17:05:29Z,2022-02-04T17:05:30Z,MERGED,True,1046,101,12,https://github.com/GabrieleManduchi,Gm redp dac,13,[],https://github.com/MDSplus/mdsplus/pull/2443,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2443#issuecomment-1021261919,Added support for RedPitaya DAC implemetation,Can you rebase this so that it is only your changes ?,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2443,2022-01-25T14:48:29Z,2022-02-04T17:05:29Z,2022-02-04T17:05:30Z,MERGED,True,1046,101,12,https://github.com/GabrieleManduchi,Gm redp dac,13,[],https://github.com/MDSplus/mdsplus/pull/2443,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2443#issuecomment-1023177972,Added support for RedPitaya DAC implemetation,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2445,2022-02-04T17:28:55Z,,2022-02-04T17:28:55Z,OPEN,False,172,23,11,https://github.com/GabrieleManduchi,Feature:added support for downsampling,1,[],https://github.com/MDSplus/mdsplus/pull/2445,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2445,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2446,2022-02-07T14:03:15Z,,2022-05-02T12:35:12Z,OPEN,False,22,22,1,https://github.com/Louwrensth,CompileTree: Exit with non-zero status code for error messages.,2,[],https://github.com/MDSplus/mdsplus/pull/2446,https://github.com/Louwrensth,1,https://github.com/MDSplus/mdsplus/pull/2446,"This would make CompileTree a bit more POSIX compatible and scripting based on exit status would become possible (instead of reading (locale-dependent) error messages, which now also go to standard error as they should).
N.B. Some error messages are only messages themselves and have no System.exit(1) statement. Is this by choice? I left it this way.
Hope the intention is appreciated and applied through out mdsplus, not just CompileTree.","This would make CompileTree a bit more POSIX compatible and scripting based on exit status would become possible (instead of reading (locale-dependent) error messages, which now also go to standard error as they should).
N.B. Some error messages are only messages themselves and have no System.exit(1) statement. Is this by choice? I left it this way.
Hope the intention is appreciated and applied through out mdsplus, not just CompileTree.",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2446,2022-02-07T14:03:15Z,,2022-05-02T12:35:12Z,OPEN,False,22,22,1,https://github.com/Louwrensth,CompileTree: Exit with non-zero status code for error messages.,2,[],https://github.com/MDSplus/mdsplus/pull/2446,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2446#issuecomment-1033476945,"This would make CompileTree a bit more POSIX compatible and scripting based on exit status would become possible (instead of reading (locale-dependent) error messages, which now also go to standard error as they should).
N.B. Some error messages are only messages themselves and have no System.exit(1) statement. Is this by choice? I left it this way.
Hope the intention is appreciated and applied through out mdsplus, not just CompileTree.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2446,2022-02-07T14:03:15Z,,2022-05-02T12:35:12Z,OPEN,False,22,22,1,https://github.com/Louwrensth,CompileTree: Exit with non-zero status code for error messages.,2,[],https://github.com/MDSplus/mdsplus/pull/2446,https://github.com/GabrieleManduchi,3,https://github.com/MDSplus/mdsplus/pull/2446#issuecomment-1033777380,"This would make CompileTree a bit more POSIX compatible and scripting based on exit status would become possible (instead of reading (locale-dependent) error messages, which now also go to standard error as they should).
N.B. Some error messages are only messages themselves and have no System.exit(1) statement. Is this by choice? I left it this way.
Hope the intention is appreciated and applied through out mdsplus, not just CompileTree.","Apparently there is no space left on device in the build&test system. Josh, could you have a look at it?",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2446,2022-02-07T14:03:15Z,,2022-05-02T12:35:12Z,OPEN,False,22,22,1,https://github.com/Louwrensth,CompileTree: Exit with non-zero status code for error messages.,2,[],https://github.com/MDSplus/mdsplus/pull/2446,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2446#issuecomment-1033826133,"This would make CompileTree a bit more POSIX compatible and scripting based on exit status would become possible (instead of reading (locale-dependent) error messages, which now also go to standard error as they should).
N.B. Some error messages are only messages themselves and have no System.exit(1) statement. Is this by choice? I left it this way.
Hope the intention is appreciated and applied through out mdsplus, not just CompileTree.","sure
On 2/9/22 8:45 AM, GabrieleManduchi wrote:

 Apparently there is no space left on device in the build&test system.
 Josh, could you have a look at it?

 —
 Reply to this email directly, view it on GitHub
 <#2446 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABY5AZON7JY3B3ORH3H6JWTU2JVY5ANCNFSM5NXRHBNQ>.
 Triage notifications on the go with GitHub Mobile for iOS
 <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>
 or Android
 <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.

 You are receiving this because you are subscribed to this
 thread.Message ID: ***@***.***>

-- 
*Joshua Stillerman*
Research Engineer
MIT Plasma Science and Fusion Center
617.253.8176
***@***.***",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2446,2022-02-07T14:03:15Z,,2022-05-02T12:35:12Z,OPEN,False,22,22,1,https://github.com/Louwrensth,CompileTree: Exit with non-zero status code for error messages.,2,[],https://github.com/MDSplus/mdsplus/pull/2446,https://github.com/GabrieleManduchi,5,https://github.com/MDSplus/mdsplus/pull/2446#issuecomment-1036338717,"This would make CompileTree a bit more POSIX compatible and scripting based on exit status would become possible (instead of reading (locale-dependent) error messages, which now also go to standard error as they should).
N.B. Some error messages are only messages themselves and have no System.exit(1) statement. Is this by choice? I left it this way.
Hope the intention is appreciated and applied through out mdsplus, not just CompileTree.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2446,2022-02-07T14:03:15Z,,2022-05-02T12:35:12Z,OPEN,False,22,22,1,https://github.com/Louwrensth,CompileTree: Exit with non-zero status code for error messages.,2,[],https://github.com/MDSplus/mdsplus/pull/2446,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2446#issuecomment-1042303085,"This would make CompileTree a bit more POSIX compatible and scripting based on exit status would become possible (instead of reading (locale-dependent) error messages, which now also go to standard error as they should).
N.B. Some error messages are only messages themselves and have no System.exit(1) statement. Is this by choice? I left it this way.
Hope the intention is appreciated and applied through out mdsplus, not just CompileTree.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2446,2022-02-07T14:03:15Z,,2022-05-02T12:35:12Z,OPEN,False,22,22,1,https://github.com/Louwrensth,CompileTree: Exit with non-zero status code for error messages.,2,[],https://github.com/MDSplus/mdsplus/pull/2446,https://github.com/zack-vii,7,https://github.com/MDSplus/mdsplus/pull/2446#issuecomment-1114796720,"This would make CompileTree a bit more POSIX compatible and scripting based on exit status would become possible (instead of reading (locale-dependent) error messages, which now also go to standard error as they should).
N.B. Some error messages are only messages themselves and have no System.exit(1) statement. Is this by choice? I left it this way.
Hope the intention is appreciated and applied through out mdsplus, not just CompileTree.",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2452,2022-03-01T19:49:02Z,,2022-06-01T23:07:56Z,OPEN,False,949,12,7,https://github.com/santorofer,WIP New devices for slow monitoring streams,15,[],https://github.com/MDSplus/mdsplus/pull/2452,https://github.com/santorofer,1,https://github.com/MDSplus/mdsplus/pull/2452,Two new devices to monitoring the slow rates streams coming from port 53666 of the D-Tacq 2106 423s and 435s.,Two new devices to monitoring the slow rates streams coming from port 53666 of the D-Tacq 2106 423s and 435s.,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2457,2022-03-30T10:50:56Z,2022-03-30T11:53:07Z,2022-03-30T11:53:08Z,MERGED,True,2947,10,18,https://github.com/GabrieleManduchi,Gm marte2 dtt,4,[],https://github.com/MDSplus/mdsplus/pull/2457,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2457,"Added MARTe2 devices for DTT and UDP communication
some fixes to MARTE2_COMPONENT
improved Drag&Drop for MARTe2 devices setup","Added MARTe2 devices for DTT and UDP communication
some fixes to MARTE2_COMPONENT
improved Drag&Drop for MARTe2 devices setup",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2459,2022-04-22T12:33:19Z,2022-04-26T17:30:26Z,2022-04-26T17:30:27Z,MERGED,True,117,0,2,https://github.com/GabrieleManduchi,Feature:add the possibility of passing var args via array in MDSplus:…,3,[],https://github.com/MDSplus/mdsplus/pull/2459,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2459,…:compileWithArgs and MDSplus::executeWithArgs,…:compileWithArgs and MDSplus::executeWithArgs,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2459,2022-04-22T12:33:19Z,2022-04-26T17:30:26Z,2022-04-26T17:30:27Z,MERGED,True,117,0,2,https://github.com/GabrieleManduchi,Feature:add the possibility of passing var args via array in MDSplus:…,3,[],https://github.com/MDSplus/mdsplus/pull/2459,https://github.com/joshStillerman,2,https://github.com/MDSplus/mdsplus/pull/2459#issuecomment-1106571175,…:compileWithArgs and MDSplus::executeWithArgs,Retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2460,2022-04-28T19:34:03Z,2022-05-02T12:25:06Z,2022-05-02T12:25:06Z,MERGED,True,9,1,3,https://github.com/zack-vii,added debian-bullseye,2,[],https://github.com/MDSplus/mdsplus/pull/2460,https://github.com/zack-vii,1,https://github.com/MDSplus/mdsplus/pull/2460,,,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2460,2022-04-28T19:34:03Z,2022-05-02T12:25:06Z,2022-05-02T12:25:06Z,MERGED,True,9,1,3,https://github.com/zack-vii,added debian-bullseye,2,[],https://github.com/MDSplus/mdsplus/pull/2460,https://github.com/zack-vii,2,https://github.com/MDSplus/mdsplus/pull/2460#issuecomment-1112989018,,retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2461,2022-04-29T07:54:07Z,,2022-05-02T12:36:07Z,OPEN,False,45,37,3,https://github.com/GabrieleManduchi,Feature:Add MARTe2 execution without building configuration,2,[],https://github.com/MDSplus/mdsplus/pull/2461,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2461,"Added MARTE2_SUPERVISOR method startMarteStraight that does not breate MARTe2 configuration file
Fixed offsets in MARTE2_NI6368 device setup","Added MARTE2_SUPERVISOR method startMarteStraight that does not breate MARTe2 configuration file
Fixed offsets in MARTE2_NI6368 device setup",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/GabrieleManduchi,1,https://github.com/MDSplus/mdsplus/pull/2462,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else","The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/GabrieleManduchi,2,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1129697881,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,3,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1131629719,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,4,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1131646165,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,5,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1132859256,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,6,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1132873475,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,7,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1132886273,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,8,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1132893484,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,9,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1132894312,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,10,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1132905044,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2462,2022-05-17T13:42:10Z,2022-05-25T12:24:36Z,2022-05-25T12:24:37Z,MERGED,True,6,5,2,https://github.com/GabrieleManduchi,Gm fix mdsip ast,4,[],https://github.com/MDSplus/mdsplus/pull/2462,https://github.com/joshStillerman,11,https://github.com/MDSplus/mdsplus/pull/2462#issuecomment-1134859348,"The last re-organization of mdstcpip broke the management of events. The reason is  due to the fact that the connection id passed to the MdsEventList struct in MdsEventAst cannot be used anymore to retrieve the Connection structure since the structures used by FindConnection turn out to have been freed before the occurrence of the MDS event.
The fix consists in recording directly the Connection structure pointer in the MdsEventAst structure passed to the event AST in place of the connection id.
Timo, Josh, please check if this fix (that apparently solves the issue) does not break anything else",retest this please,True,{}
MDSplus/mdsplus,https://github.com/MDSplus/mdsplus,2463,2022-05-26T18:13:28Z,,2022-05-27T20:11:39Z,OPEN,False,85,50,7,https://github.com/joshStillerman,Fix: use size of packed NCI instead of 42,1,[],https://github.com/MDSplus/mdsplus/pull/2463,https://github.com/joshStillerman,1,https://github.com/MDSplus/mdsplus/pull/2463,"The code was using the known size of the packed NCI structure (42)
instead of asking the compiler to fill this in for us.
Replace the explicit byte offset memory copies in SerializeNCI with
structure references.","The code was using the known size of the packed NCI structure (42)
instead of asking the compiler to fill this in for us.
Replace the explicit byte offset memory copies in SerializeNCI with
structure references.",True,{}
