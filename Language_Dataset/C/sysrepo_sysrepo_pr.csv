sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,85,2016-03-09T13:25:20Z,2016-03-09T13:37:02Z,2016-03-09T13:37:02Z,MERGED,True,538,21,10,https://github.com/lukasmacko,Locking API,7,[],https://github.com/sysrepo/sysrepo/pull/85,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/85,"(un)lock model
(un)lock datastore","(un)lock model
(un)lock datastore",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,85,2016-03-09T13:25:20Z,2016-03-09T13:37:02Z,2016-03-09T13:37:02Z,MERGED,True,538,21,10,https://github.com/lukasmacko,Locking API,7,[],https://github.com/sysrepo/sysrepo/pull/85,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/85#issuecomment-194298029,"(un)lock model
(un)lock datastore","Current coverage is 77.54%

Merging #85 into master will increase coverage by +0.38% as of 953a8df

@@            master     #85   diff @@
======================================
  Files           16      16       
  Stmts         6671    6884   +213
  Branches         0       0       
  Methods                          
======================================
+ Hit           5148    5338   +190
  Partial          0       0       
- Missed        1523    1546    +23

Review entire Coverage Diff as of 953a8df
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,86,2016-03-10T16:06:46Z,2016-03-11T08:00:08Z,2016-03-11T08:00:08Z,MERGED,True,18,8,2,https://github.com/lukasmacko,Data store lock + public header comment,2,[],https://github.com/sysrepo/sysrepo/pull/86,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/86,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,86,2016-03-10T16:06:46Z,2016-03-11T08:00:08Z,2016-03-11T08:00:08Z,MERGED,True,18,8,2,https://github.com/lukasmacko,Data store lock + public header comment,2,[],https://github.com/sysrepo/sysrepo/pull/86,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/86#issuecomment-194931590,,"Current coverage is 77.51%

Merging #86 into master will decrease coverage by -0.02% as of 30f4b11

@@            master     #86   diff @@
======================================
  Files           16      16       
  Stmts         6883    6892     +9
  Branches         0       0       
  Methods                          
======================================
+ Hit           5337    5342     +5
  Partial          0       0       
- Missed        1546    1550     +4

Review entire Coverage Diff as of 30f4b11
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,87,2016-03-11T13:17:41Z,2016-03-11T14:04:06Z,2016-10-07T10:42:43Z,MERGED,True,482,135,8,https://github.com/lukasmacko,Session refresh,7,[],https://github.com/sysrepo/sysrepo/pull/87,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/87,refactor up to date check of data tree copy,refactor up to date check of data tree copy,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,87,2016-03-11T13:17:41Z,2016-03-11T14:04:06Z,2016-10-07T10:42:43Z,MERGED,True,482,135,8,https://github.com/lukasmacko,Session refresh,7,[],https://github.com/sysrepo/sysrepo/pull/87,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/87#issuecomment-195361881,refactor up to date check of data tree copy,"Current coverage is 77.66%

Merging #87 into master will increase coverage by +0.11% as of 5f1e176

@@            master     #87   diff @@
======================================
  Files           16      16       
  Stmts         6892    7024   +132
  Branches         0       0       
  Methods                          
======================================
+ Hit           5345    5455   +110
  Partial          0       0       
- Missed        1547    1569    +22

Review entire Coverage Diff as of 5f1e176
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,88,2016-03-15T14:56:47Z,2016-03-16T08:20:13Z,2016-03-16T08:20:13Z,MERGED,True,2655,290,24,https://github.com/rastislavs,module_install and feature_enable notifications,36,[],https://github.com/sysrepo/sysrepo/pull/88,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/88,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,88,2016-03-15T14:56:47Z,2016-03-16T08:20:13Z,2016-03-16T08:20:13Z,MERGED,True,2655,290,24,https://github.com/rastislavs,module_install and feature_enable notifications,36,[],https://github.com/sysrepo/sysrepo/pull/88,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/88#issuecomment-196865501,,"Current coverage is 77.68%

Merging #88 into master will increase coverage by +0.01% as of 4ceeae7

@@            master     #88   diff @@
======================================
  Files           16      18     +2
  Stmts         7025    7914   +889
  Branches         0       0       
  Methods                          
======================================
+ Hit           5457    6148   +691
  Partial          0       0       
- Missed        1568    1766   +198

Review entire Coverage Diff as of 4ceeae7
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,89,2016-03-16T14:59:18Z,2016-03-16T15:16:09Z,2016-03-16T15:16:09Z,MERGED,True,3,3,1,https://github.com/lukasmacko,dm: parse and validate only config data,1,[],https://github.com/sysrepo/sysrepo/pull/89,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/89,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,89,2016-03-16T14:59:18Z,2016-03-16T15:16:09Z,2016-03-16T15:16:09Z,MERGED,True,3,3,1,https://github.com/lukasmacko,dm: parse and validate only config data,1,[],https://github.com/sysrepo/sysrepo/pull/89,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/89#issuecomment-197376928,,"Current coverage is 77.66%

Merging #89 into master will decrease coverage by -0.03% as of b389d76

@@            master     #89   diff @@
======================================
  Files           18      18       
  Stmts         7913    7912     -1
  Branches         0       0       
  Methods                          
======================================
- Hit           6148    6145     -3
  Partial          0       0       
- Missed        1765    1767     +2

Review entire Coverage Diff as of b389d76
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,90,2016-03-18T09:39:55Z,2016-03-18T13:49:54Z,2016-03-18T13:49:54Z,MERGED,True,1405,707,21,https://github.com/rastislavs,notification session auto-creation,13,[],https://github.com/sysrepo/sysrepo/pull/90,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/90,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,90,2016-03-18T09:39:55Z,2016-03-18T13:49:54Z,2016-03-18T13:49:54Z,MERGED,True,1405,707,21,https://github.com/rastislavs,notification session auto-creation,13,[],https://github.com/sysrepo/sysrepo/pull/90,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/90#issuecomment-198284217,,"Current coverage is 77.70%

Merging #90 into master will increase coverage by +0.01% as of cb36ca7

@@            master    #90   diff @@
=====================================
  Files           18     19     +1
  Stmts         7913   8171   +258
  Branches         0      0       
  Methods                         
=====================================
+ Hit           6148   6349   +201
  Partial          0      0       
- Missed        1765   1822    +57

Review entire Coverage Diff as of cb36ca7
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,91,2016-03-22T14:37:57Z,2016-03-22T14:48:27Z,2016-03-22T14:48:27Z,MERGED,True,126,29,7,https://github.com/lukasmacko,Feature enable isntall module support in data manager,7,[],https://github.com/sysrepo/sysrepo/pull/91,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/91,fix SA,fix SA,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,92,2016-03-22T16:07:16Z,2016-03-23T07:09:51Z,2016-03-23T07:09:51Z,MERGED,True,550,12,6,https://github.com/rastislavs,sysrepoctl basic functionality,6,[],https://github.com/sysrepo/sysrepo/pull/92,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/92,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,92,2016-03-22T16:07:16Z,2016-03-23T07:09:51Z,2016-03-23T07:09:51Z,MERGED,True,550,12,6,https://github.com/rastislavs,sysrepoctl basic functionality,6,[],https://github.com/sysrepo/sysrepo/pull/92,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/92#issuecomment-199887286,,"Current coverage is 77.93%

Merging #92 into master will increase coverage by +0.31% as of 6c4b6b3

@@            master     #92   diff @@
======================================
  Files           19      19       
  Stmts         8198    8204     +6
  Branches         0       0       
  Methods                          
======================================
+ Hit           6364    6394    +30
  Partial          0       0       
+ Missed        1834    1810    -24

Review entire Coverage Diff as of 6c4b6b3
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,93,2016-03-24T15:28:27Z,2016-03-29T06:43:32Z,2016-10-07T10:42:44Z,MERGED,True,1295,37,26,https://github.com/lukasmacko,Swig + enabled features +uninstall module,22,[],https://github.com/sysrepo/sysrepo/pull/93,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/93,"python bindigs + concurrent test infrastructure
commit & locking test
list schema includes enabled features
uninstall module disables module","python bindigs + concurrent test infrastructure
commit & locking test
list schema includes enabled features
uninstall module disables module",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,93,2016-03-24T15:28:27Z,2016-03-29T06:43:32Z,2016-10-07T10:42:44Z,MERGED,True,1295,37,26,https://github.com/lukasmacko,Swig + enabled features +uninstall module,22,[],https://github.com/sysrepo/sysrepo/pull/93,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/93#issuecomment-200891116,"python bindigs + concurrent test infrastructure
commit & locking test
list schema includes enabled features
uninstall module disables module","Current coverage is 78.16%

Merging #93 into master will increase coverage by +0.23% as of 4fdf9a2

@@            master     #93   diff @@
======================================
  Files           19      19       
  Stmts         8202    8256    +54
  Branches         0       0       
  Methods                          
======================================
+ Hit           6392    6453    +61
  Partial          0       0       
+ Missed        1810    1803     -7

Review entire Coverage Diff as of 4fdf9a2
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,94,2016-03-29T08:33:05Z,2016-03-29T08:48:48Z,2016-03-29T08:48:48Z,MERGED,True,6,2,2,https://github.com/rastislavs,SA fix,1,[],https://github.com/sysrepo/sysrepo/pull/94,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/94,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,94,2016-03-29T08:33:05Z,2016-03-29T08:48:48Z,2016-03-29T08:48:48Z,MERGED,True,6,2,2,https://github.com/rastislavs,SA fix,1,[],https://github.com/sysrepo/sysrepo/pull/94,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/94#issuecomment-202780169,,"Current coverage is 78.15%

Merging #94 into master will increase coverage by +0.04% as of c7c22da

@@            master     #94   diff @@
======================================
  Files           19      19       
  Stmts         8257    8259     +2
  Branches         0       0       
  Methods                          
======================================
+ Hit           6450    6455     +5
  Partial          0       0       
+ Missed        1807    1804     -3

Review entire Coverage Diff as of c7c22da
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,95,2016-04-01T06:15:20Z,2016-04-01T06:26:54Z,2016-04-01T06:26:54Z,MERGED,True,22,20,6,https://github.com/lukasmacko,Migrate to libyang 0.8,6,[],https://github.com/sysrepo/sysrepo/pull/95,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/95,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,95,2016-04-01T06:15:20Z,2016-04-01T06:26:54Z,2016-04-01T06:26:54Z,MERGED,True,22,20,6,https://github.com/lukasmacko,Migrate to libyang 0.8,6,[],https://github.com/sysrepo/sysrepo/pull/95,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/95#issuecomment-204267815,,"Current coverage is 78.09%

Merging #95 into master will decrease coverage by -0.02% as of 4776655

@@            master     #95   diff @@
======================================
  Files           19      19       
  Stmts         8258    8257     -1
  Branches         0       0       
  Methods                          
======================================
- Hit           6451    6448     -3
  Partial          0       0       
- Missed        1807    1809     +2

Review entire Coverage Diff as of 4776655
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,96,2016-04-01T13:11:27Z,2016-04-01T13:31:14Z,2016-04-01T13:31:14Z,MERGED,True,1069,105,39,https://github.com/rastislavs,persistence manager,20,[],https://github.com/sysrepo/sysrepo/pull/96,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/96,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,96,2016-04-01T13:11:27Z,2016-04-01T13:31:14Z,2016-04-01T13:31:14Z,MERGED,True,1069,105,39,https://github.com/rastislavs,persistence manager,20,[],https://github.com/sysrepo/sysrepo/pull/96,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/96#issuecomment-204394773,,"Current coverage is 78.30%

Merging #96 into master will increase coverage by +0.15% as of 7b23a1c

@@            master    #96   diff @@
=====================================
  Files           19     20     +1
  Stmts         8259   8489   +230
  Branches         0      0       
  Methods                         
=====================================
+ Hit           6455   6647   +192
  Partial          0      0       
- Missed        1804   1842    +38

Review entire Coverage Diff as of 7b23a1c
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,97,2016-04-08T11:20:34Z,2016-04-08T11:31:28Z,2016-10-07T10:42:46Z,MERGED,True,938,3271,54,https://github.com/lukasmacko,Libyang xpath,23,[],https://github.com/sysrepo/sysrepo/pull/97,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/97,"to select content of the containers and list /* must be appended at the end of the xpath
sr_get_items_iter removed recursive option, append //* at the end of the xpath to get recursive behaviou
r
create example-module by helper module","to select content of the containers and list /* must be appended at the end of the xpath
sr_get_items_iter removed recursive option, append //* at the end of the xpath to get recursive behaviou
r
create example-module by helper module",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,97,2016-04-08T11:20:34Z,2016-04-08T11:31:28Z,2016-10-07T10:42:46Z,MERGED,True,938,3271,54,https://github.com/lukasmacko,Libyang xpath,23,[],https://github.com/sysrepo/sysrepo/pull/97,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/97#issuecomment-207391782,"to select content of the containers and list /* must be appended at the end of the xpath
sr_get_items_iter removed recursive option, append //* at the end of the xpath to get recursive behaviou
r
create example-module by helper module","Current coverage is 78.44%

Merging #97 into master will increase coverage by +0.15% as of 0b2bd6d

@@            master     #97   diff @@
======================================
  Files           20      18     -2
  Stmts         8485    7709   -776
  Branches         0       0       
  Methods                          
======================================
- Hit           6643    6047   -596
  Partial          0       0       
+ Missed        1842    1662   -180

Review entire Coverage Diff as of 0b2bd6d
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,98,2016-04-08T12:48:03Z,2016-04-08T13:01:44Z,2016-04-08T13:01:44Z,MERGED,True,2507,250,47,https://github.com/rastislavs,sysrepoctl enhancements,27,[],https://github.com/sysrepo/sysrepo/pull/98,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/98,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,99,2016-04-08T13:49:13Z,2016-04-08T14:14:09Z,2016-04-08T14:14:09Z,MERGED,True,11,14,3,https://github.com/lukasmacko,Fix SA,4,[],https://github.com/sysrepo/sysrepo/pull/99,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/99,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,99,2016-04-08T13:49:13Z,2016-04-08T14:14:09Z,2016-04-08T14:14:09Z,MERGED,True,11,14,3,https://github.com/lukasmacko,Fix SA,4,[],https://github.com/sysrepo/sysrepo/pull/99,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/99#issuecomment-207447130,,"Current coverage is 78.60%

Merging #99 into master will increase coverage by +0.02% as of 822044f

@@            master    #99   diff @@
=====================================
  Files           19     19       
  Stmts         8363   8362     -1
  Branches         0      0       
  Methods                         
=====================================
+ Hit           6572   6573     +1
  Partial          0      0       
+ Missed        1791   1789     -2

Review entire Coverage Diff as of 822044f
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,100,2016-04-08T14:07:40Z,2016-04-08T14:42:25Z,2016-04-08T14:42:25Z,MERGED,True,31,15,3,https://github.com/rastislavs,"SA fixes, turing-machine model setup by installation",6,[],https://github.com/sysrepo/sysrepo/pull/100,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/100,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,100,2016-04-08T14:07:40Z,2016-04-08T14:42:25Z,2016-04-08T14:42:25Z,MERGED,True,31,15,3,https://github.com/rastislavs,"SA fixes, turing-machine model setup by installation",6,[],https://github.com/sysrepo/sysrepo/pull/100,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/100#issuecomment-207445886,,"Current coverage is 78.56%

Merging #100 into master will decrease coverage by -0.06% as of 98ae7c9

@@            master    #100   diff @@
======================================
  Files           19      19       
  Stmts         8365    8368     +3
  Branches         0       0       
  Methods                          
======================================
- Hit           6577    6574     -3
  Partial          0       0       
- Missed        1788    1794     +6

Review entire Coverage Diff as of 98ae7c9
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,101,2016-04-08T14:59:59Z,2016-04-11T06:33:24Z,2016-04-11T06:33:24Z,MERGED,True,2,0,1,https://github.com/rastislavs,fixed SA issues,2,[],https://github.com/sysrepo/sysrepo/pull/101,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/101,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,101,2016-04-08T14:59:59Z,2016-04-11T06:33:24Z,2016-04-11T06:33:24Z,MERGED,True,2,0,1,https://github.com/rastislavs,fixed SA issues,2,[],https://github.com/sysrepo/sysrepo/pull/101,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/101#issuecomment-207472769,,"Current coverage is 78.61%

Merging #101 into master will increase coverage by +0.04% as of 9933fa4

@@            master    #101   diff @@
======================================
  Files           19      19       
  Stmts         8368    8370     +2
  Branches         0       0       
  Methods                          
======================================
+ Hit           6575    6580     +5
  Partial          0       0       
+ Missed        1793    1790     -3

Review entire Coverage Diff as of 9933fa4
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,102,2016-04-11T11:55:32Z,2016-04-11T13:37:29Z,2016-04-11T13:37:29Z,MERGED,True,123,51,4,https://github.com/rastislavs,documentation updates - sysrepoctl,4,[],https://github.com/sysrepo/sysrepo/pull/102,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/102,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,102,2016-04-11T11:55:32Z,2016-04-11T13:37:29Z,2016-04-11T13:37:29Z,MERGED,True,123,51,4,https://github.com/rastislavs,documentation updates - sysrepoctl,4,[],https://github.com/sysrepo/sysrepo/pull/102,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/102#issuecomment-208310471,,"Current coverage is 78.57%

Merging #102 into master will not affect coverage as of 7510ca7

@@            master    #102   diff @@
======================================
  Files           19      19       
  Stmts         8370    8370       
  Branches         0       0       
  Methods                          
======================================
  Hit           6577    6577       
  Partial          0       0       
  Missed        1793    1793       

Review entire Coverage Diff as of 7510ca7
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,103,2016-04-11T14:30:17Z,2016-04-12T10:22:03Z,2016-04-12T10:22:03Z,MERGED,True,57,47,4,https://github.com/lukasmacko,Do not log NOT_FOUND as an error,3,[],https://github.com/sysrepo/sysrepo/pull/103,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/103,refactor some functions to use ly_set instead of array,refactor some functions to use ly_set instead of array,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,103,2016-04-11T14:30:17Z,2016-04-12T10:22:03Z,2016-04-12T10:22:03Z,MERGED,True,57,47,4,https://github.com/lukasmacko,Do not log NOT_FOUND as an error,3,[],https://github.com/sysrepo/sysrepo/pull/103,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/103#issuecomment-208375216,refactor some functions to use ly_set instead of array,"Current coverage is 78.50%

Merging #103 into master will decrease coverage by -0.07% as of 3a28d0e

@@            master   #103   diff @@
=====================================
  Files           19     19       
  Stmts         8369   8377     +8
  Branches         0      0       
  Methods                         
=====================================
  Hit           6576   6576       
  Partial          0      0       
- Missed        1793   1801     +8

Review entire Coverage Diff as of 3a28d0e
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,104,2016-04-12T12:47:02Z,2016-04-12T12:58:21Z,2016-04-12T12:58:21Z,MERGED,True,310,147,4,https://github.com/lukasmacko,Copy config support DM,4,[],https://github.com/sysrepo/sysrepo/pull/104,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/104,"CHECK_RC* macros
use CHECK* macros in data manager","CHECK_RC* macros
use CHECK* macros in data manager",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,104,2016-04-12T12:47:02Z,2016-04-12T12:58:21Z,2016-04-12T12:58:21Z,MERGED,True,310,147,4,https://github.com/lukasmacko,Copy config support DM,4,[],https://github.com/sysrepo/sysrepo/pull/104,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/104#issuecomment-208892602,"CHECK_RC* macros
use CHECK* macros in data manager","Current coverage is 79.38%

Merging #104 into master will increase coverage by +0.93% as of 364dd30

@@            master    #104   diff @@
======================================
  Files           19      19       
  Stmts         8377    8411    +34
  Branches         0       0       
  Methods                          
======================================
+ Hit           6572    6677   +105
  Partial          0       0       
+ Missed        1805    1734    -71

Review entire Coverage Diff as of 364dd30
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,105,2016-04-13T09:13:38Z,2016-04-13T09:27:26Z,2016-04-13T09:27:26Z,MERGED,True,243,256,17,https://github.com/lukasmacko,Time out error + python wrapper update,5,[],https://github.com/sysrepo/sysrepo/pull/105,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/105,remvoe unused wrapper from test,remvoe unused wrapper from test,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,105,2016-04-13T09:13:38Z,2016-04-13T09:27:26Z,2016-04-13T09:27:26Z,MERGED,True,243,256,17,https://github.com/lukasmacko,Time out error + python wrapper update,5,[],https://github.com/sysrepo/sysrepo/pull/105,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/105#issuecomment-209330782,remvoe unused wrapper from test,"Current coverage is 79.47%

Merging #105 into master will increase coverage by +0.14% as of 10e6478

@@            master    #105   diff @@
======================================
  Files           19      19       
  Stmts         8412    8428    +16
  Branches         0       0       
  Methods                          
======================================
+ Hit           6674    6698    +24
  Partial          0       0       
+ Missed        1738    1730     -8

Review entire Coverage Diff as of 10e6478
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,106,2016-04-13T11:14:12Z,2016-04-13T11:54:05Z,2016-04-13T11:54:05Z,MERGED,True,874,658,21,https://github.com/rastislavs,notifications POC,15,[],https://github.com/sysrepo/sysrepo/pull/106,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/106,works only when sysrepo daemon is running,works only when sysrepo daemon is running,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,106,2016-04-13T11:14:12Z,2016-04-13T11:54:05Z,2016-04-13T11:54:05Z,MERGED,True,874,658,21,https://github.com/rastislavs,notifications POC,15,[],https://github.com/sysrepo/sysrepo/pull/106,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/106#issuecomment-209372032,works only when sysrepo daemon is running,"Current coverage is 81.47%

Merging #106 into master will increase coverage by +2.00% as of de46b01

@@            master    #106   diff @@
======================================
  Files           19      19       
  Stmts         8429    8301   -128
  Branches         0       0       
  Methods                          
======================================
+ Hit           6699    6763    +64
  Partial          0       0       
+ Missed        1730    1538   -192

Review entire Coverage Diff as of de46b01
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,107,2016-04-13T13:34:00Z,2016-04-13T13:48:14Z,2016-04-13T13:48:14Z,MERGED,True,11,1,2,https://github.com/rastislavs,fix: make the unix-domain socket writeable to anyone,1,[],https://github.com/sysrepo/sysrepo/pull/107,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/107,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,107,2016-04-13T13:34:00Z,2016-04-13T13:48:14Z,2016-04-13T13:48:14Z,MERGED,True,11,1,2,https://github.com/rastislavs,fix: make the unix-domain socket writeable to anyone,1,[],https://github.com/sysrepo/sysrepo/pull/107,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/107#issuecomment-209446966,,"Current coverage is 81.50%

Merging #107 into master will increase coverage by +0.05% as of f25f98f

@@            master   #107   diff @@
=====================================
  Files           19     19       
  Stmts         8300   8304     +4
  Branches         0      0       
  Methods                         
=====================================
+ Hit           6761   6768     +7
  Partial          0      0       
+ Missed        1539   1536     -3

Review entire Coverage Diff as of f25f98f
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,108,2016-04-13T13:56:42Z,2016-04-13T14:08:49Z,2016-04-13T14:08:49Z,MERGED,True,74,71,17,https://github.com/lukasmacko,Python test runner + SR_ERR_NOT_FOUND,7,[],https://github.com/sysrepo/sysrepo/pull/108,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/108,"change python test runner to accept python path
set up python wrappers to be installed
do not log sr_err_not_found in rp","change python test runner to accept python path
set up python wrappers to be installed
do not log sr_err_not_found in rp",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,108,2016-04-13T13:56:42Z,2016-04-13T14:08:49Z,2016-04-13T14:08:49Z,MERGED,True,74,71,17,https://github.com/lukasmacko,Python test runner + SR_ERR_NOT_FOUND,7,[],https://github.com/sysrepo/sysrepo/pull/108,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/108#issuecomment-209453851,"change python test runner to accept python path
set up python wrappers to be installed
do not log sr_err_not_found in rp","Current coverage is 81.54%

Merging #108 into master will increase coverage by +0.10% as of 99653fa

@@            master    #108   diff @@
======================================
  Files           19      19       
  Stmts         8306    8302     -4
  Branches         0       0       
  Methods                          
======================================
+ Hit           6765    6770     +5
  Partial          0       0       
+ Missed        1541    1532     -9

Review entire Coverage Diff as of 99653fa
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,109,2016-04-14T12:21:38Z,2016-04-14T12:55:04Z,2016-04-14T12:55:05Z,MERGED,True,128,44,7,https://github.com/lukasmacko,Get items iter fix,6,[],https://github.com/sysrepo/sysrepo/pull/109,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/109,"fix get items iter cache miss
fix empty string leaf
refactor list schemas + offset counting in cl","fix get items iter cache miss
fix empty string leaf
refactor list schemas + offset counting in cl",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,109,2016-04-14T12:21:38Z,2016-04-14T12:55:04Z,2016-04-14T12:55:05Z,MERGED,True,128,44,7,https://github.com/lukasmacko,Get items iter fix,6,[],https://github.com/sysrepo/sysrepo/pull/109,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/109#issuecomment-209923942,"fix get items iter cache miss
fix empty string leaf
refactor list schemas + offset counting in cl","Current coverage is 81.52%

Merging #109 into master will decrease coverage by -0.02% as of cf68ed8

@@            master    #109   diff @@
======================================
  Files           19      19       
  Stmts         8305    8312     +7
  Branches         0       0       
  Methods                          
======================================
+ Hit           6772    6776     +4
  Partial          0       0       
- Missed        1533    1536     +3

Review entire Coverage Diff as of cf68ed8
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,110,2016-04-14T16:24:16Z,2016-04-15T06:35:14Z,2016-04-15T06:35:14Z,CLOSED,False,29,0,2,https://github.com/mislavn,add default swig bindings for lua,1,[],https://github.com/sysrepo/sysrepo/pull/110,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/110,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,110,2016-04-14T16:24:16Z,2016-04-15T06:35:14Z,2016-04-15T06:35:14Z,CLOSED,False,29,0,2,https://github.com/mislavn,add default swig bindings for lua,1,[],https://github.com/sysrepo/sysrepo/pull/110,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/110#issuecomment-210038734,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Current coverage is 81.52%

Merging #110 into master will increase coverage by +0.02% as of be7de8e

@@            master    #110   diff @@
======================================
  Files           19      19       
  Stmts         8312    8313     +1
  Branches         0       0       
  Methods                          
======================================
+ Hit           6775    6777     +2
  Partial          0       0       
+ Missed        1537    1536     -1

Review entire Coverage Diff as of be7de8e
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,111,2016-04-15T06:48:25Z,2016-04-15T07:06:53Z,2016-11-15T18:02:15Z,MERGED,True,28,0,2,https://github.com/mislavn,Lua,3,[],https://github.com/sysrepo/sysrepo/pull/111,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/111,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,111,2016-04-15T06:48:25Z,2016-04-15T07:06:53Z,2016-11-15T18:02:15Z,MERGED,True,28,0,2,https://github.com/mislavn,Lua,3,[],https://github.com/sysrepo/sysrepo/pull/111,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/111#issuecomment-210318055,,"Current coverage is 81.52%

Merging #111 into master will increase coverage by +0.02% as of 04e4612

@@            master    #111   diff @@
======================================
  Files           19      19       
  Stmts         8312    8312       
  Branches         0       0       
  Methods                          
======================================
+ Hit           6775    6776     +1
  Partial          0       0       
+ Missed        1537    1536     -1

Review entire Coverage Diff as of 04e4612
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,112,2016-04-18T11:57:26Z,2016-04-18T12:52:33Z,2016-04-18T12:52:34Z,MERGED,True,394,148,21,https://github.com/lukasmacko,sr_move_item change API,7,[],https://github.com/sysrepo/sysrepo/pull/112,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/112,"public API change
test added","public API change
test added",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,112,2016-04-18T11:57:26Z,2016-04-18T12:52:33Z,2016-04-18T12:52:34Z,MERGED,True,394,148,21,https://github.com/lukasmacko,sr_move_item change API,7,[],https://github.com/sysrepo/sysrepo/pull/112,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/112#issuecomment-211351690,"public API change
test added","Current coverage is 81.57%

Merging #112 into master will increase coverage by +0.03% as of bc13633

@@            master    #112   diff @@
======================================
  Files           19      19       
  Stmts         8312    8358    +46
  Branches         0       0       
  Methods                          
======================================
+ Hit           6778    6818    +40
  Partial          0       0       
- Missed        1534    1540     +6

Review entire Coverage Diff as of bc13633
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,113,2016-04-19T08:11:11Z,2016-04-19T08:24:01Z,2016-04-19T08:24:01Z,MERGED,True,227,0,5,https://github.com/lukasmacko,Python examples,2,[],https://github.com/sysrepo/sysrepo/pull/113,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/113,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,113,2016-04-19T08:11:11Z,2016-04-19T08:24:01Z,2016-04-19T08:24:01Z,MERGED,True,227,0,5,https://github.com/lukasmacko,Python examples,2,[],https://github.com/sysrepo/sysrepo/pull/113,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/113#issuecomment-211790652,,"Current coverage is 81.61%

Merging #113 into master will increase coverage by +0.03% as of df1ad87

@@            master    #113   diff @@
======================================
  Files           19      19       
  Stmts         8358    8358       
  Branches         0       0       
  Methods                          
======================================
+ Hit           6819    6821     +2
  Partial          0       0       
+ Missed        1539    1537     -2

Review entire Coverage Diff as of df1ad87
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,114,2016-04-20T08:15:35Z,2016-04-20T08:57:04Z,2016-04-20T08:57:04Z,MERGED,True,14,24,5,https://github.com/lukasmacko,Migrate to libyang 0.9.X,2,[],https://github.com/sysrepo/sysrepo/pull/114,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/114,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,114,2016-04-20T08:15:35Z,2016-04-20T08:57:04Z,2016-04-20T08:57:04Z,MERGED,True,14,24,5,https://github.com/lukasmacko,Migrate to libyang 0.9.X,2,[],https://github.com/sysrepo/sysrepo/pull/114,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/114#issuecomment-212333311,,"Current coverage is 81.54%

Merging #114 into master will decrease coverage by -0.02% as of 57ecaa6

@@            master    #114   diff @@
======================================
  Files           19      19       
  Stmts         8358    8349     -9
  Branches         0       0       
  Methods                          
======================================
- Hit           6817    6808     -9
  Partial          0       0       
  Missed        1541    1541       

Review entire Coverage Diff as of 57ecaa6
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,115,2016-04-21T07:45:34Z,2016-04-21T08:31:26Z,2016-04-21T08:31:26Z,MERGED,True,507,4,6,https://github.com/lukasmacko,Performance measurement,5,[],https://github.com/sysrepo/sysrepo/pull/115,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/115,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,115,2016-04-21T07:45:34Z,2016-04-21T08:31:26Z,2016-04-21T08:31:26Z,MERGED,True,507,4,6,https://github.com/lukasmacko,Performance measurement,5,[],https://github.com/sysrepo/sysrepo/pull/115,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/115#issuecomment-212792543,,"Current coverage is 81.56%

Merging #115 into master will increase coverage by +0.03% as of 56fd7d4

@@            master    #115   diff @@
======================================
  Files           19      19       
  Stmts         8349    8350     +1
  Branches         0       0       
  Methods                          
======================================
+ Hit           6807    6811     +4
  Partial          0       0       
+ Missed        1542    1539     -3

Review entire Coverage Diff as of 56fd7d4
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,116,2016-04-21T13:07:25Z,2016-04-21T13:24:56Z,2016-04-21T13:24:56Z,MERGED,True,158,6,9,https://github.com/lukasmacko,sr_val_t add default,2,[],https://github.com/sysrepo/sysrepo/pull/116,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/116,tests,tests,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,116,2016-04-21T13:07:25Z,2016-04-21T13:24:56Z,2016-04-21T13:24:56Z,MERGED,True,158,6,9,https://github.com/lukasmacko,sr_val_t add default,2,[],https://github.com/sysrepo/sysrepo/pull/116,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/116#issuecomment-212917749,tests,"Current coverage is 81.51%

Merging #116 into master will decrease coverage by -0.07% as of 8d36502

@@            master    #116   diff @@
======================================
  Files           19      19       
  Stmts         8350    8360    +10
  Branches         0       0       
  Methods                          
======================================
+ Hit           6812    6815     +3
  Partial          0       0       
- Missed        1538    1545     +7

Review entire Coverage Diff as of 8d36502
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,117,2016-04-22T08:06:13Z,2016-04-22T11:09:52Z,2016-04-22T11:09:52Z,MERGED,True,1814,626,31,https://github.com/rastislavs,Persistent Subscriptions,28,[],https://github.com/sysrepo/sysrepo/pull/117,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/117,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,117,2016-04-22T08:06:13Z,2016-04-22T11:09:52Z,2016-04-22T11:09:52Z,MERGED,True,1814,626,31,https://github.com/rastislavs,Persistent Subscriptions,28,[],https://github.com/sysrepo/sysrepo/pull/117,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/117#issuecomment-213322211,,"Current coverage is 81.40%

Merging #117 into master will decrease coverage by -0.14% as of 92a0293

@@            master   #117   diff @@
=====================================
  Files           19     19       
  Stmts         8359   8729   +370
  Branches         0      0       
  Methods                         
=====================================
+ Hit           6816   7106   +290
  Partial          0      0       
- Missed        1543   1623    +80

Review entire Coverage Diff as of 92a0293
Powered by Codecov. Updated on successful CI builds.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,118,2016-04-25T08:24:23Z,2016-04-25T08:44:50Z,2016-04-25T08:44:50Z,MERGED,True,182,51,11,https://github.com/lukasmacko,Disable xpath checking + schema info + locking,5,[],https://github.com/sysrepo/sysrepo/pull/118,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/118,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,119,2016-04-25T09:01:19Z,2016-04-25T09:17:45Z,2016-04-25T09:17:45Z,MERGED,True,261,165,10,https://github.com/rastislavs,running DS disable - RP nad NP preparation,5,[],https://github.com/sysrepo/sysrepo/pull/119,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/119,np_notification_unsubscribe & np_unsubscribe_destination contain a TODO where DM module's running DS disable calls should be added,np_notification_unsubscribe & np_unsubscribe_destination contain a TODO where DM module's running DS disable calls should be added,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,120,2016-04-25T13:03:10Z,2016-04-25T13:15:26Z,2016-04-25T13:15:26Z,MERGED,True,83,8,5,https://github.com/lukasmacko,Disable module running,3,[],https://github.com/sysrepo/sysrepo/pull/120,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/120,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,121,2016-04-26T11:28:05Z,2016-04-26T13:32:34Z,2016-04-26T13:32:34Z,MERGED,True,16,19,4,https://github.com/lukasmacko,Enable loading schemas from YANG,6,[],https://github.com/sysrepo/sysrepo/pull/121,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/121,"python concurrent helpers
remove unused","python concurrent helpers
remove unused",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,121,2016-04-26T11:28:05Z,2016-04-26T13:32:34Z,2016-04-26T13:32:34Z,MERGED,True,16,19,4,https://github.com/lukasmacko,Enable loading schemas from YANG,6,[],https://github.com/sysrepo/sysrepo/pull/121,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/121#issuecomment-214725967,"python concurrent helpers
remove unused","Current coverage is 75.43%

Merging #121 into master will increase coverage by +<.01%

@@             master       #121   diff @@
==========================================
  Files            38         38            
  Lines         12945      12945            
  Methods           0          0            
  Messages      36904      73812   +36908   
  Branches       3031       3032       +1   
==========================================
+ Hits           9761       9765       +4   
+ Misses         1705       1700       -5   
- Partials       1479       1480       +1   

5 files (not in diff) in src were modified. more

Misses -5
Partials +1
Hits +4





Powered by Codecov. Last updated by 1d5a7f2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,122,2016-04-26T14:07:19Z,2016-04-27T05:55:58Z,2016-04-27T05:55:58Z,MERGED,True,7541,60,28,https://github.com/rastislavs,"change of build settings, example modules installation",16,[],https://github.com/sysrepo/sysrepo/pull/122,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/122,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,123,2016-04-28T09:15:22Z,2016-04-28T10:16:55Z,2016-04-28T10:16:55Z,MERGED,True,220,9133,37,https://github.com/rastislavs,"several fixes, support of YANG schemas",13,[],https://github.com/sysrepo/sysrepo/pull/123,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/123,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,124,2016-04-28T12:02:58Z,2016-04-28T13:20:58Z,2016-04-28T13:20:58Z,MERGED,True,350,24,12,https://github.com/lukasmacko,Subscription test,7,[],https://github.com/sysrepo/sysrepo/pull/124,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/124,fixes,fixes,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,125,2016-04-28T17:49:49Z,2016-05-04T07:34:36Z,2016-05-17T16:01:33Z,CLOSED,False,1348,28,24,https://github.com/mislavn,add initial version of the C++ API,1,[],https://github.com/sysrepo/sysrepo/pull/125,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/125,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,125,2016-04-28T17:49:49Z,2016-05-04T07:34:36Z,2016-05-17T16:01:33Z,CLOSED,False,1348,28,24,https://github.com/mislavn,add initial version of the C++ API,1,[],https://github.com/sysrepo/sysrepo/pull/125,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/125#issuecomment-215513260,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Current coverage is 81.71%

Merging #125 into master will decrease coverage by -1.51%


2 files (not in diff) in src/executables were deleted. more
3 files (not in diff) in src/common were deleted. more
3 files (not in diff) in src were created. more
5 files (not in diff) in src were modified. more

Misses +300
Hits +1172



@@             master       #125   diff @@
==========================================
  Files            21         19     -2   
  Lines          8684       8832   +148   
  Methods           0          0          
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           7227       7217    -10   
- Misses         1457       1615   +158   
  Partials          0          0          

Powered by Codecov. Last updated by 7757ab4...ac183f8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,125,2016-04-28T17:49:49Z,2016-05-04T07:34:36Z,2016-05-17T16:01:33Z,CLOSED,False,1348,28,24,https://github.com/mislavn,add initial version of the C++ API,1,[],https://github.com/sysrepo/sysrepo/pull/125,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/125#issuecomment-216766838,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,please use devel-cpp branch for this pull request,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,126,2016-04-29T11:23:34Z,2016-04-29T13:06:16Z,2016-04-29T13:06:16Z,MERGED,True,125,147,3,https://github.com/rastislavs,bug fixes,5,[],https://github.com/sysrepo/sysrepo/pull/126,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/126,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,127,2016-05-02T06:43:47Z,2016-05-02T07:32:20Z,2016-05-02T07:32:20Z,MERGED,True,281,273,12,https://github.com/lukasmacko,Comments + indentation,5,[],https://github.com/sysrepo/sysrepo/pull/127,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/127,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,127,2016-05-02T06:43:47Z,2016-05-02T07:32:20Z,2016-05-02T07:32:20Z,MERGED,True,281,273,12,https://github.com/lukasmacko,Comments + indentation,5,[],https://github.com/sysrepo/sysrepo/pull/127,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/127#issuecomment-216119088,,"Current coverage is 81.75%

Merging #127 into master will increase coverage by +16.67%


5 files in src were modified. more

Misses +1
Partials -283
Hits +282


3 files (not in diff) in src/common were modified. more

Partials -359
Hits +359


11 files (not in diff) in src were modified. more

Partials -720
Hits +719



@@             master       #127   diff @@
==========================================
  Files            19         19            
  Lines          8831       8831            
  Methods           0          0            
  Messages      36776          0   -36776   
  Branches       2898          0    -2898   
==========================================
+ Hits           5747       7219    +1472   
- Misses         1611       1612       +1   
+ Partials       1473          0    -1473   

Powered by Codecov. Last updated by cf97596...ff8e0cd",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,128,2016-05-02T11:05:49Z,2016-05-02T11:28:36Z,2016-05-02T11:28:36Z,MERGED,True,14,47,9,https://github.com/lukasmacko,remove rp_datatree.h + fix typo,3,[],https://github.com/sysrepo/sysrepo/pull/128,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/128,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,128,2016-05-02T11:05:49Z,2016-05-02T11:28:36Z,2016-05-02T11:28:36Z,MERGED,True,14,47,9,https://github.com/lukasmacko,remove rp_datatree.h + fix typo,3,[],https://github.com/sysrepo/sysrepo/pull/128,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/128#issuecomment-216208880,,"Current coverage is 81.73%

Merging #128 into master will increase coverage by +<.01%


File ...connection_manager.c (not in diff) was modified. more

Misses +2
Partials 0
Hits -2


File .../request_processor.c was modified. more

Misses -3
Partials 0
Hits +3



@@             master       #128   diff @@
==========================================
  Files            19         19          
  Lines          8832       8832          
  Methods           0          0          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           7217       7218     +1   
+ Misses         1615       1614     -1   
  Partials          0          0          

Powered by Codecov. Last updated by 04b354b...b66b736",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,129,2016-05-03T12:02:21Z,2016-05-03T12:47:34Z,2016-05-03T12:47:34Z,MERGED,True,3370,3333,34,https://github.com/rastislavs,"code reorganisation and refactoring, documentation updates",16,[],https://github.com/sysrepo/sysrepo/pull/129,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/129,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,130,2016-05-03T15:06:48Z,2016-05-03T19:06:28Z,2016-05-03T19:06:28Z,MERGED,True,2,2,1,https://github.com/rastislavs,version bump to 0.2.0,1,[],https://github.com/sysrepo/sysrepo/pull/130,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/130,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,130,2016-05-03T15:06:48Z,2016-05-03T19:06:28Z,2016-05-03T19:06:28Z,MERGED,True,2,2,1,https://github.com/rastislavs,version bump to 0.2.0,1,[],https://github.com/sysrepo/sysrepo/pull/130,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/130#issuecomment-216562129,,"Current coverage is 83.15%

Merging #130 into master will decrease coverage by -<.01%


3 files (not in diff) in src were modified. more

Misses +6
Hits -7



@@             master       #130   diff @@
==========================================
  Files            21         21          
  Lines          8684       8683     -1   
  Methods           0          0          
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           7227       7220     -7   
- Misses         1457       1463     +6   
  Partials          0          0          

Powered by Codecov. Last updated by 7757ab4...020d547",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,131,2016-05-04T05:49:40Z,2016-05-04T06:02:01Z,2016-05-04T06:02:01Z,MERGED,True,1,1,1,https://github.com/rastislavs,version bump to 0.3.0,1,[],https://github.com/sysrepo/sysrepo/pull/131,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/131,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,132,2016-05-10T08:23:48Z,2016-05-10T08:56:09Z,2016-05-10T08:56:09Z,MERGED,True,72,17,7,https://github.com/milanlenco,fix bug related to leaf-list with default value +  resolve GCC 5 warnings + temporarily add valgrind suppressions,4,[],https://github.com/sysrepo/sysrepo/pull/132,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/132,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,132,2016-05-10T08:23:48Z,2016-05-10T08:56:09Z,2016-05-10T08:56:09Z,MERGED,True,72,17,7,https://github.com/milanlenco,fix bug related to leaf-list with default value +  resolve GCC 5 warnings + temporarily add valgrind suppressions,4,[],https://github.com/sysrepo/sysrepo/pull/132,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/132#issuecomment-218093217,,"Current coverage is 57.94%

Merging #132 into devel will decrease coverage by -25.26%


2 files (not in diff) in src/executables were modified. more

Partials +98
Hits -98


5 files (not in diff) in src/common were modified. more

Partials +369
Hits -369


13 files (not in diff) in src were modified. more

Misses +3
Partials +1574
Hits -1577


File src/rp_dt_edit.c was modified. more

Misses 0
Partials +146
Hits -146



@@              devel       #132   diff @@
==========================================
  Files            21         21           
  Lines          8684       8685      +1   
  Methods           0        404    +404   
  Messages          0          0           
  Branches          0       2873   +2873   
==========================================
- Hits           7225       5032   -2193   
- Misses         1459       1462      +3   
- Partials          0       2191   +2191   

Powered by Codecov. Last updated by a0be09a...e5eb3ce",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,133,2016-05-10T10:40:53Z,2016-05-10T11:17:20Z,2016-05-10T11:17:20Z,MERGED,True,110,11,8,https://github.com/lukasmacko,Copy config all models + default nodes with empty data tree,4,[],https://github.com/sysrepo/sysrepo/pull/133,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/133,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,134,2016-05-11T08:59:51Z,2016-05-11T09:24:01Z,2016-05-11T09:24:01Z,MERGED,True,1276,288,28,https://github.com/rastislavs,RPC support,22,[],https://github.com/sysrepo/sysrepo/pull/134,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/134,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,135,2016-05-11T11:02:00Z,2016-05-11T11:38:26Z,2016-05-11T11:38:26Z,MERGED,True,14,11,4,https://github.com/rastislavs,fixed issues reported by SA,2,[],https://github.com/sysrepo/sysrepo/pull/135,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/135,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,136,2016-05-16T13:22:41Z,2016-05-17T08:54:46Z,2016-10-07T10:42:48Z,MERGED,True,1634,266,22,https://github.com/lukasmacko,Candidate datastore support,21,[],https://github.com/sysrepo/sysrepo/pull/136,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/136,"locking of lyctx in data manager
copy-config to running
candidate commit
modified models can not be locked
switch session datastore","locking of lyctx in data manager
copy-config to running
candidate commit
modified models can not be locked
switch session datastore",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,136,2016-05-16T13:22:41Z,2016-05-17T08:54:46Z,2016-10-07T10:42:48Z,MERGED,True,1634,266,22,https://github.com/lukasmacko,Candidate datastore support,21,[],https://github.com/sysrepo/sysrepo/pull/136,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/136#issuecomment-219425968,"locking of lyctx in data manager
copy-config to running
candidate commit
modified models can not be locked
switch session datastore","Current coverage is 57.53%

Merging #136 into master will decrease coverage by 0.40%


2 files (not in diff) in src/executables were modified. more

Hits -10


2 files (not in diff) in src/common were modified. more

Hits -9


7 files (not in diff) in src were modified. more

Misses +3
Partials -2
Hits -19


3 files in src/common were modified. more

Hits -6


6 files in src were modified. more

Misses -23
Partials +10
Hits +6



@@             master       #136   diff @@
==========================================
  Files            21         21          
  Lines          9035       9484   +449   
  Methods         419        442    +23   
  Messages          0          0          
  Branches       2988       3146   +158   
==========================================
+ Hits           5234       5456   +222   
- Misses         1506       1608   +102   
- Partials       2295       2420   +125   

Powered by Codecov. Last updated by 3ebc40b...b6f8b91",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,137,2016-05-16T14:29:30Z,2016-05-16T14:31:44Z,2016-05-16T14:31:44Z,CLOSED,False,5,0,1,https://github.com/stevepeak,Add codecov.yml,1,[],https://github.com/sysrepo/sysrepo/pull/137,https://github.com/stevepeak,1,https://github.com/sysrepo/sysrepo/pull/137,"RE https://github.com/codecov/support/issues/193

I'll comment back here when we can merge 👍","RE https://github.com/codecov/support/issues/193

I'll comment back here when we can merge 👍",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,137,2016-05-16T14:29:30Z,2016-05-16T14:31:44Z,2016-05-16T14:31:44Z,CLOSED,False,5,0,1,https://github.com/stevepeak,Add codecov.yml,1,[],https://github.com/sysrepo/sysrepo/pull/137,https://github.com/stevepeak,2,https://github.com/sysrepo/sysrepo/pull/137#issuecomment-219440081,"RE https://github.com/codecov/support/issues/193

I'll comment back here when we can merge 👍",Actually this will be default... so you don't need to merge 👍,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,138,2016-05-17T07:40:14Z,2016-05-17T08:37:34Z,2016-05-17T08:37:34Z,MERGED,True,961,355,8,https://github.com/milanlenco,[SYSRP-50]  Sysrepoctl --install enhancements,7,[],https://github.com/sysrepo/sysrepo/pull/138,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/138,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,138,2016-05-17T07:40:14Z,2016-05-17T08:37:34Z,2016-05-17T08:37:34Z,MERGED,True,961,355,8,https://github.com/milanlenco,[SYSRP-50]  Sysrepoctl --install enhancements,7,[],https://github.com/sysrepo/sysrepo/pull/138,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/138#issuecomment-219645213,,"Current coverage is 66.52%

Merging #138 into master will increase coverage by 8.59%


5 files (not in diff) in src/common were modified. more

Partials -193
Hits +178


15 files (not in diff) in src were modified. more

Misses -4
Partials -562
Hits +538


File ...utables/sysrepoctl.c was modified. more

Misses -9
Partials -4
Hits +8



@@             master       #138   diff @@
==========================================
  Files            21         21           
  Lines          9035       9024     -11   
  Methods         419        428      +9   
  Messages          0          0           
  Branches       2988       1309   -1679   
==========================================
+ Hits           5234       6003    +769   
+ Misses         1506       1489     -17   
+ Partials       2295       1532    -763   

Powered by Codecov. Last updated by 3ebc40b...9e35f00",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,139,2016-05-17T11:11:47Z,2016-05-17T11:34:40Z,2016-05-17T11:34:40Z,MERGED,True,31,13,2,https://github.com/milanlenco,Added support for candidate.lock file to Sysrepoctl + Fix race condition regarding the file removal,2,[],https://github.com/sysrepo/sysrepo/pull/139,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/139,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,140,2016-05-17T12:10:33Z,2016-05-17T12:53:35Z,2016-05-17T12:53:35Z,MERGED,True,1165,410,25,https://github.com/rastislavs,sysrepo plugins support,33,[],https://github.com/sysrepo/sysrepo/pull/140,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/140,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,140,2016-05-17T12:10:33Z,2016-05-17T12:53:35Z,2016-05-17T12:53:35Z,MERGED,True,1165,410,25,https://github.com/rastislavs,sysrepo plugins support,33,[],https://github.com/sysrepo/sysrepo/pull/140,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/140#issuecomment-219701851,,"Current coverage is 84.74%

Merging #140 into master will increase coverage by 18.31%


5 files in src were modified. more

Misses -51
Partials -311
Hits +362


4 files (not in diff) in src/common were modified. more

Misses -9
Partials -117
Hits +126


12 files (not in diff) in src were modified. more

Misses -62
Partials -1144
Hits +1206



@@             master       #140   diff @@
==========================================
  Files            21         22      +1   
  Lines          9534       9674    +140   
  Methods         452        462     +10   
  Messages          0          0           
  Branches       1371       1384     +13   
==========================================
+ Hits           6334       8198   +1864   
+ Misses         1590       1476    -114   
+ Partials       1610          0   -1610   

Powered by Codecov. Last updated by b8be66d...c204d96",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,141,2016-05-17T13:02:42Z,2016-05-17T13:22:59Z,2016-05-17T13:22:59Z,MERGED,True,68,2,3,https://github.com/lukasmacko,Fix SA + sr_session_switch_ds test,4,[],https://github.com/sysrepo/sysrepo/pull/141,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/141,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,142,2016-05-18T08:20:34Z,2016-05-18T08:44:13Z,2016-05-18T08:44:13Z,MERGED,True,60,45,6,https://github.com/lukasmacko,fix create node in choice,7,[],https://github.com/sysrepo/sysrepo/pull/142,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/142,"create ietf-interfaces data tree in python
SA fix","create ietf-interfaces data tree in python
SA fix",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,143,2016-05-18T09:44:51Z,2016-05-18T09:58:15Z,2016-05-18T09:58:15Z,MERGED,True,79,52,8,https://github.com/rastislavs,bug fixes,7,[],https://github.com/sysrepo/sysrepo/pull/143,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/143,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,144,2016-05-18T13:07:09Z,2016-05-19T07:49:53Z,2016-05-19T07:49:53Z,MERGED,True,122,8,5,https://github.com/rastislavs,Documentation updates,9,[],https://github.com/sysrepo/sysrepo/pull/144,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/144,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,145,2016-05-19T06:53:24Z,2016-05-19T07:28:35Z,2016-05-19T07:28:35Z,MERGED,True,61,25,3,https://github.com/lukasmacko,Fix build after migration to libyang 0.9.104,3,[],https://github.com/sysrepo/sysrepo/pull/145,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/145,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,147,2016-05-19T12:37:24Z,2016-05-19T13:24:13Z,2016-05-19T13:24:13Z,MERGED,True,310,256,14,https://github.com/rastislavs,default values support in RPC,6,[],https://github.com/sysrepo/sysrepo/pull/147,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/147,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,148,2016-05-20T07:27:02Z,2016-05-20T07:41:16Z,2016-05-20T07:41:16Z,MERGED,True,206,41,7,https://github.com/rastislavs,Notifications API,4,[],https://github.com/sysrepo/sysrepo/pull/148,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/148,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,150,2016-05-20T13:47:10Z,2016-05-20T14:09:16Z,2016-05-20T14:09:16Z,MERGED,True,15,2,3,https://github.com/lukasmacko,Copy empty data tree,3,[],https://github.com/sysrepo/sysrepo/pull/150,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/150,comments,comments,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,151,2016-05-20T14:55:40Z,2016-05-20T15:08:05Z,2016-05-20T15:08:05Z,MERGED,True,51,30,3,https://github.com/rastislavs,various fixes,7,[],https://github.com/sysrepo/sysrepo/pull/151,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/151,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,152,2016-05-23T12:51:57Z,2016-05-23T13:10:35Z,2016-05-23T13:10:35Z,MERGED,True,413,157,14,https://github.com/rastislavs,New Notification Processor API,4,[],https://github.com/sysrepo/sysrepo/pull/152,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/152,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,153,2016-05-23T13:00:51Z,2016-05-23T13:37:31Z,2016-05-23T13:37:31Z,MERGED,True,1246,85,11,https://github.com/milanlenco,Sysrepocfg,3,[],https://github.com/sysrepo/sysrepo/pull/153,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/153,An initial implementation of the sysrepocfg tool.,An initial implementation of the sysrepocfg tool.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,154,2016-05-24T08:59:04Z,2016-05-24T09:22:01Z,2016-05-24T09:22:01Z,MERGED,True,124,117,1,https://github.com/milanlenco,sysrepocfg improvements after the code review,3,[],https://github.com/sysrepo/sysrepo/pull/154,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/154,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,155,2016-05-24T13:36:48Z,2016-05-24T14:18:22Z,2016-05-24T14:18:22Z,MERGED,True,7,1,2,https://github.com/lukasmacko,Refresh notification session,1,[],https://github.com/sysrepo/sysrepo/pull/155,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/155,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,156,2016-05-25T09:20:41Z,2016-05-25T10:17:24Z,2016-05-25T10:17:24Z,MERGED,True,23,5,4,https://github.com/rastislavs,bug fixes,2,[],https://github.com/sysrepo/sysrepo/pull/156,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/156,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,157,2016-05-26T08:09:18Z,2016-05-26T08:25:08Z,2016-05-26T08:25:08Z,MERGED,True,142,52,7,https://github.com/lukasmacko,Fix session refresh in cadidate,5,[],https://github.com/sysrepo/sysrepo/pull/157,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/157,other fixes,other fixes,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,157,2016-05-26T08:09:18Z,2016-05-26T08:25:08Z,2016-05-26T08:25:08Z,MERGED,True,142,52,7,https://github.com/lukasmacko,Fix session refresh in cadidate,5,[],https://github.com/sysrepo/sysrepo/pull/157,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/157#issuecomment-221807888,other fixes,"Current coverage is 84.08%

Merging #157 into master will decrease coverage by 0.05%


3 files (not in diff) in src were modified. more

Hits -1


File src/data_manager.c was modified. more

Misses +5
Partials 0
Hits -5



@@             master       #157   diff @@
==========================================
  Files            22         22          
  Lines          9736       9738     +2   
  Methods         461        461          
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           8191       8188     -3   
- Misses         1545       1550     +5   
  Partials          0          0          

Powered by Codecov. Last updated by fc3ec1f...c3bfc5c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,158,2016-05-26T12:48:46Z,2016-05-26T13:04:09Z,2016-05-26T13:04:09Z,MERGED,True,107,61,2,https://github.com/milanlenco,sysrepoctl bug fixes + a simple Request processor fix,4,[],https://github.com/sysrepo/sysrepo/pull/158,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/158,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,159,2016-05-31T09:21:17Z,2016-05-31T10:51:35Z,2016-05-31T10:51:35Z,MERGED,True,954,302,6,https://github.com/milanlenco,sysrepocfg: support running datastore,7,[],https://github.com/sysrepo/sysrepo/pull/159,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/159,"Please update your libyang installation before trying sysrepocfg, multiple issues were found in the library during this task.
Seems to work OK now, but still some more testing is needed I think..","Please update your libyang installation before trying sysrepocfg, multiple issues were found in the library during this task.
Seems to work OK now, but still some more testing is needed I think..",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,159,2016-05-31T09:21:17Z,2016-05-31T10:51:35Z,2016-05-31T10:51:35Z,MERGED,True,954,302,6,https://github.com/milanlenco,sysrepocfg: support running datastore,7,[],https://github.com/sysrepo/sysrepo/pull/159,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/159#issuecomment-222649496,"Please update your libyang installation before trying sysrepocfg, multiple issues were found in the library during this task.
Seems to work OK now, but still some more testing is needed I think..","Current coverage is 83.32%

Merging #159 into devel will decrease coverage by 0.23%


4 files (not in diff) in src were modified. more

Hits +3


3 files in src were modified. more

@@              devel       #159   diff @@
==========================================
  Files            23         23          
  Lines         10239      10497   +258   
  Methods         482        490     +8   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           8555       8746   +191   
- Misses         1684       1751    +67   
  Partials          0          0          

Powered by Codecov. Last updated by 557786f...c38d3b6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,160,2016-05-31T12:09:07Z,2016-05-31T12:47:53Z,2016-10-07T10:42:51Z,MERGED,True,2012,46,20,https://github.com/lukasmacko,Notifications init phase,25,[],https://github.com/sysrepo/sysrepo/pull/160,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/160,"get_changes_iter
get_change_next
read-only data trees","get_changes_iter
get_change_next
read-only data trees",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,160,2016-05-31T12:09:07Z,2016-05-31T12:47:53Z,2016-10-07T10:42:51Z,MERGED,True,2012,46,20,https://github.com/lukasmacko,Notifications init phase,25,[],https://github.com/sysrepo/sysrepo/pull/160,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/160#issuecomment-222672725,"get_changes_iter
get_change_next
read-only data trees","Current coverage is 83.00%

Merging #160 into devel will decrease coverage by 0.35%


2 files (not in diff) in src were modified. more

@@              devel       #160   diff @@
==========================================
  Files            23         23          
  Lines         10496      11187   +691   
  Methods         490        517    +27   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           8748       9285   +537   
- Misses         1748       1902   +154   
  Partials          0          0          

Powered by Codecov. Last updated by 7897ee9...7ff9e5a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,161,2016-06-01T06:17:59Z,2016-06-01T09:02:18Z,2016-06-01T09:02:18Z,MERGED,True,117,90,1,https://github.com/milanlenco,sysrepocfg: fixed locking and coverity warnings,1,[],https://github.com/sysrepo/sysrepo/pull/161,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/161,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,162,2016-06-01T10:08:40Z,2016-06-01T10:21:19Z,2016-06-01T10:21:19Z,MERGED,True,441,277,21,https://github.com/rastislavs,"subscriptions - API changes, NP, PM changes",9,[],https://github.com/sysrepo/sysrepo/pull/162,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/162,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,163,2016-06-01T12:56:08Z,2016-06-01T13:16:16Z,2016-06-01T13:16:16Z,MERGED,True,61,54,5,https://github.com/lukasmacko,Fix SA + update notification test,4,[],https://github.com/sysrepo/sysrepo/pull/163,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/163,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,163,2016-06-01T12:56:08Z,2016-06-01T13:16:16Z,2016-06-01T13:16:16Z,MERGED,True,61,54,5,https://github.com/lukasmacko,Fix SA + update notification test,4,[],https://github.com/sysrepo/sysrepo/pull/163,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/163#issuecomment-222987933,,"Current coverage is 83.09%

Merging #163 into devel will increase coverage by 0.02%


3 files in src were modified. more

Misses -1
Hits +1


2 files (not in diff) in src were modified. more

@@              devel       #163   diff @@
==========================================
  Files            23         23          
  Lines         11263      11268     +5   
  Methods         519        519          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           9357       9363     +6   
+ Misses         1906       1905     -1   
  Partials          0          0          

Powered by Codecov. Last updated by 56ca16e...45790e9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,164,2016-06-01T14:30:13Z,2016-06-02T05:37:25Z,2016-06-02T05:37:25Z,MERGED,True,157,29,10,https://github.com/rastislavs,sr_subtree_change_subscribe implementation,7,[],https://github.com/sysrepo/sysrepo/pull/164,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/164,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,164,2016-06-01T14:30:13Z,2016-06-02T05:37:25Z,2016-06-02T05:37:25Z,MERGED,True,157,29,10,https://github.com/rastislavs,sr_subtree_change_subscribe implementation,7,[],https://github.com/sysrepo/sysrepo/pull/164,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/164#issuecomment-223015236,,"Current coverage is 83.33%

Merging #164 into devel will increase coverage by 0.25%


3 files (not in diff) in src were modified. more

Misses -3
Hits +1


3 files in src were modified. more

Misses -24
Hits +24



@@              devel       #164   diff @@
==========================================
  Files            23         23          
  Lines         11269      11327    +58   
  Methods         519        520     +1   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           9363       9439    +76   
+ Misses         1906       1888    -18   
  Partials          0          0          

Powered by Codecov. Last updated by bbc5da0...5bfc6a2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,165,2016-06-02T10:14:42Z,2016-06-02T10:28:15Z,2016-06-02T10:28:15Z,MERGED,True,156,50,8,https://github.com/rastislavs,enabling of subtrees in running ds,2,[],https://github.com/sysrepo/sysrepo/pull/165,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/165,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,166,2016-06-02T11:16:40Z,2016-06-02T12:35:34Z,2016-06-02T12:35:34Z,MERGED,True,15,11,4,https://github.com/rastislavs,do not do copy-config by loading module enabled in running,1,[],https://github.com/sysrepo/sysrepo/pull/166,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/166,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,170,2016-06-03T10:37:15Z,2016-06-03T10:55:28Z,2016-06-03T10:55:28Z,MERGED,True,816,59,7,https://github.com/lukasmacko,Notificaions imporvements,15,[],https://github.com/sysrepo/sysrepo/pull/170,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/170,"order subscription by priority
generate notification for nodes in case of created/deleted list/container
fix data tree duplication
get changes for whole module
universal get changes app","order subscription by priority
generate notification for nodes in case of created/deleted list/container
fix data tree duplication
get changes for whole module
universal get changes app",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,170,2016-06-03T10:37:15Z,2016-06-03T10:55:28Z,2016-06-03T10:55:28Z,MERGED,True,816,59,7,https://github.com/lukasmacko,Notificaions imporvements,15,[],https://github.com/sysrepo/sysrepo/pull/170,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/170#issuecomment-223549878,"order subscription by priority
generate notification for nodes in case of created/deleted list/container
fix data tree duplication
get changes for whole module
universal get changes app","Current coverage is 83.48%

Merging #170 into devel will increase coverage by 0.07%


4 files (not in diff) in src were modified. more

Misses -2
Hits +1



@@              devel       #170   diff @@
==========================================
  Files            23         23          
  Lines         11372      11411    +39   
  Methods         521        523     +2   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           9486       9526    +40   
+ Misses         1886       1885     -1   
  Partials          0          0          

Powered by Codecov. Last updated by 3563133...ca269c8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,171,2016-06-03T10:54:39Z,2016-06-03T11:39:52Z,2016-06-03T11:39:52Z,MERGED,True,53,13,3,https://github.com/lukasmacko,Update application example,5,[],https://github.com/sysrepo/sysrepo/pull/171,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/171,"specify module to be subscribed by an argument
add print value for different types","specify module to be subscribed by an argument
add print value for different types",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,171,2016-06-03T10:54:39Z,2016-06-03T11:39:52Z,2016-06-03T11:39:52Z,MERGED,True,53,13,3,https://github.com/lukasmacko,Update application example,5,[],https://github.com/sysrepo/sysrepo/pull/171,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/171#issuecomment-223552229,"specify module to be subscribed by an argument
add print value for different types","Current coverage is 83.95%

Merging #171 into master will decrease coverage by <.01%


File src/cl_common.c (not in diff) was modified. more

Misses 0
Partials 0
Hits -1



@@             master       #171   diff @@
==========================================
  Files            22         22          
  Lines          9770       9769     -1   
  Methods         460        460          
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           8202       8201     -1   
  Misses         1568       1568          
  Partials          0          0          

Powered by Codecov. Last updated by fe32d8b...07a894e",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,172,2016-06-03T12:19:57Z,2016-06-03T12:38:33Z,2016-06-03T12:38:33Z,MERGED,True,136,11,5,https://github.com/rastislavs,delayed unsubscribe by subscriber disconnect,6,[],https://github.com/sysrepo/sysrepo/pull/172,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/172,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,172,2016-06-03T12:19:57Z,2016-06-03T12:38:33Z,2016-06-03T12:38:33Z,MERGED,True,136,11,5,https://github.com/rastislavs,delayed unsubscribe by subscriber disconnect,6,[],https://github.com/sysrepo/sysrepo/pull/172,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/172#issuecomment-223566993,,"Current coverage is 83.88%

Merging #172 into master will decrease coverage by 0.07%


3 files (not in diff) in src were modified. more

Misses +3
Hits -4



@@             master       #172   diff @@
==========================================
  Files            22         22          
  Lines          9771       9816    +45   
  Methods         460        462     +2   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           8203       8234    +31   
- Misses         1568       1582    +14   
  Partials          0          0          

Powered by Codecov. Last updated by a3d04f3...817e777",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,173,2016-06-03T13:07:21Z,2016-06-03T20:29:55Z,2016-06-05T05:25:14Z,MERGED,True,5,1,1,https://github.com/fanchanghu,fix for sysrepoctl crash when owner of schema file does not exist,2,[],https://github.com/sysrepo/sysrepo/pull/173,https://github.com/fanchanghu,1,https://github.com/sysrepo/sysrepo/pull/173,"I got this a crash when I use ""sysrepoctl -l"" in my VM, and I try to fix it.","I got this a crash when I use ""sysrepoctl -l"" in my VM, and I try to fix it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,173,2016-06-03T13:07:21Z,2016-06-03T20:29:55Z,2016-06-05T05:25:14Z,MERGED,True,5,1,1,https://github.com/fanchanghu,fix for sysrepoctl crash when owner of schema file does not exist,2,[],https://github.com/sysrepo/sysrepo/pull/173,https://github.com/rastislavs,2,https://github.com/sysrepo/sysrepo/pull/173#issuecomment-223595316,"I got this a crash when I use ""sysrepoctl -l"" in my VM, and I try to fix it.","Hi,
build of your pull request failed, please review the build issue here and fix it: https://travis-ci.org/sysrepo/sysrepo/jobs/135020487
Thanks,
Rastislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,173,2016-06-03T13:07:21Z,2016-06-03T20:29:55Z,2016-06-05T05:25:14Z,MERGED,True,5,1,1,https://github.com/fanchanghu,fix for sysrepoctl crash when owner of schema file does not exist,2,[],https://github.com/sysrepo/sysrepo/pull/173,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/173#issuecomment-223610193,"I got this a crash when I use ""sysrepoctl -l"" in my VM, and I try to fix it.","Current coverage is 83.44%

Merging #173 into devel will decrease coverage by 0.03%


4 files (not in diff) in src were modified. more

Misses +11
Hits +38



@@              devel       #173   diff @@
==========================================
  Files            23         23          
  Lines         11411      11462    +51   
  Methods         523        525     +2   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           9525       9564    +39   
- Misses         1886       1898    +12   
  Partials          0          0          

Powered by Codecov. Last updated by e59dc86...51a5967",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,174,2016-06-06T06:48:05Z,2016-06-06T07:23:37Z,2016-06-06T07:23:37Z,MERGED,True,6,0,2,https://github.com/lukasmacko,Fix change print,1,[],https://github.com/sysrepo/sysrepo/pull/174,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/174,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,174,2016-06-06T06:48:05Z,2016-06-06T07:23:37Z,2016-06-06T07:23:37Z,MERGED,True,6,0,2,https://github.com/lukasmacko,Fix change print,1,[],https://github.com/sysrepo/sysrepo/pull/174,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/174#issuecomment-223883228,,"Current coverage is 83.44%

Merging #174 into devel will decrease coverage by <.01%


File ...rc/common/sr_utils.c (not in diff) was modified. more

Misses 0
Partials 0
Hits -1



@@              devel       #174   diff @@
==========================================
  Files            23         23          
  Lines         11459      11458     -1   
  Methods         525        525          
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           9562       9561     -1   
  Misses         1897       1897          
  Partials          0          0          

Powered by Codecov. Last updated by fd035c8...a6ab936",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,175,2016-06-06T13:32:54Z,2016-06-06T13:48:56Z,2016-06-06T13:48:56Z,MERGED,True,671,294,7,https://github.com/milanlenco,Sysrepocfg finalization,10,[],https://github.com/sysrepo/sysrepo/pull/175,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/175,"Due to multiple issues on the libyang side it took a little longer to get all tests passing. There is still one issue pending, but it shouldn't cause the build to fail. Also I have noticed that if the data tree is too big (e.g. >32000 items) sr_get_items_iter will timeout and thus editing will terminate with error.
Also note that I have added a new (private) API call. Please check if the name and the placement (in sysrepo.proto - Operation) is suitable.
Still to be done: man-page, ascii-demo","Due to multiple issues on the libyang side it took a little longer to get all tests passing. There is still one issue pending, but it shouldn't cause the build to fail. Also I have noticed that if the data tree is too big (e.g. >32000 items) sr_get_items_iter will timeout and thus editing will terminate with error.
Also note that I have added a new (private) API call. Please check if the name and the placement (in sysrepo.proto - Operation) is suitable.
Still to be done: man-page, ascii-demo",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,175,2016-06-06T13:32:54Z,2016-06-06T13:48:56Z,2016-06-06T13:48:56Z,MERGED,True,671,294,7,https://github.com/milanlenco,Sysrepocfg finalization,10,[],https://github.com/sysrepo/sysrepo/pull/175,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/175#issuecomment-223963241,"Due to multiple issues on the libyang side it took a little longer to get all tests passing. There is still one issue pending, but it shouldn't cause the build to fail. Also I have noticed that if the data tree is too big (e.g. >32000 items) sr_get_items_iter will timeout and thus editing will terminate with error.
Also note that I have added a new (private) API call. Please check if the name and the placement (in sysrepo.proto - Operation) is suitable.
Still to be done: man-page, ascii-demo","Current coverage is 83.68%

Merging #175 into devel will increase coverage by 0.23%


2 files in src were modified. more

Misses -8
Hits +8


5 files (not in diff) in src were modified. more

Misses -22
Hits +21



@@              devel       #175   diff @@
==========================================
  Files            23         23          
  Lines         11459      11510    +51   
  Methods         525        525          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           9563       9632    +69   
+ Misses         1896       1878    -18   
  Partials          0          0          

Powered by Codecov. Last updated by 242ee7c...c6c8214",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,176,2016-06-07T07:03:08Z,2016-06-07T07:37:19Z,2016-06-07T07:37:19Z,MERGED,True,410,139,8,https://github.com/lukasmacko,Improvements + bugfixes,13,[],https://github.com/sysrepo/sysrepo/pull/176,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/176,"last commit time
commit context ID duplicates
delete strict with default nodes","last commit time
commit context ID duplicates
delete strict with default nodes",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,176,2016-06-07T07:03:08Z,2016-06-07T07:37:19Z,2016-06-07T07:37:19Z,MERGED,True,410,139,8,https://github.com/lukasmacko,Improvements + bugfixes,13,[],https://github.com/sysrepo/sysrepo/pull/176,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/176#issuecomment-224200100,"last commit time
commit context ID duplicates
delete strict with default nodes","Current coverage is 84.37%

Merging #176 into devel will increase coverage by 0.62%


4 files (not in diff) in src were modified. more

Misses +8
Hits -5


2 files in src were modified. more

Misses -37
Hits +37



@@              devel       #176   diff @@
==========================================
  Files            23         23          
  Lines         11509      11494    -15   
  Methods         525        526     +1   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           9639       9698    +59   
+ Misses         1870       1796    -74   
  Partials          0          0          

Powered by Codecov. Last updated by a8738e7...d07ba94",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,177,2016-06-07T10:41:06Z,2016-06-07T10:53:34Z,2016-06-07T10:53:34Z,MERGED,True,51,95,13,https://github.com/rastislavs,commit_id in notification sessions,6,[],https://github.com/sysrepo/sysrepo/pull/177,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/177,so far without releasing of the sessions,so far without releasing of the sessions,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,178,2016-06-07T13:09:49Z,2016-06-07T13:34:14Z,2016-06-07T13:34:15Z,MERGED,True,174,2,3,https://github.com/milanlenco,sysrepocfg documentation,2,[],https://github.com/sysrepo/sysrepo/pull/178,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/178,"regarding first commit: see CESNET/libyang#77
regarding manpage: feel free to edit/remove/add anything at your own will :)","regarding first commit: see CESNET/libyang#77
regarding manpage: feel free to edit/remove/add anything at your own will :)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,178,2016-06-07T13:09:49Z,2016-06-07T13:34:14Z,2016-06-07T13:34:15Z,MERGED,True,174,2,3,https://github.com/milanlenco,sysrepocfg documentation,2,[],https://github.com/sysrepo/sysrepo/pull/178,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/178#issuecomment-224278482,"regarding first commit: see CESNET/libyang#77
regarding manpage: feel free to edit/remove/add anything at your own will :)","Current coverage is 84.37%

Merging #178 into devel will decrease coverage by 0.01%


3 files (not in diff) in src were modified. more

Misses +2
Hits -3


File ...utables/sysrepocfg.c was modified. more

Misses -1
Partials 0
Hits +1



@@              devel       #178   diff @@
==========================================
  Files            23         23          
  Lines         11482      11480     -2   
  Methods         525        525          
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           9689       9686     -3   
- Misses         1793       1794     +1   
  Partials          0          0          

Powered by Codecov. Last updated by 0397946...f1460bb",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,179,2016-06-08T08:22:35Z,2016-06-08T08:40:49Z,2016-06-08T08:40:49Z,MERGED,True,78,58,11,https://github.com/lukasmacko,Use commit id in notification session + other improvements,7,[],https://github.com/sysrepo/sysrepo/pull/179,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/179,"python test logs improvement
print warning in case of unsuccessful validation for get-like calls and delete","python test logs improvement
print warning in case of unsuccessful validation for get-like calls and delete",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,179,2016-06-08T08:22:35Z,2016-06-08T08:40:49Z,2016-06-08T08:40:49Z,MERGED,True,78,58,11,https://github.com/lukasmacko,Use commit id in notification session + other improvements,7,[],https://github.com/sysrepo/sysrepo/pull/179,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/179#issuecomment-224525519,"python test logs improvement
print warning in case of unsuccessful validation for get-like calls and delete","Current coverage is 84.40%

Merging #179 into devel will increase coverage by 0.05%


3 files (not in diff) in src were modified. more

Misses -5
Hits +5



@@              devel       #179   diff @@
==========================================
  Files            23         23          
  Lines         11481      11494    +13   
  Methods         525        525          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           9684       9701    +17   
+ Misses         1797       1793     -4   
  Partials          0          0          

Powered by Codecov. Last updated by 77bde74...b160c02",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,180,2016-06-08T10:31:12Z,2016-06-08T10:45:07Z,2016-06-08T10:45:07Z,MERGED,True,214,1,4,https://github.com/rastislavs,sr_list implementation,2,[],https://github.com/sysrepo/sysrepo/pull/180,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/180,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,181,2016-06-10T08:16:14Z,2016-06-10T10:46:36Z,2016-06-10T10:46:36Z,MERGED,True,684,176,20,https://github.com/lukasmacko,ly_set ->sr_list and other improvements,12,[],https://github.com/sysrepo/sysrepo/pull/181,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/181,"measure perf update
notification python test","measure perf update
notification python test",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,181,2016-06-10T08:16:14Z,2016-06-10T10:46:36Z,2016-06-10T10:46:36Z,MERGED,True,684,176,20,https://github.com/lukasmacko,ly_set ->sr_list and other improvements,12,[],https://github.com/sysrepo/sysrepo/pull/181,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/181#issuecomment-225123016,"measure perf update
notification python test","Current coverage is 84.48%

Merging #181 into devel will increase coverage by 0.01%


2 files (not in diff) in src/common were modified. more

Misses -1
Hits +2


2 files (not in diff) in src were modified. more
3 files in src were modified. more

@@              devel       #181   diff @@
==========================================
  Files            23         23          
  Lines         11537      11535     -2   
  Methods         530        530          
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           9746       9745     -1   
+ Misses         1791       1790     -1   
  Partials          0          0          

Powered by Codecov. Last updated by 2311c03...b8ff03b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,182,2016-06-13T07:12:10Z,2016-06-13T07:39:18Z,2016-06-13T07:39:18Z,MERGED,True,10,0,1,https://github.com/lukasmacko,List of notified notifications,1,[],https://github.com/sysrepo/sysrepo/pull/182,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/182,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,184,2016-06-13T12:45:57Z,2016-06-13T13:51:39Z,2016-06-13T13:51:40Z,MERGED,True,975,225,16,https://github.com/rastislavs,Notification ACKs & timeouts,12,[],https://github.com/sysrepo/sysrepo/pull/184,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/184,"acknowledgment of notification with notification counting
timeout for releasing of commit contexts","acknowledgment of notification with notification counting
timeout for releasing of commit contexts",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,185,2016-06-14T10:35:14Z,2016-06-14T10:59:48Z,2016-06-14T10:59:48Z,MERGED,True,605,144,6,https://github.com/lukasmacko,Locking set + timed lock macros + fixes,9,[],https://github.com/sysrepo/sysrepo/pull/185,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/185,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,186,2016-06-14T12:59:23Z,2016-06-14T13:27:05Z,2016-06-14T13:27:05Z,MERGED,True,134,95,6,https://github.com/rastislavs,PM locks using sr_locking_set,8,[],https://github.com/sysrepo/sysrepo/pull/186,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/186,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,187,2016-06-14T14:16:24Z,2016-06-15T08:03:21Z,2016-06-15T08:03:21Z,MERGED,True,256,68,8,https://github.com/lukasmacko,Python test improvements,3,[],https://github.com/sysrepo/sysrepo/pull/187,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/187,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,187,2016-06-14T14:16:24Z,2016-06-15T08:03:21Z,2016-06-15T08:03:21Z,MERGED,True,256,68,8,https://github.com/lukasmacko,Python test improvements,3,[],https://github.com/sysrepo/sysrepo/pull/187,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/187#issuecomment-226110620,,"Current coverage is 84.83%

Merging #187 into devel will increase coverage by 0.11%

@@              devel       #187   diff @@
==========================================
  Files            23         23          
  Lines         11940      11939     -1   
  Methods         555        555          
  Messages          0          0          
  Branches       1903       1903          
==========================================
+ Hits          10116      10128    +12   
+ Misses         1824       1811    -13   
  Partials          0          0          

Powered by Codecov. Last updated by 16346ed...85c7765",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,188,2016-06-15T09:10:29Z,2016-06-15T10:02:34Z,2016-06-15T10:02:34Z,MERGED,True,73,51,5,https://github.com/rastislavs,fixed commit release timer,3,[],https://github.com/sysrepo/sysrepo/pull/188,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/188,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,188,2016-06-15T09:10:29Z,2016-06-15T10:02:34Z,2016-06-15T10:02:34Z,MERGED,True,73,51,5,https://github.com/rastislavs,fixed commit release timer,3,[],https://github.com/sysrepo/sysrepo/pull/188,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/188#issuecomment-226134452,,"Current coverage is 84.70%

Merging #188 into devel will decrease coverage by 0.03%

@@              devel       #188   diff @@
==========================================
  Files            23         23          
  Lines         11938      11952    +14   
  Methods         555        556     +1   
  Messages          0          0          
  Branches       1903       1905     +2   
==========================================
+ Hits          10115      10123     +8   
- Misses         1823       1829     +6   
  Partials          0          0          

Powered by Codecov. Last updated by b35af12...165771a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,189,2016-06-15T10:28:11Z,2016-06-15T11:21:08Z,2016-06-15T11:21:08Z,MERGED,True,536,54,15,https://github.com/milanlenco,Leafref support,9,[],https://github.com/sysrepo/sysrepo/pull/189,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/189,Please update libyang to the latest version before trying this feature.,Please update libyang to the latest version before trying this feature.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,189,2016-06-15T10:28:11Z,2016-06-15T11:21:08Z,2016-06-15T11:21:08Z,MERGED,True,536,54,15,https://github.com/milanlenco,Leafref support,9,[],https://github.com/sysrepo/sysrepo/pull/189,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/189#issuecomment-226151810,Please update libyang to the latest version before trying this feature.,"Current coverage is 84.91%

Merging #189 into devel will increase coverage by 0.18%

@@              devel       #189   diff @@
==========================================
  Files            23         23          
  Lines         11954      11971    +17   
  Methods         556        556          
  Messages          0          0          
  Branches       1905       1913     +8   
==========================================
+ Hits          10128      10164    +36   
+ Misses         1826       1807    -19   
  Partials          0          0          

Powered by Codecov. Last updated by 34d1d59...b75dfea",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,189,2016-06-15T10:28:11Z,2016-06-15T11:21:08Z,2016-06-15T11:21:08Z,MERGED,True,536,54,15,https://github.com/milanlenco,Leafref support,9,[],https://github.com/sysrepo/sysrepo/pull/189,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/189#issuecomment-226157526,Please update libyang to the latest version before trying this feature.,fixes #183,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,190,2016-06-15T13:15:24Z,2016-06-15T14:54:56Z,2016-06-15T14:54:56Z,MERGED,True,123,69,19,https://github.com/lukasmacko,Replace non reentrant functions,6,[],https://github.com/sysrepo/sysrepo/pull/190,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/190,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,190,2016-06-15T13:15:24Z,2016-06-15T14:54:56Z,2016-06-15T14:54:56Z,MERGED,True,123,69,19,https://github.com/lukasmacko,Replace non reentrant functions,6,[],https://github.com/sysrepo/sysrepo/pull/190,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/190#issuecomment-226187733,,"Current coverage is 84.83%

Merging #190 into devel will increase coverage by 0.05%

@@              devel       #190   diff @@
==========================================
  Files            23         23          
  Lines         11970      11988    +18   
  Methods         556        558     +2   
  Messages          0          0          
  Branches       1913       1917     +4   
==========================================
+ Hits          10148      10169    +21   
+ Misses         1822       1819     -3   
  Partials          0          0          

Powered by Codecov. Last updated by 6381f6c...e4bd654",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,191,2016-06-16T06:17:20Z,2016-06-16T06:36:13Z,2016-06-16T06:36:13Z,MERGED,True,144,29,7,https://github.com/lukasmacko,Generate changes on demand + test,2,[],https://github.com/sysrepo/sysrepo/pull/191,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/191,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,191,2016-06-16T06:17:20Z,2016-06-16T06:36:13Z,2016-06-16T06:36:13Z,MERGED,True,144,29,7,https://github.com/lukasmacko,Generate changes on demand + test,2,[],https://github.com/sysrepo/sysrepo/pull/191,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/191#issuecomment-226399407,,"Current coverage is 84.76%

Merging #191 into devel will decrease coverage by 0.09%

@@              devel       #191   diff @@
==========================================
  Files            23         23          
  Lines         11989      12001    +12   
  Methods         558        558          
  Messages          0          0          
  Branches       1917       1919     +2   
==========================================
- Hits          10173      10172     -1   
- Misses         1816       1829    +13   
  Partials          0          0          

Powered by Codecov. Last updated by d2fd406...c32cb6b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,193,2016-06-17T07:44:32Z,2016-06-17T08:01:28Z,2016-06-17T08:01:29Z,MERGED,True,143,17,12,https://github.com/lukasmacko,Log + comments + Fix #192,6,[],https://github.com/sysrepo/sysrepo/pull/193,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/193,"Ad fix:

sysrepoctl won't be supported for import/export config, sysrepocfg should be used instead
issue was fixed in sysrepocfg
notice: config will not be loadble, if there is an configuration node for disabled feature","Ad fix:

sysrepoctl won't be supported for import/export config, sysrepocfg should be used instead
issue was fixed in sysrepocfg
notice: config will not be loadble, if there is an configuration node for disabled feature",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,193,2016-06-17T07:44:32Z,2016-06-17T08:01:28Z,2016-06-17T08:01:29Z,MERGED,True,143,17,12,https://github.com/lukasmacko,Log + comments + Fix #192,6,[],https://github.com/sysrepo/sysrepo/pull/193,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/193#issuecomment-226705513,"Ad fix:

sysrepoctl won't be supported for import/export config, sysrepocfg should be used instead
issue was fixed in sysrepocfg
notice: config will not be loadble, if there is an configuration node for disabled feature","Current coverage is 84.80%

Merging #193 into devel will decrease coverage by 0.02%

@@              devel       #193   diff @@
==========================================
  Files            23         23          
  Lines         12001      12017    +16   
  Methods         558        558          
  Messages          0          0          
  Branches       1919       1922     +3   
==========================================
+ Hits          10180      10191    +11   
- Misses         1821       1826     +5   
  Partials          0          0          

Powered by Codecov. Last updated by 1c633f7...f9f896a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,194,2016-06-17T11:06:09Z,2016-06-17T11:21:33Z,2016-06-17T11:21:33Z,MERGED,True,2,2,2,https://github.com/lukasmacko,Update lys_set_add usage to support the newest libyang,2,[],https://github.com/sysrepo/sysrepo/pull/194,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/194,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,194,2016-06-17T11:06:09Z,2016-06-17T11:21:33Z,2016-06-17T11:21:33Z,MERGED,True,2,2,2,https://github.com/lukasmacko,Update lys_set_add usage to support the newest libyang,2,[],https://github.com/sysrepo/sysrepo/pull/194,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/194#issuecomment-226744651,,"Current coverage is 84.80%

No coverage report found for devel at f39d02d.
Powered by Codecov. Last updated by f39d02d...480c0bb",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,195,2016-06-17T14:12:42Z,2016-06-17T14:50:56Z,2016-06-17T14:50:56Z,MERGED,True,523,228,8,https://github.com/rastislavs,Notifications authorization,16,[],https://github.com/sysrepo/sysrepo/pull/195,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/195,still requires some changes sysrepoctl,still requires some changes sysrepoctl,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,195,2016-06-17T14:12:42Z,2016-06-17T14:50:56Z,2016-06-17T14:50:56Z,MERGED,True,523,228,8,https://github.com/rastislavs,Notifications authorization,16,[],https://github.com/sysrepo/sysrepo/pull/195,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/195#issuecomment-226784688,still requires some changes sysrepoctl,"Current coverage is 85.02%

Merging #195 into devel will increase coverage by 0.20%

@@              devel       #195   diff @@
==========================================
  Files            23         23          
  Lines         12018      12131   +113   
  Methods         558        563     +5   
  Messages          0          0          
  Branches       1922       1939    +17   
==========================================
+ Hits          10194      10314   +120   
+ Misses         1824       1817     -7   
  Partials          0          0          

Powered by Codecov. Last updated by bc8ee5b...085190f",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,196,2016-06-20T10:35:45Z,2016-06-20T10:53:20Z,2016-06-20T10:53:21Z,MERGED,True,4,1,4,https://github.com/lukasmacko,Fix BSD build,1,[],https://github.com/sysrepo/sysrepo/pull/196,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/196,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,196,2016-06-20T10:35:45Z,2016-06-20T10:53:20Z,2016-06-20T10:53:21Z,MERGED,True,4,1,4,https://github.com/lukasmacko,Fix BSD build,1,[],https://github.com/sysrepo/sysrepo/pull/196,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/196#issuecomment-227108861,,"Current coverage is 85.03%

Merging #196 into devel will decrease coverage by 0.08%

@@              devel       #196   diff @@
==========================================
  Files            23         23          
  Lines         12130      12130          
  Methods         563        563          
  Messages          0          0          
  Branches       1939       1939          
==========================================
- Hits          10324      10314    -10   
- Misses         1806       1816    +10   
  Partials          0          0          

Powered by Codecov. Last updated by c0f0e52...2bb0633",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,197,2016-06-21T07:31:09Z,2016-06-21T07:51:59Z,2016-06-21T07:51:59Z,MERGED,True,165,212,11,https://github.com/rastislavs,sysrepoctl changes,5,[],https://github.com/sysrepo/sysrepo/pull/197,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/197,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,197,2016-06-21T07:31:09Z,2016-06-21T07:51:59Z,2016-06-21T07:51:59Z,MERGED,True,165,212,11,https://github.com/rastislavs,sysrepoctl changes,5,[],https://github.com/sysrepo/sysrepo/pull/197,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/197#issuecomment-227363831,,"Current coverage is 85.03%

Merging #197 into devel will increase coverage by <.01%

@@              devel       #197   diff @@
==========================================
  Files            23         23          
  Lines         12130      12100    -30   
  Methods         563        563          
  Messages          0          0          
  Branches       1939       1933     -6   
==========================================
- Hits          10314      10289    -25   
+ Misses         1816       1811     -5   
  Partials          0          0          

Powered by Codecov. Last updated by dd03646...338ef27",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,198,2016-06-21T09:09:53Z,2016-06-21T10:03:55Z,2016-06-21T10:03:55Z,MERGED,True,96,32,11,https://github.com/lukasmacko,Fix OS X build,3,[],https://github.com/sysrepo/sysrepo/pull/198,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/198,valgrind and python tests not tested on OS X,valgrind and python tests not tested on OS X,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,199,2016-06-21T11:30:40Z,2016-06-21T12:23:37Z,2016-06-21T12:23:38Z,MERGED,True,125,71,14,https://github.com/rastislavs,Documentation updates,7,[],https://github.com/sysrepo/sysrepo/pull/199,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/199,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,199,2016-06-21T11:30:40Z,2016-06-21T12:23:37Z,2016-06-21T12:23:38Z,MERGED,True,125,71,14,https://github.com/rastislavs,Documentation updates,7,[],https://github.com/sysrepo/sysrepo/pull/199,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/199#issuecomment-227415289,,"Current coverage is 85.04%

Merging #199 into devel will decrease coverage by 0.01%

@@              devel       #199   diff @@
==========================================
  Files            23         23          
  Lines         12105      12109     +4   
  Methods         564        564          
  Messages          0          0          
  Branches       1933       1934     +1   
==========================================
+ Hits          10296      10298     +2   
- Misses         1809       1811     +2   
  Partials          0          0          

Powered by Codecov. Last updated by 43fd465...2262986",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,200,2016-06-21T13:03:01Z,2016-06-21T13:13:49Z,2016-06-21T13:13:50Z,MERGED,True,6,5,3,https://github.com/rastislavs,remove 'experimental' API notes,3,[],https://github.com/sysrepo/sysrepo/pull/200,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/200,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,200,2016-06-21T13:03:01Z,2016-06-21T13:13:49Z,2016-06-21T13:13:50Z,MERGED,True,6,5,3,https://github.com/rastislavs,remove 'experimental' API notes,3,[],https://github.com/sysrepo/sysrepo/pull/200,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/200#issuecomment-227434364,,"Current coverage is 85.02%

Merging #200 into master will decrease coverage by 0.05%

@@             master       #200   diff @@
==========================================
  Files            23         23          
  Lines         12113      12109     -4   
  Methods         564        564          
  Messages          0          0          
  Branches       1934       1934          
==========================================
- Hits          10305      10295    -10   
- Misses         1808       1814     +6   
  Partials          0          0          

Powered by Codecov. Last updated by 3f73569...7eccb5c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,203,2016-06-22T11:56:27Z,2016-06-22T12:08:09Z,2016-06-22T13:27:55Z,MERGED,True,1,1,1,https://github.com/lukasmacko,Update INSTALL.md,1,[],https://github.com/sysrepo/sysrepo/pull/203,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/203,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,204,2016-06-22T13:22:03Z,2016-06-23T07:42:11Z,2016-06-23T07:42:11Z,MERGED,True,89,34,8,https://github.com/lukasmacko,OS X CI + other improvements,20,[],https://github.com/sysrepo/sysrepo/pull/204,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/204,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,204,2016-06-22T13:22:03Z,2016-06-23T07:42:11Z,2016-06-23T07:42:11Z,MERGED,True,89,34,8,https://github.com/lukasmacko,OS X CI + other improvements,20,[],https://github.com/sysrepo/sysrepo/pull/204,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/204#issuecomment-227748956,,"Current coverage is 85.01%

Merging #204 into devel will decrease coverage by 0.06%

@@              devel       #204   diff @@
==========================================
  Files            23         23          
  Lines         12113      12109     -4   
  Methods         564        564          
  Messages          0          0          
  Branches       1934       1934          
==========================================
- Hits          10305      10294    -11   
- Misses         1808       1815     +7   
  Partials          0          0          

Powered by Codecov. Last updated by 3f73569...ee4bb85",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,205,2016-06-23T12:22:41Z,2016-06-23T12:54:36Z,2016-06-23T12:54:36Z,MERGED,True,33,15,9,https://github.com/rastislavs,various fixes,8,[],https://github.com/sysrepo/sysrepo/pull/205,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/205,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,205,2016-06-23T12:22:41Z,2016-06-23T12:54:36Z,2016-06-23T12:54:36Z,MERGED,True,33,15,9,https://github.com/rastislavs,various fixes,8,[],https://github.com/sysrepo/sysrepo/pull/205,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/205#issuecomment-228035050,,"Current coverage is 85.00%

Merging #205 into master will decrease coverage by 0.02%

@@             master       #205   diff @@
==========================================
  Files            23         23          
  Lines         12109      12122    +13   
  Methods         564        564          
  Messages          0          0          
  Branches       1934       1936     +2   
==========================================
+ Hits          10295      10304     +9   
- Misses         1814       1818     +4   
  Partials          0          0          

Powered by Codecov. Last updated by 9fee8ac...372fc0c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,207,2016-06-28T13:37:41Z,2016-06-28T13:41:13Z,2016-06-28T13:41:13Z,CLOSED,False,1,0,1,https://github.com/lukasmacko,Fix build warning handle LY_LLSILENT in switch,2,[],https://github.com/sysrepo/sysrepo/pull/207,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/207,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,210,2016-06-29T10:14:01Z,2016-06-30T07:57:03Z,2016-06-30T07:57:04Z,MERGED,True,3,1,1,https://github.com/rastislavs,fixed errors in internal YANG,2,[],https://github.com/sysrepo/sysrepo/pull/210,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/210,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,210,2016-06-29T10:14:01Z,2016-06-30T07:57:03Z,2016-06-30T07:57:04Z,MERGED,True,3,1,1,https://github.com/rastislavs,fixed errors in internal YANG,2,[],https://github.com/sysrepo/sysrepo/pull/210,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/210#issuecomment-229587149,,"Current coverage is 85.02%

Merging #210 into master will increase coverage by 0.02%

@@             master       #210   diff @@
==========================================
  Files            23         23          
  Lines         12120      12119     -1   
  Methods         564        564          
  Messages          0          0          
  Branches       1936       1936          
==========================================
+ Hits          10301      10303     +2   
+ Misses         1819       1816     -3   
  Partials          0          0          

Powered by Codecov. Last updated by b6cae59...18954c1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,211,2016-06-29T10:26:01Z,2016-06-30T08:05:22Z,2016-06-30T08:05:23Z,MERGED,True,117,96,15,https://github.com/lukasmacko,Fix test BSD and OS X,31,[],https://github.com/sysrepo/sysrepo/pull/211,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/211,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,211,2016-06-29T10:26:01Z,2016-06-30T08:05:22Z,2016-06-30T08:05:23Z,MERGED,True,117,96,15,https://github.com/lukasmacko,Fix test BSD and OS X,31,[],https://github.com/sysrepo/sysrepo/pull/211,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/211#issuecomment-229590209,,"Current coverage is 85.01%

Merging #211 into devel will decrease coverage by 0.02%

@@              devel       #211   diff @@
==========================================
  Files            23         23          
  Lines         12109      12119    +10   
  Methods         564        564          
  Messages          0          0          
  Branches       1934       1936     +2   
==========================================
+ Hits          10296      10302     +6   
- Misses         1813       1817     +4   
  Partials          0          0          

Powered by Codecov. Last updated by af657e4...1e0faf3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,212,2016-06-30T07:37:57Z,2016-06-30T07:45:15Z,2016-06-30T07:45:15Z,CLOSED,False,3,0,1,https://github.com/lukasmacko,Workaround ,4,[],https://github.com/sysrepo/sysrepo/pull/212,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/212,test disabled,test disabled,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,212,2016-06-30T07:37:57Z,2016-06-30T07:45:15Z,2016-06-30T07:45:15Z,CLOSED,False,3,0,1,https://github.com/lukasmacko,Workaround ,4,[],https://github.com/sysrepo/sysrepo/pull/212,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/212#issuecomment-229584751,test disabled,"Current coverage is 85.08%

Merging #212 into master will increase coverage by 0.09%

@@             master       #212   diff @@
==========================================
  Files            23         23          
  Lines         12120      12119     -1   
  Methods         564        564          
  Messages          0          0          
  Branches       1936       1936          
==========================================
+ Hits          10301      10311    +10   
+ Misses         1819       1808    -11   
  Partials          0          0          

Powered by Codecov. Last updated by b6cae59...1b7fbc5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,213,2016-06-30T11:58:38Z,2016-06-30T13:57:10Z,2016-06-30T13:57:10Z,MERGED,True,2687,132,12,https://github.com/milanlenco,Module dependencies,16,[],https://github.com/sysrepo/sysrepo/pull/213,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/213,"This pull request implements a new sub-system into sysrepo for managing dependencies between installed models (beyond what libyang can determine). Currently this feature is integrated only into sysrepocfg and sysrepoctl.
I think it is better if you have a glance at it before I will move forward and integrate it into the sysrepo daemon/library.
Please note that any extensions for operational data support are not yet implemented either (like has_op_data flag etc.).","This pull request implements a new sub-system into sysrepo for managing dependencies between installed models (beyond what libyang can determine). Currently this feature is integrated only into sysrepocfg and sysrepoctl.
I think it is better if you have a glance at it before I will move forward and integrate it into the sysrepo daemon/library.
Please note that any extensions for operational data support are not yet implemented either (like has_op_data flag etc.).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,213,2016-06-30T11:58:38Z,2016-06-30T13:57:10Z,2016-06-30T13:57:10Z,MERGED,True,2687,132,12,https://github.com/milanlenco,Module dependencies,16,[],https://github.com/sysrepo/sysrepo/pull/213,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/213#issuecomment-229644501,"This pull request implements a new sub-system into sysrepo for managing dependencies between installed models (beyond what libyang can determine). Currently this feature is integrated only into sysrepocfg and sysrepoctl.
I think it is better if you have a glance at it before I will move forward and integrate it into the sysrepo daemon/library.
Please note that any extensions for operational data support are not yet implemented either (like has_op_data flag etc.).","Current coverage is 84.69%

Merging #213 into devel will decrease coverage by 0.31%

@@              devel       #213   diff @@
==========================================
  Files            23         24     +1   
  Lines         12119      12911   +792   
  Methods         564        584    +20   
  Messages          0          0          
  Branches       1936       2118   +182   
==========================================
+ Hits          10301      10934   +633   
- Misses         1818       1977   +159   
  Partials          0          0          

Powered by Codecov. Last updated by 11bb665...8fbb694",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,214,2016-07-01T10:48:53Z,2016-07-01T11:09:51Z,2016-07-01T11:09:51Z,MERGED,True,311,19,12,https://github.com/rastislavs,Operational data API + subscriptions,8,[],https://github.com/sysrepo/sysrepo/pull/214,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/214,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,214,2016-07-01T10:48:53Z,2016-07-01T11:09:51Z,2016-07-01T11:09:51Z,MERGED,True,311,19,12,https://github.com/rastislavs,Operational data API + subscriptions,8,[],https://github.com/sysrepo/sysrepo/pull/214,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/214#issuecomment-229918566,,"Current coverage is 84.75%

Merging #214 into devel will increase coverage by 0.06%

@@              devel       #214   diff @@
==========================================
  Files            24         24          
  Lines         12914      12981    +67   
  Methods         584        586     +2   
  Messages          0          0          
  Branches       2118       2125     +7   
==========================================
+ Hits          10937      11001    +64   
- Misses         1977       1980     +3   
  Partials          0          0          

Powered by Codecov. Last updated by 3c791bd...84dbb83",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,215,2016-07-04T11:07:09Z,2016-07-04T11:44:25Z,2016-07-04T11:44:25Z,MERGED,True,292,25,9,https://github.com/rastislavs,operational data - messaging infrastructure,8,[],https://github.com/sysrepo/sysrepo/pull/215,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/215,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,215,2016-07-04T11:07:09Z,2016-07-04T11:44:25Z,2016-07-04T11:44:25Z,MERGED,True,292,25,9,https://github.com/rastislavs,operational data - messaging infrastructure,8,[],https://github.com/sysrepo/sysrepo/pull/215,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/215#issuecomment-230267175,,"Current coverage is 84.09%

Merging #215 into devel will decrease coverage by 0.57%

@@              devel       #215   diff @@
==========================================
  Files            24         24          
  Lines         12980      13096   +116   
  Methods         586        590     +4   
  Messages          0          0          
  Branches       2125       2141    +16   
==========================================
+ Hits          10990      11013    +23   
- Misses         1990       2083    +93   
  Partials          0          0          

Powered by Codecov. Last updated by 2033f9f...d13ce02",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,216,2016-07-06T15:00:04Z,2016-07-07T07:09:25Z,2016-07-07T07:09:25Z,MERGED,True,454,168,19,https://github.com/milanlenco,On demand schema loading for sysrepo library mode,6,[],https://github.com/sysrepo/sysrepo/pull/216,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/216,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,216,2016-07-06T15:00:04Z,2016-07-07T07:09:25Z,2016-07-07T07:09:25Z,MERGED,True,454,168,19,https://github.com/milanlenco,On demand schema loading for sysrepo library mode,6,[],https://github.com/sysrepo/sysrepo/pull/216,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/216#issuecomment-230803493,,"Current coverage is 84.07%

Merging #216 into devel will decrease coverage by 0.01%

@@              devel       #216   diff @@
==========================================
  Files            24         24          
  Lines         13095      13194    +99   
  Methods         590        593     +3   
  Messages          0          0          
  Branches       2141       2169    +28   
==========================================
+ Hits          11010      11092    +82   
- Misses         2085       2102    +17   
  Partials          0          0          

Powered by Codecov. Last updated by c24ed05...c7fb569",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,217,2016-07-07T07:43:56Z,2016-07-07T07:49:23Z,2016-07-07T07:49:23Z,MERGED,True,2,4,1,https://github.com/milanlenco,fix coverity issues introduced by on-demand schema loading,1,[],https://github.com/sysrepo/sysrepo/pull/217,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/217,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,217,2016-07-07T07:43:56Z,2016-07-07T07:49:23Z,2016-07-07T07:49:23Z,MERGED,True,2,4,1,https://github.com/milanlenco,fix coverity issues introduced by on-demand schema loading,1,[],https://github.com/sysrepo/sysrepo/pull/217,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/217#issuecomment-231007495,,"Current coverage is 84.04%

Merging #217 into devel will decrease coverage by 0.04%

@@              devel       #217   diff @@
==========================================
  Files            24         24          
  Lines         13194      13204    +10   
  Methods         593        593          
  Messages          0          0          
  Branches       2169       2171     +2   
==========================================
+ Hits          11094      11097     +3   
- Misses         2100       2107     +7   
  Partials          0          0          

Powered by Codecov. Last updated by 1492abd...e5879a2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,218,2016-07-07T14:10:04Z,2016-07-07T14:26:50Z,2016-07-07T14:26:50Z,MERGED,True,571,49,14,https://github.com/lukasmacko,Operational data support in sr_get_item,16,[],https://github.com/sysrepo/sysrepo/pull/218,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/218,"sr_session_set_opts API call added
intial operational data support (PoC like implementation)
works only for testing state-module","sr_session_set_opts API call added
intial operational data support (PoC like implementation)
works only for testing state-module",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,218,2016-07-07T14:10:04Z,2016-07-07T14:26:50Z,2016-07-07T14:26:50Z,MERGED,True,571,49,14,https://github.com/lukasmacko,Operational data support in sr_get_item,16,[],https://github.com/sysrepo/sysrepo/pull/218,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/218#issuecomment-231091347,"sr_session_set_opts API call added
intial operational data support (PoC like implementation)
works only for testing state-module","Current coverage is 84.61%

Merging #218 into devel will increase coverage by 0.53%

@@              devel       #218   diff @@
==========================================
  Files            24         24          
  Lines         13203      13339   +136   
  Methods         593        598     +5   
  Messages          0          0          
  Branches       2171       2186    +15   
==========================================
+ Hits          11101      11286   +185   
+ Misses         2102       2053    -49   
  Partials          0          0          

Powered by Codecov. Last updated by 088834b...da5c55a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,219,2016-07-11T14:14:00Z,2016-07-11T14:24:00Z,2016-07-11T14:24:00Z,MERGED,True,168,3,6,https://github.com/lukasmacko,Check value type conforms to schema,1,[],https://github.com/sysrepo/sysrepo/pull/219,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/219,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,219,2016-07-11T14:14:00Z,2016-07-11T14:24:00Z,2016-07-11T14:24:00Z,MERGED,True,168,3,6,https://github.com/lukasmacko,Check value type conforms to schema,1,[],https://github.com/sysrepo/sysrepo/pull/219,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/219#issuecomment-231748957,,"Current coverage is 84.73%

Merging #219 into devel will increase coverage by 0.02%

@@              devel       #219   diff @@
==========================================
  Files            24         24          
  Lines         13339      13426    +87   
  Methods         598        600     +2   
  Messages          0          0          
  Branches       2186       2195     +9   
==========================================
+ Hits          11299      11376    +77   
- Misses         2040       2050    +10   
  Partials          0          0          

Powered by Codecov. Last updated by ffd70d6...8a07d30",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,220,2016-07-11T14:50:52Z,2016-07-11T15:02:55Z,2016-07-11T15:02:55Z,MERGED,True,2,2,2,https://github.com/rastislavs,fix example data import,3,[],https://github.com/sysrepo/sysrepo/pull/220,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/220,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,224,2016-07-12T06:22:00Z,2016-07-12T07:44:05Z,2016-07-12T07:44:05Z,MERGED,True,21,9,5,https://github.com/rastislavs,"bug fixes #221, #222, #223",4,[],https://github.com/sysrepo/sysrepo/pull/224,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/224,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,224,2016-07-12T06:22:00Z,2016-07-12T07:44:05Z,2016-07-12T07:44:05Z,MERGED,True,21,9,5,https://github.com/rastislavs,"bug fixes #221, #222, #223",4,[],https://github.com/sysrepo/sysrepo/pull/224,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/224#issuecomment-231948794,,"Current coverage is 85.08%

Merging #224 into master will increase coverage by 0.03%

@@             master       #224   diff @@
==========================================
  Files            23         23          
  Lines         12118      12127     +9   
  Methods         564        564          
  Messages          0          0          
  Branches       1936       1937     +1   
==========================================
+ Hits          10307      10318    +11   
+ Misses         1811       1809     -2   
  Partials          0          0          

Powered by Codecov. Last updated by c7005fb...eb55783",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,225,2016-07-12T07:21:14Z,2016-07-12T07:45:14Z,2016-07-12T07:45:15Z,MERGED,True,848,255,4,https://github.com/milanlenco,Operation data schema analysis,3,[],https://github.com/sysrepo/sysrepo/pull/225,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/225,Also the algorithm for storing references to instance identifiers was found partly incorrect and fixed in this pull request (now instance identifiers and operational data references are retrieved and stored in very similar fashion and much of the code is shared).,Also the algorithm for storing references to instance identifiers was found partly incorrect and fixed in this pull request (now instance identifiers and operational data references are retrieved and stored in very similar fashion and much of the code is shared).,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,225,2016-07-12T07:21:14Z,2016-07-12T07:45:14Z,2016-07-12T07:45:15Z,MERGED,True,848,255,4,https://github.com/milanlenco,Operation data schema analysis,3,[],https://github.com/sysrepo/sysrepo/pull/225,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/225#issuecomment-231960464,Also the algorithm for storing references to instance identifiers was found partly incorrect and fixed in this pull request (now instance identifiers and operational data references are retrieved and stored in very similar fashion and much of the code is shared).,"Current coverage is 84.76%

Merging #225 into devel will increase coverage by 0.21%

@@              devel       #225   diff @@
==========================================
  Files            24         24          
  Lines         13425      13608   +183   
  Methods         600        605     +5   
  Messages          0          0          
  Branches       2195       2240    +45   
==========================================
+ Hits          11351      11534   +183   
  Misses         2074       2074          
  Partials          0          0          

Powered by Codecov. Last updated by 03ffaaf...e335345",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,226,2016-07-12T09:08:51Z,2016-07-12T10:03:17Z,2016-07-12T10:03:17Z,MERGED,True,95,40,6,https://github.com/milanlenco,test for presence of state data using module dependency info,1,[],https://github.com/sysrepo/sysrepo/pull/226,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/226,Also some minor improvements related to module dependency subsystem.,Also some minor improvements related to module dependency subsystem.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,226,2016-07-12T09:08:51Z,2016-07-12T10:03:17Z,2016-07-12T10:03:17Z,MERGED,True,95,40,6,https://github.com/milanlenco,test for presence of state data using module dependency info,1,[],https://github.com/sysrepo/sysrepo/pull/226,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/226#issuecomment-231983121,Also some minor improvements related to module dependency subsystem.,"Current coverage is 84.82%

Merging #226 into devel will increase coverage by 0.07%

@@              devel       #226   diff @@
==========================================
  Files            24         24          
  Lines         13612      13625    +13   
  Methods         605        605          
  Messages          0          0          
  Branches       2241       2242     +1   
==========================================
+ Hits          11537      11557    +20   
+ Misses         2075       2068     -7   
  Partials          0          0          

Powered by Codecov. Last updated by dca4e89...df99b27",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,227,2016-07-12T10:53:19Z,2016-07-12T11:54:24Z,2016-07-12T11:54:24Z,MERGED,True,15,5,1,https://github.com/milanlenco,fix issues found by coverity,2,[],https://github.com/sysrepo/sysrepo/pull/227,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/227,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,227,2016-07-12T10:53:19Z,2016-07-12T11:54:24Z,2016-07-12T11:54:24Z,MERGED,True,15,5,1,https://github.com/milanlenco,fix issues found by coverity,2,[],https://github.com/sysrepo/sysrepo/pull/227,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/227#issuecomment-232006993,,"Current coverage is 84.74%

Merging #227 into devel will decrease coverage by 0.01%

@@              devel       #227   diff @@
==========================================
  Files            24         24          
  Lines         13624      13632     +8   
  Methods         605        605          
  Messages          0          0          
  Branches       2242       2244     +2   
==========================================
+ Hits          11547      11552     +5   
- Misses         2077       2080     +3   
  Partials          0          0          

Powered by Codecov. Last updated by ade93dc...b4a66fe",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,228,2016-07-12T10:53:35Z,2016-07-12T11:09:34Z,2016-07-12T11:09:34Z,MERGED,True,1,1,1,https://github.com/rastislavs,turn off warnings by example modules data import,2,[],https://github.com/sysrepo/sysrepo/pull/228,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/228,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,228,2016-07-12T10:53:35Z,2016-07-12T11:09:34Z,2016-07-12T11:09:34Z,MERGED,True,1,1,1,https://github.com/rastislavs,turn off warnings by example modules data import,2,[],https://github.com/sysrepo/sysrepo/pull/228,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/228#issuecomment-232008513,,"Current coverage is 84.99%

Merging #228 into master will decrease coverage by 0.03%

@@             master       #228   diff @@
==========================================
  Files            23         23          
  Lines         12122      12122          
  Methods         564        564          
  Messages          0          0          
  Branches       1937       1937          
==========================================
- Hits          10307      10303     -4   
- Misses         1815       1819     +4   
  Partials          0          0          

Powered by Codecov. Last updated by 0120781...1e9b844",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,229,2016-07-13T08:02:09Z,2016-07-13T08:26:57Z,2016-07-13T08:26:57Z,MERGED,True,101,38,7,https://github.com/lukasmacko,Op data get_items + get_items_iter,3,[],https://github.com/sysrepo/sysrepo/pull/229,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/229,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,230,2016-07-13T11:16:59Z,2016-07-13T12:17:06Z,2016-07-13T12:17:07Z,MERGED,True,4,3,3,https://github.com/lukasmacko,Fixes,2,[],https://github.com/sysrepo/sysrepo/pull/230,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/230,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,230,2016-07-13T11:16:59Z,2016-07-13T12:17:06Z,2016-07-13T12:17:07Z,MERGED,True,4,3,3,https://github.com/lukasmacko,Fixes,2,[],https://github.com/sysrepo/sysrepo/pull/230,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/230#issuecomment-232331902,,"Current coverage is 84.80%

Merging #230 into devel will increase coverage by 0.08%

@@              devel       #230   diff @@
==========================================
  Files            24         24          
  Lines         13650      13652     +2   
  Methods         605        605          
  Messages          0          0          
  Branches       2249       2249          
==========================================
+ Hits          11565      11577    +12   
+ Misses         2085       2075    -10   
  Partials          0          0          

Powered by Codecov. Last updated by 195460a...4657916",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,231,2016-07-13T13:03:59Z,2016-07-13T13:12:06Z,2016-07-13T13:12:06Z,MERGED,True,17,10,2,https://github.com/lukasmacko,FIX deliver RPC to proper address,10,[],https://github.com/sysrepo/sysrepo/pull/231,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/231,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,231,2016-07-13T13:03:59Z,2016-07-13T13:12:06Z,2016-07-13T13:12:06Z,MERGED,True,17,10,2,https://github.com/lukasmacko,FIX deliver RPC to proper address,10,[],https://github.com/sysrepo/sysrepo/pull/231,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/231#issuecomment-232349993,,"Current coverage is 85.07%

No coverage report found for master at fabecaf.
Powered by Codecov. Last updated by fabecaf...ce5652d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,233,2016-07-14T07:56:57Z,2016-07-14T08:06:52Z,2016-07-14T08:06:52Z,MERGED,True,255,25,11,https://github.com/rastislavs,"oper. data timeout, sysrepoctl man page",12,[],https://github.com/sysrepo/sysrepo/pull/233,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/233,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,233,2016-07-14T07:56:57Z,2016-07-14T08:06:52Z,2016-07-14T08:06:52Z,MERGED,True,255,25,11,https://github.com/rastislavs,"oper. data timeout, sysrepoctl man page",12,[],https://github.com/sysrepo/sysrepo/pull/233,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/233#issuecomment-232591547,,"Current coverage is 84.72%

Merging #233 into devel will decrease coverage by 0.04%

@@              devel       #233   diff @@
==========================================
  Files            24         24          
  Lines         13656      13683    +27   
  Methods         605        607     +2   
  Messages          0          0          
  Branches       2250       2252     +2   
==========================================
+ Hits          11574      11592    +18   
- Misses         2082       2091     +9   
  Partials          0          0          

Powered by Codecov. Last updated by 39e965c...9de0131",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,234,2016-07-14T10:15:45Z,2016-07-14T10:23:02Z,2016-07-14T10:23:02Z,MERGED,True,14,1,1,https://github.com/rastislavs,CM session matching for oper data timeout msg.,1,[],https://github.com/sysrepo/sysrepo/pull/234,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/234,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,234,2016-07-14T10:15:45Z,2016-07-14T10:23:02Z,2016-07-14T10:23:02Z,MERGED,True,14,1,1,https://github.com/rastislavs,CM session matching for oper data timeout msg.,1,[],https://github.com/sysrepo/sysrepo/pull/234,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/234#issuecomment-232626008,,"Current coverage is 84.68%

Merging #234 into devel will increase coverage by 0.03%

@@              devel       #234   diff @@
==========================================
  Files            24         24          
  Lines         13682      13691     +9   
  Methods         607        607          
  Messages          0          0          
  Branches       2252       2254     +2   
==========================================
+ Hits          11581      11593    +12   
+ Misses         2101       2098     -3   
  Partials          0          0          

Powered by Codecov. Last updated by 147479e...a7f3050",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,235,2016-07-14T12:25:08Z,2016-07-14T13:17:05Z,2016-07-14T13:17:05Z,MERGED,True,198,36,11,https://github.com/lukasmacko,Operational data  PoC,12,[],https://github.com/sysrepo/sysrepo/pull/235,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/235,"remove data befer get* call, commit, validate
handle data provider time out","remove data befer get* call, commit, validate
handle data provider time out",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,235,2016-07-14T12:25:08Z,2016-07-14T13:17:05Z,2016-07-14T13:17:05Z,MERGED,True,198,36,11,https://github.com/lukasmacko,Operational data  PoC,12,[],https://github.com/sysrepo/sysrepo/pull/235,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/235#issuecomment-232651802,"remove data befer get* call, commit, validate
handle data provider time out","Current coverage is 84.70%

Merging #235 into devel will increase coverage by 0.01%

@@              devel       #235   diff @@
==========================================
  Files            24         24          
  Lines         13691      13761    +70   
  Methods         607        610     +3   
  Messages          0          0          
  Branches       2254       2262     +8   
==========================================
+ Hits          11594      11655    +61   
- Misses         2097       2106     +9   
  Partials          0          0          

Powered by Codecov. Last updated by a6fcc3d...f72d74f",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,236,2016-07-14T13:32:28Z,2016-07-14T14:12:28Z,2016-10-07T10:45:22Z,MERGED,True,5,6,1,https://github.com/lukasmacko,Fix store pointer to request in session,3,[],https://github.com/sysrepo/sysrepo/pull/236,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/236,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,236,2016-07-14T13:32:28Z,2016-07-14T14:12:28Z,2016-10-07T10:45:22Z,MERGED,True,5,6,1,https://github.com/lukasmacko,Fix store pointer to request in session,3,[],https://github.com/sysrepo/sysrepo/pull/236,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/236#issuecomment-232672931,,"Current coverage is 84.70%

Merging #236 into devel will decrease coverage by 0.06%

@@              devel       #236   diff @@
==========================================
  Files            24         24          
  Lines         13762      13762          
  Methods         610        610          
  Messages          0          0          
  Branches       2262       2262          
==========================================
- Hits          11664      11656     -8   
- Misses         2098       2106     +8   
  Partials          0          0          

Powered by Codecov. Last updated by cfe0bdb...01a2610",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,237,2016-07-15T08:59:31Z,2016-07-19T10:43:53Z,2016-07-19T10:43:53Z,MERGED,True,877,51,17,https://github.com/milanlenco,Event notification support,7,[],https://github.com/sysrepo/sysrepo/pull/237,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/237,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,237,2016-07-15T08:59:31Z,2016-07-19T10:43:53Z,2016-07-19T10:43:53Z,MERGED,True,877,51,17,https://github.com/milanlenco,Event notification support,7,[],https://github.com/sysrepo/sysrepo/pull/237,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/237#issuecomment-232900384,,"Current coverage is 84.78%

Merging #237 into devel will increase coverage by 0.09%

@@              devel       #237   diff @@
==========================================
  Files            24         24          
  Lines         13762      13975   +213   
  Methods         610        617     +7   
  Messages          0          0          
  Branches       2262       2290    +28   
==========================================
+ Hits          11655      11848   +193   
- Misses         2107       2127    +20   
  Partials          0          0          

Powered by Codecov. Last updated by 4921b7a...9b47000",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,241,2016-07-16T16:42:57Z,2016-07-20T13:38:43Z,2016-07-20T13:38:43Z,CLOSED,False,404,0,7,https://github.com/eqvinox,examples: hacked-up cython plugin binding,1,[],https://github.com/sysrepo/sysrepo/pull/241,https://github.com/eqvinox,1,https://github.com/sysrepo/sysrepo/pull/241,"callback works, but this is really just playing around with cython","callback works, but this is really just playing around with cython",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,241,2016-07-16T16:42:57Z,2016-07-20T13:38:43Z,2016-07-20T13:38:43Z,CLOSED,False,404,0,7,https://github.com/eqvinox,examples: hacked-up cython plugin binding,1,[],https://github.com/sysrepo/sysrepo/pull/241,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/241#issuecomment-233139442,"callback works, but this is really just playing around with cython","Current coverage is 85.00%

Merging #241 into master will decrease coverage by 0.11%

@@             master       #241   diff @@
==========================================
  Files            23         23          
  Lines         12125      12126     +1   
  Methods         564        564          
  Messages          0          0          
  Branches       1938       1938          
==========================================
- Hits          10320      10307    -13   
- Misses         1805       1819    +14   
  Partials          0          0          

Powered by Codecov. Last updated by 416eaa4...c3eac3d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,241,2016-07-16T16:42:57Z,2016-07-20T13:38:43Z,2016-07-20T13:38:43Z,CLOSED,False,404,0,7,https://github.com/eqvinox,examples: hacked-up cython plugin binding,1,[],https://github.com/sysrepo/sysrepo/pull/241,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/241#issuecomment-233951400,"callback works, but this is really just playing around with cython","Hi,
I have merged your pull request into the newly created branch named experimental .
Thanks,
Rastislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,244,2016-07-19T11:20:31Z,2016-07-19T11:41:17Z,2016-07-19T11:41:17Z,MERGED,True,1,1,1,https://github.com/lukasmacko,Fix #243,3,[],https://github.com/sysrepo/sysrepo/pull/244,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/244,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,244,2016-07-19T11:20:31Z,2016-07-19T11:41:17Z,2016-07-19T11:41:17Z,MERGED,True,1,1,1,https://github.com/lukasmacko,Fix #243,3,[],https://github.com/sysrepo/sysrepo/pull/244,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/244#issuecomment-233604341,,"Current coverage is 84.74%

Merging #244 into devel will decrease coverage by 0.01%

@@              devel       #244   diff @@
==========================================
  Files            24         24          
  Lines         13974      13974          
  Methods         617        617          
  Messages          0          0          
  Branches       2290       2290          
==========================================
- Hits          11843      11841     -2   
- Misses         2131       2133     +2   
  Partials          0          0          

Powered by Codecov. Last updated by 1aebf5c...22f6051",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,245,2016-07-20T11:51:41Z,2016-07-20T11:59:36Z,2016-07-20T11:59:36Z,MERGED,True,3,3,1,https://github.com/rastislavs,fix build warnings on 32-bit architectures,1,[],https://github.com/sysrepo/sysrepo/pull/245,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/245,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,245,2016-07-20T11:51:41Z,2016-07-20T11:59:36Z,2016-07-20T11:59:36Z,MERGED,True,3,3,1,https://github.com/rastislavs,fix build warnings on 32-bit architectures,1,[],https://github.com/sysrepo/sysrepo/pull/245,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/245#issuecomment-233928693,,"Current coverage is 84.72%

Merging #245 into devel will decrease coverage by 0.04%

@@              devel       #245   diff @@
==========================================
  Files            24         24          
  Lines         13974      13974          
  Methods         617        617          
  Messages          0          0          
  Branches       2290       2290          
==========================================
- Hits          11845      11839     -6   
- Misses         2129       2135     +6   
  Partials          0          0          

Powered by Codecov. Last updated by af3ce4c...b4f7e5c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,246,2016-07-20T12:59:19Z,2016-07-20T13:09:23Z,2016-07-20T13:09:23Z,MERGED,True,42,39,6,https://github.com/rastislavs,bug fixes,5,[],https://github.com/sysrepo/sysrepo/pull/246,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/246,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,246,2016-07-20T12:59:19Z,2016-07-20T13:09:23Z,2016-07-20T13:09:23Z,MERGED,True,42,39,6,https://github.com/rastislavs,bug fixes,5,[],https://github.com/sysrepo/sysrepo/pull/246,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/246#issuecomment-233943146,,"Current coverage is 85.12%

Merging #246 into master will increase coverage by <.01%

@@             master       #246   diff @@
==========================================
  Files            23         23          
  Lines         12125      12134     +9   
  Methods         564        564          
  Messages          0          0          
  Branches       1938       1940     +2   
==========================================
+ Hits          10320      10328     +8   
- Misses         1805       1806     +1   
  Partials          0          0          

Powered by Codecov. Last updated by 416eaa4...40fd5aa",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,247,2016-07-21T09:23:43Z,2016-07-21T10:03:55Z,2016-07-21T10:03:55Z,MERGED,True,287,28,9,https://github.com/lukasmacko,Load config from startup to running for each subscription,10,[],https://github.com/sysrepo/sysrepo/pull/247,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/247,"fix subscribe for subtree - copy only a part of configuration
enable mandatory leaves in container/lists which is enabled and not enabled with children
other fixes","fix subscribe for subtree - copy only a part of configuration
enable mandatory leaves in container/lists which is enabled and not enabled with children
other fixes",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,247,2016-07-21T09:23:43Z,2016-07-21T10:03:55Z,2016-07-21T10:03:55Z,MERGED,True,287,28,9,https://github.com/lukasmacko,Load config from startup to running for each subscription,10,[],https://github.com/sysrepo/sysrepo/pull/247,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/247#issuecomment-234203409,"fix subscribe for subtree - copy only a part of configuration
enable mandatory leaves in container/lists which is enabled and not enabled with children
other fixes","Current coverage is 85.03%

Merging #247 into master will decrease coverage by <.01%

@@             master       #247   diff @@
==========================================
  Files            23         23          
  Lines         12132      12204    +72   
  Methods         564        566     +2   
  Messages          0          0          
  Branches       1940       1950    +10   
==========================================
+ Hits          10316      10377    +61   
- Misses         1816       1827    +11   
  Partials          0          0          

Powered by Codecov. Last updated by 9f9ffdc...fd33fba",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,248,2016-07-21T11:31:53Z,2016-07-21T11:39:16Z,2016-07-21T11:39:17Z,MERGED,True,8,7,2,https://github.com/rastislavs,some bug fixes,4,[],https://github.com/sysrepo/sysrepo/pull/248,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/248,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,248,2016-07-21T11:31:53Z,2016-07-21T11:39:16Z,2016-07-21T11:39:17Z,MERGED,True,8,7,2,https://github.com/rastislavs,some bug fixes,4,[],https://github.com/sysrepo/sysrepo/pull/248,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/248#issuecomment-234229182,,"Current coverage is 84.78%

Merging #248 into devel will increase coverage by 0.04%

@@              devel       #248   diff @@
==========================================
  Files            24         24          
  Lines         13980      13981     +1   
  Methods         617        617          
  Messages          0          0          
  Branches       2292       2291     -1   
==========================================
+ Hits          11847      11853     +6   
+ Misses         2133       2128     -5   
  Partials          0          0          

Powered by Codecov. Last updated by 74ca3f5...48ebca9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,249,2016-07-21T12:45:11Z,2016-07-21T13:27:58Z,2016-07-21T13:27:58Z,MERGED,True,288,30,9,https://github.com/lukasmacko,Merge fixes from master to devel,15,[],https://github.com/sysrepo/sysrepo/pull/249,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/249,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,249,2016-07-21T12:45:11Z,2016-07-21T13:27:58Z,2016-07-21T13:27:58Z,MERGED,True,288,30,9,https://github.com/lukasmacko,Merge fixes from master to devel,15,[],https://github.com/sysrepo/sysrepo/pull/249,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/249#issuecomment-234243712,,"Current coverage is 84.76%

Merging #249 into devel will decrease coverage by 0.04%

@@              devel       #249   diff @@
==========================================
  Files            24         24          
  Lines         13979      14051    +72   
  Methods         617        619     +2   
  Messages          0          0          
  Branches       2291       2301    +10   
==========================================
+ Hits          11854      11910    +56   
- Misses         2125       2141    +16   
  Partials          0          0          

Powered by Codecov. Last updated by b78b1df...f4f6c3a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,250,2016-07-21T15:36:07Z,2016-07-22T08:03:23Z,2016-07-22T08:03:23Z,MERGED,True,49,25,5,https://github.com/rastislavs,Fixes for sysrepoctl install & uninstall issues,2,[],https://github.com/sysrepo/sysrepo/pull/250,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/250,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,250,2016-07-21T15:36:07Z,2016-07-22T08:03:23Z,2016-07-22T08:03:23Z,MERGED,True,49,25,5,https://github.com/rastislavs,Fixes for sysrepoctl install & uninstall issues,2,[],https://github.com/sysrepo/sysrepo/pull/250,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/250#issuecomment-234310219,,"Current coverage is 84.74% (diff: 100%)

Merging #250 into devel will decrease coverage by 0.01%

@@              devel       #250   diff @@
==========================================
  Files            24         24          
  Lines         14053      14064    +11   
  Methods         619        619          
  Messages          0          0          
  Branches       2301       2305     +4   
==========================================
+ Hits          11910      11918     +8   
- Misses         2143       2146     +3   
  Partials          0          0          

Powered by Codecov. Last update 86dcc33...a3e523e",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,252,2016-07-25T08:39:16Z,2016-07-25T08:44:58Z,2016-07-25T08:44:58Z,MERGED,True,4,6,1,https://github.com/rastislavs,fixed #251,1,[],https://github.com/sysrepo/sysrepo/pull/252,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/252,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,254,2016-07-26T11:01:34Z,2016-07-26T11:40:34Z,2016-07-26T11:40:34Z,MERGED,True,67,3,3,https://github.com/lukasmacko,Setting leaf with deafult value using SR_EDIT_STRICT,2,[],https://github.com/sysrepo/sysrepo/pull/254,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/254,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,254,2016-07-26T11:01:34Z,2016-07-26T11:40:34Z,2016-07-26T11:40:34Z,MERGED,True,67,3,3,https://github.com/lukasmacko,Setting leaf with deafult value using SR_EDIT_STRICT,2,[],https://github.com/sysrepo/sysrepo/pull/254,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/254#issuecomment-235237431,,"Current coverage is 85.02% (diff: 100%)

Merging #254 into master will decrease coverage by 0.03%

@@             master       #254   diff @@
==========================================
  Files            23         23          
  Lines         12204      12210     +6   
  Methods         566        566          
  Messages          0          0          
  Branches       1948       1951     +3   
==========================================
+ Hits          10379      10381     +2   
- Misses         1825       1829     +4   
  Partials          0          0          

Powered by Codecov. Last update fa7b2f7...2999b1c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,257,2016-07-28T11:05:02Z,2016-07-29T07:23:44Z,2016-07-29T07:23:44Z,MERGED,True,1956,146,16,https://github.com/milanlenco,RPC tree data API,6,[],https://github.com/sysrepo/sysrepo/pull/257,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/257,"The tree variant of API first implemented for RPC. All the necessary conversion functions (from/to libyang/GPB) are in place so it should be relatively quick to do the same for the rest of APIs.
Also, I'm thinking about adding some macros for easier construction of sysrepo data trees as it is quite tiresome to do it from scratch.","The tree variant of API first implemented for RPC. All the necessary conversion functions (from/to libyang/GPB) are in place so it should be relatively quick to do the same for the rest of APIs.
Also, I'm thinking about adding some macros for easier construction of sysrepo data trees as it is quite tiresome to do it from scratch.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,257,2016-07-28T11:05:02Z,2016-07-29T07:23:44Z,2016-07-29T07:23:44Z,MERGED,True,1956,146,16,https://github.com/milanlenco,RPC tree data API,6,[],https://github.com/sysrepo/sysrepo/pull/257,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/257#issuecomment-235866126,"The tree variant of API first implemented for RPC. All the necessary conversion functions (from/to libyang/GPB) are in place so it should be relatively quick to do the same for the rest of APIs.
Also, I'm thinking about adding some macros for easier construction of sysrepo data trees as it is quite tiresome to do it from scratch.","Current coverage is 84.52% (diff: 78.72%)

Merging #257 into devel will decrease coverage by 0.28%

@@              devel       #257   diff @@
==========================================
  Files            24         24          
  Lines         14063      14463   +400   
  Methods         619        636    +17   
  Messages          0          0          
  Branches       2303       2385    +82   
==========================================
+ Hits          11925      12224   +299   
- Misses         2138       2239   +101   
  Partials          0          0          

Powered by Codecov. Last update fc400cc...24f4cb1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,259,2016-07-29T11:52:37Z,2016-07-29T12:27:29Z,2016-07-29T12:27:29Z,MERGED,True,1,1,1,https://github.com/rastislavs, 	use config-only session in sysrepocfg,3,[],https://github.com/sysrepo/sysrepo/pull/259,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/259,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,260,2016-07-29T13:09:12Z,2016-07-29T13:19:06Z,2016-07-29T13:19:06Z,MERGED,True,10,14,3,https://github.com/milanlenco,fixed issues found by Coverity,1,[],https://github.com/sysrepo/sysrepo/pull/260,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/260,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,260,2016-07-29T13:09:12Z,2016-07-29T13:19:06Z,2016-07-29T13:19:06Z,MERGED,True,10,14,3,https://github.com/milanlenco,fixed issues found by Coverity,1,[],https://github.com/sysrepo/sysrepo/pull/260,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/260#issuecomment-236177908,,"Current coverage is 84.51% (diff: 60.00%)

Merging #260 into devel will increase coverage by 0.02%

@@              devel       #260   diff @@
==========================================
  Files            24         24          
  Lines         14471      14473     +2   
  Methods         636        636          
  Messages          0          0          
  Branches       2388       2389     +1   
==========================================
+ Hits          12227      12231     +4   
+ Misses         2244       2242     -2   
  Partials          0          0          

Powered by Codecov. Last update d8f7eb9...02f74b3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,261,2016-07-29T13:30:56Z,2016-07-29T18:07:03Z,2016-07-29T18:07:03Z,MERGED,True,1,0,1,https://github.com/milanlenco,fix missing break statement,1,[],https://github.com/sysrepo/sysrepo/pull/261,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/261,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,261,2016-07-29T13:30:56Z,2016-07-29T18:07:03Z,2016-07-29T18:07:03Z,MERGED,True,1,0,1,https://github.com/milanlenco,fix missing break statement,1,[],https://github.com/sysrepo/sysrepo/pull/261,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/261#issuecomment-236182895,,"Current coverage is 84.56% (diff: 100%)

Merging #261 into devel will increase coverage by 0.02%

@@              devel       #261   diff @@
==========================================
  Files            24         24          
  Lines         14473      14473          
  Methods         636        636          
  Messages          0          0          
  Branches       2389       2389          
==========================================
+ Hits          12235      12238     +3   
+ Misses         2238       2235     -3   
  Partials          0          0          

Powered by Codecov. Last update 8e3f2a2...7b1fb1f",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,262,2016-08-03T06:35:22Z,2016-08-03T06:56:10Z,2016-08-03T06:56:10Z,CLOSED,False,11215,687,82,https://github.com/mislavn,Bindings,191,[],https://github.com/sysrepo/sysrepo/pull/262,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/262,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,262,2016-08-03T06:35:22Z,2016-08-03T06:56:10Z,2016-08-03T06:56:10Z,CLOSED,False,11215,687,82,https://github.com/mislavn,Bindings,191,[],https://github.com/sysrepo/sysrepo/pull/262,https://github.com/rastislavs,2,https://github.com/sysrepo/sysrepo/pull/262#issuecomment-237157896,,"Wrong destination for this pull request, please open it into the devel branch.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,263,2016-08-03T07:05:30Z,2016-08-03T08:39:37Z,2016-08-03T08:39:37Z,MERGED,True,1041,117,17,https://github.com/rastislavs,Application-local file descriptor watcher API,23,[],https://github.com/sysrepo/sysrepo/pull/263,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/263,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,263,2016-08-03T07:05:30Z,2016-08-03T08:39:37Z,2016-08-03T08:39:37Z,MERGED,True,1041,117,17,https://github.com/rastislavs,Application-local file descriptor watcher API,23,[],https://github.com/sysrepo/sysrepo/pull/263,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/263#issuecomment-237160523,,"Current coverage is 84.54% (diff: 84.74%)

Merging #263 into devel will increase coverage by 0.03%

@@              devel       #263   diff @@
==========================================
  Files            24         24          
  Lines         14474      14602   +128   
  Methods         636        645     +9   
  Messages          0          0          
  Branches       2389       2409    +20   
==========================================
+ Hits          12232      12345   +113   
- Misses         2242       2257    +15   
  Partials          0          0          

Powered by Codecov. Last update 0052416...0644115",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,264,2016-08-03T07:48:26Z,2016-08-05T06:36:27Z,2016-11-15T18:05:36Z,MERGED,True,2867,28,30,https://github.com/mislavn,Bindings,8,[],https://github.com/sysrepo/sysrepo/pull/264,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/264,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,264,2016-08-03T07:48:26Z,2016-08-05T06:36:27Z,2016-11-15T18:05:36Z,MERGED,True,2867,28,30,https://github.com/mislavn,Bindings,8,[],https://github.com/sysrepo/sysrepo/pull/264,https://github.com/rastislavs,2,https://github.com/sysrepo/sysrepo/pull/264#issuecomment-237188874,,"Hi,
there is a build error in the Travis CI build of your pull request, could you please look into the matter?
CMake Error at swig/CMakeLists.txt:56 (file):
file COPY cannot find
""/home/travis/build/sysrepo/sysrepo/swig/python2/examples"".
https://travis-ci.org/sysrepo/sysrepo/builds/149403834",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,264,2016-08-03T07:48:26Z,2016-08-05T06:36:27Z,2016-11-15T18:05:36Z,MERGED,True,2867,28,30,https://github.com/mislavn,Bindings,8,[],https://github.com/sysrepo/sysrepo/pull/264,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/264#issuecomment-237222458,,"Current coverage is 84.60% (diff: 60.00%)

Merging #264 into devel will decrease coverage by 0.03%

@@              devel       #264   diff @@
==========================================
  Files            24         24          
  Lines         14663      14664     +1   
  Methods         647        647          
  Messages          0          0          
  Branches       2434       2434          
==========================================
- Hits          12409      12406     -3   
- Misses         2254       2258     +4   
  Partials          0          0          

Powered by Codecov. Last update d605a68...fdb86e5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,265,2016-08-03T08:03:09Z,2016-08-03T08:46:52Z,2016-08-03T08:46:52Z,MERGED,True,344,172,6,https://github.com/milanlenco,Module dependencies: support submodules,3,[],https://github.com/sysrepo/sysrepo/pull/265,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/265,"This pull request contains only implementation, unit tests will come later once some bugs are fixed in libyang.","This pull request contains only implementation, unit tests will come later once some bugs are fixed in libyang.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,265,2016-08-03T08:03:09Z,2016-08-03T08:46:52Z,2016-08-03T08:46:52Z,MERGED,True,344,172,6,https://github.com/milanlenco,Module dependencies: support submodules,3,[],https://github.com/sysrepo/sysrepo/pull/265,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/265#issuecomment-237171548,"This pull request contains only implementation, unit tests will come later once some bugs are fixed in libyang.","Current coverage is 84.52% (diff: 82.98%)

Merging #265 into devel will increase coverage by 0.01%

@@              devel       #265   diff @@
==========================================
  Files            24         24          
  Lines         14474      14537    +63   
  Methods         636        638     +2   
  Messages          0          0          
  Branches       2389       2414    +25   
==========================================
+ Hits          12232      12287    +55   
- Misses         2242       2250     +8   
  Partials          0          0          

Powered by Codecov. Last update 0052416...1c6d251",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,266,2016-08-03T15:21:53Z,2016-08-04T06:32:32Z,2016-10-07T10:45:23Z,MERGED,True,1539,1012,30,https://github.com/lukasmacko,Ly ctx per module,24,[],https://github.com/sysrepo/sysrepo/pull/266,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/266,"separate ly_ctx for each module
on demand schema loading
uninstallation whitout restart need
minor fixes","separate ly_ctx for each module
on demand schema loading
uninstallation whitout restart need
minor fixes",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,266,2016-08-03T15:21:53Z,2016-08-04T06:32:32Z,2016-10-07T10:45:23Z,MERGED,True,1539,1012,30,https://github.com/lukasmacko,Ly ctx per module,24,[],https://github.com/sysrepo/sysrepo/pull/266,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/266#issuecomment-237273116,"separate ly_ctx for each module
on demand schema loading
uninstallation whitout restart need
minor fixes","Current coverage is 84.72% (diff: 92.98%)

Merging #266 into devel will increase coverage by 0.09%

@@              devel       #266   diff @@
==========================================
  Files            24         24          
  Lines         14663      14772   +109   
  Methods         647        651     +4   
  Messages          0          0          
  Branches       2434       2422    -12   
==========================================
+ Hits          12409      12515   +106   
- Misses         2254       2257     +3   
  Partials          0          0          

Powered by Codecov. Last update d605a68...304ef52",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,268,2016-08-04T06:22:42Z,2016-08-04T08:57:20Z,2016-08-04T08:57:20Z,MERGED,True,973,183,14,https://github.com/milanlenco,Event notifications tree API,12,[],https://github.com/sysrepo/sysrepo/pull/268,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/268,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,268,2016-08-04T06:22:42Z,2016-08-04T08:57:20Z,2016-08-04T08:57:20Z,MERGED,True,973,183,14,https://github.com/milanlenco,Event notifications tree API,12,[],https://github.com/sysrepo/sysrepo/pull/268,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/268#issuecomment-237464023,,"Current coverage is 85.00% (diff: 98.06%)

Merging #268 into devel will increase coverage by 0.26%

@@              devel       #268   diff @@
==========================================
  Files            24         24          
  Lines         14775      14813    +38   
  Methods         651        655     +4   
  Messages          0          0          
  Branches       2422       2415     -7   
==========================================
+ Hits          12521      12591    +70   
+ Misses         2254       2222    -32   
  Partials          0          0          

Powered by Codecov. Last update efe3703...6ee2603",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,268,2016-08-04T06:22:42Z,2016-08-04T08:57:20Z,2016-08-04T08:57:20Z,MERGED,True,973,183,14,https://github.com/milanlenco,Event notifications tree API,12,[],https://github.com/sysrepo/sysrepo/pull/268,https://github.com/milanlenco,3,https://github.com/sysrepo/sysrepo/pull/268#issuecomment-237484619,,"Added unit tests for submodule dependencies (bugs fixed in libyang) + merged with ""Ly ctx per module"".
Note: update your libyang installation to get the unit tests to pass.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,269,2016-08-04T07:03:21Z,2016-08-04T07:15:58Z,2016-08-04T07:15:58Z,MERGED,True,10,2,4,https://github.com/rastislavs,Add pkg-config variables REPOSITORY_LOC & PLUGINS_DIR,4,[],https://github.com/sysrepo/sysrepo/pull/269,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/269,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,269,2016-08-04T07:03:21Z,2016-08-04T07:15:58Z,2016-08-04T07:15:58Z,MERGED,True,10,2,4,https://github.com/rastislavs,Add pkg-config variables REPOSITORY_LOC & PLUGINS_DIR,4,[],https://github.com/sysrepo/sysrepo/pull/269,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/269#issuecomment-237472144,,"Current coverage is 85.06% (diff: 100%)

Merging #269 into master will decrease coverage by 0.01%

@@             master       #269   diff @@
==========================================
  Files            23         23          
  Lines         12211      12211          
  Methods         566        566          
  Messages          0          0          
  Branches       1951       1951          
==========================================
- Hits          10388      10387     -1   
- Misses         1823       1824     +1   
  Partials          0          0          

Powered by Codecov. Last update d7b5593...e38ab1f",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,270,2016-08-04T10:13:04Z,2016-08-04T10:19:02Z,2016-08-04T10:19:02Z,MERGED,True,11,7,2,https://github.com/milanlenco,fix some issues found by coverity,1,[],https://github.com/sysrepo/sysrepo/pull/270,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/270,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,270,2016-08-04T10:13:04Z,2016-08-04T10:19:02Z,2016-08-04T10:19:02Z,MERGED,True,11,7,2,https://github.com/milanlenco,fix some issues found by coverity,1,[],https://github.com/sysrepo/sysrepo/pull/270,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/270#issuecomment-237513414,,"Current coverage is 84.98% (diff: 60.00%)

Merging #270 into devel will decrease coverage by <.01%

@@              devel       #270   diff @@
==========================================
  Files            24         24          
  Lines         14814      14817     +3   
  Methods         655        655          
  Messages          0          0          
  Branches       2415       2416     +1   
==========================================
+ Hits          12589      12591     +2   
- Misses         2225       2226     +1   
  Partials          0          0          

Powered by Codecov. Last update 6a559c8...d25b87b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,271,2016-08-04T10:17:10Z,2016-08-04T10:49:58Z,2016-08-04T10:49:58Z,MERGED,True,12,14,2,https://github.com/lukasmacko,Fix SA,1,[],https://github.com/sysrepo/sysrepo/pull/271,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/271,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,271,2016-08-04T10:17:10Z,2016-08-04T10:49:58Z,2016-08-04T10:49:58Z,MERGED,True,12,14,2,https://github.com/lukasmacko,Fix SA,1,[],https://github.com/sysrepo/sysrepo/pull/271,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/271#issuecomment-237515261,,"Current coverage is 85.04% (diff: 66.67%)

Merging #271 into devel will increase coverage by 0.06%

@@              devel       #271   diff @@
==========================================
  Files            24         24          
  Lines         14814      14816     +2   
  Methods         655        655          
  Messages          0          0          
  Branches       2415       2417     +2   
==========================================
+ Hits          12589      12600    +11   
+ Misses         2225       2216     -9   
  Partials          0          0          

Powered by Codecov. Last update 6a559c8...a12c267",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,272,2016-08-04T13:00:47Z,2016-08-04T13:40:59Z,2016-08-04T13:40:59Z,MERGED,True,324,7,3,https://github.com/lukasmacko,Get changes improvements,1,[],https://github.com/sysrepo/sysrepo/pull/272,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/272,"change default value is represented as modified instead of created or deleted
tests","change default value is represented as modified instead of created or deleted
tests",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,273,2016-08-05T06:27:20Z,2016-08-05T07:30:47Z,2016-08-05T07:30:47Z,MERGED,True,13,6,4,https://github.com/rastislavs,Fixed issues reported by SA,3,[],https://github.com/sysrepo/sysrepo/pull/273,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/273,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,273,2016-08-05T06:27:20Z,2016-08-05T07:30:47Z,2016-08-05T07:30:47Z,MERGED,True,13,6,4,https://github.com/rastislavs,Fixed issues reported by SA,3,[],https://github.com/sysrepo/sysrepo/pull/273,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/273#issuecomment-237767744,,"Current coverage is 85.02% (diff: 83.33%)

Merging #273 into devel will increase coverage by 0.01%

@@              devel       #273   diff @@
==========================================
  Files            24         24          
  Lines         14814      14817     +3   
  Methods         655        655          
  Messages          0          0          
  Branches       2417       2418     +1   
==========================================
+ Hits          12594      12598     +4   
+ Misses         2220       2219     -1   
  Partials          0          0          

Powered by Codecov. Last update 5ab9168...6cc3184",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,274,2016-08-05T06:31:16Z,2016-08-05T07:16:46Z,2016-08-05T07:16:46Z,MERGED,True,1,1,1,https://github.com/rastislavs,fix #267,2,[],https://github.com/sysrepo/sysrepo/pull/274,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/274,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,274,2016-08-05T06:31:16Z,2016-08-05T07:16:46Z,2016-08-05T07:16:46Z,MERGED,True,1,1,1,https://github.com/rastislavs,fix #267,2,[],https://github.com/sysrepo/sysrepo/pull/274,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/274#issuecomment-237768933,,"Current coverage is 85.08% (diff: 0.00%)

Merging #274 into master will increase coverage by 0.04%

@@             master       #274   diff @@
==========================================
  Files            23         23          
  Lines         12211      12213     +2   
  Methods         566        566          
  Messages          0          0          
  Branches       1951       1951          
==========================================
+ Hits          10385      10391     +6   
+ Misses         1826       1822     -4   
  Partials          0          0          

Powered by Codecov. Last update 411b07a...e17078b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,275,2016-08-05T13:03:24Z,2016-08-08T06:55:04Z,2016-08-08T06:55:04Z,MERGED,True,832,184,18,https://github.com/milanlenco,Support combination of tree and value APIs for RPC and event notifications,1,[],https://github.com/sysrepo/sysrepo/pull/275,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/275,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,275,2016-08-05T13:03:24Z,2016-08-08T06:55:04Z,2016-08-08T06:55:04Z,MERGED,True,832,184,18,https://github.com/milanlenco,Support combination of tree and value APIs for RPC and event notifications,1,[],https://github.com/sysrepo/sysrepo/pull/275,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/275#issuecomment-237845943,,"Current coverage is 85.03% (diff: 95.80%)

Merging #275 into devel will decrease coverage by 0.03%

@@              devel       #275   diff @@
==========================================
  Files            24         24          
  Lines         14818      14859    +41   
  Methods         655        659     +4   
  Messages          0          0          
  Branches       2418       2417     -1   
==========================================
+ Hits          12605      12635    +30   
- Misses         2213       2224    +11   
  Partials          0          0          

Powered by Codecov. Last update 2e0dc62...1118453",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,277,2016-08-09T10:26:40Z,2016-08-09T10:49:43Z,2016-08-09T10:49:43Z,MERGED,True,16,2,2,https://github.com/lukasmacko,Fix list schemas - no revision,3,[],https://github.com/sysrepo/sysrepo/pull/277,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/277,minor improvements,minor improvements,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,277,2016-08-09T10:26:40Z,2016-08-09T10:49:43Z,2016-08-09T10:49:43Z,MERGED,True,16,2,2,https://github.com/lukasmacko,Fix list schemas - no revision,3,[],https://github.com/sysrepo/sysrepo/pull/277,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/277#issuecomment-238515503,minor improvements,"Current coverage is 85.07% (diff: 66.67%)

Merging #277 into devel will decrease coverage by 0.01%

@@              devel       #277   diff @@
==========================================
  Files            24         24          
  Lines         14860      14860          
  Methods         659        659          
  Messages          0          0          
  Branches       2417       2417          
==========================================
- Hits          12644      12642     -2   
- Misses         2216       2218     +2   
  Partials          0          0          

Powered by Codecov. Last update 4bbc631...5e9bf20",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,278,2016-08-09T14:05:36Z,2016-08-10T06:24:45Z,2016-08-10T06:24:45Z,MERGED,True,27,25,3,https://github.com/lukasmacko,Fix leafref issues,3,[],https://github.com/sysrepo/sysrepo/pull/278,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/278,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,278,2016-08-09T14:05:36Z,2016-08-10T06:24:45Z,2016-08-10T06:24:45Z,MERGED,True,27,25,3,https://github.com/lukasmacko,Fix leafref issues,3,[],https://github.com/sysrepo/sysrepo/pull/278,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/278#issuecomment-238775952,,"Current coverage is 85.16% (diff: 44.00%)

Merging #278 into master will increase coverage by 0.08%

@@             master       #278   diff @@
==========================================
  Files            23         23          
  Lines         12211      12214     +3   
  Methods         566        566          
  Messages          0          0          
  Branches       1951       1952     +1   
==========================================
+ Hits          10389      10401    +12   
+ Misses         1822       1813     -9   
  Partials          0          0          

Powered by Codecov. Last update 8c261ca...7f0e7ff",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,279,2016-08-10T06:52:22Z,2016-08-10T06:59:44Z,2016-08-10T06:59:44Z,MERGED,True,164,141,4,https://github.com/rastislavs,Cleanup & doc. updates,6,[],https://github.com/sysrepo/sysrepo/pull/279,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/279,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,279,2016-08-10T06:52:22Z,2016-08-10T06:59:44Z,2016-08-10T06:59:44Z,MERGED,True,164,141,4,https://github.com/rastislavs,Cleanup & doc. updates,6,[],https://github.com/sysrepo/sysrepo/pull/279,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/279#issuecomment-238781954,,"Current coverage is 84.97% (diff: 100%)

Merging #279 into devel will decrease coverage by 0.04%

@@              devel       #279   diff @@
==========================================
  Files            24         24          
  Lines         14858      14859     +1   
  Methods         659        659          
  Messages          0          0          
  Branches       2417       2417          
==========================================
- Hits          12630      12625     -5   
- Misses         2228       2234     +6   
  Partials          0          0          

Powered by Codecov. Last update 6a26887...01f5555",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,280,2016-08-10T11:21:07Z,2016-08-10T11:38:30Z,2016-08-10T11:38:30Z,MERGED,True,15,14,2,https://github.com/rastislavs,Readme updates,9,[],https://github.com/sysrepo/sysrepo/pull/280,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/280,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,280,2016-08-10T11:21:07Z,2016-08-10T11:38:30Z,2016-08-10T11:38:30Z,MERGED,True,15,14,2,https://github.com/rastislavs,Readme updates,9,[],https://github.com/sysrepo/sysrepo/pull/280,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/280#issuecomment-238839435,,"Current coverage is 85.04% (diff: 100%)

Merging #280 into master will decrease coverage by 0.02%

@@             master       #280   diff @@
==========================================
  Files            23         23          
  Lines         12213      12214     +1   
  Methods         566        566          
  Messages          0          0          
  Branches       1952       1952          
==========================================
- Hits          10388      10387     -1   
- Misses         1825       1827     +2   
  Partials          0          0          

Powered by Codecov. Last update 2100dbe...d9536de",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,282,2016-08-15T09:25:06Z,2016-08-15T10:10:55Z,2016-08-15T10:10:55Z,MERGED,True,25,23,3,https://github.com/lukasmacko,Use libyang devel + build fix,1,[],https://github.com/sysrepo/sysrepo/pull/282,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/282,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,282,2016-08-15T09:25:06Z,2016-08-15T10:10:55Z,2016-08-15T10:10:55Z,MERGED,True,25,23,3,https://github.com/lukasmacko,Use libyang devel + build fix,1,[],https://github.com/sysrepo/sysrepo/pull/282,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/282#issuecomment-239763265,,"Current coverage is 85.04% (diff: 58.82%)

Merging #282 into devel will increase coverage by 0.04%

@@              devel       #282   diff @@
==========================================
  Files            24         24          
  Lines         14860      14862     +2   
  Methods         659        659          
  Messages          0          0          
  Branches       2417       2418     +1   
==========================================
+ Hits          12630      12638     +8   
+ Misses         2230       2224     -6   
  Partials          0          0          

Powered by Codecov. Last update 136158d...56202aa",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,301,2016-08-18T12:36:39Z,2016-08-26T13:06:45Z,2016-08-26T13:06:45Z,MERGED,True,5567,1434,57,https://github.com/milanlenco,Experimental memory management,32,[],https://github.com/sysrepo/sysrepo/pull/301,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/301,"Do not merge this pull request, it is only for the feedback!
The pull request implements a custom memory management, targeted to avoid duplication of strings (xpath, string values) during the conversions to/from GPB messages. Currently it is fully integrated only into RPC processing path, and partly integrated into the rest of sysrepo. Also, as a part of this work, a new public API for more user-friendly construction of values and trees is introduced (see the second half of sr_experimental.h). It is backward compatible with the old way though (the two methods just should not be mixed). The benefits of the new memory management, however, are in effect on the client side only if the new API is used. Sysrepo will use the new API only.
The basic idea was to allocate memory values, trees and GPB messages from a linked-list of larger possibly pre-allocated memory blocks (so called sysrepo memory context). When a new object is created (object may be: GPB message, sysrepo value, array of sysrepo values, sysrepo tree, array of sysrepo trees) a new memory context is created (or a freed old one is reused). The object maintains a pointer to this context. The context maintains an object counter. When values/trees are converted to/from GPB message only a shallow copy is performed and object counter is increased. The two objects will share the same context. Since the context is not thread-safe, they should not be manipulated at the same time by different threads!!! When an object is de-allocated (for GPB one has to use sr_gpb_free instead of sr__gpb__free_unpacked), the counter is decreased by one. Once the counter drops to zero, the context is freed -- it may be kept in the thread-private space if the limits for the free space are not exceeded or completely destroyed otherwise.
Results of the performance testing (for RPC):

the number of allocations dropped by 60% for values and 70% for trees
the total amount of newly allocated memory dropped by 96.5% for values and 97% for trees
the runtime decreased by 12% for values and 15% for trees (the new mem. management doesn't use any inter-thread synchronization primitives).
generally, the tree API is faster (10% shorter runtime) than values API, but uses more allocations (15% more) -- this is the same regardless of memory management
the memory footprint as measured by valgrind is two times higher that the average with the old memory management. This is because some freed memory is actually kept in thread-specific space for reuse. On the other hand, the footprint is very stable (not a series of peaks as it is currently) and changes only if there is a noticeable change in the average size of requests/responses (the amount of free memory to keep is calculated dynamically based on the recent history). Realistically, the OS memory management also maintains some freed blocks, suffers from internal fragmentation and doesn't pass freed memory block from one thread to another instantly to reduce the frequency of inter-thread synchronizations. Valgrind doesn't take into account any of this.

The final implementation (if approved) will not contain helper macros for counting allocations (added to sysrepo.h) and will be in something like sr_mem_mgmt.c and not sr_experimental.c as is now.","Do not merge this pull request, it is only for the feedback!
The pull request implements a custom memory management, targeted to avoid duplication of strings (xpath, string values) during the conversions to/from GPB messages. Currently it is fully integrated only into RPC processing path, and partly integrated into the rest of sysrepo. Also, as a part of this work, a new public API for more user-friendly construction of values and trees is introduced (see the second half of sr_experimental.h). It is backward compatible with the old way though (the two methods just should not be mixed). The benefits of the new memory management, however, are in effect on the client side only if the new API is used. Sysrepo will use the new API only.
The basic idea was to allocate memory values, trees and GPB messages from a linked-list of larger possibly pre-allocated memory blocks (so called sysrepo memory context). When a new object is created (object may be: GPB message, sysrepo value, array of sysrepo values, sysrepo tree, array of sysrepo trees) a new memory context is created (or a freed old one is reused). The object maintains a pointer to this context. The context maintains an object counter. When values/trees are converted to/from GPB message only a shallow copy is performed and object counter is increased. The two objects will share the same context. Since the context is not thread-safe, they should not be manipulated at the same time by different threads!!! When an object is de-allocated (for GPB one has to use sr_gpb_free instead of sr__gpb__free_unpacked), the counter is decreased by one. Once the counter drops to zero, the context is freed -- it may be kept in the thread-private space if the limits for the free space are not exceeded or completely destroyed otherwise.
Results of the performance testing (for RPC):

the number of allocations dropped by 60% for values and 70% for trees
the total amount of newly allocated memory dropped by 96.5% for values and 97% for trees
the runtime decreased by 12% for values and 15% for trees (the new mem. management doesn't use any inter-thread synchronization primitives).
generally, the tree API is faster (10% shorter runtime) than values API, but uses more allocations (15% more) -- this is the same regardless of memory management
the memory footprint as measured by valgrind is two times higher that the average with the old memory management. This is because some freed memory is actually kept in thread-specific space for reuse. On the other hand, the footprint is very stable (not a series of peaks as it is currently) and changes only if there is a noticeable change in the average size of requests/responses (the amount of free memory to keep is calculated dynamically based on the recent history). Realistically, the OS memory management also maintains some freed blocks, suffers from internal fragmentation and doesn't pass freed memory block from one thread to another instantly to reduce the frequency of inter-thread synchronizations. Valgrind doesn't take into account any of this.

The final implementation (if approved) will not contain helper macros for counting allocations (added to sysrepo.h) and will be in something like sr_mem_mgmt.c and not sr_experimental.c as is now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,301,2016-08-18T12:36:39Z,2016-08-26T13:06:45Z,2016-08-26T13:06:45Z,MERGED,True,5567,1434,57,https://github.com/milanlenco,Experimental memory management,32,[],https://github.com/sysrepo/sysrepo/pull/301,https://github.com/milanlenco,2,https://github.com/sysrepo/sysrepo/pull/301#issuecomment-240710394,"Do not merge this pull request, it is only for the feedback!
The pull request implements a custom memory management, targeted to avoid duplication of strings (xpath, string values) during the conversions to/from GPB messages. Currently it is fully integrated only into RPC processing path, and partly integrated into the rest of sysrepo. Also, as a part of this work, a new public API for more user-friendly construction of values and trees is introduced (see the second half of sr_experimental.h). It is backward compatible with the old way though (the two methods just should not be mixed). The benefits of the new memory management, however, are in effect on the client side only if the new API is used. Sysrepo will use the new API only.
The basic idea was to allocate memory values, trees and GPB messages from a linked-list of larger possibly pre-allocated memory blocks (so called sysrepo memory context). When a new object is created (object may be: GPB message, sysrepo value, array of sysrepo values, sysrepo tree, array of sysrepo trees) a new memory context is created (or a freed old one is reused). The object maintains a pointer to this context. The context maintains an object counter. When values/trees are converted to/from GPB message only a shallow copy is performed and object counter is increased. The two objects will share the same context. Since the context is not thread-safe, they should not be manipulated at the same time by different threads!!! When an object is de-allocated (for GPB one has to use sr_gpb_free instead of sr__gpb__free_unpacked), the counter is decreased by one. Once the counter drops to zero, the context is freed -- it may be kept in the thread-private space if the limits for the free space are not exceeded or completely destroyed otherwise.
Results of the performance testing (for RPC):

the number of allocations dropped by 60% for values and 70% for trees
the total amount of newly allocated memory dropped by 96.5% for values and 97% for trees
the runtime decreased by 12% for values and 15% for trees (the new mem. management doesn't use any inter-thread synchronization primitives).
generally, the tree API is faster (10% shorter runtime) than values API, but uses more allocations (15% more) -- this is the same regardless of memory management
the memory footprint as measured by valgrind is two times higher that the average with the old memory management. This is because some freed memory is actually kept in thread-specific space for reuse. On the other hand, the footprint is very stable (not a series of peaks as it is currently) and changes only if there is a noticeable change in the average size of requests/responses (the amount of free memory to keep is calculated dynamically based on the recent history). Realistically, the OS memory management also maintains some freed blocks, suffers from internal fragmentation and doesn't pass freed memory block from one thread to another instantly to reduce the frequency of inter-thread synchronizations. Valgrind doesn't take into account any of this.

The final implementation (if approved) will not contain helper macros for counting allocations (added to sysrepo.h) and will be in something like sr_mem_mgmt.c and not sr_experimental.c as is now.",Btw. there are methods to duplicate value(s) and tree(s) if one really needs to have a copy in a separate context.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,301,2016-08-18T12:36:39Z,2016-08-26T13:06:45Z,2016-08-26T13:06:45Z,MERGED,True,5567,1434,57,https://github.com/milanlenco,Experimental memory management,32,[],https://github.com/sysrepo/sysrepo/pull/301,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/301#issuecomment-240711065,"Do not merge this pull request, it is only for the feedback!
The pull request implements a custom memory management, targeted to avoid duplication of strings (xpath, string values) during the conversions to/from GPB messages. Currently it is fully integrated only into RPC processing path, and partly integrated into the rest of sysrepo. Also, as a part of this work, a new public API for more user-friendly construction of values and trees is introduced (see the second half of sr_experimental.h). It is backward compatible with the old way though (the two methods just should not be mixed). The benefits of the new memory management, however, are in effect on the client side only if the new API is used. Sysrepo will use the new API only.
The basic idea was to allocate memory values, trees and GPB messages from a linked-list of larger possibly pre-allocated memory blocks (so called sysrepo memory context). When a new object is created (object may be: GPB message, sysrepo value, array of sysrepo values, sysrepo tree, array of sysrepo trees) a new memory context is created (or a freed old one is reused). The object maintains a pointer to this context. The context maintains an object counter. When values/trees are converted to/from GPB message only a shallow copy is performed and object counter is increased. The two objects will share the same context. Since the context is not thread-safe, they should not be manipulated at the same time by different threads!!! When an object is de-allocated (for GPB one has to use sr_gpb_free instead of sr__gpb__free_unpacked), the counter is decreased by one. Once the counter drops to zero, the context is freed -- it may be kept in the thread-private space if the limits for the free space are not exceeded or completely destroyed otherwise.
Results of the performance testing (for RPC):

the number of allocations dropped by 60% for values and 70% for trees
the total amount of newly allocated memory dropped by 96.5% for values and 97% for trees
the runtime decreased by 12% for values and 15% for trees (the new mem. management doesn't use any inter-thread synchronization primitives).
generally, the tree API is faster (10% shorter runtime) than values API, but uses more allocations (15% more) -- this is the same regardless of memory management
the memory footprint as measured by valgrind is two times higher that the average with the old memory management. This is because some freed memory is actually kept in thread-specific space for reuse. On the other hand, the footprint is very stable (not a series of peaks as it is currently) and changes only if there is a noticeable change in the average size of requests/responses (the amount of free memory to keep is calculated dynamically based on the recent history). Realistically, the OS memory management also maintains some freed blocks, suffers from internal fragmentation and doesn't pass freed memory block from one thread to another instantly to reduce the frequency of inter-thread synchronizations. Valgrind doesn't take into account any of this.

The final implementation (if approved) will not contain helper macros for counting allocations (added to sysrepo.h) and will be in something like sr_mem_mgmt.c and not sr_experimental.c as is now.","Current coverage is 84.91% (diff: 78.77%)

Merging #301 into devel will decrease coverage by 0.48%

@@              devel       #301   diff @@
==========================================
  Files            25         28      +3   
  Lines         15282      16391   +1109   
  Methods         681        722     +41   
  Messages          0          0           
  Branches       2515       2748    +233   
==========================================
+ Hits          13049      13918    +869   
- Misses         2233       2473    +240   
  Partials          0          0           

Powered by Codecov. Last update c4358f2...5180fff",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,301,2016-08-18T12:36:39Z,2016-08-26T13:06:45Z,2016-08-26T13:06:45Z,MERGED,True,5567,1434,57,https://github.com/milanlenco,Experimental memory management,32,[],https://github.com/sysrepo/sysrepo/pull/301,https://github.com/milanlenco,4,https://github.com/sysrepo/sysrepo/pull/301#issuecomment-242727275,"Do not merge this pull request, it is only for the feedback!
The pull request implements a custom memory management, targeted to avoid duplication of strings (xpath, string values) during the conversions to/from GPB messages. Currently it is fully integrated only into RPC processing path, and partly integrated into the rest of sysrepo. Also, as a part of this work, a new public API for more user-friendly construction of values and trees is introduced (see the second half of sr_experimental.h). It is backward compatible with the old way though (the two methods just should not be mixed). The benefits of the new memory management, however, are in effect on the client side only if the new API is used. Sysrepo will use the new API only.
The basic idea was to allocate memory values, trees and GPB messages from a linked-list of larger possibly pre-allocated memory blocks (so called sysrepo memory context). When a new object is created (object may be: GPB message, sysrepo value, array of sysrepo values, sysrepo tree, array of sysrepo trees) a new memory context is created (or a freed old one is reused). The object maintains a pointer to this context. The context maintains an object counter. When values/trees are converted to/from GPB message only a shallow copy is performed and object counter is increased. The two objects will share the same context. Since the context is not thread-safe, they should not be manipulated at the same time by different threads!!! When an object is de-allocated (for GPB one has to use sr_gpb_free instead of sr__gpb__free_unpacked), the counter is decreased by one. Once the counter drops to zero, the context is freed -- it may be kept in the thread-private space if the limits for the free space are not exceeded or completely destroyed otherwise.
Results of the performance testing (for RPC):

the number of allocations dropped by 60% for values and 70% for trees
the total amount of newly allocated memory dropped by 96.5% for values and 97% for trees
the runtime decreased by 12% for values and 15% for trees (the new mem. management doesn't use any inter-thread synchronization primitives).
generally, the tree API is faster (10% shorter runtime) than values API, but uses more allocations (15% more) -- this is the same regardless of memory management
the memory footprint as measured by valgrind is two times higher that the average with the old memory management. This is because some freed memory is actually kept in thread-specific space for reuse. On the other hand, the footprint is very stable (not a series of peaks as it is currently) and changes only if there is a noticeable change in the average size of requests/responses (the amount of free memory to keep is calculated dynamically based on the recent history). Realistically, the OS memory management also maintains some freed blocks, suffers from internal fragmentation and doesn't pass freed memory block from one thread to another instantly to reduce the frequency of inter-thread synchronizations. Valgrind doesn't take into account any of this.

The final implementation (if approved) will not contain helper macros for counting allocations (added to sysrepo.h) and will be in something like sr_mem_mgmt.c and not sr_experimental.c as is now.",Ready for merge. Coverage: 84.91% (decreased by 0.14% due to added safety checks).,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,302,2016-08-19T06:20:23Z,2016-08-19T06:27:38Z,2016-08-19T06:27:38Z,MERGED,True,4,4,3,https://github.com/rastislavs,fix build issues,5,[],https://github.com/sysrepo/sysrepo/pull/302,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/302,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,302,2016-08-19T06:20:23Z,2016-08-19T06:27:38Z,2016-08-19T06:27:38Z,MERGED,True,4,4,3,https://github.com/rastislavs,fix build issues,5,[],https://github.com/sysrepo/sysrepo/pull/302,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/302#issuecomment-240938550,,"Current coverage is 85.04% (diff: 100%)

Merging #302 into master will increase coverage by 0.01%

@@             master       #302   diff @@
==========================================
  Files            23         23          
  Lines         12213      12213          
  Methods         566        566          
  Messages          0          0          
  Branches       1952       1952          
==========================================
+ Hits          10385      10386     +1   
+ Misses         1828       1827     -1   
  Partials          0          0          

Powered by Codecov. Last update 018efee...4c7db13",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,303,2016-08-22T12:19:45Z,2016-08-22T13:11:24Z,2016-08-22T13:11:24Z,MERGED,True,2091,59,7,https://github.com/lukasmacko,Operational data improvements  + Addressing utils,15,[],https://github.com/sysrepo/sysrepo/pull/303,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/303,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,303,2016-08-22T12:19:45Z,2016-08-22T13:11:24Z,2016-08-22T13:11:24Z,MERGED,True,2091,59,7,https://github.com/lukasmacko,Operational data improvements  + Addressing utils,15,[],https://github.com/sysrepo/sysrepo/pull/303,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/303#issuecomment-241397099,,"Current coverage is 85.22% (diff: 92.33%)

Merging #303 into devel will increase coverage by 0.17%

@@              devel       #303   diff @@
==========================================
  Files            24         25     +1   
  Lines         14864      15261   +397   
  Methods         659        681    +22   
  Messages          0          0          
  Branches       2419       2508    +89   
==========================================
+ Hits          12642      13006   +364   
- Misses         2222       2255    +33   
  Partials          0          0          

Powered by Codecov. Last update 0b61e2a...4db03b5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,304,2016-08-22T14:55:30Z,2016-09-02T06:25:19Z,2016-11-15T18:04:01Z,MERGED,True,1266,966,23,https://github.com/mislavn,Shared ptr,17,[],https://github.com/sysrepo/sysrepo/pull/304,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/304,"Hi,


I had set the Session methods get_item, get_items, get_items_iter and get_item_next to return a new class so it is has a python like API as Lukas suggested it.


The method get_change_next returns a shared_ptr which is a wrapper for sr_change_oper_t, this is an overkill in C++ but it generates better python bindings.


In the get_change_next and get_item_next methods i used the following lines:
if (SR_ERR_OK == ret) {
shared_ptr<> oper... //allocated class
return oper; //return class
} else if (SR_ERR_NOT_FOUND == ret) {
return NULL;
} else {
throw_exception(ret);
return NULL;
}
}


I had to create a new Cmake in swig for other bindings, so now cmake generates binary Sysrepo_cpp for C++ API and Sysrepo_bindings for other bindings. Changes between the two are minimal and contained to callbacks functionality, they are visible with ""ifdef SWIG"".


There are no memory leaks in C++ and python bindings work like C++ bindings.
Best regards,
Mislav Novakovic","Hi,


I had set the Session methods get_item, get_items, get_items_iter and get_item_next to return a new class so it is has a python like API as Lukas suggested it.


The method get_change_next returns a shared_ptr which is a wrapper for sr_change_oper_t, this is an overkill in C++ but it generates better python bindings.


In the get_change_next and get_item_next methods i used the following lines:
if (SR_ERR_OK == ret) {
shared_ptr<> oper... //allocated class
return oper; //return class
} else if (SR_ERR_NOT_FOUND == ret) {
return NULL;
} else {
throw_exception(ret);
return NULL;
}
}


I had to create a new Cmake in swig for other bindings, so now cmake generates binary Sysrepo_cpp for C++ API and Sysrepo_bindings for other bindings. Changes between the two are minimal and contained to callbacks functionality, they are visible with ""ifdef SWIG"".


There are no memory leaks in C++ and python bindings work like C++ bindings.
Best regards,
Mislav Novakovic",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,304,2016-08-22T14:55:30Z,2016-09-02T06:25:19Z,2016-11-15T18:04:01Z,MERGED,True,1266,966,23,https://github.com/mislavn,Shared ptr,17,[],https://github.com/sysrepo/sysrepo/pull/304,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/304#issuecomment-241444162,"Hi,


I had set the Session methods get_item, get_items, get_items_iter and get_item_next to return a new class so it is has a python like API as Lukas suggested it.


The method get_change_next returns a shared_ptr which is a wrapper for sr_change_oper_t, this is an overkill in C++ but it generates better python bindings.


In the get_change_next and get_item_next methods i used the following lines:
if (SR_ERR_OK == ret) {
shared_ptr<> oper... //allocated class
return oper; //return class
} else if (SR_ERR_NOT_FOUND == ret) {
return NULL;
} else {
throw_exception(ret);
return NULL;
}
}


I had to create a new Cmake in swig for other bindings, so now cmake generates binary Sysrepo_cpp for C++ API and Sysrepo_bindings for other bindings. Changes between the two are minimal and contained to callbacks functionality, they are visible with ""ifdef SWIG"".


There are no memory leaks in C++ and python bindings work like C++ bindings.
Best regards,
Mislav Novakovic","Current coverage is 85.06% (diff: 100%)

Merging #304 into devel will increase coverage by <.01%

@@              devel       #304   diff @@
==========================================
  Files            28         28          
  Lines         16406      16407     +1   
  Methods         723        723          
  Messages          0          0          
  Branches       2757       2757          
==========================================
+ Hits          13955      13956     +1   
  Misses         2451       2451          
  Partials          0          0          

Powered by Codecov. Last update 473ba6c...3830d51",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,304,2016-08-22T14:55:30Z,2016-09-02T06:25:19Z,2016-11-15T18:04:01Z,MERGED,True,1266,966,23,https://github.com/mislavn,Shared ptr,17,[],https://github.com/sysrepo/sysrepo/pull/304,https://github.com/lukasmacko,3,https://github.com/sysrepo/sysrepo/pull/304#issuecomment-241642124,"Hi,


I had set the Session methods get_item, get_items, get_items_iter and get_item_next to return a new class so it is has a python like API as Lukas suggested it.


The method get_change_next returns a shared_ptr which is a wrapper for sr_change_oper_t, this is an overkill in C++ but it generates better python bindings.


In the get_change_next and get_item_next methods i used the following lines:
if (SR_ERR_OK == ret) {
shared_ptr<> oper... //allocated class
return oper; //return class
} else if (SR_ERR_NOT_FOUND == ret) {
return NULL;
} else {
throw_exception(ret);
return NULL;
}
}


I had to create a new Cmake in swig for other bindings, so now cmake generates binary Sysrepo_cpp for C++ API and Sysrepo_bindings for other bindings. Changes between the two are minimal and contained to callbacks functionality, they are visible with ""ifdef SWIG"".


There are no memory leaks in C++ and python bindings work like C++ bindings.
Best regards,
Mislav Novakovic","Hi Mislav,
apply point 3 also to the function sr_get_item and sr_get_items to make get calls consistent
if (SR_ERR_OK == ret) {
   shared_ptr<> oper... //allocated class
   return oper; //return class
} else if (SR_ERR_NOT_FOUND == ret) {
   return NULL;
} else {
   throw_exception(ret);
   return NULL;
}
Regards,
Lukas",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,304,2016-08-22T14:55:30Z,2016-09-02T06:25:19Z,2016-11-15T18:04:01Z,MERGED,True,1266,966,23,https://github.com/mislavn,Shared ptr,17,[],https://github.com/sysrepo/sysrepo/pull/304,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/304#issuecomment-243192854,"Hi,


I had set the Session methods get_item, get_items, get_items_iter and get_item_next to return a new class so it is has a python like API as Lukas suggested it.


The method get_change_next returns a shared_ptr which is a wrapper for sr_change_oper_t, this is an overkill in C++ but it generates better python bindings.


In the get_change_next and get_item_next methods i used the following lines:
if (SR_ERR_OK == ret) {
shared_ptr<> oper... //allocated class
return oper; //return class
} else if (SR_ERR_NOT_FOUND == ret) {
return NULL;
} else {
throw_exception(ret);
return NULL;
}
}


I had to create a new Cmake in swig for other bindings, so now cmake generates binary Sysrepo_cpp for C++ API and Sysrepo_bindings for other bindings. Changes between the two are minimal and contained to callbacks functionality, they are visible with ""ifdef SWIG"".


There are no memory leaks in C++ and python bindings work like C++ bindings.
Best regards,
Mislav Novakovic","Hi Lukas,
I did the changes as we discussed via email.
Please take a look at the API in C++ and python. I tried to make the API as consistent and logical as possible. If you have some suggestions please let me know.
The main difference now is that the classes are stateless, for every struct or arry the class wrapper will return a new class via shared pointers. This way it is easier to implement new C structs and update the API.
I did not yet managed to have shared_ptr in the callabck, I got some wired behaviour but I think it is possible. I want to add this feature because then the code would be cleaner and more safe. I will probably do it tommorow.
Best regards,
Mislav Novakovic",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,304,2016-08-22T14:55:30Z,2016-09-02T06:25:19Z,2016-11-15T18:04:01Z,MERGED,True,1266,966,23,https://github.com/mislavn,Shared ptr,17,[],https://github.com/sysrepo/sysrepo/pull/304,https://github.com/lukasmacko,5,https://github.com/sysrepo/sysrepo/pull/304#issuecomment-243420371,"Hi,


I had set the Session methods get_item, get_items, get_items_iter and get_item_next to return a new class so it is has a python like API as Lukas suggested it.


The method get_change_next returns a shared_ptr which is a wrapper for sr_change_oper_t, this is an overkill in C++ but it generates better python bindings.


In the get_change_next and get_item_next methods i used the following lines:
if (SR_ERR_OK == ret) {
shared_ptr<> oper... //allocated class
return oper; //return class
} else if (SR_ERR_NOT_FOUND == ret) {
return NULL;
} else {
throw_exception(ret);
return NULL;
}
}


I had to create a new Cmake in swig for other bindings, so now cmake generates binary Sysrepo_cpp for C++ API and Sysrepo_bindings for other bindings. Changes between the two are minimal and contained to callbacks functionality, they are visible with ""ifdef SWIG"".


There are no memory leaks in C++ and python bindings work like C++ bindings.
Best regards,
Mislav Novakovic","Hi Mislav,
Apart from two comments inline please take a look on OS X build. Once these things are resolved, it is ok to be merged.
Regards,
Lukas",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,304,2016-08-22T14:55:30Z,2016-09-02T06:25:19Z,2016-11-15T18:04:01Z,MERGED,True,1266,966,23,https://github.com/mislavn,Shared ptr,17,[],https://github.com/sysrepo/sysrepo/pull/304,https://github.com/mislavn,6,https://github.com/sysrepo/sysrepo/pull/304#issuecomment-244011682,"Hi,


I had set the Session methods get_item, get_items, get_items_iter and get_item_next to return a new class so it is has a python like API as Lukas suggested it.


The method get_change_next returns a shared_ptr which is a wrapper for sr_change_oper_t, this is an overkill in C++ but it generates better python bindings.


In the get_change_next and get_item_next methods i used the following lines:
if (SR_ERR_OK == ret) {
shared_ptr<> oper... //allocated class
return oper; //return class
} else if (SR_ERR_NOT_FOUND == ret) {
return NULL;
} else {
throw_exception(ret);
return NULL;
}
}


I had to create a new Cmake in swig for other bindings, so now cmake generates binary Sysrepo_cpp for C++ API and Sysrepo_bindings for other bindings. Changes between the two are minimal and contained to callbacks functionality, they are visible with ""ifdef SWIG"".


There are no memory leaks in C++ and python bindings work like C++ bindings.
Best regards,
Mislav Novakovic","Hi Lukas,
please can you merge the pull request now. I did not manage to fix the clang warning for now.
I will fix it in the next pull request.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,305,2016-08-23T10:35:21Z,2016-08-23T10:52:58Z,2016-08-23T10:52:58Z,MERGED,True,126,18,5,https://github.com/lukasmacko,State data updates,4,[],https://github.com/sysrepo/sysrepo/pull/305,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/305,"validate input from data provider
fix SA","validate input from data provider
fix SA",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,305,2016-08-23T10:35:21Z,2016-08-23T10:52:58Z,2016-08-23T10:52:58Z,MERGED,True,126,18,5,https://github.com/lukasmacko,State data updates,4,[],https://github.com/sysrepo/sysrepo/pull/305,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/305#issuecomment-241693308,"validate input from data provider
fix SA","Current coverage is 85.40% (diff: 87.50%)

Merging #305 into devel will increase coverage by 0.09%

@@              devel       #305   diff @@
==========================================
  Files            25         25          
  Lines         15264      15281    +17   
  Methods         681        681          
  Messages          0          0          
  Branches       2508       2515     +7   
==========================================
+ Hits          13021      13050    +29   
+ Misses         2243       2231    -12   
  Partials          0          0          

Powered by Codecov. Last update f0ff4a1...05cde95",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,307,2016-08-30T10:43:46Z,2016-08-30T11:18:01Z,2016-08-30T11:18:01Z,MERGED,True,168,84,9,https://github.com/lukasmacko,Multiple fixes,10,[],https://github.com/sysrepo/sysrepo/pull/307,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/307,"cleanup unsuccesful subscription
rt linkage","cleanup unsuccesful subscription
rt linkage",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,307,2016-08-30T10:43:46Z,2016-08-30T11:18:01Z,2016-08-30T11:18:01Z,MERGED,True,168,84,9,https://github.com/lukasmacko,Multiple fixes,10,[],https://github.com/sysrepo/sysrepo/pull/307,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/307#issuecomment-243402856,"cleanup unsuccesful subscription
rt linkage","Current coverage is 85.04% (diff: 89.39%)

Merging #307 into devel will increase coverage by 0.11%

@@              devel       #307   diff @@
==========================================
  Files            28         28          
  Lines         16392      16407    +15   
  Methods         722        723     +1   
  Messages          0          0          
  Branches       2748       2757     +9   
==========================================
+ Hits          13922      13953    +31   
+ Misses         2470       2454    -16   
  Partials          0          0          

Powered by Codecov. Last update 45f5620...ce4cbba",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,308,2016-09-02T11:22:48Z,2016-09-02T11:39:06Z,2016-09-02T11:39:06Z,MERGED,True,31,5,6,https://github.com/lukasmacko,Fix,3,[],https://github.com/sysrepo/sysrepo/pull/308,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/308,handle redundant list and list key entries,handle redundant list and list key entries,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,308,2016-09-02T11:22:48Z,2016-09-02T11:39:06Z,2016-09-02T11:39:06Z,MERGED,True,31,5,6,https://github.com/lukasmacko,Fix,3,[],https://github.com/sysrepo/sysrepo/pull/308,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/308#issuecomment-244351824,handle redundant list and list key entries,"Current coverage is 85.02% (diff: 58.33%)

Merging #308 into master will decrease coverage by 0.03%

@@             master       #308   diff @@
==========================================
  Files            23         23          
  Lines         12213      12224    +11   
  Methods         566        567     +1   
  Messages          0          0          
  Branches       1952       1955     +3   
==========================================
+ Hits          10387      10393     +6   
- Misses         1826       1831     +5   
  Partials          0          0          

Powered by Codecov. Last update 661c76a...0f20602",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/309,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-244625691,,"Hi Rastislav,
can you take a look at this pull request. I have a few questions/suggestions.


Python3 bindings are ready, I need to edit cmake for this. The problem is that cmake does support very well loading packages with multiple versions (Python2 and Python3 for an example). So I would like to have for every language a cmake variable. Something like:
set(SYSREPO_PYTHON ""2"").
Is this OK with you?


I am not sure what is the difference between tree and node, it uses the same struct. Do I need two classes for this?


I made a wrapper class for sr_xpath_ctx_t. Do you have any other plans with this struct besides described in the tests?


I add an rpc_subscribe example in python2 and C++. Do you know how to locally test this without installing the yang module ""test-module"".",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/lukasmacko,3,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-244680373,,"Hi Mislav,
Rastislav is on PTO, he will reply later this week.
For now, just briefly:
3) Yes, the tests should cover all intend usage of sr_xpath_ctx_t. Basicly that helpers were designed for developers integrating their apps with sysrepo aiming to ease the processing of xpath.
Regards,
Lukas",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/milanlenco,4,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-244683698,,"Hi Mislav,
I will answer 2):
Node is a structure representing a single node in a tree. It is recursive structure in the sense that is contains pointers to its children, siblings and also to its parent (for convenience only).
By ""Tree"" we understand a set of nodes connected through pointers forming a tree. So there is no separate structure for a tree.
Some functions manipulate with individual nodes (such as the function for setting a node name), these are prefixed with ""sr_node_"" , while some manipulate with complete trees (i.e. access pointers leading to children, siblings etc.), these are prefixed with ""sr_tree_"" and under all normal circumstances you would pass them pointer to a root node.
So your C++ wrapper code is correct, I have just added some comments regarding minor issues.
Thanks,
Milan",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-244784873,,"Hi,
I have some more questions about the callbacks in python/C++,  C++ constructor and destructors and the general API design.
Could we have a group chat tomorrow. I will be available after 9 am.
A little heads up of what I would like to talk about.


Constructor design, should all of the constructors by default have an internal private bool variable to keep track if the internal structs should be freed or not.


It think there should be comments in constructors which describe or list the use cases that it covers.


In the sysrepo API calls that uses double pointers, should I add a new class which is simpler or complicate the class design to have only one class. For an example sr_val_t **input, const size_t *input_cnt.


What should be made public to the user in the C++ API.


Cmake design for language bindings.


Memory leak testing.


callback design in C++/python, structs or shared_ptr to class instances.


Best regards,
Mislav Novakovic",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/lukasmacko,6,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-244882390,,"Hi Mislav,
take a look into static analysis issues related to bindings
thanks,
Lukas",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/codecov-io,7,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-244882487,,"Current coverage is 84.99% (diff: 100%)

No coverage report found for devel at c1b0008.
Powered by Codecov. Last update c1b0008...779bbb7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/mislavn,8,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-244976132,,"Hi,
I added the two commits we talked about:

how to remove Val_Holder class
How to create a class in the python callback which needs size allocation input from the user.

Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/milanlenco,9,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-245204404,,"Regarding destruction of objects, I think we should be able to do without using the ""free"" flag in the constructor. Shared pointer (or a custom usage counter) could be used with the internal C-object. This way, all C++ wrapper instances of the same value(s)/tree(s) would share the ownership rather than leaving the destruction up to one of them. This would prevent also from a potential error scenario in which the owner instance is destroyed, while some other wrapper instances remained.
Also regarding public/private access modifiers: The internal C structs should be completely hidden from the C++ user. Unless there is no way around it, I would make private all the constructors and methods with internal structs as arguments.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/mislavn,10,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-245930060,,"Hi guys,
I have made the changes as you requested.
The sr_node_t and sr_val_t use a custom Counter class. Now the memory allocation(will it be freed) is decided before the class is created for cases where the constructor accepts a pointer to the class.
S_Counter counter(new Counter(out, out_cnt)); S_Vals output(new Vals(out, out_cnt, counter));
All of the callbacks do not return a sysrepo struct but a class wrapper, this is for C++ and python.
For the shared_ptr I used a define because of inconsistent support for std::shared_ptr in SWIG, some have better support for boost library. It will be helpful for me when I do the Lua bindings.
For the callbacks I did not use the C++ virtual function because the support for other languages is not consistent.
I still have some memory leaks, it is a little hard to debug now with the changes from libyang. I will fix the memory leaks when the library stabilizes. For now I was not able to test all edge cases.
Best regards,
Mislav Novakovic",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/milanlenco,11,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-246264440,,"Hi Mislav,
I find the Counter class very misleading. What I had in mind was to wrap the internal C objects with a shared pointer OR with a custom access counter if there are any issued with the shared pointer in SWIG. From the first glance at the code I though that you did both: wrapped the C object with your Counter class and then the Counter class with the shared pointer. But it turned out that the Counter is not actually counter but a custom destructor for the object passed to shared_ptr. Cleaner solution would be to use Deleter with shared_ptr:
template< class Y, class Deleter >
shared_ptr( Y* ptr, Deleter d );
and to name the deleter accordingly.
Also you still haven't modified callbacks to return values/trees through the return statement but kept the use of the ""allocate"" method on the input argument which will not look very Python-ish once translated with SWIG. Are there any issued with returning objects using ""return"" in SWIG?
Thanks,
Milan",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,309,2016-09-04T19:38:06Z,2016-09-12T13:57:34Z,2016-11-15T18:01:14Z,MERGED,True,2502,309,36,https://github.com/mislavn,Callback,30,[],https://github.com/sysrepo/sysrepo/pull/309,https://github.com/mislavn,12,https://github.com/sysrepo/sysrepo/pull/309#issuecomment-246302063,,"Hi Milan,
OK, I can create a Deleter class.
For the callbacks I did not find any solution which would satisfy you. The Python callback can return a pointer to the C++ bindings but because it is a C callback wrapper it must not free it self when the shared_ptr goes out of scope. That means there must be a constructor which will allocate memory but not free itself for Vals(size_t n) and Trees(size_t n). Second option is to have a class method which will return a duplicate of the class but which will not free the memory (return Vals.duplicate() )
Third option is to have the method allocate(size_t n) method or a new wrapper class in the callback signature.
I am not sure if Python will allow to return a PyObject's if not I will have to cast void pointers to class pointer and I think that would lead to some segfaults in the C++ bindings if the user is not careful in the return statement.
So for me the only two options is to have a method allocate(size_t n) or to have wrapper class for Vals and Trees. The second best thing I did was to make the class methods rpc_send() and rpc_send_tree() to return a shared_ptr<> object.
I am not sure if you got my point.
Regards,
Mislav Novakovic",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,310,2016-09-05T13:21:07Z,2016-09-05T13:32:20Z,2016-09-05T13:32:20Z,MERGED,True,99,127,11,https://github.com/lukasmacko,Libyang changes - default nodes,9,[],https://github.com/sysrepo/sysrepo/pull/310,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/310,"migrate to the newest libyang
fixed build
adjusted test
there is an outstanding issue in post commit notification when default node is created/deleted operation should be SR_OP_MODIFIED","migrate to the newest libyang
fixed build
adjusted test
there is an outstanding issue in post commit notification when default node is created/deleted operation should be SR_OP_MODIFIED",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,310,2016-09-05T13:21:07Z,2016-09-05T13:32:20Z,2016-09-05T13:32:20Z,MERGED,True,99,127,11,https://github.com/lukasmacko,Libyang changes - default nodes,9,[],https://github.com/sysrepo/sysrepo/pull/310,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/310#issuecomment-244746670,"migrate to the newest libyang
fixed build
adjusted test
there is an outstanding issue in post commit notification when default node is created/deleted operation should be SR_OP_MODIFIED","Current coverage is 84.98% (diff: 85.71%)

No coverage report found for devel at 149932d.
Powered by Codecov. Last update 149932d...7746613",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,311,2016-09-05T13:58:58Z,2016-09-05T14:40:27Z,2016-09-05T14:40:28Z,MERGED,True,159,44,13,https://github.com/milanlenco,Add option to disable sysrepo's own memory management.,2,[],https://github.com/sysrepo/sysrepo/pull/311,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/311,Tests passing regardless of the option value. By default the custom memory management is enabled.,Tests passing regardless of the option value. By default the custom memory management is enabled.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,311,2016-09-05T13:58:58Z,2016-09-05T14:40:27Z,2016-09-05T14:40:28Z,MERGED,True,159,44,13,https://github.com/milanlenco,Add option to disable sysrepo's own memory management.,2,[],https://github.com/sysrepo/sysrepo/pull/311,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/311#issuecomment-244758598,Tests passing regardless of the option value. By default the custom memory management is enabled.,"Current coverage is 84.99% (diff: 70.27%)

Merging #311 into devel will decrease coverage by 0.07%

@@              devel       #311   diff @@
==========================================
  Files            28         28          
  Lines         16394      16407    +13   
  Methods         723        723          
  Messages          0          0          
  Branches       2755       2766    +11   
==========================================
- Hits          13946      13945     -1   
- Misses         2448       2462    +14   
  Partials          0          0          

Powered by Codecov. Last update e04788b...8d86ef8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,312,2016-09-06T08:53:49Z,2016-09-06T09:08:51Z,2016-09-06T09:08:51Z,MERGED,True,9,12,2,https://github.com/milanlenco,Fix coverity-found issues.,1,[],https://github.com/sysrepo/sysrepo/pull/312,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/312,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,312,2016-09-06T08:53:49Z,2016-09-06T09:08:51Z,2016-09-06T09:08:51Z,MERGED,True,9,12,2,https://github.com/milanlenco,Fix coverity-found issues.,1,[],https://github.com/sysrepo/sysrepo/pull/312,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/312#issuecomment-244891619,,"Current coverage is 85.04% (diff: 66.67%)

Merging #312 into devel will increase coverage by 0.01%

@@              devel       #312   diff @@
==========================================
  Files            28         28          
  Lines         16411      16405     -6   
  Methods         723        723          
  Messages          0          0          
  Branches       2766       2765     -1   
==========================================
- Hits          13953      13950     -3   
+ Misses         2458       2455     -3   
  Partials          0          0          

Powered by Codecov. Last update b3d3a47...2e021ff",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,313,2016-09-06T12:40:35Z,2016-09-06T12:51:02Z,2016-09-06T12:51:02Z,MERGED,True,9,9,5,https://github.com/lukasmacko,Add option LYD_DIFFOPT_WITHDEF and update tests,2,[],https://github.com/sysrepo/sysrepo/pull/313,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/313,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,313,2016-09-06T12:40:35Z,2016-09-06T12:51:02Z,2016-09-06T12:51:02Z,MERGED,True,9,9,5,https://github.com/lukasmacko,Add option LYD_DIFFOPT_WITHDEF and update tests,2,[],https://github.com/sysrepo/sysrepo/pull/313,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/313#issuecomment-244939535,,"Current coverage is 84.99% (diff: 100%)

Merging #313 into devel will decrease coverage by 0.04%

@@              devel       #313   diff @@
==========================================
  Files            28         28          
  Lines         16405      16407     +2   
  Methods         723        723          
  Messages          0          0          
  Branches       2765       2765          
==========================================
- Hits          13949      13944     -5   
- Misses         2456       2463     +7   
  Partials          0          0          

Powered by Codecov. Last update bd38a9d...2080e87",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,314,2016-09-06T14:08:39Z,2016-09-07T09:08:22Z,2016-10-07T10:45:33Z,MERGED,True,539,51,10,https://github.com/lukasmacko,Nested data,11,[],https://github.com/sysrepo/sysrepo/pull/314,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/314,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,315,2016-09-07T12:39:37Z,2016-09-08T06:04:26Z,2016-09-08T06:04:26Z,MERGED,True,32,21,3,https://github.com/lukasmacko,Fix SA,2,[],https://github.com/sysrepo/sysrepo/pull/315,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/315,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,315,2016-09-07T12:39:37Z,2016-09-08T06:04:26Z,2016-09-08T06:04:26Z,MERGED,True,32,21,3,https://github.com/lukasmacko,Fix SA,2,[],https://github.com/sysrepo/sysrepo/pull/315,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/315#issuecomment-245294824,,"Current coverage is 85.08% (diff: 100%)

Merging #315 into devel will decrease coverage by 0.05%

@@              devel       #315   diff @@
==========================================
  Files            28         28          
  Lines         16501      16499     -2   
  Methods         726        726          
  Messages          0          0          
  Branches       2779       2779          
==========================================
- Hits          14047      14037    -10   
- Misses         2454       2462     +8   
  Partials          0          0          

Powered by Codecov. Last update 9dfa52b...d7fa440",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,316,2016-09-12T08:14:39Z,2016-09-12T08:30:02Z,2016-09-12T08:30:02Z,MERGED,True,100,38,14,https://github.com/lukasmacko,Fix build and test libyang 0.9.128,6,[],https://github.com/sysrepo/sysrepo/pull/316,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/316,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,316,2016-09-12T08:14:39Z,2016-09-12T08:30:02Z,2016-09-12T08:30:02Z,MERGED,True,100,38,14,https://github.com/lukasmacko,Fix build and test libyang 0.9.128,6,[],https://github.com/sysrepo/sysrepo/pull/316,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/316#issuecomment-246280520,,"Current coverage is 84.97% (diff: 92.50%)

No coverage report found for devel at c1b0008.
Powered by Codecov. Last update c1b0008...b492360",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,317,2016-09-12T12:04:50Z,2016-09-12T12:11:32Z,2016-09-12T12:11:32Z,MERGED,True,84,3,2,https://github.com/lukasmacko,Bug fix state data,2,[],https://github.com/sysrepo/sysrepo/pull/317,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/317,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,317,2016-09-12T12:04:50Z,2016-09-12T12:11:32Z,2016-09-12T12:11:32Z,MERGED,True,84,3,2,https://github.com/lukasmacko,Bug fix state data,2,[],https://github.com/sysrepo/sysrepo/pull/317,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/317#issuecomment-246328298,,"Current coverage is 85.00% (diff: 100%)

Merging #317 into devel will increase coverage by 0.05%

@@              devel       #317   diff @@
==========================================
  Files            28         28          
  Lines         16521      16526     +5   
  Methods         727        727          
  Messages          0          0          
  Branches       2782       2782          
==========================================
+ Hits          14035      14047    +12   
+ Misses         2486       2479     -7   
  Partials          0          0          

Powered by Codecov. Last update da1ed78...5048963",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,318,2016-09-12T12:57:43Z,2016-09-13T06:25:35Z,2016-09-13T06:25:35Z,MERGED,True,2827,130,22,https://github.com/milanlenco,get-subtree and get-subtrees API calls,9,[],https://github.com/sysrepo/sysrepo/pull/318,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/318,"The implementation for the iterative tree loading is still in progress, but I would merge at least the basic functionality in order to avoid any future merge conflicts (that I would have to fix myself :) )
The support for trees on the side of operational data providers is also planned. I will do it as a separate task.
Set-subtree op is not going to be implemented unless CESNET guys find use for it in their NETCONF server.","The implementation for the iterative tree loading is still in progress, but I would merge at least the basic functionality in order to avoid any future merge conflicts (that I would have to fix myself :) )
The support for trees on the side of operational data providers is also planned. I will do it as a separate task.
Set-subtree op is not going to be implemented unless CESNET guys find use for it in their NETCONF server.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,318,2016-09-12T12:57:43Z,2016-09-13T06:25:35Z,2016-09-13T06:25:35Z,MERGED,True,2827,130,22,https://github.com/milanlenco,get-subtree and get-subtrees API calls,9,[],https://github.com/sysrepo/sysrepo/pull/318,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/318#issuecomment-246340448,"The implementation for the iterative tree loading is still in progress, but I would merge at least the basic functionality in order to avoid any future merge conflicts (that I would have to fix myself :) )
The support for trees on the side of operational data providers is also planned. I will do it as a separate task.
Set-subtree op is not going to be implemented unless CESNET guys find use for it in their NETCONF server.","Current coverage is 84.99% (diff: 83.62%)

Merging #318 into devel will decrease coverage by 0.07%

@@              devel       #318   diff @@
==========================================
  Files            28         28          
  Lines         16523      16850   +327   
  Methods         727        742    +15   
  Messages          0          0          
  Branches       2782       2829    +47   
==========================================
+ Hits          14054      14321   +267   
- Misses         2469       2529    +60   
  Partials          0          0          

Powered by Codecov. Last update 97a2496...adb72eb",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,320,2016-09-13T09:11:34Z,2016-09-13T10:31:05Z,2016-09-13T10:31:05Z,MERGED,True,16,16,4,https://github.com/milanlenco,temporary fix for validation of RPCs and notifications,2,[],https://github.com/sysrepo/sysrepo/pull/320,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/320,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,320,2016-09-13T09:11:34Z,2016-09-13T10:31:05Z,2016-09-13T10:31:05Z,MERGED,True,16,16,4,https://github.com/milanlenco,temporary fix for validation of RPCs and notifications,2,[],https://github.com/sysrepo/sysrepo/pull/320,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/320#issuecomment-246640490,,"Current coverage is 85.08% (diff: 100%)

No coverage report found for devel at 16d6bd4.
Powered by Codecov. Last update 16d6bd4...c23f1a0",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,321,2016-09-13T14:20:30Z,2016-09-13T14:39:45Z,2016-11-15T18:01:28Z,MERGED,True,36,8,7,https://github.com/mislavn,C++: fix defects in Coverity Scan,1,[],https://github.com/sysrepo/sysrepo/pull/321,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/321,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,322,2016-09-13T15:49:01Z,2016-09-14T05:56:48Z,2016-09-14T05:56:49Z,MERGED,True,92,13,1,https://github.com/rastislavs,"Perf test tweaks, basic set & delete test",7,[],https://github.com/sysrepo/sysrepo/pull/322,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/322,Results at http://www.sysrepo.org/sysrepo-performance,Results at http://www.sysrepo.org/sysrepo-performance,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,322,2016-09-13T15:49:01Z,2016-09-14T05:56:48Z,2016-09-14T05:56:49Z,MERGED,True,92,13,1,https://github.com/rastislavs,"Perf test tweaks, basic set & delete test",7,[],https://github.com/sysrepo/sysrepo/pull/322,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/322#issuecomment-246740118,Results at http://www.sysrepo.org/sysrepo-performance,"Current coverage is 85.06% (diff: 100%)

Merging #322 into devel will decrease coverage by 0.05%

@@              devel       #322   diff @@
==========================================
  Files            28         28          
  Lines         16849      16846     -3   
  Methods         742        742          
  Messages          0          0          
  Branches       2829       2829          
==========================================
- Hits          14341      14330    -11   
- Misses         2508       2516     +8   
  Partials          0          0          

Powered by Codecov. Last update 1e799cd...31bca9d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,323,2016-09-13T15:54:32Z,2016-09-14T05:50:07Z,2016-11-15T18:04:25Z,MERGED,True,440,22,6,https://github.com/mislavn,SWIG: add python3 bindings,1,[],https://github.com/sysrepo/sysrepo/pull/323,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/323,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,323,2016-09-13T15:54:32Z,2016-09-14T05:50:07Z,2016-11-15T18:04:25Z,MERGED,True,440,22,6,https://github.com/mislavn,SWIG: add python3 bindings,1,[],https://github.com/sysrepo/sysrepo/pull/323,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/323#issuecomment-246731768,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Hi,
here are the python3 bindings with the new cmake changes.
I did only superficial tests because netopeer2 is out of sync with the current libyang devel branch. I can run the python3 examples but I did not tests will it properly show changes in the datastore but it should work. When netopeer2 compiles with the current libyang devel branch I will properly test it.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,323,2016-09-13T15:54:32Z,2016-09-14T05:50:07Z,2016-11-15T18:04:25Z,MERGED,True,440,22,6,https://github.com/mislavn,SWIG: add python3 bindings,1,[],https://github.com/sysrepo/sysrepo/pull/323,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/323#issuecomment-246742120,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Current coverage is 85.05% (diff: 100%)

Merging #323 into devel will decrease coverage by 0.06%

@@              devel       #323   diff @@
==========================================
  Files            28         28          
  Lines         16849      16847     -2   
  Methods         742        742          
  Messages          0          0          
  Branches       2829       2829          
==========================================
- Hits          14341      14329    -12   
- Misses         2508       2518    +10   
  Partials          0          0          

Powered by Codecov. Last update 1e799cd...284f9ea",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,325,2016-09-16T08:29:12Z,2016-09-19T13:52:38Z,2016-11-15T18:02:20Z,MERGED,True,877,109,11,https://github.com/mislavn,Lua5.1,3,[],https://github.com/sysrepo/sysrepo/pull/325,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/325,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,325,2016-09-16T08:29:12Z,2016-09-19T13:52:38Z,2016-11-15T18:02:20Z,MERGED,True,877,109,11,https://github.com/mislavn,Lua5.1,3,[],https://github.com/sysrepo/sysrepo/pull/325,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/325#issuecomment-247549162,,"Hi,
please wait with the pull request, I forgot to add some things.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,325,2016-09-16T08:29:12Z,2016-09-19T13:52:38Z,2016-11-15T18:02:20Z,MERGED,True,877,109,11,https://github.com/mislavn,Lua5.1,3,[],https://github.com/sysrepo/sysrepo/pull/325,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/325#issuecomment-247577190,,"Hi,
I added the changes. You can make merge it if you want. I will now start work on the java bindings after that I will refactor the callbacks, the deleter class and fix bugs if I find them.
One note, in the pull request I had to temporary wrap the lua callback into a new class because of the type check would not let me do it in the Subscribe class, once I figure that out I will change so the API is the same as in python.
And have you taken a look at the docker build, it shows one warning for unused variable.

/opt/dev/sysrepo/src/cl_subscription_manager.c: In function 'cl_sm_fd_changeset_add':
/opt/dev/sysrepo/src/cl_subscription_manager.c:147:10: warning: ignoring return value of 'write', declared with attribute warn_unused_result [-Wunused-result]
write(sm_ctx->fd_changeset_notify_pipe[1], ""x"", 1);

Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,325,2016-09-16T08:29:12Z,2016-09-19T13:52:38Z,2016-11-15T18:02:20Z,MERGED,True,877,109,11,https://github.com/mislavn,Lua5.1,3,[],https://github.com/sysrepo/sysrepo/pull/325,https://github.com/lukasmacko,4,https://github.com/sysrepo/sysrepo/pull/325#issuecomment-247998852,,"Hi Mislav,
I'll fix that warning by #328
Regards,
Lukas",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,328,2016-09-19T13:21:29Z,2016-09-19T14:23:52Z,2016-09-19T14:23:52Z,MERGED,True,1,3,1,https://github.com/lukasmacko,Check write return value,1,[],https://github.com/sysrepo/sysrepo/pull/328,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/328,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,328,2016-09-19T13:21:29Z,2016-09-19T14:23:52Z,2016-09-19T14:23:52Z,MERGED,True,1,3,1,https://github.com/lukasmacko,Check write return value,1,[],https://github.com/sysrepo/sysrepo/pull/328,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/328#issuecomment-248000474,,"Current coverage is 85.08% (diff: 100%)

Merging #328 into devel will increase coverage by 0.04%

@@              devel       #328   diff @@
==========================================
  Files            28         28          
  Lines         16849      16846     -3   
  Methods         742        742          
  Messages          0          0          
  Branches       2829       2829          
==========================================
+ Hits          14327      14332     +5   
+ Misses         2522       2514     -8   
  Partials          0          0          

Powered by Codecov. Last update 4c69517...cd51c62",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,329,2016-09-19T20:55:43Z,2016-09-19T20:56:04Z,2016-09-19T20:57:02Z,CLOSED,False,30641,2625,156,https://github.com/mislavn,Lua5.2,474,[],https://github.com/sysrepo/sysrepo/pull/329,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/329,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,330,2016-09-19T20:58:56Z,2016-09-20T14:42:08Z,2016-11-15T18:03:19Z,MERGED,True,340,40,6,https://github.com/mislavn,SWIG: add lua 5.2 bindings,2,[],https://github.com/sysrepo/sysrepo/pull/330,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/330,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,330,2016-09-19T20:58:56Z,2016-09-20T14:42:08Z,2016-11-15T18:03:19Z,MERGED,True,340,40,6,https://github.com/mislavn,SWIG: add lua 5.2 bindings,2,[],https://github.com/sysrepo/sysrepo/pull/330,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/330#issuecomment-248233951,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Hi,
the build fails because the system is missing lua 5.2.
If you are using ubuntu you can install it with:
apt-get update && apt-get install -y  lua5.2 lua5.2-dev 
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,330,2016-09-19T20:58:56Z,2016-09-20T14:42:08Z,2016-11-15T18:03:19Z,MERGED,True,340,40,6,https://github.com/mislavn,SWIG: add lua 5.2 bindings,2,[],https://github.com/sysrepo/sysrepo/pull/330,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/330#issuecomment-248234594,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Hi Mislav,
the build cannot fail because of missing libraries. if lua 5.2 is not present on the system, bindings generation for lua 5.2 should be skipped and build should succeed.
Thanks,
Rastislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,330,2016-09-19T20:58:56Z,2016-09-20T14:42:08Z,2016-11-15T18:03:19Z,MERGED,True,340,40,6,https://github.com/mislavn,SWIG: add lua 5.2 bindings,2,[],https://github.com/sysrepo/sysrepo/pull/330,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/330#issuecomment-248234910,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Hi Rastislav,
I will update the commit so that by default Lua 5.1 is build, as it was before this pull request.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,330,2016-09-19T20:58:56Z,2016-09-20T14:42:08Z,2016-11-15T18:03:19Z,MERGED,True,340,40,6,https://github.com/mislavn,SWIG: add lua 5.2 bindings,2,[],https://github.com/sysrepo/sysrepo/pull/330,https://github.com/codecov-io,5,https://github.com/sysrepo/sysrepo/pull/330#issuecomment-248236600,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Current coverage is 85.08% (diff: 100%)

Merging #330 into devel will increase coverage by 0.03%

@@              devel       #330   diff @@
==========================================
  Files            28         28          
  Lines         16850      16845     -5   
  Methods         742        742          
  Messages          0          0          
  Branches       2829       2829          
==========================================
  Hits          14331      14331          
+ Misses         2519       2514     -5   
  Partials          0          0          

Powered by Codecov. Last update 5c3990f...527f34a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,332,2016-09-20T11:07:35Z,2016-09-20T11:57:30Z,2016-09-20T14:12:19Z,CLOSED,False,29,2,2,https://github.com/ZhaoGuangYue1986,FIX 	issues #331 Segmentation fault when use sysrepoctl -L parameter,4,[],https://github.com/sysrepo/sysrepo/pull/332,https://github.com/ZhaoGuangYue1986,1,https://github.com/sysrepo/sysrepo/pull/332,FIX     issues #331 Segmentation fault when use sysrepoctl -L parameter,FIX     issues #331 Segmentation fault when use sysrepoctl -L parameter,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,332,2016-09-20T11:07:35Z,2016-09-20T11:57:30Z,2016-09-20T14:12:19Z,CLOSED,False,29,2,2,https://github.com/ZhaoGuangYue1986,FIX 	issues #331 Segmentation fault when use sysrepoctl -L parameter,4,[],https://github.com/sysrepo/sysrepo/pull/332,https://github.com/rastislavs,2,https://github.com/sysrepo/sysrepo/pull/332#issuecomment-248313024,FIX     issues #331 Segmentation fault when use sysrepoctl -L parameter,"Hi,
this should be already fixed in the devel branch - will be merged into master within the next few weeks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,334,2016-09-21T13:10:47Z,2016-09-21T13:20:31Z,2016-09-21T13:20:31Z,MERGED,True,79,75,9,https://github.com/lukasmacko,Bug fix - top level mandatory,2,[],https://github.com/sysrepo/sysrepo/pull/334,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/334,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,334,2016-09-21T13:10:47Z,2016-09-21T13:20:31Z,2016-09-21T13:20:31Z,MERGED,True,79,75,9,https://github.com/lukasmacko,Bug fix - top level mandatory,2,[],https://github.com/sysrepo/sysrepo/pull/334,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/334#issuecomment-248609254,,"Current coverage is 85.08% (diff: 100%)

Merging #334 into devel will increase coverage by 0.03%

@@              devel       #334   diff @@
==========================================
  Files            28         28          
  Lines         16845      16848     +3   
  Methods         742        742          
  Messages          0          0          
  Branches       2829       2829          
==========================================
+ Hits          14326      14334     +8   
+ Misses         2519       2514     -5   
  Partials          0          0          

Powered by Codecov. Last update 73de31d...78cf514",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,336,2016-09-21T14:34:55Z,2016-09-21T14:54:36Z,2016-09-21T14:54:36Z,MERGED,True,34,15,1,https://github.com/lukasmacko,Fix state data test,2,[],https://github.com/sysrepo/sysrepo/pull/336,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/336,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,336,2016-09-21T14:34:55Z,2016-09-21T14:54:36Z,2016-09-21T14:54:36Z,MERGED,True,34,15,1,https://github.com/lukasmacko,Fix state data test,2,[],https://github.com/sysrepo/sysrepo/pull/336,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/336#issuecomment-248633329,,"Current coverage is 85.08% (diff: 100%)

Merging #336 into devel will decrease coverage by 0.05%

@@              devel       #336   diff @@
==========================================
  Files            28         28          
  Lines         16852      16847     -5   
  Methods         742        742          
  Messages          0          0          
  Branches       2829       2829          
==========================================
- Hits          14346      14333    -13   
- Misses         2506       2514     +8   
  Partials          0          0          

Powered by Codecov. Last update 636b09f...2cf6107",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,337,2016-09-22T09:14:52Z,2016-09-22T11:42:49Z,2016-09-22T11:42:50Z,MERGED,True,2437,710,23,https://github.com/milanlenco,Iterative tree loading,8,[],https://github.com/sysrepo/sysrepo/pull/337,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/337,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,338,2016-09-22T15:10:28Z,2016-09-23T07:08:02Z,2016-10-07T10:45:35Z,MERGED,True,471,35,9,https://github.com/lukasmacko,Cross module,13,[],https://github.com/sysrepo/sysrepo/pull/338,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/338,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,338,2016-09-22T15:10:28Z,2016-09-23T07:08:02Z,2016-10-07T10:45:35Z,MERGED,True,471,35,9,https://github.com/lukasmacko,Cross module,13,[],https://github.com/sysrepo/sysrepo/pull/338,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/338#issuecomment-248964381,,"Current coverage is 84.67% (diff: 27.86%)

Merging #338 into devel will decrease coverage by 0.37%

@@              devel       #338   diff @@
==========================================
  Files            29         29          
  Lines         17493      17620   +127   
  Methods         754        759     +5   
  Messages          0          0          
  Branches       2957       2972    +15   
==========================================
+ Hits          14876      14918    +42   
- Misses         2617       2702    +85   
  Partials          0          0          

Powered by Codecov. Last update 702462b...23a9936",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,339,2016-09-23T07:13:39Z,2016-09-23T07:50:02Z,2016-09-23T07:50:02Z,MERGED,True,269,163,16,https://github.com/rastislavs,Commit verifiers - CL & RP part,10,[],https://github.com/sysrepo/sysrepo/pull/339,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/339,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,339,2016-09-23T07:13:39Z,2016-09-23T07:50:02Z,2016-09-23T07:50:02Z,MERGED,True,269,163,16,https://github.com/rastislavs,Commit verifiers - CL & RP part,10,[],https://github.com/sysrepo/sysrepo/pull/339,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/339#issuecomment-249120913,,"Current coverage is 84.61% (diff: 75.51%)

Merging #339 into devel will increase coverage by 0.03%

@@              devel       #339   diff @@
==========================================
  Files            29         29          
  Lines         17619      17649    +30   
  Methods         759        760     +1   
  Messages          0          0          
  Branches       2972       2981     +9   
==========================================
+ Hits          14902      14932    +30   
  Misses         2717       2717          
  Partials          0          0          

Powered by Codecov. Last update 3a5ea0c...948fec5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,340,2016-09-26T12:10:38Z,2016-09-26T12:29:00Z,2016-09-26T12:29:00Z,MERGED,True,156,63,13,https://github.com/rastislavs,sr_set_error API for commit verifiers,7,[],https://github.com/sysrepo/sysrepo/pull/340,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/340,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,346,2016-09-28T13:40:37Z,2016-09-29T10:56:24Z,2016-09-29T10:56:24Z,MERGED,True,1178,290,22,https://github.com/lukasmacko,Verify notification,14,[],https://github.com/sysrepo/sysrepo/pull/346,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/346,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,346,2016-09-28T13:40:37Z,2016-09-29T10:56:24Z,2016-09-29T10:56:24Z,MERGED,True,1178,290,22,https://github.com/lukasmacko,Verify notification,14,[],https://github.com/sysrepo/sysrepo/pull/346,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/346#issuecomment-250376570,,"Current coverage is 85.06% (diff: 92.82%)

Merging #346 into devel will increase coverage by 0.63%

@@              devel       #346   diff @@
==========================================
  Files            29         62      +33   
  Lines         17702      30547   +12845   
  Methods         762       1198     +436   
  Messages          0          0            
  Branches       2994       3464     +470   
==========================================
+ Hits          14946      25984   +11038   
- Misses         2756       2960     +204   
- Partials          0       1603    +1603   

Powered by Codecov. Last update c96c51e...b6a189a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,347,2016-09-28T14:09:48Z,2016-10-03T10:44:28Z,2016-10-03T10:44:28Z,MERGED,True,1415,407,7,https://github.com/milanlenco,Cross module dependencies -- static analysis,4,[],https://github.com/sysrepo/sysrepo/pull/347,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/347,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,347,2016-09-28T14:09:48Z,2016-10-03T10:44:28Z,2016-10-03T10:44:28Z,MERGED,True,1415,407,7,https://github.com/milanlenco,Cross module dependencies -- static analysis,4,[],https://github.com/sysrepo/sysrepo/pull/347,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/347#issuecomment-251076995,,"Current coverage is 84.74% (diff: 85.34%)

Merging #347 into devel will increase coverage by 0.03%

@@              devel       #347   diff @@
==========================================
  Files            29         29          
  Lines         17818      18227   +409   
  Methods         766        770     +4   
  Messages          0          0          
  Branches       3013       3120   +107   
==========================================
+ Hits          15094      15446   +352   
- Misses         2724       2781    +57   
  Partials          0          0          

Powered by Codecov. Last update dc34b61...aa163f9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,350,2016-09-30T11:40:58Z,2016-10-04T12:53:10Z,2016-11-15T18:03:13Z,MERGED,True,848,358,29,https://github.com/mislavn,",Java cmake",7,[],https://github.com/sysrepo/sysrepo/pull/350,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/350,"Hi,
I add the java bindings. I made some changes to the camke structure inside swig so to minimize the number of language specific macros, for now only LUA macro is left.
When I start the work on python testes I will test other language bindings and update them.
In the main cmake file I added the line:
set(BUILD_CPP_EXAMPLES 1 CACHE BOOL ""Build C++ examples."")
Regards,
Mislavs","Hi,
I add the java bindings. I made some changes to the camke structure inside swig so to minimize the number of language specific macros, for now only LUA macro is left.
When I start the work on python testes I will test other language bindings and update them.
In the main cmake file I added the line:
set(BUILD_CPP_EXAMPLES 1 CACHE BOOL ""Build C++ examples."")
Regards,
Mislavs",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,350,2016-09-30T11:40:58Z,2016-10-04T12:53:10Z,2016-11-15T18:03:13Z,MERGED,True,848,358,29,https://github.com/mislavn,",Java cmake",7,[],https://github.com/sysrepo/sysrepo/pull/350,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/350#issuecomment-250903474,"Hi,
I add the java bindings. I made some changes to the camke structure inside swig so to minimize the number of language specific macros, for now only LUA macro is left.
When I start the work on python testes I will test other language bindings and update them.
In the main cmake file I added the line:
set(BUILD_CPP_EXAMPLES 1 CACHE BOOL ""Build C++ examples."")
Regards,
Mislavs","Hi Rastislav,
Can you take a look at the build, it breaks on:
Swig source
/home/travis/build/sysrepo/sysrepo/swig/cpp/src/Session.h:119: Error: Syntax error in input(3).
The line in the header is:
std::vector<S_Callback> cb_list;
I am no sure why and I can not replicate this error locally.
I used vectors in C++ before and it did not break.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,350,2016-09-30T11:40:58Z,2016-10-04T12:53:10Z,2016-11-15T18:03:13Z,MERGED,True,848,358,29,https://github.com/mislavn,",Java cmake",7,[],https://github.com/sysrepo/sysrepo/pull/350,https://github.com/lukasmacko,3,https://github.com/sysrepo/sysrepo/pull/350#issuecomment-251038634,"Hi,
I add the java bindings. I made some changes to the camke structure inside swig so to minimize the number of language specific macros, for now only LUA macro is left.
When I start the work on python testes I will test other language bindings and update them.
In the main cmake file I added the line:
set(BUILD_CPP_EXAMPLES 1 CACHE BOOL ""Build C++ examples."")
Regards,
Mislavs","Hi Mislav,
just guessing ...because of #define S_Callback std::shared_ptr<Callback> there are two angle brackets without space between them and that might be causing the problem according to the link
so changing the line to be like std::vector<S_Callback > cb_list; might help
Regards,
Lukas",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,350,2016-09-30T11:40:58Z,2016-10-04T12:53:10Z,2016-11-15T18:03:13Z,MERGED,True,848,358,29,https://github.com/mislavn,",Java cmake",7,[],https://github.com/sysrepo/sysrepo/pull/350,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/350#issuecomment-251065604,"Hi,
I add the java bindings. I made some changes to the camke structure inside swig so to minimize the number of language specific macros, for now only LUA macro is left.
When I start the work on python testes I will test other language bindings and update them.
In the main cmake file I added the line:
set(BUILD_CPP_EXAMPLES 1 CACHE BOOL ""Build C++ examples."")
Regards,
Mislavs","Hi Lukas,
thanks for the fix.
Just so you know I will add java examples to the pull request then update it.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,350,2016-09-30T11:40:58Z,2016-10-04T12:53:10Z,2016-11-15T18:03:13Z,MERGED,True,848,358,29,https://github.com/mislavn,",Java cmake",7,[],https://github.com/sysrepo/sysrepo/pull/350,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/350#issuecomment-251368791,"Hi,
I add the java bindings. I made some changes to the camke structure inside swig so to minimize the number of language specific macros, for now only LUA macro is left.
When I start the work on python testes I will test other language bindings and update them.
In the main cmake file I added the line:
set(BUILD_CPP_EXAMPLES 1 CACHE BOOL ""Build C++ examples."")
Regards,
Mislavs","Hi Rastislav,
I added the changes to the pull request.
At the moment I set GEN_JAVA_BINDINGS to 0 because travis breaks on:
In file included from /home/travis/build/sysrepo/sysrepo/build/swig/java/libsysrepoJavaJAVA_wrap.cxx:160:0:
/usr/lib/jvm/java-8-oracle/include/jni.h:45:20: fatal error: jni_md.h: No such file or directory
#include ""jni_md.h""
^
When I fix the coverity issues in CPP bindings then I will fix this also, it is simply more convenient then.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,350,2016-09-30T11:40:58Z,2016-10-04T12:53:10Z,2016-11-15T18:03:13Z,MERGED,True,848,358,29,https://github.com/mislavn,",Java cmake",7,[],https://github.com/sysrepo/sysrepo/pull/350,https://github.com/codecov-io,6,https://github.com/sysrepo/sysrepo/pull/350#issuecomment-251369243,"Hi,
I add the java bindings. I made some changes to the camke structure inside swig so to minimize the number of language specific macros, for now only LUA macro is left.
When I start the work on python testes I will test other language bindings and update them.
In the main cmake file I added the line:
set(BUILD_CPP_EXAMPLES 1 CACHE BOOL ""Build C++ examples."")
Regards,
Mislavs","Current coverage is 84.94% (diff: 100%)

Merging #350 into devel will increase coverage by 0.01%

@@              devel       #350   diff @@
==========================================
  Files            29         29          
  Lines         18245      18249     +4   
  Methods         770        770          
  Messages          0          0          
  Branches       3126       3126          
==========================================
+ Hits          15496      15501     +5   
+ Misses         2749       2748     -1   
  Partials          0          0          

Powered by Codecov. Last update f6eb392...3fada3b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,351,2016-09-30T16:11:16Z,2016-10-03T08:56:56Z,2016-10-03T09:08:15Z,MERGED,True,1,0,1,https://github.com/jktjkt,Fix build when older version of sysrepo is in CMAKE_INSTALL_PREFIX,1,[],https://github.com/sysrepo/sysrepo/pull/351,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/351,"With the current version of Sysrepo from the master branch in
/opt/libnetconf, building the deve branch fails. This is caused by
the obsolete /opt/libnetconf/include/sysrepo.h taking precedence over
the desired inc/libnetconf.","With the current version of Sysrepo from the master branch in
/opt/libnetconf, building the deve branch fails. This is caused by
the obsolete /opt/libnetconf/include/sysrepo.h taking precedence over
the desired inc/libnetconf.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,353,2016-10-01T12:45:43Z,2016-10-03T08:56:45Z,2016-11-15T18:04:56Z,MERGED,True,69,3,4,https://github.com/antonio-paunovic,Python2 lua51 examples docs,2,[],https://github.com/sysrepo/sysrepo/pull/353,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/353,Commentaries on Python 2 and Lua 5.1 examples,Commentaries on Python 2 and Lua 5.1 examples,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,355,2016-10-03T09:01:40Z,2016-10-03T10:04:22Z,2016-10-03T10:04:22Z,MERGED,True,122,3,2,https://github.com/lukasmacko,Test for union type,1,[],https://github.com/sysrepo/sysrepo/pull/355,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/355,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,355,2016-10-03T09:01:40Z,2016-10-03T10:04:22Z,2016-10-03T10:04:22Z,MERGED,True,122,3,2,https://github.com/lukasmacko,Test for union type,1,[],https://github.com/sysrepo/sysrepo/pull/355,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/355#issuecomment-251061832,,"Current coverage is 84.74% (diff: 100%)

Merging #355 into devel will increase coverage by 0.01%

@@              devel       #355   diff @@
==========================================
  Files            29         29          
  Lines         17816      17819     +3   
  Methods         766        766          
  Messages          0          0          
  Branches       3013       3013          
==========================================
+ Hits          15096      15100     +4   
+ Misses         2720       2719     -1   
  Partials          0          0          

Powered by Codecov. Last update 12da45d...b3beee5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,357,2016-10-03T14:35:57Z,2016-10-03T14:54:56Z,2016-10-03T14:54:56Z,MERGED,True,255,140,2,https://github.com/milanlenco,Make cl_state_data unit test deterministic,2,[],https://github.com/sysrepo/sysrepo/pull/357,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/357,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,358,2016-10-03T14:56:36Z,2016-10-04T06:39:51Z,2016-10-04T06:39:51Z,MERGED,True,232,65,24,https://github.com/rastislavs,"plugin helpers, utils reorganisation, SA fixes",17,[],https://github.com/sysrepo/sysrepo/pull/358,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/358,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,358,2016-10-03T14:56:36Z,2016-10-04T06:39:51Z,2016-10-04T06:39:51Z,MERGED,True,232,65,24,https://github.com/rastislavs,"plugin helpers, utils reorganisation, SA fixes",17,[],https://github.com/sysrepo/sysrepo/pull/358,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/358#issuecomment-251133596,,"Current coverage is 84.72% (diff: 66.67%)

No coverage report found for devel at 6ab0208.
Powered by Codecov. Last update 6ab0208...bdaa917",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,362,2016-10-04T08:05:09Z,2016-10-04T08:17:45Z,2016-10-04T08:17:45Z,MERGED,True,51,51,3,https://github.com/milanlenco,Cross module dependencies -- integration.,1,[],https://github.com/sysrepo/sysrepo/pull/362,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/362,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,362,2016-10-04T08:05:09Z,2016-10-04T08:17:45Z,2016-10-04T08:17:45Z,MERGED,True,51,51,3,https://github.com/milanlenco,Cross module dependencies -- integration.,1,[],https://github.com/sysrepo/sysrepo/pull/362,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/362#issuecomment-251323297,,"Current coverage is 84.97% (diff: 72.22%)

Merging #362 into devel will increase coverage by 0.22%

@@              devel       #362   diff @@
==========================================
  Files            29         29          
  Lines         18227      18253    +26   
  Methods         770        770          
  Messages          0          0          
  Branches       3123       3126     +3   
==========================================
+ Hits          15447      15509    +62   
+ Misses         2780       2744    -36   
  Partials          0          0          

Powered by Codecov. Last update be2f188...6389212",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,363,2016-10-04T13:03:29Z,2016-10-04T13:17:48Z,2016-10-04T13:17:48Z,MERGED,True,56,4,3,https://github.com/rastislavs,Fixes for FreeBSD issues,3,[],https://github.com/sysrepo/sysrepo/pull/363,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/363,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,363,2016-10-04T13:03:29Z,2016-10-04T13:17:48Z,2016-10-04T13:17:48Z,MERGED,True,56,4,3,https://github.com/rastislavs,Fixes for FreeBSD issues,3,[],https://github.com/sysrepo/sysrepo/pull/363,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/363#issuecomment-251384366,,"Current coverage is 84.95% (diff: 50.00%)

Merging #363 into devel will increase coverage by 0.01%

@@              devel       #363   diff @@
==========================================
  Files            29         29          
  Lines         18253      18249     -4   
  Methods         770        770          
  Messages          0          0          
  Branches       3126       3126          
==========================================
- Hits          15504      15502     -2   
+ Misses         2749       2747     -2   
  Partials          0          0          

Powered by Codecov. Last update 4476ebc...250d13a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,364,2016-10-04T14:45:54Z,2016-10-04T14:52:12Z,2016-10-04T14:52:12Z,MERGED,True,53,16,3,https://github.com/lukasmacko,commit issues,2,[],https://github.com/sysrepo/sysrepo/pull/364,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/364,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,365,2016-10-04T22:31:31Z,2016-10-05T06:05:16Z,2016-10-07T15:47:19Z,MERGED,True,14,5,1,https://github.com/jktjkt,cmake: Fix example module registration at install time,2,[],https://github.com/sysrepo/sysrepo/pull/365,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/365,"There was no feedback when any of these commands actually failed (at least for me, CMake 3.6.2, Ninja 1.6.0). This patch series ensures that failures are reported (and fatal), and that data imports are disabled for non-existing data files.","There was no feedback when any of these commands actually failed (at least for me, CMake 3.6.2, Ninja 1.6.0). This patch series ensures that failures are reported (and fatal), and that data imports are disabled for non-existing data files.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,365,2016-10-04T22:31:31Z,2016-10-05T06:05:16Z,2016-10-07T15:47:19Z,MERGED,True,14,5,1,https://github.com/jktjkt,cmake: Fix example module registration at install time,2,[],https://github.com/sysrepo/sysrepo/pull/365,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/365#issuecomment-251544251,"There was no feedback when any of these commands actually failed (at least for me, CMake 3.6.2, Ninja 1.6.0). This patch series ensures that failures are reported (and fatal), and that data imports are disabled for non-existing data files.","Current coverage is 84.99% (diff: 100%)

Merging #365 into devel will increase coverage by 0.02%

@@              devel       #365   diff @@
==========================================
  Files            29         29          
  Lines         18280      18279     -1   
  Methods         770        770          
  Messages          0          0          
  Branches       3130       3130          
==========================================
+ Hits          15532      15535     +3   
+ Misses         2748       2744     -4   
  Partials          0          0          

Powered by Codecov. Last update 74b6836...b6e2290",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,367,2016-10-04T23:33:38Z,2016-10-05T14:13:58Z,2016-10-07T15:47:08Z,CLOSED,False,1,2,1,https://github.com/jktjkt,cpp: Ensure that Trees::tree reuses our reference counter,1,[],https://github.com/sysrepo/sysrepo/pull/367,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/367,"The code uses Counter instances to work around the std::shared_ptr API
design where one cannot really manipulate the reference count from
outside. In this context, we however need to ensure that a
shared_ptr created from within a Trees context reuses the same
counter, and that the underlying data structure only gets deleted when
the enclosing Trees structure is destroyed.
@mislavn , please check issue #366 and ensure that this patch doesn't make the situation worse.","The code uses Counter instances to work around the std::shared_ptr API
design where one cannot really manipulate the reference count from
outside. In this context, we however need to ensure that a
shared_ptr created from within a Trees context reuses the same
counter, and that the underlying data structure only gets deleted when
the enclosing Trees structure is destroyed.
@mislavn , please check issue #366 and ensure that this patch doesn't make the situation worse.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,367,2016-10-04T23:33:38Z,2016-10-05T14:13:58Z,2016-10-07T15:47:08Z,CLOSED,False,1,2,1,https://github.com/jktjkt,cpp: Ensure that Trees::tree reuses our reference counter,1,[],https://github.com/sysrepo/sysrepo/pull/367,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/367#issuecomment-251622214,"The code uses Counter instances to work around the std::shared_ptr API
design where one cannot really manipulate the reference count from
outside. In this context, we however need to ensure that a
shared_ptr created from within a Trees context reuses the same
counter, and that the underlying data structure only gets deleted when
the enclosing Trees structure is destroyed.
@mislavn , please check issue #366 and ensure that this patch doesn't make the situation worse.","Current coverage is 85.86% (diff: 100%)

Merging #367 into devel will increase coverage by 0.90%

@@              devel       #367   diff @@
==========================================
  Files            29         29           
  Lines         18280      20187   +1907   
  Methods         770        948    +178   
  Messages          0          0           
  Branches       3130       3720    +590   
==========================================
+ Hits          15532      17333   +1801   
- Misses         2748       2854    +106   
  Partials          0          0           

Powered by Codecov. Last update 74b6836...b04250d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,367,2016-10-04T23:33:38Z,2016-10-05T14:13:58Z,2016-10-07T15:47:08Z,CLOSED,False,1,2,1,https://github.com/jktjkt,cpp: Ensure that Trees::tree reuses our reference counter,1,[],https://github.com/sysrepo/sysrepo/pull/367,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/367#issuecomment-251686859,"The code uses Counter instances to work around the std::shared_ptr API
design where one cannot really manipulate the reference count from
outside. In this context, we however need to ensure that a
shared_ptr created from within a Trees context reuses the same
counter, and that the underlying data structure only gets deleted when
the enclosing Trees structure is destroyed.
@mislavn , please check issue #366 and ensure that this patch doesn't make the situation worse.","fixed in #375
Thanks!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,368,2016-10-05T06:14:55Z,2016-10-05T06:37:58Z,2016-10-05T06:37:58Z,MERGED,True,68,16,3,https://github.com/lukasmacko,Datastore locking,3,[],https://github.com/sysrepo/sysrepo/pull/368,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/368,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,368,2016-10-05T06:14:55Z,2016-10-05T06:37:58Z,2016-10-05T06:37:58Z,MERGED,True,68,16,3,https://github.com/lukasmacko,Datastore locking,3,[],https://github.com/sysrepo/sysrepo/pull/368,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/368#issuecomment-251592097,,"Current coverage is 85.00% (diff: 100%)

Merging #368 into devel will increase coverage by <.01%

@@              devel       #368   diff @@
==========================================
  Files            29         29          
  Lines         18276      18284     +8   
  Methods         770        770          
  Messages          0          0          
  Branches       3130       3131     +1   
==========================================
+ Hits          15534      15541     +7   
- Misses         2742       2743     +1   
  Partials          0          0          

Powered by Codecov. Last update b9facf4...5d39bab",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,369,2016-10-05T07:20:39Z,2016-10-05T08:23:30Z,2016-10-05T08:23:30Z,MERGED,True,118,19,7,https://github.com/milanlenco,Comment on trees and values + propagate some more errors after failed sr_commit,2,[],https://github.com/sysrepo/sysrepo/pull/369,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/369,"The issue with non-descriptive failed sr_commit due to disabled nodes present in the running datastore is not yet fully fixed, some work needs to be done also on the Netopeer side:
CESNET/netopeer2#38","The issue with non-descriptive failed sr_commit due to disabled nodes present in the running datastore is not yet fully fixed, some work needs to be done also on the Netopeer side:
CESNET/netopeer2#38",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,369,2016-10-05T07:20:39Z,2016-10-05T08:23:30Z,2016-10-05T08:23:30Z,MERGED,True,118,19,7,https://github.com/milanlenco,Comment on trees and values + propagate some more errors after failed sr_commit,2,[],https://github.com/sysrepo/sysrepo/pull/369,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/369#issuecomment-251602047,"The issue with non-descriptive failed sr_commit due to disabled nodes present in the running datastore is not yet fully fixed, some work needs to be done also on the Netopeer side:
CESNET/netopeer2#38","Current coverage is 84.92% (diff: 95.24%)

Merging #369 into devel will decrease coverage by 0.10%

@@              devel       #369   diff @@
==========================================
  Files            29         29          
  Lines         18278      18309    +31   
  Methods         770        771     +1   
  Messages          0          0          
  Branches       3131       3136     +5   
==========================================
+ Hits          15540      15548     +8   
- Misses         2738       2761    +23   
  Partials          0          0          

Powered by Codecov. Last update 39a3f59...ad1da7a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,370,2016-10-05T08:34:24Z,2016-10-05T08:41:17Z,2016-10-05T08:41:17Z,MERGED,True,43,0,1,https://github.com/milanlenco,Cover sr_add_error in the unit tests.,1,[],https://github.com/sysrepo/sysrepo/pull/370,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/370,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,371,2016-10-05T08:49:56Z,2016-10-05T08:57:53Z,2016-10-05T08:57:53Z,MERGED,True,28,25,4,https://github.com/rastislavs,fix commit notifications ACK synchronization,2,[],https://github.com/sysrepo/sysrepo/pull/371,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/371,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,371,2016-10-05T08:49:56Z,2016-10-05T08:57:53Z,2016-10-05T08:57:53Z,MERGED,True,28,25,4,https://github.com/rastislavs,fix commit notifications ACK synchronization,2,[],https://github.com/sysrepo/sysrepo/pull/371,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/371#issuecomment-251619631,,"Current coverage is 84.92% (diff: 47.06%)

Merging #371 into devel will decrease coverage by 0.08%

@@              devel       #371   diff @@
==========================================
  Files            29         29          
  Lines         18311      18310     -1   
  Methods         771        771          
  Messages          0          0          
  Branches       3136       3136          
==========================================
- Hits          15564      15548    -16   
- Misses         2747       2762    +15   
  Partials          0          0          

Powered by Codecov. Last update b106863...2cebf65",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,372,2016-10-05T10:47:54Z,2016-10-05T10:55:33Z,2016-10-05T10:55:33Z,MERGED,True,3,10,5,https://github.com/lukasmacko,Remove SR_UNION_T,1,[],https://github.com/sysrepo/sysrepo/pull/372,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/372,actual type is used instead similarly to leafref,actual type is used instead similarly to leafref,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,373,2016-10-05T11:44:03Z,2016-10-05T11:54:53Z,2016-10-05T11:54:53Z,MERGED,True,21,1,1,https://github.com/rastislavs,logger - allow printing thread IDs for debugging purposes,2,[],https://github.com/sysrepo/sysrepo/pull/373,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/373,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,373,2016-10-05T11:44:03Z,2016-10-05T11:54:53Z,2016-10-05T11:54:53Z,MERGED,True,21,1,1,https://github.com/rastislavs,logger - allow printing thread IDs for debugging purposes,2,[],https://github.com/sysrepo/sysrepo/pull/373,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/373#issuecomment-251653133,,"Current coverage is 84.97% (diff: 100%)

Merging #373 into devel will increase coverage by <.01%

@@              devel       #373   diff @@
==========================================
  Files            29         29          
  Lines         18304      18305     +1   
  Methods         771        771          
  Messages          0          0          
  Branches       3136       3136          
==========================================
+ Hits          15552      15553     +1   
  Misses         2752       2752          
  Partials          0          0          

Powered by Codecov. Last update 1e3e6da...044b7f4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,374,2016-10-05T12:39:37Z,2016-10-05T12:47:58Z,2016-10-05T12:47:58Z,MERGED,True,24,16,2,https://github.com/milanlenco,Fix out-of-source builds and proto file dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/374,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/374,"Fixes bug: #352
Tested with both make and ninja.","Fixes bug: #352
Tested with both make and ninja.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,374,2016-10-05T12:39:37Z,2016-10-05T12:47:58Z,2016-10-05T12:47:58Z,MERGED,True,24,16,2,https://github.com/milanlenco,Fix out-of-source builds and proto file dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/374,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/374#issuecomment-251664137,"Fixes bug: #352
Tested with both make and ninja.","Current coverage is 84.97% (diff: 100%)

Merging #374 into devel will increase coverage by 0.02%

@@              devel       #374   diff @@
==========================================
  Files            29         29          
  Lines         18306      18307     +1   
  Methods         771        771          
  Messages          0          0          
  Branches       3136       3136          
==========================================
+ Hits          15550      15555     +5   
+ Misses         2756       2752     -4   
  Partials          0          0          

Powered by Codecov. Last update 0d63406...71dd25d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,375,2016-10-05T13:28:42Z,2016-10-05T14:10:33Z,2016-10-05T14:10:34Z,MERGED,True,282,188,13,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/375,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/375,"Hi Rastislav,
here is the patch for the C++ bug.
For simpler maintenance I changed back to the helper class Trees_Holder and Vals_Holder which have the method allocate instead of having the method inside the classes Vals and Trees.
The classes are used in the methods rpc_cb and rpc_tree_cb.
I have updated the python2 example rpc_example.py too and some other fixes in C++.
Regards,
Mislav","Hi Rastislav,
here is the patch for the C++ bug.
For simpler maintenance I changed back to the helper class Trees_Holder and Vals_Holder which have the method allocate instead of having the method inside the classes Vals and Trees.
The classes are used in the methods rpc_cb and rpc_tree_cb.
I have updated the python2 example rpc_example.py too and some other fixes in C++.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,375,2016-10-05T13:28:42Z,2016-10-05T14:10:33Z,2016-10-05T14:10:34Z,MERGED,True,282,188,13,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/375,https://github.com/rastislavs,2,https://github.com/sysrepo/sysrepo/pull/375#issuecomment-251676682,"Hi Rastislav,
here is the patch for the C++ bug.
For simpler maintenance I changed back to the helper class Trees_Holder and Vals_Holder which have the method allocate instead of having the method inside the classes Vals and Trees.
The classes are used in the methods rpc_cb and rpc_tree_cb.
I have updated the python2 example rpc_example.py too and some other fixes in C++.
Regards,
Mislav","Hi Mislav,
what about this fix: b04250d
Should it be merged, or does your fix make it redundant?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,375,2016-10-05T13:28:42Z,2016-10-05T14:10:33Z,2016-10-05T14:10:34Z,MERGED,True,282,188,13,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/375,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/375#issuecomment-251676835,"Hi Rastislav,
here is the patch for the C++ bug.
For simpler maintenance I changed back to the helper class Trees_Holder and Vals_Holder which have the method allocate instead of having the method inside the classes Vals and Trees.
The classes are used in the methods rpc_cb and rpc_tree_cb.
I have updated the python2 example rpc_example.py too and some other fixes in C++.
Regards,
Mislav","Current coverage is 84.93% (diff: 100%)

Merging #375 into devel will increase coverage by 0.01%

@@              devel       #375   diff @@
==========================================
  Files            29         29          
  Lines         18304      18312     +8   
  Methods         771        771          
  Messages          0          0          
  Branches       3136       3136          
==========================================
+ Hits          15544      15553     +9   
+ Misses         2760       2759     -1   
  Partials          0          0          

Powered by Codecov. Last update 0f6d5bc...0581da2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,375,2016-10-05T13:28:42Z,2016-10-05T14:10:33Z,2016-10-05T14:10:34Z,MERGED,True,282,188,13,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/375,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/375#issuecomment-251683245,"Hi Rastislav,
here is the patch for the C++ bug.
For simpler maintenance I changed back to the helper class Trees_Holder and Vals_Holder which have the method allocate instead of having the method inside the classes Vals and Trees.
The classes are used in the methods rpc_cb and rpc_tree_cb.
I have updated the python2 example rpc_example.py too and some other fixes in C++.
Regards,
Mislav","Hi Rastislav,
The  fix: b04250d is included in the pull request.
I updated the java bindings also.
I rebased my sysrepo fork to the newest devel branch and it breaks now on:
/opt/fork/sysrepo/src/request_processor.c: In function 'rp_commit_timeout_req_process':
/opt/fork/sysrepo/src/request_processor.c:2155:54: error: 'Sr__CommitTimeoutReq' has no member named 'expired'
msg->internal_request->commit_timeout_req->expired);
^
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,376,2016-10-05T14:41:36Z,2016-10-05T14:50:19Z,2016-10-05T14:50:19Z,MERGED,True,91,6,8,https://github.com/lukasmacko,Multiple fixes,4,[],https://github.com/sysrepo/sysrepo/pull/376,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/376,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,377,2016-10-05T15:13:45Z,2016-10-06T06:49:01Z,2016-10-06T06:49:01Z,MERGED,True,53,0,1,https://github.com/rastislavs,add FreeBSD Vagrant file for testing purposes,1,[],https://github.com/sysrepo/sysrepo/pull/377,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/377,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,377,2016-10-05T15:13:45Z,2016-10-06T06:49:01Z,2016-10-06T06:49:01Z,MERGED,True,53,0,1,https://github.com/rastislavs,add FreeBSD Vagrant file for testing purposes,1,[],https://github.com/sysrepo/sysrepo/pull/377,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/377#issuecomment-251707557,,"Current coverage is 84.98% (diff: 100%)

Merging #377 into devel will decrease coverage by 0.03%

@@              devel       #377   diff @@
==========================================
  Files            29         29          
  Lines         18319      18323     +4   
  Methods         771        771          
  Messages          0          0          
  Branches       3138       3138          
==========================================
- Hits          15573      15570     -3   
- Misses         2746       2753     +7   
  Partials          0          0          

Powered by Codecov. Last update fc426c8...f73c20c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,380,2016-10-06T07:11:44Z,2016-10-06T07:40:14Z,2016-10-06T07:40:14Z,MERGED,True,11,10,3,https://github.com/lukasmacko,Debug messages,2,[],https://github.com/sysrepo/sysrepo/pull/380,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/380,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,380,2016-10-06T07:11:44Z,2016-10-06T07:40:14Z,2016-10-06T07:40:14Z,MERGED,True,11,10,3,https://github.com/lukasmacko,Debug messages,2,[],https://github.com/sysrepo/sysrepo/pull/380,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/380#issuecomment-251885550,,"Current coverage is 84.98% (diff: 100%)

Merging #380 into devel will decrease coverage by 0.01%

@@              devel       #380   diff @@
==========================================
  Files            29         29          
  Lines         18323      18322     -1   
  Methods         771        771          
  Messages          0          0          
  Branches       3138       3138          
==========================================
- Hits          15572      15570     -2   
- Misses         2751       2752     +1   
  Partials          0          0          

Powered by Codecov. Last update bbc9dd6...ae08fc9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,381,2016-10-06T10:46:53Z,2016-10-06T11:20:50Z,2016-10-06T11:20:50Z,MERGED,True,79,14,5,https://github.com/lukasmacko,Nested unions,3,[],https://github.com/sysrepo/sysrepo/pull/381,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/381,fix #354,fix #354,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,381,2016-10-06T10:46:53Z,2016-10-06T11:20:50Z,2016-10-06T11:20:50Z,MERGED,True,79,14,5,https://github.com/lukasmacko,Nested unions,3,[],https://github.com/sysrepo/sysrepo/pull/381,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/381#issuecomment-251929759,fix #354,"Current coverage is 85.03% (diff: 87.50%)

Merging #381 into devel will increase coverage by 0.04%

@@              devel       #381   diff @@
==========================================
  Files            29         29          
  Lines         18325      18336    +11   
  Methods         771        771          
  Messages          0          0          
  Branches       3138       3141     +3   
==========================================
+ Hits          15575      15591    +16   
+ Misses         2750       2745     -5   
  Partials          0          0          

Powered by Codecov. Last update 6a9f839...f716612",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,382,2016-10-06T11:25:25Z,2016-10-06T11:34:49Z,2016-10-06T11:34:49Z,MERGED,True,220,4,4,https://github.com/rastislavs,operational data examples & small fixes,2,[],https://github.com/sysrepo/sysrepo/pull/382,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/382,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,382,2016-10-06T11:25:25Z,2016-10-06T11:34:49Z,2016-10-06T11:34:49Z,MERGED,True,220,4,4,https://github.com/rastislavs,operational data examples & small fixes,2,[],https://github.com/sysrepo/sysrepo/pull/382,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/382#issuecomment-251936879,,"Current coverage is 84.92% (diff: 80.00%)

Merging #382 into devel will decrease coverage by 0.10%

@@              devel       #382   diff @@
==========================================
  Files            29         29          
  Lines         18335      18338     +3   
  Methods         771        771          
  Messages          0          0          
  Branches       3141       3141          
==========================================
- Hits          15588      15572    -16   
- Misses         2747       2766    +19   
  Partials          0          0          

Powered by Codecov. Last update 67b2b4b...4d0c49e",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,383,2016-10-06T13:00:01Z,2016-10-10T08:47:33Z,2016-11-15T18:09:41Z,MERGED,True,469,10,6,https://github.com/mislavn,Python performance tests,3,[],https://github.com/sysrepo/sysrepo/pull/383,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/383,"Hi Rastislav,
can you take a look at this Python2 performance tests.
If you want I can add tests for running datastore.
The results are taken on 5000 operations, the commits take time in python as you can see.
    Data file 1 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      35304 |          1 |          5000 |      35304 |       0.14

                 Get item first leaf|      44664 |          1 |          5000 |      44664 |       0.11

  Get item (including session start)|       9246 |          1 |          5000 |       9246 |       0.54

             Get all items of a list|      45372 |          1 |          5000 |      45372 |       0.11

             Get items iter all list|      20784 |       5000 |          5000 |  103921681 |       0.24

         Get subtrees ietf-if config|      13480 |      45000 |          5000 |  606614716 |       0.37

                Get subtree one leaf|      34398 |          1 |          5000 |      34398 |       0.15

Get subtree (including session start)|       9694 |          1 |          5000 |       9694 |       0.52
                Get subtree all leaf|      37827 |          1 |          5000 |      37827 |       0.13

         Get subtrees ietf-if config|      13838 |      50000 |          5000 |  691899653 |       0.36

               Set & delete one list|      15824 |          6 |          5000 |      94946 |       0.32

              Set & delete 100 lists|         38 |        600 |          5000 |      22713 |     132.08

              Commit one leaf change|         56 |          1 |          5000 |         56 |      88.83



    Data file 20 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      19033 |          1 |          5000 |      19033 |       0.26

                 Get item first leaf|      45896 |          1 |          5000 |      45896 |       0.11

  Get item (including session start)|       4720 |          1 |          5000 |       4720 |       1.06

             Get all items of a list|      22554 |          1 |          5000 |      22554 |       0.22

             Get items iter all list|       9759 |     100000 |          5000 |  975941096 |       0.51

         Get subtrees ietf-if config|       1433 |     900000 |          5000 | 1290091350 |       3.49

                Get subtree one leaf|      20841 |          1 |          5000 |      20841 |       0.24

Get subtree (including session start)|       4669 |          1 |          5000 |       4669 |       1.07
                Get subtree all leaf|      21918 |         20 |          5000 |     438354 |       0.23

         Get subtrees ietf-if config|       1186 |     905000 |          5000 | 1073128286 |       4.22

               Set & delete one list|      13368 |          6 |          5000 |      80211 |       0.37

              Set & delete 100 lists|         34 |        600 |          5000 |      20659 |     145.21

              Commit one leaf change|         46 |          1 |          5000 |         46 |     108.20



    Data file 100 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|       7273 |          1 |          5000 |       7273 |       0.69

                 Get item first leaf|      43253 |          1 |          5000 |      43253 |       0.12

  Get item (including session start)|       1339 |          1 |          5000 |       1339 |       3.73

             Get all items of a list|       6266 |          1 |          5000 |       6266 |       0.80

             Get items iter all list|       2846 |     500000 |          5000 | 1423079220 |       1.76

         Get subtrees ietf-if config|        240 |    4500000 |          5000 | 1081715583 |      20.80

                Get subtree one leaf|       6295 |          1 |          5000 |       6295 |       0.79

Get subtree (including session start)|       1131 |          1 |          5000 |       1131 |       4.42
                Get subtree all leaf|       6809 |        100 |          5000 |     680921 |       0.73

         Get subtrees ietf-if config|        270 |    4505000 |          5000 | 1218274828 |      18.49

               Set & delete one list|       4695 |          6 |          5000 |      28167 |       1.07

              Set & delete 100 lists|         25 |        600 |          5000 |      15136 |     198.21

              Commit one leaf change|         28 |          1 |          5000 |         28 |     177.95

End","Hi Rastislav,
can you take a look at this Python2 performance tests.
If you want I can add tests for running datastore.
The results are taken on 5000 operations, the commits take time in python as you can see.
    Data file 1 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      35304 |          1 |          5000 |      35304 |       0.14

                 Get item first leaf|      44664 |          1 |          5000 |      44664 |       0.11

  Get item (including session start)|       9246 |          1 |          5000 |       9246 |       0.54

             Get all items of a list|      45372 |          1 |          5000 |      45372 |       0.11

             Get items iter all list|      20784 |       5000 |          5000 |  103921681 |       0.24

         Get subtrees ietf-if config|      13480 |      45000 |          5000 |  606614716 |       0.37

                Get subtree one leaf|      34398 |          1 |          5000 |      34398 |       0.15

Get subtree (including session start)|       9694 |          1 |          5000 |       9694 |       0.52
                Get subtree all leaf|      37827 |          1 |          5000 |      37827 |       0.13

         Get subtrees ietf-if config|      13838 |      50000 |          5000 |  691899653 |       0.36

               Set & delete one list|      15824 |          6 |          5000 |      94946 |       0.32

              Set & delete 100 lists|         38 |        600 |          5000 |      22713 |     132.08

              Commit one leaf change|         56 |          1 |          5000 |         56 |      88.83



    Data file 20 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      19033 |          1 |          5000 |      19033 |       0.26

                 Get item first leaf|      45896 |          1 |          5000 |      45896 |       0.11

  Get item (including session start)|       4720 |          1 |          5000 |       4720 |       1.06

             Get all items of a list|      22554 |          1 |          5000 |      22554 |       0.22

             Get items iter all list|       9759 |     100000 |          5000 |  975941096 |       0.51

         Get subtrees ietf-if config|       1433 |     900000 |          5000 | 1290091350 |       3.49

                Get subtree one leaf|      20841 |          1 |          5000 |      20841 |       0.24

Get subtree (including session start)|       4669 |          1 |          5000 |       4669 |       1.07
                Get subtree all leaf|      21918 |         20 |          5000 |     438354 |       0.23

         Get subtrees ietf-if config|       1186 |     905000 |          5000 | 1073128286 |       4.22

               Set & delete one list|      13368 |          6 |          5000 |      80211 |       0.37

              Set & delete 100 lists|         34 |        600 |          5000 |      20659 |     145.21

              Commit one leaf change|         46 |          1 |          5000 |         46 |     108.20



    Data file 100 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|       7273 |          1 |          5000 |       7273 |       0.69

                 Get item first leaf|      43253 |          1 |          5000 |      43253 |       0.12

  Get item (including session start)|       1339 |          1 |          5000 |       1339 |       3.73

             Get all items of a list|       6266 |          1 |          5000 |       6266 |       0.80

             Get items iter all list|       2846 |     500000 |          5000 | 1423079220 |       1.76

         Get subtrees ietf-if config|        240 |    4500000 |          5000 | 1081715583 |      20.80

                Get subtree one leaf|       6295 |          1 |          5000 |       6295 |       0.79

Get subtree (including session start)|       1131 |          1 |          5000 |       1131 |       4.42
                Get subtree all leaf|       6809 |        100 |          5000 |     680921 |       0.73

         Get subtrees ietf-if config|        270 |    4505000 |          5000 | 1218274828 |      18.49

               Set & delete one list|       4695 |          6 |          5000 |      28167 |       1.07

              Set & delete 100 lists|         25 |        600 |          5000 |      15136 |     198.21

              Commit one leaf change|         28 |          1 |          5000 |         28 |     177.95

End",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,383,2016-10-06T13:00:01Z,2016-10-10T08:47:33Z,2016-11-15T18:09:41Z,MERGED,True,469,10,6,https://github.com/mislavn,Python performance tests,3,[],https://github.com/sysrepo/sysrepo/pull/383,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/383#issuecomment-251956104,"Hi Rastislav,
can you take a look at this Python2 performance tests.
If you want I can add tests for running datastore.
The results are taken on 5000 operations, the commits take time in python as you can see.
    Data file 1 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      35304 |          1 |          5000 |      35304 |       0.14

                 Get item first leaf|      44664 |          1 |          5000 |      44664 |       0.11

  Get item (including session start)|       9246 |          1 |          5000 |       9246 |       0.54

             Get all items of a list|      45372 |          1 |          5000 |      45372 |       0.11

             Get items iter all list|      20784 |       5000 |          5000 |  103921681 |       0.24

         Get subtrees ietf-if config|      13480 |      45000 |          5000 |  606614716 |       0.37

                Get subtree one leaf|      34398 |          1 |          5000 |      34398 |       0.15

Get subtree (including session start)|       9694 |          1 |          5000 |       9694 |       0.52
                Get subtree all leaf|      37827 |          1 |          5000 |      37827 |       0.13

         Get subtrees ietf-if config|      13838 |      50000 |          5000 |  691899653 |       0.36

               Set & delete one list|      15824 |          6 |          5000 |      94946 |       0.32

              Set & delete 100 lists|         38 |        600 |          5000 |      22713 |     132.08

              Commit one leaf change|         56 |          1 |          5000 |         56 |      88.83



    Data file 20 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      19033 |          1 |          5000 |      19033 |       0.26

                 Get item first leaf|      45896 |          1 |          5000 |      45896 |       0.11

  Get item (including session start)|       4720 |          1 |          5000 |       4720 |       1.06

             Get all items of a list|      22554 |          1 |          5000 |      22554 |       0.22

             Get items iter all list|       9759 |     100000 |          5000 |  975941096 |       0.51

         Get subtrees ietf-if config|       1433 |     900000 |          5000 | 1290091350 |       3.49

                Get subtree one leaf|      20841 |          1 |          5000 |      20841 |       0.24

Get subtree (including session start)|       4669 |          1 |          5000 |       4669 |       1.07
                Get subtree all leaf|      21918 |         20 |          5000 |     438354 |       0.23

         Get subtrees ietf-if config|       1186 |     905000 |          5000 | 1073128286 |       4.22

               Set & delete one list|      13368 |          6 |          5000 |      80211 |       0.37

              Set & delete 100 lists|         34 |        600 |          5000 |      20659 |     145.21

              Commit one leaf change|         46 |          1 |          5000 |         46 |     108.20



    Data file 100 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|       7273 |          1 |          5000 |       7273 |       0.69

                 Get item first leaf|      43253 |          1 |          5000 |      43253 |       0.12

  Get item (including session start)|       1339 |          1 |          5000 |       1339 |       3.73

             Get all items of a list|       6266 |          1 |          5000 |       6266 |       0.80

             Get items iter all list|       2846 |     500000 |          5000 | 1423079220 |       1.76

         Get subtrees ietf-if config|        240 |    4500000 |          5000 | 1081715583 |      20.80

                Get subtree one leaf|       6295 |          1 |          5000 |       6295 |       0.79

Get subtree (including session start)|       1131 |          1 |          5000 |       1131 |       4.42
                Get subtree all leaf|       6809 |        100 |          5000 |     680921 |       0.73

         Get subtrees ietf-if config|        270 |    4505000 |          5000 | 1218274828 |      18.49

               Set & delete one list|       4695 |          6 |          5000 |      28167 |       1.07

              Set & delete 100 lists|         25 |        600 |          5000 |      15136 |     198.21

              Commit one leaf change|         28 |          1 |          5000 |         28 |     177.95

End","Current coverage is 84.91% (diff: 100%)

Merging #383 into devel will decrease coverage by 0.02%

@@              devel       #383   diff @@
==========================================
  Files            29         29          
  Lines         18349      18344     -5   
  Methods         771        771          
  Messages          0          0          
  Branches       3143       3143          
==========================================
- Hits          15582      15575     -7   
- Misses         2767       2769     +2   
  Partials          0          0          

Powered by Codecov. Last update 1c76dfc...4d517de",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,383,2016-10-06T13:00:01Z,2016-10-10T08:47:33Z,2016-11-15T18:09:41Z,MERGED,True,469,10,6,https://github.com/mislavn,Python performance tests,3,[],https://github.com/sysrepo/sysrepo/pull/383,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/383#issuecomment-251956894,"Hi Rastislav,
can you take a look at this Python2 performance tests.
If you want I can add tests for running datastore.
The results are taken on 5000 operations, the commits take time in python as you can see.
    Data file 1 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      35304 |          1 |          5000 |      35304 |       0.14

                 Get item first leaf|      44664 |          1 |          5000 |      44664 |       0.11

  Get item (including session start)|       9246 |          1 |          5000 |       9246 |       0.54

             Get all items of a list|      45372 |          1 |          5000 |      45372 |       0.11

             Get items iter all list|      20784 |       5000 |          5000 |  103921681 |       0.24

         Get subtrees ietf-if config|      13480 |      45000 |          5000 |  606614716 |       0.37

                Get subtree one leaf|      34398 |          1 |          5000 |      34398 |       0.15

Get subtree (including session start)|       9694 |          1 |          5000 |       9694 |       0.52
                Get subtree all leaf|      37827 |          1 |          5000 |      37827 |       0.13

         Get subtrees ietf-if config|      13838 |      50000 |          5000 |  691899653 |       0.36

               Set & delete one list|      15824 |          6 |          5000 |      94946 |       0.32

              Set & delete 100 lists|         38 |        600 |          5000 |      22713 |     132.08

              Commit one leaf change|         56 |          1 |          5000 |         56 |      88.83



    Data file 20 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      19033 |          1 |          5000 |      19033 |       0.26

                 Get item first leaf|      45896 |          1 |          5000 |      45896 |       0.11

  Get item (including session start)|       4720 |          1 |          5000 |       4720 |       1.06

             Get all items of a list|      22554 |          1 |          5000 |      22554 |       0.22

             Get items iter all list|       9759 |     100000 |          5000 |  975941096 |       0.51

         Get subtrees ietf-if config|       1433 |     900000 |          5000 | 1290091350 |       3.49

                Get subtree one leaf|      20841 |          1 |          5000 |      20841 |       0.24

Get subtree (including session start)|       4669 |          1 |          5000 |       4669 |       1.07
                Get subtree all leaf|      21918 |         20 |          5000 |     438354 |       0.23

         Get subtrees ietf-if config|       1186 |     905000 |          5000 | 1073128286 |       4.22

               Set & delete one list|      13368 |          6 |          5000 |      80211 |       0.37

              Set & delete 100 lists|         34 |        600 |          5000 |      20659 |     145.21

              Commit one leaf change|         46 |          1 |          5000 |         46 |     108.20



    Data file 100 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|       7273 |          1 |          5000 |       7273 |       0.69

                 Get item first leaf|      43253 |          1 |          5000 |      43253 |       0.12

  Get item (including session start)|       1339 |          1 |          5000 |       1339 |       3.73

             Get all items of a list|       6266 |          1 |          5000 |       6266 |       0.80

             Get items iter all list|       2846 |     500000 |          5000 | 1423079220 |       1.76

         Get subtrees ietf-if config|        240 |    4500000 |          5000 | 1081715583 |      20.80

                Get subtree one leaf|       6295 |          1 |          5000 |       6295 |       0.79

Get subtree (including session start)|       1131 |          1 |          5000 |       1131 |       4.42
                Get subtree all leaf|       6809 |        100 |          5000 |     680921 |       0.73

         Get subtrees ietf-if config|        270 |    4505000 |          5000 | 1218274828 |      18.49

               Set & delete one list|       4695 |          6 |          5000 |      28167 |       1.07

              Set & delete 100 lists|         25 |        600 |          5000 |      15136 |     198.21

              Commit one leaf change|         28 |          1 |          5000 |         28 |     177.95

End","Hi Rastislav,
where should I put the python file, somewhere in swig/python2 folder or in the tests folder with the rest of C performance tests?
At the moment it is in swig/python2/examples folder.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,383,2016-10-06T13:00:01Z,2016-10-10T08:47:33Z,2016-11-15T18:09:41Z,MERGED,True,469,10,6,https://github.com/mislavn,Python performance tests,3,[],https://github.com/sysrepo/sysrepo/pull/383,https://github.com/rastislavs,4,https://github.com/sysrepo/sysrepo/pull/383#issuecomment-252209574,"Hi Rastislav,
can you take a look at this Python2 performance tests.
If you want I can add tests for running datastore.
The results are taken on 5000 operations, the commits take time in python as you can see.
    Data file 1 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      35304 |          1 |          5000 |      35304 |       0.14

                 Get item first leaf|      44664 |          1 |          5000 |      44664 |       0.11

  Get item (including session start)|       9246 |          1 |          5000 |       9246 |       0.54

             Get all items of a list|      45372 |          1 |          5000 |      45372 |       0.11

             Get items iter all list|      20784 |       5000 |          5000 |  103921681 |       0.24

         Get subtrees ietf-if config|      13480 |      45000 |          5000 |  606614716 |       0.37

                Get subtree one leaf|      34398 |          1 |          5000 |      34398 |       0.15

Get subtree (including session start)|       9694 |          1 |          5000 |       9694 |       0.52
                Get subtree all leaf|      37827 |          1 |          5000 |      37827 |       0.13

         Get subtrees ietf-if config|      13838 |      50000 |          5000 |  691899653 |       0.36

               Set & delete one list|      15824 |          6 |          5000 |      94946 |       0.32

              Set & delete 100 lists|         38 |        600 |          5000 |      22713 |     132.08

              Commit one leaf change|         56 |          1 |          5000 |         56 |      88.83



    Data file 20 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      19033 |          1 |          5000 |      19033 |       0.26

                 Get item first leaf|      45896 |          1 |          5000 |      45896 |       0.11

  Get item (including session start)|       4720 |          1 |          5000 |       4720 |       1.06

             Get all items of a list|      22554 |          1 |          5000 |      22554 |       0.22

             Get items iter all list|       9759 |     100000 |          5000 |  975941096 |       0.51

         Get subtrees ietf-if config|       1433 |     900000 |          5000 | 1290091350 |       3.49

                Get subtree one leaf|      20841 |          1 |          5000 |      20841 |       0.24

Get subtree (including session start)|       4669 |          1 |          5000 |       4669 |       1.07
                Get subtree all leaf|      21918 |         20 |          5000 |     438354 |       0.23

         Get subtrees ietf-if config|       1186 |     905000 |          5000 | 1073128286 |       4.22

               Set & delete one list|      13368 |          6 |          5000 |      80211 |       0.37

              Set & delete 100 lists|         34 |        600 |          5000 |      20659 |     145.21

              Commit one leaf change|         46 |          1 |          5000 |         46 |     108.20



    Data file 100 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|       7273 |          1 |          5000 |       7273 |       0.69

                 Get item first leaf|      43253 |          1 |          5000 |      43253 |       0.12

  Get item (including session start)|       1339 |          1 |          5000 |       1339 |       3.73

             Get all items of a list|       6266 |          1 |          5000 |       6266 |       0.80

             Get items iter all list|       2846 |     500000 |          5000 | 1423079220 |       1.76

         Get subtrees ietf-if config|        240 |    4500000 |          5000 | 1081715583 |      20.80

                Get subtree one leaf|       6295 |          1 |          5000 |       6295 |       0.79

Get subtree (including session start)|       1131 |          1 |          5000 |       1131 |       4.42
                Get subtree all leaf|       6809 |        100 |          5000 |     680921 |       0.73

         Get subtrees ietf-if config|        270 |    4505000 |          5000 | 1218274828 |      18.49

               Set & delete one list|       4695 |          6 |          5000 |      28167 |       1.07

              Set & delete 100 lists|         25 |        600 |          5000 |      15136 |     198.21

              Commit one leaf change|         28 |          1 |          5000 |         28 |     177.95

End","Hi Mislav,
please move it to swig/python2/tests (create a new directory), since this is not really an example.
Thanks!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,383,2016-10-06T13:00:01Z,2016-10-10T08:47:33Z,2016-11-15T18:09:41Z,MERGED,True,469,10,6,https://github.com/mislavn,Python performance tests,3,[],https://github.com/sysrepo/sysrepo/pull/383,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/383#issuecomment-252281820,"Hi Rastislav,
can you take a look at this Python2 performance tests.
If you want I can add tests for running datastore.
The results are taken on 5000 operations, the commits take time in python as you can see.
    Data file 1 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      35304 |          1 |          5000 |      35304 |       0.14

                 Get item first leaf|      44664 |          1 |          5000 |      44664 |       0.11

  Get item (including session start)|       9246 |          1 |          5000 |       9246 |       0.54

             Get all items of a list|      45372 |          1 |          5000 |      45372 |       0.11

             Get items iter all list|      20784 |       5000 |          5000 |  103921681 |       0.24

         Get subtrees ietf-if config|      13480 |      45000 |          5000 |  606614716 |       0.37

                Get subtree one leaf|      34398 |          1 |          5000 |      34398 |       0.15

Get subtree (including session start)|       9694 |          1 |          5000 |       9694 |       0.52
                Get subtree all leaf|      37827 |          1 |          5000 |      37827 |       0.13

         Get subtrees ietf-if config|      13838 |      50000 |          5000 |  691899653 |       0.36

               Set & delete one list|      15824 |          6 |          5000 |      94946 |       0.32

              Set & delete 100 lists|         38 |        600 |          5000 |      22713 |     132.08

              Commit one leaf change|         56 |          1 |          5000 |         56 |      88.83



    Data file 20 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      19033 |          1 |          5000 |      19033 |       0.26

                 Get item first leaf|      45896 |          1 |          5000 |      45896 |       0.11

  Get item (including session start)|       4720 |          1 |          5000 |       4720 |       1.06

             Get all items of a list|      22554 |          1 |          5000 |      22554 |       0.22

             Get items iter all list|       9759 |     100000 |          5000 |  975941096 |       0.51

         Get subtrees ietf-if config|       1433 |     900000 |          5000 | 1290091350 |       3.49

                Get subtree one leaf|      20841 |          1 |          5000 |      20841 |       0.24

Get subtree (including session start)|       4669 |          1 |          5000 |       4669 |       1.07
                Get subtree all leaf|      21918 |         20 |          5000 |     438354 |       0.23

         Get subtrees ietf-if config|       1186 |     905000 |          5000 | 1073128286 |       4.22

               Set & delete one list|      13368 |          6 |          5000 |      80211 |       0.37

              Set & delete 100 lists|         34 |        600 |          5000 |      20659 |     145.21

              Commit one leaf change|         46 |          1 |          5000 |         46 |     108.20



    Data file 100 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|       7273 |          1 |          5000 |       7273 |       0.69

                 Get item first leaf|      43253 |          1 |          5000 |      43253 |       0.12

  Get item (including session start)|       1339 |          1 |          5000 |       1339 |       3.73

             Get all items of a list|       6266 |          1 |          5000 |       6266 |       0.80

             Get items iter all list|       2846 |     500000 |          5000 | 1423079220 |       1.76

         Get subtrees ietf-if config|        240 |    4500000 |          5000 | 1081715583 |      20.80

                Get subtree one leaf|       6295 |          1 |          5000 |       6295 |       0.79

Get subtree (including session start)|       1131 |          1 |          5000 |       1131 |       4.42
                Get subtree all leaf|       6809 |        100 |          5000 |     680921 |       0.73

         Get subtrees ietf-if config|        270 |    4505000 |          5000 | 1218274828 |      18.49

               Set & delete one list|       4695 |          6 |          5000 |      28167 |       1.07

              Set & delete 100 lists|         25 |        600 |          5000 |      15136 |     198.21

              Commit one leaf change|         28 |          1 |          5000 |         28 |     177.95

End","Hi Rastislav,
done.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,383,2016-10-06T13:00:01Z,2016-10-10T08:47:33Z,2016-11-15T18:09:41Z,MERGED,True,469,10,6,https://github.com/mislavn,Python performance tests,3,[],https://github.com/sysrepo/sysrepo/pull/383,https://github.com/rastislavs,6,https://github.com/sysrepo/sysrepo/pull/383#issuecomment-252551936,"Hi Rastislav,
can you take a look at this Python2 performance tests.
If you want I can add tests for running datastore.
The results are taken on 5000 operations, the commits take time in python as you can see.
    Data file 1 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      35304 |          1 |          5000 |      35304 |       0.14

                 Get item first leaf|      44664 |          1 |          5000 |      44664 |       0.11

  Get item (including session start)|       9246 |          1 |          5000 |       9246 |       0.54

             Get all items of a list|      45372 |          1 |          5000 |      45372 |       0.11

             Get items iter all list|      20784 |       5000 |          5000 |  103921681 |       0.24

         Get subtrees ietf-if config|      13480 |      45000 |          5000 |  606614716 |       0.37

                Get subtree one leaf|      34398 |          1 |          5000 |      34398 |       0.15

Get subtree (including session start)|       9694 |          1 |          5000 |       9694 |       0.52
                Get subtree all leaf|      37827 |          1 |          5000 |      37827 |       0.13

         Get subtrees ietf-if config|      13838 |      50000 |          5000 |  691899653 |       0.36

               Set & delete one list|      15824 |          6 |          5000 |      94946 |       0.32

              Set & delete 100 lists|         38 |        600 |          5000 |      22713 |     132.08

              Commit one leaf change|         56 |          1 |          5000 |         56 |      88.83



    Data file 20 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      19033 |          1 |          5000 |      19033 |       0.26

                 Get item first leaf|      45896 |          1 |          5000 |      45896 |       0.11

  Get item (including session start)|       4720 |          1 |          5000 |       4720 |       1.06

             Get all items of a list|      22554 |          1 |          5000 |      22554 |       0.22

             Get items iter all list|       9759 |     100000 |          5000 |  975941096 |       0.51

         Get subtrees ietf-if config|       1433 |     900000 |          5000 | 1290091350 |       3.49

                Get subtree one leaf|      20841 |          1 |          5000 |      20841 |       0.24

Get subtree (including session start)|       4669 |          1 |          5000 |       4669 |       1.07
                Get subtree all leaf|      21918 |         20 |          5000 |     438354 |       0.23

         Get subtrees ietf-if config|       1186 |     905000 |          5000 | 1073128286 |       4.22

               Set & delete one list|      13368 |          6 |          5000 |      80211 |       0.37

              Set & delete 100 lists|         34 |        600 |          5000 |      20659 |     145.21

              Commit one leaf change|         46 |          1 |          5000 |         46 |     108.20



    Data file 100 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|       7273 |          1 |          5000 |       7273 |       0.69

                 Get item first leaf|      43253 |          1 |          5000 |      43253 |       0.12

  Get item (including session start)|       1339 |          1 |          5000 |       1339 |       3.73

             Get all items of a list|       6266 |          1 |          5000 |       6266 |       0.80

             Get items iter all list|       2846 |     500000 |          5000 | 1423079220 |       1.76

         Get subtrees ietf-if config|        240 |    4500000 |          5000 | 1081715583 |      20.80

                Get subtree one leaf|       6295 |          1 |          5000 |       6295 |       0.79

Get subtree (including session start)|       1131 |          1 |          5000 |       1131 |       4.42
                Get subtree all leaf|       6809 |        100 |          5000 |     680921 |       0.73

         Get subtrees ietf-if config|        270 |    4505000 |          5000 | 1218274828 |      18.49

               Set & delete one list|       4695 |          6 |          5000 |      28167 |       1.07

              Set & delete 100 lists|         25 |        600 |          5000 |      15136 |     198.21

              Commit one leaf change|         28 |          1 |          5000 |         28 |     177.95

End","Hi Mislav,
please revert ed1d112 from your pull request - it is conflicting.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,383,2016-10-06T13:00:01Z,2016-10-10T08:47:33Z,2016-11-15T18:09:41Z,MERGED,True,469,10,6,https://github.com/mislavn,Python performance tests,3,[],https://github.com/sysrepo/sysrepo/pull/383,https://github.com/mislavn,7,https://github.com/sysrepo/sysrepo/pull/383#issuecomment-252558642,"Hi Rastislav,
can you take a look at this Python2 performance tests.
If you want I can add tests for running datastore.
The results are taken on 5000 operations, the commits take time in python as you can see.
    Data file 1 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      35304 |          1 |          5000 |      35304 |       0.14

                 Get item first leaf|      44664 |          1 |          5000 |      44664 |       0.11

  Get item (including session start)|       9246 |          1 |          5000 |       9246 |       0.54

             Get all items of a list|      45372 |          1 |          5000 |      45372 |       0.11

             Get items iter all list|      20784 |       5000 |          5000 |  103921681 |       0.24

         Get subtrees ietf-if config|      13480 |      45000 |          5000 |  606614716 |       0.37

                Get subtree one leaf|      34398 |          1 |          5000 |      34398 |       0.15

Get subtree (including session start)|       9694 |          1 |          5000 |       9694 |       0.52
                Get subtree all leaf|      37827 |          1 |          5000 |      37827 |       0.13

         Get subtrees ietf-if config|      13838 |      50000 |          5000 |  691899653 |       0.36

               Set & delete one list|      15824 |          6 |          5000 |      94946 |       0.32

              Set & delete 100 lists|         38 |        600 |          5000 |      22713 |     132.08

              Commit one leaf change|         56 |          1 |          5000 |         56 |      88.83



    Data file 20 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|      19033 |          1 |          5000 |      19033 |       0.26

                 Get item first leaf|      45896 |          1 |          5000 |      45896 |       0.11

  Get item (including session start)|       4720 |          1 |          5000 |       4720 |       1.06

             Get all items of a list|      22554 |          1 |          5000 |      22554 |       0.22

             Get items iter all list|       9759 |     100000 |          5000 |  975941096 |       0.51

         Get subtrees ietf-if config|       1433 |     900000 |          5000 | 1290091350 |       3.49

                Get subtree one leaf|      20841 |          1 |          5000 |      20841 |       0.24

Get subtree (including session start)|       4669 |          1 |          5000 |       4669 |       1.07
                Get subtree all leaf|      21918 |         20 |          5000 |     438354 |       0.23

         Get subtrees ietf-if config|       1186 |     905000 |          5000 | 1073128286 |       4.22

               Set & delete one list|      13368 |          6 |          5000 |      80211 |       0.37

              Set & delete 100 lists|         34 |        600 |          5000 |      20659 |     145.21

              Commit one leaf change|         46 |          1 |          5000 |         46 |     108.20



    Data file 100 list instance in datastore startup 

Operation                               |    ops/sec |   items/op | ops performed |  items/sec |  test time.
                   Get item one leaf|       7273 |          1 |          5000 |       7273 |       0.69

                 Get item first leaf|      43253 |          1 |          5000 |      43253 |       0.12

  Get item (including session start)|       1339 |          1 |          5000 |       1339 |       3.73

             Get all items of a list|       6266 |          1 |          5000 |       6266 |       0.80

             Get items iter all list|       2846 |     500000 |          5000 | 1423079220 |       1.76

         Get subtrees ietf-if config|        240 |    4500000 |          5000 | 1081715583 |      20.80

                Get subtree one leaf|       6295 |          1 |          5000 |       6295 |       0.79

Get subtree (including session start)|       1131 |          1 |          5000 |       1131 |       4.42
                Get subtree all leaf|       6809 |        100 |          5000 |     680921 |       0.73

         Get subtrees ietf-if config|        270 |    4505000 |          5000 | 1218274828 |      18.49

               Set & delete one list|       4695 |          6 |          5000 |      28167 |       1.07

              Set & delete 100 lists|         25 |        600 |          5000 |      15136 |     198.21

              Commit one leaf change|         28 |          1 |          5000 |         28 |     177.95

End","Hi Rastislav,
Done, sorry for that.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,386,2016-10-06T16:24:36Z,2016-10-07T10:27:44Z,2016-10-07T15:46:50Z,MERGED,True,3,3,1,https://github.com/jktjkt,Fix build with -Wvarargs,1,[],https://github.com/sysrepo/sysrepo/pull/386,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/386,"va_args is picky about the type of the function argument which gets
passed, and bool gets promoted to int by default, leading to undefined
behavior.
I took the liberty to rename 'direct' to 'is_direct' to keep the
original intention now that the type is int -- feel free to change this
if you disagree.
Here's clang's error message:
../tests/md_test.c:377:22: warning: passing an object that undergoes default argument promotion to 'va_start' has undefined behavior [-Wvarargs]
va_start(va, direct);
^
../tests/md_test.c:362:38: note: parameter of type 'bool' is declared here
md_test_dep(md_dep_type_t type, bool direct, ...)","va_args is picky about the type of the function argument which gets
passed, and bool gets promoted to int by default, leading to undefined
behavior.
I took the liberty to rename 'direct' to 'is_direct' to keep the
original intention now that the type is int -- feel free to change this
if you disagree.
Here's clang's error message:
../tests/md_test.c:377:22: warning: passing an object that undergoes default argument promotion to 'va_start' has undefined behavior [-Wvarargs]
va_start(va, direct);
^
../tests/md_test.c:362:38: note: parameter of type 'bool' is declared here
md_test_dep(md_dep_type_t type, bool direct, ...)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,386,2016-10-06T16:24:36Z,2016-10-07T10:27:44Z,2016-10-07T15:46:50Z,MERGED,True,3,3,1,https://github.com/jktjkt,Fix build with -Wvarargs,1,[],https://github.com/sysrepo/sysrepo/pull/386,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/386#issuecomment-252017035,"va_args is picky about the type of the function argument which gets
passed, and bool gets promoted to int by default, leading to undefined
behavior.
I took the liberty to rename 'direct' to 'is_direct' to keep the
original intention now that the type is int -- feel free to change this
if you disagree.
Here's clang's error message:
../tests/md_test.c:377:22: warning: passing an object that undergoes default argument promotion to 'va_start' has undefined behavior [-Wvarargs]
va_start(va, direct);
^
../tests/md_test.c:362:38: note: parameter of type 'bool' is declared here
md_test_dep(md_dep_type_t type, bool direct, ...)","Current coverage is 84.94% (diff: 100%)

Merging #386 into master will increase coverage by 0.03%

@@             master       #386   diff @@
==========================================
  Files            29         29          
  Lines         18339      18337     -2   
  Methods         771        771          
  Messages          0          0          
  Branches       3141       3141          
==========================================
+ Hits          15572      15575     +3   
+ Misses         2767       2762     -5   
  Partials          0          0          

Powered by Codecov. Last update c66cdc1...574c5ba",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,388,2016-10-06T16:25:02Z,2016-10-07T06:20:46Z,2016-10-07T15:46:45Z,MERGED,True,0,3,1,https://github.com/jktjkt,Remove unused entries from .gitignore,1,[],https://github.com/sysrepo/sysrepo/pull/388,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/388,"Now that out-of-tree build doesn't touch the source tree (seems that
71dd25d and 95928ab are relevant), remove these entries from .gitignore.
This is intended as a hint to developers that they might need to clean
their tree to prevent build failures in future. Bad stuff will happen
otherwise because these generated files are now obsolete and won't be
updated anymore, and there order of the include paths is always fun to
debug.","Now that out-of-tree build doesn't touch the source tree (seems that
71dd25d and 95928ab are relevant), remove these entries from .gitignore.
This is intended as a hint to developers that they might need to clean
their tree to prevent build failures in future. Bad stuff will happen
otherwise because these generated files are now obsolete and won't be
updated anymore, and there order of the include paths is always fun to
debug.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,388,2016-10-06T16:25:02Z,2016-10-07T06:20:46Z,2016-10-07T15:46:45Z,MERGED,True,0,3,1,https://github.com/jktjkt,Remove unused entries from .gitignore,1,[],https://github.com/sysrepo/sysrepo/pull/388,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/388#issuecomment-252017062,"Now that out-of-tree build doesn't touch the source tree (seems that
71dd25d and 95928ab are relevant), remove these entries from .gitignore.
This is intended as a hint to developers that they might need to clean
their tree to prevent build failures in future. Bad stuff will happen
otherwise because these generated files are now obsolete and won't be
updated anymore, and there order of the include paths is always fun to
debug.","Current coverage is 84.90% (diff: 100%)

Merging #388 into master will decrease coverage by 0.02%

@@             master       #388   diff @@
==========================================
  Files            29         29          
  Lines         18339      18339          
  Methods         771        771          
  Messages          0          0          
  Branches       3141       3141          
==========================================
- Hits          15572      15569     -3   
- Misses         2767       2770     +3   
  Partials          0          0          

Powered by Codecov. Last update c66cdc1...469a0eb",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,389,2016-10-06T17:52:15Z,2016-10-10T07:31:23Z,2016-10-10T16:02:07Z,MERGED,True,6,16,2,https://github.com/jktjkt,Remove C ODR violation,1,[],https://github.com/sysrepo/sysrepo/pull/389,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/389,"Because both libsysrepo.so and libsysrepo-engine.so were linking objects
from COMMON, the protobuf-c's sr__value__descriptor variable was present
twice in the resulting program. That's forbidden.
Thanks to ASAN for showing this:
  =================================================================
  ==31698==ERROR: AddressSanitizer: odr-violation (0x7ffbf3b588a0):
    [1] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
    [2] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
  These globals were registered at these points:
    [1]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf381997d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo.so+0x8097d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

    [2]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf2d7218d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo-engine.so+0xcd18d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

  ==31698==HINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_odr_violation=0
  SUMMARY: AddressSanitizer: odr-violation: global 'sr__value__descriptor' at src/common/sysrepo.pb-c.c:3772:34
  ==31698==ABORTING","Because both libsysrepo.so and libsysrepo-engine.so were linking objects
from COMMON, the protobuf-c's sr__value__descriptor variable was present
twice in the resulting program. That's forbidden.
Thanks to ASAN for showing this:
  =================================================================
  ==31698==ERROR: AddressSanitizer: odr-violation (0x7ffbf3b588a0):
    [1] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
    [2] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
  These globals were registered at these points:
    [1]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf381997d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo.so+0x8097d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

    [2]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf2d7218d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo-engine.so+0xcd18d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

  ==31698==HINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_odr_violation=0
  SUMMARY: AddressSanitizer: odr-violation: global 'sr__value__descriptor' at src/common/sysrepo.pb-c.c:3772:34
  ==31698==ABORTING",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,389,2016-10-06T17:52:15Z,2016-10-10T07:31:23Z,2016-10-10T16:02:07Z,MERGED,True,6,16,2,https://github.com/jktjkt,Remove C ODR violation,1,[],https://github.com/sysrepo/sysrepo/pull/389,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/389#issuecomment-252042912,"Because both libsysrepo.so and libsysrepo-engine.so were linking objects
from COMMON, the protobuf-c's sr__value__descriptor variable was present
twice in the resulting program. That's forbidden.
Thanks to ASAN for showing this:
  =================================================================
  ==31698==ERROR: AddressSanitizer: odr-violation (0x7ffbf3b588a0):
    [1] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
    [2] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
  These globals were registered at these points:
    [1]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf381997d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo.so+0x8097d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

    [2]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf2d7218d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo-engine.so+0xcd18d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

  ==31698==HINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_odr_violation=0
  SUMMARY: AddressSanitizer: odr-violation: global 'sr__value__descriptor' at src/common/sysrepo.pb-c.c:3772:34
  ==31698==ABORTING","Hmm, this appears to break the build for netopeer2-server:
jkt@kolibrik ~/work/prog/netopeer2/build-server[master] $ ninja -j1
[1/5] Linking C executable netopeer2-server
FAILED: : && /usr/bin/clang  -fsanitize=address -Wall -Wextra -g -O0 -DDEBUG  -fsanitize=address CMakeFiles/serverobj.dir/ietf_netconf_server.c.o CMakeFiles/serverobj.dir/netconf_monitoring.c.o CMakeFiles/serverobj.dir/operations.c.o CMakeFiles/serverobj.dir/op_get_config.c.o CMakeFiles/serverobj.dir/op_editconfig.c.o CMakeFiles/serverobj.dir/op_copyconfig.c.o CMakeFiles/serverobj.dir/op_deleteconfig.c.o CMakeFiles/serverobj.dir/op_candidate.c.o CMakeFiles/serverobj.dir/op_validate.c.o CMakeFiles/serverobj.dir/op_un_lock.c.o CMakeFiles/serverobj.dir/op_generic.c.o CMakeFiles/serverobj.dir/log.c.o CMakeFiles/netopeer2-server.dir/main.c.o  -o netopeer2-server  -rdynamic -lpthread /opt/libnetconf/lib/libyang.so /opt/libnetconf/lib/libnetconf2.so /opt/libnetconf/lib/libsysrepo.so -Wl,-rpath,/opt/libnetconf/lib: && :
/usr/bin/x86_64-pc-linux-gnu-ld: CMakeFiles/serverobj.dir/ietf_netconf_server.c.o: undefined reference to symbol 'sr_strerror'
/opt/libnetconf/lib/libsysrepo-engine.so: error adding symbols: DSO missing from command line
x86_64-pc-linux-gnu-clang-3.9: error: linker command failed with exit code 1 (use -v to see invocation)
ninja: build stopped: subcommand failed.

Are 3rd party projects expected to link against just sysrepo, or against both that and sysrepo-engine?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,389,2016-10-06T17:52:15Z,2016-10-10T07:31:23Z,2016-10-10T16:02:07Z,MERGED,True,6,16,2,https://github.com/jktjkt,Remove C ODR violation,1,[],https://github.com/sysrepo/sysrepo/pull/389,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/389#issuecomment-252045419,"Because both libsysrepo.so and libsysrepo-engine.so were linking objects
from COMMON, the protobuf-c's sr__value__descriptor variable was present
twice in the resulting program. That's forbidden.
Thanks to ASAN for showing this:
  =================================================================
  ==31698==ERROR: AddressSanitizer: odr-violation (0x7ffbf3b588a0):
    [1] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
    [2] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
  These globals were registered at these points:
    [1]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf381997d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo.so+0x8097d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

    [2]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf2d7218d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo-engine.so+0xcd18d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

  ==31698==HINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_odr_violation=0
  SUMMARY: AddressSanitizer: odr-violation: global 'sr__value__descriptor' at src/common/sysrepo.pb-c.c:3772:34
  ==31698==ABORTING","Current coverage is 84.96% (diff: 100%)

Merging #389 into master will increase coverage by 0.11%

@@             master       #389   diff @@
==========================================
  Files            29         29          
  Lines         18344      18343     -1   
  Methods         771        771          
  Messages          0          0          
  Branches       3143       3143          
==========================================
+ Hits          15565      15584    +19   
+ Misses         2779       2759    -20   
  Partials          0          0          

Powered by Codecov. Last update 8e8706c...111a088",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,389,2016-10-06T17:52:15Z,2016-10-10T07:31:23Z,2016-10-10T16:02:07Z,MERGED,True,6,16,2,https://github.com/jktjkt,Remove C ODR violation,1,[],https://github.com/sysrepo/sysrepo/pull/389,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/389#issuecomment-252047843,"Because both libsysrepo.so and libsysrepo-engine.so were linking objects
from COMMON, the protobuf-c's sr__value__descriptor variable was present
twice in the resulting program. That's forbidden.
Thanks to ASAN for showing this:
  =================================================================
  ==31698==ERROR: AddressSanitizer: odr-violation (0x7ffbf3b588a0):
    [1] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
    [2] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
  These globals were registered at these points:
    [1]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf381997d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo.so+0x8097d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

    [2]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf2d7218d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo-engine.so+0xcd18d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

  ==31698==HINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_odr_violation=0
  SUMMARY: AddressSanitizer: odr-violation: global 'sr__value__descriptor' at src/common/sysrepo.pb-c.c:3772:34
  ==31698==ABORTING","OK, fixed, I think. I won't pretend that I'm an expert on library design, so I wonder if it's OK to require all downstream consumers to either use pkg-config, or to manually link with both of these two libraries.
CESNET/netopeer2's FindSYSREPO.cmake appears to be broken because it uses pkg-config to find the library locations, but it doesn't use the returned list of libs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,389,2016-10-06T17:52:15Z,2016-10-10T07:31:23Z,2016-10-10T16:02:07Z,MERGED,True,6,16,2,https://github.com/jktjkt,Remove C ODR violation,1,[],https://github.com/sysrepo/sysrepo/pull/389,https://github.com/rastislavs,5,https://github.com/sysrepo/sysrepo/pull/389#issuecomment-252248945,"Because both libsysrepo.so and libsysrepo-engine.so were linking objects
from COMMON, the protobuf-c's sr__value__descriptor variable was present
twice in the resulting program. That's forbidden.
Thanks to ASAN for showing this:
  =================================================================
  ==31698==ERROR: AddressSanitizer: odr-violation (0x7ffbf3b588a0):
    [1] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
    [2] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
  These globals were registered at these points:
    [1]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf381997d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo.so+0x8097d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

    [2]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf2d7218d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo-engine.so+0xcd18d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

  ==31698==HINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_odr_violation=0
  SUMMARY: AddressSanitizer: odr-violation: global 'sr__value__descriptor' at src/common/sysrepo.pb-c.c:3772:34
  ==31698==ABORTING","Hi,
we actually don't want 3rd party projects to link against both sysrepo and sysrepo-engine. We intended sysrepo to be the client library to link by 3rd party projects and sysrepo-engine to be the engine library linked to sysrepo deamon. But since the client library is also capable of initiating its own sysrepo engine in case that daemon is not running, sysrepo-engine must be linked to the sysrepo library :)
As it complicates things and does not bring any additional value, I think that the best option would be to create only one sysrepo library that would include all object files.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,389,2016-10-06T17:52:15Z,2016-10-10T07:31:23Z,2016-10-10T16:02:07Z,MERGED,True,6,16,2,https://github.com/jktjkt,Remove C ODR violation,1,[],https://github.com/sysrepo/sysrepo/pull/389,https://github.com/jktjkt,6,https://github.com/sysrepo/sysrepo/pull/389#issuecomment-252292747,"Because both libsysrepo.so and libsysrepo-engine.so were linking objects
from COMMON, the protobuf-c's sr__value__descriptor variable was present
twice in the resulting program. That's forbidden.
Thanks to ASAN for showing this:
  =================================================================
  ==31698==ERROR: AddressSanitizer: odr-violation (0x7ffbf3b588a0):
    [1] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
    [2] size=120 'sr__value__descriptor' src/common/sysrepo.pb-c.c:3772:34
  These globals were registered at these points:
    [1]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf381997d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo.so+0x8097d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

    [2]:
      #0 0x42b18d in __asan_register_globals.part.14 /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_globals.cc:309
      #1 0x7ffbf2d7218d in asan.module_ctor (/opt/libnetconf/lib/libsysrepo-engine.so+0xcd18d)
      #2 0x7ffbf3bb111b in call_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:30
      #3 0x7ffbf3bb111b in _dl_init /var/tmp/portage/sys-libs/glibc-2.22-r4/work/glibc-2.22/elf/dl-init.c:120
      #4 0x7ffbf3ba1cb9  (/lib64/ld-linux-x86-64.so.2+0xcb9)

  ==31698==HINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_odr_violation=0
  SUMMARY: AddressSanitizer: odr-violation: global 'sr__value__descriptor' at src/common/sysrepo.pb-c.c:3772:34
  ==31698==ABORTING","As it complicates things and does not bring any additional value, I think that the best option would be to create only one sysrepo library that would include all object files.

Done in 111a088 ; you might need to nuke the build dir and destdir for this, though. ninja clean was not enough for me.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,390,2016-10-07T07:17:01Z,2016-10-07T10:22:34Z,2016-10-07T10:22:34Z,MERGED,True,9,1,2,https://github.com/lukasmacko,Fix SA,1,[],https://github.com/sysrepo/sysrepo/pull/390,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/390,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,390,2016-10-07T07:17:01Z,2016-10-07T10:22:34Z,2016-10-07T10:22:34Z,MERGED,True,9,1,2,https://github.com/lukasmacko,Fix SA,1,[],https://github.com/sysrepo/sysrepo/pull/390,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/390#issuecomment-252176927,,"Current coverage is 85.01% (diff: 33.33%)

Merging #390 into master will decrease coverage by 0.02%

@@             master       #390   diff @@
==========================================
  Files            29         29          
  Lines         18338      18341     +3   
  Methods         771        771          
  Messages          0          0          
  Branches       3141       3143     +2   
==========================================
- Hits          15593      15591     -2   
- Misses         2745       2750     +5   
  Partials          0          0          

Powered by Codecov. Last update 1307ee2...12b4806",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,392,2016-10-07T11:20:06Z,2016-10-07T12:02:23Z,2016-10-07T12:02:23Z,MERGED,True,65,22,4,https://github.com/rastislavs,documentation & examples updates,4,[],https://github.com/sysrepo/sysrepo/pull/392,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/392,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,392,2016-10-07T11:20:06Z,2016-10-07T12:02:23Z,2016-10-07T12:02:23Z,MERGED,True,65,22,4,https://github.com/rastislavs,documentation & examples updates,4,[],https://github.com/sysrepo/sysrepo/pull/392,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/392#issuecomment-252226002,,"Current coverage is 84.88% (diff: 100%)

Merging #392 into master will increase coverage by 0.03%

@@             master       #392   diff @@
==========================================
  Files            29         29          
  Lines         18345      18344     -1   
  Methods         771        771          
  Messages          0          0          
  Branches       3143       3143          
==========================================
+ Hits          15565      15570     +5   
+ Misses         2780       2774     -6   
  Partials          0          0          

Powered by Codecov. Last update 626bd4e...b0de323",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,394,2016-10-07T15:34:44Z,2016-10-07T17:25:45Z,2016-10-07T17:25:45Z,MERGED,True,4,1,3,https://github.com/mislavn,cpp: fix Coverity issues,1,[],https://github.com/sysrepo/sysrepo/pull/394,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/394,"Hi Rastislav,
here is the pull request for the issues in the Coverity scan for C++.
One more thing, you can delete the branch devel-cpp it is not in use any more.
Regards,
Mislav","Hi Rastislav,
here is the pull request for the issues in the Coverity scan for C++.
One more thing, you can delete the branch devel-cpp it is not in use any more.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,394,2016-10-07T15:34:44Z,2016-10-07T17:25:45Z,2016-10-07T17:25:45Z,MERGED,True,4,1,3,https://github.com/mislavn,cpp: fix Coverity issues,1,[],https://github.com/sysrepo/sysrepo/pull/394,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/394#issuecomment-252302705,"Hi Rastislav,
here is the pull request for the issues in the Coverity scan for C++.
One more thing, you can delete the branch devel-cpp it is not in use any more.
Regards,
Mislav","Current coverage is 84.89% (diff: 100%)

Merging #394 into coverity will decrease coverage by 0.02%

@@           coverity       #394   diff @@
==========================================
  Files            29         29          
  Lines         18346      18341     -5   
  Methods         771        771          
  Messages          0          0          
  Branches       3143       3143          
==========================================
- Hits          15577      15570     -7   
- Misses         2769       2771     +2   
  Partials          0          0          

Powered by Codecov. Last update 55ec186...b670d35",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,397,2016-10-10T07:46:19Z,2016-10-10T07:55:16Z,2016-10-10T07:55:16Z,MERGED,True,52,5,6,https://github.com/rastislavs,"add Dockerfile, reorganize deployment scripts",7,[],https://github.com/sysrepo/sysrepo/pull/397,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/397,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,397,2016-10-10T07:46:19Z,2016-10-10T07:55:16Z,2016-10-10T07:55:16Z,MERGED,True,52,5,6,https://github.com/rastislavs,"add Dockerfile, reorganize deployment scripts",7,[],https://github.com/sysrepo/sysrepo/pull/397,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/397#issuecomment-252554432,,"Current coverage is 84.90% (diff: 100%)

Merging #397 into master will decrease coverage by 0.02%

@@             master       #397   diff @@
==========================================
  Files            29         29          
  Lines         18349      18341     -8   
  Methods         771        771          
  Messages          0          0          
  Branches       3143       3143          
==========================================
- Hits          15582      15572    -10   
- Misses         2767       2769     +2   
  Partials          0          0          

Powered by Codecov. Last update 1c76dfc...9982a6f",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,398,2016-10-10T09:14:05Z,2016-10-10T10:27:45Z,2016-10-10T10:27:45Z,MERGED,True,5,5,1,https://github.com/rastislavs,fixed #396 - documentation bug,2,[],https://github.com/sysrepo/sysrepo/pull/398,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/398,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,398,2016-10-10T09:14:05Z,2016-10-10T10:27:45Z,2016-10-10T10:27:45Z,MERGED,True,5,5,1,https://github.com/rastislavs,fixed #396 - documentation bug,2,[],https://github.com/sysrepo/sysrepo/pull/398,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/398#issuecomment-252570173,,"Current coverage is 84.93% (diff: 100%)

Merging #398 into master will increase coverage by 0.01%

@@             master       #398   diff @@
==========================================
  Files            29         29          
  Lines         18342      18340     -2   
  Methods         771        771          
  Messages          0          0          
  Branches       3143       3143          
==========================================
+ Hits          15575      15576     +1   
+ Misses         2767       2764     -3   
  Partials          0          0          

Powered by Codecov. Last update 4854d02...de72bfb",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,399,2016-10-10T11:39:58Z,2016-10-10T12:38:34Z,2016-11-15T18:07:17Z,MERGED,True,11,4,2,https://github.com/mislavn,Python fix,2,[],https://github.com/sysrepo/sysrepo/pull/399,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/399,"Hi Rastislav,
I fixed the problem with python3 in the cmake files, the problem was that python2 was included in the tests without the check of GEN_PYTHON_VERSION.
Also I had to add a custom command for finding PYTHON_MODULE_PATH for python3.
Regards,
Mislav","Hi Rastislav,
I fixed the problem with python3 in the cmake files, the problem was that python2 was included in the tests without the check of GEN_PYTHON_VERSION.
Also I had to add a custom command for finding PYTHON_MODULE_PATH for python3.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,399,2016-10-10T11:39:58Z,2016-10-10T12:38:34Z,2016-11-15T18:07:17Z,MERGED,True,11,4,2,https://github.com/mislavn,Python fix,2,[],https://github.com/sysrepo/sysrepo/pull/399,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/399#issuecomment-252596450,"Hi Rastislav,
I fixed the problem with python3 in the cmake files, the problem was that python2 was included in the tests without the check of GEN_PYTHON_VERSION.
Also I had to add a custom command for finding PYTHON_MODULE_PATH for python3.
Regards,
Mislav","Current coverage is 85.01% (diff: 100%)

Merging #399 into devel will increase coverage by 0.13%

@@              devel       #399   diff @@
==========================================
  Files            29         29          
  Lines         18344      18343     -1   
  Methods         771        771          
  Messages          0          0          
  Branches       3143       3143          
==========================================
+ Hits          15570      15593    +23   
+ Misses         2774       2750    -24   
  Partials          0          0          

Powered by Codecov. Last update a1844a9...2a89827",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,400,2016-10-10T15:48:24Z,2016-10-11T07:01:22Z,2016-10-11T07:01:22Z,MERGED,True,26,137,4,https://github.com/lukasmacko,Use lys_find_xpath for xpath validaton,2,[],https://github.com/sysrepo/sysrepo/pull/400,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/400,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,400,2016-10-10T15:48:24Z,2016-10-11T07:01:22Z,2016-10-11T07:01:22Z,MERGED,True,26,137,4,https://github.com/lukasmacko,Use lys_find_xpath for xpath validaton,2,[],https://github.com/sysrepo/sysrepo/pull/400,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/400#issuecomment-252664808,,"Current coverage is 84.87% (diff: 93.33%)

Merging #400 into master will decrease coverage by 0.06%

@@             master       #400   diff @@
==========================================
  Files            29         29          
  Lines         18343      18287    -56   
  Methods         771        769     -2   
  Messages          0          0          
  Branches       3143       3135     -8   
==========================================
- Hits          15579      15521    -58   
- Misses         2764       2766     +2   
  Partials          0          0          

Powered by Codecov. Last update b5bd8ac...fc1c0f4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,403,2016-10-11T09:11:44Z,2016-10-11T11:25:35Z,2016-10-11T11:25:35Z,MERGED,True,595,45,14,https://github.com/lukasmacko,SR_EV_ENABLED notifications,7,[],https://github.com/sysrepo/sysrepo/pull/403,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/403,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,403,2016-10-11T09:11:44Z,2016-10-11T11:25:35Z,2016-10-11T11:25:35Z,MERGED,True,595,45,14,https://github.com/lukasmacko,SR_EV_ENABLED notifications,7,[],https://github.com/sysrepo/sysrepo/pull/403,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/403#issuecomment-252857212,,"Current coverage is 84.90% (diff: 82.91%)

Merging #403 into master will increase coverage by 0.03%

@@             master       #403   diff @@
==========================================
  Files            29         29          
  Lines         18284      18422   +138   
  Methods         769        774     +5   
  Messages          0          0          
  Branches       3135       3150    +15   
==========================================
+ Hits          15519      15641   +122   
- Misses         2765       2781    +16   
  Partials          0          0          

Powered by Codecov. Last update 03ef56b...b74b88d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,405,2016-10-11T13:06:24Z,2016-10-11T13:21:22Z,2016-10-12T07:24:19Z,MERGED,True,4,1,1,https://github.com/lukasmacko,Continue in request processing even if state data retrieval fails,1,[],https://github.com/sysrepo/sysrepo/pull/405,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/405,fix #395,fix #395,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,405,2016-10-11T13:06:24Z,2016-10-11T13:21:22Z,2016-10-12T07:24:19Z,MERGED,True,4,1,1,https://github.com/lukasmacko,Continue in request processing even if state data retrieval fails,1,[],https://github.com/sysrepo/sysrepo/pull/405,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/405#issuecomment-252912584,fix #395,"Current coverage is 84.92% (diff: 33.33%)

Merging #405 into master will increase coverage by 0.04%

@@             master       #405   diff @@
==========================================
  Files            29         29          
  Lines         18284      18286     +2   
  Methods         769        769          
  Messages          0          0          
  Branches       3135       3136     +1   
==========================================
+ Hits          15519      15528     +9   
+ Misses         2765       2758     -7   
  Partials          0          0          

Powered by Codecov. Last update 03ef56b...6dd5df6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,405,2016-10-11T13:06:24Z,2016-10-11T13:21:22Z,2016-10-12T07:24:19Z,MERGED,True,4,1,1,https://github.com/lukasmacko,Continue in request processing even if state data retrieval fails,1,[],https://github.com/sysrepo/sysrepo/pull/405,https://github.com/fanchanghu,3,https://github.com/sysrepo/sysrepo/pull/405#issuecomment-253103517,fix #395,"Hi,
I do't think it's a good idea to ignore error of rp_dt_xpath_requests_state_data, this may ignore some real error. How about making rp_dt_xpath_requests_state_data return SR_ERR_OK and rp_session->state_data_ctx.subtrees->count = 0 when result is empty and xpath is syntactically ok?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,405,2016-10-11T13:06:24Z,2016-10-11T13:21:22Z,2016-10-12T07:24:19Z,MERGED,True,4,1,1,https://github.com/lukasmacko,Continue in request processing even if state data retrieval fails,1,[],https://github.com/sysrepo/sysrepo/pull/405,https://github.com/lukasmacko,4,https://github.com/sysrepo/sysrepo/pull/405#issuecomment-253138772,fix #395,yes you're right it can be done better see #411,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,406,2016-10-11T13:42:11Z,2016-10-11T13:52:34Z,2016-10-11T13:52:34Z,MERGED,True,4,1,3,https://github.com/mislavn,cpp: fix Coverity issues,1,[],https://github.com/sysrepo/sysrepo/pull/406,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/406,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,406,2016-10-11T13:42:11Z,2016-10-11T13:52:34Z,2016-10-11T13:52:34Z,MERGED,True,4,1,3,https://github.com/mislavn,cpp: fix Coverity issues,1,[],https://github.com/sysrepo/sysrepo/pull/406,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/406#issuecomment-252921956,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Current coverage is 84.86% (diff: 100%)

Merging #406 into master will decrease coverage by 0.07%

@@             master       #406   diff @@
==========================================
  Files            29         29          
  Lines         18289      18292     +3   
  Methods         769        769          
  Messages          0          0          
  Branches       3136       3136          
==========================================
- Hits          15532      15522    -10   
- Misses         2757       2770    +13   
  Partials          0          0          

Powered by Codecov. Last update 99cfba9...3458715",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,407,2016-10-11T14:03:46Z,2016-10-11T14:16:31Z,2016-10-11T14:16:31Z,MERGED,True,0,1,1,https://github.com/lukasmacko,Fix memleak,1,[],https://github.com/sysrepo/sysrepo/pull/407,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/407,fix SA,fix SA,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,407,2016-10-11T14:03:46Z,2016-10-11T14:16:31Z,2016-10-11T14:16:31Z,MERGED,True,0,1,1,https://github.com/lukasmacko,Fix memleak,1,[],https://github.com/sysrepo/sysrepo/pull/407,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/407#issuecomment-252928057,fix SA,"Current coverage is 84.88% (diff: 100%)

Merging #407 into devel will increase coverage by 0.07%

@@              devel       #407   diff @@
==========================================
  Files            29         29          
  Lines         18425      18424     -1   
  Methods         774        774          
  Messages          0          0          
  Branches       3151       3151          
==========================================
+ Hits          15627      15639    +12   
+ Misses         2798       2785    -13   
  Partials          0          0          

Powered by Codecov. Last update 2da6320...317c5b8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,408,2016-10-11T15:06:18Z,2016-10-12T06:09:04Z,2016-10-12T06:09:04Z,MERGED,True,256,64,6,https://github.com/rastislavs,Plugin healthcheck feature,5,[],https://github.com/sysrepo/sysrepo/pull/408,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/408,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,408,2016-10-11T15:06:18Z,2016-10-12T06:09:04Z,2016-10-12T06:09:04Z,MERGED,True,256,64,6,https://github.com/rastislavs,Plugin healthcheck feature,5,[],https://github.com/sysrepo/sysrepo/pull/408,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/408#issuecomment-252949480,,"Current coverage is 84.79% (diff: 62.50%)

Merging #408 into devel will decrease coverage by 0.10%

@@              devel       #408   diff @@
==========================================
  Files            29         29          
  Lines         18418      18479    +61   
  Methods         774        778     +4   
  Messages          0          0          
  Branches       3151       3164    +13   
==========================================
+ Hits          15636      15669    +33   
- Misses         2782       2810    +28   
  Partials          0          0          

Powered by Codecov. Last update e618d7a...6c1daa6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,409,2016-10-11T15:17:03Z,2016-10-12T06:09:38Z,2016-10-12T06:09:38Z,MERGED,True,1,1,1,https://github.com/rastislavs,version bump to 0.4.2,1,[],https://github.com/sysrepo/sysrepo/pull/409,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/409,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,409,2016-10-11T15:17:03Z,2016-10-12T06:09:38Z,2016-10-12T06:09:38Z,MERGED,True,1,1,1,https://github.com/rastislavs,version bump to 0.4.2,1,[],https://github.com/sysrepo/sysrepo/pull/409,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/409#issuecomment-252956297,,"Current coverage is 84.93% (diff: 100%)

Merging #409 into master will increase coverage by 0.09%

@@             master       #409   diff @@
==========================================
  Files            29         29          
  Lines         18290      18291     +1   
  Methods         769        769          
  Messages          0          0          
  Branches       3136       3136          
==========================================
+ Hits          15517      15535    +18   
+ Misses         2773       2756    -17   
  Partials          0          0          

Powered by Codecov. Last update 59bcda4...aa16c63",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,410,2016-10-11T18:44:53Z,2016-10-12T09:08:37Z,2016-11-15T18:04:09Z,MERGED,True,319,307,27,https://github.com/mislavn,Swig refactor,8,[],https://github.com/sysrepo/sysrepo/pull/410,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/410,"Hi Rastislav,
In this pull request I refactored the swig files, remove Throw_Exceptions class and add install taregt for lua.
Regards,
Mislav","Hi Rastislav,
In this pull request I refactored the swig files, remove Throw_Exceptions class and add install taregt for lua.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,410,2016-10-11T18:44:53Z,2016-10-12T09:08:37Z,2016-11-15T18:04:09Z,MERGED,True,319,307,27,https://github.com/mislavn,Swig refactor,8,[],https://github.com/sysrepo/sysrepo/pull/410,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/410#issuecomment-253029752,"Hi Rastislav,
In this pull request I refactored the swig files, remove Throw_Exceptions class and add install taregt for lua.
Regards,
Mislav","Current coverage is 84.78% (diff: 100%)

Merging #410 into devel will decrease coverage by 0.12%

@@              devel       #410   diff @@
==========================================
  Files            29         29          
  Lines         18418      18479    +61   
  Methods         774        778     +4   
  Messages          0          0          
  Branches       3151       3164    +13   
==========================================
+ Hits          15636      15666    +30   
- Misses         2782       2813    +31   
  Partials          0          0          

Powered by Codecov. Last update e618d7a...e4675e1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,411,2016-10-12T07:23:21Z,2016-10-12T08:33:07Z,2016-10-12T08:33:07Z,MERGED,True,55,5,2,https://github.com/lukasmacko,Do no ignore errors in rp_dt_xpath_requests_state_data + test,2,[],https://github.com/sysrepo/sysrepo/pull/411,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/411,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,411,2016-10-12T07:23:21Z,2016-10-12T08:33:07Z,2016-10-12T08:33:07Z,MERGED,True,55,5,2,https://github.com/lukasmacko,Do no ignore errors in rp_dt_xpath_requests_state_data + test,2,[],https://github.com/sysrepo/sysrepo/pull/411,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/411#issuecomment-253139696,,"Current coverage is 84.89% (diff: 100%)

Merging #411 into master will increase coverage by 0.05%

@@             master       #411   diff @@
==========================================
  Files            29         29          
  Lines         18290      18291     +1   
  Methods         769        769          
  Messages          0          0          
  Branches       3136       3136          
==========================================
+ Hits          15518      15528    +10   
+ Misses         2772       2763     -9   
  Partials          0          0          

Powered by Codecov. Last update fdb7add...618c6e4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/412,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253184475,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.",I will check why swig breaks it this pull request.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253207627,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","@jktjkt swig doesn't have out-of-the-box support for std::function so i would need to add custom code for all of the target languages.
An easier solution would be to add a virtual functions and custom wrapper code for Python and Lua, just like in the Callback class.
@jktjkt  will this be a problem for you?
If you want the C++ bindings could keep the std::function but Java, Python and Lua will use the virtual functions.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253211022,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","I will check why swig breaks it this pull request.

Sorry for confusion -- this patch series does not break stuff; one needs to nuke the build dir so that the build system regenerates the relevant SWIG intermediate files.

swig doesn't have out-of-the-box support for std::function

Yes :(. I prefer to have C++ bindings using native C++ idioms; if you would like to, I can provide an extra wrapper using virtual methods on top of that for use by SWIG's target languages.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/jktjkt,5,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253211456,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.",I see that Travis builds fail; I'm using SWIG Version 3.0.5 locally.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/mislavn,6,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253212210,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","Yes :(. I prefer to have C++ bindings using native C++ idioms; if you would like to, I can provide an extra wrapper using virtual methods on top of that for use by SWIG's target languages.

That would be great.

I see that Travis builds fail; I'm using SWIG Version 3.0.5 locally.

OK, I will check this.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/mislavn,7,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253213309,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","@rastislavszabo can you change the swig version on the build server.
I will check now what is the minimum swig version required for successful build of the language bindings and add a patch to the cmake file.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/mislavn,8,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253286247,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","@jktjkt I can not build this locally without ignoring some methods in the Logs class.
Did you locally built swig bindings for python or lua, it breaks only on them.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/rastislavs,9,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253437088,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","@mislavn

can you change the swig version on the build server

If it's really needed, you can change it here:
https://github.com/sysrepo/sysrepo/blob/master/deploy/travis/install-libs.sh
and here:
https://github.com/sysrepo/sysrepo/blob/master/deploy/travis/install-libs-osx.sh",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/jktjkt,10,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253490339,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","I can not build this locally without ignoring some methods in the Logs class.

Clean build fails for me, too, so I made these methods only available when doing C++ stuff. Sorry for noise.
Is this OK-ish for you? An alternative is to simply kill this feature for now; the other commits are IMHO still valuable. And yes, I'm OK with adding a virtual-method-based interface, but I'd prefer to wait until I finish legal paperwork locally (which means that I cannot give any ETA).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/mislavn,11,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253498916,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","Is this OK-ish for you? An alternative is to simply kill this feature for now; the other commits are IMHO still valuable. And yes, I'm OK with adding a virtual-method-based interface, but I'd prefer to wait until I finish legal paperwork locally (which means that I cannot give any ETA).

I can add a small patch to swig to ignore some methods from the Logs class, it will compile then.
I will send you the patch once I am finished with the issue:
#379",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/mislavn,12,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-253532676,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","@jktjkt  can you add the line:
%ignore Logs;
in the file swig/swig_base/cpp_classes.i anywhere after the 30-th line.
Then it should compile. When you are finished with the class and add the virtual functions I will make it compile with swig.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/rastislavs,13,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-256562320,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","@mislavn , @jktjkt What about this pull request? It hasn't been touched for 2 weeks and its build is still failing in Travis. How can we merge it / should we close it?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,412,2016-10-12T10:30:34Z,2016-11-28T11:29:03Z,2016-11-28T11:29:21Z,CLOSED,False,38,14,5,https://github.com/jktjkt,Refactoring of C++'s logging with one SR change,4,[],https://github.com/sysrepo/sysrepo/pull/412,https://github.com/rastislavs,14,https://github.com/sysrepo/sysrepo/pull/412#issuecomment-263248274,"This series:

switches the C++ code to static methods (please read the commit messages),
adds logging callbacks for C++,
changes core SR to not skip expensive computation when a custom CB is active (see the last commit).

I have no idea whether you want the last commit or not; please feel free to remove that one.
Ccing @mislavn for the C++ part.","Guys, it seems that this pull request cannot be merged and no one knows how to fix it / wants to fix it. Please open a new one (or ones) if you need any changes in this PR.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,413,2016-10-12T12:49:06Z,2016-10-12T13:28:08Z,2016-11-15T18:10:41Z,MERGED,True,1,1,1,https://github.com/antonio-paunovic,cpp: fix default type parameter for Val constructor,1,[],https://github.com/sysrepo/sysrepo/pull/413,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/413,Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr,Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,413,2016-10-12T12:49:06Z,2016-10-12T13:28:08Z,2016-11-15T18:10:41Z,MERGED,True,1,1,1,https://github.com/antonio-paunovic,cpp: fix default type parameter for Val constructor,1,[],https://github.com/sysrepo/sysrepo/pull/413,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/413#issuecomment-253205642,Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr,"Current coverage is 84.80% (diff: 100%)

Merging #413 into devel will increase coverage by 0.06%

@@              devel       #413   diff @@
==========================================
  Files            29         29          
  Lines         18481      18479     -2   
  Methods         778        778          
  Messages          0          0          
  Branches       3164       3164          
==========================================
+ Hits          15661      15670     +9   
+ Misses         2820       2809    -11   
  Partials          0          0          

Powered by Codecov. Last update 158dbe2...1224de5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,414,2016-10-12T16:07:44Z,2016-10-13T14:46:07Z,2016-11-15T18:01:56Z,MERGED,True,83,53,7,https://github.com/mislavn,Double,2,[],https://github.com/sysrepo/sysrepo/pull/414,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/414,"Hi Rastislav,
in this pull request I fixed a problem with setting double values from lua and python.","Hi Rastislav,
in this pull request I fixed a problem with setting double values from lua and python.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,414,2016-10-12T16:07:44Z,2016-10-13T14:46:07Z,2016-11-15T18:01:56Z,MERGED,True,83,53,7,https://github.com/mislavn,Double,2,[],https://github.com/sysrepo/sysrepo/pull/414,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/414#issuecomment-253265675,"Hi Rastislav,
in this pull request I fixed a problem with setting double values from lua and python.","Current coverage is 84.78% (diff: 100%)

Merging #414 into devel will decrease coverage by 0.01%

@@              devel       #414   diff @@
==========================================
  Files            29         29          
  Lines         18477      18480     +3   
  Methods         778        778          
  Messages          0          0          
  Branches       3164       3164          
==========================================
+ Hits          15666      15667     +1   
- Misses         2811       2813     +2   
  Partials          0          0          

Powered by Codecov. Last update 98fb9b1...a0172a0",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,415,2016-10-12T17:07:18Z,2016-10-13T14:43:56Z,2016-10-14T09:58:57Z,MERGED,True,3,0,1,https://github.com/jktjkt,C++: Add a pretty-printer for decimal64 data type,1,[],https://github.com/sysrepo/sysrepo/pull/415,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/415,Cc: @mislavn,Cc: @mislavn,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,415,2016-10-12T17:07:18Z,2016-10-13T14:43:56Z,2016-10-14T09:58:57Z,MERGED,True,3,0,1,https://github.com/jktjkt,C++: Add a pretty-printer for decimal64 data type,1,[],https://github.com/sysrepo/sysrepo/pull/415,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/415#issuecomment-253285459,Cc: @mislavn,"Current coverage is 84.77% (diff: 100%)

Merging #415 into devel will decrease coverage by 0.02%

@@              devel       #415   diff @@
==========================================
  Files            29         29          
  Lines         18477      18480     +3   
  Methods         778        778          
  Messages          0          0          
  Branches       3164       3164          
==========================================
- Hits          15666      15665     -1   
- Misses         2811       2815     +4   
  Partials          0          0          

Powered by Codecov. Last update 98fb9b1...738afe6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,416,2016-10-13T12:13:19Z,2016-10-13T12:13:53Z,2016-11-15T18:03:34Z,CLOSED,False,1701,435,52,https://github.com/mislavn,Rpc crash,38,[],https://github.com/sysrepo/sysrepo/pull/416,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/416,"This pull request is connected to the issue:
#379","This pull request is connected to the issue:
#379",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,417,2016-10-13T12:14:30Z,2016-10-13T13:56:44Z,2016-11-15T18:03:34Z,CLOSED,False,6,6,1,https://github.com/mislavn,cpp: fix program crash with USE_SR_MEM_MGMT turned OFF,1,[],https://github.com/sysrepo/sysrepo/pull/417,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/417,"This pull request is connected to the issue:
#379","This pull request is connected to the issue:
#379",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,417,2016-10-13T12:14:30Z,2016-10-13T13:56:44Z,2016-11-15T18:03:34Z,CLOSED,False,6,6,1,https://github.com/mislavn,cpp: fix program crash with USE_SR_MEM_MGMT turned OFF,1,[],https://github.com/sysrepo/sysrepo/pull/417,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/417#issuecomment-253502293,"This pull request is connected to the issue:
#379","Current coverage is 84.95% (diff: 100%)

Merging #417 into devel will increase coverage by 0.16%

@@              devel       #417   diff @@
==========================================
  Files            29         29          
  Lines         18477      18659   +182   
  Methods         778        790    +12   
  Messages          0          0          
  Branches       3164       3233    +69   
==========================================
+ Hits          15666      15850   +184   
+ Misses         2811       2809     -2   
  Partials          0          0          

Powered by Codecov. Last update 98fb9b1...0ceb6a2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,417,2016-10-13T12:14:30Z,2016-10-13T13:56:44Z,2016-11-15T18:03:34Z,CLOSED,False,6,6,1,https://github.com/mislavn,cpp: fix program crash with USE_SR_MEM_MGMT turned OFF,1,[],https://github.com/sysrepo/sysrepo/pull/417,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/417#issuecomment-253520350,"This pull request is connected to the issue:
#379","A new pull request replaces this one:
#418",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,418,2016-10-13T13:55:10Z,2016-10-13T19:26:14Z,2016-11-15T18:03:39Z,MERGED,True,28,43,2,https://github.com/mislavn,Rpc fix,2,[],https://github.com/sysrepo/sysrepo/pull/418,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/418,"This pull request should fix the issue;
#379","This pull request should fix the issue;
#379",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,418,2016-10-13T13:55:10Z,2016-10-13T19:26:14Z,2016-11-15T18:03:39Z,MERGED,True,28,43,2,https://github.com/mislavn,Rpc fix,2,[],https://github.com/sysrepo/sysrepo/pull/418,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/418#issuecomment-253579142,"This pull request should fix the issue;
#379","Current coverage is 84.79% (diff: 100%)

Merging #418 into devel will not change coverage

@@              devel       #418   diff @@
==========================================
  Files            29         29          
  Lines         18477      18477          
  Methods         778        778          
  Messages          0          0          
  Branches       3164       3164          
==========================================
  Hits          15666      15666          
  Misses         2811       2811          
  Partials          0          0          

Powered by Codecov. Last update 98fb9b1...63f899c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,423,2016-10-14T13:02:01Z,2016-10-14T15:21:35Z,2016-10-14T15:21:35Z,CLOSED,False,2887,309,31,https://github.com/milanlenco,Yang 1.1 actions; nested event notifications; lyd_merge; bug fixes; printer for sysrepo trees,19,[],https://github.com/sysrepo/sysrepo/pull/423,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/423,"There is more than enough in this one pull request.
Originally it was supposed to be only about actions and nested event notifications, but then many bugs related to validation of rpc/action/notifications, cross module dependencies, sysrepoctl and operational data have emerged. Many bugs were found also in libyang (thank you lyd_merge) and I have waited for them to get fixed so that all new and old unit tests would pass.
I think this should go to master, since we wanted all yang 1.1 features to have supported in the latest release, plus the bug fixes certainly should be included in master.
The only extra feature I have added are pretty (I hope) printers for sysrepo trees (see sysrepo/trees.h). They will be needed in the upcoming new examples featuring sysrepo trees (will they go to master as well?) and are handy also for debugging purposes.","There is more than enough in this one pull request.
Originally it was supposed to be only about actions and nested event notifications, but then many bugs related to validation of rpc/action/notifications, cross module dependencies, sysrepoctl and operational data have emerged. Many bugs were found also in libyang (thank you lyd_merge) and I have waited for them to get fixed so that all new and old unit tests would pass.
I think this should go to master, since we wanted all yang 1.1 features to have supported in the latest release, plus the bug fixes certainly should be included in master.
The only extra feature I have added are pretty (I hope) printers for sysrepo trees (see sysrepo/trees.h). They will be needed in the upcoming new examples featuring sysrepo trees (will they go to master as well?) and are handy also for debugging purposes.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,423,2016-10-14T13:02:01Z,2016-10-14T15:21:35Z,2016-10-14T15:21:35Z,CLOSED,False,2887,309,31,https://github.com/milanlenco,Yang 1.1 actions; nested event notifications; lyd_merge; bug fixes; printer for sysrepo trees,19,[],https://github.com/sysrepo/sysrepo/pull/423,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/423#issuecomment-253819030,"There is more than enough in this one pull request.
Originally it was supposed to be only about actions and nested event notifications, but then many bugs related to validation of rpc/action/notifications, cross module dependencies, sysrepoctl and operational data have emerged. Many bugs were found also in libyang (thank you lyd_merge) and I have waited for them to get fixed so that all new and old unit tests would pass.
I think this should go to master, since we wanted all yang 1.1 features to have supported in the latest release, plus the bug fixes certainly should be included in master.
The only extra feature I have added are pretty (I hope) printers for sysrepo trees (see sysrepo/trees.h). They will be needed in the upcoming new examples featuring sysrepo trees (will they go to master as well?) and are handy also for debugging purposes.","Current coverage is 85.14% (diff: 87.84%)

Merging #423 into devel will increase coverage by 0.39%

@@              devel       #423   diff @@
==========================================
  Files            29         29          
  Lines         18474      18787   +313   
  Methods         778        794    +16   
  Messages          0          0          
  Branches       3164       3210    +46   
==========================================
+ Hits          15656      15995   +339   
+ Misses         2818       2792    -26   
  Partials          0          0          

Powered by Codecov. Last update d904161...9374f85",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,423,2016-10-14T13:02:01Z,2016-10-14T15:21:35Z,2016-10-14T15:21:35Z,CLOSED,False,2887,309,31,https://github.com/milanlenco,Yang 1.1 actions; nested event notifications; lyd_merge; bug fixes; printer for sysrepo trees,19,[],https://github.com/sysrepo/sysrepo/pull/423,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/423#issuecomment-253832630,"There is more than enough in this one pull request.
Originally it was supposed to be only about actions and nested event notifications, but then many bugs related to validation of rpc/action/notifications, cross module dependencies, sysrepoctl and operational data have emerged. Many bugs were found also in libyang (thank you lyd_merge) and I have waited for them to get fixed so that all new and old unit tests would pass.
I think this should go to master, since we wanted all yang 1.1 features to have supported in the latest release, plus the bug fixes certainly should be included in master.
The only extra feature I have added are pretty (I hope) printers for sysrepo trees (see sysrepo/trees.h). They will be needed in the upcoming new examples featuring sysrepo trees (will they go to master as well?) and are handy also for debugging purposes.",will be merged into master,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,424,2016-10-14T13:51:53Z,2016-10-17T08:03:03Z,2016-10-17T08:03:03Z,MERGED,True,2888,310,32,https://github.com/milanlenco,Missing yang 1.1 features + bugfixes,17,[],https://github.com/sysrepo/sysrepo/pull/424,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/424,"This is the same pull request as #423, but directed to the master branch.","This is the same pull request as #423, but directed to the master branch.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,424,2016-10-14T13:51:53Z,2016-10-17T08:03:03Z,2016-10-17T08:03:03Z,MERGED,True,2888,310,32,https://github.com/milanlenco,Missing yang 1.1 features + bugfixes,17,[],https://github.com/sysrepo/sysrepo/pull/424,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/424#issuecomment-253835807,"This is the same pull request as #423, but directed to the master branch.","Current coverage is 85.31% (diff: 87.84%)

Merging #424 into master will increase coverage by 0.32%

@@             master       #424   diff @@
==========================================
  Files            29         29          
  Lines         18289      18606   +317   
  Methods         769        785    +16   
  Messages          0          0          
  Branches       3136       3182    +46   
==========================================
+ Hits          15544      15873   +329   
+ Misses         2745       2733    -12   
  Partials          0          0          

Powered by Codecov. Last update 2d85030...fe0f78d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,425,2016-10-14T14:20:12Z,2016-10-14T14:22:32Z,2016-10-14T14:22:42Z,CLOSED,False,116,117,8,https://github.com/mislavn,Set type,5,[],https://github.com/sysrepo/sysrepo/pull/425,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/425,"Based on the input from @jktjkt  I removed the class method set_type and moved that logic to the functions and constructors which handle strings in values and trees.
Now you cane set empty leafs with:
Val value = new Val(NULL, SR_LEAF_EMPTY_T)
or in Python
value = sr.Val(None, SR_LEAF_EMPTY_T)","Based on the input from @jktjkt  I removed the class method set_type and moved that logic to the functions and constructors which handle strings in values and trees.
Now you cane set empty leafs with:
Val value = new Val(NULL, SR_LEAF_EMPTY_T)
or in Python
value = sr.Val(None, SR_LEAF_EMPTY_T)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,426,2016-10-14T14:27:59Z,2016-10-14T18:09:52Z,2016-11-15T18:03:48Z,MERGED,True,6,26,4,https://github.com/mislavn,cpp: remove set_type class method,1,[],https://github.com/sysrepo/sysrepo/pull/426,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/426,"Based on the input from @jktjkt I removed the class method set_type and moved that logic to the functions and constructors which handle strings in values and trees.
Now you cane set empty leafs with:
Val value = new Val(NULL, SR_LEAF_EMPTY_T)
or in Python
value = sr.Val(None, SR_LEAF_EMPTY_T)","Based on the input from @jktjkt I removed the class method set_type and moved that logic to the functions and constructors which handle strings in values and trees.
Now you cane set empty leafs with:
Val value = new Val(NULL, SR_LEAF_EMPTY_T)
or in Python
value = sr.Val(None, SR_LEAF_EMPTY_T)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,426,2016-10-14T14:27:59Z,2016-10-14T18:09:52Z,2016-11-15T18:03:48Z,MERGED,True,6,26,4,https://github.com/mislavn,cpp: remove set_type class method,1,[],https://github.com/sysrepo/sysrepo/pull/426,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/426#issuecomment-253848297,"Based on the input from @jktjkt I removed the class method set_type and moved that logic to the functions and constructors which handle strings in values and trees.
Now you cane set empty leafs with:
Val value = new Val(NULL, SR_LEAF_EMPTY_T)
or in Python
value = sr.Val(None, SR_LEAF_EMPTY_T)","Current coverage is 84.82% (diff: 100%)

Merging #426 into devel will increase coverage by 0.08%

@@              devel       #426   diff @@
==========================================
  Files            29         29          
  Lines         18474      18475     +1   
  Methods         778        778          
  Messages          0          0          
  Branches       3164       3164          
==========================================
+ Hits          15656      15671    +15   
+ Misses         2818       2804    -14   
  Partials          0          0          

Powered by Codecov. Last update d904161...44c7702",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,429,2016-10-17T09:52:45Z,2016-10-17T12:48:57Z,2016-10-17T12:48:57Z,MERGED,True,85,6,5,https://github.com/milanlenco,Fix conversion of decimal64 when defined inside union -- Fix #421,2,[],https://github.com/sysrepo/sysrepo/pull/429,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/429,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,429,2016-10-17T09:52:45Z,2016-10-17T12:48:57Z,2016-10-17T12:48:57Z,MERGED,True,85,6,5,https://github.com/milanlenco,Fix conversion of decimal64 when defined inside union -- Fix #421,2,[],https://github.com/sysrepo/sysrepo/pull/429,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/429#issuecomment-254187110,,"Current coverage is 85.21% (diff: 76.92%)

Merging #429 into master will decrease coverage by 0.09%

@@             master       #429   diff @@
==========================================
  Files            29         29          
  Lines         18605      18626    +21   
  Methods         785        786     +1   
  Messages          0          0          
  Branches       3182       3191     +9   
==========================================
+ Hits          15869      15871     +2   
- Misses         2736       2755    +19   
  Partials          0          0          

Powered by Codecov. Last update 67dd9e2...62d3023",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,430,2016-10-17T11:48:24Z,2016-10-17T12:59:17Z,2016-11-15T18:02:26Z,MERGED,True,48,1,6,https://github.com/mislavn,Lua update,3,[],https://github.com/sysrepo/sysrepo/pull/430,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/430,I found a memory leak in Lua. It's fixed with this patch.,I found a memory leak in Lua. It's fixed with this patch.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,430,2016-10-17T11:48:24Z,2016-10-17T12:59:17Z,2016-11-15T18:02:26Z,MERGED,True,48,1,6,https://github.com/mislavn,Lua update,3,[],https://github.com/sysrepo/sysrepo/pull/430,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/430#issuecomment-254199889,I found a memory leak in Lua. It's fixed with this patch.,"Current coverage is 85.21% (diff: 100%)

Merging #430 into devel will increase coverage by 0.10%

@@              devel       #430   diff @@
==========================================
  Files            29         29          
  Lines         18797      18793     -4   
  Methods         794        794          
  Messages          0          0          
  Branches       3210       3210          
==========================================
+ Hits          15998      16013    +15   
+ Misses         2799       2780    -19   
  Partials          0          0          

Powered by Codecov. Last update f38db8b...a6ea669",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,433,2016-10-18T10:54:34Z,2016-10-18T11:10:41Z,2016-10-18T11:10:42Z,MERGED,True,8,6,4,https://github.com/milanlenco,Fix SA.,1,[],https://github.com/sysrepo/sysrepo/pull/433,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/433,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,433,2016-10-18T10:54:34Z,2016-10-18T11:10:41Z,2016-10-18T11:10:42Z,MERGED,True,8,6,4,https://github.com/milanlenco,Fix SA.,1,[],https://github.com/sysrepo/sysrepo/pull/433,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/433#issuecomment-254475160,,"Current coverage is 85.20% (diff: 100%)

Merging #433 into master will decrease coverage by 0.08%

@@             master       #433   diff @@
==========================================
  Files            29         29          
  Lines         18627      18626     -1   
  Methods         786        786          
  Messages          0          0          
  Branches       3191       3191          
==========================================
- Hits          15884      15869    -15   
- Misses         2743       2757    +14   
  Partials          0          0          

Powered by Codecov. Last update 10a8a21...338c63b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,435,2016-10-18T11:55:30Z,2016-10-18T12:29:04Z,2016-10-18T12:29:04Z,MERGED,True,1,13,3,https://github.com/milanlenco,Enable validation of action output,24,[],https://github.com/sysrepo/sysrepo/pull/435,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/435,"The latest version of libyang in devel now supports validation of Action output data tree. Some changes had to be made in the libyang API so it will not be merged until the next release. Therefore we will have to keep the sysrepo master as is, being aware that the validation of action output always returns positive result regardless of the content, and will fix it in the next release when this patch is merged.
Please note that the list of commits for this patch request is invalid due to previous cherry-picking. Diff is OK.","The latest version of libyang in devel now supports validation of Action output data tree. Some changes had to be made in the libyang API so it will not be merged until the next release. Therefore we will have to keep the sysrepo master as is, being aware that the validation of action output always returns positive result regardless of the content, and will fix it in the next release when this patch is merged.
Please note that the list of commits for this patch request is invalid due to previous cherry-picking. Diff is OK.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,435,2016-10-18T11:55:30Z,2016-10-18T12:29:04Z,2016-10-18T12:29:04Z,MERGED,True,1,13,3,https://github.com/milanlenco,Enable validation of action output,24,[],https://github.com/sysrepo/sysrepo/pull/435,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/435#issuecomment-254487082,"The latest version of libyang in devel now supports validation of Action output data tree. Some changes had to be made in the libyang API so it will not be merged until the next release. Therefore we will have to keep the sysrepo master as is, being aware that the validation of action output always returns positive result regardless of the content, and will fix it in the next release when this patch is merged.
Please note that the list of commits for this patch request is invalid due to previous cherry-picking. Diff is OK.","Current coverage is 85.09% (diff: 100%)

Merging #435 into devel will decrease coverage by 0.09%

@@              devel       #435   diff @@
==========================================
  Files            29         29          
  Lines         18813      18815     +2   
  Methods         795        795          
  Messages          0          0          
  Branches       3219       3218     -1   
==========================================
- Hits          16026      16010    -16   
- Misses         2787       2805    +18   
  Partials          0          0          

Powered by Codecov. Last update f5d94e8...5295db3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,436,2016-10-19T06:00:03Z,2016-10-19T06:24:15Z,2016-10-19T06:24:15Z,CLOSED,False,10,1,1,https://github.com/fanchanghu,fix crash when sr_module_change_subscribe failed in a special condition,3,[],https://github.com/sysrepo/sysrepo/pull/436,https://github.com/fanchanghu,1,https://github.com/sysrepo/sysrepo/pull/436,"Hi,
it will crash when sr_module_change_subscribe with SR_SUBSCR_CTX_REUSE failed in a special condition:
first, do a successful subscribe.
second, do a failed subscribe, then sr_subscription->sm_subscription_cnt becomes 0.
third, do another failed subscribe, then sr_subscription is freed. but the pointer of *subscription_p is not set to null. user's program will crash when he used the pointer later.
it looks like cl_subscription_init does not add new cl_sm_subscription_ctx_t but cl_sr_subscription_remove_one delete one.","Hi,
it will crash when sr_module_change_subscribe with SR_SUBSCR_CTX_REUSE failed in a special condition:
first, do a successful subscribe.
second, do a failed subscribe, then sr_subscription->sm_subscription_cnt becomes 0.
third, do another failed subscribe, then sr_subscription is freed. but the pointer of *subscription_p is not set to null. user's program will crash when he used the pointer later.
it looks like cl_subscription_init does not add new cl_sm_subscription_ctx_t but cl_sr_subscription_remove_one delete one.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,436,2016-10-19T06:00:03Z,2016-10-19T06:24:15Z,2016-10-19T06:24:15Z,CLOSED,False,10,1,1,https://github.com/fanchanghu,fix crash when sr_module_change_subscribe failed in a special condition,3,[],https://github.com/sysrepo/sysrepo/pull/436,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/436#issuecomment-254719395,"Hi,
it will crash when sr_module_change_subscribe with SR_SUBSCR_CTX_REUSE failed in a special condition:
first, do a successful subscribe.
second, do a failed subscribe, then sr_subscription->sm_subscription_cnt becomes 0.
third, do another failed subscribe, then sr_subscription is freed. but the pointer of *subscription_p is not set to null. user's program will crash when he used the pointer later.
it looks like cl_subscription_init does not add new cl_sm_subscription_ctx_t but cl_sr_subscription_remove_one delete one.","Current coverage is 85.19% (diff: 42.86%)

Merging #436 into master will decrease coverage by 0.11%

@@             master       #436   diff @@
==========================================
  Files            29         29          
  Lines         18625      18633     +8   
  Methods         786        786          
  Messages          0          0          
  Branches       3191       3194     +3   
==========================================
- Hits          15888      15874    -14   
- Misses         2737       2759    +22   
  Partials          0          0          

Powered by Codecov. Last update 7acfd24...eb319dd",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,436,2016-10-19T06:00:03Z,2016-10-19T06:24:15Z,2016-10-19T06:24:15Z,CLOSED,False,10,1,1,https://github.com/fanchanghu,fix crash when sr_module_change_subscribe failed in a special condition,3,[],https://github.com/sysrepo/sysrepo/pull/436,https://github.com/fanchanghu,3,https://github.com/sysrepo/sysrepo/pull/436#issuecomment-254721327,"Hi,
it will crash when sr_module_change_subscribe with SR_SUBSCR_CTX_REUSE failed in a special condition:
first, do a successful subscribe.
second, do a failed subscribe, then sr_subscription->sm_subscription_cnt becomes 0.
third, do another failed subscribe, then sr_subscription is freed. but the pointer of *subscription_p is not set to null. user's program will crash when he used the pointer later.
it looks like cl_subscription_init does not add new cl_sm_subscription_ctx_t but cl_sr_subscription_remove_one delete one.","it seems there are still some problems, I'll try to improve it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,439,2016-10-19T13:55:11Z,2016-10-20T07:13:59Z,2016-10-20T07:14:00Z,MERGED,True,31,31,7,https://github.com/milanlenco,Fix sysrepo build.,5,[],https://github.com/sysrepo/sysrepo/pull/439,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/439,This pull request fixes non-deterministic failures of cl_state_data unit test.,This pull request fixes non-deterministic failures of cl_state_data unit test.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,439,2016-10-19T13:55:11Z,2016-10-20T07:13:59Z,2016-10-20T07:14:00Z,MERGED,True,31,31,7,https://github.com/milanlenco,Fix sysrepo build.,5,[],https://github.com/sysrepo/sysrepo/pull/439,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/439#issuecomment-254841457,This pull request fixes non-deterministic failures of cl_state_data unit test.,"Current coverage is 85.22% (diff: 87.50%)

Merging #439 into master will decrease coverage by 0.09%

@@             master       #439   diff @@
==========================================
  Files            29         29          
  Lines         18625      18628     +3   
  Methods         786        786          
  Messages          0          0          
  Branches       3191       3191          
==========================================
- Hits          15888      15874    -14   
- Misses         2737       2754    +17   
  Partials          0          0          

Powered by Codecov. Last update 7acfd24...b404c00",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,440,2016-10-20T03:05:03Z,2016-10-20T11:15:27Z,2016-10-20T11:15:27Z,MERGED,True,10,2,1,https://github.com/fanchanghu,BUGFIX sr_module_change_subscribe free error when cl_subscription_init failed,1,[],https://github.com/sysrepo/sysrepo/pull/440,https://github.com/fanchanghu,1,https://github.com/sysrepo/sysrepo/pull/440,"Hi,
this request is for fixing #438 , and also, cl_sr_subscription_remove_one need be called only when we added a sm_subscription to sr_subscription before.","Hi,
this request is for fixing #438 , and also, cl_sr_subscription_remove_one need be called only when we added a sm_subscription to sr_subscription before.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,440,2016-10-20T03:05:03Z,2016-10-20T11:15:27Z,2016-10-20T11:15:27Z,MERGED,True,10,2,1,https://github.com/fanchanghu,BUGFIX sr_module_change_subscribe free error when cl_subscription_init failed,1,[],https://github.com/sysrepo/sysrepo/pull/440,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/440#issuecomment-254998629,"Hi,
this request is for fixing #438 , and also, cl_sr_subscription_remove_one need be called only when we added a sm_subscription to sr_subscription before.","Current coverage is 85.17% (diff: 42.86%)

Merging #440 into master will decrease coverage by 0.13%

@@             master       #440   diff @@
==========================================
  Files            29         29          
  Lines         18625      18632     +7   
  Methods         786        786          
  Messages          0          0          
  Branches       3191       3194     +3   
==========================================
- Hits          15888      15869    -19   
- Misses         2737       2763    +26   
  Partials          0          0          

Powered by Codecov. Last update 7acfd24...8721618",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,440,2016-10-20T03:05:03Z,2016-10-20T11:15:27Z,2016-10-20T11:15:27Z,MERGED,True,10,2,1,https://github.com/fanchanghu,BUGFIX sr_module_change_subscribe free error when cl_subscription_init failed,1,[],https://github.com/sysrepo/sysrepo/pull/440,https://github.com/milanlenco,3,https://github.com/sysrepo/sysrepo/pull/440#issuecomment-255077884,"Hi,
this request is for fixing #438 , and also, cl_sr_subscription_remove_one need be called only when we added a sm_subscription to sr_subscription before.",Thanks for the fix.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,441,2016-10-20T09:33:17Z,2016-10-20T11:28:47Z,2016-10-20T11:28:47Z,MERGED,True,21,3,3,https://github.com/milanlenco,Print backtrace of a crashed unit test in travis.,8,[],https://github.com/sysrepo/sysrepo/pull/441,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/441,"With this pull request, a crashed unit test will generate core file in travis and the backtrace of every thread will get printed using gdb.
The only limitation is that travis will not generate more than one core file in one build, so for multiple crashed unit tests only the backtrace of the first one will get printed.
All travis build caches need to be cleared for this to take an effect.","With this pull request, a crashed unit test will generate core file in travis and the backtrace of every thread will get printed using gdb.
The only limitation is that travis will not generate more than one core file in one build, so for multiple crashed unit tests only the backtrace of the first one will get printed.
All travis build caches need to be cleared for this to take an effect.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,441,2016-10-20T09:33:17Z,2016-10-20T11:28:47Z,2016-10-20T11:28:47Z,MERGED,True,21,3,3,https://github.com/milanlenco,Print backtrace of a crashed unit test in travis.,8,[],https://github.com/sysrepo/sysrepo/pull/441,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/441#issuecomment-255073010,"With this pull request, a crashed unit test will generate core file in travis and the backtrace of every thread will get printed using gdb.
The only limitation is that travis will not generate more than one core file in one build, so for multiple crashed unit tests only the backtrace of the first one will get printed.
All travis build caches need to be cleared for this to take an effect.","Current coverage is 85.22% (diff: 100%)

Merging #441 into master will increase coverage by 0.04%

@@             master       #441   diff @@
==========================================
  Files            29         29          
  Lines         18629      18630     +1   
  Methods         786        786          
  Messages          0          0          
  Branches       3191       3191          
==========================================
+ Hits          15868      15876     +8   
+ Misses         2761       2754     -7   
  Partials          0          0          

Powered by Codecov. Last update 78fe8dc...9ef0be6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,441,2016-10-20T09:33:17Z,2016-10-20T11:28:47Z,2016-10-20T11:28:47Z,MERGED,True,21,3,3,https://github.com/milanlenco,Print backtrace of a crashed unit test in travis.,8,[],https://github.com/sysrepo/sysrepo/pull/441,https://github.com/milanlenco,3,https://github.com/sysrepo/sysrepo/pull/441#issuecomment-255075395,"With this pull request, a crashed unit test will generate core file in travis and the backtrace of every thread will get printed using gdb.
The only limitation is that travis will not generate more than one core file in one build, so for multiple crashed unit tests only the backtrace of the first one will get printed.
All travis build caches need to be cleared for this to take an effect.","OK, now it is not limited to one core file only.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,443,2016-10-20T13:06:15Z,2016-10-20T14:16:35Z,2016-10-20T14:16:35Z,MERGED,True,23,15,3,https://github.com/milanlenco,Skip LYS_USES when constructing xpath to an operational data subtree -- Fix #420,3,[],https://github.com/sysrepo/sysrepo/pull/443,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/443,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,443,2016-10-20T13:06:15Z,2016-10-20T14:16:35Z,2016-10-20T14:16:35Z,MERGED,True,23,15,3,https://github.com/milanlenco,Skip LYS_USES when constructing xpath to an operational data subtree -- Fix #420,3,[],https://github.com/sysrepo/sysrepo/pull/443,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/443#issuecomment-255111219,,"Current coverage is 85.17% (diff: 84.62%)

Merging #443 into master will decrease coverage by 0.02%

@@             master       #443   diff @@
==========================================
  Files            29         29          
  Lines         18632      18635     +3   
  Methods         786        786          
  Messages          0          0          
  Branches       3194       3197     +3   
==========================================
- Hits          15874      15872     -2   
- Misses         2758       2763     +5   
  Partials          0          0          

Powered by Codecov. Last update 6fead2f...42a727b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,445,2016-10-20T17:59:21Z,2016-10-21T06:54:40Z,2016-11-15T18:05:29Z,MERGED,True,123,122,7,https://github.com/mislavn,Counter,2,[],https://github.com/sysrepo/sysrepo/pull/445,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/445,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,445,2016-10-20T17:59:21Z,2016-10-21T06:54:40Z,2016-11-15T18:05:29Z,MERGED,True,123,122,7,https://github.com/mislavn,Counter,2,[],https://github.com/sysrepo/sysrepo/pull/445,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/445#issuecomment-255183933,,"I renamed the Counter class to Deleter and add private variable ""S_Deleter _deleter;"" to class Data so it resources could not be freed prematurely.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,445,2016-10-20T17:59:21Z,2016-10-21T06:54:40Z,2016-11-15T18:05:29Z,MERGED,True,123,122,7,https://github.com/mislavn,Counter,2,[],https://github.com/sysrepo/sysrepo/pull/445,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/445#issuecomment-255189544,,"Current coverage is 85.15% (diff: 100%)

Merging #445 into devel will increase coverage by 0.09%

@@              devel       #445   diff @@
==========================================
  Files            29         29          
  Lines         18816      18816          
  Methods         795        795          
  Messages          0          0          
  Branches       3218       3218          
==========================================
+ Hits          16004      16021    +17   
+ Misses         2812       2795    -17   
  Partials          0          0          

Powered by Codecov. Last update 3e830a3...59d1aa5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,446,2016-10-21T07:45:38Z,2016-10-21T14:48:57Z,2016-10-21T14:48:57Z,MERGED,True,151,41,9,https://github.com/milanlenco,Patches for #442 and #432,5,[],https://github.com/sysrepo/sysrepo/pull/446,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/446,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,446,2016-10-21T07:45:38Z,2016-10-21T14:48:57Z,2016-10-21T14:48:57Z,MERGED,True,151,41,9,https://github.com/milanlenco,Patches for #442 and #432,5,[],https://github.com/sysrepo/sysrepo/pull/446,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/446#issuecomment-255317612,,"Current coverage is 85.13% (diff: 65.88%)

No coverage report found for master at 7af82d7.
Powered by Codecov. Last update 7af82d7...9c3742a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,447,2016-10-21T10:22:18Z,2016-11-10T08:13:33Z,2016-11-15T18:10:01Z,MERGED,True,499,1209,35,https://github.com/antonio-paunovic,Swig/python2 binding test port,6,[],https://github.com/sysrepo/sysrepo/pull/447,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/447,"Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.","Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,447,2016-10-21T10:22:18Z,2016-11-10T08:13:33Z,2016-11-15T18:10:01Z,MERGED,True,499,1209,35,https://github.com/antonio-paunovic,Swig/python2 binding test port,6,[],https://github.com/sysrepo/sysrepo/pull/447,https://github.com/antonio-paunovic,2,https://github.com/sysrepo/sysrepo/pull/447#issuecomment-255408296,"Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.","Travis check fails and we found current reason why it is so.
SWIG version used is too old and generates non-working python2 bindings.
(replaces some overloaded function parameters with $ignore word)
We plan to change it by adding newer SWIG version to Travis build.
Unfortunately, Ubuntu version of swig is 2.0.11 and there is no newer in repositories (apt-cache search swig doesn't show any) so we'll have to find out if there are non-canonical repos with it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,447,2016-10-21T10:22:18Z,2016-11-10T08:13:33Z,2016-11-15T18:10:01Z,MERGED,True,499,1209,35,https://github.com/antonio-paunovic,Swig/python2 binding test port,6,[],https://github.com/sysrepo/sysrepo/pull/447,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/447#issuecomment-256561708,"Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.","@antonio-paunovic please note that the python tests fail in Travis CI: https://travis-ci.org/sysrepo/sysrepo/jobs/170406416
e.g.:
50/56 Test #50: python_SysrepoBasicTest ..........***Failed    0.02 sec

Traceback (most recent call last):

  File ""/home/travis/build/sysrepo/sysrepo/build/swig/python2/tests/SysrepoBasicTest.py"", line 18, in <module>

    import TestModule

  File ""/home/travis/build/sysrepo/sysrepo/build/swig/python2/tests/TestModule.py"", line 19, in <module>

    import libsysrepoPython2 as sr

  File ""/home/travis/build/sysrepo/sysrepo/build/swig/python2/tests/libsysrepoPython2.py"", line 166

    def __init__(self, $ignore=None, $ignore=0): 
                       ^
SyntaxError: invalid syntax

Could you please fix it?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,447,2016-10-21T10:22:18Z,2016-11-10T08:13:33Z,2016-11-15T18:10:01Z,MERGED,True,499,1209,35,https://github.com/antonio-paunovic,Swig/python2 binding test port,6,[],https://github.com/sysrepo/sysrepo/pull/447,https://github.com/codecov-io,4,https://github.com/sysrepo/sysrepo/pull/447#issuecomment-258112275,"Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.","Current coverage is 85.56% (diff: 100%)

Merging #447 into devel will decrease coverage by 0.16%

@@              devel       #447   diff @@
==========================================
  Files            29         29          
  Lines         19439      19456    +17   
  Methods         821        821          
  Messages          0          0          
  Branches       3350       3353     +3   
==========================================
- Hits          16663      16647    -16   
- Misses         2776       2809    +33   
  Partials          0          0          

Powered by Codecov. Last update c388fe6...2c86a29",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,447,2016-10-21T10:22:18Z,2016-11-10T08:13:33Z,2016-11-15T18:10:01Z,MERGED,True,499,1209,35,https://github.com/antonio-paunovic,Swig/python2 binding test port,6,[],https://github.com/sysrepo/sysrepo/pull/447,https://github.com/lukasmacko,5,https://github.com/sysrepo/sysrepo/pull/447#issuecomment-258438380,"Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.","Hi Antonio,
I've reviewed the code in general it looks ok.
Could you address/exaplain the three things I've commented at?
Thanks,
Lukas",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,447,2016-10-21T10:22:18Z,2016-11-10T08:13:33Z,2016-11-15T18:10:01Z,MERGED,True,499,1209,35,https://github.com/antonio-paunovic,Swig/python2 binding test port,6,[],https://github.com/sysrepo/sysrepo/pull/447,https://github.com/antonio-paunovic,6,https://github.com/sysrepo/sysrepo/pull/447#issuecomment-258804845,"Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.","Hi Lukas,
I'll address each issues today and comment on them.
Regards,
Antonio",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,447,2016-10-21T10:22:18Z,2016-11-10T08:13:33Z,2016-11-15T18:10:01Z,MERGED,True,499,1209,35,https://github.com/antonio-paunovic,Swig/python2 binding test port,6,[],https://github.com/sysrepo/sysrepo/pull/447,https://github.com/antonio-paunovic,7,https://github.com/sysrepo/sysrepo/pull/447#issuecomment-259102745,"Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.","Hi Rastislav,
There is this commit:
fa287f9
It is  a fix for old Python bindings which we thought are deprecated and in one of commits I delete them.
Do you want me to avoid deleting them in my patch, this way I get conflict.
Regards,
Antonio",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,447,2016-10-21T10:22:18Z,2016-11-10T08:13:33Z,2016-11-15T18:10:01Z,MERGED,True,499,1209,35,https://github.com/antonio-paunovic,Swig/python2 binding test port,6,[],https://github.com/sysrepo/sysrepo/pull/447,https://github.com/rastislavs,8,https://github.com/sysrepo/sysrepo/pull/447#issuecomment-259108368,"Tests for old python2 bindings are changed to work with new python2 bindings.
They are now located in swig/python2/tests and executed in cmake build directory build/swig/python2/tests.","Do you want me to avoid deleting them in my patch,

No, delete it. It was needed for the current tests to pass, but once we merge your pull request it can go away.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,448,2016-10-21T11:35:30Z,2016-10-21T14:48:08Z,2016-10-21T14:48:08Z,MERGED,True,9,4,3,https://github.com/milanlenco,Make timeout for the commit operation cmake-configurable -- enhancement #444,1,[],https://github.com/sysrepo/sysrepo/pull/448,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/448,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,448,2016-10-21T11:35:30Z,2016-10-21T14:48:08Z,2016-10-21T14:48:08Z,MERGED,True,9,4,3,https://github.com/milanlenco,Make timeout for the commit operation cmake-configurable -- enhancement #444,1,[],https://github.com/sysrepo/sysrepo/pull/448,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/448#issuecomment-255386631,,"Current coverage is 85.14% (diff: 100%)

Merging #448 into devel will increase coverage by 0.04%

@@              devel       #448   diff @@
==========================================
  Files            29         29          
  Lines         18814      18813     -1   
  Methods         795        795          
  Messages          0          0          
  Branches       3218       3218          
==========================================
+ Hits          16012      16018     +6   
+ Misses         2802       2795     -7   
  Partials          0          0          

Powered by Codecov. Last update ad3e9a1...3b04503",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,454,2016-10-25T11:46:34Z,2016-10-27T07:00:56Z,2016-10-27T07:00:56Z,MERGED,True,832,203,21,https://github.com/milanlenco,Differentiate imported and implemented modules -- enhancement #422,6,[],https://github.com/sysrepo/sysrepo/pull/454,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/454,"Sysrepo now differentiates between explicitly installed modules and modules that were automatically installed as import-based dependencies. A new flag was added to struct sr_schema_s: implemented, which is set to  true only if the module was explicitly installed. sr_module_install_cb() now instead of bool installed returns enumerated type sr_module_state_t, which is one of the SR_MS_UNINSTALLED, SR_MS_IMPORTED and SR_MD_IMPLEMENTED.
Imported module may become implemented using sysrepoctl --install. Already implemented module cannot be installed again (sysrepoctl will return error), it needs to be first uninstalled and then installed in order to achieve re-installation.
Also, sysrepoctl will automatically uninstall module which was only imported and (after removal of another module) is no longer used.
Meanwhile, the behaviour of data editing remains the same -- even data of only imported modules can be changed and retrieved. While it is not quite in-sync with libyang, we do not want to confuse users for no added benefits.","Sysrepo now differentiates between explicitly installed modules and modules that were automatically installed as import-based dependencies. A new flag was added to struct sr_schema_s: implemented, which is set to  true only if the module was explicitly installed. sr_module_install_cb() now instead of bool installed returns enumerated type sr_module_state_t, which is one of the SR_MS_UNINSTALLED, SR_MS_IMPORTED and SR_MD_IMPLEMENTED.
Imported module may become implemented using sysrepoctl --install. Already implemented module cannot be installed again (sysrepoctl will return error), it needs to be first uninstalled and then installed in order to achieve re-installation.
Also, sysrepoctl will automatically uninstall module which was only imported and (after removal of another module) is no longer used.
Meanwhile, the behaviour of data editing remains the same -- even data of only imported modules can be changed and retrieved. While it is not quite in-sync with libyang, we do not want to confuse users for no added benefits.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,454,2016-10-25T11:46:34Z,2016-10-27T07:00:56Z,2016-10-27T07:00:56Z,MERGED,True,832,203,21,https://github.com/milanlenco,Differentiate imported and implemented modules -- enhancement #422,6,[],https://github.com/sysrepo/sysrepo/pull/454,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/454#issuecomment-256560902,"Sysrepo now differentiates between explicitly installed modules and modules that were automatically installed as import-based dependencies. A new flag was added to struct sr_schema_s: implemented, which is set to  true only if the module was explicitly installed. sr_module_install_cb() now instead of bool installed returns enumerated type sr_module_state_t, which is one of the SR_MS_UNINSTALLED, SR_MS_IMPORTED and SR_MD_IMPLEMENTED.
Imported module may become implemented using sysrepoctl --install. Already implemented module cannot be installed again (sysrepoctl will return error), it needs to be first uninstalled and then installed in order to achieve re-installation.
Also, sysrepoctl will automatically uninstall module which was only imported and (after removal of another module) is no longer used.
Meanwhile, the behaviour of data editing remains the same -- even data of only imported modules can be changed and retrieved. While it is not quite in-sync with libyang, we do not want to confuse users for no added benefits.","Current coverage is 85.21% (diff: 95.44%)

Merging #454 into devel will increase coverage by 0.08%

@@              devel       #454   diff @@
==========================================
  Files            29         29          
  Lines         18899      19027   +128   
  Methods         798        806     +8   
  Messages          0          0          
  Branches       3239       3259    +20   
==========================================
+ Hits          16088      16212   +124   
- Misses         2811       2815     +4   
  Partials          0          0          

Powered by Codecov. Last update 552ee67...5f76946",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,455,2016-10-25T13:25:53Z,2016-10-25T13:49:40Z,2016-10-25T13:49:40Z,MERGED,True,109,22,6,https://github.com/lukasmacko,Multiple fixes,5,[],https://github.com/sysrepo/sysrepo/pull/455,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/455,"subscriptions cleanup
rpc xpath subscription matching
tests adjustments

these changes needs to be merged to devel also. However tests in devel branch currently fails - let's wait for CESNET/libyang#164","subscriptions cleanup
rpc xpath subscription matching
tests adjustments

these changes needs to be merged to devel also. However tests in devel branch currently fails - let's wait for CESNET/libyang#164",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,455,2016-10-25T13:25:53Z,2016-10-25T13:49:40Z,2016-10-25T13:49:40Z,MERGED,True,109,22,6,https://github.com/lukasmacko,Multiple fixes,5,[],https://github.com/sysrepo/sysrepo/pull/455,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/455#issuecomment-256037926,"subscriptions cleanup
rpc xpath subscription matching
tests adjustments

these changes needs to be merged to devel also. However tests in devel branch currently fails - let's wait for CESNET/libyang#164","Current coverage is 85.24% (diff: 88.89%)

Merging #455 into master will increase coverage by 0.10%

@@             master       #455   diff @@
==========================================
  Files            29         29          
  Lines         18693      18715    +22   
  Methods         788        789     +1   
  Messages          0          0          
  Branches       3210       3212     +2   
==========================================
+ Hits          15916      15953    +37   
+ Misses         2777       2762    -15   
  Partials          0          0          

Powered by Codecov. Last update 68b0a6a...852318a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,457,2016-10-26T06:04:59Z,2016-10-26T07:05:11Z,2016-10-26T07:05:11Z,MERGED,True,24,5,2,https://github.com/lukasmacko,Fix sr_get_changes example Fix #456,2,[],https://github.com/sysrepo/sysrepo/pull/457,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/457,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,457,2016-10-26T06:04:59Z,2016-10-26T07:05:11Z,2016-10-26T07:05:11Z,MERGED,True,24,5,2,https://github.com/lukasmacko,Fix sr_get_changes example Fix #456,2,[],https://github.com/sysrepo/sysrepo/pull/457,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/457#issuecomment-256263428,,"Current coverage is 85.20% (diff: 100%)

Merging #457 into master will increase coverage by 0.05%

@@             master       #457   diff @@
==========================================
  Files            29         29          
  Lines         18712      18708     -4   
  Methods         789        789          
  Messages          0          0          
  Branches       3212       3212          
==========================================
+ Hits          15933      15939     +6   
+ Misses         2779       2769    -10   
  Partials          0          0          

Powered by Codecov. Last update 41acae4...51f2093",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,458,2016-10-26T06:05:07Z,2016-10-26T06:39:19Z,2016-10-26T06:39:19Z,MERGED,True,1,1,1,https://github.com/milanlenco,Fix SA.,1,[],https://github.com/sysrepo/sysrepo/pull/458,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/458,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,458,2016-10-26T06:05:07Z,2016-10-26T06:39:19Z,2016-10-26T06:39:19Z,MERGED,True,1,1,1,https://github.com/milanlenco,Fix SA.,1,[],https://github.com/sysrepo/sysrepo/pull/458,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/458#issuecomment-256259901,,"Current coverage is 85.18% (diff: 100%)

Merging #458 into master will increase coverage by 0.03%

@@             master       #458   diff @@
==========================================
  Files            29         29          
  Lines         18712      18708     -4   
  Methods         789        789          
  Messages          0          0          
  Branches       3212       3212          
==========================================
+ Hits          15933      15936     +3   
+ Misses         2779       2772     -7   
  Partials          0          0          

Powered by Codecov. Last update 41acae4...52200fb",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,459,2016-10-26T07:28:13Z,2016-10-26T14:48:19Z,2016-10-26T14:48:19Z,MERGED,True,147,44,11,https://github.com/lukasmacko,Devel,21,[],https://github.com/sysrepo/sysrepo/pull/459,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/459,"merge patches from master to devel
waiting for CESNET/libyang#164","merge patches from master to devel
waiting for CESNET/libyang#164",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,459,2016-10-26T07:28:13Z,2016-10-26T14:48:19Z,2016-10-26T14:48:19Z,MERGED,True,147,44,11,https://github.com/lukasmacko,Devel,21,[],https://github.com/sysrepo/sysrepo/pull/459,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/459#issuecomment-256342176,"merge patches from master to devel
waiting for CESNET/libyang#164","Current coverage is 85.07% (diff: 89.29%)

No coverage report found for devel at fdafc98.
Powered by Codecov. Last update fdafc98...af14127",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,460,2016-10-26T14:12:16Z,2016-10-27T06:50:41Z,2016-10-27T06:50:41Z,MERGED,True,413,90,4,https://github.com/milanlenco,Add support for cross-module dependencies into sysrepocfg,3,[],https://github.com/sysrepo/sysrepo/pull/460,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/460,This is actually a bug-fix as the cross-module dependencies should have been fully supported in the latest release.,This is actually a bug-fix as the cross-module dependencies should have been fully supported in the latest release.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,460,2016-10-26T14:12:16Z,2016-10-27T06:50:41Z,2016-10-27T06:50:41Z,MERGED,True,413,90,4,https://github.com/milanlenco,Add support for cross-module dependencies into sysrepocfg,3,[],https://github.com/sysrepo/sysrepo/pull/460,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/460#issuecomment-256382717,This is actually a bug-fix as the cross-module dependencies should have been fully supported in the latest release.,"Current coverage is 85.22% (diff: 85.16%)

Merging #460 into master will increase coverage by 0.04%

@@             master       #460   diff @@
==========================================
  Files            29         29          
  Lines         18707      18774    +67   
  Methods         789        791     +2   
  Messages          0          0          
  Branches       3212       3228    +16   
==========================================
+ Hits          15936      16000    +64   
- Misses         2771       2774     +3   
  Partials          0          0          

Powered by Codecov. Last update 19e0e02...9f48e7b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,462,2016-10-26T17:00:08Z,2016-10-27T06:51:55Z,2016-11-15T18:02:56Z,MERGED,True,605,0,7,https://github.com/mislavn,C golang,3,[],https://github.com/sysrepo/sysrepo/pull/462,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/462,Here are sysrepo golang examples. They do not use SWIG but directly communicate with sysrepo binaries via cgo.,Here are sysrepo golang examples. They do not use SWIG but directly communicate with sysrepo binaries via cgo.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,462,2016-10-26T17:00:08Z,2016-10-27T06:51:55Z,2016-11-15T18:02:56Z,MERGED,True,605,0,7,https://github.com/mislavn,C golang,3,[],https://github.com/sysrepo/sysrepo/pull/462,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/462#issuecomment-256419681,Here are sysrepo golang examples. They do not use SWIG but directly communicate with sysrepo binaries via cgo.,"Current coverage is 85.08% (diff: 100%)

Merging #462 into devel will decrease coverage by 0.05%

@@              devel       #462   diff @@
==========================================
  Files            29         29          
  Lines         18899      18899          
  Methods         798        798          
  Messages          0          0          
  Branches       3239       3239          
==========================================
- Hits          16088      16079     -9   
- Misses         2811       2820     +9   
  Partials          0          0          

Powered by Codecov. Last update 552ee67...f711ce2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,465,2016-10-27T07:52:39Z,2016-10-27T08:12:34Z,2016-10-27T08:12:34Z,MERGED,True,3,3,1,https://github.com/rastislavs,enhance NULL checks in RP - may help to triage #464,1,[],https://github.com/sysrepo/sysrepo/pull/465,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/465,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,465,2016-10-27T07:52:39Z,2016-10-27T08:12:34Z,2016-10-27T08:12:34Z,MERGED,True,3,3,1,https://github.com/rastislavs,enhance NULL checks in RP - may help to triage #464,1,[],https://github.com/sysrepo/sysrepo/pull/465,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/465#issuecomment-256574276,,"Current coverage is 85.16% (diff: 100%)

Merging #465 into master will decrease coverage by 0.01%

@@             master       #465   diff @@
==========================================
  Files            29         29          
  Lines         18778      18773     -5   
  Methods         791        791          
  Messages          0          0          
  Branches       3228       3228          
==========================================
- Hits          15994      15988     -6   
- Misses         2784       2785     +1   
  Partials          0          0          

Powered by Codecov. Last update 1d1f3bf...1ebb655",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,466,2016-10-28T07:00:43Z,2016-10-28T07:50:48Z,2016-10-28T07:50:48Z,MERGED,True,323,1,7,https://github.com/rastislavs,sysrepo-netopeer2 dockerfiles,12,[],https://github.com/sysrepo/sysrepo/pull/466,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/466,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,466,2016-10-28T07:00:43Z,2016-10-28T07:50:48Z,2016-10-28T07:50:48Z,MERGED,True,323,1,7,https://github.com/rastislavs,sysrepo-netopeer2 dockerfiles,12,[],https://github.com/sysrepo/sysrepo/pull/466,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/466#issuecomment-256851650,,"Current coverage is 85.29% (diff: 100%)

Merging #466 into master will increase coverage by 0.13%

@@             master       #466   diff @@
==========================================
  Files            29         29          
  Lines         18770      18771     +1   
  Methods         791        791          
  Messages          0          0          
  Branches       3228       3228          
==========================================
+ Hits          15983      16009    +26   
+ Misses         2787       2762    -25   
  Partials          0          0          

Powered by Codecov. Last update 318f8a1...b9a2e97",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,469,2016-10-28T08:57:25Z,2016-10-28T10:45:17Z,2016-10-28T10:45:17Z,MERGED,True,2,1,1,https://github.com/rastislavs,fixed netopeer devel branches in sysrepo-netopeer2 Dockerfile,1,[],https://github.com/sysrepo/sysrepo/pull/469,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/469,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,469,2016-10-28T08:57:25Z,2016-10-28T10:45:17Z,2016-10-28T10:45:17Z,MERGED,True,2,1,1,https://github.com/rastislavs,fixed netopeer devel branches in sysrepo-netopeer2 Dockerfile,1,[],https://github.com/sysrepo/sysrepo/pull/469,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/469#issuecomment-256876731,,"Current coverage is 85.20% (diff: 100%)

Merging #469 into master will increase coverage by 0.01%

@@             master       #469   diff @@
==========================================
  Files            29         29          
  Lines         18773      18773          
  Methods         791        791          
  Messages          0          0          
  Branches       3228       3228          
==========================================
+ Hits          15993      15995     +2   
+ Misses         2780       2778     -2   
  Partials          0          0          

Powered by Codecov. Last update c6ae952...9c69ddf",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,471,2016-10-28T10:52:24Z,2016-10-28T10:59:53Z,2016-10-28T10:59:53Z,MERGED,True,534,25,5,https://github.com/milanlenco,Include parent nodes in the changeset (bug reported by CESNET),4,[],https://github.com/sysrepo/sysrepo/pull/471,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/471,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,471,2016-10-28T10:52:24Z,2016-10-28T10:59:53Z,2016-10-28T10:59:53Z,MERGED,True,534,25,5,https://github.com/milanlenco,Include parent nodes in the changeset (bug reported by CESNET),4,[],https://github.com/sysrepo/sysrepo/pull/471,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/471#issuecomment-256893319,,"Current coverage is 85.33% (diff: 88.07%)

Merging #471 into master will increase coverage by 0.15%

@@             master       #471   diff @@
==========================================
  Files            29         29          
  Lines         18774      18869    +95   
  Methods         791        793     +2   
  Messages          0          0          
  Branches       3228       3250    +22   
==========================================
+ Hits          15991      16101   +110   
+ Misses         2783       2768    -15   
  Partials          0          0          

Powered by Codecov. Last update f330391...28f1ee1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,472,2016-10-28T13:03:11Z,2016-10-28T13:11:19Z,2016-10-28T13:11:19Z,MERGED,True,58,3,3,https://github.com/milanlenco,Overwrite response code only in case of internal error: fix #467,2,[],https://github.com/sysrepo/sysrepo/pull/472,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/472,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,472,2016-10-28T13:03:11Z,2016-10-28T13:11:19Z,2016-10-28T13:11:19Z,MERGED,True,58,3,3,https://github.com/milanlenco,Overwrite response code only in case of internal error: fix #467,2,[],https://github.com/sysrepo/sysrepo/pull/472,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/472#issuecomment-256916269,,"Current coverage is 85.22% (diff: 66.67%)

Merging #472 into master will decrease coverage by 0.10%

@@             master       #472   diff @@
==========================================
  Files            29         29          
  Lines         18872      18869     -3   
  Methods         793        793          
  Messages          0          0          
  Branches       3250       3251     +1   
==========================================
- Hits          16102      16080    -22   
- Misses         2770       2789    +19   
  Partials          0          0          

Powered by Codecov. Last update c3f39a3...e7511c5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,475,2016-10-31T07:41:37Z,2016-10-31T08:14:25Z,2016-10-31T08:14:25Z,MERGED,True,6,0,1,https://github.com/lukasmacko,Fix sysrepocfg test,1,[],https://github.com/sysrepo/sysrepo/pull/475,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/475,Fix #473,Fix #473,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,476,2016-10-31T09:45:53Z,2016-10-31T09:56:51Z,2016-10-31T09:56:51Z,MERGED,True,3,0,1,https://github.com/lukasmacko,Add missing description statements,1,[],https://github.com/sysrepo/sysrepo/pull/476,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/476,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,479,2016-10-31T12:39:57Z,2016-10-31T13:00:28Z,2016-10-31T13:26:57Z,MERGED,True,3,4,1,https://github.com/jktjkt,Do not leak memory from Session::get_item,1,[],https://github.com/sysrepo/sysrepo/pull/479,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/479,"As reported by ASAN when disabling custom memory management:
  Direct leak of 32 byte(s) in 1 object(s) allocated from:
    #0 0x5041c5 in calloc /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:72
    #1 0x7f81aefd5726 in sr_calloc /home/jkt/work/prog/sysrepo/build/../src/common/sr_mem_mgmt.c:290:16
    #2 0x7f81aefbecdb in sr_dup_gpb_to_val_t /home/jkt/work/prog/sysrepo/build/../src/common/sr_protobuf.c:1486:11
    #3 0x7f81af1b7a72 in sr_get_item /home/jkt/work/prog/sysrepo/build/../src/clientlib/client_library.c:826:10
    #4 0x7f81b0897ef3 in Session::get_item(char const*) /home/jkt/work/prog/sysrepo/build/../swig/cpp/src/Session.cpp:160:15
    #5 0x54e40e in ____C_A_T_C_H____T_E_S_T____17()

The old code was creating an empty Val and manipulating its underlying
storage without setting a corresponding deleter. It seems to me that any
code which uses Val::p_get (which is only Session::get_item_next now) is
broken in the same manner. This patch is not touching that part because
I do not use it and therefore have no way of testing it.
The code is complicated because the Lua bindings typedef the S_Val to a
naked, raw Val* rather than the usual std::shared_ptr. This makes
the code much harder to reason about. It also necessitates that
strangely looking pattern of creating a local variable just to return
it.
This patch also removes a check for operator new returning nullptr. That
never happens on a standard-compliant compiler because allocation
failures are reported as std::bad_alloc. Because the code already relies
on exceptions, I don't see much point in changing each and every
operator new to [1] just to translate from std::bad_alloc to an
exception wraping SR_ERR_NOMEM.
[1] http://en.cppreference.com/w/cpp/memory/new/nothrow","As reported by ASAN when disabling custom memory management:
  Direct leak of 32 byte(s) in 1 object(s) allocated from:
    #0 0x5041c5 in calloc /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:72
    #1 0x7f81aefd5726 in sr_calloc /home/jkt/work/prog/sysrepo/build/../src/common/sr_mem_mgmt.c:290:16
    #2 0x7f81aefbecdb in sr_dup_gpb_to_val_t /home/jkt/work/prog/sysrepo/build/../src/common/sr_protobuf.c:1486:11
    #3 0x7f81af1b7a72 in sr_get_item /home/jkt/work/prog/sysrepo/build/../src/clientlib/client_library.c:826:10
    #4 0x7f81b0897ef3 in Session::get_item(char const*) /home/jkt/work/prog/sysrepo/build/../swig/cpp/src/Session.cpp:160:15
    #5 0x54e40e in ____C_A_T_C_H____T_E_S_T____17()

The old code was creating an empty Val and manipulating its underlying
storage without setting a corresponding deleter. It seems to me that any
code which uses Val::p_get (which is only Session::get_item_next now) is
broken in the same manner. This patch is not touching that part because
I do not use it and therefore have no way of testing it.
The code is complicated because the Lua bindings typedef the S_Val to a
naked, raw Val* rather than the usual std::shared_ptr. This makes
the code much harder to reason about. It also necessitates that
strangely looking pattern of creating a local variable just to return
it.
This patch also removes a check for operator new returning nullptr. That
never happens on a standard-compliant compiler because allocation
failures are reported as std::bad_alloc. Because the code already relies
on exceptions, I don't see much point in changing each and every
operator new to [1] just to translate from std::bad_alloc to an
exception wraping SR_ERR_NOMEM.
[1] http://en.cppreference.com/w/cpp/memory/new/nothrow",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,479,2016-10-31T12:39:57Z,2016-10-31T13:00:28Z,2016-10-31T13:26:57Z,MERGED,True,3,4,1,https://github.com/jktjkt,Do not leak memory from Session::get_item,1,[],https://github.com/sysrepo/sysrepo/pull/479,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/479#issuecomment-257285145,"As reported by ASAN when disabling custom memory management:
  Direct leak of 32 byte(s) in 1 object(s) allocated from:
    #0 0x5041c5 in calloc /var/tmp/portage/sys-devel/llvm-3.9.0/work/llvm-3.9.0.src/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:72
    #1 0x7f81aefd5726 in sr_calloc /home/jkt/work/prog/sysrepo/build/../src/common/sr_mem_mgmt.c:290:16
    #2 0x7f81aefbecdb in sr_dup_gpb_to_val_t /home/jkt/work/prog/sysrepo/build/../src/common/sr_protobuf.c:1486:11
    #3 0x7f81af1b7a72 in sr_get_item /home/jkt/work/prog/sysrepo/build/../src/clientlib/client_library.c:826:10
    #4 0x7f81b0897ef3 in Session::get_item(char const*) /home/jkt/work/prog/sysrepo/build/../swig/cpp/src/Session.cpp:160:15
    #5 0x54e40e in ____C_A_T_C_H____T_E_S_T____17()

The old code was creating an empty Val and manipulating its underlying
storage without setting a corresponding deleter. It seems to me that any
code which uses Val::p_get (which is only Session::get_item_next now) is
broken in the same manner. This patch is not touching that part because
I do not use it and therefore have no way of testing it.
The code is complicated because the Lua bindings typedef the S_Val to a
naked, raw Val* rather than the usual std::shared_ptr. This makes
the code much harder to reason about. It also necessitates that
strangely looking pattern of creating a local variable just to return
it.
This patch also removes a check for operator new returning nullptr. That
never happens on a standard-compliant compiler because allocation
failures are reported as std::bad_alloc. Because the code already relies
on exceptions, I don't see much point in changing each and every
operator new to [1] just to translate from std::bad_alloc to an
exception wraping SR_ERR_NOMEM.
[1] http://en.cppreference.com/w/cpp/memory/new/nothrow","Current coverage is 85.26% (diff: 100%)

Merging #479 into devel will decrease coverage by 0.02%

@@              devel       #479   diff @@
==========================================
  Files            29         29          
  Lines         19191      19189     -2   
  Methods         810        810          
  Messages          0          0          
  Branches       3297       3297          
==========================================
- Hits          16366      16361     -5   
- Misses         2825       2828     +3   
  Partials          0          0          

Powered by Codecov. Last update 5aebce2...f15dc9d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,480,2016-10-31T13:01:13Z,2016-10-31T13:12:26Z,2016-10-31T13:12:26Z,MERGED,True,2,1,1,https://github.com/lukasmacko,Disable bindings on OS X in travis,6,[],https://github.com/sysrepo/sysrepo/pull/480,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/480,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,480,2016-10-31T13:01:13Z,2016-10-31T13:12:26Z,2016-10-31T13:12:26Z,MERGED,True,2,1,1,https://github.com/lukasmacko,Disable bindings on OS X in travis,6,[],https://github.com/sysrepo/sysrepo/pull/480,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/480#issuecomment-257289483,,"Current coverage is 85.26% (diff: 100%)

No coverage report found for master at 1df2655.
Powered by Codecov. Last update 1df2655...ce883dd",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,481,2016-10-31T13:43:24Z,2016-10-31T14:32:37Z,2016-11-01T09:08:46Z,MERGED,True,2,2,2,https://github.com/jktjkt,Enable returning operational values from C++ callbacks,1,[],https://github.com/sysrepo/sysrepo/pull/481,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/481,"Vals doesn't allow its users from adding any data; we need to use
Vals_Holder in this context, similar to what the RPC code is doing with
out_vals.","Vals doesn't allow its users from adding any data; we need to use
Vals_Holder in this context, similar to what the RPC code is doing with
out_vals.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,481,2016-10-31T13:43:24Z,2016-10-31T14:32:37Z,2016-11-01T09:08:46Z,MERGED,True,2,2,2,https://github.com/jktjkt,Enable returning operational values from C++ callbacks,1,[],https://github.com/sysrepo/sysrepo/pull/481,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/481#issuecomment-257300161,"Vals doesn't allow its users from adding any data; we need to use
Vals_Holder in this context, similar to what the RPC code is doing with
out_vals.","Current coverage is 85.28% (diff: 100%)

Merging #481 into devel will increase coverage by 0.02%

@@              devel       #481   diff @@
==========================================
  Files            29         29          
  Lines         19186      19187     +1   
  Methods         810        810          
  Messages          0          0          
  Branches       3297       3297          
==========================================
+ Hits          16357      16362     +5   
+ Misses         2829       2825     -4   
  Partials          0          0          

Powered by Codecov. Last update f2cddc9...e700005",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,482,2016-10-31T15:18:51Z,2016-10-31T15:36:41Z,2016-10-31T15:36:41Z,MERGED,True,1,8,1,https://github.com/lukasmacko,Fix retrieving leafref in notification callback,3,[],https://github.com/sysrepo/sysrepo/pull/482,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/482,Fix #463,Fix #463,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,482,2016-10-31T15:18:51Z,2016-10-31T15:36:41Z,2016-10-31T15:36:41Z,MERGED,True,1,8,1,https://github.com/lukasmacko,Fix retrieving leafref in notification callback,3,[],https://github.com/sysrepo/sysrepo/pull/482,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/482#issuecomment-257327436,Fix #463,"Current coverage is 85.23% (diff: 100%)

Merging #482 into master will decrease coverage by 0.04%

@@             master       #482   diff @@
==========================================
  Files            29         29          
  Lines         18875      18863    -12   
  Methods         793        793          
  Messages          0          0          
  Branches       3251       3250     -1   
==========================================
- Hits          16094      16076    -18   
- Misses         2781       2787     +6   
  Partials          0          0          

Powered by Codecov. Last update e49efe3...f0464ab",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,486,2016-11-01T09:26:54Z,2016-11-02T07:54:22Z,2016-11-03T15:17:50Z,MERGED,True,7,1,1,https://github.com/jktjkt,Travis-CI: Also test builds without custom memory management,1,[],https://github.com/sysrepo/sysrepo/pull/486,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/486,This is currently expected to fail for (at least) #485.,This is currently expected to fail for (at least) #485.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,486,2016-11-01T09:26:54Z,2016-11-02T07:54:22Z,2016-11-03T15:17:50Z,MERGED,True,7,1,1,https://github.com/jktjkt,Travis-CI: Also test builds without custom memory management,1,[],https://github.com/sysrepo/sysrepo/pull/486,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/486#issuecomment-257525548,This is currently expected to fail for (at least) #485.,"Current coverage is 85.99% (diff: 100%)

Merging #486 into devel will increase coverage by 0.74%

@@              devel       #486   diff @@
==========================================
  Files            29         62      +33   
  Lines         19192      34241   +15049   
  Methods         810       1288     +478   
  Messages          0          0            
  Branches       3298       3842     +544   
==========================================
+ Hits          16361      29445   +13084   
- Misses         2831       3088     +257   
- Partials          0       1708    +1708   

Powered by Codecov. Last update 91c05ce...83b4235",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,490,2016-11-02T09:12:06Z,2016-11-02T09:22:09Z,2016-11-02T09:22:09Z,MERGED,True,9,4,1,https://github.com/milanlenco,Treat USES as a state data node if all its children carry operational data,2,[],https://github.com/sysrepo/sysrepo/pull/490,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/490,Fix #483,Fix #483,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,490,2016-11-02T09:12:06Z,2016-11-02T09:22:09Z,2016-11-02T09:22:09Z,MERGED,True,9,4,1,https://github.com/milanlenco,Treat USES as a state data node if all its children carry operational data,2,[],https://github.com/sysrepo/sysrepo/pull/490,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/490#issuecomment-257811578,Fix #483,"Current coverage is 85.23% (diff: 85.71%)

Merging #490 into master will decrease coverage by 0.03%

@@             master       #490   diff @@
==========================================
  Files            29         29          
  Lines         18867      18870     +3   
  Methods         793        793          
  Messages          0          0          
  Branches       3250       3251     +1   
==========================================
- Hits          16085      16082     -3   
- Misses         2782       2788     +6   
  Partials          0          0          

Powered by Codecov. Last update 2ee2c60...224af47",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,491,2016-11-02T12:12:59Z,2016-11-02T12:41:43Z,2016-11-02T12:41:43Z,MERGED,True,25,14,3,https://github.com/lukasmacko,Fix abort change generation,2,[],https://github.com/sysrepo/sysrepo/pull/491,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/491,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,491,2016-11-02T12:12:59Z,2016-11-02T12:41:43Z,2016-11-02T12:41:43Z,MERGED,True,25,14,3,https://github.com/lukasmacko,Fix abort change generation,2,[],https://github.com/sysrepo/sysrepo/pull/491,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/491#issuecomment-257853139,,"Current coverage is 85.26% (diff: 100%)

Merging #491 into master will increase coverage by 0.07%

@@             master       #491   diff @@
==========================================
  Files            29         29          
  Lines         18872      18877     +5   
  Methods         793        793          
  Messages          0          0          
  Branches       3251       3253     +2   
==========================================
+ Hits          16076      16094    +18   
+ Misses         2796       2783    -13   
  Partials          0          0          

Powered by Codecov. Last update fee5b6e...3da8b22",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,492,2016-11-02T14:44:22Z,2016-11-02T15:36:05Z,2016-11-02T15:36:05Z,MERGED,True,17,6,1,https://github.com/lukasmacko,Handle augements in submodules Fix #451,2,[],https://github.com/sysrepo/sysrepo/pull/492,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/492,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,492,2016-11-02T14:44:22Z,2016-11-02T15:36:05Z,2016-11-02T15:36:05Z,MERGED,True,17,6,1,https://github.com/lukasmacko,Handle augements in submodules Fix #451,2,[],https://github.com/sysrepo/sysrepo/pull/492,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/492#issuecomment-257901844,,"Current coverage is 85.34% (diff: 57.14%)

Merging #492 into master will increase coverage by 0.15%

@@             master       #492   diff @@
==========================================
  Files            29         29          
  Lines         18880      18880          
  Methods         793        793          
  Messages          0          0          
  Branches       3253       3255     +2   
==========================================
+ Hits          16085      16113    +28   
+ Misses         2795       2767    -28   
  Partials          0          0          

Powered by Codecov. Last update 3d79dfa...b32a964",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,493,2016-11-02T15:17:50Z,2016-11-02T15:53:07Z,2016-11-02T15:53:07Z,MERGED,True,16,5,1,https://github.com/lukasmacko,Apply augment in submodule fix into devel,6,[],https://github.com/sysrepo/sysrepo/pull/493,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/493,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,494,2016-11-02T15:25:50Z,2016-11-02T15:53:34Z,2016-11-02T15:53:34Z,MERGED,True,3,1,1,https://github.com/milanlenco,Fix SA.,1,[],https://github.com/sysrepo/sysrepo/pull/494,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/494,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,495,2016-11-02T18:01:43Z,2016-11-03T08:46:09Z,2016-11-03T11:24:06Z,MERGED,True,2,0,1,https://github.com/jktjkt,Install the C++ headers,1,[],https://github.com/sysrepo/sysrepo/pull/495,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/495,"I'm not installing directly to include/sysrepo because the include setup
is a bit weird. There's an include/sysrepo/*.h and include/sysrepo.h,
and the include paths not necessarily reflect all that.
Long term, I would like the C++ headers to use better include paths,
such as sysrepo/Foo.h, but that would require some shuffling around and
SWIG updates, and it's too late in the evening for them now.","I'm not installing directly to include/sysrepo because the include setup
is a bit weird. There's an include/sysrepo/*.h and include/sysrepo.h,
and the include paths not necessarily reflect all that.
Long term, I would like the C++ headers to use better include paths,
such as sysrepo/Foo.h, but that would require some shuffling around and
SWIG updates, and it's too late in the evening for them now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,495,2016-11-02T18:01:43Z,2016-11-03T08:46:09Z,2016-11-03T11:24:06Z,MERGED,True,2,0,1,https://github.com/jktjkt,Install the C++ headers,1,[],https://github.com/sysrepo/sysrepo/pull/495,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/495#issuecomment-257970841,"I'm not installing directly to include/sysrepo because the include setup
is a bit weird. There's an include/sysrepo/*.h and include/sysrepo.h,
and the include paths not necessarily reflect all that.
Long term, I would like the C++ headers to use better include paths,
such as sysrepo/Foo.h, but that would require some shuffling around and
SWIG updates, and it's too late in the evening for them now.","Current coverage is 85.19% (diff: 100%)

Merging #495 into devel will decrease coverage by 0.11%

@@              devel       #495   diff @@
==========================================
  Files            29         29          
  Lines         19200      19200          
  Methods         810        810          
  Messages          0          0          
  Branches       3302       3302          
==========================================
- Hits          16378      16356    -22   
- Misses         2822       2844    +22   
  Partials          0          0          

Powered by Codecov. Last update a91332c...494860e",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,495,2016-11-02T18:01:43Z,2016-11-03T08:46:09Z,2016-11-03T11:24:06Z,MERGED,True,2,0,1,https://github.com/jktjkt,Install the C++ headers,1,[],https://github.com/sysrepo/sysrepo/pull/495,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/495#issuecomment-258088341,"I'm not installing directly to include/sysrepo because the include setup
is a bit weird. There's an include/sysrepo/*.h and include/sysrepo.h,
and the include paths not necessarily reflect all that.
Long term, I would like the C++ headers to use better include paths,
such as sysrepo/Foo.h, but that would require some shuffling around and
SWIG updates, and it's too late in the evening for them now.","Hi,

I'm not installing directly to include/sysrepo because the include setup is a bit weird.

Feel free to re-organize it. For the sake of backward compatibility we would need to keep following pattern of includes:
#include ""sysrepo.h""

for the main API and
#include ""sysrepo/values.h""

for the optional extensions.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,496,2016-11-02T20:14:07Z,2016-11-03T08:34:04Z,2016-11-03T17:40:17Z,MERGED,True,41,0,3,https://github.com/jktjkt,Install systemd units,1,[],https://github.com/sysrepo/sysrepo/pull/496,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/496,"Because these go into a fixed location, these have to be enabled by
configuring with -DWITH_SYSTEMD=ON.","Because these go into a fixed location, these have to be enabled by
configuring with -DWITH_SYSTEMD=ON.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,496,2016-11-02T20:14:07Z,2016-11-03T08:34:04Z,2016-11-03T17:40:17Z,MERGED,True,41,0,3,https://github.com/jktjkt,Install systemd units,1,[],https://github.com/sysrepo/sysrepo/pull/496,https://github.com/rastislavs,2,https://github.com/sysrepo/sysrepo/pull/496#issuecomment-258218089,"Because these go into a fixed location, these have to be enabled by
configuring with -DWITH_SYSTEMD=ON.","Could you please add some information on systemd to docs?
e.g. https://github.com/sysrepo/sysrepo/blob/master/INSTALL.md#useful-cmake-options
or https://github.com/sysrepo/sysrepo/blob/master/INSTALL.md#using-sysrepo",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,497,2016-11-02T20:23:17Z,2016-11-03T07:46:41Z,2016-11-03T11:24:24Z,MERGED,True,2,2,1,https://github.com/jktjkt,docs: protobuf-c-compiler on recent Jessie appears to work,1,[],https://github.com/sysrepo/sysrepo/pull/497,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/497,"It managed to build, it starts and appears to work (but I haven't tried any real work or plugins yet).","It managed to build, it starts and appears to work (but I haven't tried any real work or plugins yet).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,497,2016-11-02T20:23:17Z,2016-11-03T07:46:41Z,2016-11-03T11:24:24Z,MERGED,True,2,2,1,https://github.com/jktjkt,docs: protobuf-c-compiler on recent Jessie appears to work,1,[],https://github.com/sysrepo/sysrepo/pull/497,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/497#issuecomment-258006715,"It managed to build, it starts and appears to work (but I haven't tried any real work or plugins yet).","Current coverage is 85.26% (diff: 100%)

Merging #497 into devel will decrease coverage by 0.04%

@@              devel       #497   diff @@
==========================================
  Files            29         29          
  Lines         19200      19203     +3   
  Methods         810        810          
  Messages          0          0          
  Branches       3302       3302          
==========================================
- Hits          16378      16372     -6   
- Misses         2822       2831     +9   
  Partials          0          0          

Powered by Codecov. Last update a91332c...515db40",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,501,2016-11-03T07:21:32Z,2016-11-03T07:30:13Z,2016-11-03T07:30:13Z,MERGED,True,245,45,3,https://github.com/milanlenco,Process LYS_USES nodes as if they weren't there -- Fix #484,3,[],https://github.com/sysrepo/sysrepo/pull/501,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/501,This should finally fix all the problems related to LYS_USES nodes in the static analysis.,This should finally fix all the problems related to LYS_USES nodes in the static analysis.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,501,2016-11-03T07:21:32Z,2016-11-03T07:30:13Z,2016-11-03T07:30:13Z,MERGED,True,245,45,3,https://github.com/milanlenco,Process LYS_USES nodes as if they weren't there -- Fix #484,3,[],https://github.com/sysrepo/sysrepo/pull/501,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/501#issuecomment-258077979,This should finally fix all the problems related to LYS_USES nodes in the static analysis.,"Current coverage is 85.25% (diff: 95.12%)

Merging #501 into master will increase coverage by 0.01%

@@             master       #501   diff @@
==========================================
  Files            29         29          
  Lines         18881      18889     +8   
  Methods         793        794     +1   
  Messages          0          0          
  Branches       3255       3255          
==========================================
+ Hits          16094      16102     +8   
  Misses         2787       2787          
  Partials          0          0          

Powered by Codecov. Last update f365cdd...5eaa434",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,502,2016-11-03T07:42:43Z,2016-11-03T07:51:50Z,2016-11-03T07:51:50Z,MERGED,True,1,0,1,https://github.com/milanlenco,Fix trees_test -- #485,1,[],https://github.com/sysrepo/sysrepo/pull/502,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/502,Fix #485,Fix #485,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,502,2016-11-03T07:42:43Z,2016-11-03T07:51:50Z,2016-11-03T07:51:50Z,MERGED,True,1,0,1,https://github.com/milanlenco,Fix trees_test -- #485,1,[],https://github.com/sysrepo/sysrepo/pull/502,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/502#issuecomment-258080653,Fix #485,"Current coverage is 85.23% (diff: 100%)

Merging #502 into master will decrease coverage by 0.12%

@@             master       #502   diff @@
==========================================
  Files            29         29          
  Lines         18889      18894     +5   
  Methods         794        794          
  Messages          0          0          
  Branches       3255       3255          
==========================================
- Hits          16123      16104    -19   
- Misses         2766       2790    +24   
  Partials          0          0          

Powered by Codecov. Last update 52e0d88...a52061b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,503,2016-11-03T08:09:34Z,2016-11-03T08:19:41Z,2016-11-03T08:19:41Z,MERGED,True,10,0,2,https://github.com/lukasmacko,Add support for not locking of modules that contains no data,1,[],https://github.com/sysrepo/sysrepo/pull/503,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/503,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,503,2016-11-03T08:09:34Z,2016-11-03T08:19:41Z,2016-11-03T08:19:41Z,MERGED,True,10,0,2,https://github.com/lukasmacko,Add support for not locking of modules that contains no data,1,[],https://github.com/sysrepo/sysrepo/pull/503,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/503#issuecomment-258083833,,"Current coverage is 85.19% (diff: 33.33%)

Merging #503 into master will decrease coverage by 0.10%

@@             master       #503   diff @@
==========================================
  Files            29         29          
  Lines         18895      18892     -3   
  Methods         794        794          
  Messages          0          0          
  Branches       3255       3256     +1   
==========================================
- Hits          16116      16094    -22   
- Misses         2779       2798    +19   
  Partials          0          0          

Powered by Codecov. Last update be2f5e3...03f8ebf",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,504,2016-11-03T08:32:15Z,2016-11-03T08:39:41Z,2016-11-03T08:39:41Z,MERGED,True,6,16,1,https://github.com/rastislavs,a potential fix to #464,1,[],https://github.com/sysrepo/sysrepo/pull/504,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/504,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,506,2016-11-03T08:51:38Z,2016-11-03T09:01:34Z,2016-11-03T09:01:34Z,MERGED,True,132,30,8,https://github.com/milanlenco,Distinguish between modules that can and cannot be locked.,3,[],https://github.com/sysrepo/sysrepo/pull/506,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/506,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,506,2016-11-03T08:51:38Z,2016-11-03T09:01:34Z,2016-11-03T09:01:34Z,MERGED,True,132,30,8,https://github.com/milanlenco,Distinguish between modules that can and cannot be locked.,3,[],https://github.com/sysrepo/sysrepo/pull/506,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/506#issuecomment-258090536,,"Current coverage is 85.25% (diff: 90.00%)

Merging #506 into master will increase coverage by 0.05%

@@             master       #506   diff @@
==========================================
  Files            29         29          
  Lines         18894      18903     +9   
  Methods         794        794          
  Messages          0          0          
  Branches       3257       3260     +3   
==========================================
+ Hits          16097      16115    +18   
+ Misses         2797       2788     -9   
  Partials          0          0          

Powered by Codecov. Last update cc7b5f3...877c0e6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,508,2016-11-03T15:32:24Z,2016-11-04T11:31:20Z,2016-11-04T11:31:20Z,MERGED,True,75,20,6,https://github.com/milanlenco,Fix #478 (second issue) + Fix #509 + minor bug-fixing in sysrepocfg,6,[],https://github.com/sysrepo/sysrepo/pull/508,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/508,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,508,2016-11-03T15:32:24Z,2016-11-04T11:31:20Z,2016-11-04T11:31:20Z,MERGED,True,75,20,6,https://github.com/milanlenco,Fix #478 (second issue) + Fix #509 + minor bug-fixing in sysrepocfg,6,[],https://github.com/sysrepo/sysrepo/pull/508,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/508#issuecomment-258191678,,"Current coverage is 85.63% (diff: 77.78%)

Merging #508 into devel will decrease coverage by 0.07%

@@              devel       #508   diff @@
==========================================
  Files            29         29          
  Lines         19234      19246    +12   
  Methods         811        811          
  Messages          0          0          
  Branches       3307       3311     +4   
==========================================
- Hits          16483      16480     -3   
- Misses         2751       2766    +15   
  Partials          0          0          

Powered by Codecov. Last update cd9c3f7...1176f8a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,508,2016-11-03T15:32:24Z,2016-11-04T11:31:20Z,2016-11-04T11:31:20Z,MERGED,True,75,20,6,https://github.com/milanlenco,Fix #478 (second issue) + Fix #509 + minor bug-fixing in sysrepocfg,6,[],https://github.com/sysrepo/sysrepo/pull/508,https://github.com/milanlenco,3,https://github.com/sysrepo/sysrepo/pull/508#issuecomment-258389740,,Build failing on devel because of this issue: CESNET/libyang#185,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,513,2016-11-04T08:40:50Z,2016-11-04T11:32:47Z,2016-11-04T11:32:47Z,MERGED,True,31,8,3,https://github.com/rastislavs,fix #511,1,[],https://github.com/sysrepo/sysrepo/pull/513,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/513,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,513,2016-11-04T08:40:50Z,2016-11-04T11:32:47Z,2016-11-04T11:32:47Z,MERGED,True,31,8,3,https://github.com/rastislavs,fix #511,1,[],https://github.com/sysrepo/sysrepo/pull/513,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/513#issuecomment-258374594,,"Current coverage is 85.24% (diff: 65.00%)

Merging #513 into master will increase coverage by 0.03%

@@             master       #513   diff @@
==========================================
  Files            29         29          
  Lines         18905      18919    +14   
  Methods         794        794          
  Messages          0          0          
  Branches       3260       3266     +6   
==========================================
+ Hits          16110      16127    +17   
+ Misses         2795       2792     -3   
  Partials          0          0          

Powered by Codecov. Last update 38ed5ce...e842f5c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,515,2016-11-04T13:50:20Z,2016-11-04T14:15:47Z,2016-11-04T14:15:47Z,MERGED,True,166,46,7,https://github.com/lukasmacko,Change applying of persist information,5,[],https://github.com/sysrepo/sysrepo/pull/515,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/515,Fix #478,Fix #478,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,515,2016-11-04T13:50:20Z,2016-11-04T14:15:47Z,2016-11-04T14:15:47Z,MERGED,True,166,46,7,https://github.com/lukasmacko,Change applying of persist information,5,[],https://github.com/sysrepo/sysrepo/pull/515,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/515#issuecomment-258441379,Fix #478,"Current coverage is 85.62% (diff: 85.86%)

Merging #515 into devel will decrease coverage by 0.08%

@@              devel       #515   diff @@
==========================================
  Files            29         29          
  Lines         19259      19333    +74   
  Methods         811        812     +1   
  Messages          0          0          
  Branches       3317       3334    +17   
==========================================
+ Hits          16504      16552    +48   
- Misses         2755       2781    +26   
  Partials          0          0          

Powered by Codecov. Last update 39bf9e1...76fc4d5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,516,2016-11-04T17:32:29Z,2016-11-07T08:47:26Z,2016-11-07T08:52:20Z,MERGED,True,20,37,9,https://github.com/jktjkt,cmake: use the GNUInstallDirs module,2,[],https://github.com/sysrepo/sysrepo/pull/516,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/516,"Warning: on non-Debian amd64 systems, this will change the installation directory of libraries, they will be put into ${CMAKE_INSTALL_PREFIX}/lib64/ now. The old versions of libraries which might still be in lib/ will be left in place, which means that there's some potential for breakage on developers' systems. The same applies to PKG_CONFIG_PATH. Still, I think that following cmake conventions is a good reason to follow suit here.","Warning: on non-Debian amd64 systems, this will change the installation directory of libraries, they will be put into ${CMAKE_INSTALL_PREFIX}/lib64/ now. The old versions of libraries which might still be in lib/ will be left in place, which means that there's some potential for breakage on developers' systems. The same applies to PKG_CONFIG_PATH. Still, I think that following cmake conventions is a good reason to follow suit here.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,516,2016-11-04T17:32:29Z,2016-11-07T08:47:26Z,2016-11-07T08:52:20Z,MERGED,True,20,37,9,https://github.com/jktjkt,cmake: use the GNUInstallDirs module,2,[],https://github.com/sysrepo/sysrepo/pull/516,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/516#issuecomment-258506046,"Warning: on non-Debian amd64 systems, this will change the installation directory of libraries, they will be put into ${CMAKE_INSTALL_PREFIX}/lib64/ now. The old versions of libraries which might still be in lib/ will be left in place, which means that there's some potential for breakage on developers' systems. The same applies to PKG_CONFIG_PATH. Still, I think that following cmake conventions is a good reason to follow suit here.","Current coverage is 85.22% (diff: 100%)

Merging #516 into devel will decrease coverage by 0.40%

@@              devel       #516   diff @@
==========================================
  Files            29         29          
  Lines         19334      19325     -9   
  Methods         812        812          
  Messages          0          0          
  Branches       3334       3334          
==========================================
- Hits          16553      16468    -85   
- Misses         2781       2857    +76   
  Partials          0          0          

Powered by Codecov. Last update fc62a78...b51bad0",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,517,2016-11-07T07:39:41Z,2016-11-07T08:46:13Z,2016-11-07T08:46:13Z,MERGED,True,98,0,2,https://github.com/lukasmacko,Auto enable + copy direct mandatory nodes,2,[],https://github.com/sysrepo/sysrepo/pull/517,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/517,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,517,2016-11-07T07:39:41Z,2016-11-07T08:46:13Z,2016-11-07T08:46:13Z,MERGED,True,98,0,2,https://github.com/lukasmacko,Auto enable + copy direct mandatory nodes,2,[],https://github.com/sysrepo/sysrepo/pull/517,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/517#issuecomment-258767106,,"Current coverage is 85.68% (diff: 95.00%)

Merging #517 into devel will increase coverage by 0.06%

@@              devel       #517   diff @@
==========================================
  Files            29         29          
  Lines         19334      19374    +40   
  Methods         812        814     +2   
  Messages          0          0          
  Branches       3334       3342     +8   
==========================================
+ Hits          16553      16599    +46   
+ Misses         2781       2775     -6   
  Partials          0          0          

Powered by Codecov. Last update fc62a78...100ef52",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,520,2016-11-07T12:20:15Z,2016-11-07T12:39:07Z,2016-11-07T12:39:07Z,MERGED,True,21,1,3,https://github.com/lukasmacko,Enable running in submodule,2,[],https://github.com/sysrepo/sysrepo/pull/520,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/520,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,520,2016-11-07T12:20:15Z,2016-11-07T12:39:07Z,2016-11-07T12:39:07Z,MERGED,True,21,1,3,https://github.com/lukasmacko,Enable running in submodule,2,[],https://github.com/sysrepo/sysrepo/pull/520,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/520#issuecomment-258823273,,"Current coverage is 85.74% (diff: 100%)

Merging #520 into devel will decrease coverage by 0.01%

@@              devel       #520   diff @@
==========================================
  Files            29         29          
  Lines         19373      19374     +1   
  Methods         814        814          
  Messages          0          0          
  Branches       3342       3342          
==========================================
- Hits          16612      16611     -1   
- Misses         2761       2763     +2   
  Partials          0          0          

Powered by Codecov. Last update 6af6f40...6740623",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,521,2016-11-07T15:15:41Z,2016-11-07T15:30:54Z,2016-11-07T15:30:54Z,MERGED,True,5,0,2,https://github.com/lukasmacko,Initialize fd to -1 Fix #505,2,[],https://github.com/sysrepo/sysrepo/pull/521,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/521,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,523,2016-11-08T08:36:10Z,2016-11-08T08:59:53Z,2016-11-08T08:59:54Z,MERGED,True,575,146,25,https://github.com/rastislavs,Nex xpath/value/tree helper APIs,14,[],https://github.com/sysrepo/sysrepo/pull/523,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/523,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,523,2016-11-08T08:36:10Z,2016-11-08T08:59:53Z,2016-11-08T08:59:54Z,MERGED,True,575,146,25,https://github.com/rastislavs,Nex xpath/value/tree helper APIs,14,[],https://github.com/sysrepo/sysrepo/pull/523,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/523#issuecomment-259081213,,"Current coverage is 85.82% (diff: 95.79%)

Merging #523 into devel will increase coverage by 0.11%

@@              devel       #523   diff @@
==========================================
  Files            29         29          
  Lines         19377      19440    +63   
  Methods         814        821     +7   
  Messages          0          0          
  Branches       3343       3350     +7   
==========================================
+ Hits          16607      16683    +76   
+ Misses         2770       2757    -13   
  Partials          0          0          

Powered by Codecov. Last update 1b3516d...fa287f9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,525,2016-11-08T11:16:26Z,2016-11-09T15:52:31Z,2016-11-09T15:52:31Z,MERGED,True,236,4,3,https://github.com/lukasmacko,Documentation update,3,[],https://github.com/sysrepo/sysrepo/pull/525,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/525,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,525,2016-11-08T11:16:26Z,2016-11-09T15:52:31Z,2016-11-09T15:52:31Z,MERGED,True,236,4,3,https://github.com/lukasmacko,Documentation update,3,[],https://github.com/sysrepo/sysrepo/pull/525,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/525#issuecomment-259441364,,"Current coverage is 85.68% (diff: 100%)

Merging #525 into devel will decrease coverage by 0.04%

@@              devel       #525   diff @@
==========================================
  Files            29         29          
  Lines         19439      19458    +19   
  Methods         821        821          
  Messages          0          0          
  Branches       3350       3353     +3   
==========================================
+ Hits          16663      16671     +8   
- Misses         2776       2787    +11   
  Partials          0          0          

Powered by Codecov. Last update c388fe6...9b450e5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,527,2016-11-09T07:35:49Z,2016-11-09T16:00:44Z,2016-11-09T16:00:44Z,MERGED,True,1925,543,39,https://github.com/milanlenco,New examples + printers for sysrepo values,14,[],https://github.com/sysrepo/sysrepo/pull/527,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/527,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,527,2016-11-09T07:35:49Z,2016-11-09T16:00:44Z,2016-11-09T16:00:44Z,MERGED,True,1925,543,39,https://github.com/milanlenco,New examples + printers for sysrepo values,14,[],https://github.com/sysrepo/sysrepo/pull/527,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/527#issuecomment-259445050,,"Current coverage is 85.16% (diff: 74.29%)

Merging #527 into devel will decrease coverage by 0.56%

@@              devel       #527   diff @@
==========================================
  Files            29         29          
  Lines         19439      19515    +76   
  Methods         821        827     +6   
  Messages          0          0          
  Branches       3350       3357     +7   
==========================================
- Hits          16663      16618    -45   
- Misses         2776       2897   +121   
  Partials          0          0          

Powered by Codecov. Last update c388fe6...01683aa",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,528,2016-11-09T14:52:49Z,2016-11-09T15:02:13Z,2016-11-09T15:02:13Z,MERGED,True,28,3,3,https://github.com/milanlenco,Load imported module into a separate context for schema analysis.,1,[],https://github.com/sysrepo/sysrepo/pull/528,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/528,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,528,2016-11-09T14:52:49Z,2016-11-09T15:02:13Z,2016-11-09T15:02:13Z,MERGED,True,28,3,3,https://github.com/milanlenco,Load imported module into a separate context for schema analysis.,1,[],https://github.com/sysrepo/sysrepo/pull/528,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/528#issuecomment-259434337,,"Current coverage is 85.77% (diff: 61.11%)

Merging #528 into devel will increase coverage by 0.05%

@@              devel       #528   diff @@
==========================================
  Files            29         29          
  Lines         19439      19457    +18   
  Methods         821        821          
  Messages          0          0          
  Branches       3350       3353     +3   
==========================================
+ Hits          16663      16689    +26   
+ Misses         2776       2768     -8   
  Partials          0          0          

Powered by Codecov. Last update c388fe6...f0a36a8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,529,2016-11-09T15:11:07Z,2016-11-10T06:50:09Z,2016-11-10T06:50:09Z,MERGED,True,6,0,1,https://github.com/rastislavs,sysrepocfg - skip implicitly added default nodes,2,[],https://github.com/sysrepo/sysrepo/pull/529,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/529,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,529,2016-11-09T15:11:07Z,2016-11-10T06:50:09Z,2016-11-10T06:50:09Z,MERGED,True,6,0,1,https://github.com/rastislavs,sysrepocfg - skip implicitly added default nodes,2,[],https://github.com/sysrepo/sysrepo/pull/529,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/529#issuecomment-259447055,,"Current coverage is 85.70% (diff: 100%)

Merging #529 into devel will increase coverage by 0.01%

@@              devel       #529   diff @@
==========================================
  Files            29         29          
  Lines         19456      19459     +3   
  Methods         821        821          
  Messages          0          0          
  Branches       3353       3354     +1   
==========================================
+ Hits          16673      16677     +4   
+ Misses         2783       2782     -1   
  Partials          0          0          

Powered by Codecov. Last update 795362c...7ed4ce3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,531,2016-11-10T07:38:47Z,2016-11-10T08:13:12Z,2016-11-10T08:13:12Z,MERGED,True,150,19,11,https://github.com/lukasmacko,Abort notification change + validation fix,3,[],https://github.com/sysrepo/sysrepo/pull/531,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/531,"abort notification is sent to all subscribers by default
correctly propagate validation errors if validation for one model fails and succeed for others","abort notification is sent to all subscribers by default
correctly propagate validation errors if validation for one model fails and succeed for others",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,531,2016-11-10T07:38:47Z,2016-11-10T08:13:12Z,2016-11-10T08:13:12Z,MERGED,True,150,19,11,https://github.com/lukasmacko,Abort notification change + validation fix,3,[],https://github.com/sysrepo/sysrepo/pull/531,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/531#issuecomment-259622573,"abort notification is sent to all subscribers by default
correctly propagate validation errors if validation for one model fails and succeed for others","Current coverage is 85.27% (diff: 95.45%)

Merging #531 into devel will increase coverage by 0.05%

@@              devel       #531   diff @@
==========================================
  Files            29         29          
  Lines         19518      19524     +6   
  Methods         827        827          
  Messages          0          0          
  Branches       3358       3362     +4   
==========================================
+ Hits          16634      16649    +15   
+ Misses         2884       2875     -9   
  Partials          0          0          

Powered by Codecov. Last update 3a267cc...36ba730",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,532,2016-11-10T08:44:49Z,2016-11-10T08:53:24Z,2016-11-10T08:53:24Z,MERGED,True,5,6,1,https://github.com/milanlenco,Fix sr_print_val_test.,1,[],https://github.com/sysrepo/sysrepo/pull/532,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/532,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,532,2016-11-10T08:44:49Z,2016-11-10T08:53:24Z,2016-11-10T08:53:24Z,MERGED,True,5,6,1,https://github.com/milanlenco,Fix sr_print_val_test.,1,[],https://github.com/sysrepo/sysrepo/pull/532,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/532#issuecomment-259634487,,"Current coverage is 85.47% (diff: 100%)

Merging #532 into devel will increase coverage by 0.38%

@@              devel       #532   diff @@
==========================================
  Files            29         29          
  Lines         19523      19531     +8   
  Methods         827        827          
  Messages          0          0          
  Branches       3362       3362          
==========================================
+ Hits          16613      16694    +81   
+ Misses         2910       2837    -73   
  Partials          0          0          

Powered by Codecov. Last update 90eda8f...dbbf452",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,533,2016-11-10T09:24:08Z,2016-11-10T11:30:42Z,2016-11-10T11:30:42Z,MERGED,True,19,14,4,https://github.com/rastislavs,fixed subscription close handling,5,[],https://github.com/sysrepo/sysrepo/pull/533,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/533,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,533,2016-11-10T09:24:08Z,2016-11-10T11:30:42Z,2016-11-10T11:30:42Z,MERGED,True,19,14,4,https://github.com/rastislavs,fixed subscription close handling,5,[],https://github.com/sysrepo/sysrepo/pull/533,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/533#issuecomment-259642744,,"Current coverage is 85.53% (diff: 41.67%)

Merging #533 into devel will decrease coverage by 0.02%

@@              devel       #533   diff @@
==========================================
  Files            29         29          
  Lines         19531      19535     +4   
  Methods         827        827          
  Messages          0          0          
  Branches       3362       3364     +2   
==========================================
- Hits          16709      16708     -1   
- Misses         2822       2827     +5   
  Partials          0          0          

Powered by Codecov. Last update 20730a1...cfc4f66",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,534,2016-11-10T13:22:42Z,2016-11-11T12:04:39Z,2016-11-11T12:04:40Z,MERGED,True,1,1,1,https://github.com/rastislavs,set PLUGINS_DIR to absolute path,1,[],https://github.com/sysrepo/sysrepo/pull/534,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/534,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,534,2016-11-10T13:22:42Z,2016-11-11T12:04:39Z,2016-11-11T12:04:40Z,MERGED,True,1,1,1,https://github.com/rastislavs,set PLUGINS_DIR to absolute path,1,[],https://github.com/sysrepo/sysrepo/pull/534,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/534#issuecomment-259690355,,"Current coverage is 85.46% (diff: 100%)

Merging #534 into master will decrease coverage by 0.11%

@@             master       #534   diff @@
==========================================
  Files            29         29          
  Lines         19534      19534          
  Methods         827        827          
  Messages          0          0          
  Branches       3364       3364          
==========================================
- Hits          16716      16694    -22   
- Misses         2818       2840    +22   
  Partials          0          0          

Powered by Codecov. Last update 849f27a...72c326f",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,535,2016-11-11T11:42:13Z,2016-11-11T11:58:22Z,2016-11-11T11:58:22Z,MERGED,True,53,38,12,https://github.com/lukasmacko,Timestamp for event notification Fix #489,1,[],https://github.com/sysrepo/sysrepo/pull/535,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/535,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,535,2016-11-11T11:42:13Z,2016-11-11T11:58:22Z,2016-11-11T11:58:22Z,MERGED,True,53,38,12,https://github.com/lukasmacko,Timestamp for event notification Fix #489,1,[],https://github.com/sysrepo/sysrepo/pull/535,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/535#issuecomment-259941661,,"Current coverage is 85.48% (diff: 100%)

Merging #535 into devel will decrease coverage by 0.10%

@@              devel       #535   diff @@
==========================================
  Files            29         29          
  Lines         19534      19540     +6   
  Methods         827        827          
  Messages          0          0          
  Branches       3364       3364          
==========================================
- Hits          16716      16702    -14   
- Misses         2818       2838    +20   
  Partials          0          0          

Powered by Codecov. Last update 849f27a...62328b7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,536,2016-11-11T12:03:46Z,2016-11-11T12:22:34Z,2016-11-11T12:22:35Z,MERGED,True,344,0,2,https://github.com/milanlenco,Documentation for memory management.,1,[],https://github.com/sysrepo/sysrepo/pull/536,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/536,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,536,2016-11-11T12:03:46Z,2016-11-11T12:22:34Z,2016-11-11T12:22:35Z,MERGED,True,344,0,2,https://github.com/milanlenco,Documentation for memory management.,1,[],https://github.com/sysrepo/sysrepo/pull/536,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/536#issuecomment-259944973,,"Current coverage is 85.43% (diff: 100%)

Merging #536 into devel will increase coverage by <.01%

@@              devel       #536   diff @@
==========================================
  Files            29         29          
  Lines         19540      19539     -1   
  Methods         827        827          
  Messages          0          0          
  Branches       3364       3364          
==========================================
  Hits          16692      16692          
+ Misses         2848       2847     -1   
  Partials          0          0          

Powered by Codecov. Last update e84ae00...8e73527",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,539,2016-11-15T09:51:46Z,2016-11-15T10:10:48Z,2016-11-15T10:10:48Z,MERGED,True,72,9,4,https://github.com/lukasmacko,Fix data in submodule,3,[],https://github.com/sysrepo/sysrepo/pull/539,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/539,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,539,2016-11-15T09:51:46Z,2016-11-15T10:10:48Z,2016-11-15T10:10:48Z,MERGED,True,72,9,4,https://github.com/lukasmacko,Fix data in submodule,3,[],https://github.com/sysrepo/sysrepo/pull/539,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/539#issuecomment-260599486,,"Current coverage is 85.47% (diff: 95.24%)

Merging #539 into master will increase coverage by 0.02%

@@             master       #539   diff @@
==========================================
  Files            29         29          
  Lines         19535      19549    +14   
  Methods         827        827          
  Messages          0          0          
  Branches       3364       3366     +2   
==========================================
+ Hits          16692      16708    +16   
+ Misses         2843       2841     -2   
  Partials          0          0          

Powered by Codecov. Last update c326f30...1d009e7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,542,2016-11-15T11:36:52Z,2016-11-15T12:27:38Z,2016-11-15T12:27:38Z,MERGED,True,30,1,2,https://github.com/lukasmacko,Fix get schema with subscription,1,[],https://github.com/sysrepo/sysrepo/pull/542,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/542,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,542,2016-11-15T11:36:52Z,2016-11-15T12:27:38Z,2016-11-15T12:27:38Z,MERGED,True,30,1,2,https://github.com/lukasmacko,Fix get schema with subscription,1,[],https://github.com/sysrepo/sysrepo/pull/542,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/542#issuecomment-260622502,,"Current coverage is 85.50% (diff: 100%)

Merging #542 into master will decrease coverage by 0.03%

@@             master       #542   diff @@
==========================================
  Files            29         29          
  Lines         19549      19551     +2   
  Methods         827        827          
  Messages          0          0          
  Branches       3366       3366          
==========================================
- Hits          16721      16717     -4   
- Misses         2828       2834     +6   
  Partials          0          0          

Powered by Codecov. Last update 91481ad...8201e17",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,544,2016-11-15T12:37:28Z,2016-11-15T14:25:08Z,2016-11-15T14:25:08Z,MERGED,True,103,11,4,https://github.com/lukasmacko,Merge fixes to devel,9,[],https://github.com/sysrepo/sysrepo/pull/544,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/544,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,544,2016-11-15T12:37:28Z,2016-11-15T14:25:08Z,2016-11-15T14:25:08Z,MERGED,True,103,11,4,https://github.com/lukasmacko,Merge fixes to devel,9,[],https://github.com/sysrepo/sysrepo/pull/544,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/544#issuecomment-260631742,,"Current coverage is 85.54% (diff: 95.45%)

Merging #544 into devel will increase coverage by 0.08%

@@              devel       #544   diff @@
==========================================
  Files            29         29          
  Lines         19540      19556    +16   
  Methods         827        827          
  Messages          0          0          
  Branches       3364       3366     +2   
==========================================
+ Hits          16699      16729    +30   
+ Misses         2841       2827    -14   
  Partials          0          0          

Powered by Codecov. Last update ae43d20...45fa4f3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,545,2016-11-15T14:32:30Z,2016-11-15T15:50:40Z,2016-11-15T15:50:40Z,MERGED,True,120,120,2,https://github.com/milanlenco,Fix #543: Re-order operations in md_remove_module_internal to avoid heap-use-after-free.,2,[],https://github.com/sysrepo/sysrepo/pull/545,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/545,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,545,2016-11-15T14:32:30Z,2016-11-15T15:50:40Z,2016-11-15T15:50:40Z,MERGED,True,120,120,2,https://github.com/milanlenco,Fix #543: Re-order operations in md_remove_module_internal to avoid heap-use-after-free.,2,[],https://github.com/sysrepo/sysrepo/pull/545,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/545#issuecomment-260674090,,"Current coverage is 85.51% (diff: 93.51%)

Merging #545 into master will decrease coverage by <.01%

@@             master       #545   diff @@
==========================================
  Files            29         29          
  Lines         19550      19549     -1   
  Methods         827        827          
  Messages          0          0          
  Branches       3366       3366          
==========================================
- Hits          16717      16716     -1   
  Misses         2833       2833          
  Partials          0          0          

Powered by Codecov. Last update 598e4f4...b47206c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,546,2016-11-15T18:57:08Z,2016-11-18T15:38:45Z,2016-11-18T15:38:45Z,MERGED,True,591,823,31,https://github.com/mislavn,Cpp update,18,[],https://github.com/sysrepo/sysrepo/pull/546,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/546,"Hi Rastislav,
in this pull request I updated some C++ classes and implemented the new action API.
The only problem is that I am not sure  how to implement the functions:
sr_val_build_str_data(sr_val_t *value, sr_type_t type, const char *format, ...);
sr_node_build_str_data(sr_node_t *node, sr_type_t type, const char *format, ...);
I was not clear for me how to implement it from the examples in the unit tests.
Can you explain me how to use this API.
Regards,
Mislav","Hi Rastislav,
in this pull request I updated some C++ classes and implemented the new action API.
The only problem is that I am not sure  how to implement the functions:
sr_val_build_str_data(sr_val_t *value, sr_type_t type, const char *format, ...);
sr_node_build_str_data(sr_node_t *node, sr_type_t type, const char *format, ...);
I was not clear for me how to implement it from the examples in the unit tests.
Can you explain me how to use this API.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,546,2016-11-15T18:57:08Z,2016-11-18T15:38:45Z,2016-11-18T15:38:45Z,MERGED,True,591,823,31,https://github.com/mislavn,Cpp update,18,[],https://github.com/sysrepo/sysrepo/pull/546,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/546#issuecomment-260762415,"Hi Rastislav,
in this pull request I updated some C++ classes and implemented the new action API.
The only problem is that I am not sure  how to implement the functions:
sr_val_build_str_data(sr_val_t *value, sr_type_t type, const char *format, ...);
sr_node_build_str_data(sr_node_t *node, sr_type_t type, const char *format, ...);
I was not clear for me how to implement it from the examples in the unit tests.
Can you explain me how to use this API.
Regards,
Mislav","Current coverage is 85.60% (diff: 100%)

Merging #546 into devel will increase coverage by 0.09%

@@              devel       #546   diff @@
==========================================
  Files            29         29          
  Lines         19554      19553     -1   
  Methods         827        827          
  Messages          0          0          
  Branches       3366       3366          
==========================================
+ Hits          16722      16738    +16   
+ Misses         2832       2815    -17   
  Partials          0          0          

Powered by Codecov. Last update 4edcce6...05befb3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,546,2016-11-15T18:57:08Z,2016-11-18T15:38:45Z,2016-11-18T15:38:45Z,MERGED,True,591,823,31,https://github.com/mislavn,Cpp update,18,[],https://github.com/sysrepo/sysrepo/pull/546,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/546#issuecomment-260869352,"Hi Rastislav,
in this pull request I updated some C++ classes and implemented the new action API.
The only problem is that I am not sure  how to implement the functions:
sr_val_build_str_data(sr_val_t *value, sr_type_t type, const char *format, ...);
sr_node_build_str_data(sr_node_t *node, sr_type_t type, const char *format, ...);
I was not clear for me how to implement it from the examples in the unit tests.
Can you explain me how to use this API.
Regards,
Mislav","Hi Mislav,
instead of doing:
char string[STR_SIZE];
snprintf(string, STR_SIZE, ""value-built-from-string-and-integers-%d-%d"", int1, int2);
sr_val_set_str_data(value, SR_STRING_T, string);
you can do:
sr_val_build_str_data(value, SR_STRING_T, ""value-built-from-string-and-integers-%d-%d"", int1, int2);
sr_node_build_str_data works similarly.
Hope it's clear now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,546,2016-11-15T18:57:08Z,2016-11-18T15:38:45Z,2016-11-18T15:38:45Z,MERGED,True,591,823,31,https://github.com/mislavn,Cpp update,18,[],https://github.com/sysrepo/sysrepo/pull/546,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/546#issuecomment-260996070,"Hi Rastislav,
in this pull request I updated some C++ classes and implemented the new action API.
The only problem is that I am not sure  how to implement the functions:
sr_val_build_str_data(sr_val_t *value, sr_type_t type, const char *format, ...);
sr_node_build_str_data(sr_node_t *node, sr_type_t type, const char *format, ...);
I was not clear for me how to implement it from the examples in the unit tests.
Can you explain me how to use this API.
Regards,
Mislav","I updated the pull request based on the comments from @milanlenco in the sysrepo-private email thread.
@milanlenco can you take a look at the language bindings examples.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,548,2016-11-18T08:59:46Z,2016-11-21T06:53:18Z,2016-11-21T06:53:18Z,MERGED,True,91,58,5,https://github.com/milanlenco,Print default flag.,1,[],https://github.com/sysrepo/sysrepo/pull/548,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/548,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,548,2016-11-18T08:59:46Z,2016-11-21T06:53:18Z,2016-11-21T06:53:18Z,MERGED,True,91,58,5,https://github.com/milanlenco,Print default flag.,1,[],https://github.com/sysrepo/sysrepo/pull/548,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/548#issuecomment-261482450,,"Current coverage is 85.56% (diff: 48.00%)

Merging #548 into devel will increase coverage by 0.05%

@@              devel       #548   diff @@
==========================================
  Files            29         29          
  Lines         19554      19560     +6   
  Methods         827        827          
  Messages          0          0          
  Branches       3366       3367     +1   
==========================================
+ Hits          16722      16736    +14   
+ Misses         2832       2824     -8   
  Partials          0          0          

Powered by Codecov. Last update 4edcce6...ca13cf7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,549,2016-11-18T15:34:15Z,2016-11-21T07:08:00Z,2016-11-21T12:40:49Z,MERGED,True,23,8,3,https://github.com/milanlenco,Search for module schema by name *recursively* (fix Netopeer issue #54),3,[],https://github.com/sysrepo/sysrepo/pull/549,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/549,Fix for: CESNET/netopeer2#54,Fix for: CESNET/netopeer2#54,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,549,2016-11-18T15:34:15Z,2016-11-21T07:08:00Z,2016-11-21T12:40:49Z,MERGED,True,23,8,3,https://github.com/milanlenco,Search for module schema by name *recursively* (fix Netopeer issue #54),3,[],https://github.com/sysrepo/sysrepo/pull/549,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/549#issuecomment-261565200,Fix for: CESNET/netopeer2#54,"Current coverage is 85.51% (diff: 93.33%)

Merging #549 into master will increase coverage by 0.01%

@@             master       #549   diff @@
==========================================
  Files            29         29          
  Lines         19548      19556     +8   
  Methods         827        827          
  Messages          0          0          
  Branches       3366       3369     +3   
==========================================
+ Hits          16715      16723     +8   
  Misses         2833       2833          
  Partials          0          0          

Powered by Codecov. Last update d1d061b...b854e42",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,552,2016-11-21T06:57:04Z,2016-11-21T07:26:22Z,2016-11-21T07:37:14Z,MERGED,True,1,1,1,https://github.com/jktjkt,tests: Fix a stack buffer overflow,1,[],https://github.com/sysrepo/sysrepo/pull/552,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/552,"When using the length argument for scanf's %s formatting option, the
target buffer needs to have space for the terminating null character as
well.
This fixes the first part of #551. The underflow, however, is still
there.","When using the length argument for scanf's %s formatting option, the
target buffer needs to have space for the terminating null character as
well.
This fixes the first part of #551. The underflow, however, is still
there.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,552,2016-11-21T06:57:04Z,2016-11-21T07:26:22Z,2016-11-21T07:37:14Z,MERGED,True,1,1,1,https://github.com/jktjkt,tests: Fix a stack buffer overflow,1,[],https://github.com/sysrepo/sysrepo/pull/552,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/552#issuecomment-261859884,"When using the length argument for scanf's %s formatting option, the
target buffer needs to have space for the terminating null character as
well.
This fixes the first part of #551. The underflow, however, is still
there.","Current coverage is 85.50% (diff: 100%)

Merging #552 into master will decrease coverage by <.01%

@@             master       #552   diff @@
==========================================
  Files            29         29          
  Lines         19548      19550     +2   
  Methods         827        827          
  Messages          0          0          
  Branches       3366       3366          
==========================================
+ Hits          16715      16716     +1   
- Misses         2833       2834     +1   
  Partials          0          0          

Powered by Codecov. Last update d1d061b...a4c16f6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,553,2016-11-21T11:41:39Z,2016-11-21T11:51:29Z,2016-11-21T11:51:30Z,MERGED,True,53,18,3,https://github.com/milanlenco,Enabling/Disabling already enabled/disabled feature shouldn't throw an error.,1,[],https://github.com/sysrepo/sysrepo/pull/553,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/553,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,553,2016-11-21T11:41:39Z,2016-11-21T11:51:29Z,2016-11-21T11:51:30Z,MERGED,True,53,18,3,https://github.com/milanlenco,Enabling/Disabling already enabled/disabled feature shouldn't throw an error.,1,[],https://github.com/sysrepo/sysrepo/pull/553,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/553#issuecomment-261916902,,"Current coverage is 85.57% (diff: 92.86%)

Merging #553 into devel will decrease coverage by <.01%

@@              devel       #553   diff @@
==========================================
  Files            29         29          
  Lines         19559      19570    +11   
  Methods         827        827          
  Messages          0          0          
  Branches       3367       3373     +6   
==========================================
+ Hits          16738      16747     +9   
- Misses         2821       2823     +2   
  Partials          0          0          

Powered by Codecov. Last update 092cf9b...df40271",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,554,2016-11-22T07:45:50Z,2016-11-22T08:52:36Z,2016-11-22T08:52:36Z,MERGED,True,2645,18,12,https://github.com/lukasmacko,Capability changed notification,11,[],https://github.com/sysrepo/sysrepo/pull/554,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/554,ietf-netcont-notifications yang model,ietf-netcont-notifications yang model,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,554,2016-11-22T07:45:50Z,2016-11-22T08:52:36Z,2016-11-22T08:52:36Z,MERGED,True,2645,18,12,https://github.com/lukasmacko,Capability changed notification,11,[],https://github.com/sysrepo/sysrepo/pull/554,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/554#issuecomment-262171164,ietf-netcont-notifications yang model,"Current coverage is 85.63% (diff: 97.67%)

Merging #554 into devel will increase coverage by 0.04%

@@              devel       #554   diff @@
==========================================
  Files            29         29          
  Lines         19574      19682   +108   
  Methods         827        832     +5   
  Messages          0          0          
  Branches       3373       3387    +14   
==========================================
+ Hits          16753      16854   +101   
- Misses         2821       2828     +7   
  Partials          0          0          

Powered by Codecov. Last update 1a3e17b...cc4a3d5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,555,2016-11-22T09:57:19Z,2016-11-22T10:59:03Z,2016-11-22T10:59:03Z,MERGED,True,22,20,3,https://github.com/lukasmacko,Fix SA issues - thread sanitizer,1,[],https://github.com/sysrepo/sysrepo/pull/555,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/555,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,555,2016-11-22T09:57:19Z,2016-11-22T10:59:03Z,2016-11-22T10:59:03Z,MERGED,True,22,20,3,https://github.com/lukasmacko,Fix SA issues - thread sanitizer,1,[],https://github.com/sysrepo/sysrepo/pull/555,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/555#issuecomment-262198643,,"Current coverage is 85.64% (diff: 94.74%)

Merging #555 into devel will decrease coverage by 0.03%

@@              devel       #555   diff @@
==========================================
  Files            29         29          
  Lines         19690      19693     +3   
  Methods         832        832          
  Messages          0          0          
  Branches       3390       3388     -2   
==========================================
- Hits          16868      16865     -3   
- Misses         2822       2828     +6   
  Partials          0          0          

Powered by Codecov. Last update 53f43ed...3542906",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,556,2016-11-22T10:15:23Z,2016-11-22T10:58:40Z,2020-01-15T07:49:34Z,MERGED,True,1,0,1,https://github.com/mislavn,cpp: bug fix for missing break,1,[],https://github.com/sysrepo/sysrepo/pull/556,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/556,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,556,2016-11-22T10:15:23Z,2016-11-22T10:58:40Z,2020-01-15T07:49:34Z,MERGED,True,1,0,1,https://github.com/mislavn,cpp: bug fix for missing break,1,[],https://github.com/sysrepo/sysrepo/pull/556,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/556#issuecomment-262202747,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Current coverage is 85.73% (diff: 100%)

Merging #556 into devel will increase coverage by 0.07%

@@              devel       #556   diff @@
==========================================
  Files            29         29          
  Lines         19690      19690          
  Methods         832        832          
  Messages          0          0          
  Branches       3390       3390          
==========================================
+ Hits          16868      16881    +13   
+ Misses         2822       2809    -13   
  Partials          0          0          

Powered by Codecov. Last update 53f43ed...ce908e5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,557,2016-11-22T17:58:05Z,2016-11-24T09:48:51Z,2020-01-15T07:49:45Z,MERGED,True,43,232,12,https://github.com/mislavn,Lua53,3,[],https://github.com/sysrepo/sysrepo/pull/557,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/557,I add Lua 5.3 support to swig and refactored the Lua bindings.,I add Lua 5.3 support to swig and refactored the Lua bindings.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,557,2016-11-22T17:58:05Z,2016-11-24T09:48:51Z,2020-01-15T07:49:45Z,MERGED,True,43,232,12,https://github.com/mislavn,Lua53,3,[],https://github.com/sysrepo/sysrepo/pull/557,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/557#issuecomment-262664377,I add Lua 5.3 support to swig and refactored the Lua bindings.,"Current coverage is 85.64% (diff: 100%)

Merging #557 into devel will decrease coverage by 0.10%

@@              devel       #557   diff @@
==========================================
  Files            29         29          
  Lines         19693      19694     +1   
  Methods         832        832          
  Messages          0          0          
  Branches       3388       3388          
==========================================
- Hits          16884      16866    -18   
- Misses         2809       2828    +19   
  Partials          0          0          

Powered by Codecov. Last update c0eb97f...511c1e6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,557,2016-11-22T17:58:05Z,2016-11-24T09:48:51Z,2020-01-15T07:49:45Z,MERGED,True,43,232,12,https://github.com/mislavn,Lua53,3,[],https://github.com/sysrepo/sysrepo/pull/557,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/557#issuecomment-262666408,I add Lua 5.3 support to swig and refactored the Lua bindings.,"The build failed on osx, it had the same problem as we had with swig 3.0.2, so I add a patch that sets swig to version 3.0.5 in brew.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,561,2016-11-23T12:48:45Z,2016-11-23T13:17:03Z,2016-11-23T13:17:03Z,MERGED,True,19,15,2,https://github.com/lukasmacko,Apply persist data of dependant modules only if the main module has data,3,[],https://github.com/sysrepo/sysrepo/pull/561,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/561,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,561,2016-11-23T12:48:45Z,2016-11-23T13:17:03Z,2016-11-23T13:17:03Z,MERGED,True,19,15,2,https://github.com/lukasmacko,Apply persist data of dependant modules only if the main module has data,3,[],https://github.com/sysrepo/sysrepo/pull/561,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/561#issuecomment-262508443,,"Current coverage is 85.47% (diff: 100%)

Merging #561 into master will increase coverage by <.01%

@@             master       #561   diff @@
==========================================
  Files            29         29          
  Lines         19556      19558     +2   
  Methods         827        827          
  Messages          0          0          
  Branches       3369       3371     +2   
==========================================
+ Hits          16714      16716     +2   
  Misses         2842       2842          
  Partials          0          0          

Powered by Codecov. Last update b3e2903...94c1395",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,562,2016-11-24T09:20:58Z,2016-11-24T09:29:51Z,2016-11-24T09:29:51Z,MERGED,True,106,77,3,https://github.com/lukasmacko,Applyin of persist file fix + test fix,4,[],https://github.com/sysrepo/sysrepo/pull/562,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/562,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,562,2016-11-24T09:20:58Z,2016-11-24T09:29:51Z,2016-11-24T09:29:51Z,MERGED,True,106,77,3,https://github.com/lukasmacko,Applyin of persist file fix + test fix,4,[],https://github.com/sysrepo/sysrepo/pull/562,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/562#issuecomment-262729487,,"Current coverage is 85.44% (diff: 100%)

Merging #562 into master will decrease coverage by <.01%

@@             master       #562   diff @@
==========================================
  Files            29         29          
  Lines         19558      19556     -2   
  Methods         827        827          
  Messages          0          0          
  Branches       3371       3369     -2   
==========================================
- Hits          16711      16709     -2   
  Misses         2847       2847          
  Partials          0          0          

Powered by Codecov. Last update e4a2c11...d534158",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,564,2016-11-24T16:09:03Z,2016-11-25T07:58:29Z,2016-11-26T09:06:39Z,MERGED,True,8,2,1,https://github.com/jktjkt,cmake: RelWithDebugInfo is not a debug build,1,[],https://github.com/sysrepo/sysrepo/pull/564,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/564,"The RelWithDebugInfo mode is intended to produce a release binary with
all optimizations, but with the debug info still present (maybe to be
moved to a -dbg package by Linux distros). This means that these build
configurations should use global, systemwide /etc/sysrepo/ for repo
storage.
A simple regex match for ""debug"" matches RelWithDebugInfo, too.
Testing:

no extra options -> debug due to manual override earlier in
CMakeLists.txt
RelWithDebugInfo -> release
Debug -> debug","The RelWithDebugInfo mode is intended to produce a release binary with
all optimizations, but with the debug info still present (maybe to be
moved to a -dbg package by Linux distros). This means that these build
configurations should use global, systemwide /etc/sysrepo/ for repo
storage.
A simple regex match for ""debug"" matches RelWithDebugInfo, too.
Testing:

no extra options -> debug due to manual override earlier in
CMakeLists.txt
RelWithDebugInfo -> release
Debug -> debug",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,564,2016-11-24T16:09:03Z,2016-11-25T07:58:29Z,2016-11-26T09:06:39Z,MERGED,True,8,2,1,https://github.com/jktjkt,cmake: RelWithDebugInfo is not a debug build,1,[],https://github.com/sysrepo/sysrepo/pull/564,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/564#issuecomment-262814374,"The RelWithDebugInfo mode is intended to produce a release binary with
all optimizations, but with the debug info still present (maybe to be
moved to a -dbg package by Linux distros). This means that these build
configurations should use global, systemwide /etc/sysrepo/ for repo
storage.
A simple regex match for ""debug"" matches RelWithDebugInfo, too.
Testing:

no extra options -> debug due to manual override earlier in
CMakeLists.txt
RelWithDebugInfo -> release
Debug -> debug","Current coverage is 85.70% (diff: 100%)

Merging #564 into devel will decrease coverage by 0.01%

@@              devel       #564   diff @@
==========================================
  Files            29         29          
  Lines         19695      19694     -1   
  Methods         832        832          
  Messages          0          0          
  Branches       3388       3388          
==========================================
- Hits          16880      16877     -3   
- Misses         2815       2817     +2   
  Partials          0          0          

Powered by Codecov. Last update cc7ae81...5e0e108",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,565,2016-11-24T18:03:46Z,2016-11-25T07:16:30Z,2016-11-26T09:08:32Z,MERGED,True,1,1,1,https://github.com/jktjkt,Ensure that `sysrepod` doesn't pretend to be `sysrepo-plugind`,1,[],https://github.com/sysrepo/sysrepo/pull/565,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/565,...in case anyone else wonders why exactly the logs show sysrepo-plugind without that daemon running :).,...in case anyone else wonders why exactly the logs show sysrepo-plugind without that daemon running :).,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,565,2016-11-24T18:03:46Z,2016-11-25T07:16:30Z,2016-11-26T09:08:32Z,MERGED,True,1,1,1,https://github.com/jktjkt,Ensure that `sysrepod` doesn't pretend to be `sysrepo-plugind`,1,[],https://github.com/sysrepo/sysrepo/pull/565,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/565#issuecomment-262829002,...in case anyone else wonders why exactly the logs show sysrepo-plugind without that daemon running :).,"Current coverage is 85.63% (diff: 100%)

Merging #565 into devel will decrease coverage by 0.08%

@@              devel       #565   diff @@
==========================================
  Files            29         29          
  Lines         19695      19692     -3   
  Methods         832        832          
  Messages          0          0          
  Branches       3388       3388          
==========================================
- Hits          16880      16862    -18   
- Misses         2815       2830    +15   
  Partials          0          0          

Powered by Codecov. Last update cc7ae81...e6a6b11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,566,2016-11-24T19:06:34Z,2016-11-25T11:59:45Z,2016-11-26T09:08:38Z,MERGED,True,8,0,1,https://github.com/jktjkt,Do not log error when client requests a node with no value and no default,1,[],https://github.com/sysrepo/sysrepo/pull/566,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/566,"I was debugging sr-netopeer2 interaction, and I got sidetracked by the
error messages in the log when I start sysrepo-plugind with the
sysrepo-plugin-ietf-system:
  sysrepo-sysrepo-plugind[16932]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16932]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 55 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 51 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=1/4, 1 requests in queue
  sysrepod[16854]: [DBG] (np_hello_notify:693) Sending HELLO notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock' @ 242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=3, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=4, count=0.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1330) Sending a notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1342) Reusing existing connection on fd=8 for the notification destination '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 110 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 110 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=242249669 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=4, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=5, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 30 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 30 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:460) get-item response received, processing.
> sysrepo-sysrepo-plugind[16932]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16932]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16932]: Setting hostname to default
  sysrepo-sysrepo-plugind[16932]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787621705472 will wait.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.

It is an XPath that points to a valid node, but that node is not set by
the data to any value. Here's how the plugin accesses it:
  rc = sr_get_item(session, ""/ietf-system:system/hostname"", &value);

Compare that to what happens when the code accesses an invalid (as in
""doesn't exist in the model"" at all) node:
  sysrepo-sysrepo-plugind[16910]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16910]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=196539111 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=196539111.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 59 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 55 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname/XXXX
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Schema node ""XXXX"" not found (/ietf-system:system/hostname/XXXX).
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Resolving XPath expression ""/ietf-system:system/hostname/XXXX"" failed.
  sysrepod[16854]: [WRN] (rp_dt_get_value_wrapper:898) Validation of xpath /ietf-system:system/hostname/XXXX was not successful
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=6, current count=1.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=7, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 135 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 135 bytes of data sent.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:460) get-item response received, processing.
  sysrepo-sysrepo-plugind[16910]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16910]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16910]: Setting hostname to default
  sysrepo-sysrepo-plugind[16910]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787638490880 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787638490880 will wait.

...where the relevant error messages, as reported by libyang, are only
shown as warnings.
This change at least makes the error message in case the node is valid,
but without any data, go away.
The log level of messages obtained by libyang should probably be
increased.","I was debugging sr-netopeer2 interaction, and I got sidetracked by the
error messages in the log when I start sysrepo-plugind with the
sysrepo-plugin-ietf-system:
  sysrepo-sysrepo-plugind[16932]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16932]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 55 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 51 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=1/4, 1 requests in queue
  sysrepod[16854]: [DBG] (np_hello_notify:693) Sending HELLO notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock' @ 242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=3, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=4, count=0.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1330) Sending a notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1342) Reusing existing connection on fd=8 for the notification destination '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 110 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 110 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=242249669 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=4, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=5, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 30 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 30 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:460) get-item response received, processing.
> sysrepo-sysrepo-plugind[16932]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16932]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16932]: Setting hostname to default
  sysrepo-sysrepo-plugind[16932]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787621705472 will wait.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.

It is an XPath that points to a valid node, but that node is not set by
the data to any value. Here's how the plugin accesses it:
  rc = sr_get_item(session, ""/ietf-system:system/hostname"", &value);

Compare that to what happens when the code accesses an invalid (as in
""doesn't exist in the model"" at all) node:
  sysrepo-sysrepo-plugind[16910]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16910]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=196539111 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=196539111.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 59 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 55 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname/XXXX
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Schema node ""XXXX"" not found (/ietf-system:system/hostname/XXXX).
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Resolving XPath expression ""/ietf-system:system/hostname/XXXX"" failed.
  sysrepod[16854]: [WRN] (rp_dt_get_value_wrapper:898) Validation of xpath /ietf-system:system/hostname/XXXX was not successful
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=6, current count=1.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=7, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 135 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 135 bytes of data sent.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:460) get-item response received, processing.
  sysrepo-sysrepo-plugind[16910]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16910]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16910]: Setting hostname to default
  sysrepo-sysrepo-plugind[16910]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787638490880 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787638490880 will wait.

...where the relevant error messages, as reported by libyang, are only
shown as warnings.
This change at least makes the error message in case the node is valid,
but without any data, go away.
The log level of messages obtained by libyang should probably be
increased.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,566,2016-11-24T19:06:34Z,2016-11-25T11:59:45Z,2016-11-26T09:08:38Z,MERGED,True,8,0,1,https://github.com/jktjkt,Do not log error when client requests a node with no value and no default,1,[],https://github.com/sysrepo/sysrepo/pull/566,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/566#issuecomment-262834416,"I was debugging sr-netopeer2 interaction, and I got sidetracked by the
error messages in the log when I start sysrepo-plugind with the
sysrepo-plugin-ietf-system:
  sysrepo-sysrepo-plugind[16932]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16932]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 55 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 51 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=1/4, 1 requests in queue
  sysrepod[16854]: [DBG] (np_hello_notify:693) Sending HELLO notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock' @ 242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=3, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=4, count=0.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1330) Sending a notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1342) Reusing existing connection on fd=8 for the notification destination '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 110 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 110 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=242249669 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=4, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=5, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 30 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 30 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:460) get-item response received, processing.
> sysrepo-sysrepo-plugind[16932]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16932]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16932]: Setting hostname to default
  sysrepo-sysrepo-plugind[16932]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787621705472 will wait.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.

It is an XPath that points to a valid node, but that node is not set by
the data to any value. Here's how the plugin accesses it:
  rc = sr_get_item(session, ""/ietf-system:system/hostname"", &value);

Compare that to what happens when the code accesses an invalid (as in
""doesn't exist in the model"" at all) node:
  sysrepo-sysrepo-plugind[16910]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16910]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=196539111 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=196539111.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 59 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 55 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname/XXXX
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Schema node ""XXXX"" not found (/ietf-system:system/hostname/XXXX).
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Resolving XPath expression ""/ietf-system:system/hostname/XXXX"" failed.
  sysrepod[16854]: [WRN] (rp_dt_get_value_wrapper:898) Validation of xpath /ietf-system:system/hostname/XXXX was not successful
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=6, current count=1.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=7, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 135 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 135 bytes of data sent.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:460) get-item response received, processing.
  sysrepo-sysrepo-plugind[16910]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16910]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16910]: Setting hostname to default
  sysrepo-sysrepo-plugind[16910]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787638490880 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787638490880 will wait.

...where the relevant error messages, as reported by libyang, are only
shown as warnings.
This change at least makes the error message in case the node is valid,
but without any data, go away.
The log level of messages obtained by libyang should probably be
increased.","Current coverage is 85.63% (diff: 100%)

Merging #566 into devel will decrease coverage by 0.01%

@@              devel       #566   diff @@
==========================================
  Files            29         29          
  Lines         19770      19774     +4   
  Methods         837        837          
  Messages          0          0          
  Branches       3412       3414     +2   
==========================================
+ Hits          16930      16932     +2   
- Misses         2840       2842     +2   
  Partials          0          0          

Powered by Codecov. Last update ace476d...b56bf0a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,566,2016-11-24T19:06:34Z,2016-11-25T11:59:45Z,2016-11-26T09:08:38Z,MERGED,True,8,0,1,https://github.com/jktjkt,Do not log error when client requests a node with no value and no default,1,[],https://github.com/sysrepo/sysrepo/pull/566,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/566#issuecomment-262937816,"I was debugging sr-netopeer2 interaction, and I got sidetracked by the
error messages in the log when I start sysrepo-plugind with the
sysrepo-plugin-ietf-system:
  sysrepo-sysrepo-plugind[16932]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16932]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 55 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 51 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=1/4, 1 requests in queue
  sysrepod[16854]: [DBG] (np_hello_notify:693) Sending HELLO notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock' @ 242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=3, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=4, count=0.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1330) Sending a notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1342) Reusing existing connection on fd=8 for the notification destination '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 110 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 110 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=242249669 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=4, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=5, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 30 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 30 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:460) get-item response received, processing.
> sysrepo-sysrepo-plugind[16932]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16932]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16932]: Setting hostname to default
  sysrepo-sysrepo-plugind[16932]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787621705472 will wait.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.

It is an XPath that points to a valid node, but that node is not set by
the data to any value. Here's how the plugin accesses it:
  rc = sr_get_item(session, ""/ietf-system:system/hostname"", &value);

Compare that to what happens when the code accesses an invalid (as in
""doesn't exist in the model"" at all) node:
  sysrepo-sysrepo-plugind[16910]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16910]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=196539111 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=196539111.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 59 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 55 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname/XXXX
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Schema node ""XXXX"" not found (/ietf-system:system/hostname/XXXX).
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Resolving XPath expression ""/ietf-system:system/hostname/XXXX"" failed.
  sysrepod[16854]: [WRN] (rp_dt_get_value_wrapper:898) Validation of xpath /ietf-system:system/hostname/XXXX was not successful
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=6, current count=1.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=7, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 135 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 135 bytes of data sent.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:460) get-item response received, processing.
  sysrepo-sysrepo-plugind[16910]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16910]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16910]: Setting hostname to default
  sysrepo-sysrepo-plugind[16910]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787638490880 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787638490880 will wait.

...where the relevant error messages, as reported by libyang, are only
shown as warnings.
This change at least makes the error message in case the node is valid,
but without any data, go away.
The log level of messages obtained by libyang should probably be
increased.","Ah thanks, done in b56bf0a. Updated.
I noticed that the logic in sr_get_items_iter is slightly different, it returns SR_ERR_OK when no matching items are found. My patch doesn't do that, it still returns SR_ERR_NOT_FOUND. Is it OK that the iterator version returns OK?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,566,2016-11-24T19:06:34Z,2016-11-25T11:59:45Z,2016-11-26T09:08:38Z,MERGED,True,8,0,1,https://github.com/jktjkt,Do not log error when client requests a node with no value and no default,1,[],https://github.com/sysrepo/sysrepo/pull/566,https://github.com/lukasmacko,4,https://github.com/sysrepo/sysrepo/pull/566#issuecomment-262941315,"I was debugging sr-netopeer2 interaction, and I got sidetracked by the
error messages in the log when I start sysrepo-plugind with the
sysrepo-plugin-ietf-system:
  sysrepo-sysrepo-plugind[16932]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16932]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 55 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 51 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=1/4, 1 requests in queue
  sysrepod[16854]: [DBG] (np_hello_notify:693) Sending HELLO notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock' @ 242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=3, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=4, count=0.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1330) Sending a notification to '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'.
  sysrepod[16854]: [DBG] (cm_out_notif_process:1342) Reusing existing connection on fd=8 for the notification destination '/var/run/sysrepo-subscriptions/ietf-system/16932.rcDfpt.sock'
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 110 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 110 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=242249669 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=242249669.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=4, current count=1.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=5, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 30 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 30 bytes of data sent.
  sysrepo-sysrepo-plugind[16932]: [DBG] (cl_request_process:460) get-item response received, processing.
> sysrepo-sysrepo-plugind[16932]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16932]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16932]: Setting hostname to default
  sysrepo-sysrepo-plugind[16932]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787621705472 will wait.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.

It is an XPath that points to a valid node, but that node is not set by
the data to any value. Here's how the plugin accesses it:
  rc = sr_get_item(session, ""/ietf-system:system/hostname"", &value);

Compare that to what happens when the code accesses an invalid (as in
""doesn't exist in the model"" at all) node:
  sysrepo-sysrepo-plugind[16910]: plugin initialized successfully
  sysrepo-sysrepo-plugind[16910]: *** retrieve_current_config: calling sr_get_item
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:416) Sending get-item request.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:438) get-item request sent, waiting for response.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1133) fd 11 readable
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1147) 110 bytes of data received on fd 11
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_fd_read_data:1157) fd 11 would block
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_conn_in_buff_process:1083) New message of size 106 bytes received.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:638) Received a notification for subscription id=196539111 (source address='/var/run/sysrepod.sock').
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_sm_notif_process:708) HELLO notification received on subscription id=196539111.
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1059) fd 7 readable
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1072) 59 bytes of data received on fd 7
  sysrepod[16854]: [DBG] (cm_conn_read_cb:1082) fd 7 would block
  sysrepod[16854]: [DBG] (cm_conn_in_buff_process:1011) New message of size 55 bytes received.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=8, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787630098176 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=9, count=0.
  sysrepod[16854]: [DBG] (rp_get_item_req_process:542) Processing get_item request.
  sysrepod[16854]: [INF] (rp_dt_get_value_wrapper:875) Get item request startup datastore, xpath: /ietf-system:system/hostname/XXXX
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:695) Loaded module ietf-system: mtime sec=1480004134 nsec=427130768
  sysrepod[16854]: [DBG] (dm_load_data_tree_file:722) Usage count ietf-system incremented (value=1)
  sysrepod[16854]: [INF] (dm_load_data_tree_file:726) Data file /etc/sysrepo/data/ietf-system.startup is empty
  sysrepod[16854]: [DBG] (dm_get_data_info:1772) Module ietf-system has been loaded
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Schema node ""XXXX"" not found (/ietf-system:system/hostname/XXXX).
  sysrepod[16854]: [DBG] (dm_ly_log_cb:851) libyang error: Resolving XPath expression ""/ietf-system:system/hostname/XXXX"" failed.
  sysrepod[16854]: [WRN] (rp_dt_get_value_wrapper:898) Validation of xpath /ietf-system:system/hostname/XXXX was not successful
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=6, current count=1.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787630098176 will wait.
  sysrepod[16854]: [DBG] (cm_msg_enqueue_cb:1668) New message enqueued into CM message queue.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=7, count=0.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:505) Sending 135 bytes of data.
  sysrepod[16854]: [DBG] (cm_conn_out_buff_flush:511) 135 bytes of data sent.
  sysrepo-sysrepo-plugind[16910]: [DBG] (cl_request_process:460) get-item response received, processing.
  sysrepo-sysrepo-plugind[16910]: [ERR] (sr_get_item:823) Error by processing of the request.
  sysrepo-sysrepo-plugind[16910]: sr_get_item res 3
  sysrepo-sysrepo-plugind[16910]: Setting hostname to default
  sysrepo-sysrepo-plugind[16910]: [INF] (main:461) Sysrepo plugin daemon initialized successfully.
  sysrepod[16854]: [DBG] (sr_cbuff_enqueue:461) Circular buffer enqueue to position=9, current count=1.
  sysrepod[16854]: [DBG] (rp_msg_process:3300) Threads: active=0/4, 1 requests in queue
  sysrepod[16854]: [DBG] (cm_delayed_request_cb:293) Delayed request sent to the Request Processor.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3028) Thread id=139787638490880 signaled.
  sysrepod[16854]: [DBG] (sr_cbuff_dequeue:477) Circular buffer dequeue, new buffer head=0, count=0.
  sysrepod[16854]: [DBG] (rp_unsubscribe_destination_req_process:2412) Processing unsubscribe destination request.
  sysrepod[16854]: [DBG] (rp_worker_thread_execute:3016) Thread id=139787638490880 will wait.

...where the relevant error messages, as reported by libyang, are only
shown as warnings.
This change at least makes the error message in case the node is valid,
but without any data, go away.
The log level of messages obtained by libyang should probably be
increased.",Yes it is ok. SR_ERR_NOT_FOUND is returned when sr_get_item_next is called.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,567,2016-11-25T08:27:45Z,2016-11-25T11:14:00Z,2016-11-25T11:14:00Z,MERGED,True,916,104,6,https://github.com/lukasmacko,State data subscription matching enahancements,4,[],https://github.com/sysrepo/sysrepo/pull/567,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/567,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,567,2016-11-25T08:27:45Z,2016-11-25T11:14:00Z,2016-11-25T11:14:00Z,MERGED,True,916,104,6,https://github.com/lukasmacko,State data subscription matching enahancements,4,[],https://github.com/sysrepo/sysrepo/pull/567,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/567#issuecomment-262905517,,"Current coverage is 85.66% (diff: 92.70%)

Merging #567 into devel will decrease coverage by 0.03%

@@              devel       #567   diff @@
==========================================
  Files            29         29          
  Lines         19695      19770    +75   
  Methods         832        837     +5   
  Messages          0          0          
  Branches       3388       3412    +24   
==========================================
+ Hits          16876      16935    +59   
- Misses         2819       2835    +16   
  Partials          0          0          

Powered by Codecov. Last update 7aac47f...2303124",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,568,2016-11-25T08:49:48Z,2016-11-25T11:13:28Z,2016-11-25T11:13:28Z,MERGED,True,3,1,2,https://github.com/lukasmacko,Fix crash without SR_MEM_MGMT,3,[],https://github.com/sysrepo/sysrepo/pull/568,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/568,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,568,2016-11-25T08:49:48Z,2016-11-25T11:13:28Z,2016-11-25T11:13:28Z,MERGED,True,3,1,2,https://github.com/lukasmacko,Fix crash without SR_MEM_MGMT,3,[],https://github.com/sysrepo/sysrepo/pull/568,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/568#issuecomment-262910309,,"Current coverage is 85.47% (diff: 100%)

Merging #568 into master will decrease coverage by 0.01%

@@             master       #568   diff @@
==========================================
  Files            29         29          
  Lines         19557      19562     +5   
  Methods         827        827          
  Messages          0          0          
  Branches       3369       3369          
==========================================
+ Hits          16717      16719     +2   
- Misses         2840       2843     +3   
  Partials          0          0          

Powered by Codecov. Last update f08cbff...e324482",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,572,2016-11-26T08:14:16Z,2016-11-29T08:00:00Z,2016-11-29T08:00:00Z,MERGED,True,10,12,2,https://github.com/fanchanghu,fix a bug that data in buffer is cleared when only part of a big message is received(EWOULDBLOCK occured during receiving the message).,2,[],https://github.com/sysrepo/sysrepo/pull/572,https://github.com/fanchanghu,1,https://github.com/sysrepo/sysrepo/pull/572,"As the current code, buff->pos is set to 0 when buff_pos == 0 and (buff_size - buff_pos) > 0, this will clear the received data in buffer when only part of a big message is received(EWOULDBLOCK occured during receiving the message).","As the current code, buff->pos is set to 0 when buff_pos == 0 and (buff_size - buff_pos) > 0, this will clear the received data in buffer when only part of a big message is received(EWOULDBLOCK occured during receiving the message).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,572,2016-11-26T08:14:16Z,2016-11-29T08:00:00Z,2016-11-29T08:00:00Z,MERGED,True,10,12,2,https://github.com/fanchanghu,fix a bug that data in buffer is cleared when only part of a big message is received(EWOULDBLOCK occured during receiving the message).,2,[],https://github.com/sysrepo/sysrepo/pull/572,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/572#issuecomment-263051104,"As the current code, buff->pos is set to 0 when buff_pos == 0 and (buff_size - buff_pos) > 0, this will clear the received data in buffer when only part of a big message is received(EWOULDBLOCK occured during receiving the message).","Current coverage is 85.53% (diff: 83.33%)

Merging #572 into master will increase coverage by 0.06%

@@             master       #572   diff @@
==========================================
  Files            29         29          
  Lines         19557      19561     +4   
  Methods         827        827          
  Messages          0          0          
  Branches       3369       3371     +2   
==========================================
+ Hits          16714      16730    +16   
+ Misses         2843       2831    -12   
  Partials          0          0          

Powered by Codecov. Last update 98a6515...c1eb7df",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,572,2016-11-26T08:14:16Z,2016-11-29T08:00:00Z,2016-11-29T08:00:00Z,MERGED,True,10,12,2,https://github.com/fanchanghu,fix a bug that data in buffer is cleared when only part of a big message is received(EWOULDBLOCK occured during receiving the message).,2,[],https://github.com/sysrepo/sysrepo/pull/572,https://github.com/fanchanghu,3,https://github.com/sysrepo/sysrepo/pull/572#issuecomment-263484841,"As the current code, buff->pos is set to 0 when buff_pos == 0 and (buff_size - buff_pos) > 0, this will clear the received data in buffer when only part of a big message is received(EWOULDBLOCK occured during receiving the message).","Hi,
I have changed it in cl_sm_conn_in_buff_process function too. But it is difficult to be reproduced, it only occurred accidentally in one of our test environment.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,573,2016-11-26T09:34:22Z,2016-11-28T11:27:14Z,2016-11-28T13:55:20Z,MERGED,True,42,18,2,https://github.com/jktjkt,C++: Use an extra class for all sysrepo exceptions,1,[],https://github.com/sysrepo/sysrepo/pull/573,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/573,"There is value in knowing that a given exception originated within the sysrepo -- especially in users' exception handlers which might get std::runtime_error instances from both SR and some unrelated libraries. And because of the way how the RTTI works in C++, the destructor has to
be out-of-line in a separate translation unit.
With the captured error_code, one could override std::exception::what and construct the string in that context. However, I chose not to do so because a std::runtime_error has no default constructor anyway, and I would have to come up with some string just to throw it away later.","There is value in knowing that a given exception originated within the sysrepo -- especially in users' exception handlers which might get std::runtime_error instances from both SR and some unrelated libraries. And because of the way how the RTTI works in C++, the destructor has to
be out-of-line in a separate translation unit.
With the captured error_code, one could override std::exception::what and construct the string in that context. However, I chose not to do so because a std::runtime_error has no default constructor anyway, and I would have to come up with some string just to throw it away later.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,573,2016-11-26T09:34:22Z,2016-11-28T11:27:14Z,2016-11-28T13:55:20Z,MERGED,True,42,18,2,https://github.com/jktjkt,C++: Use an extra class for all sysrepo exceptions,1,[],https://github.com/sysrepo/sysrepo/pull/573,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/573#issuecomment-263054153,"There is value in knowing that a given exception originated within the sysrepo -- especially in users' exception handlers which might get std::runtime_error instances from both SR and some unrelated libraries. And because of the way how the RTTI works in C++, the destructor has to
be out-of-line in a separate translation unit.
With the captured error_code, one could override std::exception::what and construct the string in that context. However, I chose not to do so because a std::runtime_error has no default constructor anyway, and I would have to come up with some string just to throw it away later.","Current coverage is 85.66% (diff: 100%)

Merging #573 into devel will decrease coverage by 0.05%

@@              devel       #573   diff @@
==========================================
  Files            29         29          
  Lines         19776      19778     +2   
  Methods         837        837          
  Messages          0          0          
  Branches       3414       3414          
==========================================
- Hits          16950      16941     -9   
- Misses         2826       2837    +11   
  Partials          0          0          

Powered by Codecov. Last update e6ef66c...ed72099",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,574,2016-11-28T00:05:41Z,2016-11-28T11:26:55Z,2020-01-15T07:49:45Z,MERGED,True,78,136,12,https://github.com/mislavn,Lua,5,[],https://github.com/sysrepo/sysrepo/pull/574,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/574,"Add a bugfix for lua and updated lua examples to use ""io.write"" instead ""print"".","Add a bugfix for lua and updated lua examples to use ""io.write"" instead ""print"".",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,574,2016-11-28T00:05:41Z,2016-11-28T11:26:55Z,2020-01-15T07:49:45Z,MERGED,True,78,136,12,https://github.com/mislavn,Lua,5,[],https://github.com/sysrepo/sysrepo/pull/574,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/574#issuecomment-263158475,"Add a bugfix for lua and updated lua examples to use ""io.write"" instead ""print"".","Current coverage is 85.73% (diff: 100%)

Merging #574 into devel will increase coverage by 0.02%

@@              devel       #574   diff @@
==========================================
  Files            29         29          
  Lines         19776      19776          
  Methods         837        837          
  Messages          0          0          
  Branches       3414       3414          
==========================================
+ Hits          16950      16954     +4   
+ Misses         2826       2822     -4   
  Partials          0          0          

Powered by Codecov. Last update e6ef66c...8f1e374",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,574,2016-11-28T00:05:41Z,2016-11-28T11:26:55Z,2020-01-15T07:49:45Z,MERGED,True,78,136,12,https://github.com/mislavn,Lua,5,[],https://github.com/sysrepo/sysrepo/pull/574,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/574#issuecomment-263167978,"Add a bugfix for lua and updated lua examples to use ""io.write"" instead ""print"".","I believe that this commit is redundant. You are using a regular operator new which always throws std::bad_alloc when it is unable to allocate memory.

OK. I will remove this commit and at other places in code where this occurs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,574,2016-11-28T00:05:41Z,2016-11-28T11:26:55Z,2020-01-15T07:49:45Z,MERGED,True,78,136,12,https://github.com/mislavn,Lua,5,[],https://github.com/sysrepo/sysrepo/pull/574,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/574#issuecomment-263168146,"Add a bugfix for lua and updated lua examples to use ""io.write"" instead ""print"".","Oh, apparently GH comments don't apply to individual commits, but to the entire PL. I like 58dd0c2 .",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,574,2016-11-28T00:05:41Z,2016-11-28T11:26:55Z,2020-01-15T07:49:45Z,MERGED,True,78,136,12,https://github.com/mislavn,Lua,5,[],https://github.com/sysrepo/sysrepo/pull/574,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/574#issuecomment-263236970,"Add a bugfix for lua and updated lua examples to use ""io.write"" instead ""print"".",I also removed the memory check in the lua and python callbacks.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,575,2016-11-28T08:23:02Z,2016-11-28T08:43:01Z,2016-11-28T08:43:01Z,MERGED,True,5,1,2,https://github.com/lukasmacko,Reset dp_wait req counter,3,[],https://github.com/sysrepo/sysrepo/pull/575,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/575,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,575,2016-11-28T08:23:02Z,2016-11-28T08:43:01Z,2016-11-28T08:43:01Z,MERGED,True,5,1,2,https://github.com/lukasmacko,Reset dp_wait req counter,3,[],https://github.com/sysrepo/sysrepo/pull/575,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/575#issuecomment-263211453,,"Current coverage is 85.48% (diff: 75.00%)

Merging #575 into master will increase coverage by 0.01%

@@             master       #575   diff @@
==========================================
  Files            29         29          
  Lines         19557      19562     +5   
  Methods         827        827          
  Messages          0          0          
  Branches       3369       3369          
==========================================
+ Hits          16714      16721     +7   
+ Misses         2843       2841     -2   
  Partials          0          0          

Powered by Codecov. Last update 98a6515...eaeb1ff",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,577,2016-11-28T08:59:43Z,2016-11-28T09:07:34Z,2016-11-28T09:07:34Z,MERGED,True,7,1,3,https://github.com/lukasmacko,Merge bugfixes to devel,9,[],https://github.com/sysrepo/sysrepo/pull/577,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/577,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,578,2016-11-28T10:24:37Z,2016-11-28T11:38:53Z,2016-11-28T11:38:53Z,MERGED,True,237,31,17,https://github.com/rastislavs,Anyxml/anydata support,12,[],https://github.com/sysrepo/sysrepo/pull/578,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/578,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,580,2016-11-28T14:08:11Z,2016-11-28T14:43:01Z,2016-11-28T14:43:01Z,MERGED,True,23,5,5,https://github.com/rastislavs,fix #576,3,[],https://github.com/sysrepo/sysrepo/pull/580,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/580,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,580,2016-11-28T14:08:11Z,2016-11-28T14:43:01Z,2016-11-28T14:43:01Z,MERGED,True,23,5,5,https://github.com/rastislavs,fix #576,3,[],https://github.com/sysrepo/sysrepo/pull/580,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/580#issuecomment-263282092,,"Current coverage is 85.59% (diff: 100%)

Merging #580 into master will increase coverage by 0.16%

@@             master       #580   diff @@
==========================================
  Files            29         29          
  Lines         19561      19563     +2   
  Methods         827        827          
  Messages          0          0          
  Branches       3369       3369          
==========================================
+ Hits          16710      16743    +33   
+ Misses         2851       2820    -31   
  Partials          0          0          

Powered by Codecov. Last update f6b8668...26a8347",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,583,2016-11-29T04:43:51Z,2016-11-29T08:28:23Z,2016-11-29T08:28:39Z,MERGED,True,20,1,4,https://github.com/WinterZheng,Add support to sysrepo for rfc6020 uses statement,3,[],https://github.com/sysrepo/sysrepo/pull/583,https://github.com/WinterZheng,1,https://github.com/sysrepo/sysrepo/pull/583,Provide support for the uses statement which is used to reference a “grouping” definition.  See https://tools.ietf.org/html/rfc6020#section-7.12 for more details.,Provide support for the uses statement which is used to reference a “grouping” definition.  See https://tools.ietf.org/html/rfc6020#section-7.12 for more details.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,583,2016-11-29T04:43:51Z,2016-11-29T08:28:23Z,2016-11-29T08:28:39Z,MERGED,True,20,1,4,https://github.com/WinterZheng,Add support to sysrepo for rfc6020 uses statement,3,[],https://github.com/sysrepo/sysrepo/pull/583,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/583#issuecomment-263475637,Provide support for the uses statement which is used to reference a “grouping” definition.  See https://tools.ietf.org/html/rfc6020#section-7.12 for more details.,"Current coverage is 85.45% (diff: 100%)

Merging #583 into master will decrease coverage by 0.14%

@@             master       #583   diff @@
==========================================
  Files            29         29          
  Lines         19561      19562     +1   
  Methods         827        827          
  Messages          0          0          
  Branches       3369       3369          
==========================================
- Hits          16742      16716    -26   
- Misses         2819       2846    +27   
  Partials          0          0          

Powered by Codecov. Last update 8296fe1...3bdc696",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,583,2016-11-29T04:43:51Z,2016-11-29T08:28:23Z,2016-11-29T08:28:39Z,MERGED,True,20,1,4,https://github.com/WinterZheng,Add support to sysrepo for rfc6020 uses statement,3,[],https://github.com/sysrepo/sysrepo/pull/583,https://github.com/milanlenco,3,https://github.com/sysrepo/sysrepo/pull/583#issuecomment-263506837,Provide support for the uses statement which is used to reference a “grouping” definition.  See https://tools.ietf.org/html/rfc6020#section-7.12 for more details.,Thanks for the fix!,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,585,2016-11-29T12:52:40Z,2016-11-29T13:10:00Z,2016-11-29T13:10:00Z,MERGED,True,146,23,8,https://github.com/rastislavs,"bugfixes for #285, #286, #584, #559",12,[],https://github.com/sysrepo/sysrepo/pull/585,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/585,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,585,2016-11-29T12:52:40Z,2016-11-29T13:10:00Z,2016-11-29T13:10:00Z,MERGED,True,146,23,8,https://github.com/rastislavs,"bugfixes for #285, #286, #584, #559",12,[],https://github.com/sysrepo/sysrepo/pull/585,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/585#issuecomment-263564944,,"Current coverage is 85.55% (diff: 72.00%)

Merging #585 into master will decrease coverage by 0.04%

@@             master       #585   diff @@
==========================================
  Files            29         29          
  Lines         19561      19568     +7   
  Methods         827        827          
  Messages          0          0          
  Branches       3371       3373     +2   
==========================================
- Hits          16743      16741     -2   
- Misses         2818       2827     +9   
  Partials          0          0          

Powered by Codecov. Last update 70218ce...6306a69",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,588,2016-11-30T10:07:55Z,2016-11-30T13:01:39Z,2016-11-30T13:01:39Z,MERGED,True,3595,48,17,https://github.com/milanlenco,NACM YANG module processing,11,[],https://github.com/sysrepo/sysrepo/pull/588,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/588,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,588,2016-11-30T10:07:55Z,2016-11-30T13:01:39Z,2016-11-30T13:01:39Z,MERGED,True,3595,48,17,https://github.com/milanlenco,NACM YANG module processing,11,[],https://github.com/sysrepo/sysrepo/pull/588,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/588#issuecomment-263866945,,"Current coverage is 85.87% (diff: 89.83%)

Merging #588 into devel will increase coverage by 0.12%

@@              devel       #588   diff @@
==========================================
  Files            29         30     +1   
  Lines         19892      20413   +521   
  Methods         838        864    +26   
  Messages          0          0          
  Branches       3440       3545   +105   
==========================================
+ Hits          17056      17528   +472   
- Misses         2836       2885    +49   
  Partials          0          0          

Powered by Codecov. Last update 71caa4e...e9390de",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,589,2016-11-30T11:27:52Z,2016-11-30T12:54:40Z,2016-11-30T12:54:40Z,MERGED,True,10,6,3,https://github.com/rastislavs,sysrepod / sysrepo-plugind fixes,4,[],https://github.com/sysrepo/sysrepo/pull/589,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/589,fied #586,fied #586,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,589,2016-11-30T11:27:52Z,2016-11-30T12:54:40Z,2016-11-30T12:54:40Z,MERGED,True,10,6,3,https://github.com/rastislavs,sysrepod / sysrepo-plugind fixes,4,[],https://github.com/sysrepo/sysrepo/pull/589,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/589#issuecomment-263866197,fied #586,"Current coverage is 85.49% (diff: 37.50%)

Merging #589 into master will decrease coverage by 0.09%

@@             master       #589   diff @@
==========================================
  Files            29         29          
  Lines         19570      19572     +2   
  Methods         827        827          
  Messages          0          0          
  Branches       3373       3373          
==========================================
- Hits          16749      16733    -16   
- Misses         2821       2839    +18   
  Partials          0          0          

Powered by Codecov. Last update 8dbe846...d4d85af",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,590,2016-11-30T14:46:21Z,2016-12-01T08:59:17Z,2020-01-15T07:49:33Z,MERGED,True,212,138,18,https://github.com/mislavn,Bindings update,8,[],https://github.com/sysrepo/sysrepo/pull/590,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/590,"In this pull request I add the Deleter class to Session so sr_session_stop is not called in the sr_module_change_cb function callback (this applies to all of the language bindings).
Also I add return code support for all language binding callbacks.
So now you can have ""return sr.SR_ERR_NOMEM"" in all of the language bindings for functions which have int in their type signature.","In this pull request I add the Deleter class to Session so sr_session_stop is not called in the sr_module_change_cb function callback (this applies to all of the language bindings).
Also I add return code support for all language binding callbacks.
So now you can have ""return sr.SR_ERR_NOMEM"" in all of the language bindings for functions which have int in their type signature.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,590,2016-11-30T14:46:21Z,2016-12-01T08:59:17Z,2020-01-15T07:49:33Z,MERGED,True,212,138,18,https://github.com/mislavn,Bindings update,8,[],https://github.com/sysrepo/sysrepo/pull/590,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/590#issuecomment-264021865,"In this pull request I add the Deleter class to Session so sr_session_stop is not called in the sr_module_change_cb function callback (this applies to all of the language bindings).
Also I add return code support for all language binding callbacks.
So now you can have ""return sr.SR_ERR_NOMEM"" in all of the language bindings for functions which have int in their type signature.","I add a new commit 7fff89e which simplifies the lua bindings, it uses the same name for lua5.1, lua5.2 and lua5.3 bindings.
The bug Joan reported on the sysrepo mailing list should be fixed, I could not replicate his bug but it should not be possible any more with the commit: eec4931",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,592,2016-12-01T07:32:45Z,2016-12-01T08:58:30Z,2016-12-01T08:58:30Z,MERGED,True,644,54,12,https://github.com/lukasmacko,State data enhancements,9,[],https://github.com/sysrepo/sysrepo/pull/592,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/592,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,592,2016-12-01T07:32:45Z,2016-12-01T08:58:30Z,2016-12-01T08:58:30Z,MERGED,True,644,54,12,https://github.com/lukasmacko,State data enhancements,9,[],https://github.com/sysrepo/sysrepo/pull/592,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/592#issuecomment-264107463,,"Current coverage is 85.55% (diff: 62.05%)

Merging #592 into devel will decrease coverage by 0.28%

@@              devel       #592   diff @@
==========================================
  Files            30         30          
  Lines         20418      20590   +172   
  Methods         864        871     +7   
  Messages          0          0          
  Branches       3545       3582    +37   
==========================================
+ Hits          17526      17615    +89   
- Misses         2892       2975    +83   
  Partials          0          0          

Powered by Codecov. Last update 2502cd5...95eb377",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,593,2016-12-02T13:03:20Z,2016-12-05T07:35:56Z,2016-12-05T07:35:56Z,MERGED,True,38,11,3,https://github.com/rastislavs,"sysrepod - require sysrepod, start it automatically",3,[],https://github.com/sysrepo/sysrepo/pull/593,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/593,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,593,2016-12-02T13:03:20Z,2016-12-05T07:35:56Z,2016-12-05T07:35:56Z,MERGED,True,38,11,3,https://github.com/rastislavs,"sysrepod - require sysrepod, start it automatically",3,[],https://github.com/sysrepo/sysrepo/pull/593,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/593#issuecomment-264510332,,"Current coverage is 85.62% (diff: 100%)

Merging #593 into devel will increase coverage by 0.05%

@@              devel       #593   diff @@
==========================================
  Files            30         30          
  Lines         20592      20594     +2   
  Methods         871        871          
  Messages          0          0          
  Branches       3582       3584     +2   
==========================================
+ Hits          17620      17633    +13   
+ Misses         2972       2961    -11   
  Partials          0          0          

Powered by Codecov. Last update 6c3b505...0a6af5e",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,597,2016-12-03T06:45:12Z,2016-12-03T11:53:33Z,2016-12-03T11:54:16Z,CLOSED,False,23,3,2,https://github.com/morganzhh,Module enable can't enable sub nodes with uses statement,1,[],https://github.com/sysrepo/sysrepo/pull/597,https://github.com/morganzhh,1,https://github.com/sysrepo/sysrepo/pull/597,"For RFC6020 section 7.12.1 support, pull request#583 solve the issue of sysrepoctl.
Here is another issue, if the 'uses' statement is directly under a 'module', function dm_enable_module_running will ignore it and the result of this is, nodes under that 'uses' statement will not be enabled, hence can not be edited.","For RFC6020 section 7.12.1 support, pull request#583 solve the issue of sysrepoctl.
Here is another issue, if the 'uses' statement is directly under a 'module', function dm_enable_module_running will ignore it and the result of this is, nodes under that 'uses' statement will not be enabled, hence can not be edited.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,597,2016-12-03T06:45:12Z,2016-12-03T11:53:33Z,2016-12-03T11:54:16Z,CLOSED,False,23,3,2,https://github.com/morganzhh,Module enable can't enable sub nodes with uses statement,1,[],https://github.com/sysrepo/sysrepo/pull/597,https://github.com/morganzhh,2,https://github.com/sysrepo/sysrepo/pull/597#issuecomment-264634785,"For RFC6020 section 7.12.1 support, pull request#583 solve the issue of sysrepoctl.
Here is another issue, if the 'uses' statement is directly under a 'module', function dm_enable_module_running will ignore it and the result of this is, nodes under that 'uses' statement will not be enabled, hence can not be edited.","Some merge error from my local repository, my mistake, will open a new one",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,598,2016-12-03T13:02:18Z,2016-12-05T07:42:25Z,2016-12-05T07:42:45Z,MERGED,True,30,12,2,https://github.com/morganzhh,Module enable can't enable sub nodes with uses statement,1,[],https://github.com/sysrepo/sysrepo/pull/598,https://github.com/morganzhh,1,https://github.com/sysrepo/sysrepo/pull/598,"For RFC6020 section 7.12.1 support, pull request#583 solve the issue of sysrepoctl.
Here is another issue, if the 'uses' statement is directly under a 'module', function dm_enable_module_running will ignore it and the result of this is, nodes under that 'uses' statement will not be enabled, hence can not be edited.","For RFC6020 section 7.12.1 support, pull request#583 solve the issue of sysrepoctl.
Here is another issue, if the 'uses' statement is directly under a 'module', function dm_enable_module_running will ignore it and the result of this is, nodes under that 'uses' statement will not be enabled, hence can not be edited.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,598,2016-12-03T13:02:18Z,2016-12-05T07:42:25Z,2016-12-05T07:42:45Z,MERGED,True,30,12,2,https://github.com/morganzhh,Module enable can't enable sub nodes with uses statement,1,[],https://github.com/sysrepo/sysrepo/pull/598,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/598#issuecomment-264638281,"For RFC6020 section 7.12.1 support, pull request#583 solve the issue of sysrepoctl.
Here is another issue, if the 'uses' statement is directly under a 'module', function dm_enable_module_running will ignore it and the result of this is, nodes under that 'uses' statement will not be enabled, hence can not be edited.","Current coverage is 85.58% (diff: 85.71%)

Merging #598 into master will increase coverage by 0.05%

@@             master       #598   diff @@
==========================================
  Files            29         29          
  Lines         19572      19571     -1   
  Methods         827        827          
  Messages          0          0          
  Branches       3373       3373          
==========================================
+ Hits          16739      16748     +9   
+ Misses         2833       2823    -10   
  Partials          0          0          

Powered by Codecov. Last update 6e6624a...82b9801",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,598,2016-12-03T13:02:18Z,2016-12-05T07:42:25Z,2016-12-05T07:42:45Z,MERGED,True,30,12,2,https://github.com/morganzhh,Module enable can't enable sub nodes with uses statement,1,[],https://github.com/sysrepo/sysrepo/pull/598,https://github.com/lukasmacko,3,https://github.com/sysrepo/sysrepo/pull/598#issuecomment-264786733,"For RFC6020 section 7.12.1 support, pull request#583 solve the issue of sysrepoctl.
Here is another issue, if the 'uses' statement is directly under a 'module', function dm_enable_module_running will ignore it and the result of this is, nodes under that 'uses' statement will not be enabled, hence can not be edited.",Thanks!,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,599,2016-12-05T09:38:59Z,2016-12-05T09:46:51Z,2016-12-05T09:46:51Z,MERGED,True,1,1,1,https://github.com/rastislavs,Use 644 permissions for nacm module,1,[],https://github.com/sysrepo/sysrepo/pull/599,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/599,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,599,2016-12-05T09:38:59Z,2016-12-05T09:46:51Z,2016-12-05T09:46:51Z,MERGED,True,1,1,1,https://github.com/rastislavs,Use 644 permissions for nacm module,1,[],https://github.com/sysrepo/sysrepo/pull/599,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/599#issuecomment-264809347,,"Current coverage is 85.69% (diff: 100%)

Merging #599 into devel will increase coverage by 0.07%

@@              devel       #599   diff @@
==========================================
  Files            30         30          
  Lines         20592      20592          
  Methods         871        871          
  Messages          0          0          
  Branches       3584       3584          
==========================================
+ Hits          17631      17645    +14   
+ Misses         2961       2947    -14   
  Partials          0          0          

Powered by Codecov. Last update fa1b300...43ebefe",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,601,2016-12-05T11:20:00Z,2016-12-05T12:02:40Z,2016-12-05T12:02:40Z,MERGED,True,583,19,9,https://github.com/lukasmacko,sr_val_t to string/buffer,6,[],https://github.com/sysrepo/sysrepo/pull/601,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/601,Fix #284,Fix #284,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,601,2016-12-05T11:20:00Z,2016-12-05T12:02:40Z,2016-12-05T12:02:40Z,MERGED,True,583,19,9,https://github.com/lukasmacko,sr_val_t to string/buffer,6,[],https://github.com/sysrepo/sysrepo/pull/601,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/601#issuecomment-264830766,Fix #284,"Current coverage is 85.76% (diff: 98.76%)

Merging #601 into devel will increase coverage by 0.06%

@@              devel       #601   diff @@
==========================================
  Files            30         30          
  Lines         20593      20740   +147   
  Methods         871        873     +2   
  Messages          0          0          
  Branches       3584       3604    +20   
==========================================
+ Hits          17648      17787   +139   
- Misses         2945       2953     +8   
  Partials          0          0          

Powered by Codecov. Last update 20a9b25...5bf0b69",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,602,2016-12-05T11:42:57Z,2016-12-05T12:02:48Z,2016-12-05T13:13:41Z,MERGED,True,6,1,1,https://github.com/jktjkt,tests: Disable valgrind when any sanitizer is active,1,[],https://github.com/sysrepo/sysrepo/pull/602,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/602,"These tools do not really play well with each other, so let's save our
developers a few keystrokes and do the right thing out-of-box.
This won't catch special cases like forcing these sanitizers through the
compiler's built-in specs; I don't think that is a problem.","These tools do not really play well with each other, so let's save our
developers a few keystrokes and do the right thing out-of-box.
This won't catch special cases like forcing these sanitizers through the
compiler's built-in specs; I don't think that is a problem.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,602,2016-12-05T11:42:57Z,2016-12-05T12:02:48Z,2016-12-05T13:13:41Z,MERGED,True,6,1,1,https://github.com/jktjkt,tests: Disable valgrind when any sanitizer is active,1,[],https://github.com/sysrepo/sysrepo/pull/602,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/602#issuecomment-264835494,"These tools do not really play well with each other, so let's save our
developers a few keystrokes and do the right thing out-of-box.
This won't catch special cases like forcing these sanitizers through the
compiler's built-in specs; I don't think that is a problem.","Current coverage is 85.65% (diff: 100%)

Merging #602 into devel will decrease coverage by 0.05%

@@              devel       #602   diff @@
==========================================
  Files            30         30          
  Lines         20593      20593          
  Methods         871        871          
  Messages          0          0          
  Branches       3584       3584          
==========================================
- Hits          17648      17637    -11   
- Misses         2945       2956    +11   
  Partials          0          0          

Powered by Codecov. Last update 20a9b25...9d732c6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,606,2016-12-06T14:42:26Z,2016-12-07T07:13:11Z,2016-12-07T07:13:11Z,MERGED,True,254,19,2,https://github.com/rastislavs,Documentation updates,2,[],https://github.com/sysrepo/sysrepo/pull/606,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/606,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,606,2016-12-06T14:42:26Z,2016-12-07T07:13:11Z,2016-12-07T07:13:11Z,MERGED,True,254,19,2,https://github.com/rastislavs,Documentation updates,2,[],https://github.com/sysrepo/sysrepo/pull/606,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/606#issuecomment-265185749,,"Thanks for the docs, they read quite well :). I was thinking about using something ""less obvious"" for the shell escaping and the system() call, but in the end it probably doesn't matter in this context.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,607,2016-12-08T02:02:51Z,2016-12-08T08:44:35Z,2016-12-08T08:44:35Z,CLOSED,False,19,19,5,https://github.com/morganzhh,Let C++ callbacks also have reture values,2,[],https://github.com/sysrepo/sysrepo/pull/607,https://github.com/morganzhh,1,https://github.com/sysrepo/sysrepo/pull/607,"We are using Sysrepo C++ interface, in which, those c++ callbacks cannot take any return values, it would be better that callbacks could also return OK/Failed to all the change events, especially on 'Verify' event.","We are using Sysrepo C++ interface, in which, those c++ callbacks cannot take any return values, it would be better that callbacks could also return OK/Failed to all the change events, especially on 'Verify' event.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,607,2016-12-08T02:02:51Z,2016-12-08T08:44:35Z,2016-12-08T08:44:35Z,CLOSED,False,19,19,5,https://github.com/morganzhh,Let C++ callbacks also have reture values,2,[],https://github.com/sysrepo/sysrepo/pull/607,https://github.com/rastislavs,2,https://github.com/sysrepo/sysrepo/pull/607#issuecomment-265676176,"We are using Sysrepo C++ interface, in which, those c++ callbacks cannot take any return values, it would be better that callbacks could also return OK/Failed to all the change events, especially on 'Verify' event.",@mislavn will this work with all language bindings?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,607,2016-12-08T02:02:51Z,2016-12-08T08:44:35Z,2016-12-08T08:44:35Z,CLOSED,False,19,19,5,https://github.com/morganzhh,Let C++ callbacks also have reture values,2,[],https://github.com/sysrepo/sysrepo/pull/607,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/607#issuecomment-265685115,"We are using Sysrepo C++ interface, in which, those c++ callbacks cannot take any return values, it would be better that callbacks could also return OK/Failed to all the change events, especially on 'Verify' event.",already implemented in #590 (devel branch),True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,608,2016-12-08T11:17:27Z,2016-12-08T11:29:53Z,2016-12-08T13:49:41Z,MERGED,True,47,25,11,https://github.com/lukasmacko,Migrate to new libyang,5,[],https://github.com/sysrepo/sysrepo/pull/608,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/608,"Note: identity that is used outside of the module where it is defined must be qualified by module name
Fix #603","Note: identity that is used outside of the module where it is defined must be qualified by module name
Fix #603",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,608,2016-12-08T11:17:27Z,2016-12-08T11:29:53Z,2016-12-08T13:49:41Z,MERGED,True,47,25,11,https://github.com/lukasmacko,Migrate to new libyang,5,[],https://github.com/sysrepo/sysrepo/pull/608,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/608#issuecomment-265718082,"Note: identity that is used outside of the module where it is defined must be qualified by module name
Fix #603","Current coverage is 85.49% (diff: 100%)

No coverage report found for master at 3ecdb00.


Powered by Codecov. Last update 3ecdb00...efbdee6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,608,2016-12-08T11:17:27Z,2016-12-08T11:29:53Z,2016-12-08T13:49:41Z,MERGED,True,47,25,11,https://github.com/lukasmacko,Migrate to new libyang,5,[],https://github.com/sysrepo/sysrepo/pull/608,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/608#issuecomment-265743724,"Note: identity that is used outside of the module where it is defined must be qualified by module name
Fix #603","FYI, it is necessary to nuke the repository, otherwise make install still fails due to the already-existing startup files:
$ LD_LIBRARY_PATH=/opt/nc/lib64 /home/jkt/work/prog/sysrepo/build/src/sysrepocfg --import=/home/jkt/work/prog/sysrepo/examples/yang/ietf-interfaces.data.xml --datastore=startup --format=xml -l 2 ietf-interfaces
[WRN] (sr_connect:423) Sysrepo daemon not detected. Connecting to local Sysrepo Engine.
[WRN] (srcfg_ly_log_cb:82) libyang: Failed to resolve identityref ""ethernetCsmacd"". (/ietf-interfaces:interfaces/interface[name='eth0']/type)
[ERR] (dm_load_data_tree_file:705) Parsing data tree from file /home/jkt/work/prog/sysrepo/build/repository/data/ietf-interfaces.startup failed: Failed to resolve identityref ""ethernetCsmacd"".
[ERR] (dm_get_data_info:1819) Getting data tree for ietf-interfaces failed.
[ERR] (rp_dt_prepare_data:1157) Getting data tree failed (4) for xpath '/ietf-interfaces:*//.'
[ERR] (rp_dt_get_values_wrapper_with_opts:1310) rp_dt_prepare_data failed
[ERR] (rp_dt_get_values_wrapper_with_opts:1339) Copying values from nodes failed for xpath '/ietf-interfaces:*//.'
[ERR] (rp_get_items_req_process:685) Get items failed for '/ietf-interfaces:*//.', session id=1673591058.
[ERR] (cl_request_process:487) Error by processing of the get-items request (session id=1673591058): Sysrepo-internal error.
[ERR] (sr_get_items_iter:926) Sending get_items request failed '/ietf-interfaces:*//.'
[ERR] (srcfg_get_module_data:243) Error by sr_get_items_iter: Sysrepo-internal error
Errors were encountered during importing. Cancelling the operation.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,609,2016-12-08T11:38:01Z,2016-12-08T11:47:50Z,2016-12-08T11:47:50Z,MERGED,True,134,29,4,https://github.com/rastislavs,fix #605 + INSTALL.md updates,8,[],https://github.com/sysrepo/sysrepo/pull/609,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/609,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,609,2016-12-08T11:38:01Z,2016-12-08T11:47:50Z,2016-12-08T11:47:50Z,MERGED,True,134,29,4,https://github.com/rastislavs,fix #605 + INSTALL.md updates,8,[],https://github.com/sysrepo/sysrepo/pull/609,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/609#issuecomment-265721812,,"Current coverage is 85.63% (diff: 100%)

Merging #609 into master will increase coverage by 0.14%

@@             master       #609   diff @@
==========================================
  Files            29         29          
  Lines         19579      19580     +1   
  Methods         828        828          
  Messages          0          0          
  Branches       3374       3374          
==========================================
+ Hits          16738      16767    +29   
+ Misses         2841       2813    -28   
  Partials          0          0          

Powered by Codecov. Last update 73f4001...ee0574c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,610,2016-12-08T11:57:47Z,2016-12-08T12:15:33Z,2016-12-08T12:15:33Z,MERGED,True,417,131,14,https://github.com/lukasmacko,sr_set_item_str,3,[],https://github.com/sysrepo/sysrepo/pull/610,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/610,Fix #591,Fix #591,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,610,2016-12-08T11:57:47Z,2016-12-08T12:15:33Z,2016-12-08T12:15:33Z,MERGED,True,417,131,14,https://github.com/lukasmacko,sr_set_item_str,3,[],https://github.com/sysrepo/sysrepo/pull/610,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/610#issuecomment-265725751,Fix #591,"Current coverage is 85.85% (diff: 95.35%)

Merging #610 into devel will decrease coverage by 0.03%

@@              devel       #610   diff @@
==========================================
  Files            30         30          
  Lines         20752      20851    +99   
  Methods         874        879     +5   
  Messages          0          0          
  Branches       3605       3610     +5   
==========================================
+ Hits          17822      17900    +78   
- Misses         2930       2951    +21   
  Partials          0          0          

Powered by Codecov. Last update 33ad697...54f1846",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,612,2016-12-08T12:14:16Z,2016-12-08T12:23:22Z,2016-12-08T12:23:22Z,MERGED,True,3,3,2,https://github.com/lukasmacko,Fix SA,2,[],https://github.com/sysrepo/sysrepo/pull/612,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/612,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,612,2016-12-08T12:14:16Z,2016-12-08T12:23:22Z,2016-12-08T12:23:22Z,MERGED,True,3,3,2,https://github.com/lukasmacko,Fix SA,2,[],https://github.com/sysrepo/sysrepo/pull/612,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/612#issuecomment-265727926,,"Current coverage is 85.74% (diff: 50.00%)

Merging #612 into master will increase coverage by 0.10%

@@             master       #612   diff @@
==========================================
  Files            29         29          
  Lines         19581      19582     +1   
  Methods         828        828          
  Messages          0          0          
  Branches       3374       3374          
==========================================
+ Hits          16769      16789    +20   
+ Misses         2812       2793    -19   
  Partials          0          0          

Powered by Codecov. Last update 6d518b6...58628b9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,613,2016-12-08T12:21:20Z,2016-12-08T12:37:38Z,2016-12-08T12:37:38Z,MERGED,True,4,3,2,https://github.com/lukasmacko,FIX SA,5,[],https://github.com/sysrepo/sysrepo/pull/613,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/613,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,613,2016-12-08T12:21:20Z,2016-12-08T12:37:38Z,2016-12-08T12:37:38Z,MERGED,True,4,3,2,https://github.com/lukasmacko,FIX SA,5,[],https://github.com/sysrepo/sysrepo/pull/613,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/613#issuecomment-265729767,,"Current coverage is 85.84% (diff: 25.00%)

Merging #613 into devel will decrease coverage by 0.07%

@@              devel       #613   diff @@
==========================================
  Files            30         30          
  Lines         20851      20853     +2   
  Methods         879        879          
  Messages          0          0          
  Branches       3610       3610          
==========================================
- Hits          17913      17901    -12   
- Misses         2938       2952    +14   
  Partials          0          0          

Powered by Codecov. Last update d659269...b2adee9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,614,2016-12-08T13:13:37Z,2016-12-08T13:40:56Z,2016-12-08T13:40:56Z,MERGED,True,102,15,5,https://github.com/milanlenco,Fix #569: Do not add state data subtree which is already covered by the base module.,3,[],https://github.com/sysrepo/sysrepo/pull/614,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/614,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,614,2016-12-08T13:13:37Z,2016-12-08T13:40:56Z,2016-12-08T13:40:56Z,MERGED,True,102,15,5,https://github.com/milanlenco,Fix #569: Do not add state data subtree which is already covered by the base module.,3,[],https://github.com/sysrepo/sysrepo/pull/614,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/614#issuecomment-265741510,,"Current coverage is 85.65% (diff: 92.31%)

Merging #614 into master will decrease coverage by 0.06%

@@             master       #614   diff @@
==========================================
  Files            29         29          
  Lines         19582      19628    +46   
  Methods         828        830     +2   
  Messages          0          0          
  Branches       3374       3390    +16   
==========================================
+ Hits          16784      16812    +28   
- Misses         2798       2816    +18   
  Partials          0          0          

Powered by Codecov. Last update 4d4bb73...faf0549",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,617,2016-12-09T01:32:12Z,2016-12-09T03:06:19Z,2016-12-09T03:06:19Z,CLOSED,False,16,7,3,https://github.com/qmm161,call lyd_validate after lyd_dup to rebuild pointer of leafref node on duplicated lyd_tree,3,[],https://github.com/sysrepo/sysrepo/pull/617,https://github.com/qmm161,1,https://github.com/sysrepo/sysrepo/pull/617,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,618,2016-12-09T03:14:35Z,2016-12-09T05:44:37Z,2016-12-09T05:44:37Z,CLOSED,False,20,11,4,https://github.com/qmm161,modify sr_dup_datatree for lyd_dup API changed,2,[],https://github.com/sysrepo/sysrepo/pull/618,https://github.com/qmm161,1,https://github.com/sysrepo/sysrepo/pull/618,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,619,2016-12-09T05:50:18Z,2017-01-02T07:48:12Z,2017-01-02T07:48:12Z,CLOSED,False,21,12,4,https://github.com/qmm161,call lyd_validate after lyd_dup to rebuild leafref pointer,2,[],https://github.com/sysrepo/sysrepo/pull/619,https://github.com/qmm161,1,https://github.com/sysrepo/sysrepo/pull/619,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,619,2016-12-09T05:50:18Z,2017-01-02T07:48:12Z,2017-01-02T07:48:12Z,CLOSED,False,21,12,4,https://github.com/qmm161,call lyd_validate after lyd_dup to rebuild leafref pointer,2,[],https://github.com/sysrepo/sysrepo/pull/619,https://github.com/qmm161,2,https://github.com/sysrepo/sysrepo/pull/619#issuecomment-266173979,,"I'm not very sure about this pull request too. The sysrepo code in my project was updated few weeks ago, and sysrepo get seg fault in sr_libyang_leaf_copy_value in case LY_TYPE_LEAFREF when recursive call sr_libyang_leaf_copy_value(this bug could not reproduce everytime), i find the bug was caused by lyd_dup when sysrepo call it to prepare prev_data_trees in commit context, so i reported an issue and libyang fixed that API... yesterday when i compare to newest sysrepo code on github, I find that the recursive calling of sr_libyang_leaf_copy_value was deleted , maybe i should try reproduce the bug with the newest sysrepo code some days later.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,619,2016-12-09T05:50:18Z,2017-01-02T07:48:12Z,2017-01-02T07:48:12Z,CLOSED,False,21,12,4,https://github.com/qmm161,call lyd_validate after lyd_dup to rebuild leafref pointer,2,[],https://github.com/sysrepo/sysrepo/pull/619,https://github.com/lukasmacko,3,https://github.com/sysrepo/sysrepo/pull/619#issuecomment-266356620,,"Yes, it might be already fixed. Give it a try if you can reproduce it with the latest code.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,619,2016-12-09T05:50:18Z,2017-01-02T07:48:12Z,2017-01-02T07:48:12Z,CLOSED,False,21,12,4,https://github.com/qmm161,call lyd_validate after lyd_dup to rebuild leafref pointer,2,[],https://github.com/sysrepo/sysrepo/pull/619,https://github.com/lukasmacko,4,https://github.com/sysrepo/sysrepo/pull/619#issuecomment-268457988,,any update on this? can I close the pull request?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,619,2016-12-09T05:50:18Z,2017-01-02T07:48:12Z,2017-01-02T07:48:12Z,CLOSED,False,21,12,4,https://github.com/qmm161,call lyd_validate after lyd_dup to rebuild leafref pointer,2,[],https://github.com/sysrepo/sysrepo/pull/619,https://github.com/rastislavs,5,https://github.com/sysrepo/sysrepo/pull/619#issuecomment-269941755,,"Closing this PR, as it is now completely out-of-sync with the current codebase.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,620,2016-12-09T07:37:58Z,2016-12-09T08:48:10Z,2016-12-09T08:48:10Z,MERGED,True,14,0,1,https://github.com/lukasmacko,Return no data instead of unauthorized error if the user doesn't have sufficient permission,2,[],https://github.com/sysrepo/sysrepo/pull/620,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/620,#600,#600,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,620,2016-12-09T07:37:58Z,2016-12-09T08:48:10Z,2016-12-09T08:48:10Z,MERGED,True,14,0,1,https://github.com/lukasmacko,Return no data instead of unauthorized error if the user doesn't have sufficient permission,2,[],https://github.com/sysrepo/sysrepo/pull/620,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/620#issuecomment-265953401,#600,"Current coverage is 85.62% (diff: 50.00%)

Merging #620 into master will decrease coverage by 0.04%

@@             master       #620   diff @@
==========================================
  Files            29         29          
  Lines         19628      19640    +12   
  Methods         830        830          
  Messages          0          0          
  Branches       3390       3397     +7   
==========================================
+ Hits          16812      16815     +3   
- Misses         2816       2825     +9   
  Partials          0          0          

Powered by Codecov. Last update 6b4caaf...8c053ee",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,621,2016-12-09T09:02:05Z,2016-12-12T07:02:14Z,2016-12-12T07:02:15Z,MERGED,True,3,34,1,https://github.com/lukasmacko,"Revert ""workaround for libyang bug""",2,[],https://github.com/sysrepo/sysrepo/pull/621,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/621,This reverts commit efbdee6.,This reverts commit efbdee6.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,621,2016-12-09T09:02:05Z,2016-12-12T07:02:14Z,2016-12-12T07:02:15Z,MERGED,True,3,34,1,https://github.com/lukasmacko,"Revert ""workaround for libyang bug""",2,[],https://github.com/sysrepo/sysrepo/pull/621,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/621#issuecomment-266355219,This reverts commit efbdee6.,"Current coverage is 85.69% (diff: 100%)

No coverage report found for master at 3dfc0ba.


Powered by Codecov. Last update 3dfc0ba...53e7513",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,623,2016-12-12T10:17:57Z,2016-12-12T11:14:35Z,2016-12-12T11:14:35Z,MERGED,True,158,41,8,https://github.com/lukasmacko,SR_INSTANCEID_T basic support,10,[],https://github.com/sysrepo/sysrepo/pull/623,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/623,Note: instance id references outside of the module will not pass the validation,Note: instance id references outside of the module will not pass the validation,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,623,2016-12-12T10:17:57Z,2016-12-12T11:14:35Z,2016-12-12T11:14:35Z,MERGED,True,158,41,8,https://github.com/lukasmacko,SR_INSTANCEID_T basic support,10,[],https://github.com/sysrepo/sysrepo/pull/623,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/623#issuecomment-266393017,Note: instance id references outside of the module will not pass the validation,"Current coverage is 85.96% (diff: 53.33%)

Merging #623 into devel will decrease coverage by 0.02%

@@              devel       #623   diff @@
==========================================
  Files            30         30          
  Lines         20899      20912    +13   
  Methods         881        881          
  Messages          0          0          
  Branches       3626       3632     +6   
==========================================
+ Hits          17970      17976     +6   
- Misses         2929       2936     +7   
  Partials          0          0          

Powered by Codecov. Last update a9bf57d...69877bd",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,625,2016-12-12T12:46:43Z,2016-12-12T12:57:58Z,2016-12-12T12:57:58Z,MERGED,True,1,1,1,https://github.com/rastislavs,fix oper_data_example in master,1,[],https://github.com/sysrepo/sysrepo/pull/625,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/625,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,625,2016-12-12T12:46:43Z,2016-12-12T12:57:58Z,2016-12-12T12:57:58Z,MERGED,True,1,1,1,https://github.com/rastislavs,fix oper_data_example in master,1,[],https://github.com/sysrepo/sysrepo/pull/625,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/625#issuecomment-266424163,,"Current coverage is 85.61% (diff: 100%)

Merging #625 into master will decrease coverage by 0.02%

@@             master       #625   diff @@
==========================================
  Files            29         29          
  Lines         19641      19642     +1   
  Methods         830        830          
  Messages          0          0          
  Branches       3397       3397          
==========================================
- Hits          16820      16816     -4   
- Misses         2821       2826     +5   
  Partials          0          0          

Powered by Codecov. Last update 5db30c3...6d3a5d5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,627,2016-12-13T12:57:48Z,2016-12-13T13:09:12Z,2016-12-13T13:09:12Z,MERGED,True,54,20,2,https://github.com/lukasmacko,Check persist file only if state subtree is needed,1,[],https://github.com/sysrepo/sysrepo/pull/627,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/627,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,627,2016-12-13T12:57:48Z,2016-12-13T13:09:12Z,2016-12-13T13:09:12Z,MERGED,True,54,20,2,https://github.com/lukasmacko,Check persist file only if state subtree is needed,1,[],https://github.com/sysrepo/sysrepo/pull/627,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/627#issuecomment-266733515,,"Current coverage is 85.99% (diff: 72.73%)

Merging #627 into devel will decrease coverage by 0.08%

@@              devel       #627   diff @@
==========================================
  Files            30         30          
  Lines         20911      20910     -1   
  Methods         881        881          
  Messages          0          0          
  Branches       3632       3632          
==========================================
- Hits          17999      17981    -18   
- Misses         2912       2929    +17   
  Partials          0          0          

Powered by Codecov. Last update da143fb...df46364",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,628,2016-12-14T13:34:21Z,2016-12-14T14:03:32Z,2016-12-14T14:03:32Z,MERGED,True,3887,497,26,https://github.com/milanlenco,NACM read access evaluation,16,[],https://github.com/sysrepo/sysrepo/pull/628,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/628,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,628,2016-12-14T13:34:21Z,2016-12-14T14:03:32Z,2016-12-14T14:03:32Z,MERGED,True,3887,497,26,https://github.com/milanlenco,NACM read access evaluation,16,[],https://github.com/sysrepo/sysrepo/pull/628,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/628#issuecomment-267039753,,"Current coverage is 86.14% (diff: 88.04%)

Merging #628 into devel will increase coverage by 0.15%

@@              devel       #628   diff @@
==========================================
  Files            30         31     +1   
  Lines         20911      21513   +602   
  Methods         881        907    +26   
  Messages          0          0          
  Branches       3632       3753   +121   
==========================================
+ Hits          17982      18531   +549   
- Misses         2929       2982    +53   
  Partials          0          0          

Powered by Codecov. Last update bf7812e...70b4a5b",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,629,2016-12-14T16:40:20Z,2016-12-19T15:07:28Z,2016-12-19T15:07:28Z,MERGED,True,488,24,10,https://github.com/milanlenco,Support for subscriptions with user credentials.,4,[],https://github.com/sysrepo/sysrepo/pull/629,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/629,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,629,2016-12-14T16:40:20Z,2016-12-19T15:07:28Z,2016-12-19T15:07:28Z,MERGED,True,488,24,10,https://github.com/milanlenco,Support for subscriptions with user credentials.,4,[],https://github.com/sysrepo/sysrepo/pull/629,https://github.com/milanlenco,2,https://github.com/sysrepo/sysrepo/pull/629#issuecomment-267269086,,Build fails due to the issue CESNET/libyang#222,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,633,2016-12-16T03:30:46Z,2016-12-21T07:46:14Z,2016-12-21T07:46:14Z,MERGED,True,30,13,4,https://github.com/fanchanghu,add default nodes into empty data trees if empty data can be validated.,4,[],https://github.com/sysrepo/sysrepo/pull/633,https://github.com/fanchanghu,1,https://github.com/sysrepo/sysrepo/pull/633,"Hi,
This request is used to fix #335 only when empty data can be validated (now, even if the empty data can be validated, get-config with 'report-all' still returns empty).","Hi,
This request is used to fix #335 only when empty data can be validated (now, even if the empty data can be validated, get-config with 'report-all' still returns empty).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,633,2016-12-16T03:30:46Z,2016-12-21T07:46:14Z,2016-12-21T07:46:14Z,MERGED,True,30,13,4,https://github.com/fanchanghu,add default nodes into empty data trees if empty data can be validated.,4,[],https://github.com/sysrepo/sysrepo/pull/633,https://github.com/rastislavs,2,https://github.com/sysrepo/sysrepo/pull/633#issuecomment-267576105,"Hi,
This request is used to fix #335 only when empty data can be validated (now, even if the empty data can be validated, get-config with 'report-all' still returns empty).","Build fails due to CESNET/libyang#222, waiting for fix in libyang.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,633,2016-12-16T03:30:46Z,2016-12-21T07:46:14Z,2016-12-21T07:46:14Z,MERGED,True,30,13,4,https://github.com/fanchanghu,add default nodes into empty data trees if empty data can be validated.,4,[],https://github.com/sysrepo/sysrepo/pull/633,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/633#issuecomment-267992333,"Hi,
This request is used to fix #335 only when empty data can be validated (now, even if the empty data can be validated, get-config with 'report-all' still returns empty).","The build now works. It seems that the tests are not passing with this fix, we will need to look into that.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,633,2016-12-16T03:30:46Z,2016-12-21T07:46:14Z,2016-12-21T07:46:14Z,MERGED,True,30,13,4,https://github.com/fanchanghu,add default nodes into empty data trees if empty data can be validated.,4,[],https://github.com/sysrepo/sysrepo/pull/633,https://github.com/fanchanghu,4,https://github.com/sysrepo/sysrepo/pull/633#issuecomment-268147040,"Hi,
This request is used to fix #335 only when empty data can be validated (now, even if the empty data can be validated, get-config with 'report-all' still returns empty).","I  checked this problem, but I can not build success even if I revert my change. The error message like this:
-- Exec: /root/github/sysrepo/build/src/sysrepocfg --import=/root/github/sysrepo/examples/yang/ietf-interfaces.data.xml --datastore=startup --format=xml --level=0 ietf-interfaces
CMake Error at examples/cmake_install.cmake:79 (message):
  Error: 1
Call Stack (most recent call first):
  cmake_install.cmake:146 (INCLUDE)


make: *** [install] Error 1

what I do is like this:
1, update libyang and sysrepo to latest in branch master;
2, use cmake .. && make install && make test in libyang/build, it's OK;
3, use cmake -DGEN_LANGUAGE_BINDINGS=0 .. && make install && make test in sysrepo/build, and get the error. (If I do not use -DGEN_LANGUAGE_BINDINGS=0, some .cpp files failed to compile.)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,633,2016-12-16T03:30:46Z,2016-12-21T07:46:14Z,2016-12-21T07:46:14Z,MERGED,True,30,13,4,https://github.com/fanchanghu,add default nodes into empty data trees if empty data can be validated.,4,[],https://github.com/sysrepo/sysrepo/pull/633,https://github.com/fanchanghu,5,https://github.com/sysrepo/sysrepo/pull/633#issuecomment-268166626,"Hi,
This request is used to fix #335 only when empty data can be validated (now, even if the empty data can be validated, get-config with 'report-all' still returns empty).","I changed 2 test cases according to the CI job log, hope it can work now...",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,633,2016-12-16T03:30:46Z,2016-12-21T07:46:14Z,2016-12-21T07:46:14Z,MERGED,True,30,13,4,https://github.com/fanchanghu,add default nodes into empty data trees if empty data can be validated.,4,[],https://github.com/sysrepo/sysrepo/pull/633,https://github.com/codecov-io,6,https://github.com/sysrepo/sysrepo/pull/633#issuecomment-268194889,"Hi,
This request is used to fix #335 only when empty data can be validated (now, even if the empty data can be validated, get-config with 'report-all' still returns empty).","Current coverage is 85.58% (diff: 71.43%)

Merging #633 into master will decrease coverage by 0.05%

@@             master       #633   diff @@
==========================================
  Files            29         29          
  Lines         19642      19650     +8   
  Methods         830        830          
  Messages          0          0          
  Branches       3397       3400     +3   
==========================================
- Hits          16819      16817     -2   
- Misses         2823       2833    +10   
  Partials          0          0          

Powered by Codecov. Last update 54845a4...d64ab8a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,633,2016-12-16T03:30:46Z,2016-12-21T07:46:14Z,2016-12-21T07:46:14Z,MERGED,True,30,13,4,https://github.com/fanchanghu,add default nodes into empty data trees if empty data can be validated.,4,[],https://github.com/sysrepo/sysrepo/pull/633,https://github.com/fanchanghu,7,https://github.com/sysrepo/sysrepo/pull/633#issuecomment-268195820,"Hi,
This request is used to fix #335 only when empty data can be validated (now, even if the empty data can be validated, get-config with 'report-all' still returns empty).","Hi,
I try to change some test cases to make them pass, however, I'm not sure it's OK to do it like that...
@rastislavszabo",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/635,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-267854674,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","Current coverage is 86.23% (diff: 100%)

Merging #635 into devel will increase coverage by 0.05%

@@              devel       #635   diff @@
==========================================
  Files            31         31          
  Lines         21531      21530     -1   
  Methods         907        907          
  Messages          0          0          
  Branches       3759       3759          
==========================================
+ Hits          18557      18566     +9   
+ Misses         2974       2964    -10   
  Partials          0          0          

Powered by Codecov. Last update 9fea9ed...ed24cf1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-267914133,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).",@jktjkt Could you please review this?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/rastislavs,4,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-267988574,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","Hi @mislavn
please see the Travis builds of your PR, there are some issue with python tests, e.g.:
52/58 Test #52: python_SysrepoBasicTest ..........***Failed    0.22 sec

...E...E..

======================================================================

ERROR: test_get_items (__main__.SysrepoBasicTest)

----------------------------------------------------------------------

Traceback (most recent call last):

  File ""/home/travis/build/sysrepo/sysrepo/build/swig/python2/tests/SysrepoBasicTest.py"", line 99, in test_get_items

    self.assertRegexpMatches(v.xpath(), ""/test-module:main*"")

AttributeError: 'NoneType' object has no attribute 'xpath'

======================================================================

ERROR: test_move_item (__main__.SysrepoBasicTest)

----------------------------------------------------------------------

Traceback (most recent call last):

  File ""/home/travis/build/sysrepo/sysrepo/build/swig/python2/tests/SysrepoBasicTest.py"", line 140, in test_move_item

    self.assertEqual(items.val(i).xpath(), lists[i])

AttributeError: 'NoneType' object has no attribute 'xpath'

----------------------------------------------------------------------

Ran 10 tests in 0.179s

FAILED (errors=2)

/test-module:main/i32  = 32

swig/python detected a memory leak of type 'Logs *', no destructor found.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-267989178,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","Hi @mislavn
please see the Travis builds of your PR, there are some issue with python tests, e.g.:

I am working on that.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/jktjkt,6,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268009920,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","The code looks good (the leaks are gone now), but my application now segfaults in Val::xpath. Here's how the code looks like:
auto vals = session->get_items((modulePrefix + "":amplifier/stage-1/sensors/*"").c_str());
REQUIRE(!!vals);
for (size_t i = 0; i < vals->val_cnt(); ++i) {
    const auto &val = vals->val(i);
    std::cout << val->xpath() << "": "" << val->type() << std::endl;
}",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/mislavn,7,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268016273,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).",Thanks @jktjkt for the example.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/jktjkt,8,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268186424,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","...and it doesn't appear to segfault all the time, but still in a substantial number of cases. Not nice, trying to dig deeper.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/jktjkt,9,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268192500,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).",I've uploaded my fixes to https://github.com/jktjkt/sysrepo/commits/fix-cpp-635 . I don't think that GitHub allows me as a mere contributor to update this pull request because it belongs to someone else.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/mislavn,10,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268193191,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).",@jktjkt I will rebase your branch onto my.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/mislavn,11,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268197044,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).",@jktjkt should I apply similar logic to other parts of the C++ code base?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/jktjkt,12,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268251094,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","@jktjkt should I apply similar logic to other parts of the C++ code base?

Yes, I think that going with idiomatic C++ is reasonable in the long term, but I will prefer to have this merged before the code gets cleaned up in future.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/mislavn,13,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268251719,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","Yes, I think that going with idiomatic C++ is reasonable in the long term, but I will prefer to have this merged before the code gets cleaned up in future.

@jktjkt OK, I will create a new pull request with the proposed changes once this one is merged.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/jktjkt,14,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268252330,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).",(You might want to reopen this one.),True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,635,2016-12-18T23:12:13Z,2016-12-20T14:33:14Z,2020-01-15T07:49:38Z,MERGED,True,93,103,11,https://github.com/mislavn,Cpp update,5,[],https://github.com/sysrepo/sysrepo/pull/635,https://github.com/mislavn,15,https://github.com/sysrepo/sysrepo/pull/635#issuecomment-268253133,"With this path a C++ memory leak is fixed that @jktjkt reported.
The discussion is at: #581
In the following pull requests I will separate Val/Vals and Tree/Trees class into two parts. One immutable and  one mutable (for setting values).","Sorry, misclicked.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,637,2016-12-19T13:07:37Z,2016-12-19T13:16:04Z,2016-12-19T13:16:04Z,MERGED,True,2,1,1,https://github.com/lukasmacko,Workaround for Cesnet/libyang#222,2,[],https://github.com/sysrepo/sysrepo/pull/637,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/637,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,638,2016-12-19T13:47:18Z,2016-12-19T14:30:50Z,2016-12-19T14:30:52Z,MERGED,True,2,0,1,https://github.com/rastislavs,Temporarily allow failures on OSX in Travis,1,[],https://github.com/sysrepo/sysrepo/pull/638,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/638,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,638,2016-12-19T13:47:18Z,2016-12-19T14:30:50Z,2016-12-19T14:30:52Z,MERGED,True,2,0,1,https://github.com/rastislavs,Temporarily allow failures on OSX in Travis,1,[],https://github.com/sysrepo/sysrepo/pull/638,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/638#issuecomment-267970966,,"Current coverage is 86.17% (diff: 100%)

Merging #638 into devel will increase coverage by 0.06%

@@              devel       #638   diff @@
==========================================
  Files            31         31          
  Lines         21513      21514     +1   
  Methods         907        907          
  Messages          0          0          
  Branches       3753       3753          
==========================================
+ Hits          18525      18539    +14   
+ Misses         2988       2975    -13   
  Partials          0          0          

Powered by Codecov. Last update 044da8e...4ad18ff",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,640,2016-12-19T15:33:38Z,2016-12-19T16:06:01Z,2016-12-19T16:06:01Z,CLOSED,False,2122,442,37,https://github.com/rastislavs,Event notification store,60,[],https://github.com/sysrepo/sysrepo/pull/640,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/640,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,640,2016-12-19T15:33:38Z,2016-12-19T16:06:01Z,2016-12-19T16:06:01Z,CLOSED,False,2122,442,37,https://github.com/rastislavs,Event notification store,60,[],https://github.com/sysrepo/sysrepo/pull/640,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/640#issuecomment-268000065,,"Current coverage is 86.23% (diff: 87.46%)

Merging #640 into devel will increase coverage by 0.05%

@@              devel       #640   diff @@
==========================================
  Files            31         31          
  Lines         21531      22062   +531   
  Methods         907        931    +24   
  Messages          0          0          
  Branches       3759       3833    +74   
==========================================
+ Hits          18557      19025   +468   
- Misses         2974       3037    +63   
  Partials          0          0          

Powered by Codecov. Last update 9fea9ed...40a2000",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,641,2016-12-19T17:39:49Z,2016-12-20T07:26:08Z,2016-12-20T07:26:08Z,MERGED,True,1,1,1,https://github.com/lukasmacko,Fix sr_set_item_example,1,[],https://github.com/sysrepo/sysrepo/pull/641,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/641,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,641,2016-12-19T17:39:49Z,2016-12-20T07:26:08Z,2016-12-20T07:26:08Z,MERGED,True,1,1,1,https://github.com/lukasmacko,Fix sr_set_item_example,1,[],https://github.com/sysrepo/sysrepo/pull/641,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/641#issuecomment-268173261,,"Current coverage is 85.70% (diff: 100%)

Merging #641 into master will increase coverage by 0.01%

@@             master       #641   diff @@
==========================================
  Files            29         29          
  Lines         19640      19642     +2   
  Methods         830        830          
  Messages          0          0          
  Branches       3397       3397          
==========================================
+ Hits          16830      16834     +4   
+ Misses         2810       2808     -2   
  Partials          0          0          

Powered by Codecov. Last update 419a24b...a5b3a45",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,642,2016-12-20T10:14:11Z,2016-12-20T12:16:46Z,2016-12-20T12:16:46Z,MERGED,True,0,2,1,https://github.com/rastislavs,re-enable build on OSX,1,[],https://github.com/sysrepo/sysrepo/pull/642,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/642,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,642,2016-12-20T10:14:11Z,2016-12-20T12:16:46Z,2016-12-20T12:16:46Z,MERGED,True,0,2,1,https://github.com/rastislavs,re-enable build on OSX,1,[],https://github.com/sysrepo/sysrepo/pull/642,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/642#issuecomment-268207374,,"Current coverage is 86.18% (diff: 100%)

Merging #642 into devel will decrease coverage by 0.03%

@@              devel       #642   diff @@
==========================================
  Files            31         31          
  Lines         21530      21530          
  Methods         907        907          
  Messages          0          0          
  Branches       3759       3759          
==========================================
- Hits          18560      18554     -6   
- Misses         2970       2976     +6   
  Partials          0          0          

Powered by Codecov. Last update 3883466...5de6344",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,646,2016-12-21T10:12:59Z,2016-12-21T11:19:15Z,2016-12-21T12:48:10Z,MERGED,True,1,10,1,https://github.com/mislavn,cpp: remove sr_session_stop from the Session destructor,1,[],https://github.com/sysrepo/sysrepo/pull/646,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/646,"sr_session_stop should be called only from the Deleter class and the
Deleter class is created only when a new Session class was created
from the user.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","sr_session_stop should be called only from the Deleter class and the
Deleter class is created only when a new Session class was created
from the user.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,646,2016-12-21T10:12:59Z,2016-12-21T11:19:15Z,2016-12-21T12:48:10Z,MERGED,True,1,10,1,https://github.com/mislavn,cpp: remove sr_session_stop from the Session destructor,1,[],https://github.com/sysrepo/sysrepo/pull/646,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/646#issuecomment-268486011,"sr_session_stop should be called only from the Deleter class and the
Deleter class is created only when a new Session class was created
from the user.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",Bugfix for the issue: #644,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,646,2016-12-21T10:12:59Z,2016-12-21T11:19:15Z,2016-12-21T12:48:10Z,MERGED,True,1,10,1,https://github.com/mislavn,cpp: remove sr_session_stop from the Session destructor,1,[],https://github.com/sysrepo/sysrepo/pull/646,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/646#issuecomment-268487372,"sr_session_stop should be called only from the Deleter class and the
Deleter class is created only when a new Session class was created
from the user.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Current coverage is 86.14% (diff: 100%)

Merging #646 into devel will decrease coverage by 0.10%

@@              devel       #646   diff @@
==========================================
  Files            31         31          
  Lines         21530      21530          
  Methods         907        907          
  Messages          0          0          
  Branches       3759       3759          
==========================================
- Hits          18566      18545    -21   
- Misses         2964       2985    +21   
  Partials          0          0          

Powered by Codecov. Last update bd84222...2675578",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,646,2016-12-21T10:12:59Z,2016-12-21T11:19:15Z,2016-12-21T12:48:10Z,MERGED,True,1,10,1,https://github.com/mislavn,cpp: remove sr_session_stop from the Session destructor,1,[],https://github.com/sysrepo/sysrepo/pull/646,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/646#issuecomment-268488928,"sr_session_stop should be called only from the Deleter class and the
Deleter class is created only when a new Session class was created
from the user.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","I would amend the commit to include a reference to the bug # before merging this.

Done.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,649,2016-12-21T12:17:43Z,2016-12-21T13:14:29Z,2016-12-21T13:14:29Z,MERGED,True,2242,469,38,https://github.com/rastislavs,Event notifications store,89,[],https://github.com/sysrepo/sysrepo/pull/649,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/649,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,649,2016-12-21T12:17:43Z,2016-12-21T13:14:29Z,2016-12-21T13:14:29Z,MERGED,True,2242,469,38,https://github.com/rastislavs,Event notifications store,89,[],https://github.com/sysrepo/sysrepo/pull/649,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/649#issuecomment-268510858,,"Current coverage is 86.23% (diff: 86.75%)

Merging #649 into devel will increase coverage by 1.28%

@@              devel       #649   diff @@
==========================================
  Files            31         31          
  Lines         21487      22068   +581   
  Methods         907        931    +24   
  Messages          0          0          
  Branches       3751       3835    +84   
==========================================
+ Hits          18254      19030   +776   
+ Misses         3233       3038   -195   
  Partials          0          0          

Powered by Codecov. Last update 498ec1d...711ee5c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,650,2016-12-21T14:03:11Z,2016-12-22T11:20:13Z,2020-01-15T07:49:49Z,MERGED,True,23,0,5,https://github.com/mislavn,String val,2,[],https://github.com/sysrepo/sysrepo/pull/650,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/650,"Implemented C++ methods for functions sr_set_item_str() and sr_val_to_str().
@rastislavszabo I am not sure what error message to return if I get NULL from sr_val_to_str().
Now it returns SR_ERR_OPERATION_FAILED.
Also would it be a problem to create a similar functions for nodes, something like sr_node_to_str().","Implemented C++ methods for functions sr_set_item_str() and sr_val_to_str().
@rastislavszabo I am not sure what error message to return if I get NULL from sr_val_to_str().
Now it returns SR_ERR_OPERATION_FAILED.
Also would it be a problem to create a similar functions for nodes, something like sr_node_to_str().",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,650,2016-12-21T14:03:11Z,2016-12-22T11:20:13Z,2020-01-15T07:49:49Z,MERGED,True,23,0,5,https://github.com/mislavn,String val,2,[],https://github.com/sysrepo/sysrepo/pull/650,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/650#issuecomment-268531679,"Implemented C++ methods for functions sr_set_item_str() and sr_val_to_str().
@rastislavszabo I am not sure what error message to return if I get NULL from sr_val_to_str().
Now it returns SR_ERR_OPERATION_FAILED.
Also would it be a problem to create a similar functions for nodes, something like sr_node_to_str().","Current coverage is 86.24% (diff: 100%)

Merging #650 into devel will decrease coverage by 0.07%

@@              devel       #650   diff @@
==========================================
  Files            31         31          
  Lines         22079      22079          
  Methods         931        931          
  Messages          0          0          
  Branches       3838       3838          
==========================================
- Hits          19055      19040    -15   
- Misses         3024       3039    +15   
  Partials          0          0          

Powered by Codecov. Last update f680917...60985a0",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,650,2016-12-21T14:03:11Z,2016-12-22T11:20:13Z,2020-01-15T07:49:49Z,MERGED,True,23,0,5,https://github.com/mislavn,String val,2,[],https://github.com/sysrepo/sysrepo/pull/650,https://github.com/rastislavs,3,https://github.com/sysrepo/sysrepo/pull/650#issuecomment-268751581,"Implemented C++ methods for functions sr_set_item_str() and sr_val_to_str().
@rastislavszabo I am not sure what error message to return if I get NULL from sr_val_to_str().
Now it returns SR_ERR_OPERATION_FAILED.
Also would it be a problem to create a similar functions for nodes, something like sr_node_to_str().","I am not sure what error message to return if I get NULL from sr_val_to_str(). Now it returns SR_ERR_OPERATION_FAILED.

I'm not sure either. I actually started to think that sr_val_to_str should return an error code as the rest of the API functions... For now we can leave it as SR_ERR_OPERATION_FAILED.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,650,2016-12-21T14:03:11Z,2016-12-22T11:20:13Z,2020-01-15T07:49:49Z,MERGED,True,23,0,5,https://github.com/mislavn,String val,2,[],https://github.com/sysrepo/sysrepo/pull/650,https://github.com/rastislavs,4,https://github.com/sysrepo/sysrepo/pull/650#issuecomment-268779844,"Implemented C++ methods for functions sr_set_item_str() and sr_val_to_str().
@rastislavszabo I am not sure what error message to return if I get NULL from sr_val_to_str().
Now it returns SR_ERR_OPERATION_FAILED.
Also would it be a problem to create a similar functions for nodes, something like sr_node_to_str().","Also would it be a problem to create a similar functions for nodes

sr_val_to_str can be used also used for nodes, since nodes can be safely casted to sr_val_t. But we can create wrappers for sr_node_t type too.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,650,2016-12-21T14:03:11Z,2016-12-22T11:20:13Z,2020-01-15T07:49:49Z,MERGED,True,23,0,5,https://github.com/mislavn,String val,2,[],https://github.com/sysrepo/sysrepo/pull/650,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/650#issuecomment-268787954,"Implemented C++ methods for functions sr_set_item_str() and sr_val_to_str().
@rastislavszabo I am not sure what error message to return if I get NULL from sr_val_to_str().
Now it returns SR_ERR_OPERATION_FAILED.
Also would it be a problem to create a similar functions for nodes, something like sr_node_to_str().","sr_val_to_str can be used also used for nodes, since nodes can be safely casted to sr_val_t. But we can create wrappers for sr_node_t type too.

Thanks @rastislavszabo
Also if it is not a problem, could you make a function like:
int string_to_val(sr_val_t **value, const char *xpath, const char *value);
The function would create a sr_val_t from the xpath and value.
This would be helpful with operational data.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,650,2016-12-21T14:03:11Z,2016-12-22T11:20:13Z,2020-01-15T07:49:49Z,MERGED,True,23,0,5,https://github.com/mislavn,String val,2,[],https://github.com/sysrepo/sysrepo/pull/650,https://github.com/rastislavs,6,https://github.com/sysrepo/sysrepo/pull/650#issuecomment-268788610,"Implemented C++ methods for functions sr_set_item_str() and sr_val_to_str().
@rastislavszabo I am not sure what error message to return if I get NULL from sr_val_to_str().
Now it returns SR_ERR_OPERATION_FAILED.
Also would it be a problem to create a similar functions for nodes, something like sr_node_to_str().",@mislavn: it is sr_val_set_xpath + sr_val_set_str_data,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,650,2016-12-21T14:03:11Z,2016-12-22T11:20:13Z,2020-01-15T07:49:49Z,MERGED,True,23,0,5,https://github.com/mislavn,String val,2,[],https://github.com/sysrepo/sysrepo/pull/650,https://github.com/mislavn,7,https://github.com/sysrepo/sysrepo/pull/650#issuecomment-268788841,"Implemented C++ methods for functions sr_set_item_str() and sr_val_to_str().
@rastislavszabo I am not sure what error message to return if I get NULL from sr_val_to_str().
Now it returns SR_ERR_OPERATION_FAILED.
Also would it be a problem to create a similar functions for nodes, something like sr_node_to_str().","OK, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,651,2016-12-21T14:30:13Z,2016-12-22T11:15:55Z,2020-01-15T07:49:36Z,MERGED,True,4,2,2,https://github.com/mislavn,cpp: remove exception throwing from class destructors,1,[],https://github.com/sysrepo/sysrepo/pull/651,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/651,"This is a temporary fix for the Coverity bug report of type:
'Error handling issues  (UNCAUGHT_EXCEPT)'
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","This is a temporary fix for the Coverity bug report of type:
'Error handling issues  (UNCAUGHT_EXCEPT)'
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,651,2016-12-21T14:30:13Z,2016-12-22T11:15:55Z,2020-01-15T07:49:36Z,MERGED,True,4,2,2,https://github.com/mislavn,cpp: remove exception throwing from class destructors,1,[],https://github.com/sysrepo/sysrepo/pull/651,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/651#issuecomment-268537176,"This is a temporary fix for the Coverity bug report of type:
'Error handling issues  (UNCAUGHT_EXCEPT)'
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","@jktjkt , @rastislavszabo do you have any suggestion what to do instead of throwing a exception in the destructor. I can't think of anything else then to ignore it.
Here is the report from Coverity Scan.

*** CID 158947:  Error handling issues  (UNCAUGHT_EXCEPT)
/home/travis/build/sysrepo/sysrepo/swig/cpp/src/Internal.cpp: 70 in Deleter::~Deleter()()
64         _t = SCHEMAS;
65     }
66     Deleter::Deleter(sr_session_ctx_t *sess) {
67         v._sess = sess;
68         _t = SESSION;
69     }



CID 158947:  Error handling issues  (UNCAUGHT_EXCEPT)
An exception of type ""sysrepo_exception"" is thrown but the throw list ""throw()"" doesn't allow it to be thrown. This will cause a call to unexpected() which usually calls terminate().




70     Deleter::~Deleter() {
71         switch(_t) {
72         case VAL:
73             if (v._val) sr_free_val(v._val);
74      v._val = NULL;
75         break;
** CID 158946:  Error handling issues  (UNCAUGHT_EXCEPT)
/home/travis/build/sysrepo/sysrepo/swig/cpp/src/Session.cpp: 442 in Subscribe::~Subscribe()()

*** CID 158946:  Error handling issues  (UNCAUGHT_EXCEPT)
/home/travis/build/sysrepo/sysrepo/swig/cpp/src/Session.cpp: 442 in Subscribe::~Subscribe()()
436         _sub = NULL;
437         _sess = sess;
438         swig_sub = _sub;
439         swig_sess = _sess;
440     }
441



CID 158946:  Error handling issues  (UNCAUGHT_EXCEPT)
An exception of type ""sysrepo_exception"" is thrown but the throw list ""throw()"" doesn't allow it to be thrown. This will cause a call to unexpected() which usually calls terminate().




442     Subscribe::~Subscribe()
443     {
444         if (_sub && _sess->_sess) {
445             int ret = sr_unsubscribe(_sess->_sess, _sub);
446             if (ret != SR_ERR_OK) {
447                 throw_exception(ret);",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,651,2016-12-21T14:30:13Z,2016-12-22T11:15:55Z,2020-01-15T07:49:36Z,MERGED,True,4,2,2,https://github.com/mislavn,cpp: remove exception throwing from class destructors,1,[],https://github.com/sysrepo/sysrepo/pull/651,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/651#issuecomment-268538842,"This is a temporary fix for the Coverity bug report of type:
'Error handling issues  (UNCAUGHT_EXCEPT)'
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Current coverage is 86.69% (diff: 100%)

Merging #651 into devel will increase coverage by 0.39%

@@              devel       #651   diff @@
==========================================
  Files            31         31          
  Lines         22079      22905   +826   
  Methods         931       1006    +75   
  Messages          0          0          
  Branches       3838       4112   +274   
==========================================
+ Hits          19055      19857   +802   
- Misses         3024       3048    +24   
  Partials          0          0          

Powered by Codecov. Last update f680917...9bc3f37",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,651,2016-12-21T14:30:13Z,2016-12-22T11:15:55Z,2020-01-15T07:49:36Z,MERGED,True,4,2,2,https://github.com/mislavn,cpp: remove exception throwing from class destructors,1,[],https://github.com/sysrepo/sysrepo/pull/651,https://github.com/rastislavs,4,https://github.com/sysrepo/sysrepo/pull/651#issuecomment-268751825,"This is a temporary fix for the Coverity bug report of type:
'Error handling issues  (UNCAUGHT_EXCEPT)'
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","do you have any suggestion what to do instead of throwing a exception in the destructor

Nope. Perhaps just log it?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,651,2016-12-21T14:30:13Z,2016-12-22T11:15:55Z,2020-01-15T07:49:36Z,MERGED,True,4,2,2,https://github.com/mislavn,cpp: remove exception throwing from class destructors,1,[],https://github.com/sysrepo/sysrepo/pull/651,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/651#issuecomment-268752721,"This is a temporary fix for the Coverity bug report of type:
'Error handling issues  (UNCAUGHT_EXCEPT)'
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Nope. Perhaps just log it?

OK. I will update the commit.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,651,2016-12-21T14:30:13Z,2016-12-22T11:15:55Z,2020-01-15T07:49:36Z,MERGED,True,4,2,2,https://github.com/mislavn,cpp: remove exception throwing from class destructors,1,[],https://github.com/sysrepo/sysrepo/pull/651,https://github.com/mislavn,6,https://github.com/sysrepo/sysrepo/pull/651#issuecomment-268761913,"This is a temporary fix for the Coverity bug report of type:
'Error handling issues  (UNCAUGHT_EXCEPT)'
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",@rastislavszabo it is not easy to expose the sysrepo logging API to C++. For now let this be simply commented out.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,651,2016-12-21T14:30:13Z,2016-12-22T11:15:55Z,2020-01-15T07:49:36Z,MERGED,True,4,2,2,https://github.com/mislavn,cpp: remove exception throwing from class destructors,1,[],https://github.com/sysrepo/sysrepo/pull/651,https://github.com/rastislavs,7,https://github.com/sysrepo/sysrepo/pull/651#issuecomment-268763363,"This is a temporary fix for the Coverity bug report of type:
'Error handling issues  (UNCAUGHT_EXCEPT)'
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",ok,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,652,2016-12-22T08:01:20Z,2016-12-22T08:27:35Z,2016-12-22T08:27:35Z,MERGED,True,29,19,5,https://github.com/rastislavs,fixed issues reported by Coverity SA,1,[],https://github.com/sysrepo/sysrepo/pull/652,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/652,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,652,2016-12-22T08:01:20Z,2016-12-22T08:27:35Z,2016-12-22T08:27:35Z,MERGED,True,29,19,5,https://github.com/rastislavs,fixed issues reported by Coverity SA,1,[],https://github.com/sysrepo/sysrepo/pull/652,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/652#issuecomment-268742878,,"Current coverage is 86.25% (diff: 82.35%)

Merging #652 into devel will decrease coverage by 0.05%

@@              devel       #652   diff @@
==========================================
  Files            31         31          
  Lines         22079      22082     +3   
  Methods         931        931          
  Messages          0          0          
  Branches       3838       3840     +2   
==========================================
- Hits          19055      19046     -9   
- Misses         3024       3036    +12   
  Partials          0          0          

Powered by Codecov. Last update f680917...6fc7d20",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,655,2016-12-22T10:27:19Z,2016-12-22T11:15:39Z,2020-01-15T07:49:46Z,MERGED,True,10,74,2,https://github.com/mislavn,Lua notif,3,[],https://github.com/sysrepo/sysrepo/pull/655,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/655,"I updated the lua bindings with the new event notif callbacks.
Also I removed redundant memory checks for ""new class"" in python and lua.","I updated the lua bindings with the new event notif callbacks.
Also I removed redundant memory checks for ""new class"" in python and lua.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,655,2016-12-22T10:27:19Z,2016-12-22T11:15:39Z,2020-01-15T07:49:46Z,MERGED,True,10,74,2,https://github.com/mislavn,Lua notif,3,[],https://github.com/sysrepo/sysrepo/pull/655,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/655#issuecomment-268772169,"I updated the lua bindings with the new event notif callbacks.
Also I removed redundant memory checks for ""new class"" in python and lua.","Current coverage is 86.16% (diff: 100%)

Merging #655 into devel will increase coverage by <.01%

@@              devel       #655   diff @@
==========================================
  Files            31         31          
  Lines         22080      22082     +2   
  Methods         931        931          
  Messages          0          0          
  Branches       3840       3840          
==========================================
+ Hits          19024      19026     +2   
  Misses         3056       3056          
  Partials          0          0          

Powered by Codecov. Last update cfbad3f...a1cb34c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,659,2016-12-22T13:38:12Z,2016-12-22T14:16:10Z,2016-12-22T14:16:10Z,MERGED,True,16,1,2,https://github.com/rastislavs,fix #658,2,[],https://github.com/sysrepo/sysrepo/pull/659,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/659,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,659,2016-12-22T13:38:12Z,2016-12-22T14:16:10Z,2016-12-22T14:16:10Z,MERGED,True,16,1,2,https://github.com/rastislavs,fix #658,2,[],https://github.com/sysrepo/sysrepo/pull/659,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/659#issuecomment-268802720,,"Current coverage is 85.68% (diff: 80.00%)

Merging #659 into master will increase coverage by 0.04%

@@             master       #659   diff @@
==========================================
  Files            29         29          
  Lines         19650      19659     +9   
  Methods         830        830          
  Messages          0          0          
  Branches       3400       3405     +5   
==========================================
+ Hits          16828      16844    +16   
+ Misses         2822       2815     -7   
  Partials          0          0          

Powered by Codecov. Last update 5acc524...6ab116a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,660,2016-12-22T15:06:19Z,2016-12-22T15:33:51Z,2020-01-15T07:49:45Z,MERGED,True,7,7,1,https://github.com/mislavn,lua: bugfix in type signature of lua callbacks,1,[],https://github.com/sysrepo/sysrepo/pull/660,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/660,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,660,2016-12-22T15:06:19Z,2016-12-22T15:33:51Z,2020-01-15T07:49:45Z,MERGED,True,7,7,1,https://github.com/mislavn,lua: bugfix in type signature of lua callbacks,1,[],https://github.com/sysrepo/sysrepo/pull/660,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/660#issuecomment-268818577,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Changed the return type in Lua callback dp_get_items from Vals to Vals_Holder also changed the type signature for Trees_Holder/Vals_Holder to SWIGTYPE_p_(Trees/Vals)_Holder.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,660,2016-12-22T15:06:19Z,2016-12-22T15:33:51Z,2020-01-15T07:49:45Z,MERGED,True,7,7,1,https://github.com/mislavn,lua: bugfix in type signature of lua callbacks,1,[],https://github.com/sysrepo/sysrepo/pull/660,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/660#issuecomment-268822792,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Current coverage is 86.27% (diff: 100%)

Merging #660 into devel will increase coverage by 0.06%

@@              devel       #660   diff @@
==========================================
  Files            31         31          
  Lines         22086      22085     -1   
  Methods         931        931          
  Messages          0          0          
  Branches       3842       3842          
==========================================
+ Hits          19040      19053    +13   
+ Misses         3046       3032    -14   
  Partials          0          0          

Powered by Codecov. Last update bdda4b2...acf08bc",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,662,2016-12-22T15:17:48Z,2016-12-22T16:06:38Z,2020-01-15T07:49:48Z,MERGED,True,6,6,1,https://github.com/mislavn,python: bugfix in type signature of python callback,1,[],https://github.com/sysrepo/sysrepo/pull/662,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/662,"Python callback dp_get_items now returns Vals_Holder instead of Vals
class.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Python callback dp_get_items now returns Vals_Holder instead of Vals
class.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,662,2016-12-22T15:17:48Z,2016-12-22T16:06:38Z,2020-01-15T07:49:48Z,MERGED,True,6,6,1,https://github.com/mislavn,python: bugfix in type signature of python callback,1,[],https://github.com/sysrepo/sysrepo/pull/662,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/662#issuecomment-268825280,"Python callback dp_get_items now returns Vals_Holder instead of Vals
class.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Current coverage is 86.25% (diff: 100%)

Merging #662 into devel will increase coverage by 0.04%

@@              devel       #662   diff @@
==========================================
  Files            31         31          
  Lines         22086      22084     -2   
  Methods         931        931          
  Messages          0          0          
  Branches       3842       3842          
==========================================
+ Hits          19040      19048     +8   
+ Misses         3046       3036    -10   
  Partials          0          0          

Powered by Codecov. Last update bdda4b2...616f1bd",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,663,2016-12-22T16:50:40Z,2016-12-22T17:21:39Z,2016-12-22T17:21:39Z,MERGED,True,246,105,13,https://github.com/rastislavs,Notification store auto-cleanup + exposing various timeouts via CMake variables,10,[],https://github.com/sysrepo/sysrepo/pull/663,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/663,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,663,2016-12-22T16:50:40Z,2016-12-22T17:21:39Z,2016-12-22T17:21:39Z,MERGED,True,246,105,13,https://github.com/rastislavs,Notification store auto-cleanup + exposing various timeouts via CMake variables,10,[],https://github.com/sysrepo/sysrepo/pull/663,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/663#issuecomment-268846350,,"Current coverage is 86.19% (diff: 81.67%)

Merging #663 into devel will decrease coverage by 0.02%

@@              devel       #663   diff @@
==========================================
  Files            31         31          
  Lines         22084      22124    +40   
  Methods         931        933     +2   
  Messages          0          0          
  Branches       3842       3848     +6   
==========================================
+ Hits          19038      19069    +31   
- Misses         3046       3055     +9   
  Partials          0          0          

Powered by Codecov. Last update 0dcaf2e...c14b65d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,664,2016-12-23T07:19:31Z,2016-12-23T09:31:02Z,2016-12-23T09:31:02Z,MERGED,True,467,311,16,https://github.com/lukasmacko,Config change notif,16,[],https://github.com/sysrepo/sysrepo/pull/664,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/664,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,664,2016-12-23T07:19:31Z,2016-12-23T09:31:02Z,2016-12-23T09:31:02Z,MERGED,True,467,311,16,https://github.com/lukasmacko,Config change notif,16,[],https://github.com/sysrepo/sysrepo/pull/664,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/664#issuecomment-268950810,,"Current coverage is 86.32% (diff: 93.12%)

Merging #664 into devel will increase coverage by 0.21%

@@              devel       #664   diff @@
==========================================
  Files            31         31          
  Lines         22122      22112    -10   
  Methods         933        937     +4   
  Messages          0          0          
  Branches       3848       3842     -6   
==========================================
+ Hits          19051      19088    +37   
+ Misses         3071       3024    -47   
  Partials          0          0          

Powered by Codecov. Last update 2a12dce...613d3b9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,665,2016-12-23T11:35:19Z,2016-12-23T13:44:06Z,2016-12-23T13:44:06Z,MERGED,True,7,3,3,https://github.com/lukasmacko,Bugfix dp,4,[],https://github.com/sysrepo/sysrepo/pull/665,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/665,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,665,2016-12-23T11:35:19Z,2016-12-23T13:44:06Z,2016-12-23T13:44:06Z,MERGED,True,7,3,3,https://github.com/lukasmacko,Bugfix dp,4,[],https://github.com/sysrepo/sysrepo/pull/665,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/665#issuecomment-268978342,,"Current coverage is 85.57% (diff: 25.00%)

Merging #665 into master will increase coverage by <.01%

@@             master       #665   diff @@
==========================================
  Files            29         29          
  Lines         19660      19662     +2   
  Methods         830        830          
  Messages          0          0          
  Branches       3405       3407     +2   
==========================================
+ Hits          16822      16824     +2   
  Misses         2838       2838          
  Partials          0          0          

Powered by Codecov. Last update 5fce294...f8eb70a",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,666,2016-12-23T12:13:56Z,2016-12-23T12:48:29Z,2016-12-23T12:48:29Z,MERGED,True,119,2,3,https://github.com/lukasmacko,Test for the #661,4,[],https://github.com/sysrepo/sysrepo/pull/666,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/666,due to changes in handling of state data test was created only for devel branch,due to changes in handling of state data test was created only for devel branch,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,666,2016-12-23T12:13:56Z,2016-12-23T12:48:29Z,2016-12-23T12:48:29Z,MERGED,True,119,2,3,https://github.com/lukasmacko,Test for the #661,4,[],https://github.com/sysrepo/sysrepo/pull/666,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/666#issuecomment-268982497,due to changes in handling of state data test was created only for devel branch,"Current coverage is 86.40% (diff: 75.00%)

Merging #666 into devel will increase coverage by 0.13%

@@              devel       #666   diff @@
==========================================
  Files            31         31          
  Lines         22111      22113     +2   
  Methods         937        937          
  Messages          0          0          
  Branches       3842       3844     +2   
==========================================
+ Hits          19075      19106    +31   
+ Misses         3036       3007    -29   
  Partials          0          0          

Powered by Codecov. Last update 3b0612d...5a72a84",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,667,2016-12-23T15:03:32Z,2017-01-02T07:47:02Z,2017-01-02T07:47:02Z,MERGED,True,2412,365,50,https://github.com/milanlenco,NACM RPC access control,48,[],https://github.com/sysrepo/sysrepo/pull/667,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/667,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,667,2016-12-23T15:03:32Z,2017-01-02T07:47:02Z,2017-01-02T07:47:02Z,MERGED,True,2412,365,50,https://github.com/milanlenco,NACM RPC access control,48,[],https://github.com/sysrepo/sysrepo/pull/667,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/667#issuecomment-269005186,,"Current coverage is 86.38% (diff: 84.58%)

Merging #667 into devel will increase coverage by 0.03%

@@              devel       #667   diff @@
==========================================
  Files            31         31          
  Lines         22113      22412   +299   
  Methods         937        947    +10   
  Messages          0          0          
  Branches       3844       3913    +69   
==========================================
+ Hits          19095      19360   +265   
- Misses         3018       3052    +34   
  Partials          0          0          

Powered by Codecov. Last update 5189839...246d75c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,668,2016-12-26T10:58:57Z,2017-01-02T07:47:12Z,2017-01-02T07:47:12Z,MERGED,True,43,1,3,https://github.com/fanchanghu,add '--search-installed' to 'sysrepoctl --install',2,[],https://github.com/sysrepo/sysrepo/pull/668,https://github.com/fanchanghu,1,https://github.com/sysrepo/sysrepo/pull/668,"Hi,
This request is for #653, which hopes to support installing a module whose dependence has already been installed.
Now sysrepoctl has already supported this feature with ""--search-dir""+""sysrepo schema directory"", and the parameter ""--search-installed"" added by this request is just to simplify the usage.","Hi,
This request is for #653, which hopes to support installing a module whose dependence has already been installed.
Now sysrepoctl has already supported this feature with ""--search-dir""+""sysrepo schema directory"", and the parameter ""--search-installed"" added by this request is just to simplify the usage.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,668,2016-12-26T10:58:57Z,2017-01-02T07:47:12Z,2017-01-02T07:47:12Z,MERGED,True,43,1,3,https://github.com/fanchanghu,add '--search-installed' to 'sysrepoctl --install',2,[],https://github.com/sysrepo/sysrepo/pull/668,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/668#issuecomment-269200684,"Hi,
This request is for #653, which hopes to support installing a module whose dependence has already been installed.
Now sysrepoctl has already supported this feature with ""--search-dir""+""sysrepo schema directory"", and the parameter ""--search-installed"" added by this request is just to simplify the usage.","Current coverage is 85.68% (diff: 100%)

Merging #668 into master will increase coverage by 0.02%

@@             master       #668   diff @@
==========================================
  Files            29         29          
  Lines         19664      19668     +4   
  Methods         830        830          
  Messages          0          0          
  Branches       3407       3408     +1   
==========================================
+ Hits          16845      16852     +7   
+ Misses         2819       2816     -3   
  Partials          0          0          

Powered by Codecov. Last update d4ca1e9...20dfb93",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,670,2017-01-02T12:43:59Z,2017-01-09T12:16:12Z,2017-01-09T12:16:12Z,MERGED,True,81,22,10,https://github.com/milanlenco,Fix SA,8,[],https://github.com/sysrepo/sysrepo/pull/670,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/670,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,670,2017-01-02T12:43:59Z,2017-01-09T12:16:12Z,2017-01-09T12:16:12Z,MERGED,True,81,22,10,https://github.com/milanlenco,Fix SA,8,[],https://github.com/sysrepo/sysrepo/pull/670,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/670#issuecomment-271268785,,"Current coverage is 86.34% (diff: 100%)

Merging #670 into devel will decrease coverage by 0.05%

@@              devel       #670   diff @@
==========================================
  Files            31         31          
  Lines         22411      22419     +8   
  Methods         947        947          
  Messages          0          0          
  Branches       3913       3914     +1   
==========================================
- Hits          19360      19356     -4   
- Misses         3051       3063    +12   
  Partials          0          0          

Powered by Codecov. Last update 07174c8...f89aaaa",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,676,2017-01-09T13:05:25Z,2017-01-09T13:16:54Z,2017-01-09T13:16:54Z,MERGED,True,67,1,4,https://github.com/lukasmacko,Support apostroph in list key and leaf-list values,1,[],https://github.com/sysrepo/sysrepo/pull/676,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/676,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,677,2017-01-09T13:21:54Z,2017-01-09T13:37:33Z,2017-01-09T13:37:33Z,MERGED,True,468,133,21,https://github.com/rastislavs,Notif store enahancements,16,[],https://github.com/sysrepo/sysrepo/pull/677,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/677,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,677,2017-01-09T13:21:54Z,2017-01-09T13:37:33Z,2017-01-09T13:37:33Z,MERGED,True,468,133,21,https://github.com/rastislavs,Notif store enahancements,16,[],https://github.com/sysrepo/sysrepo/pull/677,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/677#issuecomment-271285837,,"Current coverage is 86.35% (diff: 91.40%)

Merging #677 into devel will decrease coverage by 0.02%

@@              devel       #677   diff @@
==========================================
  Files            31         31          
  Lines         22421      22468    +47   
  Methods         947        948     +1   
  Messages          0          0          
  Branches       3915       3926    +11   
==========================================
+ Hits          19366      19402    +36   
- Misses         3055       3066    +11   
  Partials          0          0          

Powered by Codecov. Last update 0dedd19...fe3da1d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,678,2017-01-09T14:48:30Z,2017-01-09T15:38:24Z,2017-01-09T15:38:24Z,MERGED,True,122,12,3,https://github.com/lukasmacko,Fix #654 fixes state data nested in list under grouping + test,1,[],https://github.com/sysrepo/sysrepo/pull/678,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/678,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,678,2017-01-09T14:48:30Z,2017-01-09T15:38:24Z,2017-01-09T15:38:24Z,MERGED,True,122,12,3,https://github.com/lukasmacko,Fix #654 fixes state data nested in list under grouping + test,1,[],https://github.com/sysrepo/sysrepo/pull/678,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/678#issuecomment-271306962,,"Current coverage is 86.35% (diff: 100%)

Merging #678 into devel will decrease coverage by 0.03%

@@              devel       #678   diff @@
==========================================
  Files            31         31          
  Lines         22469      22469          
  Methods         948        948          
  Messages          0          0          
  Branches       3926       3927     +1   
==========================================
- Hits          19407      19401     -6   
- Misses         3062       3068     +6   
  Partials          0          0          

Powered by Codecov. Last update a9e21d7...e54a6cd",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,680,2017-01-10T07:17:19Z,2017-01-10T08:37:23Z,2017-01-10T08:37:23Z,MERGED,True,0,4,1,https://github.com/lukasmacko,Remove flag forcing the validation of already validated data trees,1,[],https://github.com/sysrepo/sysrepo/pull/680,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/680,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,681,2017-01-10T09:10:38Z,2017-01-10T09:40:11Z,2017-01-10T09:40:11Z,MERGED,True,2012,109,14,https://github.com/milanlenco,NACM - outgoing event notification authorization,16,[],https://github.com/sysrepo/sysrepo/pull/681,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/681,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,681,2017-01-10T09:10:38Z,2017-01-10T09:40:11Z,2017-01-10T09:40:11Z,MERGED,True,2012,109,14,https://github.com/milanlenco,NACM - outgoing event notification authorization,16,[],https://github.com/sysrepo/sysrepo/pull/681,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/681#issuecomment-271525300,,"Current coverage is 86.37% (diff: 89.31%)

Merging #681 into devel will increase coverage by 0.03%

@@              devel       #681   diff @@
==========================================
  Files            31         31          
  Lines         22467      22609   +142   
  Methods         948        949     +1   
  Messages          0          0          
  Branches       3927       3962    +35   
==========================================
+ Hits          19399      19528   +129   
- Misses         3068       3081    +13   
  Partials          0          0          

Powered by Codecov. Last update 9dc99d8...621d168",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,682,2017-01-12T08:36:29Z,2017-01-12T08:46:29Z,2017-01-12T08:46:29Z,MERGED,True,4,17,1,https://github.com/lukasmacko,Replace printing to string and parsing by lyd_dup/merge_to_ctx,2,[],https://github.com/sysrepo/sysrepo/pull/682,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/682,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,682,2017-01-12T08:36:29Z,2017-01-12T08:46:29Z,2017-01-12T08:46:29Z,MERGED,True,4,17,1,https://github.com/lukasmacko,Replace printing to string and parsing by lyd_dup/merge_to_ctx,2,[],https://github.com/sysrepo/sysrepo/pull/682,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/682#issuecomment-272106763,,"Current coverage is 86.44% (diff: 100%)

Merging #682 into devel will increase coverage by 0.02%

@@              devel       #682   diff @@
==========================================
  Files            31         31          
  Lines         22610      22597    -13   
  Methods         949        949          
  Messages          0          0          
  Branches       3962       3960     -2   
==========================================
- Hits          19539      19532     -7   
+ Misses         3071       3065     -6   
  Partials          0          0          

Powered by Codecov. Last update 2ab4c8c...b825c5c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,683,2017-01-13T08:28:04Z,2017-01-13T08:48:14Z,2017-01-13T08:48:14Z,MERGED,True,50,14,3,https://github.com/lukasmacko,ietf-netconf-config-change notification,2,[],https://github.com/sysrepo/sysrepo/pull/683,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/683,fill edit lists inside notification,fill edit lists inside notification,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,683,2017-01-13T08:28:04Z,2017-01-13T08:48:14Z,2017-01-13T08:48:14Z,MERGED,True,50,14,3,https://github.com/lukasmacko,ietf-netconf-config-change notification,2,[],https://github.com/sysrepo/sysrepo/pull/683,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/683#issuecomment-272389360,fill edit lists inside notification,"Current coverage is 86.39% (diff: 100%)

Merging #683 into devel will decrease coverage by 0.08%

@@              devel       #683   diff @@
==========================================
  Files            31         31          
  Lines         22597      22612    +15   
  Methods         949        949          
  Messages          0          0          
  Branches       3960       3963     +3   
==========================================
- Hits          19539      19534     -5   
- Misses         3058       3078    +20   
  Partials          0          0          

Powered by Codecov. Last update 3a01b47...19fc923",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,684,2017-01-16T13:19:08Z,2017-01-17T08:27:53Z,2020-01-15T07:49:48Z,MERGED,True,23,0,2,https://github.com/mislavn,cpp: add print value function for nodes,1,[],https://github.com/sysrepo/sysrepo/pull/684,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/684,"I add a Tree class method for printing only the value of the Tree (sr_node_t).
@rastislavszabo I am not sure about the name of the class method. Because to_string is used for sr_print_tree(), the method is called value_to_string().
Do you wan't to change the API?","I add a Tree class method for printing only the value of the Tree (sr_node_t).
@rastislavszabo I am not sure about the name of the class method. Because to_string is used for sr_print_tree(), the method is called value_to_string().
Do you wan't to change the API?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,684,2017-01-16T13:19:08Z,2017-01-17T08:27:53Z,2020-01-15T07:49:48Z,MERGED,True,23,0,2,https://github.com/mislavn,cpp: add print value function for nodes,1,[],https://github.com/sysrepo/sysrepo/pull/684,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/684#issuecomment-273043495,"I add a Tree class method for printing only the value of the Tree (sr_node_t).
@rastislavszabo I am not sure about the name of the class method. Because to_string is used for sr_print_tree(), the method is called value_to_string().
Do you wan't to change the API?","Current coverage is 86.42% (diff: 100%)

Merging #684 into devel will decrease coverage by 0.05%

@@              devel       #684   diff @@
==========================================
  Files            31         31          
  Lines         22612      22611     -1   
  Methods         949        949          
  Messages          0          0          
  Branches       3963       3963          
==========================================
- Hits          19553      19540    -13   
- Misses         3059       3071    +12   
  Partials          0          0          

Powered by Codecov. Last update 7768829...b385e86",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,685,2017-01-16T16:32:46Z,2017-01-17T07:26:44Z,2017-01-18T17:26:28Z,MERGED,True,8,15,1,https://github.com/jktjkt,tests: Consistently disable valgrind when using sanitizers,1,[],https://github.com/sysrepo/sysrepo/pull/685,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/685,"I tried to do this in 9d732c6, but the fix was not sufficient. With
this change, disabling is performed on the deepest level and it once
again works on my system.","I tried to do this in 9d732c6, but the fix was not sufficient. With
this change, disabling is performed on the deepest level and it once
again works on my system.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,685,2017-01-16T16:32:46Z,2017-01-17T07:26:44Z,2017-01-18T17:26:28Z,MERGED,True,8,15,1,https://github.com/jktjkt,tests: Consistently disable valgrind when using sanitizers,1,[],https://github.com/sysrepo/sysrepo/pull/685,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/685#issuecomment-272918789,"I tried to do this in 9d732c6, but the fix was not sufficient. With
this change, disabling is performed on the deepest level and it once
again works on my system.","Current coverage is 86.47% (diff: 100%)

Merging #685 into devel will increase coverage by <.01%

@@              devel       #685   diff @@
==========================================
  Files            31         31          
  Lines         22612      22613     +1   
  Methods         949        949          
  Messages          0          0          
  Branches       3963       3963          
==========================================
+ Hits          19553      19554     +1   
  Misses         3059       3059          
  Partials          0          0          

Powered by Codecov. Last update 7768829...5f498c7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,686,2017-01-16T17:05:31Z,2017-01-19T07:43:44Z,2017-01-19T07:43:44Z,MERGED,True,89,95,5,https://github.com/mislavn,Cpp code cleanup,4,[],https://github.com/sysrepo/sysrepo/pull/686,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/686,"I implemented some changes that @jktjkt suggested in the pull request #635.
They are:

Remove redundant class method with the use of friends.
Now methods throw exception if the underlying C struct is NULL.
Remove redundant line of code in creating Deleter class instances.
Remove ""return;"" from class destructors

@jktjkt can you take a look at the changes.","I implemented some changes that @jktjkt suggested in the pull request #635.
They are:

Remove redundant class method with the use of friends.
Now methods throw exception if the underlying C struct is NULL.
Remove redundant line of code in creating Deleter class instances.
Remove ""return;"" from class destructors

@jktjkt can you take a look at the changes.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,690,2017-01-17T11:38:12Z,2017-01-18T13:04:34Z,2017-01-18T13:04:36Z,MERGED,True,1171,376,31,https://github.com/rastislavs,"PM data cache, sr_session_check + doc updates",14,[],https://github.com/sysrepo/sysrepo/pull/690,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/690,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,690,2017-01-17T11:38:12Z,2017-01-18T13:04:34Z,2017-01-18T13:04:36Z,MERGED,True,1171,376,31,https://github.com/rastislavs,"PM data cache, sr_session_check + doc updates",14,[],https://github.com/sysrepo/sysrepo/pull/690,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/690#issuecomment-273464325,,"Current coverage is 86.48% (diff: 91.67%)

Merging #690 into devel will increase coverage by 0.05%

@@              devel       #690   diff @@
==========================================
  Files            31         31          
  Lines         22612      22890   +278   
  Methods         949        960    +11   
  Messages          0          0          
  Branches       3963       4009    +46   
==========================================
+ Hits          19544      19795   +251   
- Misses         3068       3095    +27   
  Partials          0          0          

Powered by Codecov. Last update 6fe19fb...6ba8082",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,691,2017-01-17T12:24:58Z,2017-01-18T13:05:19Z,2017-01-18T13:05:19Z,MERGED,True,1,1,1,https://github.com/rastislavs,fixed #689,1,[],https://github.com/sysrepo/sysrepo/pull/691,https://github.com/rastislavs,1,https://github.com/sysrepo/sysrepo/pull/691,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,691,2017-01-17T12:24:58Z,2017-01-18T13:05:19Z,2017-01-18T13:05:19Z,MERGED,True,1,1,1,https://github.com/rastislavs,fixed #689,1,[],https://github.com/sysrepo/sysrepo/pull/691,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/691#issuecomment-273131309,,"Current coverage is 85.63% (diff: 100%)

Merging #691 into master will decrease coverage by 0.06%

@@             master       #691   diff @@
==========================================
  Files            29         29          
  Lines         19667      19668     +1   
  Methods         830        830          
  Messages          0          0          
  Branches       3408       3408          
==========================================
- Hits          16852      16842    -10   
- Misses         2815       2826    +11   
  Partials          0          0          

Powered by Codecov. Last update 0c9c481...dd947fe",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,692,2017-01-18T16:00:30Z,2017-01-18T17:56:30Z,2020-01-15T07:49:34Z,MERGED,True,49,50,4,https://github.com/mislavn,Callbac fix,2,[],https://github.com/sysrepo/sysrepo/pull/692,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/692,"Hi,
This pull request fixes an issue I had in Lua where sometimes sessions would not get properly freed.","Hi,
This pull request fixes an issue I had in Lua where sometimes sessions would not get properly freed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,692,2017-01-18T16:00:30Z,2017-01-18T17:56:30Z,2020-01-15T07:49:34Z,MERGED,True,49,50,4,https://github.com/mislavn,Callbac fix,2,[],https://github.com/sysrepo/sysrepo/pull/692,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/692#issuecomment-273546812,"Hi,
This pull request fixes an issue I had in Lua where sometimes sessions would not get properly freed.","Current coverage is 86.50% (diff: 100%)

Merging #692 into devel will decrease coverage by 0.03%

@@              devel       #692   diff @@
==========================================
  Files            31         31          
  Lines         22889      22889          
  Methods         960        960          
  Messages          0          0          
  Branches       4009       4009          
==========================================
- Hits          19805      19798     -7   
- Misses         3084       3091     +7   
  Partials          0          0          

Powered by Codecov. Last update fe17fc9...89d8f93",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,694,2017-01-19T14:58:09Z,2017-01-20T15:21:30Z,2017-01-20T15:21:30Z,MERGED,True,1188,64,13,https://github.com/lukasmacko,Instance id advanced validation,9,[],https://github.com/sysrepo/sysrepo/pull/694,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/694,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,694,2017-01-19T14:58:09Z,2017-01-20T15:21:30Z,2017-01-20T15:21:30Z,MERGED,True,1188,64,13,https://github.com/lukasmacko,Instance id advanced validation,9,[],https://github.com/sysrepo/sysrepo/pull/694,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/694#issuecomment-274086658,,"Current coverage is 86.58% (diff: 87.64%)

Merging #694 into devel will increase coverage by 0.10%

@@              devel       #694   diff @@
==========================================
  Files            31         31          
  Lines         22896      23314   +418   
  Methods         960        971    +11   
  Messages          0          0          
  Branches       4010       4090    +80   
==========================================
+ Hits          19802      20186   +384   
- Misses         3094       3128    +34   
  Partials          0          0          

Powered by Codecov. Last update 0168fa8...9e78f26",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,695,2017-01-20T16:42:41Z,2017-01-23T07:13:18Z,2017-01-23T07:13:19Z,MERGED,True,2086,396,16,https://github.com/milanlenco,NACM for the commit operation,6,[],https://github.com/sysrepo/sysrepo/pull/695,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/695,"TODO:

disable NACM by default, add option to enable
NACM config reloading
NACM state data
copy config operation","TODO:

disable NACM by default, add option to enable
NACM config reloading
NACM state data
copy config operation",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,695,2017-01-20T16:42:41Z,2017-01-23T07:13:18Z,2017-01-23T07:13:19Z,MERGED,True,2086,396,16,https://github.com/milanlenco,NACM for the commit operation,6,[],https://github.com/sysrepo/sysrepo/pull/695,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/695#issuecomment-274131718,"TODO:

disable NACM by default, add option to enable
NACM config reloading
NACM state data
copy config operation","Current coverage is 86.58% (diff: 87.63%)

Merging #695 into devel will decrease coverage by 0.04%

@@              devel       #695   diff @@
==========================================
  Files            31         31          
  Lines         23314      23505   +191   
  Methods         971        979     +8   
  Messages          0          0          
  Branches       4090       4127    +37   
==========================================
+ Hits          20194      20351   +157   
- Misses         3120       3154    +34   
  Partials          0          0          

Powered by Codecov. Last update 29065da...f2be8db",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,696,2017-01-23T09:17:23Z,2017-01-23T10:27:32Z,2017-01-23T10:27:32Z,MERGED,True,56,130,4,https://github.com/lukasmacko,Xpath validation for get-like calls,2,[],https://github.com/sysrepo/sysrepo/pull/696,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/696,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,698,2017-01-23T11:37:41Z,2017-01-23T14:14:35Z,2017-01-23T14:14:35Z,MERGED,True,10,23,4,https://github.com/lukasmacko,Integrate libyang changes,2,[],https://github.com/sysrepo/sysrepo/pull/698,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/698,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,698,2017-01-23T11:37:41Z,2017-01-23T14:14:35Z,2017-01-23T14:14:35Z,MERGED,True,10,23,4,https://github.com/lukasmacko,Integrate libyang changes,2,[],https://github.com/sysrepo/sysrepo/pull/698,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/698#issuecomment-274469035,,"Current coverage is 86.55% (diff: 100%)

No coverage report found for devel at c98d2dc.


Powered by Codecov. Last update c98d2dc...6954b03",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,699,2017-01-25T06:54:53Z,2017-01-25T09:01:11Z,2017-01-25T09:01:11Z,MERGED,True,195,14,5,https://github.com/lukasmacko,Validation of xpath used in subscribe calls + test fix #288,4,[],https://github.com/sysrepo/sysrepo/pull/699,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/699,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,700,2017-01-25T10:07:03Z,2017-01-25T12:03:46Z,2017-01-25T12:03:46Z,MERGED,True,52,20,3,https://github.com/lukasmacko,Fix SA,1,[],https://github.com/sysrepo/sysrepo/pull/700,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/700,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,700,2017-01-25T10:07:03Z,2017-01-25T12:03:46Z,2017-01-25T12:03:46Z,MERGED,True,52,20,3,https://github.com/lukasmacko,Fix SA,1,[],https://github.com/sysrepo/sysrepo/pull/700,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/700#issuecomment-275089632,,"Current coverage is 86.76% (diff: 74.36%)

Merging #700 into devel will decrease coverage by 0.06%

@@              devel       #700   diff @@
==========================================
  Files            31         31          
  Lines         23498      23523    +25   
  Methods         979        980     +1   
  Messages          0          0          
  Branches       4126       4128     +2   
==========================================
+ Hits          20401      20409     +8   
- Misses         3097       3114    +17   
  Partials          0          0          

Powered by Codecov. Last update 66eaed6...2a19a2d",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,701,2017-01-26T07:30:36Z,2017-01-26T09:42:36Z,2017-01-26T09:42:36Z,MERGED,True,1044,119,15,https://github.com/milanlenco,"Disable NACM by default, add option to enable.",2,[],https://github.com/sysrepo/sysrepo/pull/701,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/701,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,701,2017-01-26T07:30:36Z,2017-01-26T09:42:36Z,2017-01-26T09:42:36Z,MERGED,True,1044,119,15,https://github.com/milanlenco,"Disable NACM by default, add option to enable.",2,[],https://github.com/sysrepo/sysrepo/pull/701,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/701#issuecomment-275331198,,"Current coverage is 86.68% (diff: 100%)

Merging #701 into devel will decrease coverage by 0.01%

@@              devel       #701   diff @@
==========================================
  Files            31         31          
  Lines         23522      23527     +5   
  Methods         980        980          
  Messages          0          0          
  Branches       4128       4131     +3   
==========================================
+ Hits          20390      20393     +3   
- Misses         3132       3134     +2   
  Partials          0          0          

Powered by Codecov. Last update 2c01587...7c7e858",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,702,2017-01-26T11:59:01Z,2017-01-27T07:15:09Z,2017-01-27T07:15:09Z,MERGED,True,136,33,7,https://github.com/lukasmacko,sr_get_submodule_schema apply michal's patch Fix #693,3,[],https://github.com/sysrepo/sysrepo/pull/702,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/702,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,702,2017-01-26T11:59:01Z,2017-01-27T07:15:09Z,2017-01-27T07:15:09Z,MERGED,True,136,33,7,https://github.com/lukasmacko,sr_get_submodule_schema apply michal's patch Fix #693,3,[],https://github.com/sysrepo/sysrepo/pull/702,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/702#issuecomment-275380179,,"Current coverage is 86.57% (diff: 50.00%)

Merging #702 into devel will decrease coverage by 0.14%

@@              devel       #702   diff @@
==========================================
  Files            31         31          
  Lines         23529      23573    +44   
  Methods         980        981     +1   
  Messages          0          0          
  Branches       4131       4141    +10   
==========================================
+ Hits          20404      20408     +4   
- Misses         3125       3165    +40   
  Partials          0          0          

Powered by Codecov. Last update 6034119...839b210",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,703,2017-01-26T13:25:33Z,2017-01-27T07:41:56Z,2017-01-27T07:41:56Z,MERGED,True,165,31,5,https://github.com/milanlenco,NACM statistics,2,[],https://github.com/sysrepo/sysrepo/pull/703,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/703,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,703,2017-01-26T13:25:33Z,2017-01-27T07:41:56Z,2017-01-27T07:41:56Z,MERGED,True,165,31,5,https://github.com/milanlenco,NACM statistics,2,[],https://github.com/sysrepo/sysrepo/pull/703,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/703#issuecomment-275397893,,"Current coverage is 88.08% (diff: 92.98%)

Merging #703 into devel will increase coverage by 1.36%

@@              devel       #703   diff @@
==========================================
  Files            31         31           
  Lines         23529      26106   +2577   
  Methods         980       1155    +175   
  Messages          0          0           
  Branches       4131       4940    +809   
==========================================
+ Hits          20404      22995   +2591   
+ Misses         3125       3111     -14   
  Partials          0          0           


Powered by Codecov. Last update 6034119...91e21cf",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,704,2017-01-26T14:21:33Z,2017-03-15T10:43:47Z,2020-01-15T07:49:52Z,MERGED,True,2976,168,27,https://github.com/antonio-paunovic,Port of existing Python2 tests to Python3.,7,[],https://github.com/sysrepo/sysrepo/pull/704,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/704,"Differences between Python versions and CMake are adjusted to work same as Python2 tests.
Tests are copied and modified to work with Python3.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr","Differences between Python versions and CMake are adjusted to work same as Python2 tests.
Tests are copied and modified to work with Python3.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,704,2017-01-26T14:21:33Z,2017-03-15T10:43:47Z,2020-01-15T07:49:52Z,MERGED,True,2976,168,27,https://github.com/antonio-paunovic,Port of existing Python2 tests to Python3.,7,[],https://github.com/sysrepo/sysrepo/pull/704,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/704#issuecomment-275403082,"Differences between Python versions and CMake are adjusted to work same as Python2 tests.
Tests are copied and modified to work with Python3.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr","Codecov Report

Merging #704 into devel will decrease coverage by 0.06%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #704      +/-   ##
==========================================
- Coverage   87.02%   86.96%   -0.06%     
==========================================
  Files          31       31              
  Lines       23859    23859              
  Branches     4188     4188              
==========================================
- Hits        20761    20747      -14     
- Misses       3098     3112      +14

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e6a4db8...ab43b79. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,705,2017-01-30T09:46:07Z,2017-01-30T11:51:53Z,2017-01-30T11:51:53Z,MERGED,True,173,15,10,https://github.com/lukasmacko,Wait for commit to finish on cleanup,3,[],https://github.com/sysrepo/sysrepo/pull/705,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/705,Fix #283,Fix #283,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,711,2017-01-31T08:31:48Z,2017-02-01T12:49:52Z,2017-02-01T12:49:52Z,MERGED,True,477,142,12,https://github.com/milanlenco,NACM reloading,7,[],https://github.com/sysrepo/sysrepo/pull/711,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/711,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,711,2017-01-31T08:31:48Z,2017-02-01T12:49:52Z,2017-02-01T12:49:52Z,MERGED,True,477,142,12,https://github.com/milanlenco,NACM reloading,7,[],https://github.com/sysrepo/sysrepo/pull/711,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/711#issuecomment-276303961,,"Codecov Report

Merging #711 into devel will increase coverage by -0.03%.

@@            Coverage Diff             @@
##            devel     #711      +/-   ##
==========================================
- Coverage   86.91%   86.87%   -0.03%     
==========================================
  Files          31       31              
  Lines       23698    23730      +32     
  Branches     4162     4172      +10     
==========================================
+ Hits        20595    20615      +20     
- Misses       3103     3115      +12

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 51d2ba6...9d3d4d4. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,713,2017-01-31T12:03:59Z,2017-02-02T17:38:36Z,2017-02-02T17:38:36Z,MERGED,True,1,3,2,https://github.com/jktjkt,cmake: Use correct dependencies for the protobuf-c invocation,1,[],https://github.com/sysrepo/sysrepo/pull/713,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/713,"The build was failing every now and then on a 12-CPU build VM (which
results in 18 jobs in Ninja AFAIK):
  + ninja-build install
  [1/175] cd /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/tests && mkdir -p /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/data/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/data/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-persistent-data.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-module-dependencies.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-notification-store.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/
  [2/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  FAILED: tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  /opt/rh/devtoolset-6/root/usr/bin/cc   -I. -I../inc -I/home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/dest/include -I../src -I../src/clientlib -I../src/common -Isrc/common -I../tests/helpers -Itests/helpers -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0 -MD -MT tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o -MF tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o.d -o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o   -c ../tests/helpers/test_module_helper.c
  In file included from ../tests/helpers/test_module_helper.h:26:0,
                   from ../tests/helpers/test_module_helper.c:22:
  ../src/data_manager.h:30:26: fatal error: sysrepo.pb-c.h: No such file or directory
   #include ""sysrepo.pb-c.h""
                            ^
  compilation terminated.
  [3/175] Running C protocol buffer compiler on /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/src/sysrepo.proto
  [4/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o
  [5/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o
  [6/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o
  ninja: build stopped: subcommand failed.

It runs out that CMake's docs explain that one cannot use these
generated files as inputs in more than one target:

Do not list the output in more than one independent target that may
build in parallel or the two instances of the rule may conflict
(instead use add_custom_target to drive the command and make the other
targets depend on that one).

Nils Gladitz (ngladitz on #cmake) explained that to me:
  12:26 <+ngladitz> jkt: looks like you might have more than one issue there
  12:27 <+ngladitz> you should not have more than one target directly depending on a custom command output in the same scope (you seem to have two)
  12:27 <+ngladitz> and the HELPERS target might be missing a dependency on ""proto""
  12:29 < jkt> ngladitz: I'm sorry, what's the second one? I see the `add_custom_target(proto ...)`
  12:29 <+ngladitz> add_library(COMMON OBJECT ${COMMON_SOURCES}) where COMMON_SOURCES contains ${GENERATED_PROTO_C} ...
  [...]
  12:46 < jkt> ngladitz: because I'm afraid I don't know how I can create just one target which depends on the generated files given that the .h is used in several  libraries (but not listed in the input files for these libs)
  12:47 <+ngladitz> that is fine ... it just shouldn't be explicitly listed as a file dependency in the same directory scope more than once
  12:48 <+ngladitz> other targets that also depend on the header can depend on COMMON instead

This fix removes that explicit dependency attempt in favor of just
listing the generated files as an input to one target (""COMMON""). All
but one users of the generated .h file are defined in src/CMakeLists.txt
in COMMON or in targets which already depend on COMMON. The only
exception is cm_test which therefore needs that explicit dependency (or
maybe it doesn't, but it definitely doesn't hurt).
I've tested this by nuking the build dir and running the build with
ninja -j666. The order of deps looks sane. We could possible get more
parallelism if we split COMMON into several targets, but that doesn't
look like a terrific improvement.","The build was failing every now and then on a 12-CPU build VM (which
results in 18 jobs in Ninja AFAIK):
  + ninja-build install
  [1/175] cd /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/tests && mkdir -p /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/data/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/data/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-persistent-data.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-module-dependencies.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-notification-store.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/
  [2/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  FAILED: tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  /opt/rh/devtoolset-6/root/usr/bin/cc   -I. -I../inc -I/home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/dest/include -I../src -I../src/clientlib -I../src/common -Isrc/common -I../tests/helpers -Itests/helpers -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0 -MD -MT tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o -MF tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o.d -o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o   -c ../tests/helpers/test_module_helper.c
  In file included from ../tests/helpers/test_module_helper.h:26:0,
                   from ../tests/helpers/test_module_helper.c:22:
  ../src/data_manager.h:30:26: fatal error: sysrepo.pb-c.h: No such file or directory
   #include ""sysrepo.pb-c.h""
                            ^
  compilation terminated.
  [3/175] Running C protocol buffer compiler on /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/src/sysrepo.proto
  [4/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o
  [5/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o
  [6/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o
  ninja: build stopped: subcommand failed.

It runs out that CMake's docs explain that one cannot use these
generated files as inputs in more than one target:

Do not list the output in more than one independent target that may
build in parallel or the two instances of the rule may conflict
(instead use add_custom_target to drive the command and make the other
targets depend on that one).

Nils Gladitz (ngladitz on #cmake) explained that to me:
  12:26 <+ngladitz> jkt: looks like you might have more than one issue there
  12:27 <+ngladitz> you should not have more than one target directly depending on a custom command output in the same scope (you seem to have two)
  12:27 <+ngladitz> and the HELPERS target might be missing a dependency on ""proto""
  12:29 < jkt> ngladitz: I'm sorry, what's the second one? I see the `add_custom_target(proto ...)`
  12:29 <+ngladitz> add_library(COMMON OBJECT ${COMMON_SOURCES}) where COMMON_SOURCES contains ${GENERATED_PROTO_C} ...
  [...]
  12:46 < jkt> ngladitz: because I'm afraid I don't know how I can create just one target which depends on the generated files given that the .h is used in several  libraries (but not listed in the input files for these libs)
  12:47 <+ngladitz> that is fine ... it just shouldn't be explicitly listed as a file dependency in the same directory scope more than once
  12:48 <+ngladitz> other targets that also depend on the header can depend on COMMON instead

This fix removes that explicit dependency attempt in favor of just
listing the generated files as an input to one target (""COMMON""). All
but one users of the generated .h file are defined in src/CMakeLists.txt
in COMMON or in targets which already depend on COMMON. The only
exception is cm_test which therefore needs that explicit dependency (or
maybe it doesn't, but it definitely doesn't hurt).
I've tested this by nuking the build dir and running the build with
ninja -j666. The order of deps looks sane. We could possible get more
parallelism if we split COMMON into several targets, but that doesn't
look like a terrific improvement.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,713,2017-01-31T12:03:59Z,2017-02-02T17:38:36Z,2017-02-02T17:38:36Z,MERGED,True,1,3,2,https://github.com/jktjkt,cmake: Use correct dependencies for the protobuf-c invocation,1,[],https://github.com/sysrepo/sysrepo/pull/713,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/713#issuecomment-276346324,"The build was failing every now and then on a 12-CPU build VM (which
results in 18 jobs in Ninja AFAIK):
  + ninja-build install
  [1/175] cd /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/tests && mkdir -p /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/data/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/data/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-persistent-data.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-module-dependencies.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/ && cp /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/yang/sysrepo-notification-store.yang /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/build/repository/yang/internal/
  [2/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  FAILED: tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  /opt/rh/devtoolset-6/root/usr/bin/cc   -I. -I../inc -I/home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/dest/include -I../src -I../src/clientlib -I../src/common -Isrc/common -I../tests/helpers -Itests/helpers -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0 -MD -MT tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o -MF tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o.d -o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o   -c ../tests/helpers/test_module_helper.c
  In file included from ../tests/helpers/test_module_helper.h:26:0,
                   from ../tests/helpers/test_module_helper.c:22:
  ../src/data_manager.h:30:26: fatal error: sysrepo.pb-c.h: No such file or directory
   #include ""sysrepo.pb-c.h""
                            ^
  compilation terminated.
  [3/175] Running C protocol buffer compiler on /home/turbo-hipster/jobs/bf5a7557514d/44/44/2/check/check-czechlight-devtoolset6-el7/0363a8d/sysrepo/sysrepo/src/sysrepo.proto
  [4/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o
  [5/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o
  [6/175] Building C object tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o
  ninja: build stopped: subcommand failed.

It runs out that CMake's docs explain that one cannot use these
generated files as inputs in more than one target:

Do not list the output in more than one independent target that may
build in parallel or the two instances of the rule may conflict
(instead use add_custom_target to drive the command and make the other
targets depend on that one).

Nils Gladitz (ngladitz on #cmake) explained that to me:
  12:26 <+ngladitz> jkt: looks like you might have more than one issue there
  12:27 <+ngladitz> you should not have more than one target directly depending on a custom command output in the same scope (you seem to have two)
  12:27 <+ngladitz> and the HELPERS target might be missing a dependency on ""proto""
  12:29 < jkt> ngladitz: I'm sorry, what's the second one? I see the `add_custom_target(proto ...)`
  12:29 <+ngladitz> add_library(COMMON OBJECT ${COMMON_SOURCES}) where COMMON_SOURCES contains ${GENERATED_PROTO_C} ...
  [...]
  12:46 < jkt> ngladitz: because I'm afraid I don't know how I can create just one target which depends on the generated files given that the .h is used in several  libraries (but not listed in the input files for these libs)
  12:47 <+ngladitz> that is fine ... it just shouldn't be explicitly listed as a file dependency in the same directory scope more than once
  12:48 <+ngladitz> other targets that also depend on the header can depend on COMMON instead

This fix removes that explicit dependency attempt in favor of just
listing the generated files as an input to one target (""COMMON""). All
but one users of the generated .h file are defined in src/CMakeLists.txt
in COMMON or in targets which already depend on COMMON. The only
exception is cm_test which therefore needs that explicit dependency (or
maybe it doesn't, but it definitely doesn't hurt).
I've tested this by nuking the build dir and running the build with
ninja -j666. The order of deps looks sane. We could possible get more
parallelism if we split COMMON into several targets, but that doesn't
look like a terrific improvement.","Codecov Report

Merging #713 into devel will increase coverage by 1.24%.

@@            Coverage Diff             @@
##            devel     #713      +/-   ##
==========================================
+ Coverage   86.91%   88.14%   +1.24%     
==========================================
  Files          31       31              
  Lines       23698    26611    +2913     
  Branches     4162     5164    +1002     
==========================================
+ Hits        20595    23456    +2861     
- Misses       3103     3155      +52

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 51d2ba6...1b56f98. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,714,2017-01-31T12:49:22Z,2017-02-01T13:09:06Z,2017-02-01T13:09:06Z,MERGED,True,147,6,4,https://github.com/lukasmacko,Fix blocked read in verify cb,4,[],https://github.com/sysrepo/sysrepo/pull/714,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/714,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,714,2017-01-31T12:49:22Z,2017-02-01T13:09:06Z,2017-02-01T13:09:06Z,MERGED,True,147,6,4,https://github.com/lukasmacko,Fix blocked read in verify cb,4,[],https://github.com/sysrepo/sysrepo/pull/714,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/714#issuecomment-276354768,,"Codecov Report

Merging #714 into devel will increase coverage by 0.09%.

@@            Coverage Diff             @@
##            devel     #714      +/-   ##
==========================================
+ Coverage   86.88%   86.97%   +0.09%     
==========================================
  Files          31       31              
  Lines       23729    23747      +18     
  Branches     4172     4176       +4     
==========================================
+ Hits        20615    20653      +38     
+ Misses       3114     3094      -20

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3a28790...becb9c0. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,715,2017-02-01T08:14:48Z,2017-02-01T13:10:51Z,2017-02-01T13:10:51Z,CLOSED,False,0,19,2,https://github.com/milanlenco,Revert workaround for the libyang bug related to mmap. #639 - invalid pull request,1,[],https://github.com/sysrepo/sysrepo/pull/715,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/715,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,716,2017-02-01T13:12:03Z,2017-02-01T13:37:43Z,2017-02-01T13:37:43Z,MERGED,True,0,19,2,https://github.com/milanlenco,Revert workaround for the libyang bug related to mmap. #639,1,[],https://github.com/sysrepo/sysrepo/pull/716,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/716,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,716,2017-02-01T13:12:03Z,2017-02-01T13:37:43Z,2017-02-01T13:37:43Z,MERGED,True,0,19,2,https://github.com/milanlenco,Revert workaround for the libyang bug related to mmap. #639,1,[],https://github.com/sysrepo/sysrepo/pull/716,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/716#issuecomment-276657820,,"Codecov Report

Merging #716 into devel will increase coverage by 1.25%.

@@            Coverage Diff             @@
##            devel     #716      +/-   ##
==========================================
+ Coverage   85.74%   86.99%   +1.25%     
==========================================
  Files          31       31              
  Lines       23704    23736      +32     
  Branches     4168     4172       +4     
==========================================
+ Hits        20324    20649     +325     
+ Misses       3380     3087     -293

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9dc5da8...5e085e5. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,717,2017-02-01T14:07:08Z,2017-02-02T06:54:08Z,2017-02-02T06:54:09Z,MERGED,True,3,1,2,https://github.com/milanlenco,Fix report-crash.sh,2,[],https://github.com/sysrepo/sysrepo/pull/717,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/717,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,717,2017-02-01T14:07:08Z,2017-02-02T06:54:08Z,2017-02-02T06:54:09Z,MERGED,True,3,1,2,https://github.com/milanlenco,Fix report-crash.sh,2,[],https://github.com/sysrepo/sysrepo/pull/717,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/717#issuecomment-276672704,,"Codecov Report

Merging #717 into devel will increase coverage by -0.08%.

@@            Coverage Diff             @@
##            devel     #717      +/-   ##
==========================================
- Coverage   87.02%   86.93%   -0.08%     
==========================================
  Files          31       31              
  Lines       23736    23735       -1     
  Branches     4172     4172              
==========================================
- Hits        20654    20634      -20     
- Misses       3082     3101      +19

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8d57a31...d294e7a. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,718,2017-02-02T07:36:22Z,2017-02-02T17:37:05Z,2017-02-02T17:37:05Z,MERGED,True,49,31,6,https://github.com/milanlenco,Re-enable OS X build.,9,[],https://github.com/sysrepo/sysrepo/pull/718,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/718,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,718,2017-02-02T07:36:22Z,2017-02-02T17:37:05Z,2017-02-02T17:37:05Z,MERGED,True,49,31,6,https://github.com/milanlenco,Re-enable OS X build.,9,[],https://github.com/sysrepo/sysrepo/pull/718,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/718#issuecomment-276895522,,"Codecov Report

Merging #718 into devel will increase coverage by 0.06%.

@@            Coverage Diff             @@
##            devel     #718      +/-   ##
==========================================
+ Coverage   86.94%   86.99%   +0.06%     
==========================================
  Files          31       31              
  Lines       23735    23744       +9     
  Branches     4172     4174       +2     
==========================================
+ Hits        20635    20656      +21     
+ Misses       3100     3088      -12

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1befdc0...2db5356. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,719,2017-02-02T08:59:31Z,2017-02-02T10:01:06Z,2017-02-02T10:01:06Z,MERGED,True,4,0,1,https://github.com/lukasmacko,Doc improvements,2,[],https://github.com/sysrepo/sysrepo/pull/719,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/719,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,719,2017-02-02T08:59:31Z,2017-02-02T10:01:06Z,2017-02-02T10:01:06Z,MERGED,True,4,0,1,https://github.com/lukasmacko,Doc improvements,2,[],https://github.com/sysrepo/sysrepo/pull/719,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/719#issuecomment-276914248,,"Codecov Report

Merging #719 into devel will increase coverage by 0.05%.

@@            Coverage Diff             @@
##            devel     #719      +/-   ##
==========================================
+ Coverage   86.94%   86.99%   +0.05%     
==========================================
  Files          31       31              
  Lines       23735    23735              
  Branches     4172     4172              
==========================================
+ Hits        20635    20646      +11     
+ Misses       3100     3089      -11

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1befdc0...f08794a. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,721,2017-02-03T06:41:39Z,2017-02-03T08:42:09Z,2017-02-03T08:42:12Z,MERGED,True,33,63,3,https://github.com/lukasmacko,Two fixes,2,[],https://github.com/sysrepo/sysrepo/pull/721,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/721,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,721,2017-02-03T06:41:39Z,2017-02-03T08:42:09Z,2017-02-03T08:42:12Z,MERGED,True,33,63,3,https://github.com/lukasmacko,Two fixes,2,[],https://github.com/sysrepo/sysrepo/pull/721,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/721#issuecomment-277193122,,"Codecov Report

Merging #721 into devel will increase coverage by 0.16%.

@@            Coverage Diff             @@
##            devel     #721      +/-   ##
==========================================
+ Coverage   86.88%   87.04%   +0.16%     
==========================================
  Files          31       31              
  Lines       23745    23715      -30     
  Branches     4174     4163      -11     
==========================================
+ Hits        20629    20642      +13     
+ Misses       3116     3073      -43

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f7f8199...9cbdff2. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,722,2017-02-03T07:23:28Z,2017-02-06T07:42:52Z,2017-02-06T07:42:52Z,CLOSED,False,431,314,18,https://github.com/milanlenco,Print daemon logs in nacm_cl_test.,10,[],https://github.com/sysrepo/sysrepo/pull/722,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/722,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,722,2017-02-03T07:23:28Z,2017-02-06T07:42:52Z,2017-02-06T07:42:52Z,CLOSED,False,431,314,18,https://github.com/milanlenco,Print daemon logs in nacm_cl_test.,10,[],https://github.com/sysrepo/sysrepo/pull/722,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/722#issuecomment-277190538,,"Codecov Report

Merging #722 into devel will increase coverage by -0.23%.

@@            Coverage Diff             @@
##            devel     #722      +/-   ##
==========================================
- Coverage   86.88%   86.65%   -0.23%     
==========================================
  Files          31       31              
  Lines       23745    23739       -6     
  Branches     4174     4174              
==========================================
- Hits        20629    20570      -59     
- Misses       3116     3169      +53

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f7f8199...c1f7dab. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,724,2017-02-03T14:44:03Z,2017-02-06T09:29:03Z,2017-02-13T11:12:45Z,MERGED,True,2,1,1,https://github.com/jktjkt,cmake: Fix protobuf-c invocation once again,1,[],https://github.com/sysrepo/sysrepo/pull/724,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/724,"This builds on top of 1b56f98;
apparently, my change was not enough for at least some versions of CMake
and Ninja:
  + ninja-build install
  [1/140] cd /home/turbo-hipster/jobs/...
  [2/140] Building C object tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  FAILED: tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  /opt/rh/devtoolset-6/root/usr/bin/cc   -I. -I../inc -I/home/turbo-hipster/target/include -I../src -I../src/clientlib -I../src/common -Isrc/common -I../tests/helpers -Itests/helpers -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0 -MD -MT tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o -MF tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o.d -o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o   -c ../tests/helpers/test_module_helper.c
  In file included from ../tests/helpers/test_module_helper.h:26:0,
                   from ../tests/helpers/test_module_helper.c:22:
  ../src/data_manager.h:30:26: fatal error: sysrepo.pb-c.h: No such file or directory
   #include ""sysrepo.pb-c.h""
                            ^
  compilation terminated.

When I tried to fix this, I forgot that the HELPERS also include files such as
the data_manager.h which in turn depend on the generated .h.","This builds on top of 1b56f98;
apparently, my change was not enough for at least some versions of CMake
and Ninja:
  + ninja-build install
  [1/140] cd /home/turbo-hipster/jobs/...
  [2/140] Building C object tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  FAILED: tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  /opt/rh/devtoolset-6/root/usr/bin/cc   -I. -I../inc -I/home/turbo-hipster/target/include -I../src -I../src/clientlib -I../src/common -Isrc/common -I../tests/helpers -Itests/helpers -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0 -MD -MT tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o -MF tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o.d -o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o   -c ../tests/helpers/test_module_helper.c
  In file included from ../tests/helpers/test_module_helper.h:26:0,
                   from ../tests/helpers/test_module_helper.c:22:
  ../src/data_manager.h:30:26: fatal error: sysrepo.pb-c.h: No such file or directory
   #include ""sysrepo.pb-c.h""
                            ^
  compilation terminated.

When I tried to fix this, I forgot that the HELPERS also include files such as
the data_manager.h which in turn depend on the generated .h.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,724,2017-02-03T14:44:03Z,2017-02-06T09:29:03Z,2017-02-13T11:12:45Z,MERGED,True,2,1,1,https://github.com/jktjkt,cmake: Fix protobuf-c invocation once again,1,[],https://github.com/sysrepo/sysrepo/pull/724,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/724#issuecomment-277624015,"This builds on top of 1b56f98;
apparently, my change was not enough for at least some versions of CMake
and Ninja:
  + ninja-build install
  [1/140] cd /home/turbo-hipster/jobs/...
  [2/140] Building C object tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  FAILED: tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
  /opt/rh/devtoolset-6/root/usr/bin/cc   -I. -I../inc -I/home/turbo-hipster/target/include -I../src -I../src/clientlib -I../src/common -Isrc/common -I../tests/helpers -Itests/helpers -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0 -MD -MT tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o -MF tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o.d -o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o   -c ../tests/helpers/test_module_helper.c
  In file included from ../tests/helpers/test_module_helper.h:26:0,
                   from ../tests/helpers/test_module_helper.c:22:
  ../src/data_manager.h:30:26: fatal error: sysrepo.pb-c.h: No such file or directory
   #include ""sysrepo.pb-c.h""
                            ^
  compilation terminated.

When I tried to fix this, I forgot that the HELPERS also include files such as
the data_manager.h which in turn depend on the generated .h.","Codecov Report

Merging #724 into devel will increase coverage by 0.82%.

@@            Coverage Diff            @@
##           devel     #724      +/-   ##
=========================================
+ Coverage     87%   87.82%   +0.82%     
=========================================
  Files         31       31              
  Lines      23714    25234    +1520     
  Branches    4163     4708     +545     
=========================================
+ Hits       20630    22160    +1530     
+ Misses      3084     3074      -10

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a026526...b33cf74. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,725,2017-02-06T08:39:36Z,2017-02-06T08:51:06Z,2017-02-06T08:51:06Z,MERGED,True,424,308,18,https://github.com/milanlenco,Improving build stability and Travis debugging support,12,[],https://github.com/sysrepo/sysrepo/pull/725,https://github.com/milanlenco,1,https://github.com/sysrepo/sysrepo/pull/725,"This pull request includes:

some more detailed logs
use of asserts that print backtrace in unit test helpers
yet another ""watchdog"", but this one on the process level that will kill the test (with core dump) if it doesn't finish inside the 6min time limit or cannot kill itself (actually, the thread-based watchdog could be reverted now).
added uint64_t ID for requests -- identifying requests by pointer is not safe because our memory management re-uses memory a lot, thus a newly created request will very likely use the same memory region (i.e. the same ID) as a recently de-allocated request.
temporarily, I have also added a script to be run only on Travis in the background, that prints backtrace of the currently running test at 60 seconds intervals. It will be there only until we catch the issue with frozen build again, to see if non-related processes are also affected and potentially get a backtrace of the critical point. For the time being it may occasionally clutter the build output (but not return value), so please ignore it.","This pull request includes:

some more detailed logs
use of asserts that print backtrace in unit test helpers
yet another ""watchdog"", but this one on the process level that will kill the test (with core dump) if it doesn't finish inside the 6min time limit or cannot kill itself (actually, the thread-based watchdog could be reverted now).
added uint64_t ID for requests -- identifying requests by pointer is not safe because our memory management re-uses memory a lot, thus a newly created request will very likely use the same memory region (i.e. the same ID) as a recently de-allocated request.
temporarily, I have also added a script to be run only on Travis in the background, that prints backtrace of the currently running test at 60 seconds intervals. It will be there only until we catch the issue with frozen build again, to see if non-related processes are also affected and potentially get a backtrace of the critical point. For the time being it may occasionally clutter the build output (but not return value), so please ignore it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,726,2017-02-06T09:49:40Z,2017-02-06T11:09:10Z,2017-02-06T11:09:13Z,MERGED,True,8,0,1,https://github.com/lukasmacko,Clenaup internal state data before next get call,1,[],https://github.com/sysrepo/sysrepo/pull/726,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/726,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,726,2017-02-06T09:49:40Z,2017-02-06T11:09:10Z,2017-02-06T11:09:13Z,MERGED,True,8,0,1,https://github.com/lukasmacko,Clenaup internal state data before next get call,1,[],https://github.com/sysrepo/sysrepo/pull/726,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/726#issuecomment-277636809,,"Codecov Report

Merging #726 into devel will increase coverage by 0.06%.

@@            Coverage Diff             @@
##            devel     #726      +/-   ##
==========================================
+ Coverage   87.02%   87.08%   +0.06%     
==========================================
  Files          31       31              
  Lines       23727    23732       +5     
  Branches     4164     4164              
==========================================
+ Hits        20647    20666      +19     
+ Misses       3080     3066      -14

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ed28a7e...3c4f214. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,730,2017-02-07T11:34:06Z,2017-02-07T13:32:22Z,2017-02-07T13:32:22Z,MERGED,True,673,610,2,https://github.com/lukasmacko,Validation of dm_data_info after load,3,[],https://github.com/sysrepo/sysrepo/pull/730,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/730,Fix #729,Fix #729,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,733,2017-02-08T11:42:20Z,2017-02-10T15:46:32Z,2017-02-13T11:12:26Z,MERGED,True,47,28,5,https://github.com/jktjkt,C++: Add support for submitting notifications and some refactoring,4,[],https://github.com/sysrepo/sysrepo/pull/733,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/733,"Cc: @mislavn

move the RPC and Action invocation out of the Subscribe class to Session because it doesn't depend on some subscriptions
make use of overloading based on arguments so that there's just one rpc_send in place of rpc_send and rpc_send_tree
add support for submitting events using these new conventions","Cc: @mislavn

move the RPC and Action invocation out of the Subscribe class to Session because it doesn't depend on some subscriptions
make use of overloading based on arguments so that there's just one rpc_send in place of rpc_send and rpc_send_tree
add support for submitting events using these new conventions",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,733,2017-02-08T11:42:20Z,2017-02-10T15:46:32Z,2017-02-13T11:12:26Z,MERGED,True,47,28,5,https://github.com/jktjkt,C++: Add support for submitting notifications and some refactoring,4,[],https://github.com/sysrepo/sysrepo/pull/733,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/733#issuecomment-278312911,"Cc: @mislavn

move the RPC and Action invocation out of the Subscribe class to Session because it doesn't depend on some subscriptions
make use of overloading based on arguments so that there's just one rpc_send in place of rpc_send and rpc_send_tree
add support for submitting events using these new conventions","Codecov Report

Merging #733 into devel will not impact coverage by -<.01%.

@@            Coverage Diff             @@
##            devel     #733      +/-   ##
==========================================
- Coverage   87.07%   87.06%   -<.01%     
==========================================
  Files          31       31              
  Lines       23754    23753       -1     
  Branches     4170     4170              
==========================================
- Hits        20682    20680       -2     
- Misses       3072     3073       +1

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 41b05f0...9e31589. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,734,2017-02-08T12:31:43Z,2017-02-10T15:46:13Z,2017-02-10T15:46:13Z,MERGED,True,288,30,7,https://github.com/lukasmacko,Store config change notification,3,[],https://github.com/sysrepo/sysrepo/pull/734,https://github.com/lukasmacko,1,https://github.com/sysrepo/sysrepo/pull/734,"since instance id is not supported in notifications, adding workaround for netconf-config-change notification for now","since instance id is not supported in notifications, adding workaround for netconf-config-change notification for now",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,734,2017-02-08T12:31:43Z,2017-02-10T15:46:13Z,2017-02-10T15:46:13Z,MERGED,True,288,30,7,https://github.com/lukasmacko,Store config change notification,3,[],https://github.com/sysrepo/sysrepo/pull/734,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/734#issuecomment-278323706,"since instance id is not supported in notifications, adding workaround for netconf-config-change notification for now","Codecov Report

Merging #734 into devel will increase coverage by 0.01%.

@@            Coverage Diff             @@
##            devel     #734      +/-   ##
==========================================
+ Coverage   87.07%   87.08%   +0.01%     
==========================================
  Files          31       31              
  Lines       23754    23831      +77     
  Branches     4170     4181      +11     
==========================================
+ Hits        20682    20751      +69     
- Misses       3072     3080       +8

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 41b05f0...587f5ab. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,743,2017-02-22T14:13:59Z,2017-03-03T19:02:53Z,2017-03-03T19:02:53Z,MERGED,True,56,10,2,https://github.com/PavolVican,Change getting NACM flag from schema node,3,[],https://github.com/sysrepo/sysrepo/pull/743,https://github.com/PavolVican,1,https://github.com/sysrepo/sysrepo/pull/743,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,743,2017-02-22T14:13:59Z,2017-03-03T19:02:53Z,2017-03-03T19:02:53Z,MERGED,True,56,10,2,https://github.com/PavolVican,Change getting NACM flag from schema node,3,[],https://github.com/sysrepo/sysrepo/pull/743,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/743#issuecomment-282335210,,"Hi,
at the moment the libynag and sysrepo devel branches are not in sync, we will fix this in the next few days.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,743,2017-02-22T14:13:59Z,2017-03-03T19:02:53Z,2017-03-03T19:02:53Z,MERGED,True,56,10,2,https://github.com/PavolVican,Change getting NACM flag from schema node,3,[],https://github.com/sysrepo/sysrepo/pull/743,https://github.com/PavolVican,3,https://github.com/sysrepo/sysrepo/pull/743#issuecomment-282370306,,"Hi.
I think libyang is ready at current devel version. This pull request was pushed, but extension branch wasn't merged in devel.
Regards,
Pavol",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,743,2017-02-22T14:13:59Z,2017-03-03T19:02:53Z,2017-03-03T19:02:53Z,MERGED,True,56,10,2,https://github.com/PavolVican,Change getting NACM flag from schema node,3,[],https://github.com/sysrepo/sysrepo/pull/743,https://github.com/codecov-io,4,https://github.com/sysrepo/sysrepo/pull/743#issuecomment-283724026,,"Codecov Report

Merging #743 into devel will decrease coverage by -0.35%.
The diff coverage is 75%.

@@            Coverage Diff             @@
##            devel     #743      +/-   ##
==========================================
- Coverage   87.08%   86.72%   -0.35%     
==========================================
  Files          31       31              
  Lines       23831    23844      +13     
  Branches     4181     4186       +5     
==========================================
- Hits        20751    20678      -73     
- Misses       3080     3166      +86

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1ab6f9b...28a09da. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,743,2017-02-22T14:13:59Z,2017-03-03T19:02:53Z,2017-03-03T19:02:53Z,MERGED,True,56,10,2,https://github.com/PavolVican,Change getting NACM flag from schema node,3,[],https://github.com/sysrepo/sysrepo/pull/743,https://github.com/rkrejci,5,https://github.com/sysrepo/sysrepo/pull/743#issuecomment-284041121,,"Tests fails for the reasons not connected with this pull request and we need this patch for other pull requests and for fixing the tests, so I'm going to aprove pull request.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,749,2017-03-07T16:18:38Z,2017-03-08T08:33:24Z,2020-01-15T07:49:49Z,MERGED,True,2,2,1,https://github.com/antonio-paunovic,Remove troublesome Python binding tests.,1,[],https://github.com/sysrepo/sysrepo/pull/749,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/749,"Tests concerning notificatiosn and subscriptions will be removed now and
refactored later because those break most often. Plan is to make them more robust or more simple.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr","Tests concerning notificatiosn and subscriptions will be removed now and
refactored later because those break most often. Plan is to make them more robust or more simple.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,749,2017-03-07T16:18:38Z,2017-03-08T08:33:24Z,2020-01-15T07:49:49Z,MERGED,True,2,2,1,https://github.com/antonio-paunovic,Remove troublesome Python binding tests.,1,[],https://github.com/sysrepo/sysrepo/pull/749,https://github.com/rkrejci,2,https://github.com/sysrepo/sysrepo/pull/749#issuecomment-284979300,"Tests concerning notificatiosn and subscriptions will be removed now and
refactored later because those break most often. Plan is to make them more robust or more simple.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr","well, some other test started to fail. But because it is running before the two removed tests, it seems that it is not connected with this change, so I'm going to merge it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,750,2017-03-08T14:24:06Z,2017-03-09T07:33:16Z,2017-03-09T08:24:38Z,MERGED,True,14,0,1,https://github.com/michalvasko,Ignore default value state change,1,[],https://github.com/sysrepo/sysrepo/pull/750,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/750,"Hi,
in case only the default state of a leaf/leaf-list changed with the value remaining the same, do not notify an application with a callback about this. References #736.
Michal Vasko","Hi,
in case only the default state of a leaf/leaf-list changed with the value remaining the same, do not notify an application with a callback about this. References #736.
Michal Vasko",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,750,2017-03-08T14:24:06Z,2017-03-09T07:33:16Z,2017-03-09T08:24:38Z,MERGED,True,14,0,1,https://github.com/michalvasko,Ignore default value state change,1,[],https://github.com/sysrepo/sysrepo/pull/750,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/750#issuecomment-285082601,"Hi,
in case only the default state of a leaf/leaf-list changed with the value remaining the same, do not notify an application with a callback about this. References #736.
Michal Vasko","Codecov Report

Merging #750 into devel will increase coverage by <.01%.
The diff coverage is 40%.

@@            Coverage Diff             @@
##            devel     #750      +/-   ##
==========================================
+ Coverage   86.97%   86.97%   +<.01%     
==========================================
  Files          31       31              
  Lines       23848    23859      +11     
  Branches     4186     4188       +2     
==========================================
+ Hits        20740    20750      +10     
- Misses       3108     3109       +1

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6da4c24...7380587. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,753,2017-03-21T16:06:51Z,2017-03-23T12:46:58Z,2017-03-23T12:46:58Z,MERGED,True,9,2,1,https://github.com/fabioantonini,enhancement for issue #295 sysrepocfg should allow to display state data,1,[],https://github.com/sysrepo/sysrepo/pull/753,https://github.com/fabioantonini,1,https://github.com/sysrepo/sysrepo/pull/753,This patch fixes the issue #295. sysrepocfg command has been enhanced with a new option (--state-data) to show operational data in addition to the configuration data,This patch fixes the issue #295. sysrepocfg command has been enhanced with a new option (--state-data) to show operational data in addition to the configuration data,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,753,2017-03-21T16:06:51Z,2017-03-23T12:46:58Z,2017-03-23T12:46:58Z,MERGED,True,9,2,1,https://github.com/fabioantonini,enhancement for issue #295 sysrepocfg should allow to display state data,1,[],https://github.com/sysrepo/sysrepo/pull/753,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/753#issuecomment-288136096,This patch fixes the issue #295. sysrepocfg command has been enhanced with a new option (--state-data) to show operational data in addition to the configuration data,"Codecov Report

Merging #753 into devel will increase coverage by 0.01%.
The diff coverage is 60%.

@@            Coverage Diff             @@
##            devel     #753      +/-   ##
==========================================
+ Coverage   86.97%   86.99%   +0.01%     
==========================================
  Files          31       31              
  Lines       23859    23863       +4     
  Branches     4188     4188              
==========================================
+ Hits        20751    20758       +7     
+ Misses       3108     3105       -3

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c025af3...cba4680. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,754,2017-03-22T12:38:35Z,2017-03-23T12:41:35Z,2017-03-28T10:50:53Z,MERGED,True,1,0,1,https://github.com/jktjkt,docs: Fix markdown syntax,1,[],https://github.com/sysrepo/sysrepo/pull/754,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/754,Doxygen wasn't able to format that table properly.,Doxygen wasn't able to format that table properly.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,754,2017-03-22T12:38:35Z,2017-03-23T12:41:35Z,2017-03-28T10:50:53Z,MERGED,True,1,0,1,https://github.com/jktjkt,docs: Fix markdown syntax,1,[],https://github.com/sysrepo/sysrepo/pull/754,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/754#issuecomment-288389113,Doxygen wasn't able to format that table properly.,"Codecov Report

Merging #754 into devel will decrease coverage by 0.03%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #754      +/-   ##
==========================================
- Coverage   86.97%   86.94%   -0.03%     
==========================================
  Files          31       31              
  Lines       23859    23859              
  Branches     4188     4188              
==========================================
- Hits        20751    20743       -8     
- Misses       3108     3116       +8

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c025af3...6460d98. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,755,2017-03-23T10:42:33Z,2017-04-05T12:08:04Z,2017-04-05T12:08:04Z,MERGED,True,70,116,7,https://github.com/michalvasko,Whole module notification subscription,8,[],https://github.com/sysrepo/sysrepo/pull/755,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/755,The only change is that notification subscriptions support subscribing to all the notifications of a module.,The only change is that notification subscriptions support subscribing to all the notifications of a module.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,755,2017-03-23T10:42:33Z,2017-04-05T12:08:04Z,2017-04-05T12:08:04Z,MERGED,True,70,116,7,https://github.com/michalvasko,Whole module notification subscription,8,[],https://github.com/sysrepo/sysrepo/pull/755,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/755#issuecomment-291840422,The only change is that notification subscriptions support subscribing to all the notifications of a module.,"Codecov Report

Merging #755 into devel will decrease coverage by 0.02%.
The diff coverage is 63.83%.

@@            Coverage Diff             @@
##            devel     #755      +/-   ##
==========================================
- Coverage   86.97%   86.95%   -0.02%     
==========================================
  Files          31       31              
  Lines       23859    23901      +42     
  Branches     4188     4201      +13     
==========================================
+ Hits        20751    20782      +31     
- Misses       3108     3119      +11

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c025af3...30833db. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,759,2017-03-28T21:18:19Z,2017-03-30T16:27:35Z,2017-04-04T11:41:00Z,MERGED,True,18,1,1,https://github.com/jktjkt,Make it possible not to run sysrepoctl during `make install`,1,[],https://github.com/sysrepo/sysrepo/pull/759,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/759,"When cross compiling, one cannot easily run the produced binaries (e.g.,
when compiling ARM target binaries on an x86_64 host node). This change
makes it possible to produce a shellscript which can be manually copied
to the target (or integrated into the image-making process, or
whatever). When executed, it ensures that all YANG files are installed
as needed.
Until this script has been run, sysrepo's installation is unusable. You
cannot run sysrepod, in particular.
fixes #738, fixes #748, fixes #757","When cross compiling, one cannot easily run the produced binaries (e.g.,
when compiling ARM target binaries on an x86_64 host node). This change
makes it possible to produce a shellscript which can be manually copied
to the target (or integrated into the image-making process, or
whatever). When executed, it ensures that all YANG files are installed
as needed.
Until this script has been run, sysrepo's installation is unusable. You
cannot run sysrepod, in particular.
fixes #738, fixes #748, fixes #757",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,759,2017-03-28T21:18:19Z,2017-03-30T16:27:35Z,2017-04-04T11:41:00Z,MERGED,True,18,1,1,https://github.com/jktjkt,Make it possible not to run sysrepoctl during `make install`,1,[],https://github.com/sysrepo/sysrepo/pull/759,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/759#issuecomment-289912433,"When cross compiling, one cannot easily run the produced binaries (e.g.,
when compiling ARM target binaries on an x86_64 host node). This change
makes it possible to produce a shellscript which can be manually copied
to the target (or integrated into the image-making process, or
whatever). When executed, it ensures that all YANG files are installed
as needed.
Until this script has been run, sysrepo's installation is unusable. You
cannot run sysrepod, in particular.
fixes #738, fixes #748, fixes #757","Codecov Report

Merging #759 into devel will increase coverage by 0.04%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##            devel    #759      +/-   ##
=========================================
+ Coverage   86.96%     87%   +0.04%     
=========================================
  Files          31      31              
  Lines       23863   23862       -1     
  Branches     4188    4188              
=========================================
+ Hits        20751   20760       +9     
+ Misses       3112    3102      -10

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2c5e3ee...00025c4. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,761,2017-04-04T12:06:21Z,2017-04-13T11:33:49Z,2017-04-13T11:33:49Z,MERGED,True,709,4,2,https://github.com/fabioantonini,Subtree filtering option in sysrepocfg #378,5,[],https://github.com/sysrepo/sysrepo/pull/761,https://github.com/fabioantonini,1,https://github.com/sysrepo/sysrepo/pull/761,"Hi all
I have enhanced 'sysrepocfg' with a set of a new options to handle the import/export/cancel of XPATHs.
The implementation reflects some suggestions that Rastislav Szabo sent to me some months ago.
The new command sintax is the following:
set
sysrepocfg -s ""XPATH"" -w ""value-to-be-set""
get
sysrepocfg -g ""XPATH""
remove
sysrepocfg -r ""XPATH""
Some examples:
A list entry creation
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']""
Some leaf setting
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']/ipaddr"" -w 1.1.1.8
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']/arp-timeout"" -w 12
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='eth0']/hostname"" -w mickey

A new leaf-list creation
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='fabio']timesrv"" -w 7.8.9.2
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='michal']/timesrv[.='1.2.3.5']""

Bits pattern settings
sysrepocfg -d running -s ""/tiesse-system:system/test-bits"" -w ""bit-1 bit-4""
Now let's read the test-bits content
~ # sysrepocfg -d running -g ""/tiesse-system:system/test-bits""
<system xmlns=""urn:ietf:params:xml:ns:yang:tiesse-system"">
  <test-bits>bit-1 bit-4</test-bits>
</system>

Let's remove a single leaf
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/hostname""
Now let's remove some leaf-list entry
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/timesrv[.='1.2.3.5']""
or all the leaf-list entries on one shot
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/timesrv""
As you can see the value to be set in the XPATH is passed by -w option.
Is there a more elegant way to pass the value to be written?
Is there any other useful operation to do using XPATHs?
thanks
fabio","Hi all
I have enhanced 'sysrepocfg' with a set of a new options to handle the import/export/cancel of XPATHs.
The implementation reflects some suggestions that Rastislav Szabo sent to me some months ago.
The new command sintax is the following:
set
sysrepocfg -s ""XPATH"" -w ""value-to-be-set""
get
sysrepocfg -g ""XPATH""
remove
sysrepocfg -r ""XPATH""
Some examples:
A list entry creation
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']""
Some leaf setting
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']/ipaddr"" -w 1.1.1.8
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']/arp-timeout"" -w 12
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='eth0']/hostname"" -w mickey

A new leaf-list creation
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='fabio']timesrv"" -w 7.8.9.2
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='michal']/timesrv[.='1.2.3.5']""

Bits pattern settings
sysrepocfg -d running -s ""/tiesse-system:system/test-bits"" -w ""bit-1 bit-4""
Now let's read the test-bits content
~ # sysrepocfg -d running -g ""/tiesse-system:system/test-bits""
<system xmlns=""urn:ietf:params:xml:ns:yang:tiesse-system"">
  <test-bits>bit-1 bit-4</test-bits>
</system>

Let's remove a single leaf
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/hostname""
Now let's remove some leaf-list entry
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/timesrv[.='1.2.3.5']""
or all the leaf-list entries on one shot
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/timesrv""
As you can see the value to be set in the XPATH is passed by -w option.
Is there a more elegant way to pass the value to be written?
Is there any other useful operation to do using XPATHs?
thanks
fabio",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,761,2017-04-04T12:06:21Z,2017-04-13T11:33:49Z,2017-04-13T11:33:49Z,MERGED,True,709,4,2,https://github.com/fabioantonini,Subtree filtering option in sysrepocfg #378,5,[],https://github.com/sysrepo/sysrepo/pull/761,https://github.com/fabioantonini,2,https://github.com/sysrepo/sysrepo/pull/761#issuecomment-292509403,"Hi all
I have enhanced 'sysrepocfg' with a set of a new options to handle the import/export/cancel of XPATHs.
The implementation reflects some suggestions that Rastislav Szabo sent to me some months ago.
The new command sintax is the following:
set
sysrepocfg -s ""XPATH"" -w ""value-to-be-set""
get
sysrepocfg -g ""XPATH""
remove
sysrepocfg -r ""XPATH""
Some examples:
A list entry creation
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']""
Some leaf setting
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']/ipaddr"" -w 1.1.1.8
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']/arp-timeout"" -w 12
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='eth0']/hostname"" -w mickey

A new leaf-list creation
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='fabio']timesrv"" -w 7.8.9.2
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='michal']/timesrv[.='1.2.3.5']""

Bits pattern settings
sysrepocfg -d running -s ""/tiesse-system:system/test-bits"" -w ""bit-1 bit-4""
Now let's read the test-bits content
~ # sysrepocfg -d running -g ""/tiesse-system:system/test-bits""
<system xmlns=""urn:ietf:params:xml:ns:yang:tiesse-system"">
  <test-bits>bit-1 bit-4</test-bits>
</system>

Let's remove a single leaf
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/hostname""
Now let's remove some leaf-list entry
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/timesrv[.='1.2.3.5']""
or all the leaf-list entries on one shot
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/timesrv""
As you can see the value to be set in the XPATH is passed by -w option.
Is there a more elegant way to pass the value to be written?
Is there any other useful operation to do using XPATHs?
thanks
fabio","Yes sure

fabio
…
On 07/04/2017 13:00, Radek Krejčí wrote:

 ***@***.**** requested changes on this pull request.

 Could you please cover the new sysrepocfg features in sysrepocfg_test
 (tests/sysrepocfg_test.c)?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#761 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AFpJnYP5UPwwq4r1ArxjQn7JVtWU4DA8ks5rthc7gaJpZM4Myw3c>.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,761,2017-04-04T12:06:21Z,2017-04-13T11:33:49Z,2017-04-13T11:33:49Z,MERGED,True,709,4,2,https://github.com/fabioantonini,Subtree filtering option in sysrepocfg #378,5,[],https://github.com/sysrepo/sysrepo/pull/761,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/761#issuecomment-293847576,"Hi all
I have enhanced 'sysrepocfg' with a set of a new options to handle the import/export/cancel of XPATHs.
The implementation reflects some suggestions that Rastislav Szabo sent to me some months ago.
The new command sintax is the following:
set
sysrepocfg -s ""XPATH"" -w ""value-to-be-set""
get
sysrepocfg -g ""XPATH""
remove
sysrepocfg -r ""XPATH""
Some examples:
A list entry creation
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']""
Some leaf setting
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']/ipaddr"" -w 1.1.1.8
sysrepocfg --datastore=running -s ""/tiesse-ethernet:ethernet/interfaces[name='eth0']/arp-timeout"" -w 12
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='eth0']/hostname"" -w mickey

A new leaf-list creation
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='fabio']timesrv"" -w 7.8.9.2
sysrepocfg -d running -s ""/tiesse-dhcp-server:dhcp-server/server[name='michal']/timesrv[.='1.2.3.5']""

Bits pattern settings
sysrepocfg -d running -s ""/tiesse-system:system/test-bits"" -w ""bit-1 bit-4""
Now let's read the test-bits content
~ # sysrepocfg -d running -g ""/tiesse-system:system/test-bits""
<system xmlns=""urn:ietf:params:xml:ns:yang:tiesse-system"">
  <test-bits>bit-1 bit-4</test-bits>
</system>

Let's remove a single leaf
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/hostname""
Now let's remove some leaf-list entry
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/timesrv[.='1.2.3.5']""
or all the leaf-list entries on one shot
sysrepocfg -d running -r ""/tiesse-dhcp-server:dhcp-server/server[name='pippo']/timesrv""
As you can see the value to be set in the XPATH is passed by -w option.
Is there a more elegant way to pass the value to be written?
Is there any other useful operation to do using XPATHs?
thanks
fabio","Codecov Report

Merging #761 into devel will decrease coverage by 0.52%.
The diff coverage is 65.58%.

@@            Coverage Diff             @@
##            devel     #761      +/-   ##
==========================================
- Coverage   86.95%   86.42%   -0.52%     
==========================================
  Files          31       31              
  Lines       23863    24322     +459     
  Branches     4188     4290     +102     
==========================================
+ Hits        20748    21020     +272     
- Misses       3115     3302     +187

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60e5849...c40a060. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,762,2017-04-04T12:16:50Z,2017-04-28T11:44:07Z,2017-04-28T11:44:07Z,MERGED,True,427,0,6,https://github.com/antonio-paunovic,C++ unit tests,8,[],https://github.com/sysrepo/sysrepo/pull/762,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/762,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,762,2017-04-04T12:16:50Z,2017-04-28T11:44:07Z,2017-04-28T11:44:07Z,MERGED,True,427,0,6,https://github.com/antonio-paunovic,C++ unit tests,8,[],https://github.com/sysrepo/sysrepo/pull/762,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/762#issuecomment-291486968,,"Codecov Report

Merging #762 into devel will decrease coverage by 0.26%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #762      +/-   ##
==========================================
- Coverage   86.95%   86.69%   -0.26%     
==========================================
  Files          31       31              
  Lines       23863    23999     +136     
  Branches     4188     4224      +36     
==========================================
+ Hits        20748    20805      +57     
- Misses       3115     3194      +79

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60e5849...fedd3b2. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,762,2017-04-04T12:16:50Z,2017-04-28T11:44:07Z,2017-04-28T11:44:07Z,MERGED,True,427,0,6,https://github.com/antonio-paunovic,C++ unit tests,8,[],https://github.com/sysrepo/sysrepo/pull/762,https://github.com/antonio-paunovic,3,https://github.com/sysrepo/sysrepo/pull/762#issuecomment-291494223,,"Hi @jktjkt ,
thanks for quick feedback. These are first version of basic tests for language bindings in vain to get started. Idea is to have some straightforward sysrepo tests to make sure basic API works.
This is to be done for other bindings as well (hopefully today).
Although tests for bindings are supposed to stay small, you're welcomed to suggest more tests that you think would be useful. Your comments seem well-placed and I'll address them tomorrow.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,762,2017-04-04T12:16:50Z,2017-04-28T11:44:07Z,2017-04-28T11:44:07Z,MERGED,True,427,0,6,https://github.com/antonio-paunovic,C++ unit tests,8,[],https://github.com/sysrepo/sysrepo/pull/762,https://github.com/antonio-paunovic,4,https://github.com/sysrepo/sysrepo/pull/762#issuecomment-292956561,,"Hi @jktjkt
I've tried to address points you've made.
Is there anything else or is this mergeable?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,764,2017-04-04T13:22:54Z,2017-04-07T16:31:02Z,2020-01-15T07:49:51Z,MERGED,True,581,17,9,https://github.com/antonio-paunovic,Java unit tests,1,[],https://github.com/sysrepo/sysrepo/pull/764,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/764,Tests for basic operations in Java binding implementation.,Tests for basic operations in Java binding implementation.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,764,2017-04-04T13:22:54Z,2017-04-07T16:31:02Z,2020-01-15T07:49:51Z,MERGED,True,581,17,9,https://github.com/antonio-paunovic,Java unit tests,1,[],https://github.com/sysrepo/sysrepo/pull/764,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/764#issuecomment-291556889,Tests for basic operations in Java binding implementation.,"Codecov Report

Merging #764 into devel will increase coverage by 0.56%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##            devel    #764      +/-   ##
=========================================
+ Coverage   86.95%   87.5%   +0.56%     
=========================================
  Files          31      31              
  Lines       23863   25192    +1329     
  Branches     4188    4657     +469     
=========================================
+ Hits        20748   22044    +1296     
- Misses       3115    3148      +33

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60e5849...b49f494. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,765,2017-04-04T13:23:10Z,2017-04-07T12:11:34Z,2020-01-15T07:49:41Z,MERGED,True,1578,0,13,https://github.com/mislavn,dockerfiles for master and devel branch,1,[],https://github.com/sysrepo/sysrepo/pull/765,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/765,"This commit adds dockerfiles for the latest master and devel branches
on the platforms: arch, debian, fedora, gentoo and ubuntu.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","This commit adds dockerfiles for the latest master and devel branches
on the platforms: arch, debian, fedora, gentoo and ubuntu.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,765,2017-04-04T13:23:10Z,2017-04-07T12:11:34Z,2020-01-15T07:49:41Z,MERGED,True,1578,0,13,https://github.com/mislavn,dockerfiles for master and devel branch,1,[],https://github.com/sysrepo/sysrepo/pull/765,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/765#issuecomment-291550975,"This commit adds dockerfiles for the latest master and devel branches
on the platforms: arch, debian, fedora, gentoo and ubuntu.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Codecov Report

Merging #765 into devel will decrease coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #765      +/-   ##
==========================================
- Coverage   86.95%   86.93%   -0.01%     
==========================================
  Files          31       31              
  Lines       23863    23864       +1     
  Branches     4188     4188              
==========================================
- Hits        20748    20746       -2     
- Misses       3115     3118       +3

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60e5849...bfe4699. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,766,2017-04-04T13:31:54Z,2017-04-04T13:33:36Z,2017-04-04T13:33:36Z,CLOSED,False,36911,5238,198,https://github.com/antonio-paunovic,Swig lua unittest pull,597,[],https://github.com/sysrepo/sysrepo/pull/766,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/766,Tests for basic operations in Lua binding implementation.,Tests for basic operations in Lua binding implementation.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,767,2017-04-04T13:32:21Z,2017-04-07T11:53:55Z,2020-01-15T07:49:51Z,MERGED,True,3378,3,7,https://github.com/antonio-paunovic,Lua unit tests,2,[],https://github.com/sysrepo/sysrepo/pull/767,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/767,Tests for basic operations in Lua binding implementation.,Tests for basic operations in Lua binding implementation.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,767,2017-04-04T13:32:21Z,2017-04-07T11:53:55Z,2020-01-15T07:49:51Z,MERGED,True,3378,3,7,https://github.com/antonio-paunovic,Lua unit tests,2,[],https://github.com/sysrepo/sysrepo/pull/767,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/767#issuecomment-291519850,Tests for basic operations in Lua binding implementation.,"Codecov Report

Merging #767 into devel will increase coverage by 0.02%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #767      +/-   ##
==========================================
+ Coverage   86.95%   86.96%   +0.02%     
==========================================
  Files          31       31              
  Lines       23863    23863              
  Branches     4188     4188              
==========================================
+ Hits        20748    20752       +4     
+ Misses       3115     3111       -4

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60e5849...56c35c0. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,771,2017-04-05T14:56:36Z,2017-04-06T11:36:25Z,2017-04-06T11:36:25Z,CLOSED,False,15,3,1,https://github.com/rkrejci,fix traversing schema tree when exploring modules dependencies,4,[],https://github.com/sysrepo/sysrepo/pull/771,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/771,"Ignore the augment nodes and go directly through them because the same
way we got into (via the child pointer), we have to get back (usually
parent, but in case of augmenting nodes we have to go through the agment
node)
Fixes #671","Ignore the augment nodes and go directly through them because the same
way we got into (via the child pointer), we have to get back (usually
parent, but in case of augmenting nodes we have to go through the agment
node)
Fixes #671",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,771,2017-04-05T14:56:36Z,2017-04-06T11:36:25Z,2017-04-06T11:36:25Z,CLOSED,False,15,3,1,https://github.com/rkrejci,fix traversing schema tree when exploring modules dependencies,4,[],https://github.com/sysrepo/sysrepo/pull/771,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/771#issuecomment-292141473,"Ignore the augment nodes and go directly through them because the same
way we got into (via the child pointer), we have to get back (usually
parent, but in case of augmenting nodes we have to go through the agment
node)
Fixes #671","Codecov Report

Merging #771 into devel will decrease coverage by 0.02%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #771      +/-   ##
==========================================
- Coverage   86.91%   86.89%   -0.02%     
==========================================
  Files          31       31              
  Lines       23900    23905       +5     
  Branches     4201     4203       +2     
==========================================
- Hits        20772    20771       -1     
- Misses       3128     3134       +6

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2e5fd2a...86f885b. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,771,2017-04-05T14:56:36Z,2017-04-06T11:36:25Z,2017-04-06T11:36:25Z,CLOSED,False,15,3,1,https://github.com/rkrejci,fix traversing schema tree when exploring modules dependencies,4,[],https://github.com/sysrepo/sysrepo/pull/771,https://github.com/rkrejci,3,https://github.com/sysrepo/sysrepo/pull/771#issuecomment-292146953,"Ignore the augment nodes and go directly through them because the same
way we got into (via the child pointer), we have to get back (usually
parent, but in case of augmenting nodes we have to go through the agment
node)
Fixes #671",merged manually - 98315fd,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,773,2017-04-06T08:14:11Z,2017-04-06T13:10:33Z,2017-04-06T13:10:33Z,MERGED,True,174,51,7,https://github.com/michalvasko,Notifications with external dependencies validation,4,[],https://github.com/sysrepo/sysrepo/pull/773,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/773,Added dependency check to lead all relevant modules and data for a validation of a notification with an instance-dientifier to pass.,Added dependency check to lead all relevant modules and data for a validation of a notification with an instance-dientifier to pass.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,776,2017-04-07T08:45:44Z,2017-04-10T09:12:03Z,2020-01-15T07:49:43Z,MERGED,True,4,1,1,https://github.com/antonio-paunovic,Fix macosx rpath warning.,2,[],https://github.com/sysrepo/sysrepo/pull/776,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/776,"Building on osx gives warning

CMake Warning (dev):
Policy CMP0042 is not set: MACOSX_RPATH is enabled by default.  Run ""cmake
--help-policy CMP0042"" for policy details.  Use the cmake_policy command to
set the policy and suppress this warning.
MACOSX_RPATH is not specified for the following targets:
dummy-plugin-1
dummy-plugin-2
sysrepo
turing-machine
This warning is for project developers.  Use -Wno-dev to suppress it.

and this would supposedly fix it.","Building on osx gives warning

CMake Warning (dev):
Policy CMP0042 is not set: MACOSX_RPATH is enabled by default.  Run ""cmake
--help-policy CMP0042"" for policy details.  Use the cmake_policy command to
set the policy and suppress this warning.
MACOSX_RPATH is not specified for the following targets:
dummy-plugin-1
dummy-plugin-2
sysrepo
turing-machine
This warning is for project developers.  Use -Wno-dev to suppress it.

and this would supposedly fix it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,776,2017-04-07T08:45:44Z,2017-04-10T09:12:03Z,2020-01-15T07:49:43Z,MERGED,True,4,1,1,https://github.com/antonio-paunovic,Fix macosx rpath warning.,2,[],https://github.com/sysrepo/sysrepo/pull/776,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/776#issuecomment-292499320,"Building on osx gives warning

CMake Warning (dev):
Policy CMP0042 is not set: MACOSX_RPATH is enabled by default.  Run ""cmake
--help-policy CMP0042"" for policy details.  Use the cmake_policy command to
set the policy and suppress this warning.
MACOSX_RPATH is not specified for the following targets:
dummy-plugin-1
dummy-plugin-2
sysrepo
turing-machine
This warning is for project developers.  Use -Wno-dev to suppress it.

and this would supposedly fix it.","Codecov Report

Merging #776 into devel will increase coverage by 0.06%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #776      +/-   ##
==========================================
+ Coverage   86.78%   86.84%   +0.06%     
==========================================
  Files          31       31              
  Lines       23979    23978       -1     
  Branches     4218     4218              
==========================================
+ Hits        20808    20822      +14     
+ Misses       3171     3156      -15

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 58094bb...22f2f56. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,776,2017-04-07T08:45:44Z,2017-04-10T09:12:03Z,2020-01-15T07:49:43Z,MERGED,True,4,1,1,https://github.com/antonio-paunovic,Fix macosx rpath warning.,2,[],https://github.com/sysrepo/sysrepo/pull/776,https://github.com/antonio-paunovic,3,https://github.com/sysrepo/sysrepo/pull/776#issuecomment-292510127,"Building on osx gives warning

CMake Warning (dev):
Policy CMP0042 is not set: MACOSX_RPATH is enabled by default.  Run ""cmake
--help-policy CMP0042"" for policy details.  Use the cmake_policy command to
set the policy and suppress this warning.
MACOSX_RPATH is not specified for the following targets:
dummy-plugin-1
dummy-plugin-2
sysrepo
turing-machine
This warning is for project developers.  Use -Wno-dev to suppress it.

and this would supposedly fix it.","Hi Radek,
in tests/CMakeLists.txt there is a comment that some tests including plugin daemon test.
I was checking if putting that test as first of those 'stateful' tests would change anything. It passed that time but, as we know that doesn't mean it would fix the test. I'll turn that part back and try with #777.",True,{'THUMBS_UP': ['https://github.com/rkrejci']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,776,2017-04-07T08:45:44Z,2017-04-10T09:12:03Z,2020-01-15T07:49:43Z,MERGED,True,4,1,1,https://github.com/antonio-paunovic,Fix macosx rpath warning.,2,[],https://github.com/sysrepo/sysrepo/pull/776,https://github.com/antonio-paunovic,4,https://github.com/sysrepo/sysrepo/pull/776#issuecomment-292543131,"Building on osx gives warning

CMake Warning (dev):
Policy CMP0042 is not set: MACOSX_RPATH is enabled by default.  Run ""cmake
--help-policy CMP0042"" for policy details.  Use the cmake_policy command to
set the policy and suppress this warning.
MACOSX_RPATH is not specified for the following targets:
dummy-plugin-1
dummy-plugin-2
sysrepo
turing-machine
This warning is for project developers.  Use -Wno-dev to suppress it.

and this would supposedly fix it.","You're right about version. I've put check to set variable only if version is higher than 2.8.11.
We thought that this kind of change isn't good enough reason to rise minimal cmake version at this point.
Is this way OK?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,776,2017-04-07T08:45:44Z,2017-04-10T09:12:03Z,2020-01-15T07:49:43Z,MERGED,True,4,1,1,https://github.com/antonio-paunovic,Fix macosx rpath warning.,2,[],https://github.com/sysrepo/sysrepo/pull/776,https://github.com/antonio-paunovic,5,https://github.com/sysrepo/sysrepo/pull/776#issuecomment-292562829,"Building on osx gives warning

CMake Warning (dev):
Policy CMP0042 is not set: MACOSX_RPATH is enabled by default.  Run ""cmake
--help-policy CMP0042"" for policy details.  Use the cmake_policy command to
set the policy and suppress this warning.
MACOSX_RPATH is not specified for the following targets:
dummy-plugin-1
dummy-plugin-2
sysrepo
turing-machine
This warning is for project developers.  Use -Wno-dev to suppress it.

and this would supposedly fix it.","OK, cmake version is bumped to 2.8.12.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,777,2017-04-07T10:17:33Z,2017-04-07T10:45:54Z,2017-05-12T11:12:07Z,MERGED,True,4,3,2,https://github.com/rkrejci,Fix plugin daemon test,2,[],https://github.com/sysrepo/sysrepo/pull/777,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/777,Fixes issues with plugin_daemon_test on OS X,Fixes issues with plugin_daemon_test on OS X,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,777,2017-04-07T10:17:33Z,2017-04-07T10:45:54Z,2017-05-12T11:12:07Z,MERGED,True,4,3,2,https://github.com/rkrejci,Fix plugin daemon test,2,[],https://github.com/sysrepo/sysrepo/pull/777,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/777#issuecomment-292505704,Fixes issues with plugin_daemon_test on OS X,"Codecov Report

Merging #777 into devel will increase coverage by <.01%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #777      +/-   ##
==========================================
+ Coverage   86.83%   86.84%   +<.01%     
==========================================
  Files          31       31              
  Lines       23977    23978       +1     
  Branches     4218     4218              
==========================================
+ Hits        20820    20822       +2     
+ Misses       3157     3156       -1

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 578698f...9f14c0b. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,778,2017-04-07T12:58:00Z,2017-04-07T14:24:06Z,2017-04-07T14:24:06Z,MERGED,True,2,2,1,https://github.com/michalvasko,TRAVIS use longer timeouts for heavy operations,1,[],https://github.com/sysrepo/sysrepo/pull/778,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/778,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,778,2017-04-07T12:58:00Z,2017-04-07T14:24:06Z,2017-04-07T14:24:06Z,MERGED,True,2,2,1,https://github.com/michalvasko,TRAVIS use longer timeouts for heavy operations,1,[],https://github.com/sysrepo/sysrepo/pull/778,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/778#issuecomment-292537904,,"Codecov Report

Merging #778 into devel will increase coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #778      +/-   ##
==========================================
+ Coverage   86.83%   86.84%   +0.01%     
==========================================
  Files          31       31              
  Lines       23978    23980       +2     
  Branches     4218     4218              
==========================================
+ Hits        20821    20825       +4     
+ Misses       3157     3155       -2

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5a04a31...1a9f130. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,779,2017-04-07T14:16:58Z,2017-04-07T14:38:56Z,2017-04-07T14:38:56Z,MERGED,True,21,21,6,https://github.com/mislavn,Docker update,2,[],https://github.com/sysrepo/sysrepo/pull/779,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/779,Fix code style in dockerfile.,Fix code style in dockerfile.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,779,2017-04-07T14:16:58Z,2017-04-07T14:38:56Z,2017-04-07T14:38:56Z,MERGED,True,21,21,6,https://github.com/mislavn,Docker update,2,[],https://github.com/sysrepo/sysrepo/pull/779,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/779#issuecomment-292553606,Fix code style in dockerfile.,"Codecov Report

Merging #779 into devel will not change coverage.
The diff coverage is n/a.

@@           Coverage Diff           @@
##            devel     #779   +/-   ##
=======================================
  Coverage   86.83%   86.83%           
=======================================
  Files          31       31           
  Lines       23978    23978           
  Branches     4218     4218           
=======================================
  Hits        20821    20821           
  Misses       3157     3157

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5a04a31...d481624. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,781,2017-04-10T08:24:49Z,2017-04-10T09:35:09Z,2017-05-12T11:14:26Z,MERGED,True,52,16,1,https://github.com/rkrejci,sysrepoctl: use a separate repository subdirectory for submodules,1,[],https://github.com/sysrepo/sysrepo/pull/781,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/781,"to avoid libyang warnings about parsing submodules, keep submodules
in a separate subdirectory to keep sysrepoctl aware what is module and
what is submodule. Since it is subdirectory of the modules' location,
libyang is able to find them automatically.","to avoid libyang warnings about parsing submodules, keep submodules
in a separate subdirectory to keep sysrepoctl aware what is module and
what is submodule. Since it is subdirectory of the modules' location,
libyang is able to find them automatically.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,781,2017-04-10T08:24:49Z,2017-04-10T09:35:09Z,2017-05-12T11:14:26Z,MERGED,True,52,16,1,https://github.com/rkrejci,sysrepoctl: use a separate repository subdirectory for submodules,1,[],https://github.com/sysrepo/sysrepo/pull/781,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/781#issuecomment-292895474,"to avoid libyang warnings about parsing submodules, keep submodules
in a separate subdirectory to keep sysrepoctl aware what is module and
what is submodule. Since it is subdirectory of the modules' location,
libyang is able to find them automatically.","Codecov Report

Merging #781 into devel will decrease coverage by 0.06%.
The diff coverage is 41.67%.

@@            Coverage Diff             @@
##            devel     #781      +/-   ##
==========================================
- Coverage   86.81%   86.75%   -0.06%     
==========================================
  Files          31       31              
  Lines       23978    23999      +21     
  Branches     4218     4224       +6     
==========================================
+ Hits        20815    20820       +5     
- Misses       3163     3179      +16

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 10bd06a...225389d. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,782,2017-04-10T12:10:55Z,2017-04-10T13:58:06Z,2017-04-10T13:58:06Z,MERGED,True,1,1,1,https://github.com/michalvasko,BUGFIX correct path to get all the data,1,[],https://github.com/sysrepo/sysrepo/pull/782,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/782,Previously the path selected only all the children of all the top-level elements.,Previously the path selected only all the children of all the top-level elements.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,782,2017-04-10T12:10:55Z,2017-04-10T13:58:06Z,2017-04-10T13:58:06Z,MERGED,True,1,1,1,https://github.com/michalvasko,BUGFIX correct path to get all the data,1,[],https://github.com/sysrepo/sysrepo/pull/782,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/782#issuecomment-292934106,Previously the path selected only all the children of all the top-level elements.,"Codecov Report

Merging #782 into devel will decrease coverage by <.01%.
The diff coverage is n/a.

@@           Coverage Diff            @@
##           devel    #782      +/-   ##
========================================
- Coverage   86.7%   86.7%   -<.01%     
========================================
  Files         31      31              
  Lines      23999   23999              
  Branches    4224    4224              
========================================
- Hits       20807   20806       -1     
- Misses      3192    3193       +1

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a433fd4...9cbd9a8. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,783,2017-04-10T14:24:31Z,2017-04-11T13:50:32Z,2017-05-12T11:11:16Z,MERGED,True,26,12,2,https://github.com/rkrejci,Fix imported features,2,[],https://github.com/sysrepo/sysrepo/pull/783,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/783,Fixes #742 and buffer overflow detected when solving this issue.,Fixes #742 and buffer overflow detected when solving this issue.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,783,2017-04-10T14:24:31Z,2017-04-11T13:50:32Z,2017-05-12T11:11:16Z,MERGED,True,26,12,2,https://github.com/rkrejci,Fix imported features,2,[],https://github.com/sysrepo/sysrepo/pull/783,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/783#issuecomment-292971499,Fixes #742 and buffer overflow detected when solving this issue.,"Codecov Report

Merging #783 into devel will increase coverage by 0.05%.
The diff coverage is 95.24%.

@@            Coverage Diff            @@
##           devel     #783      +/-   ##
=========================================
+ Coverage   86.7%   86.75%   +0.05%     
=========================================
  Files         31       31              
  Lines      23999    24008       +9     
  Branches    4224     4229       +5     
=========================================
+ Hits       20808    20827      +19     
+ Misses      3191     3181      -10

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8b9c6f8...fd47aaa. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,784,2017-04-10T15:11:50Z,2017-04-11T13:54:11Z,2020-01-15T07:49:40Z,MERGED,True,18,17,6,https://github.com/mislavn,Docker bugfix,4,[],https://github.com/sysrepo/sysrepo/pull/784,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/784,Fix for #780 and add some changes to the dockerfile Dockerfile.arch.devel.,Fix for #780 and add some changes to the dockerfile Dockerfile.arch.devel.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,784,2017-04-10T15:11:50Z,2017-04-11T13:54:11Z,2020-01-15T07:49:40Z,MERGED,True,18,17,6,https://github.com/mislavn,Docker bugfix,4,[],https://github.com/sysrepo/sysrepo/pull/784,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/784#issuecomment-292985473,Fix for #780 and add some changes to the dockerfile Dockerfile.arch.devel.,"Codecov Report

Merging #784 into devel will decrease coverage by 0.02%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##           devel     #784      +/-   ##
=========================================
- Coverage   86.7%   86.69%   -0.02%     
=========================================
  Files         31       31              
  Lines      23999    23999              
  Branches    4224     4224              
=========================================
- Hits       20808    20804       -4     
- Misses      3191     3195       +4

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8b9c6f8...75ad54b. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,787,2017-04-11T12:15:07Z,2017-04-11T13:48:59Z,2017-04-11T13:48:59Z,MERGED,True,45,19,5,https://github.com/michalvasko,Notification bugfixes,3,[],https://github.com/sysrepo/sysrepo/pull/787,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/787,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,787,2017-04-11T12:15:07Z,2017-04-11T13:48:59Z,2017-04-11T13:48:59Z,MERGED,True,45,19,5,https://github.com/michalvasko,Notification bugfixes,3,[],https://github.com/sysrepo/sysrepo/pull/787,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/787#issuecomment-293268321,,"Codecov Report

Merging #787 into devel will increase coverage by 0.03%.
The diff coverage is 92.31%.

@@            Coverage Diff            @@
##           devel     #787      +/-   ##
=========================================
+ Coverage   86.7%   86.73%   +0.03%     
=========================================
  Files         31       31              
  Lines      23999    24005       +6     
  Branches    4224     4226       +2     
=========================================
+ Hits       20808    20820      +12     
+ Misses      3191     3185       -6

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8b9c6f8...a53294b. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,789,2017-04-13T12:16:21Z,2017-04-18T07:26:41Z,2017-04-18T07:26:41Z,MERGED,True,1,1,1,https://github.com/fanchanghu,BUGFIX for leafref that refers to decimal64,1,[],https://github.com/sysrepo/sysrepo/pull/789,https://github.com/fanchanghu,1,https://github.com/sysrepo/sysrepo/pull/789,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,789,2017-04-13T12:16:21Z,2017-04-18T07:26:41Z,2017-04-18T07:26:41Z,MERGED,True,1,1,1,https://github.com/fanchanghu,BUGFIX for leafref that refers to decimal64,1,[],https://github.com/sysrepo/sysrepo/pull/789,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/789#issuecomment-293882615,,"Codecov Report

Merging #789 into devel will increase coverage by <.01%.
The diff coverage is 0%.

@@            Coverage Diff             @@
##            devel     #789      +/-   ##
==========================================
+ Coverage   86.42%   86.42%   +<.01%     
==========================================
  Files          31       31              
  Lines       24321    24322       +1     
  Branches     4290     4290              
==========================================
+ Hits        21018    21020       +2     
+ Misses       3303     3302       -1

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e5948b7...c04edea. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,791,2017-04-13T13:09:10Z,2017-04-13T13:33:26Z,2017-04-13T13:33:26Z,MERGED,True,6,3,2,https://github.com/michalvasko,BUGFIX implemented flag was not sent and hence always false,1,[],https://github.com/sysrepo/sysrepo/pull/791,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/791,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,791,2017-04-13T13:09:10Z,2017-04-13T13:33:26Z,2017-04-13T13:33:26Z,MERGED,True,6,3,2,https://github.com/michalvasko,BUGFIX implemented flag was not sent and hence always false,1,[],https://github.com/sysrepo/sysrepo/pull/791,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/791#issuecomment-293894293,,"Codecov Report

Merging #791 into devel will decrease coverage by 0.01%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #791      +/-   ##
==========================================
- Coverage   86.42%   86.41%   -0.01%     
==========================================
  Files          31       31              
  Lines       24321    24324       +3     
  Branches     4290     4290              
==========================================
+ Hits        21018    21019       +1     
- Misses       3303     3305       +2

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e5948b7...747c912. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,792,2017-04-13T14:06:01Z,2017-04-18T11:11:59Z,2017-04-18T11:11:59Z,MERGED,True,113,185,3,https://github.com/michalvasko,"CHANGE implemented, latest_revision flags meaning",2,[],https://github.com/sysrepo/sysrepo/pull/792,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/792,Refs #790,Refs #790,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,792,2017-04-13T14:06:01Z,2017-04-18T11:11:59Z,2017-04-18T11:11:59Z,MERGED,True,113,185,3,https://github.com/michalvasko,"CHANGE implemented, latest_revision flags meaning",2,[],https://github.com/sysrepo/sysrepo/pull/792,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/792#issuecomment-294778354,Refs #790,"Codecov Report

Merging #792 into devel will decrease coverage by 0.04%.
The diff coverage is 96.3%.

@@            Coverage Diff             @@
##            devel     #792      +/-   ##
==========================================
- Coverage   86.47%   86.43%   -0.04%     
==========================================
  Files          31       31              
  Lines       24322    24324       +2     
  Branches     4290     4291       +1     
==========================================
- Hits        21032    21024       -8     
- Misses       3290     3300      +10",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,793,2017-04-16T14:07:14Z,2017-04-28T09:03:32Z,2017-04-28T09:03:32Z,MERGED,True,2,2,2,https://github.com/qin-nz,update README.md & INSTALL.md,2,[],https://github.com/sysrepo/sysrepo/pull/793,https://github.com/qin-nz,1,https://github.com/sysrepo/sysrepo/pull/793,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,795,2017-04-19T09:30:37Z,2017-04-21T14:04:41Z,2017-04-21T14:04:41Z,CLOSED,False,17,11,1,https://github.com/michalvasko,BUGFIX imports of implemented models with data should be implemented,6,[],https://github.com/sysrepo/sysrepo/pull/795,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/795,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,797,2017-04-20T07:34:57Z,2017-04-27T10:37:00Z,2017-04-27T10:37:00Z,CLOSED,False,4,1,1,https://github.com/jktjkt,"tests: Fix initialization of ""local sysrepo directory""",1,[],https://github.com/sysrepo/sysrepo/pull/797,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/797,"There's an undocumented option for sysrepoctl which enables overrides
for various repository locations. However, the submodule schema
directory was not being overridden.
When tests are enabled, sysrepoctl is invoked via CMake's POST_BUILD
option right after the common_test has been built. Because this is
running at the time of the build, i.e., prior to installation time,
the target directories have not yet been created. This leads to the
following failure:
  2017-04-20 06:51:52,422 [output] [114/140] Linking C executable tests/common_test
  2017-04-20 06:51:52,422 [output] FAILED: tests/common_test
  2017-04-20 06:51:52,423 [output] : && /opt/rh/devtoolset-6/root/usr/bin/cc  -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0   tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o tests/CMakeFiles/common_test.dir/common_test.c.o  -o tests/common_test  -rdynamic -lcmocka src/libsysrepo.a -lrt -lpthread /home/turbo-hipster/target/lib/libredblack.so -lev -lprotobuf-c /home/turbo-hipster/target/lib64/libyang.so -Wl,-rpath,/home/turbo-hipster/target/lib:/home/turbo-hipster/target/lib64 && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-acm@2012-02-22.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/example-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/test-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/small-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/info-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-a@2016-02-10.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-b@2016-02-05.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/iana-if-type.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-ip@2014-06-16.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/state-module@2016-07-01.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/top-level-mandatory.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/referenced-data.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/cross-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/turing-machine.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/nc-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/servers.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null
  2017-04-20 06:51:52,423 [output] Error: Unable to create schema repository '/home/turbo-hipster/target/etc-sysrepo/yang//submodules/': No such file or directory.

This appears to happen only when configuring with -DREPOSITORY_LOC pointing
outside of the build directory.","There's an undocumented option for sysrepoctl which enables overrides
for various repository locations. However, the submodule schema
directory was not being overridden.
When tests are enabled, sysrepoctl is invoked via CMake's POST_BUILD
option right after the common_test has been built. Because this is
running at the time of the build, i.e., prior to installation time,
the target directories have not yet been created. This leads to the
following failure:
  2017-04-20 06:51:52,422 [output] [114/140] Linking C executable tests/common_test
  2017-04-20 06:51:52,422 [output] FAILED: tests/common_test
  2017-04-20 06:51:52,423 [output] : && /opt/rh/devtoolset-6/root/usr/bin/cc  -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0   tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o tests/CMakeFiles/common_test.dir/common_test.c.o  -o tests/common_test  -rdynamic -lcmocka src/libsysrepo.a -lrt -lpthread /home/turbo-hipster/target/lib/libredblack.so -lev -lprotobuf-c /home/turbo-hipster/target/lib64/libyang.so -Wl,-rpath,/home/turbo-hipster/target/lib:/home/turbo-hipster/target/lib64 && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-acm@2012-02-22.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/example-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/test-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/small-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/info-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-a@2016-02-10.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-b@2016-02-05.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/iana-if-type.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-ip@2014-06-16.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/state-module@2016-07-01.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/top-level-mandatory.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/referenced-data.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/cross-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/turing-machine.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/nc-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/servers.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null
  2017-04-20 06:51:52,423 [output] Error: Unable to create schema repository '/home/turbo-hipster/target/etc-sysrepo/yang//submodules/': No such file or directory.

This appears to happen only when configuring with -DREPOSITORY_LOC pointing
outside of the build directory.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,797,2017-04-20T07:34:57Z,2017-04-27T10:37:00Z,2017-04-27T10:37:00Z,CLOSED,False,4,1,1,https://github.com/jktjkt,"tests: Fix initialization of ""local sysrepo directory""",1,[],https://github.com/sysrepo/sysrepo/pull/797,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/797#issuecomment-295616314,"There's an undocumented option for sysrepoctl which enables overrides
for various repository locations. However, the submodule schema
directory was not being overridden.
When tests are enabled, sysrepoctl is invoked via CMake's POST_BUILD
option right after the common_test has been built. Because this is
running at the time of the build, i.e., prior to installation time,
the target directories have not yet been created. This leads to the
following failure:
  2017-04-20 06:51:52,422 [output] [114/140] Linking C executable tests/common_test
  2017-04-20 06:51:52,422 [output] FAILED: tests/common_test
  2017-04-20 06:51:52,423 [output] : && /opt/rh/devtoolset-6/root/usr/bin/cc  -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0   tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o tests/CMakeFiles/common_test.dir/common_test.c.o  -o tests/common_test  -rdynamic -lcmocka src/libsysrepo.a -lrt -lpthread /home/turbo-hipster/target/lib/libredblack.so -lev -lprotobuf-c /home/turbo-hipster/target/lib64/libyang.so -Wl,-rpath,/home/turbo-hipster/target/lib:/home/turbo-hipster/target/lib64 && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-acm@2012-02-22.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/example-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/test-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/small-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/info-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-a@2016-02-10.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-b@2016-02-05.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/iana-if-type.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-ip@2014-06-16.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/state-module@2016-07-01.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/top-level-mandatory.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/referenced-data.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/cross-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/turing-machine.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/nc-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/servers.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null
  2017-04-20 06:51:52,423 [output] Error: Unable to create schema repository '/home/turbo-hipster/target/etc-sysrepo/yang//submodules/': No such file or directory.

This appears to happen only when configuring with -DREPOSITORY_LOC pointing
outside of the build directory.","Codecov Report

Merging #797 into devel will decrease coverage by 1.14%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #797      +/-   ##
==========================================
- Coverage   87.56%   86.43%   -1.14%     
==========================================
  Files          65       31      -34     
  Lines       47153    24326   -22827     
  Branches     5073     4291     -782     
==========================================
- Hits        41289    21024   -20265     
+ Misses       3668     3302     -366     
+ Partials     2196        0    -2196",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,797,2017-04-20T07:34:57Z,2017-04-27T10:37:00Z,2017-04-27T10:37:00Z,CLOSED,False,4,1,1,https://github.com/jktjkt,"tests: Fix initialization of ""local sysrepo directory""",1,[],https://github.com/sysrepo/sysrepo/pull/797,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/797#issuecomment-295618710,"There's an undocumented option for sysrepoctl which enables overrides
for various repository locations. However, the submodule schema
directory was not being overridden.
When tests are enabled, sysrepoctl is invoked via CMake's POST_BUILD
option right after the common_test has been built. Because this is
running at the time of the build, i.e., prior to installation time,
the target directories have not yet been created. This leads to the
following failure:
  2017-04-20 06:51:52,422 [output] [114/140] Linking C executable tests/common_test
  2017-04-20 06:51:52,422 [output] FAILED: tests/common_test
  2017-04-20 06:51:52,423 [output] : && /opt/rh/devtoolset-6/root/usr/bin/cc  -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0   tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o tests/CMakeFiles/common_test.dir/common_test.c.o  -o tests/common_test  -rdynamic -lcmocka src/libsysrepo.a -lrt -lpthread /home/turbo-hipster/target/lib/libredblack.so -lev -lprotobuf-c /home/turbo-hipster/target/lib64/libyang.so -Wl,-rpath,/home/turbo-hipster/target/lib:/home/turbo-hipster/target/lib64 && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-acm@2012-02-22.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/example-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/test-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/small-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/info-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-a@2016-02-10.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-b@2016-02-05.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/iana-if-type.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-ip@2014-06-16.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/state-module@2016-07-01.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/top-level-mandatory.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/referenced-data.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/cross-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/turing-machine.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/nc-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/servers.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null
  2017-04-20 06:51:52,423 [output] Error: Unable to create schema repository '/home/turbo-hipster/target/etc-sysrepo/yang//submodules/': No such file or directory.

This appears to happen only when configuring with -DREPOSITORY_LOC pointing
outside of the build directory.","Hi,
we were planning to modify this further because the previous modification #781 seems to have been unnecessarily complicated. All we were trying to do is to avoid error messages about not being able to load submodules. However, the only place the schema directory is directly traversed is in srctl_init on sysrepoctl.c:1133. Based on my current knowledge it should be possible to traverse modules in md_ctx instead and thus avoid any schema parsing altogether. Once this is implemented, we wanted to reverse the changes from #781. But, we are currently busy, so you may try to do this change yourself. If you do, just note that I may be wrong and for some reason it cannot be done the way I have just described.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,797,2017-04-20T07:34:57Z,2017-04-27T10:37:00Z,2017-04-27T10:37:00Z,CLOSED,False,4,1,1,https://github.com/jktjkt,"tests: Fix initialization of ""local sysrepo directory""",1,[],https://github.com/sysrepo/sysrepo/pull/797,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/797#issuecomment-295638924,"There's an undocumented option for sysrepoctl which enables overrides
for various repository locations. However, the submodule schema
directory was not being overridden.
When tests are enabled, sysrepoctl is invoked via CMake's POST_BUILD
option right after the common_test has been built. Because this is
running at the time of the build, i.e., prior to installation time,
the target directories have not yet been created. This leads to the
following failure:
  2017-04-20 06:51:52,422 [output] [114/140] Linking C executable tests/common_test
  2017-04-20 06:51:52,422 [output] FAILED: tests/common_test
  2017-04-20 06:51:52,423 [output] : && /opt/rh/devtoolset-6/root/usr/bin/cc  -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0   tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o tests/CMakeFiles/common_test.dir/common_test.c.o  -o tests/common_test  -rdynamic -lcmocka src/libsysrepo.a -lrt -lpthread /home/turbo-hipster/target/lib/libredblack.so -lev -lprotobuf-c /home/turbo-hipster/target/lib64/libyang.so -Wl,-rpath,/home/turbo-hipster/target/lib:/home/turbo-hipster/target/lib64 && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-acm@2012-02-22.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/example-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/test-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/small-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/info-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-a@2016-02-10.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-b@2016-02-05.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/iana-if-type.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-ip@2014-06-16.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/state-module@2016-07-01.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/top-level-mandatory.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/referenced-data.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/cross-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/turing-machine.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/nc-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/servers.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null
  2017-04-20 06:51:52,423 [output] Error: Unable to create schema repository '/home/turbo-hipster/target/etc-sysrepo/yang//submodules/': No such file or directory.

This appears to happen only when configuring with -DREPOSITORY_LOC pointing
outside of the build directory.","Well, I'm upgrading because I prefer to stay as close to upstream as possible to prevent nasty surprises in future. So it is my policy to always try to fix regressions as I hit them. This is one of them. I'm afraid that I don't have time and knowledge to dig deeper into SR's internals.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,797,2017-04-20T07:34:57Z,2017-04-27T10:37:00Z,2017-04-27T10:37:00Z,CLOSED,False,4,1,1,https://github.com/jktjkt,"tests: Fix initialization of ""local sysrepo directory""",1,[],https://github.com/sysrepo/sysrepo/pull/797,https://github.com/jktjkt,5,https://github.com/sysrepo/sysrepo/pull/797#issuecomment-297550609,"There's an undocumented option for sysrepoctl which enables overrides
for various repository locations. However, the submodule schema
directory was not being overridden.
When tests are enabled, sysrepoctl is invoked via CMake's POST_BUILD
option right after the common_test has been built. Because this is
running at the time of the build, i.e., prior to installation time,
the target directories have not yet been created. This leads to the
following failure:
  2017-04-20 06:51:52,422 [output] [114/140] Linking C executable tests/common_test
  2017-04-20 06:51:52,422 [output] FAILED: tests/common_test
  2017-04-20 06:51:52,423 [output] : && /opt/rh/devtoolset-6/root/usr/bin/cc  -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0   tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o tests/CMakeFiles/common_test.dir/common_test.c.o  -o tests/common_test  -rdynamic -lcmocka src/libsysrepo.a -lrt -lpthread /home/turbo-hipster/target/lib/libredblack.so -lev -lprotobuf-c /home/turbo-hipster/target/lib64/libyang.so -Wl,-rpath,/home/turbo-hipster/target/lib:/home/turbo-hipster/target/lib64 && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-acm@2012-02-22.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/example-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/test-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/small-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/info-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-a@2016-02-10.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-b@2016-02-05.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/iana-if-type.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-ip@2014-06-16.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/state-module@2016-07-01.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/top-level-mandatory.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/referenced-data.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/cross-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/turing-machine.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/nc-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/servers.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null
  2017-04-20 06:51:52,423 [output] Error: Unable to create schema repository '/home/turbo-hipster/target/etc-sysrepo/yang//submodules/': No such file or directory.

This appears to happen only when configuring with -DREPOSITORY_LOC pointing
outside of the build directory.","As of commit 7acb142, I still cannot install sysrepo with a -DREPOSITORY_LOC pointing outside of the build tree. If you're still to rework that part which works with submodules, which pull request should I carry on top of devel? If there's no pull request yet, can you maybe take this patch so that stuff ceases to be broken for me? :)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,797,2017-04-20T07:34:57Z,2017-04-27T10:37:00Z,2017-04-27T10:37:00Z,CLOSED,False,4,1,1,https://github.com/jktjkt,"tests: Fix initialization of ""local sysrepo directory""",1,[],https://github.com/sysrepo/sysrepo/pull/797,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/797#issuecomment-297652518,"There's an undocumented option for sysrepoctl which enables overrides
for various repository locations. However, the submodule schema
directory was not being overridden.
When tests are enabled, sysrepoctl is invoked via CMake's POST_BUILD
option right after the common_test has been built. Because this is
running at the time of the build, i.e., prior to installation time,
the target directories have not yet been created. This leads to the
following failure:
  2017-04-20 06:51:52,422 [output] [114/140] Linking C executable tests/common_test
  2017-04-20 06:51:52,422 [output] FAILED: tests/common_test
  2017-04-20 06:51:52,423 [output] : && /opt/rh/devtoolset-6/root/usr/bin/cc  -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0   tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o tests/CMakeFiles/common_test.dir/common_test.c.o  -o tests/common_test  -rdynamic -lcmocka src/libsysrepo.a -lrt -lpthread /home/turbo-hipster/target/lib/libredblack.so -lev -lprotobuf-c /home/turbo-hipster/target/lib64/libyang.so -Wl,-rpath,/home/turbo-hipster/target/lib:/home/turbo-hipster/target/lib64 && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-acm@2012-02-22.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/example-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/test-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/small-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/info-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-a@2016-02-10.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-b@2016-02-05.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/iana-if-type.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-ip@2014-06-16.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/state-module@2016-07-01.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/top-level-mandatory.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/referenced-data.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/cross-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/turing-machine.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/nc-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/servers.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null
  2017-04-20 06:51:52,423 [output] Error: Unable to create schema repository '/home/turbo-hipster/target/etc-sysrepo/yang//submodules/': No such file or directory.

This appears to happen only when configuring with -DREPOSITORY_LOC pointing
outside of the build directory.","Hi,
sorry, too many issues... Pull request #819 should fix your problem, but we don't know when we will be able to merge it because some recent protobuf changes caused current master protobuf-c to fail to compile, so travis tests are broken.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,797,2017-04-20T07:34:57Z,2017-04-27T10:37:00Z,2017-04-27T10:37:00Z,CLOSED,False,4,1,1,https://github.com/jktjkt,"tests: Fix initialization of ""local sysrepo directory""",1,[],https://github.com/sysrepo/sysrepo/pull/797,https://github.com/jktjkt,7,https://github.com/sysrepo/sysrepo/pull/797#issuecomment-297677686,"There's an undocumented option for sysrepoctl which enables overrides
for various repository locations. However, the submodule schema
directory was not being overridden.
When tests are enabled, sysrepoctl is invoked via CMake's POST_BUILD
option right after the common_test has been built. Because this is
running at the time of the build, i.e., prior to installation time,
the target directories have not yet been created. This leads to the
following failure:
  2017-04-20 06:51:52,422 [output] [114/140] Linking C executable tests/common_test
  2017-04-20 06:51:52,422 [output] FAILED: tests/common_test
  2017-04-20 06:51:52,423 [output] : && /opt/rh/devtoolset-6/root/usr/bin/cc  -Wall -Wpedantic -std=gnu11 -Wno-strict-aliasing -g -O0   tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o tests/CMakeFiles/common_test.dir/common_test.c.o  -o tests/common_test  -rdynamic -lcmocka src/libsysrepo.a -lrt -lpthread /home/turbo-hipster/target/lib/libredblack.so -lev -lprotobuf-c /home/turbo-hipster/target/lib64/libyang.so -Wl,-rpath,/home/turbo-hipster/target/lib:/home/turbo-hipster/target/lib64 && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-acm@2012-02-22.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/example-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/test-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/small-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/info-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-a@2016-02-10.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/module-b@2016-02-05.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/iana-if-type.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-ip@2014-06-16.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/state-module@2016-07-01.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/top-level-mandatory.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/referenced-data.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/cross-module.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/turing-machine.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/ietf-netconf-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/nc-notifications.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null && cd /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/tests && /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/src/sysrepoctl --install --yang=/home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/tests/yang/servers.yang -0 /home/turbo-hipster/jobs/7ddabccd6e29/97/197/2/check/check-czechlight-devtoolset6-el7/637913a/sysrepo/sysrepo/build/repository > /dev/null
  2017-04-20 06:51:52,423 [output] Error: Unable to create schema repository '/home/turbo-hipster/target/etc-sysrepo/yang//submodules/': No such file or directory.

This appears to happen only when configuring with -DREPOSITORY_LOC pointing
outside of the build directory.","OK, let's close this one as not applicable anymore. Thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,801,2017-04-20T14:50:14Z,2017-04-21T06:36:23Z,2020-01-15T07:49:46Z,MERGED,True,18,15,6,https://github.com/mislavn,BUGFIX for mutex handling,1,[],https://github.com/sysrepo/sysrepo/pull/801,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/801,"This patch fixes the case where ac_set_user_identity would not lock the
mutex and in ac_unset_user_identity it would get anyway unlocked which
resulted in a warning by sanitizer:
WARNING: ThreadSanitizer: unlock of an unlocked mutex (or by a wrong thread)
This is bug fix for the github issue #800.","This patch fixes the case where ac_set_user_identity would not lock the
mutex and in ac_unset_user_identity it would get anyway unlocked which
resulted in a warning by sanitizer:
WARNING: ThreadSanitizer: unlock of an unlocked mutex (or by a wrong thread)
This is bug fix for the github issue #800.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,801,2017-04-20T14:50:14Z,2017-04-21T06:36:23Z,2020-01-15T07:49:46Z,MERGED,True,18,15,6,https://github.com/mislavn,BUGFIX for mutex handling,1,[],https://github.com/sysrepo/sysrepo/pull/801,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/801#issuecomment-295765208,"This patch fixes the case where ac_set_user_identity would not lock the
mutex and in ac_unset_user_identity it would get anyway unlocked which
resulted in a warning by sanitizer:
WARNING: ThreadSanitizer: unlock of an unlocked mutex (or by a wrong thread)
This is bug fix for the github issue #800.",@michalvasko please can you take a look at this pull request.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,801,2017-04-20T14:50:14Z,2017-04-21T06:36:23Z,2020-01-15T07:49:46Z,MERGED,True,18,15,6,https://github.com/mislavn,BUGFIX for mutex handling,1,[],https://github.com/sysrepo/sysrepo/pull/801,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/801#issuecomment-295772838,"This patch fixes the case where ac_set_user_identity would not lock the
mutex and in ac_unset_user_identity it would get anyway unlocked which
resulted in a warning by sanitizer:
WARNING: ThreadSanitizer: unlock of an unlocked mutex (or by a wrong thread)
This is bug fix for the github issue #800.","Codecov Report

Merging #801 into devel will decrease coverage by 1.16%.
The diff coverage is 84.62%.

@@            Coverage Diff             @@
##            devel     #801      +/-   ##
==========================================
- Coverage   87.56%   86.41%   -1.16%     
==========================================
  Files          65       31      -34     
  Lines       47153    24323   -22830     
  Branches     5073     4292     -781     
==========================================
- Hits        41289    21017   -20272     
+ Misses       3668     3306     -362     
+ Partials     2196        0    -2196",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,802,2017-04-20T17:08:33Z,2017-04-21T07:41:46Z,2020-01-15T07:49:35Z,MERGED,True,2,2,2,https://github.com/mislavn,BUGFIX for execute_process command,1,[],https://github.com/sysrepo/sysrepo/pull/802,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/802,"Set the cmake command execute_process to be run as a bash command.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Set the cmake command execute_process to be run as a bash command.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,802,2017-04-20T17:08:33Z,2017-04-21T07:41:46Z,2020-01-15T07:49:35Z,MERGED,True,2,2,2,https://github.com/mislavn,BUGFIX for execute_process command,1,[],https://github.com/sysrepo/sysrepo/pull/802,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/802#issuecomment-295823947,"Set the cmake command execute_process to be run as a bash command.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Codecov Report

Merging #802 into devel will decrease coverage by 1.13%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #802      +/-   ##
==========================================
- Coverage   87.56%   86.43%   -1.13%     
==========================================
  Files          65       31      -34     
  Lines       47153    24322   -22831     
  Branches     5073     4291     -782     
==========================================
- Hits        41289    21022   -20267     
+ Misses       3668     3300     -368     
+ Partials     2196        0    -2196",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,803,2017-04-21T07:45:28Z,2017-04-21T13:26:22Z,2017-04-21T13:56:17Z,MERGED,True,166,176,2,https://github.com/michalvasko,Dependent module data fix,6,[],https://github.com/sysrepo/sysrepo/pull/803,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/803,Fixes CESNET/netopeer2#130,Fixes CESNET/netopeer2#130,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,803,2017-04-21T07:45:28Z,2017-04-21T13:26:22Z,2017-04-21T13:56:17Z,MERGED,True,166,176,2,https://github.com/michalvasko,Dependent module data fix,6,[],https://github.com/sysrepo/sysrepo/pull/803,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/803#issuecomment-296119204,Fixes CESNET/netopeer2#130,"Codecov Report

Merging #803 into devel will increase coverage by 0.01%.
The diff coverage is 45.05%.

@@            Coverage Diff             @@
##            devel     #803      +/-   ##
==========================================
+ Coverage   86.44%   86.45%   +0.01%     
==========================================
  Files          31       31              
  Lines       24323    24324       +1     
  Branches     4292     4294       +2     
==========================================
+ Hits        21025    21029       +4     
+ Misses       3298     3295       -3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,805,2017-04-21T11:05:31Z,2017-04-28T08:12:52Z,2020-01-15T07:49:44Z,MERGED,True,62,0,2,https://github.com/antonio-paunovic,Github templates for issues and pull requests.,3,[],https://github.com/sysrepo/sysrepo/pull/805,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/805,"This is a suggestion for github templates and issues.
To better use of developers time, a filter is needed for repetative and/or basic issues.
It's no fun telling users same thing over and over (like attach log, steps to reproduce, did you check devel, etc.).
We're thinking that this current version has too much text, but it also seems necessary.
And it could still grow. Some kind of readme file would be better place for much of it. Headers would be left for issuel to fill out.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr","This is a suggestion for github templates and issues.
To better use of developers time, a filter is needed for repetative and/or basic issues.
It's no fun telling users same thing over and over (like attach log, steps to reproduce, did you check devel, etc.).
We're thinking that this current version has too much text, but it also seems necessary.
And it could still grow. Some kind of readme file would be better place for much of it. Headers would be left for issuel to fill out.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,805,2017-04-21T11:05:31Z,2017-04-28T08:12:52Z,2020-01-15T07:49:44Z,MERGED,True,62,0,2,https://github.com/antonio-paunovic,Github templates for issues and pull requests.,3,[],https://github.com/sysrepo/sysrepo/pull/805,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/805#issuecomment-296165808,"This is a suggestion for github templates and issues.
To better use of developers time, a filter is needed for repetative and/or basic issues.
It's no fun telling users same thing over and over (like attach log, steps to reproduce, did you check devel, etc.).
We're thinking that this current version has too much text, but it also seems necessary.
And it could still grow. Some kind of readme file would be better place for much of it. Headers would be left for issuel to fill out.
Signed-off-by: Antonio Paunovic antonio.paunovic@sartura.hr","Codecov Report

Merging #805 into devel will decrease coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #805      +/-   ##
==========================================
- Coverage   86.44%   86.43%   -0.01%     
==========================================
  Files          31       31              
  Lines       24323    24322       -1     
  Branches     4292     4294       +2     
==========================================
- Hits        21025    21021       -4     
- Misses       3298     3301       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,806,2017-04-21T14:47:36Z,2017-04-24T14:35:38Z,2020-01-15T07:49:38Z,MERGED,True,2,0,1,https://github.com/mislavn,BUGFIX for data race,1,[],https://github.com/sysrepo/sysrepo/pull/806,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/806,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,806,2017-04-21T14:47:36Z,2017-04-24T14:35:38Z,2020-01-15T07:49:38Z,MERGED,True,2,0,1,https://github.com/mislavn,BUGFIX for data race,1,[],https://github.com/sysrepo/sysrepo/pull/806,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/806#issuecomment-296211666,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,Bug fix for the data race in the issue #804,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,806,2017-04-21T14:47:36Z,2017-04-24T14:35:38Z,2020-01-15T07:49:38Z,MERGED,True,2,0,1,https://github.com/mislavn,BUGFIX for data race,1,[],https://github.com/sysrepo/sysrepo/pull/806,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/806#issuecomment-296216439,Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr,"Codecov Report

Merging #806 into devel will decrease coverage by 0.01%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #806      +/-   ##
==========================================
- Coverage   86.44%   86.43%   -0.01%     
==========================================
  Files          31       31              
  Lines       24324    24325       +1     
  Branches     4294     4294              
==========================================
- Hits        21026    21025       -1     
- Misses       3298     3300       +2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,808,2017-04-22T08:08:28Z,2017-04-28T07:30:31Z,2017-04-28T07:30:32Z,MERGED,True,8,4,1,https://github.com/fanchanghu,BUGFIX do not rtn err for empty data when get nodes by schema,1,[],https://github.com/sysrepo/sysrepo/pull/808,https://github.com/fanchanghu,1,https://github.com/sysrepo/sysrepo/pull/808,"Hi,
The get operation will return an internal error when data is empty and schema has state node, such as follow module:
module test{
	namespace ""urn:it:params:xml:ns:yang:test"";
	prefix ""test"";
    	
	container C1{
	    presence ""enable C1"";
		list L1{
			key ""name"";
			leaf name{
				type string;
			}
			leaf value{
				type string;
				config false;
			}
		}
	}
}

if you do not configure any data and execute get --filter-xpath=/test:C1 in netopeer, you will get an error like this:
> get --filter-xpath=/test:C1
ERROR
        type:     application
        tag:      operation-failed
        severity: error
        message:  Getting items (/test:C1//.) from sysrepo failed (Sysrepo-internal error).

>","Hi,
The get operation will return an internal error when data is empty and schema has state node, such as follow module:
module test{
	namespace ""urn:it:params:xml:ns:yang:test"";
	prefix ""test"";
    	
	container C1{
	    presence ""enable C1"";
		list L1{
			key ""name"";
			leaf name{
				type string;
			}
			leaf value{
				type string;
				config false;
			}
		}
	}
}

if you do not configure any data and execute get --filter-xpath=/test:C1 in netopeer, you will get an error like this:
> get --filter-xpath=/test:C1
ERROR
        type:     application
        tag:      operation-failed
        severity: error
        message:  Getting items (/test:C1//.) from sysrepo failed (Sysrepo-internal error).

>",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,808,2017-04-22T08:08:28Z,2017-04-28T07:30:31Z,2017-04-28T07:30:32Z,MERGED,True,8,4,1,https://github.com/fanchanghu,BUGFIX do not rtn err for empty data when get nodes by schema,1,[],https://github.com/sysrepo/sysrepo/pull/808,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/808#issuecomment-296357315,"Hi,
The get operation will return an internal error when data is empty and schema has state node, such as follow module:
module test{
	namespace ""urn:it:params:xml:ns:yang:test"";
	prefix ""test"";
    	
	container C1{
	    presence ""enable C1"";
		list L1{
			key ""name"";
			leaf name{
				type string;
			}
			leaf value{
				type string;
				config false;
			}
		}
	}
}

if you do not configure any data and execute get --filter-xpath=/test:C1 in netopeer, you will get an error like this:
> get --filter-xpath=/test:C1
ERROR
        type:     application
        tag:      operation-failed
        severity: error
        message:  Getting items (/test:C1//.) from sysrepo failed (Sysrepo-internal error).

>","Codecov Report

Merging #808 into devel will decrease coverage by <.01%.
The diff coverage is 50%.

@@            Coverage Diff             @@
##            devel     #808      +/-   ##
==========================================
- Coverage   86.44%   86.44%   -<.01%     
==========================================
  Files          31       31              
  Lines       24324    24324              
  Branches     4294     4295       +1     
==========================================
- Hits        21026    21025       -1     
- Misses       3298     3299       +1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,808,2017-04-22T08:08:28Z,2017-04-28T07:30:31Z,2017-04-28T07:30:32Z,MERGED,True,8,4,1,https://github.com/fanchanghu,BUGFIX do not rtn err for empty data when get nodes by schema,1,[],https://github.com/sysrepo/sysrepo/pull/808,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/808#issuecomment-296951947,"Hi,
The get operation will return an internal error when data is empty and schema has state node, such as follow module:
module test{
	namespace ""urn:it:params:xml:ns:yang:test"";
	prefix ""test"";
    	
	container C1{
	    presence ""enable C1"";
		list L1{
			key ""name"";
			leaf name{
				type string;
			}
			leaf value{
				type string;
				config false;
			}
		}
	}
}

if you do not configure any data and execute get --filter-xpath=/test:C1 in netopeer, you will get an error like this:
> get --filter-xpath=/test:C1
ERROR
        type:     application
        tag:      operation-failed
        severity: error
        message:  Getting items (/test:C1//.) from sysrepo failed (Sysrepo-internal error).

>","Hi,
I agree that sysrepo should not produce internal errors when there are no data for a module, but not only when it has some state nodes (which is what you said this solves). From the commit it seems to me it could fix this problem for all the modules, not just those with some state nodes, but maybe you know whether it does or not?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,808,2017-04-22T08:08:28Z,2017-04-28T07:30:31Z,2017-04-28T07:30:32Z,MERGED,True,8,4,1,https://github.com/fanchanghu,BUGFIX do not rtn err for empty data when get nodes by schema,1,[],https://github.com/sysrepo/sysrepo/pull/808,https://github.com/fanchanghu,4,https://github.com/sysrepo/sysrepo/pull/808#issuecomment-297252130,"Hi,
The get operation will return an internal error when data is empty and schema has state node, such as follow module:
module test{
	namespace ""urn:it:params:xml:ns:yang:test"";
	prefix ""test"";
    	
	container C1{
	    presence ""enable C1"";
		list L1{
			key ""name"";
			leaf name{
				type string;
			}
			leaf value{
				type string;
				config false;
			}
		}
	}
}

if you do not configure any data and execute get --filter-xpath=/test:C1 in netopeer, you will get an error like this:
> get --filter-xpath=/test:C1
ERROR
        type:     application
        tag:      operation-failed
        severity: error
        message:  Getting items (/test:C1//.) from sysrepo failed (Sysrepo-internal error).

>","I'm not sure whether does it produce this error when there are no state nodes in schema, but it seems this push request can only fix those with some state nodes, as the function dm_get_nodes_by_schema can only be called when there are some state nodes in schema.
Have I missed something?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,808,2017-04-22T08:08:28Z,2017-04-28T07:30:31Z,2017-04-28T07:30:32Z,MERGED,True,8,4,1,https://github.com/fanchanghu,BUGFIX do not rtn err for empty data when get nodes by schema,1,[],https://github.com/sysrepo/sysrepo/pull/808,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/808#issuecomment-297672462,"Hi,
The get operation will return an internal error when data is empty and schema has state node, such as follow module:
module test{
	namespace ""urn:it:params:xml:ns:yang:test"";
	prefix ""test"";
    	
	container C1{
	    presence ""enable C1"";
		list L1{
			key ""name"";
			leaf name{
				type string;
			}
			leaf value{
				type string;
				config false;
			}
		}
	}
}

if you do not configure any data and execute get --filter-xpath=/test:C1 in netopeer, you will get an error like this:
> get --filter-xpath=/test:C1
ERROR
        type:     application
        tag:      operation-failed
        severity: error
        message:  Getting items (/test:C1//.) from sysrepo failed (Sysrepo-internal error).

>","Hi,
you are right, this is only for state data, I mixed it. So it is fine, but we want to wait with the merge, because it would restart tests and they would fail now.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,809,2017-04-24T09:01:28Z,2017-04-24T09:41:30Z,2017-05-12T11:12:46Z,MERGED,True,234,0,2,https://github.com/rkrejci,Policies,2,[],https://github.com/sysrepo/sysrepo/pull/809,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/809,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,809,2017-04-24T09:01:28Z,2017-04-24T09:41:30Z,2017-05-12T11:12:46Z,MERGED,True,234,0,2,https://github.com/rkrejci,Policies,2,[],https://github.com/sysrepo/sysrepo/pull/809,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/809#issuecomment-296590670,,"Codecov Report

Merging #809 into devel will increase coverage by 0.05%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #809      +/-   ##
==========================================
+ Coverage   86.44%   86.49%   +0.05%     
==========================================
  Files          31       31              
  Lines       24324    24324              
  Branches     4294     4294              
==========================================
+ Hits        21026    21037      +11     
+ Misses       3298     3287      -11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,810,2017-04-24T09:35:50Z,2017-04-26T07:05:46Z,2017-04-26T07:05:46Z,MERGED,True,187,141,8,https://github.com/michalvasko,Implemented flag changes and fixes,8,[],https://github.com/sysrepo/sysrepo/pull/810,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/810,"New installed flag added.
Refs #798","New installed flag added.
Refs #798",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,810,2017-04-24T09:35:50Z,2017-04-26T07:05:46Z,2017-04-26T07:05:46Z,MERGED,True,187,141,8,https://github.com/michalvasko,Implemented flag changes and fixes,8,[],https://github.com/sysrepo/sysrepo/pull/810,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/810#issuecomment-296599707,"New installed flag added.
Refs #798","Codecov Report

Merging #810 into devel will decrease coverage by 0.02%.
The diff coverage is 86.54%.

@@            Coverage Diff             @@
##            devel     #810      +/-   ##
==========================================
- Coverage   86.44%   86.43%   -0.02%     
==========================================
  Files          31       31              
  Lines       24324    24333       +9     
  Branches     4294     4300       +6     
==========================================
+ Hits        21026    21030       +4     
- Misses       3298     3303       +5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,814,2017-04-26T07:54:46Z,2017-05-02T11:23:23Z,2017-05-02T11:24:53Z,MERGED,True,248,109,4,https://github.com/fabioantonini,sysrepocfg '--merge' option,16,[],https://github.com/sysrepo/sysrepo/pull/814,https://github.com/fabioantonini,1,https://github.com/sysrepo/sysrepo/pull/814,"Description
This pull request adds the new option '--merge' to sysrepocfg
The new option modifies existing nodes or creates new nodes according the content of the specified xml/json file.
Some examples of the command
sysrepocfg --merge=merge.json --format=json module-name
sysrepocfg -m merge.json module-name

If no format is provided xml format will be assumed.
The new option doesn't delete any other existing data node as '--import' does.
Some additional tests have been added to sysrepocfg_test
Closure
Closes #813","Description
This pull request adds the new option '--merge' to sysrepocfg
The new option modifies existing nodes or creates new nodes according the content of the specified xml/json file.
Some examples of the command
sysrepocfg --merge=merge.json --format=json module-name
sysrepocfg -m merge.json module-name

If no format is provided xml format will be assumed.
The new option doesn't delete any other existing data node as '--import' does.
Some additional tests have been added to sysrepocfg_test
Closure
Closes #813",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,814,2017-04-26T07:54:46Z,2017-05-02T11:23:23Z,2017-05-02T11:24:53Z,MERGED,True,248,109,4,https://github.com/fabioantonini,sysrepocfg '--merge' option,16,[],https://github.com/sysrepo/sysrepo/pull/814,https://github.com/fabioantonini,2,https://github.com/sysrepo/sysrepo/pull/814#issuecomment-298059008,"Description
This pull request adds the new option '--merge' to sysrepocfg
The new option modifies existing nodes or creates new nodes according the content of the specified xml/json file.
Some examples of the command
sysrepocfg --merge=merge.json --format=json module-name
sysrepocfg -m merge.json module-name

If no format is provided xml format will be assumed.
The new option doesn't delete any other existing data node as '--import' does.
Some additional tests have been added to sysrepocfg_test
Closure
Closes #813","Hi Radek
I cannot understand why sysrepocfg_test failed? What's wrong?
I have run it on my target board and it was successfull.
It sounds as many yang files have not been properly installed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,814,2017-04-26T07:54:46Z,2017-05-02T11:23:23Z,2017-05-02T11:24:53Z,MERGED,True,248,109,4,https://github.com/fabioantonini,sysrepocfg '--merge' option,16,[],https://github.com/sysrepo/sysrepo/pull/814,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/814#issuecomment-298139284,"Description
This pull request adds the new option '--merge' to sysrepocfg
The new option modifies existing nodes or creates new nodes according the content of the specified xml/json file.
Some examples of the command
sysrepocfg --merge=merge.json --format=json module-name
sysrepocfg -m merge.json module-name

If no format is provided xml format will be assumed.
The new option doesn't delete any other existing data node as '--import' does.
Some additional tests have been added to sysrepocfg_test
Closure
Closes #813","Codecov Report

Merging #814 into devel will increase coverage by 0.01%.
The diff coverage is 88.89%.

@@            Coverage Diff             @@
##            devel     #814      +/-   ##
==========================================
+ Coverage   86.46%   86.47%   +0.01%     
==========================================
  Files          31       31              
  Lines       24300    24323      +23     
  Branches     4295     4299       +4     
==========================================
+ Hits        21009    21032      +23     
  Misses       3291     3291",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,814,2017-04-26T07:54:46Z,2017-05-02T11:23:23Z,2017-05-02T11:24:53Z,MERGED,True,248,109,4,https://github.com/fabioantonini,sysrepocfg '--merge' option,16,[],https://github.com/sysrepo/sysrepo/pull/814,https://github.com/fabioantonini,4,https://github.com/sysrepo/sysrepo/pull/814#issuecomment-298544201,"Description
This pull request adds the new option '--merge' to sysrepocfg
The new option modifies existing nodes or creates new nodes according the content of the specified xml/json file.
Some examples of the command
sysrepocfg --merge=merge.json --format=json module-name
sysrepocfg -m merge.json module-name

If no format is provided xml format will be assumed.
The new option doesn't delete any other existing data node as '--import' does.
Some additional tests have been added to sysrepocfg_test
Closure
Closes #813","Analyzing more in details TRAVIS CI's output I can see
[ 69%] Building C object src/CMakeFiles/sysrepocfg.dir/executables/sysrepocfg.c.o
Linking CXX shared library libSysrepo-cpp.so
/bin/sh: 1: ../src/sysrepoctl: not found
make[2]: *** [swig/libSysrepo-cpp.so] Error 127
make[1]: *** [swig/CMakeFiles/Sysrepo-cpp.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
Linking C executable sysrepocfg
[ 69%] Built target sysrepocfg
make: *** [all] Error 2
it seems that sysrepoctl has been called before it has been compiled? Do you agree
thanks
fabio",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,814,2017-04-26T07:54:46Z,2017-05-02T11:23:23Z,2017-05-02T11:24:53Z,MERGED,True,248,109,4,https://github.com/fabioantonini,sysrepocfg '--merge' option,16,[],https://github.com/sysrepo/sysrepo/pull/814,https://github.com/rkrejci,5,https://github.com/sysrepo/sysrepo/pull/814#issuecomment-298577118,"Description
This pull request adds the new option '--merge' to sysrepocfg
The new option modifies existing nodes or creates new nodes according the content of the specified xml/json file.
Some examples of the command
sysrepocfg --merge=merge.json --format=json module-name
sysrepocfg -m merge.json module-name

If no format is provided xml format will be assumed.
The new option doesn't delete any other existing data node as '--import' does.
Some additional tests have been added to sysrepocfg_test
Closure
Closes #813","yes, I've just restarted the Travis's job",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,814,2017-04-26T07:54:46Z,2017-05-02T11:23:23Z,2017-05-02T11:24:53Z,MERGED,True,248,109,4,https://github.com/fabioantonini,sysrepocfg '--merge' option,16,[],https://github.com/sysrepo/sysrepo/pull/814,https://github.com/fabioantonini,6,https://github.com/sysrepo/sysrepo/pull/814#issuecomment-298580304,"Description
This pull request adds the new option '--merge' to sysrepocfg
The new option modifies existing nodes or creates new nodes according the content of the specified xml/json file.
Some examples of the command
sysrepocfg --merge=merge.json --format=json module-name
sysrepocfg -m merge.json module-name

If no format is provided xml format will be assumed.
The new option doesn't delete any other existing data node as '--import' does.
Some additional tests have been added to sysrepocfg_test
Closure
Closes #813","thanks
please take a look at the changes.
The modified function 'srcfg_import_datastore' is used also in 'srcfg_edit_operation', but in that case the merge parameter is set to 'false'. At the moment the user cannot edit and merge.
Can I improve that in some way in your opinion?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,815,2017-04-26T09:22:37Z,2017-04-26T11:10:17Z,2017-04-26T11:10:21Z,MERGED,True,14,12,1,https://github.com/michalvasko,Copy config locking fix,2,[],https://github.com/sysrepo/sysrepo/pull/815,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/815,Fixes CESNET/netopeer2#131,Fixes CESNET/netopeer2#131,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,816,2017-04-26T11:28:15Z,2017-04-28T08:18:53Z,2020-01-15T07:49:46Z,MERGED,True,3,5,1,https://github.com/mislavn,BUGFIX memory leak,2,[],https://github.com/sysrepo/sysrepo/pull/816,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/816,"Bugfix for a memory leak in sysrepoctl.
How to reproduce it:

run sysrepoctl install, for an example:
valgrind sysrepoctl --install --yang=/opt/fork/sysrepo/tests/yang/ietf-interfaces\@2014-05-08.yang --owner=root:root --permissions=644

Output
Installing a new module from file '/opt/fork/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang'...
Installing the YANG file to '/etc/sysrepo/yang/ietf-interfaces@2014-05-08.yang'...
Installing data files for module 'ietf-interfaces'...
Notifying sysrepo about the change...
Install operation completed successfully.
==1962== 
==1962== HEAP SUMMARY:
==1962==     in use at exit: 75 bytes in 3 blocks
==1962==   total heap usage: 13,588 allocs, 13,585 frees, 6,512,684 bytes allocated
==1962== 
==1962== LEAK SUMMARY:
==1962==    definitely lost: 24 bytes in 1 blocks
==1962==    indirectly lost: 0 bytes in 0 blocks
==1962==      possibly lost: 0 bytes in 0 blocks
==1962==    still reachable: 51 bytes in 2 blocks
==1962==         suppressed: 0 bytes in 0 blocks
==1962== Rerun with --leak-check=full to see details of leaked memory
==1962== 
==1962== For counts of detected and suppressed errors, rerun with: -v
==1962== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

The problem occurs when the function implicitly_inserted_p is never used.","Bugfix for a memory leak in sysrepoctl.
How to reproduce it:

run sysrepoctl install, for an example:
valgrind sysrepoctl --install --yang=/opt/fork/sysrepo/tests/yang/ietf-interfaces\@2014-05-08.yang --owner=root:root --permissions=644

Output
Installing a new module from file '/opt/fork/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang'...
Installing the YANG file to '/etc/sysrepo/yang/ietf-interfaces@2014-05-08.yang'...
Installing data files for module 'ietf-interfaces'...
Notifying sysrepo about the change...
Install operation completed successfully.
==1962== 
==1962== HEAP SUMMARY:
==1962==     in use at exit: 75 bytes in 3 blocks
==1962==   total heap usage: 13,588 allocs, 13,585 frees, 6,512,684 bytes allocated
==1962== 
==1962== LEAK SUMMARY:
==1962==    definitely lost: 24 bytes in 1 blocks
==1962==    indirectly lost: 0 bytes in 0 blocks
==1962==      possibly lost: 0 bytes in 0 blocks
==1962==    still reachable: 51 bytes in 2 blocks
==1962==         suppressed: 0 bytes in 0 blocks
==1962== Rerun with --leak-check=full to see details of leaked memory
==1962== 
==1962== For counts of detected and suppressed errors, rerun with: -v
==1962== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

The problem occurs when the function implicitly_inserted_p is never used.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,816,2017-04-26T11:28:15Z,2017-04-28T08:18:53Z,2020-01-15T07:49:46Z,MERGED,True,3,5,1,https://github.com/mislavn,BUGFIX memory leak,2,[],https://github.com/sysrepo/sysrepo/pull/816,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/816#issuecomment-297398705,"Bugfix for a memory leak in sysrepoctl.
How to reproduce it:

run sysrepoctl install, for an example:
valgrind sysrepoctl --install --yang=/opt/fork/sysrepo/tests/yang/ietf-interfaces\@2014-05-08.yang --owner=root:root --permissions=644

Output
Installing a new module from file '/opt/fork/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang'...
Installing the YANG file to '/etc/sysrepo/yang/ietf-interfaces@2014-05-08.yang'...
Installing data files for module 'ietf-interfaces'...
Notifying sysrepo about the change...
Install operation completed successfully.
==1962== 
==1962== HEAP SUMMARY:
==1962==     in use at exit: 75 bytes in 3 blocks
==1962==   total heap usage: 13,588 allocs, 13,585 frees, 6,512,684 bytes allocated
==1962== 
==1962== LEAK SUMMARY:
==1962==    definitely lost: 24 bytes in 1 blocks
==1962==    indirectly lost: 0 bytes in 0 blocks
==1962==      possibly lost: 0 bytes in 0 blocks
==1962==    still reachable: 51 bytes in 2 blocks
==1962==         suppressed: 0 bytes in 0 blocks
==1962== Rerun with --leak-check=full to see details of leaked memory
==1962== 
==1962== For counts of detected and suppressed errors, rerun with: -v
==1962== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

The problem occurs when the function implicitly_inserted_p is never used.","Hi Mislav,
I think my changes caused this memory leak and then there is a similar one in md_remove_module, so fix that one as well, please.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,816,2017-04-26T11:28:15Z,2017-04-28T08:18:53Z,2020-01-15T07:49:46Z,MERGED,True,3,5,1,https://github.com/mislavn,BUGFIX memory leak,2,[],https://github.com/sysrepo/sysrepo/pull/816,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/816#issuecomment-297404175,"Bugfix for a memory leak in sysrepoctl.
How to reproduce it:

run sysrepoctl install, for an example:
valgrind sysrepoctl --install --yang=/opt/fork/sysrepo/tests/yang/ietf-interfaces\@2014-05-08.yang --owner=root:root --permissions=644

Output
Installing a new module from file '/opt/fork/sysrepo/tests/yang/ietf-interfaces@2014-05-08.yang'...
Installing the YANG file to '/etc/sysrepo/yang/ietf-interfaces@2014-05-08.yang'...
Installing data files for module 'ietf-interfaces'...
Notifying sysrepo about the change...
Install operation completed successfully.
==1962== 
==1962== HEAP SUMMARY:
==1962==     in use at exit: 75 bytes in 3 blocks
==1962==   total heap usage: 13,588 allocs, 13,585 frees, 6,512,684 bytes allocated
==1962== 
==1962== LEAK SUMMARY:
==1962==    definitely lost: 24 bytes in 1 blocks
==1962==    indirectly lost: 0 bytes in 0 blocks
==1962==      possibly lost: 0 bytes in 0 blocks
==1962==    still reachable: 51 bytes in 2 blocks
==1962==         suppressed: 0 bytes in 0 blocks
==1962== Rerun with --leak-check=full to see details of leaked memory
==1962== 
==1962== For counts of detected and suppressed errors, rerun with: -v
==1962== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

The problem occurs when the function implicitly_inserted_p is never used.","I think my changes caused this memory leak and then there is a similar one in md_remove_module, so fix that one as well, please.

You where right about the leak, I fixed it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,817,2017-04-26T12:35:45Z,2017-04-26T13:32:25Z,2017-04-26T13:32:28Z,MERGED,True,67,9,4,https://github.com/michalvasko,Bugfixes,2,[],https://github.com/sysrepo/sysrepo/pull/817,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/817,"Schema notifications must be installed and implemented, instance-identifiers must be traversed wholly when looking for required schemas as their first namespace is not enough.
Refs CESNET/netopeer2#120","Schema notifications must be installed and implemented, instance-identifiers must be traversed wholly when looking for required schemas as their first namespace is not enough.
Refs CESNET/netopeer2#120",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,818,2017-04-26T12:49:09Z,2017-04-26T13:32:11Z,2017-04-26T13:32:14Z,MERGED,True,1,0,1,https://github.com/michalvasko,BUGFIX installed flag was not filled and sent,1,[],https://github.com/sysrepo/sysrepo/pull/818,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/818,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,819,2017-04-27T07:46:55Z,2017-04-28T11:10:29Z,2017-04-28T11:10:33Z,MERGED,True,59,308,3,https://github.com/michalvasko,sysrepoctl changes,7,[],https://github.com/sysrepo/sysrepo/pull/819,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/819,"init removed, submodules back together with other modules, list prints module conformance
Fixes #812
Fixes #797","init removed, submodules back together with other modules, list prints module conformance
Fixes #812
Fixes #797",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,820,2017-04-27T10:21:11Z,2017-04-28T09:02:31Z,2020-01-15T07:49:44Z,MERGED,True,29,4,1,https://github.com/mislavn,TEST sysrepoctl_test modified get user,1,[],https://github.com/sysrepo/sysrepo/pull/820,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/820,"Replaced getenv with function calls for getting the current user. This
fixes a problem when the USER environment variable is empty.
This problem manifested it self in Docker.","Replaced getenv with function calls for getting the current user. This
fixes a problem when the USER environment variable is empty.
This problem manifested it self in Docker.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,821,2017-04-27T12:04:05Z,2017-04-28T09:24:01Z,2017-04-28T09:24:01Z,CLOSED,False,0,2,1,https://github.com/michalvasko,BUGFIX do not remove data from other modules,1,[],https://github.com/sysrepo/sysrepo/pull/821,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/821,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,822,2017-04-27T13:08:00Z,2017-04-28T09:00:29Z,2020-01-15T07:49:53Z,MERGED,True,15,3,1,https://github.com/mislavn,Sysrepocfg,3,[],https://github.com/sysrepo/sysrepo/pull/822,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/822,Memory bug fixes in the sysrepocfg_test test reported by valgrind.,Memory bug fixes in the sysrepocfg_test test reported by valgrind.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,823,2017-04-27T14:02:33Z,2017-04-28T07:44:03Z,2020-01-15T07:49:39Z,CLOSED,False,11,16,1,https://github.com/antonio-paunovic,Devel coverity toctou fix,2,[],https://github.com/sysrepo/sysrepo/pull/823,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/823,Appease coverity concerning TOCTOU problem.,Appease coverity concerning TOCTOU problem.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,824,2017-04-27T14:51:27Z,2017-04-28T06:57:08Z,2018-09-09T18:47:57Z,MERGED,True,6,4,1,https://github.com/rkrejci,Travis CI build: use protobuf's and protobuf-c's releases instead of …,1,[],https://github.com/sysrepo/sysrepo/pull/824,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/824,"…rolling on git
Avoid compatibility issues between the protobuf and protobuf-c projects
and use stable packages that do not change.","…rolling on git
Avoid compatibility issues between the protobuf and protobuf-c projects
and use stable packages that do not change.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,825,2017-04-28T08:14:30Z,2017-04-28T12:28:35Z,2017-04-28T12:51:38Z,CLOSED,False,5,2,2,https://github.com/rkrejci,Versioning,2,[],https://github.com/sysrepo/sysrepo/pull/825,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/825,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,825,2017-04-28T08:14:30Z,2017-04-28T12:28:35Z,2017-04-28T12:51:38Z,CLOSED,False,5,2,2,https://github.com/rkrejci,Versioning,2,[],https://github.com/sysrepo/sysrepo/pull/825,https://github.com/rkrejci,2,https://github.com/sysrepo/sysrepo/pull/825#issuecomment-297978534,,"I'm afraid I'm not getting your point. What do you think is a problem here?
Anyway, rethinking the problem again - is it a good idea to have SONAME in this library? Its purpose is actually to allow to have multiple versions of the library installed in the system at once. But libsysrepo.so is used to communicate with sysrepod (or to access datastore). So having multiple (soname) versions of the library in the system can cause that a client using version X can try to communicate with the sysrepod version Y. Which may cause problems. Maybe we need some other mechanism for version checking, what do you think?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,825,2017-04-28T08:14:30Z,2017-04-28T12:28:35Z,2017-04-28T12:51:38Z,CLOSED,False,5,2,2,https://github.com/rkrejci,Versioning,2,[],https://github.com/sysrepo/sysrepo/pull/825,https://github.com/antonio-paunovic,3,https://github.com/sysrepo/sysrepo/pull/825#issuecomment-297983430,,"Not exactly a problem, but it seems unconventional.
Rethinking the problem, you're right. libsysrepo is linked to sysrepod, sysrepocfg, etc. during the build. They will all use same version and I can't think of reason why would anybody want situation where parts of Sysrepo infrastructure (also plugin .so files) could have different versions.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,825,2017-04-28T08:14:30Z,2017-04-28T12:28:35Z,2017-04-28T12:51:38Z,CLOSED,False,5,2,2,https://github.com/rkrejci,Versioning,2,[],https://github.com/sysrepo/sysrepo/pull/825,https://github.com/rkrejci,4,https://github.com/sysrepo/sysrepo/pull/825#issuecomment-297985268,,"Well, I can imagine that it can happen that plugins/connected apps (which are not part of the sysrepo project and built at different time) can be built with different version. But then the issue is not solved by SONAME, we will need a mechanism on the client side to detect this.
I'm going to prepare something and will wait also for feedback in #788, but currently this pull request is not ready for merge.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,825,2017-04-28T08:14:30Z,2017-04-28T12:28:35Z,2017-04-28T12:51:38Z,CLOSED,False,5,2,2,https://github.com/rkrejci,Versioning,2,[],https://github.com/sysrepo/sysrepo/pull/825,https://github.com/antonio-paunovic,5,https://github.com/sysrepo/sysrepo/pull/825#issuecomment-297989730,,"OK. Another thing I noticed is that libyang and this pull use major and minor version for SOVERSION and usually (like in /usr/lib on Linux) libs tend to only use major version for it. I can't find out why, since minor version also describes API.
This is what I meant by unconventional before. Maybe not very important difference at the moment.
So instead of:
set(SYSREPO_VERSION ${SYSREPO_MAJOR_VERSION}.${SYSREPO_MINOR_VERSION}.${SYSREPO_MICRO_VERSION}) set(SYSREPO_SOVERSION ${SYSREPO_MAJOR_VERSION}.${SYSREPO_MINOR_VERSION})
we would have:
set(SYSREPO_VERSION ${SYSREPO_MAJOR_VERSION}.${SYSREPO_MINOR_VERSION}.${SYSREPO_MICRO_VERSION}) set(SYSREPO_SOVERSION ${SYSREPO_MAJOR_VERSION})",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,826,2017-04-28T10:10:09Z,2017-04-28T11:03:47Z,2017-04-28T11:10:55Z,MERGED,True,1,1,1,https://github.com/michalvasko,BUGFIX print libyang error as an error,1,[],https://github.com/sysrepo/sysrepo/pull/826,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/826,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,827,2017-04-28T15:02:41Z,2017-05-02T07:11:02Z,2020-01-15T07:49:36Z,MERGED,True,25,24,5,https://github.com/mislavn,Cmake test,3,[],https://github.com/sysrepo/sysrepo/pull/827,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/827,"This pull request fixes failed build in case CMocka is not installed and language bindings are enabled.
The build fails on the language bindings if CMocka is not installed because they try to install yang models in a non existing sysrepo testing datastore, which is created by the C unit tests.","This pull request fixes failed build in case CMocka is not installed and language bindings are enabled.
The build fails on the language bindings if CMocka is not installed because they try to install yang models in a non existing sysrepo testing datastore, which is created by the C unit tests.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,827,2017-04-28T15:02:41Z,2017-05-02T07:11:02Z,2020-01-15T07:49:36Z,MERGED,True,25,24,5,https://github.com/mislavn,Cmake test,3,[],https://github.com/sysrepo/sysrepo/pull/827,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/827#issuecomment-298029997,"This pull request fixes failed build in case CMocka is not installed and language bindings are enabled.
The build fails on the language bindings if CMocka is not installed because they try to install yang models in a non existing sysrepo testing datastore, which is created by the C unit tests.","Codecov Report

❗ No coverage uploaded for pull request base (devel@b01b73a). Click here to learn what that means.
The diff coverage is n/a.

@@           Coverage Diff            @@
##             devel     #827   +/-   ##
========================================
  Coverage         ?   86.45%           
========================================
  Files            ?       31           
  Lines            ?    24300           
  Branches         ?     4295           
========================================
  Hits             ?    21007           
  Misses           ?     3293           
  Partials         ?        0",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,831,2017-05-02T08:26:18Z,2017-05-02T10:07:48Z,2020-01-15T07:49:35Z,MERGED,True,3,3,3,https://github.com/mislavn,BUGFIX for cmake swig test repository check,1,[],https://github.com/sysrepo/sysrepo/pull/831,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/831,This is a bug fix for the issue #828 .,This is a bug fix for the issue #828 .,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,831,2017-05-02T08:26:18Z,2017-05-02T10:07:48Z,2020-01-15T07:49:35Z,MERGED,True,3,3,3,https://github.com/mislavn,BUGFIX for cmake swig test repository check,1,[],https://github.com/sysrepo/sysrepo/pull/831,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/831#issuecomment-298558488,This is a bug fix for the issue #828 .,"Codecov Report

Merging #831 into devel will increase coverage by <.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #831      +/-   ##
==========================================
+ Coverage   86.46%   86.46%   +<.01%     
==========================================
  Files          31       31              
  Lines       24300    24301       +1     
  Branches     4295     4295              
==========================================
+ Hits        21009    21011       +2     
+ Misses       3291     3290       -1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,831,2017-05-02T08:26:18Z,2017-05-02T10:07:48Z,2020-01-15T07:49:35Z,MERGED,True,3,3,3,https://github.com/mislavn,BUGFIX for cmake swig test repository check,1,[],https://github.com/sysrepo/sysrepo/pull/831,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/831#issuecomment-298571591,This is a bug fix for the issue #828 .,"I can confirm that this fixes the linked bug. Can you perhaps link to it from the commit message? That way, one doesn't have to access github comments (which are essentially opaque to git) to find the reason for this change.

Done.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,832,2017-05-03T08:19:50Z,2017-05-03T09:15:13Z,2017-05-12T11:14:39Z,CLOSED,False,9,2,4,https://github.com/rkrejci,Sonames,3,[],https://github.com/sysrepo/sysrepo/pull/832,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/832,Add SONAME value into libraries and start versioning following the project policy,Add SONAME value into libraries and start versioning following the project policy,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,832,2017-05-03T08:19:50Z,2017-05-03T09:15:13Z,2017-05-12T11:14:39Z,CLOSED,False,9,2,4,https://github.com/rkrejci,Sonames,3,[],https://github.com/sysrepo/sysrepo/pull/832,https://github.com/rkrejci,2,https://github.com/sysrepo/sysrepo/pull/832#issuecomment-298860445,Add SONAME value into libraries and start versioning following the project policy,replaced by #833,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,833,2017-05-03T09:14:47Z,2017-05-03T12:19:44Z,2017-05-12T11:13:54Z,MERGED,True,230,5,16,https://github.com/rkrejci,Version check,7,[],https://github.com/sysrepo/sysrepo/pull/833,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/833,"add SONAME to libraries and bump to version 0.6.0 following the versioning policy
check version compatibility when client connects to the sysrepod
add missing dependency in libSysrepo-cpp build","add SONAME to libraries and bump to version 0.6.0 following the versioning policy
check version compatibility when client connects to the sysrepod
add missing dependency in libSysrepo-cpp build",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,833,2017-05-03T09:14:47Z,2017-05-03T12:19:44Z,2017-05-12T11:13:54Z,MERGED,True,230,5,16,https://github.com/rkrejci,Version check,7,[],https://github.com/sysrepo/sysrepo/pull/833,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/833#issuecomment-298863399,"add SONAME to libraries and bump to version 0.6.0 following the versioning policy
check version compatibility when client connects to the sysrepod
add missing dependency in libSysrepo-cpp build","Codecov Report

Merging #833 into devel will decrease coverage by 0.01%.
The diff coverage is 71.88%.

@@            Coverage Diff             @@
##            devel     #833      +/-   ##
==========================================
- Coverage   86.48%   86.47%   -0.01%     
==========================================
  Files          31       31              
  Lines       24323    24418      +95     
  Branches     4299     4315      +16     
==========================================
+ Hits        21034    21114      +80     
- Misses       3289     3304      +15",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,833,2017-05-03T09:14:47Z,2017-05-03T12:19:44Z,2017-05-12T11:13:54Z,MERGED,True,230,5,16,https://github.com/rkrejci,Version check,7,[],https://github.com/sysrepo/sysrepo/pull/833,https://github.com/rkrejci,3,https://github.com/sysrepo/sysrepo/pull/833#issuecomment-298873849,"add SONAME to libraries and bump to version 0.6.0 following the versioning policy
check version compatibility when client connects to the sysrepod
add missing dependency in libSysrepo-cpp build","It is because POST_BUILD command connected with Sysrepo-cpp target uses sysrepoctl and it happened that sysrepoctl was not yet built and it all failed, like in this Travis build. As I now look at libsysrepoLua target, yes, the dependency is supposed to be added there too, I'm going to add it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,834,2017-05-03T10:54:07Z,2017-05-03T12:58:21Z,2020-01-15T07:49:48Z,MERGED,True,209,124,11,https://github.com/mislavn,UPDATE update dockerfiles,1,[],https://github.com/sysrepo/sysrepo/pull/834,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/834,Update the dockerfiles in preparation for the sysrepo release. The dockerfiles are used only for examples on how to build Sysrepo/Netopeer2 on various Linux platforms.,Update the dockerfiles in preparation for the sysrepo release. The dockerfiles are used only for examples on how to build Sysrepo/Netopeer2 on various Linux platforms.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,834,2017-05-03T10:54:07Z,2017-05-03T12:58:21Z,2020-01-15T07:49:48Z,MERGED,True,209,124,11,https://github.com/mislavn,UPDATE update dockerfiles,1,[],https://github.com/sysrepo/sysrepo/pull/834,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/834#issuecomment-298893706,Update the dockerfiles in preparation for the sysrepo release. The dockerfiles are used only for examples on how to build Sysrepo/Netopeer2 on various Linux platforms.,"Codecov Report

Merging #834 into devel will decrease coverage by 0.03%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #834      +/-   ##
==========================================
- Coverage   86.46%   86.43%   -0.03%     
==========================================
  Files          31       31              
  Lines       24417    24419       +2     
  Branches     4315     4315              
==========================================
- Hits        21112    21106       -6     
- Misses       3305     3313       +8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,835,2017-05-03T13:32:14Z,2017-05-03T13:56:24Z,2017-05-03T13:57:11Z,MERGED,True,41540,5855,234,https://github.com/mislavn,Sysrepo 0.6.0 release,765,[],https://github.com/sysrepo/sysrepo/pull/835,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/835,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,835,2017-05-03T13:32:14Z,2017-05-03T13:56:24Z,2017-05-03T13:57:11Z,MERGED,True,41540,5855,234,https://github.com/mislavn,Sysrepo 0.6.0 release,765,[],https://github.com/sysrepo/sysrepo/pull/835,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/835#issuecomment-298911530,,"Codecov Report

Merging #835 into master will increase coverage by 0.74%.
The diff coverage is 86.58%.

@@            Coverage Diff             @@
##           master     #835      +/-   ##
==========================================
+ Coverage   85.73%   86.47%   +0.74%     
==========================================
  Files          29       31       +2     
  Lines       19667    24418    +4751     
  Branches     3408     4315     +907     
==========================================
+ Hits        16861    21114    +4253     
- Misses       2806     3304     +498",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,836,2017-05-04T07:45:52Z,2017-05-04T08:17:57Z,2017-05-05T12:46:41Z,MERGED,True,14,6,1,https://github.com/michalvasko,BUGFIX do not validate empty datastores,1,[],https://github.com/sysrepo/sysrepo/pull/836,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/836,"After installing a module its datastore is empty
and may not be valid. In that case we need to
allow import to set a new valid datastore content.
Fixes CESNET/libyang#316","After installing a module its datastore is empty
and may not be valid. In that case we need to
allow import to set a new valid datastore content.
Fixes CESNET/libyang#316",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,836,2017-05-04T07:45:52Z,2017-05-04T08:17:57Z,2017-05-05T12:46:41Z,MERGED,True,14,6,1,https://github.com/michalvasko,BUGFIX do not validate empty datastores,1,[],https://github.com/sysrepo/sysrepo/pull/836,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/836#issuecomment-299120355,"After installing a module its datastore is empty
and may not be valid. In that case we need to
allow import to set a new valid datastore content.
Fixes CESNET/libyang#316","Codecov Report

Merging #836 into devel will decrease coverage by 0.04%.
The diff coverage is 66.67%.

@@            Coverage Diff             @@
##            devel     #836      +/-   ##
==========================================
- Coverage   86.47%   86.43%   -0.04%     
==========================================
  Files          31       31              
  Lines       24418    24422       +4     
  Branches     4315     4317       +2     
==========================================
- Hits        21114    21107       -7     
- Misses       3304     3315      +11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,838,2017-05-04T12:43:04Z,2017-05-04T13:00:36Z,2017-05-12T11:12:30Z,MERGED,True,112,57,4,https://github.com/rkrejci,Fix verifying version on sysrepo socket connections,1,[],https://github.com/sysrepo/sysrepo/pull/838,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/838,"Remove optimization of not sending version-verify request on local
(intra-process) communication. It is not able to get this information
surely on both the communication sides so the version-verify request
is now sent/expected whenever a new connection is created.
Fixes #836","Remove optimization of not sending version-verify request on local
(intra-process) communication. It is not able to get this information
surely on both the communication sides so the version-verify request
is now sent/expected whenever a new connection is created.
Fixes #836",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,838,2017-05-04T12:43:04Z,2017-05-04T13:00:36Z,2017-05-12T11:12:30Z,MERGED,True,112,57,4,https://github.com/rkrejci,Fix verifying version on sysrepo socket connections,1,[],https://github.com/sysrepo/sysrepo/pull/838,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/838#issuecomment-299177902,"Remove optimization of not sending version-verify request on local
(intra-process) communication. It is not able to get this information
surely on both the communication sides so the version-verify request
is now sent/expected whenever a new connection is created.
Fixes #836","Codecov Report

Merging #838 into master will increase coverage by <.01%.
The diff coverage is 70.59%.

@@            Coverage Diff             @@
##           master     #838      +/-   ##
==========================================
+ Coverage   86.41%   86.41%   +<.01%     
==========================================
  Files          31       31              
  Lines       24418    24419       +1     
  Branches     4315     4315              
==========================================
+ Hits        21100    21101       +1     
  Misses       3318     3318",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,838,2017-05-04T12:43:04Z,2017-05-04T13:00:36Z,2017-05-12T11:12:30Z,MERGED,True,112,57,4,https://github.com/rkrejci,Fix verifying version on sysrepo socket connections,1,[],https://github.com/sysrepo/sysrepo/pull/838,https://github.com/fabioantonini,3,https://github.com/sysrepo/sysrepo/pull/838#issuecomment-299184343,"Remove optimization of not sending version-verify request on local
(intra-process) communication. It is not able to get this information
surely on both the communication sides so the version-verify request
is now sent/expected whenever a new connection is created.
Fixes #836",It worked fine. Thanks,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,846,2017-05-11T07:30:41Z,2017-05-11T13:00:26Z,2017-05-11T13:05:56Z,MERGED,True,18,13,2,https://github.com/michalvasko,sysrepocfg not-strict flag,2,[],https://github.com/sysrepo/sysrepo/pull/846,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/846,"Description
In sysrepocfg import operation the user in majority of the cases will use a file with only the data they want to import - silently skipping unknown elements can hide a problem. In case it is intentional, it can be specified by a flag.","Description
In sysrepocfg import operation the user in majority of the cases will use a file with only the data they want to import - silently skipping unknown elements can hide a problem. In case it is intentional, it can be specified by a flag.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,846,2017-05-11T07:30:41Z,2017-05-11T13:00:26Z,2017-05-11T13:05:56Z,MERGED,True,18,13,2,https://github.com/michalvasko,sysrepocfg not-strict flag,2,[],https://github.com/sysrepo/sysrepo/pull/846,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/846#issuecomment-300709839,"Description
In sysrepocfg import operation the user in majority of the cases will use a file with only the data they want to import - silently skipping unknown elements can hide a problem. In case it is intentional, it can be specified by a flag.","Codecov Report

Merging #846 into devel will increase coverage by 0.03%.
The diff coverage is 76.92%.

@@            Coverage Diff             @@
##            devel     #846      +/-   ##
==========================================
+ Coverage   86.42%   86.45%   +0.03%     
==========================================
  Files          31       31              
  Lines       24424    24427       +3     
  Branches     4317     4317              
==========================================
+ Hits        21108    21118      +10     
+ Misses       3316     3309       -7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,846,2017-05-11T07:30:41Z,2017-05-11T13:00:26Z,2017-05-11T13:05:56Z,MERGED,True,18,13,2,https://github.com/michalvasko,sysrepocfg not-strict flag,2,[],https://github.com/sysrepo/sysrepo/pull/846,https://github.com/rkrejci,3,https://github.com/sysrepo/sysrepo/pull/846#issuecomment-300781596,"Description
In sysrepocfg import operation the user in majority of the cases will use a file with only the data they want to import - silently skipping unknown elements can hide a problem. In case it is intentional, it can be specified by a flag.",Before the merge I have moved version on devel from 0.6.0 to 0.6.1 to mark the change in tool's functionality.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,849,2017-05-12T11:38:17Z,2017-05-12T12:36:43Z,2020-01-15T07:49:41Z,MERGED,True,226,239,6,https://github.com/mislavn,update official dockerfiles,1,[],https://github.com/sysrepo/sysrepo/pull/849,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/849,"Fixes #847
Changes:

formatted dockerfiles to consistent style
updated dockerfiles to use keystored
change default port to 830
put myself as the maintainer
devel tag uses the devel branch and Debug mode

Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Update the official dockerfiles.
Test case
Locally build and tested the dockerfiles with the code examples in the README file.
Closure
Closes #847","Fixes #847
Changes:

formatted dockerfiles to consistent style
updated dockerfiles to use keystored
change default port to 830
put myself as the maintainer
devel tag uses the devel branch and Debug mode

Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Update the official dockerfiles.
Test case
Locally build and tested the dockerfiles with the code examples in the README file.
Closure
Closes #847",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,849,2017-05-12T11:38:17Z,2017-05-12T12:36:43Z,2020-01-15T07:49:41Z,MERGED,True,226,239,6,https://github.com/mislavn,update official dockerfiles,1,[],https://github.com/sysrepo/sysrepo/pull/849,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/849#issuecomment-301064774,"Fixes #847
Changes:

formatted dockerfiles to consistent style
updated dockerfiles to use keystored
change default port to 830
put myself as the maintainer
devel tag uses the devel branch and Debug mode

Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Update the official dockerfiles.
Test case
Locally build and tested the dockerfiles with the code examples in the README file.
Closure
Closes #847","Codecov Report

Merging #849 into devel will increase coverage by <.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #849      +/-   ##
==========================================
+ Coverage   86.42%   86.42%   +<.01%     
==========================================
  Files          31       31              
  Lines       24427    24427              
  Branches     4317     4317              
==========================================
+ Hits        21110    21111       +1     
+ Misses       3317     3316       -1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,852,2017-05-17T06:38:44Z,2017-05-17T13:28:19Z,2017-05-17T13:46:39Z,MERGED,True,211,455,5,https://github.com/michalvasko,Module dependencies fix,9,[],https://github.com/sysrepo/sysrepo/pull/852,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/852,"Description
In summary, module data dependencies had some bugs and did not work for more complex cases, so they were refactored.
Closure
Fixes #830","Description
In summary, module data dependencies had some bugs and did not work for more complex cases, so they were refactored.
Closure
Fixes #830",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,852,2017-05-17T06:38:44Z,2017-05-17T13:28:19Z,2017-05-17T13:46:39Z,MERGED,True,211,455,5,https://github.com/michalvasko,Module dependencies fix,9,[],https://github.com/sysrepo/sysrepo/pull/852,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/852#issuecomment-302017269,"Description
In summary, module data dependencies had some bugs and did not work for more complex cases, so they were refactored.
Closure
Fixes #830","Codecov Report

Merging #852 into devel will decrease coverage by 0.04%.
The diff coverage is 84.67%.

@@            Coverage Diff             @@
##            devel     #852      +/-   ##
==========================================
- Coverage   86.47%   86.43%   -0.04%     
==========================================
  Files          31       31              
  Lines       24427    24354      -73     
  Branches     4317     4291      -26     
==========================================
- Hits        21121    21049      -72     
+ Misses       3306     3305       -1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,853,2017-05-17T13:51:26Z,2017-05-17T14:07:22Z,2017-05-17T14:07:22Z,MERGED,True,9,8,1,https://github.com/rkrejci,sysrepoctl: fix TOCTOU issue,1,[],https://github.com/sysrepo/sysrepo/pull/853,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/853,"Description
Fixes TOCTOU issue in sysrepoctl - instead of combining access() and mkdir() use only mkdir and check the errno value to ignore EEXIST failure.","Description
Fixes TOCTOU issue in sysrepoctl - instead of combining access() and mkdir() use only mkdir and check the errno value to ignore EEXIST failure.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,853,2017-05-17T13:51:26Z,2017-05-17T14:07:22Z,2017-05-17T14:07:22Z,MERGED,True,9,8,1,https://github.com/rkrejci,sysrepoctl: fix TOCTOU issue,1,[],https://github.com/sysrepo/sysrepo/pull/853,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/853#issuecomment-302101206,"Description
Fixes TOCTOU issue in sysrepoctl - instead of combining access() and mkdir() use only mkdir and check the errno value to ignore EEXIST failure.","Codecov Report

Merging #853 into devel will decrease coverage by 0.07%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #853      +/-   ##
==========================================
- Coverage   86.45%   86.38%   -0.07%     
==========================================
  Files          31       31              
  Lines       24354    24355       +1     
  Branches     4291     4291              
==========================================
- Hits        21054    21037      -17     
- Misses       3300     3318      +18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,854,2017-05-18T10:32:10Z,2017-05-18T11:32:23Z,2017-05-18T11:32:23Z,MERGED,True,20,25,6,https://github.com/rkrejci,Bugfixes,8,[],https://github.com/sysrepo/sysrepo/pull/854,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/854,"Description
Several bugfixes to the issues reported by coverity.","Description
Several bugfixes to the issues reported by coverity.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,854,2017-05-18T10:32:10Z,2017-05-18T11:32:23Z,2017-05-18T11:32:23Z,MERGED,True,20,25,6,https://github.com/rkrejci,Bugfixes,8,[],https://github.com/sysrepo/sysrepo/pull/854,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/854#issuecomment-302370201,"Description
Several bugfixes to the issues reported by coverity.","Codecov Report

Merging #854 into devel will increase coverage by 0.01%.
The diff coverage is 84.62%.

@@            Coverage Diff             @@
##            devel     #854      +/-   ##
==========================================
+ Coverage   86.43%   86.44%   +0.01%     
==========================================
  Files          31       31              
  Lines       24355    24353       -2     
  Branches     4291     4292       +1     
==========================================
+ Hits        21049    21050       +1     
+ Misses       3306     3303       -3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,855,2017-05-18T12:03:55Z,2017-05-18T12:31:30Z,2017-05-18T12:31:34Z,MERGED,True,5,4,1,https://github.com/michalvasko,Data deps fix,2,[],https://github.com/sysrepo/sysrepo/pull/855,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/855,"Description
Issue fixed when invalid XPath expression caused a schema to fail to load (which no RFC requires even though seems natural) and a failed assert fixed for collecting dependencies of uses within an augment.","Description
Issue fixed when invalid XPath expression caused a schema to fail to load (which no RFC requires even though seems natural) and a failed assert fixed for collecting dependencies of uses within an augment.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,855,2017-05-18T12:03:55Z,2017-05-18T12:31:30Z,2017-05-18T12:31:34Z,MERGED,True,5,4,1,https://github.com/michalvasko,Data deps fix,2,[],https://github.com/sysrepo/sysrepo/pull/855,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/855#issuecomment-302387475,"Description
Issue fixed when invalid XPath expression caused a schema to fail to load (which no RFC requires even though seems natural) and a failed assert fixed for collecting dependencies of uses within an augment.","Codecov Report

Merging #855 into devel will decrease coverage by 0.01%.
The diff coverage is 75%.

@@            Coverage Diff            @@
##           devel     #855      +/-   ##
=========================================
- Coverage   86.4%   86.39%   -0.01%     
=========================================
  Files         31       31              
  Lines      24353    24354       +1     
  Branches    4292     4292              
=========================================
- Hits       21041    21040       -1     
- Misses      3312     3314       +2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,856,2017-05-19T06:56:04Z,2017-05-19T08:04:51Z,2017-05-19T08:09:23Z,MERGED,True,2,1,1,https://github.com/michalvasko,BUGFIX use correct revision when searching for module info,1,[],https://github.com/sysrepo/sysrepo/pull/856,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/856,"Description
When searching for modules, empty string ("""") is always an incorrect value, either specific revision or NULL must be used instead.
Closure
Fixes #830
Fixes CESNET/libyang#321","Description
When searching for modules, empty string ("""") is always an incorrect value, either specific revision or NULL must be used instead.
Closure
Fixes #830
Fixes CESNET/libyang#321",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,856,2017-05-19T06:56:04Z,2017-05-19T08:04:51Z,2017-05-19T08:09:23Z,MERGED,True,2,1,1,https://github.com/michalvasko,BUGFIX use correct revision when searching for module info,1,[],https://github.com/sysrepo/sysrepo/pull/856,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/856#issuecomment-302627402,"Description
When searching for modules, empty string ("""") is always an incorrect value, either specific revision or NULL must be used instead.
Closure
Fixes #830
Fixes CESNET/libyang#321","Codecov Report

Merging #856 into devel will decrease coverage by 0.02%.
The diff coverage is 100%.

@@            Coverage Diff            @@
##           devel     #856      +/-   ##
=========================================
- Coverage   86.4%   86.38%   -0.02%     
=========================================
  Files         31       31              
  Lines      24354    24355       +1     
  Branches    4292     4292              
=========================================
- Hits       21042    21038       -4     
- Misses      3312     3317       +5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,857,2017-05-19T16:47:00Z,2017-05-24T08:42:09Z,2017-08-23T09:28:10Z,MERGED,True,14,8,2,https://github.com/jktjkt,Overriding the debug/release build detection,1,[],https://github.com/sysrepo/sysrepo/pull/857,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/857,"The old system piggy-backed on the CMAKE_BUILD_TYPE variable in order to guess whether this is a systemwide installation or a developer's build. I am aware of this (I modified it before to support ReleaseWithDebInfo), yet I lost some time re-flashing a custom board with a firmware that has a broken installation due to a use of -DCMAKE_BUILD_TYPE=Debug.
That is a valid use case, CMake's build type is the way of configuring whether to use debug symbols or not. The choice of debug symbols (and asserts, for that matter) is orthogonal to the choice of where to install the repository data, and where to create PID files.
This patch at least adds an override which makes it possible to force a production installation even when building with the Debug CMake build type. I'm not changing the default even though I think that we might be slowly moving to a point where it makes more sense to pester the developers with a custom CMake option rather than letting the packagers implement that.","The old system piggy-backed on the CMAKE_BUILD_TYPE variable in order to guess whether this is a systemwide installation or a developer's build. I am aware of this (I modified it before to support ReleaseWithDebInfo), yet I lost some time re-flashing a custom board with a firmware that has a broken installation due to a use of -DCMAKE_BUILD_TYPE=Debug.
That is a valid use case, CMake's build type is the way of configuring whether to use debug symbols or not. The choice of debug symbols (and asserts, for that matter) is orthogonal to the choice of where to install the repository data, and where to create PID files.
This patch at least adds an override which makes it possible to force a production installation even when building with the Debug CMake build type. I'm not changing the default even though I think that we might be slowly moving to a point where it makes more sense to pester the developers with a custom CMake option rather than letting the packagers implement that.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,857,2017-05-19T16:47:00Z,2017-05-24T08:42:09Z,2017-08-23T09:28:10Z,MERGED,True,14,8,2,https://github.com/jktjkt,Overriding the debug/release build detection,1,[],https://github.com/sysrepo/sysrepo/pull/857,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/857#issuecomment-302758224,"The old system piggy-backed on the CMAKE_BUILD_TYPE variable in order to guess whether this is a systemwide installation or a developer's build. I am aware of this (I modified it before to support ReleaseWithDebInfo), yet I lost some time re-flashing a custom board with a firmware that has a broken installation due to a use of -DCMAKE_BUILD_TYPE=Debug.
That is a valid use case, CMake's build type is the way of configuring whether to use debug symbols or not. The choice of debug symbols (and asserts, for that matter) is orthogonal to the choice of where to install the repository data, and where to create PID files.
This patch at least adds an override which makes it possible to force a production installation even when building with the Debug CMake build type. I'm not changing the default even though I think that we might be slowly moving to a point where it makes more sense to pester the developers with a custom CMake option rather than letting the packagers implement that.","Codecov Report

Merging #857 into devel will increase coverage by <.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #857      +/-   ##
==========================================
+ Coverage   86.39%   86.39%   +<.01%     
==========================================
  Files          31       31              
  Lines       24360    24360              
  Branches     4294     4294              
==========================================
+ Hits        21044    21045       +1     
+ Misses       3316     3315       -1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,857,2017-05-19T16:47:00Z,2017-05-24T08:42:09Z,2017-08-23T09:28:10Z,MERGED,True,14,8,2,https://github.com/jktjkt,Overriding the debug/release build detection,1,[],https://github.com/sysrepo/sysrepo/pull/857,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/857#issuecomment-303646661,"The old system piggy-backed on the CMAKE_BUILD_TYPE variable in order to guess whether this is a systemwide installation or a developer's build. I am aware of this (I modified it before to support ReleaseWithDebInfo), yet I lost some time re-flashing a custom board with a firmware that has a broken installation due to a use of -DCMAKE_BUILD_TYPE=Debug.
That is a valid use case, CMake's build type is the way of configuring whether to use debug symbols or not. The choice of debug symbols (and asserts, for that matter) is orthogonal to the choice of where to install the repository data, and where to create PID files.
This patch at least adds an override which makes it possible to force a production installation even when building with the Debug CMake build type. I'm not changing the default even though I think that we might be slowly moving to a point where it makes more sense to pester the developers with a custom CMake option rather than letting the packagers implement that.","Done, 6a80df2.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,861,2017-05-23T14:16:09Z,2017-05-24T07:28:24Z,2017-05-24T10:33:29Z,MERGED,True,13,4,2,https://github.com/michalvasko,State data prefixes and latest-revision flag fixes,2,[],https://github.com/sysrepo/sysrepo/pull/861,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/861,"Description
When creating XPath identifying state data nodes, it was not checked whether children of subscription nodes are from a different module and should therefore have an explicit prefix. Also, hopefully last instances of obsolete latest_revision flag use.
Closure
Fixes #860","Description
When creating XPath identifying state data nodes, it was not checked whether children of subscription nodes are from a different module and should therefore have an explicit prefix. Also, hopefully last instances of obsolete latest_revision flag use.
Closure
Fixes #860",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,861,2017-05-23T14:16:09Z,2017-05-24T07:28:24Z,2017-05-24T10:33:29Z,MERGED,True,13,4,2,https://github.com/michalvasko,State data prefixes and latest-revision flag fixes,2,[],https://github.com/sysrepo/sysrepo/pull/861,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/861#issuecomment-303421045,"Description
When creating XPath identifying state data nodes, it was not checked whether children of subscription nodes are from a different module and should therefore have an explicit prefix. Also, hopefully last instances of obsolete latest_revision flag use.
Closure
Fixes #860","Codecov Report

Merging #861 into devel will increase coverage by 0.03%.
The diff coverage is 75%.

@@            Coverage Diff             @@
##            devel     #861      +/-   ##
==========================================
+ Coverage   86.39%   86.42%   +0.03%     
==========================================
  Files          31       31              
  Lines       24355    24359       +4     
  Branches     4292     4294       +2     
==========================================
+ Hits        21040    21050      +10     
+ Misses       3315     3309       -6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,863,2017-05-24T13:52:02Z,2017-05-24T14:35:32Z,2017-05-25T06:30:05Z,MERGED,True,6,51,1,https://github.com/michalvasko,Redundant bits copying removed,1,[],https://github.com/sysrepo/sysrepo/pull/863,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/863,"Description
If bits type was in a typedef in a union, it failed to be properly found and no bits were printed. It is useless to search for bits anyway.
Closure
Refs #859","Description
If bits type was in a typedef in a union, it failed to be properly found and no bits were printed. It is useless to search for bits anyway.
Closure
Refs #859",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,863,2017-05-24T13:52:02Z,2017-05-24T14:35:32Z,2017-05-25T06:30:05Z,MERGED,True,6,51,1,https://github.com/michalvasko,Redundant bits copying removed,1,[],https://github.com/sysrepo/sysrepo/pull/863,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/863#issuecomment-303736455,"Description
If bits type was in a typedef in a union, it failed to be properly found and no bits were printed. It is useless to search for bits anyway.
Closure
Refs #859","Codecov Report

Merging #863 into devel will increase coverage by 0.03%.
The diff coverage is 60%.

@@            Coverage Diff             @@
##            devel     #863      +/-   ##
==========================================
+ Coverage   86.39%   86.42%   +0.03%     
==========================================
  Files          31       31              
  Lines       24359    24334      -25     
  Branches     4294     4288       -6     
==========================================
- Hits        21043    21029      -14     
+ Misses       3316     3305      -11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,864,2017-05-25T09:57:34Z,2017-05-25T10:12:39Z,2020-01-15T07:49:36Z,MERGED,True,41,68,7,https://github.com/antonio-paunovic,Coverity cid169520,13,[],https://github.com/sysrepo/sysrepo/pull/864,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/864,Fix cpp bindings uninitialized variable.,Fix cpp bindings uninitialized variable.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,865,2017-05-25T10:56:12Z,2017-05-25T11:22:57Z,2020-01-15T07:49:36Z,MERGED,True,1,0,1,https://github.com/antonio-paunovic,Fix coverity 'Uninitialized pointer field' error.,1,[],https://github.com/sysrepo/sysrepo/pull/865,https://github.com/antonio-paunovic,1,https://github.com/sysrepo/sysrepo/pull/865,"Description
Solve missing initialization coverity-scan error for c++ SWIG bindings.","Description
Solve missing initialization coverity-scan error for c++ SWIG bindings.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,865,2017-05-25T10:56:12Z,2017-05-25T11:22:57Z,2020-01-15T07:49:36Z,MERGED,True,1,0,1,https://github.com/antonio-paunovic,Fix coverity 'Uninitialized pointer field' error.,1,[],https://github.com/sysrepo/sysrepo/pull/865,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/865#issuecomment-303985332,"Description
Solve missing initialization coverity-scan error for c++ SWIG bindings.","Codecov Report

Merging #865 into devel will increase coverage by 0.02%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #865      +/-   ##
==========================================
+ Coverage   86.37%   86.39%   +0.02%     
==========================================
  Files          31       31              
  Lines       24334    24334              
  Branches     4288     4288              
==========================================
+ Hits        21018    21023       +5     
+ Misses       3316     3311       -5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,867,2017-05-25T11:20:26Z,2017-05-26T07:18:47Z,2017-05-26T07:46:30Z,MERGED,True,6,12,1,https://github.com/michalvasko,BUGFIX repeated typedef,2,[],https://github.com/sysrepo/sysrepo/pull/867,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/867,"Description
Probably a forgotten redefinition of a type removed.
Closure
Fixes #866","Description
Probably a forgotten redefinition of a type removed.
Closure
Fixes #866",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,867,2017-05-25T11:20:26Z,2017-05-26T07:18:47Z,2017-05-26T07:46:30Z,MERGED,True,6,12,1,https://github.com/michalvasko,BUGFIX repeated typedef,2,[],https://github.com/sysrepo/sysrepo/pull/867,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/867#issuecomment-303991802,"Description
Probably a forgotten redefinition of a type removed.
Closure
Fixes #866","Codecov Report

Merging #867 into devel will decrease coverage by <.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #867      +/-   ##
==========================================
- Coverage   86.37%   86.37%   -<.01%     
==========================================
  Files          31       31              
  Lines       24334    24333       -1     
  Branches     4288     4288              
==========================================
- Hits        21018    21017       -1     
  Misses       3316     3316",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,868,2017-05-26T07:44:42Z,2017-05-26T08:46:39Z,2017-05-29T07:15:55Z,MERGED,True,6,12,1,https://github.com/michalvasko,BUGFIX repeated typedef removed,1,[],https://github.com/sysrepo/sysrepo/pull/868,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/868,"Description
There was a type defined twice in the main public include header.
Closure
Fixes #866","Description
There was a type defined twice in the main public include header.
Closure
Fixes #866",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,868,2017-05-26T07:44:42Z,2017-05-26T08:46:39Z,2017-05-29T07:15:55Z,MERGED,True,6,12,1,https://github.com/michalvasko,BUGFIX repeated typedef removed,1,[],https://github.com/sysrepo/sysrepo/pull/868,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/868#issuecomment-304217957,"Description
There was a type defined twice in the main public include header.
Closure
Fixes #866","Codecov Report

Merging #868 into master will decrease coverage by 0.05%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #868      +/-   ##
==========================================
- Coverage   86.49%   86.45%   -0.05%     
==========================================
  Files          31       31              
  Lines       24419    24419              
  Branches     4315     4315              
==========================================
- Hits        21121    21110      -11     
- Misses       3298     3309      +11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,870,2017-05-29T16:17:02Z,2017-05-30T09:41:09Z,2017-05-30T09:41:09Z,MERGED,True,1,0,1,https://github.com/ykoehler,close #869 Added include of time.h for time_t definition.,1,[],https://github.com/sysrepo/sysrepo/pull/870,https://github.com/ykoehler,1,https://github.com/sysrepo/sysrepo/pull/870,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,870,2017-05-29T16:17:02Z,2017-05-30T09:41:09Z,2017-05-30T09:41:09Z,MERGED,True,1,0,1,https://github.com/ykoehler,close #869 Added include of time.h for time_t definition.,1,[],https://github.com/sysrepo/sysrepo/pull/870,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/870#issuecomment-304697337,,"Codecov Report

Merging #870 into master will decrease coverage by 0.03%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #870      +/-   ##
==========================================
- Coverage   86.47%   86.43%   -0.03%     
==========================================
  Files          31       31              
  Lines       24419    24419              
  Branches     4315     4315              
==========================================
- Hits        21114    21106       -8     
- Misses       3305     3313       +8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,871,2017-05-29T16:24:26Z,2018-06-29T12:25:13Z,2018-06-29T12:25:13Z,CLOSED,False,5,1,1,https://github.com/ykoehler,Honor the option CALL_TARGET_BINS_DIRECTLY,2,[],https://github.com/sysrepo/sysrepo/pull/871,https://github.com/ykoehler,1,https://github.com/sysrepo/sysrepo/pull/871,"In yocto we compile the project for a different architecture, as such executing any TARGET binary on the HOST is bad since it may not be CPU compatible. An option in the root CMakeList was created to call those binaries or not at install time based on the option value, but the examples/CMakeList.txt was not honoring it.","In yocto we compile the project for a different architecture, as such executing any TARGET binary on the HOST is bad since it may not be CPU compatible. An option in the root CMakeList was created to call those binaries or not at install time based on the option value, but the examples/CMakeList.txt was not honoring it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,871,2017-05-29T16:24:26Z,2018-06-29T12:25:13Z,2018-06-29T12:25:13Z,CLOSED,False,5,1,1,https://github.com/ykoehler,Honor the option CALL_TARGET_BINS_DIRECTLY,2,[],https://github.com/sysrepo/sysrepo/pull/871,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/871#issuecomment-304699225,"In yocto we compile the project for a different architecture, as such executing any TARGET binary on the HOST is bad since it may not be CPU compatible. An option in the root CMakeList was created to call those binaries or not at install time based on the option value, but the examples/CMakeList.txt was not honoring it.","Codecov Report

Merging #871 into master will increase coverage by 0.55%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #871      +/-   ##
==========================================
+ Coverage   85.93%   86.48%   +0.55%     
==========================================
  Files          31       31              
  Lines       24731    24419     -312     
  Branches     4411     4315      -96     
==========================================
- Hits        21251    21117     -134     
+ Misses       3480     3302     -178",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,871,2017-05-29T16:24:26Z,2018-06-29T12:25:13Z,2018-06-29T12:25:13Z,CLOSED,False,5,1,1,https://github.com/ykoehler,Honor the option CALL_TARGET_BINS_DIRECTLY,2,[],https://github.com/sysrepo/sysrepo/pull/871,https://github.com/ykoehler,3,https://github.com/sysrepo/sysrepo/pull/871#issuecomment-304908634,"In yocto we compile the project for a different architecture, as such executing any TARGET binary on the HOST is bad since it may not be CPU compatible. An option in the root CMakeList was created to call those binaries or not at install time based on the option value, but the examples/CMakeList.txt was not honoring it.","Wait before merging, I think this is broken, the install-yang.sh doesn't seems to contain the instructions for the examples.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,871,2017-05-29T16:24:26Z,2018-06-29T12:25:13Z,2018-06-29T12:25:13Z,CLOSED,False,5,1,1,https://github.com/ykoehler,Honor the option CALL_TARGET_BINS_DIRECTLY,2,[],https://github.com/sysrepo/sysrepo/pull/871,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/871#issuecomment-334185102,"In yocto we compile the project for a different architecture, as such executing any TARGET binary on the HOST is bad since it may not be CPU compatible. An option in the root CMakeList was created to call those binaries or not at install time based on the option value, but the examples/CMakeList.txt was not honoring it.","@ykoehler , I've added some options which make it possible to call host's binaries during build, #946 . It's been merged into devel earlier today.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,872,2017-05-30T08:23:17Z,2017-06-02T13:58:29Z,2017-06-12T07:27:42Z,CLOSED,False,101,107,2,https://github.com/michalvasko,Insert mod fix,3,[],https://github.com/sysrepo/sysrepo/pull/872,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/872,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Closure
Refs #839","Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Closure
Refs #839",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,874,2017-05-30T11:03:28Z,2017-05-30T13:59:00Z,2017-05-30T13:59:00Z,MERGED,True,3,2,2,https://github.com/rkrejci,BUGFIX handling default values in leaf-list,1,[],https://github.com/sysrepo/sysrepo/pull/874,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/874,Fixes #873,Fixes #873,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,874,2017-05-30T11:03:28Z,2017-05-30T13:59:00Z,2017-05-30T13:59:00Z,MERGED,True,3,2,2,https://github.com/rkrejci,BUGFIX handling default values in leaf-list,1,[],https://github.com/sysrepo/sysrepo/pull/874,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/874#issuecomment-304848078,Fixes #873,"Codecov Report

Merging #874 into devel will increase coverage by 0.07%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #874      +/-   ##
==========================================
+ Coverage   86.39%   86.46%   +0.07%     
==========================================
  Files          31       31              
  Lines       24334    24334              
  Branches     4288     4288              
==========================================
+ Hits        21021    21038      +17     
+ Misses       3313     3296      -17",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/875,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306434045,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","Codecov Report

Merging #875 into devel will decrease coverage by 0.05%.
The diff coverage is 70.67%.

@@            Coverage Diff             @@
##            devel     #875      +/-   ##
==========================================
- Coverage   86.37%   86.32%   -0.05%     
==========================================
  Files          31       31              
  Lines       24334    24320      -14     
  Branches     4288     4288              
==========================================
- Hits        21018    20994      -24     
- Misses       3316     3326      +10",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/fabioantonini,3,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306442749,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","HI Radek

I have just pulled the last changes from sysrepo (pull request #875) and
now sysrepod fails to start

# sysrepod -d -l4
[DBG] (sr_log_stderr:141) Setting log level for stderr logs to 4.
[DBG] (cm_init:1910) Connection Manager init started.
[DBG] (sr_cbuff_init:463) Initiating circular buffer for 10 elements.
[DBG] (sm_init:290) Session Manager initialized successfully, ctx=0x9e5138.
[DBG] (cm_init:1935) Connection Manager sm_init started.
[DBG] (cm_server_init:163) Initializing sysrepo server at
socket=/tmp/sysrepod.sock
[DBG] (cm_init:1944) Connection Manager cm_server_init started.
[DBG] (rp_init:3821) Request Processor init started.
[DBG] (sr_cbuff_init:463) Initiating circular buffer for 10 elements.
[DBG] (rp_init:3857) initializing Notification Processor
[DBG] (sr_cbuff_enqueue:522) Circular buffer enqueue to position=0,
current count=1.
[DBG] (np_setup_notif_store_cleanup_timer:710) Notification store
cleanup timer set up for 600 seconds.
[DBG] (np_init:803) Notification Processor initialized successfully.
[INF] (dm_init:1958) Initializing Data Manager,
schema_search_dir=/etc/configs/sysrepo/current/yang/,
data_search_dir=/etc/configs/sysrepo/current/data/
[INF] (nacm_init:827) Initializing NACM.
[DBG] (pm_load_data_tree:231) Persist data file
'/etc/configs/sysrepo/current/data/ietf-netconf-acm.persist' does not exist.
[DBG] (pm_load_data_tree:233) No persistent data for module
'ietf-netconf-acm' will be loaded.
[WRN] (dm_apply_persist_data_for_model:881) Persist file for module
ietf-netconf-acm does not exist.
*[ERR] (nacm_load_config:488) Unable to open the NACM startup datastore
('/etc/configs/sysrepo/current/data/ietf-netconf-acm.startup'): No such
file or directory.**
**[ERR] (dm_init:2023) Failed to initialize NACM context.**
**[ERR] (rp_init:3876) Data Manager initialization failed.*
[DBG] (np_cleanup:818) Notification Processor cleanup requested.
[DBG] (np_notification_store_cleanup:1866) Notification store cleanup
requested.
[DBG] (np_get_all_notification_files:597) Listing notification
directories in '/etc/configs/sysrepo/current/data/notifications/'.
[DBG] (np_get_all_notification_files:614) Listing notification directory
'ietf-netconf-notifications'.
[DBG] (np_get_notification_files:551) Listing notification data files
for 'ietf-netconf-notifications' modified from '1970-01-01 00:00' to
'1970-01-12 02:41'.
[ERR] (cm_init:1969) Cannot initialize Request Processor.
[DBG] (rp_cleanup:3920) Request Processor cleanup started, requesting
cancel of each worker thread.
[DBG] (rp_cleanup:3956) Request Processor cleanup finished.
[DBG] (sm_cleanup:303) Session Manager cleanup requested, ctx=0x9e5138.
[DBG] (sr_cbuff_dequeue:538) Circular buffer dequeue, new buffer head=1,
count=0.
[INF] (cm_cleanup:2023) Connection Manager successfully destroyed.
[ERR] (main:119) Unable to initialize Connection Manager: Input/output
error.
[INF] (cm_cleanup:2023) Connection Manager successfully destroyed.
[INF] (main:144) Sysrepo daemon terminated.

Here below the sysrepoctl output

Module Name                   | Revision   | Conformance | Data
Owner          | Permissions | Submodules                    | Enabled
Features
-----------------------------------------------------------------------------------------------------------------------------------------------
ietf-netconf                  | 2011-06-01 | Installed   |
root:root           | 777         | |
*ietf-netconf-acm              | 2012-02-22 | Imported*
|                     | |                               |
ietf-netconf-notifications    | 2012-02-06 | Installed   |
root:root           | 777         | |
ietf-yang-types               | 2013-07-15 | Installed
|                     | |                               |
ietf-inet-types               | 2013-07-15 | Installed
|                     | |                               |
iana-if-type                  | 2014-05-08 | Installed
|                     | |                               |
ietf-interfaces               | 2014-05-08 | Implemented |
root:root           | 777         | |
ietf-ip                       | 2014-06-16 | Installed
|                     | |                               |
ietf-netconf-server           | 2016-11-02 | Installed   |
root:root           | 777         | | listen ssh-listen tls-listen
call-home ssh-call-home tls-call-home
ietf-x509-cert-to-name        | 2014-12-10 | Imported
|                     | |                               |
ietf-ssh-server               | 2016-11-02 | Imported
|                     | |                               |
ietf-keystore                 | 2016-10-31 | Implemented |
root:root           | 777         | |
ietf-tls-server               | 2016-11-02 | Imported
|                     | |                               |
ietf-system                   | 2014-08-06 | Installed   |
root:root           | 777         | | authentication local-users

If I try to install ietf-netconf-acm as the first yang module  then it
appears as 'installed' in sysrepoctl's output and everything starts fine

Is it required an order of installation for yang modules? Previously the
pull request everything worked fine in my opinion.

regards
fabio

Il 06/06/2017 11:38, Radek Krejci ha scritto:
…

 Merged #875 <#875>.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#875 (comment)>, or
 mute the thread
 <https://github.com/notifications/unsubscribe-auth/AFpJnYAM-VK5J6VuHjK2pga-leNVV2R8ks5sBR4SgaJpZM4NuUh7>.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/rkrejci,4,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306449609,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","Hi Fabio, did you just updated the tools and kept the repository? Probably it will be needed to completely initiate sysrepo repository files (not only the data repository) by removing the repository directory and rebuild and reinstall the sysrepo.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/fabioantonini,5,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306450962,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","Hi Radek
I have removed everything under my repository directory and reinstalled everything from the beginning as I usually do with a new build of the package. In other word I have removed completely data/yang directories and all the persist/startup/running files and deployed the package.
I want to remark that if I try to install ietf-netconf-acm as first yang module everything works fine. In that case ietf-netconf-acm appears as 'installed'. When it is 'imported' the problem occurs.
thanks a lot
fabio",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/rkrejci,6,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306453053,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","I'm not sure what do you mean by ""I try to install ietf-netconf-acm"". It should be installed automatically by the cmake (as part of make). The schema list is the result if you do (with no repository directory)
$ cmake ..
$ make

?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/rkrejci,7,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306453791,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","It shouldn't be necessary to have a specific order, but since you seem to have enabled NACM, the ietf-netconf-acm must be explicitely installed (not just imported). But it should be done as part of the make (for the local repository in build directory)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/fabioantonini,8,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306456128,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","I'm working in a cross-environment so the yang modules installation occurs on target when the package is deployed. I have a script that list all the ietf yang modules and tries to install them. The first yang file is ietf-netconf that imports ietf-netconf-acm.yang. Then the script lists ietf-netconf-acm.yang but it has been already imported under the yang directory so its installation is skipped. The assumption is that if a yang module has been imported it doesn't need to be installed. So far the script worked fine, but probably we need to change the script logic.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/jktjkt,9,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306456779,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839",@fabioantonini I added the CALL_TARGET_BINS_DIRECTLY CMake option for this purpose. Do you use it? Does it offer the functionality that you require?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/fabioantonini,10,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306458405,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","Hi Jan
Thanks a lot for your advise. I noticed your CMake option but I didn't have the time to go more in depth.
It could offer what I require. I'll keep you informed
regards
fabio",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/rkrejci,11,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306461284,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","libyang differs between the implemented and imported schemas and it is better reflected in sysrepo now - the data (,rpcs and notifications) are ignored (hidden for subscription) in the imported modules, so such modules are used only as a source of groupings, typedefs or identities for the modules which import it. In some circumstances, sysrepo allowed you to subscribe even for the data from not implemented (imported) schemas. This should be fixed now, so it is necessary to better distinguish between these types now, there are actualy 3 of them (the note is also in man page):

imported - implicitely inserted as import of another installed schema
implemented - implicitely inserted, but it is affected by other installed module (e.g. by augmenting) to be also implemented
installed - explicitely inserted, so it is implemented (some subscription is allowed/expected runtime)

Note that ietf-netconf is, by default, just imported, so if you want to replicate repository state in your environment, you are not supposed to install it explicitely (it will be added implicitely by the module which needs it). On the other hand, ietf-netconf-acm is installed so it is supposed to be installed explicitely.
In your case you can filter only the installed modules and install them via sysrepoctl in any order. The rest schemas should be inserted into the sysrepo database automatically.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/fabioantonini,12,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306483665,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839","Hi Radek/Jan
I have adopted the advised approach and it worked really fine. Now we are using the built script install-yang.sh to install the yang files.
We have noticed that the same approach has not been adopted under sysrepo/examples. Could it be an improvemement?
thanks a lot
fabio",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,875,2017-06-02T13:59:14Z,2017-06-06T09:38:25Z,2017-06-06T13:33:31Z,MERGED,True,212,334,5,https://github.com/rkrejci,Insert mod fix,9,[],https://github.com/sysrepo/sysrepo/pull/875,https://github.com/jktjkt,13,https://github.com/sysrepo/sysrepo/pull/875#issuecomment-306487366,"Description
When a module A is installed that imports and uses a grouping from B and in the grouping there is a leafref to module C (imported in B), A is implemented, B is imported, and C should also be implemented, but it was not (it was assumed that dependencies of imported modules will always be only imported).
Also, sysrepoctl installed and printed information about data files for only imported modules, which is wrong.
Replaces #872
Closure
Refs #839",There's a WIP at #871; I haven't checked it yet.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,879,2017-06-20T13:06:57Z,2017-06-21T07:08:06Z,2017-06-21T13:01:00Z,MERGED,True,425,330,20,https://github.com/michalvasko,Commit change,30,[],https://github.com/sysrepo/sysrepo/pull/879,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/879,"Description
Bulky pull request, whose main feature is changing commit functionality and candidate datastore behavior. Commit is now unified for all datastores and always applies performed changes and checks NACM. For candidate datastore there is nowhere to apply the changes since they always are session-exclusive, so only NACM is checked. Also, candidate lock is now session-exclusive as it should have been. To perform NETCONF commit, copy_config can be used.
Another major change includes finishing copy_config (candidate -> running was significantly broken and unfinished). Also, non-deterministic cl_test failures should be fixed now. Lastly, some minor bugfixes, improvements, and optimizations are included.
Test case
New features briefly tested in cl_test, cl_notifications_test and rp_dt_edit_test.","Description
Bulky pull request, whose main feature is changing commit functionality and candidate datastore behavior. Commit is now unified for all datastores and always applies performed changes and checks NACM. For candidate datastore there is nowhere to apply the changes since they always are session-exclusive, so only NACM is checked. Also, candidate lock is now session-exclusive as it should have been. To perform NETCONF commit, copy_config can be used.
Another major change includes finishing copy_config (candidate -> running was significantly broken and unfinished). Also, non-deterministic cl_test failures should be fixed now. Lastly, some minor bugfixes, improvements, and optimizations are included.
Test case
New features briefly tested in cl_test, cl_notifications_test and rp_dt_edit_test.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,879,2017-06-20T13:06:57Z,2017-06-21T07:08:06Z,2017-06-21T13:01:00Z,MERGED,True,425,330,20,https://github.com/michalvasko,Commit change,30,[],https://github.com/sysrepo/sysrepo/pull/879,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/879#issuecomment-309759604,"Description
Bulky pull request, whose main feature is changing commit functionality and candidate datastore behavior. Commit is now unified for all datastores and always applies performed changes and checks NACM. For candidate datastore there is nowhere to apply the changes since they always are session-exclusive, so only NACM is checked. Also, candidate lock is now session-exclusive as it should have been. To perform NETCONF commit, copy_config can be used.
Another major change includes finishing copy_config (candidate -> running was significantly broken and unfinished). Also, non-deterministic cl_test failures should be fixed now. Lastly, some minor bugfixes, improvements, and optimizations are included.
Test case
New features briefly tested in cl_test, cl_notifications_test and rp_dt_edit_test.","Codecov Report

Merging #879 into devel will decrease coverage by 0.04%.
The diff coverage is 90.8%.

@@            Coverage Diff             @@
##            devel     #879      +/-   ##
==========================================
- Coverage   86.33%   86.29%   -0.04%     
==========================================
  Files          31       31              
  Lines       24320    24363      +43     
  Branches     4288     4306      +18     
==========================================
+ Hits        20996    21024      +28     
- Misses       3324     3339      +15",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,880,2017-06-20T14:34:39Z,2017-06-21T07:10:13Z,2017-06-21T13:01:08Z,MERGED,True,28,8,2,https://github.com/michalvasko,Set installed flag,3,[],https://github.com/sysrepo/sysrepo/pull/880,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/880,"Description
Set installed flag if module was only implemented. Also, sysrepoctl_test did not properly restore module state and hence every test except the first failed.","Description
Set installed flag if module was only implemented. Also, sysrepoctl_test did not properly restore module state and hence every test except the first failed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,880,2017-06-20T14:34:39Z,2017-06-21T07:10:13Z,2017-06-21T13:01:08Z,MERGED,True,28,8,2,https://github.com/michalvasko,Set installed flag,3,[],https://github.com/sysrepo/sysrepo/pull/880,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/880#issuecomment-309980585,"Description
Set installed flag if module was only implemented. Also, sysrepoctl_test did not properly restore module state and hence every test except the first failed.","Codecov Report

Merging #880 into devel will increase coverage by 0.03%.
The diff coverage is 93.33%.

@@            Coverage Diff             @@
##            devel     #880      +/-   ##
==========================================
+ Coverage   86.33%   86.36%   +0.03%     
==========================================
  Files          31       31              
  Lines       24320    24331      +11     
  Branches     4288     4291       +3     
==========================================
+ Hits        20996    21012      +16     
+ Misses       3324     3319       -5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,882,2017-06-22T13:44:35Z,2017-06-23T12:48:17Z,2017-06-23T12:48:27Z,MERGED,True,391,23,7,https://github.com/michalvasko,Copy config to running read NACM,5,[],https://github.com/sysrepo/sysrepo/pull/882,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/882,"Description
NACM read access is correctly evaluated and the nodes skipped when performing copy-config to running datastore. Also, after travis updated, it no longer had setfacl utility installed by default.
TODO copy-config to startup, candidate datastores
Test case
nacm_cl_test briefly tests this functionality.","Description
NACM read access is correctly evaluated and the nodes skipped when performing copy-config to running datastore. Also, after travis updated, it no longer had setfacl utility installed by default.
TODO copy-config to startup, candidate datastores
Test case
nacm_cl_test briefly tests this functionality.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,882,2017-06-22T13:44:35Z,2017-06-23T12:48:17Z,2017-06-23T12:48:27Z,MERGED,True,391,23,7,https://github.com/michalvasko,Copy config to running read NACM,5,[],https://github.com/sysrepo/sysrepo/pull/882,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/882#issuecomment-310390146,"Description
NACM read access is correctly evaluated and the nodes skipped when performing copy-config to running datastore. Also, after travis updated, it no longer had setfacl utility installed by default.
TODO copy-config to startup, candidate datastores
Test case
nacm_cl_test briefly tests this functionality.","Codecov Report

Merging #882 into devel will decrease coverage by 0.27%.
The diff coverage is 10.77%.

@@            Coverage Diff            @@
##            devel    #882      +/-   ##
=========================================
- Coverage   86.26%     86%   -0.27%     
=========================================
  Files          31      31              
  Lines       24373   24487     +114     
  Branches     4309    4332      +23     
=========================================
+ Hits        21025   21058      +33     
- Misses       3348    3429      +81",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,886,2017-06-23T13:02:46Z,2017-06-23T14:08:09Z,2017-06-23T14:24:07Z,MERGED,True,248,103,10,https://github.com/michalvasko,Identityref deps,5,[],https://github.com/sysrepo/sysrepo/pull/886,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/886,"Description
Added EXTENSION dependencies for foreign identities of identityrefs. Also, use md_get_module_info function where applicable instead of duplicating code.
Test case
Tests updated accordingly.
Closure
Fixes #881
Fixes #884","Description
Added EXTENSION dependencies for foreign identities of identityrefs. Also, use md_get_module_info function where applicable instead of duplicating code.
Test case
Tests updated accordingly.
Closure
Fixes #881
Fixes #884",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,886,2017-06-23T13:02:46Z,2017-06-23T14:08:09Z,2017-06-23T14:24:07Z,MERGED,True,248,103,10,https://github.com/michalvasko,Identityref deps,5,[],https://github.com/sysrepo/sysrepo/pull/886,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/886#issuecomment-310662684,"Description
Added EXTENSION dependencies for foreign identities of identityrefs. Also, use md_get_module_info function where applicable instead of duplicating code.
Test case
Tests updated accordingly.
Closure
Fixes #881
Fixes #884","Codecov Report

Merging #886 into devel will decrease coverage by 0.07%.
The diff coverage is 82.35%.

@@            Coverage Diff            @@
##            devel    #886      +/-   ##
=========================================
- Coverage   85.98%   85.9%   -0.07%     
=========================================
  Files          31      31              
  Lines       24487   24551      +64     
  Branches     4332    4350      +18     
=========================================
+ Hits        21053   21090      +37     
- Misses       3434    3461      +27",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,889,2017-07-04T12:18:31Z,2017-07-04T12:54:57Z,2017-07-05T06:07:02Z,MERGED,True,112,64,13,https://github.com/michalvasko,libyang api changes and xpath fixes,1,[],https://github.com/sysrepo/sysrepo/pull/889,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/889,"Description
Recent libyang fixes corrected some logical errors in XPath paths and addressing, which were also present both indirectly and directly in sysrepo. It was incorrectly implemented and understood, nodes in XPath do not inherit the local module from their parent, but always consider the ""context"" module to be local. For data, context module is the module of the context node (more about various context nodes in RFC 7950) and for schema, context module is the module where the path is defined.
Also, one libyang function API changed.
Test case
Affected tests modified and fixed.
Closure
Fixes #888","Description
Recent libyang fixes corrected some logical errors in XPath paths and addressing, which were also present both indirectly and directly in sysrepo. It was incorrectly implemented and understood, nodes in XPath do not inherit the local module from their parent, but always consider the ""context"" module to be local. For data, context module is the module of the context node (more about various context nodes in RFC 7950) and for schema, context module is the module where the path is defined.
Also, one libyang function API changed.
Test case
Affected tests modified and fixed.
Closure
Fixes #888",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,889,2017-07-04T12:18:31Z,2017-07-04T12:54:57Z,2017-07-05T06:07:02Z,MERGED,True,112,64,13,https://github.com/michalvasko,libyang api changes and xpath fixes,1,[],https://github.com/sysrepo/sysrepo/pull/889,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/889#issuecomment-312866379,"Description
Recent libyang fixes corrected some logical errors in XPath paths and addressing, which were also present both indirectly and directly in sysrepo. It was incorrectly implemented and understood, nodes in XPath do not inherit the local module from their parent, but always consider the ""context"" module to be local. For data, context module is the module of the context node (more about various context nodes in RFC 7950) and for schema, context module is the module where the path is defined.
Also, one libyang function API changed.
Test case
Affected tests modified and fixed.
Closure
Fixes #888","Codecov Report

Merging #889 into devel will increase coverage by <.01%.
The diff coverage is 88%.

@@            Coverage Diff             @@
##            devel     #889      +/-   ##
==========================================
+ Coverage   85.91%   85.91%   +<.01%     
==========================================
  Files          31       31              
  Lines       24551    24569      +18     
  Branches     4350     4354       +4     
==========================================
+ Hits        21091    21107      +16     
- Misses       3460     3462       +2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,889,2017-07-04T12:18:31Z,2017-07-04T12:54:57Z,2017-07-05T06:07:02Z,MERGED,True,112,64,13,https://github.com/michalvasko,libyang api changes and xpath fixes,1,[],https://github.com/sysrepo/sysrepo/pull/889,https://github.com/fanchanghu,3,https://github.com/sysrepo/sysrepo/pull/889#issuecomment-312987531,"Description
Recent libyang fixes corrected some logical errors in XPath paths and addressing, which were also present both indirectly and directly in sysrepo. It was incorrectly implemented and understood, nodes in XPath do not inherit the local module from their parent, but always consider the ""context"" module to be local. For data, context module is the module of the context node (more about various context nodes in RFC 7950) and for schema, context module is the module where the path is defined.
Also, one libyang function API changed.
Test case
Affected tests modified and fixed.
Closure
Fixes #888","Hi,
It seems the mail system of my organization does not support pure-text mail, my reply about your mail seems does not display well in the mail-list, so I post my opinion here~~
I still think that the unprefix node in sysrepo API should use its parent's prefix. In fact, there are 3 cases using xpath:
1, xpath used in schema files, such as path of leafref, should use the module's prefix as default, this is required by RFC 7950
2, xpath used in xml files, such as value of instance-identifier, has no default prefix, all prefix must be specified, this is required by RFC 7950
3, xpath used in sysrepo API, such as the subscription interface, it is very special, I found it was called ""node id"" in the API, it should follow the JSON specification. RFC 7951 does not define common style about xpath, but it says something about the value of instance-identifier:
https://tools.ietf.org/html/rfc7951#section-6.11
   For example,

   /ietf-interfaces:interfaces/interface[name='eth0']/ietf-ip:ipv4/ip

   is a valid instance-identifier value because the data nodes
   ""interfaces"", ""interface"", and ""name"" are defined in the module
   ""ietf-interfaces"", whereas ""ipv4"" and ""ip"" are defined in ""ietf-ip"".

I think we should follow this format in the sysrepo API, so it is correct of the current implement.
@michalvasko @rkrejci",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,889,2017-07-04T12:18:31Z,2017-07-04T12:54:57Z,2017-07-05T06:07:02Z,MERGED,True,112,64,13,https://github.com/michalvasko,libyang api changes and xpath fixes,1,[],https://github.com/sysrepo/sysrepo/pull/889,https://github.com/rkrejci,4,https://github.com/sysrepo/sysrepo/pull/889#issuecomment-313005339,"Description
Recent libyang fixes corrected some logical errors in XPath paths and addressing, which were also present both indirectly and directly in sysrepo. It was incorrectly implemented and understood, nodes in XPath do not inherit the local module from their parent, but always consider the ""context"" module to be local. For data, context module is the module of the context node (more about various context nodes in RFC 7950) and for schema, context module is the module where the path is defined.
Also, one libyang function API changed.
Test case
Affected tests modified and fixed.
Closure
Fixes #888","Hi, thanks for this feedback! We have national holidays now and Michal will be back in office on next Monday. We had this issue with XPaths in schemas (must, when, leafrefs, augments) and it's possible that we are wrongly mixing schema and data xpaths (because of the current libyang API design). Lets discuss it later with Michal.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,893,2017-07-10T21:12:06Z,2017-07-10T23:32:05Z,2017-07-10T23:32:10Z,CLOSED,False,2,2,2,https://github.com/TrinityCoder,Fixed incorrect array index inside (cl_)fd_start_watching() functions,1,[],https://github.com/sysrepo/sysrepo/pull/893,https://github.com/TrinityCoder,1,https://github.com/sysrepo/sysrepo/pull/893,"What does this patch do?
Fixed incorrect array index used inside the fd_start_watching() function in examples/application_fd_watcher_example.c source file, and in a very similar function
called cl_fd_start_watching() in tests/cl_fd_watcher_test.c.
Detailed description
I think that the index should be ""j"" instead of ""poll_fd_cnt"", because the purpose of the for cycle is to traverse the array of pollfd structs and find one which has some specific file descriptor number. If we find such pollfd struct, we append appropriate flag to it's ""events"" member.
Before this patch, the for cycle would find out if some specific descriptor is watched and if so, it changes ""events"" member of the first struct which is actually NOT watched (with index ""poll_fd_cnt""), rendering the whole for cycle meaningless.","What does this patch do?
Fixed incorrect array index used inside the fd_start_watching() function in examples/application_fd_watcher_example.c source file, and in a very similar function
called cl_fd_start_watching() in tests/cl_fd_watcher_test.c.
Detailed description
I think that the index should be ""j"" instead of ""poll_fd_cnt"", because the purpose of the for cycle is to traverse the array of pollfd structs and find one which has some specific file descriptor number. If we find such pollfd struct, we append appropriate flag to it's ""events"" member.
Before this patch, the for cycle would find out if some specific descriptor is watched and if so, it changes ""events"" member of the first struct which is actually NOT watched (with index ""poll_fd_cnt""), rendering the whole for cycle meaningless.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,894,2017-07-10T23:49:48Z,2017-07-12T07:07:09Z,2017-07-13T20:58:18Z,MERGED,True,2,3,2,https://github.com/TrinityCoder,BUGFIX incorrect array indexes fixed,1,[],https://github.com/sysrepo/sysrepo/pull/894,https://github.com/TrinityCoder,1,https://github.com/sysrepo/sysrepo/pull/894,"Short description:
I believe I have found two places with incorrect index variables and this pull request fixes them.
Detailed description:
There are two practically indentical functions:
fd_start_watching() in examples/application_fd_watcher_example.c source file,
cl_fd_start_watching() in tests/cl_fd_watcher_test.c source file
Both contain a for cycle that goes through an array of pollfd structs and looks for an element which has member variable ""fd"" equal to some number ""fd"" passed as argument to the function. I believe that we search for such element in order to add a flag to it's ""events"" member variable.
However, currently we change ""events"" member variable of ""poll_fd_cnt""-nth array member, which is the first pollfd struct that is actually NOT watched, and therefore it's ""events"" member variable is useless and changing it means nothing. I believe, that we should access the ""j""-nth member, because that's the pollfd with the file descriptor number we were originally looking for.","Short description:
I believe I have found two places with incorrect index variables and this pull request fixes them.
Detailed description:
There are two practically indentical functions:
fd_start_watching() in examples/application_fd_watcher_example.c source file,
cl_fd_start_watching() in tests/cl_fd_watcher_test.c source file
Both contain a for cycle that goes through an array of pollfd structs and looks for an element which has member variable ""fd"" equal to some number ""fd"" passed as argument to the function. I believe that we search for such element in order to add a flag to it's ""events"" member variable.
However, currently we change ""events"" member variable of ""poll_fd_cnt""-nth array member, which is the first pollfd struct that is actually NOT watched, and therefore it's ""events"" member variable is useless and changing it means nothing. I believe, that we should access the ""j""-nth member, because that's the pollfd with the file descriptor number we were originally looking for.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,894,2017-07-10T23:49:48Z,2017-07-12T07:07:09Z,2017-07-13T20:58:18Z,MERGED,True,2,3,2,https://github.com/TrinityCoder,BUGFIX incorrect array indexes fixed,1,[],https://github.com/sysrepo/sysrepo/pull/894,https://github.com/rkrejci,2,https://github.com/sysrepo/sysrepo/pull/894#issuecomment-314383885,"Short description:
I believe I have found two places with incorrect index variables and this pull request fixes them.
Detailed description:
There are two practically indentical functions:
fd_start_watching() in examples/application_fd_watcher_example.c source file,
cl_fd_start_watching() in tests/cl_fd_watcher_test.c source file
Both contain a for cycle that goes through an array of pollfd structs and looks for an element which has member variable ""fd"" equal to some number ""fd"" passed as argument to the function. I believe that we search for such element in order to add a flag to it's ""events"" member variable.
However, currently we change ""events"" member variable of ""poll_fd_cnt""-nth array member, which is the first pollfd struct that is actually NOT watched, and therefore it's ""events"" member variable is useless and changing it means nothing. I believe, that we should access the ""j""-nth member, because that's the pollfd with the file descriptor number we were originally looking for.","Hi, can you please target the pull request for the devel branch?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,894,2017-07-10T23:49:48Z,2017-07-12T07:07:09Z,2017-07-13T20:58:18Z,MERGED,True,2,3,2,https://github.com/TrinityCoder,BUGFIX incorrect array indexes fixed,1,[],https://github.com/sysrepo/sysrepo/pull/894,https://github.com/TrinityCoder,3,https://github.com/sysrepo/sysrepo/pull/894#issuecomment-314462618,"Short description:
I believe I have found two places with incorrect index variables and this pull request fixes them.
Detailed description:
There are two practically indentical functions:
fd_start_watching() in examples/application_fd_watcher_example.c source file,
cl_fd_start_watching() in tests/cl_fd_watcher_test.c source file
Both contain a for cycle that goes through an array of pollfd structs and looks for an element which has member variable ""fd"" equal to some number ""fd"" passed as argument to the function. I believe that we search for such element in order to add a flag to it's ""events"" member variable.
However, currently we change ""events"" member variable of ""poll_fd_cnt""-nth array member, which is the first pollfd struct that is actually NOT watched, and therefore it's ""events"" member variable is useless and changing it means nothing. I believe, that we should access the ""j""-nth member, because that's the pollfd with the file descriptor number we were originally looking for.",I have rebased the branch from master onto devel.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,895,2017-07-11T17:42:23Z,2017-07-17T06:56:23Z,2017-07-17T06:56:23Z,MERGED,True,12,73,1,https://github.com/jktjkt,sysrepocfg: fixed memleaks and minor performance optimization,4,[],https://github.com/sysrepo/sysrepo/pull/895,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/895,"simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem","simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,895,2017-07-11T17:42:23Z,2017-07-17T06:56:23Z,2017-07-17T06:56:23Z,MERGED,True,12,73,1,https://github.com/jktjkt,sysrepocfg: fixed memleaks and minor performance optimization,4,[],https://github.com/sysrepo/sysrepo/pull/895,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/895#issuecomment-315334103,"simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem","Hi,
thanks, seems fine, all that is probably needed is to fix sysrepocfg.c:1049:9: error: unused variable ‘ret’.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,895,2017-07-11T17:42:23Z,2017-07-17T06:56:23Z,2017-07-17T06:56:23Z,MERGED,True,12,73,1,https://github.com/jktjkt,sysrepocfg: fixed memleaks and minor performance optimization,4,[],https://github.com/sysrepo/sysrepo/pull/895,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/895#issuecomment-315336246,"simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem","Ah, I missed that. Squashed a fix in there, and added a follow-up cleanup of an unused variable.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,895,2017-07-11T17:42:23Z,2017-07-17T06:56:23Z,2017-07-17T06:56:23Z,MERGED,True,12,73,1,https://github.com/jktjkt,sysrepocfg: fixed memleaks and minor performance optimization,4,[],https://github.com/sysrepo/sysrepo/pull/895,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/895#issuecomment-315349624,"simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem","Hi,
so it seems you have broken something and sysrepocfg tests srcfg_test_xpath and srcfg_test_merge did not pass. It would be great if you could fix it yourself, otherwise I will look at it once I find the time.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,895,2017-07-11T17:42:23Z,2017-07-17T06:56:23Z,2017-07-17T06:56:23Z,MERGED,True,12,73,1,https://github.com/jktjkt,sysrepocfg: fixed memleaks and minor performance optimization,4,[],https://github.com/sysrepo/sysrepo/pull/895,https://github.com/jktjkt,5,https://github.com/sysrepo/sysrepo/pull/895#issuecomment-315391688,"simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem","That's a... mess. These tests contain hardcoded /tmp locations and rely on being run from a subdirectory of the build dir. They use a shell script in place of $EDITOR. The actual output is not printed anywhere, just compared against the expected error messages. Etc.
Anyway, even 16914df fails due to memory leaks reported by ASAN -- perhaps in the child process:
$ LD_LIBRARY_PATH=/opt/nc/lib64 ctest -R sysrepocfg --output-on-failure
Test project /home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug
    Start 29: sysrepocfg_test
1/1 Test #29: sysrepocfg_test ..................***Failed    4.43 sec
[==========] Running 8 test(s).
[ RUN      ] srcfg_test_version
[       OK ] srcfg_test_version
[ RUN      ] srcfg_test_help
[       OK ] srcfg_test_help
[ RUN      ] srcfg_test_export
../src/sysrepocfg: Unsupported data format (xml and json are supported).
../src/sysrepocfg: Module name is not specified.
../src/sysrepocfg: Unsupported data format (xml and json are supported).
../src/sysrepocfg: Module name is not specified.
[       OK ] srcfg_test_export
[ RUN      ] srcfg_test_editing
../src/sysrepocfg: Invalid datastore specified (select either ""running"" or ""startup"").
../src/sysrepocfg: Unsupported data format (xml and json are supported).
../src/sysrepocfg: Module name is not specified.
../src/sysrepocfg: Unsupported data format (xml and json are supported).
../src/sysrepocfg: Module name is not specified.
+ '[' 1 -ne 1 ']'
+ cp sysrepocfg_test-new_config.txt /tmp/srcfg.test-module.startup.USgXNJ
+ '[' 1 -ne 1 ']'
+ cp sysrepocfg_test-new_config.txt /tmp/srcfg.test-module.startup.diRXB5
+ '[' 1 -ne 1 ']'
+ cp sysrepocfg_test-new_config.txt /tmp/srcfg.test-module.startup.lkFfAg
+ '[' 1 -ne 1 ']'
+ cp sysrepocfg_test-new_config.txt /tmp/srcfg.test-module.startup.2ZgjzF
[ERR] (srcfg_import_datastore:795) Unable to parse the input data: Encountered invalid character sequence ""user xmlns"". ()
+ '[' 1 -ne 1 ']'
+ cp sysrepocfg_test-new_config.txt /tmp/srcfg.test-module.startup.2ZgjzF
[ERR] (srcfg_import_datastore:795) Unable to parse the input data: Encountered invalid character sequence ""user xmlns"". ()
+ '[' 1 -ne 1 ']'
+ cp sysrepocfg_test-new_config.txt /tmp/srcfg.test-module.startup.2ZgjzF
[ERR] (srcfg_import_datastore:795) Unable to parse the input data: Encountered invalid character sequence ""user xmlns"". ()

=================================================================
==18123==ERROR: LeakSanitizer: detected memory leaks

Indirect leak of 648 byte(s) in 9 object(s) allocated from:
    #0 0x7f250b950d40 in calloc (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xd2d40)
    #1 0x7f250ad54e1a in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:886
    #2 0x7f250ad55e95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #3 0x7f250ad56b6b in lyxml_parse_mem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1165
    #4 0x7f250ae501f7 in lyd_parse_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:416
    #5 0x7f250ae509ca in lyd_parse_data_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:484
    #6 0x7f250ae50d80 in lyd_parse_fd_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:521
    #7 0x7f250ae50f26 in lyd_parse_fd /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:535
    #8 0x40b972 in srcfg_import_datastore /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:786
    #9 0x413b5e in srcfg_edit_operation /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:1605
    #10 0x415aaa in main /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:2046
    #11 0x7f2509ef78b3 in __libc_start_main (/lib64/libc.so.6+0x208b3)
    #12 0x403008 in _start (/home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/src/sysrepocfg+0x403008)

Indirect leak of 648 byte(s) in 9 object(s) allocated from:
    #0 0x7f250b950d40 in calloc (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xd2d40)
    #1 0x7f250ad54e1a in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:886
    #2 0x7f250ad56b6b in lyxml_parse_mem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1165
    #3 0x7f250ae501f7 in lyd_parse_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:416
    #4 0x7f250ae509ca in lyd_parse_data_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:484
    #5 0x7f250ae50d80 in lyd_parse_fd_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:521
    #6 0x7f250ae50f26 in lyd_parse_fd /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:535
    #7 0x40b972 in srcfg_import_datastore /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:786
    #8 0x413b5e in srcfg_edit_operation /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:1605
    #9 0x415aaa in main /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:2046
    #10 0x7f2509ef78b3 in __libc_start_main (/lib64/libc.so.6+0x208b3)
    #11 0x403008 in _start (/home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/src/sysrepocfg+0x403008)

Indirect leak of 360 byte(s) in 9 object(s) allocated from:
    #0 0x7f250b950d40 in calloc (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xd2d40)
    #1 0x7f250ad53a19 in parse_attr /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:743
    #2 0x7f250ad562f0 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1066
    #3 0x7f250ad56b6b in lyxml_parse_mem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1165
    #4 0x7f250ae501f7 in lyd_parse_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:416
    #5 0x7f250ae509ca in lyd_parse_data_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:484
    #6 0x7f250ae50d80 in lyd_parse_fd_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:521
    #7 0x7f250ae50f26 in lyd_parse_fd /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_data.c:535
    #8 0x40b972 in srcfg_import_datastore /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:786
    #9 0x413b5e in srcfg_edit_operation /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:1605
    #10 0x415aaa in main /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/executables/sysrepocfg.c:2046
    #11 0x7f2509ef78b3 in __libc_start_main (/lib64/libc.so.6+0x208b3)
    #12 0x403008 in _start (/home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/src/sysrepocfg+0x403008)

SUMMARY: AddressSanitizer: 1656 byte(s) leaked in 27 allocation(s).
[bt] #0 /home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/tests/sysrepocfg_test(assert_int_equal_bt+0x40) [0x41de46]
        /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/helpers/system_helper.c:266
[bt] #1 /home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/tests/sysrepocfg_test() [0x41e6dd]
        /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/helpers/system_helper.c:364
[bt] #2 /home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/tests/sysrepocfg_test(exec_shell_command+0x24b) [0x41ec3f]
        /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/helpers/system_helper.c:446
[bt] #3 /home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/tests/sysrepocfg_test() [0x424c74]
        /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:883
c:446
[bt] #4 /usr/lib64/libcmocka.so.0(+0x4d97) [0x7f1e9836fd97]
        ??:0
/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:883
c:446
[bt] #5 /usr/lib64/libcmocka.so.0(_cmocka_run_group_tests+0x308) [0x7f1e983704e8]
        ??:0
/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:883
c:446
[bt] #6 /home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/tests/sysrepocfg_test(main+0x73d) [0x425f2e]
        /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:1298
:446
[bt] #7 /lib64/libc.so.6(__libc_start_main+0x114) [0x7f1e970e08b4]
        ??:0
/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:1298
:446
[bt] #8 /home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/tests/sysrepocfg_test(_start+0x29) [0x418909]
        ??:?
/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:1298
:446
0 != 0x1
/home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/helpers/system_helper.c:266: error: Failure!

REGEX: '(.*Unable to apply the changes.*){3}Your changes have been saved to 'sysrepocfg_test-dump.txt''
FILE: ''
[  FAILED  ] srcfg_test_editing
[ RUN      ] srcfg_test_editing
=================================================================
==17847==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffde46fd990 at pc 0x7f1e9751936e bp 0x7ffde46fd870 sp 0x7ffde46fd860
WRITE of size 1 at 0x7ffde46fd990 thread T0
    #0 0x7f1e9751936d in copyutf8 /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/parser.c:3687
    #1 0x7f1e974f950f in parse_text /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:687
    #2 0x7f1e974fc002 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1043
    #3 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #4 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #5 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #6 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #7 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #8 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #9 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #10 0x7f1e974fcb6b in lyxml_parse_mem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1165
    #11 0x7f1e975541df in yin_read_module /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/parser_yin.c:7095
    #12 0x7f1e975d3160 in lys_parse_mem_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_schema.c:961
    #13 0x7f1e975d32d6 in lys_parse_mem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_schema.c:991
    #14 0x7f1e974b0bff in ly_ctx_new /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/context.c:108
    #15 0x41bbc7 in createDataTreeIETFinterfacesModule /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/helpers/test_module_helper.c:404
    #16 0x421b78 in srcfg_test_set_running_datastore /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:227
    #17 0x7f1e9836fe45  (/usr/lib64/libcmocka.so.0+0x4e45)
    #18 0x7f1e983704b7 in _cmocka_run_group_tests (/usr/lib64/libcmocka.so.0+0x54b7)
    #19 0x425f2d in main /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:1298
    #20 0x7f1e970e08b3 in __libc_start_main (/lib64/libc.so.6+0x208b3)
    #21 0x418908 in _start (/home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/tests/sysrepocfg_test+0x418908)

Address 0x7ffde46fd990 is located in stack of thread T0==17847==AddressSanitizer CHECK failed: /var/tmp/portage/sys-devel/gcc-6.3.0/work/gcc-6.3.0/libsanitizer/asan/asan_thread.cc:243 ""((ptr[0] == kCurrentStackFrameMagic)) != (0)"" (0x0, 0x0)
    #0 0x7f1e98652436  (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xdd436)
    #1 0x7f1e9865a316 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xe5316)
    #2 0x7f1e98657771  (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xe2771)
    #3 0x7f1e9864d9a6  (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xd89a6)
    #4 0x7f1e9864dfc2  (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xd8fc2)
    #5 0x7f1e98651559  (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xdc559)
    #6 0x7f1e98652e28 in __asan_report_store1 (/usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libasan.so.3+0xdde28)
    #7 0x7f1e9751936d in copyutf8 /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/parser.c:3687
    #8 0x7f1e974f950f in parse_text /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:687
    #9 0x7f1e974fc002 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1043
    #10 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #11 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #12 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #13 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #14 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #15 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #16 0x7f1e974fbe95 in lyxml_parse_elem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1027
    #17 0x7f1e974fcb6b in lyxml_parse_mem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/xml.c:1165
    #18 0x7f1e975541df in yin_read_module /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/parser_yin.c:7095
    #19 0x7f1e975d3160 in lys_parse_mem_ /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_schema.c:961
    #20 0x7f1e975d32d6 in lys_parse_mem /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/tree_schema.c:991
    #21 0x7f1e974b0bff in ly_ctx_new /home/jkt/work/cesnet/gerrit/github/CESNET/libyang/src/context.c:108
    #22 0x41bbc7 in createDataTreeIETFinterfacesModule /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/helpers/test_module_helper.c:404
    #23 0x421b78 in srcfg_test_set_running_datastore /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:227
    #24 0x7f1e9836fe45  (/usr/lib64/libcmocka.so.0+0x4e45)
    #25 0x7f1e983704b7 in _cmocka_run_group_tests (/usr/lib64/libcmocka.so.0+0x54b7)
    #26 0x425f2d in main /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/tests/sysrepocfg_test.c:1298
    #27 0x7f1e970e08b3 in __libc_start_main (/lib64/libc.so.6+0x208b3)
    #28 0x418908 in _start (/home/jkt/work/prog/_build/sysrepo/GCC_6_ASAN-Debug/tests/sysrepocfg_test+0x418908)



0% tests passed, 1 tests failed out of 1

Total Test time (real) =   4.44 sec

The following tests FAILED:
         29 - sysrepocfg_test (Failed)
Errors while running CTest",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,895,2017-07-11T17:42:23Z,2017-07-17T06:56:23Z,2017-07-17T06:56:23Z,MERGED,True,12,73,1,https://github.com/jktjkt,sysrepocfg: fixed memleaks and minor performance optimization,4,[],https://github.com/sysrepo/sysrepo/pull/895,https://github.com/jktjkt,6,https://github.com/sysrepo/sysrepo/pull/895#issuecomment-315398989,"simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem","OK,  I screwed up. sr_val_set_str_data is just for string data. I was actually lokking for sr_set_item_str.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,895,2017-07-11T17:42:23Z,2017-07-17T06:56:23Z,2017-07-17T06:56:23Z,MERGED,True,12,73,1,https://github.com/jktjkt,sysrepocfg: fixed memleaks and minor performance optimization,4,[],https://github.com/sysrepo/sysrepo/pull/895,https://github.com/codecov-io,7,https://github.com/sysrepo/sysrepo/pull/895#issuecomment-315407579,"simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem","Codecov Report

Merging #895 into devel will increase coverage by 0.05%.
The diff coverage is 50%.

@@            Coverage Diff             @@
##            devel     #895      +/-   ##
==========================================
+ Coverage   85.93%   85.99%   +0.05%     
==========================================
  Files          31       31              
  Lines       24569    24533      -36     
  Branches     4354     4352       -2     
==========================================
- Hits        21113    21095      -18     
+ Misses       3456     3438      -18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,895,2017-07-11T17:42:23Z,2017-07-17T06:56:23Z,2017-07-17T06:56:23Z,MERGED,True,12,73,1,https://github.com/jktjkt,sysrepocfg: fixed memleaks and minor performance optimization,4,[],https://github.com/sysrepo/sysrepo/pull/895,https://github.com/michalvasko,8,https://github.com/sysrepo/sysrepo/pull/895#issuecomment-315679698,"simplify the sysrepocfg --set ... --set-val ...
remove duplicate validation in sysrepocfg

cc: #892 , but it doesn't really fix the underlying problem","Hi,
alright, seems good now (and yes, tests are a mess...), thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,897,2017-07-14T08:56:47Z,2017-07-17T07:58:14Z,2017-07-17T08:20:22Z,MERGED,True,294,252,7,https://github.com/michalvasko,Copy config NACM read checks,7,[],https://github.com/sysrepo/sysrepo/pull/897,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/897,"Description
The second part of copy-config NACM read check commits which add these checks also for copy-config to candidate and startup.
Test case
Added 2 new tests to nacm_cl_test.","Description
The second part of copy-config NACM read check commits which add these checks also for copy-config to candidate and startup.
Test case
Added 2 new tests to nacm_cl_test.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,897,2017-07-14T08:56:47Z,2017-07-17T07:58:14Z,2017-07-17T08:20:22Z,MERGED,True,294,252,7,https://github.com/michalvasko,Copy config NACM read checks,7,[],https://github.com/sysrepo/sysrepo/pull/897,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/897#issuecomment-315319026,"Description
The second part of copy-config NACM read check commits which add these checks also for copy-config to candidate and startup.
Test case
Added 2 new tests to nacm_cl_test.","Codecov Report

Merging #897 into devel will increase coverage by 0.17%.
The diff coverage is 86.49%.

@@            Coverage Diff            @@
##            devel    #897      +/-   ##
=========================================
+ Coverage   85.93%   86.1%   +0.17%     
=========================================
  Files          31      31              
  Lines       24569   24589      +20     
  Branches     4354    4359       +5     
=========================================
+ Hits        21113   21172      +59     
+ Misses       3456    3417      -39",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,898,2017-07-14T10:57:30Z,2017-07-17T08:02:41Z,2017-07-17T08:20:31Z,MERGED,True,114,66,12,https://github.com/michalvasko,libyang XPath fixes,4,[],https://github.com/sysrepo/sysrepo/pull/898,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/898,"Description
libyang XPath format changed (was fixed) so sysrepo must be adjusted accordingly.
Test case
Affected tests changed.","Description
libyang XPath format changed (was fixed) so sysrepo must be adjusted accordingly.
Test case
Affected tests changed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,898,2017-07-14T10:57:30Z,2017-07-17T08:02:41Z,2017-07-17T08:20:31Z,MERGED,True,114,66,12,https://github.com/michalvasko,libyang XPath fixes,4,[],https://github.com/sysrepo/sysrepo/pull/898,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/898#issuecomment-315345425,"Description
libyang XPath format changed (was fixed) so sysrepo must be adjusted accordingly.
Test case
Affected tests changed.","Codecov Report

Merging #898 into master will decrease coverage by 0.01%.
The diff coverage is 86.36%.

@@            Coverage Diff             @@
##           master     #898      +/-   ##
==========================================
- Coverage   86.43%   86.43%   -0.01%     
==========================================
  Files          31       31              
  Lines       24419    24437      +18     
  Branches     4315     4319       +4     
==========================================
+ Hits        21106    21120      +14     
- Misses       3313     3317       +4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,899,2017-07-14T11:57:06Z,2017-07-18T07:17:06Z,2017-07-18T07:17:06Z,CLOSED,False,51,27,4,https://github.com/michalvasko,Minor fix,5,[],https://github.com/sysrepo/sysrepo/pull/899,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/899,"Description
Added suitable data node types, there are models only with RPCs and/or notifications. One possible NULL dereference fixed and also a typo fixed.","Description
Added suitable data node types, there are models only with RPCs and/or notifications. One possible NULL dereference fixed and also a typo fixed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,899,2017-07-14T11:57:06Z,2017-07-18T07:17:06Z,2017-07-18T07:17:06Z,CLOSED,False,51,27,4,https://github.com/michalvasko,Minor fix,5,[],https://github.com/sysrepo/sysrepo/pull/899,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/899#issuecomment-315346930,"Description
Added suitable data node types, there are models only with RPCs and/or notifications. One possible NULL dereference fixed and also a typo fixed.","Codecov Report

Merging #899 into devel will decrease coverage by 0.23%.
The diff coverage is 76.92%.

@@            Coverage Diff             @@
##            devel     #899      +/-   ##
==========================================
- Coverage   86.17%   85.94%   -0.23%     
==========================================
  Files          31       31              
  Lines       24554    24578      +24     
  Branches     4357     4357              
==========================================
- Hits        21159    21123      -36     
- Misses       3395     3455      +60",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,900,2017-07-14T18:03:20Z,2017-07-17T07:00:04Z,2017-07-17T07:00:04Z,MERGED,True,5,4,2,https://github.com/jktjkt,tests: Do not assume a particular build directory layout,1,[],https://github.com/sysrepo/sysrepo/pull/900,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/900,"CMake is quite happy to support an arbitrary location of source and build directories. This code assumed that we're always building within a one-level deep subdirectory (e.g., build/) of the top-level source directory. That's a wrong assumption; it's better to hard-code these paths into test binaries via CMake.","CMake is quite happy to support an arbitrary location of source and build directories. This code assumed that we're always building within a one-level deep subdirectory (e.g., build/) of the top-level source directory. That's a wrong assumption; it's better to hard-code these paths into test binaries via CMake.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,900,2017-07-14T18:03:20Z,2017-07-17T07:00:04Z,2017-07-17T07:00:04Z,MERGED,True,5,4,2,https://github.com/jktjkt,tests: Do not assume a particular build directory layout,1,[],https://github.com/sysrepo/sysrepo/pull/900,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/900#issuecomment-315432949,"CMake is quite happy to support an arbitrary location of source and build directories. This code assumed that we're always building within a one-level deep subdirectory (e.g., build/) of the top-level source directory. That's a wrong assumption; it's better to hard-code these paths into test binaries via CMake.","Codecov Report

Merging #900 into devel will not change coverage.
The diff coverage is n/a.

@@           Coverage Diff           @@
##            devel     #900   +/-   ##
=======================================
  Coverage   85.93%   85.93%           
=======================================
  Files          31       31           
  Lines       24569    24569           
  Branches     4354     4354           
=======================================
  Hits        21113    21113           
  Misses       3456     3456",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,900,2017-07-14T18:03:20Z,2017-07-17T07:00:04Z,2017-07-17T07:00:04Z,MERGED,True,5,4,2,https://github.com/jktjkt,tests: Do not assume a particular build directory layout,1,[],https://github.com/sysrepo/sysrepo/pull/900,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/900#issuecomment-315680157,"CMake is quite happy to support an arbitrary location of source and build directories. This code assumed that we're always building within a one-level deep subdirectory (e.g., build/) of the top-level source directory. That's a wrong assumption; it's better to hard-code these paths into test binaries via CMake.","Hi,
there are much more problems with the tests and even though it would be great if we could fix them all, it will not be anytime soon. Nevertheless, this is a step in the right direction, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,903,2017-07-18T07:23:06Z,2017-07-18T08:26:01Z,2017-07-19T07:30:15Z,MERGED,True,51,30,5,https://github.com/michalvasko,Minor fixes,6,[],https://github.com/sysrepo/sysrepo/pull/903,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/903,"Description
Added more suitable data nodes when looking for one, avoid possible NULL dereference.","Description
Added more suitable data nodes when looking for one, avoid possible NULL dereference.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,903,2017-07-18T07:23:06Z,2017-07-18T08:26:01Z,2017-07-19T07:30:15Z,MERGED,True,51,30,5,https://github.com/michalvasko,Minor fixes,6,[],https://github.com/sysrepo/sysrepo/pull/903,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/903#issuecomment-315980395,"Description
Added more suitable data nodes when looking for one, avoid possible NULL dereference.","Codecov Report

Merging #903 into devel will decrease coverage by 0.07%.
The diff coverage is 77.78%.

@@            Coverage Diff            @@
##            devel    #903      +/-   ##
=========================================
- Coverage   86.17%   86.1%   -0.07%     
=========================================
  Files          31      31              
  Lines       24554   24563       +9     
  Branches     4357    4359       +2     
=========================================
- Hits        21159   21149      -10     
- Misses       3395    3414      +19",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,904,2017-07-19T07:26:43Z,2017-07-19T07:51:20Z,2017-07-20T06:55:35Z,MERGED,True,9,4,1,https://github.com/michalvasko,Candidate file locking,2,[],https://github.com/sysrepo/sysrepo/pull/904,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/904,"Description
Candidate files do not exist in the filesystem, but are still used for locking in one session, so do not actually unlock those.","Description
Candidate files do not exist in the filesystem, but are still used for locking in one session, so do not actually unlock those.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,904,2017-07-19T07:26:43Z,2017-07-19T07:51:20Z,2017-07-20T06:55:35Z,MERGED,True,9,4,1,https://github.com/michalvasko,Candidate file locking,2,[],https://github.com/sysrepo/sysrepo/pull/904,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/904#issuecomment-316299850,"Description
Candidate files do not exist in the filesystem, but are still used for locking in one session, so do not actually unlock those.","Codecov Report

Merging #904 into devel will increase coverage by 0.05%.
The diff coverage is 85.71%.

@@            Coverage Diff            @@
##           devel     #904      +/-   ##
=========================================
+ Coverage   86.1%   86.15%   +0.05%     
=========================================
  Files         31       31              
  Lines      24563    24566       +3     
  Branches    4359     4360       +1     
=========================================
+ Hits       21149    21163      +14     
+ Misses      3414     3403      -11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,906,2017-07-28T11:54:10Z,2017-07-28T12:36:17Z,2017-07-28T13:00:35Z,MERGED,True,652,393,31,https://github.com/michalvasko,Paths fix,9,[],https://github.com/sysrepo/sysrepo/pull/906,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/906,"Description
Primarily, this pull requests adjusts all XPath and path use for most recent libyang version. Some additional minor fixes are also included.
Test case
Affected test cases updated/modified.","Description
Primarily, this pull requests adjusts all XPath and path use for most recent libyang version. Some additional minor fixes are also included.
Test case
Affected test cases updated/modified.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,906,2017-07-28T11:54:10Z,2017-07-28T12:36:17Z,2017-07-28T13:00:35Z,MERGED,True,652,393,31,https://github.com/michalvasko,Paths fix,9,[],https://github.com/sysrepo/sysrepo/pull/906,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/906#issuecomment-318635516,"Description
Primarily, this pull requests adjusts all XPath and path use for most recent libyang version. Some additional minor fixes are also included.
Test case
Affected test cases updated/modified.","Codecov Report

Merging #906 into devel will decrease coverage by 0.04%.
The diff coverage is 83.13%.

@@            Coverage Diff             @@
##            devel     #906      +/-   ##
==========================================
- Coverage   86.14%   86.09%   -0.04%     
==========================================
  Files          31       31              
  Lines       24566    24731     +165     
  Branches     4360     4413      +53     
==========================================
+ Hits        21160    21292     +132     
- Misses       3406     3439      +33",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,907,2017-08-03T12:50:02Z,2017-08-03T13:25:07Z,2017-08-04T07:18:37Z,MERGED,True,14,14,3,https://github.com/michalvasko,libyang instance-identifier format changed,1,[],https://github.com/sysrepo/sysrepo/pull/907,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/907,"Description
libyang was internally using XML instance-identifier format (all nodes qualified), but now it uses standard JSON because it actually was an oversight.
Test case
Affected tests updated.","Description
libyang was internally using XML instance-identifier format (all nodes qualified), but now it uses standard JSON because it actually was an oversight.
Test case
Affected tests updated.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,907,2017-08-03T12:50:02Z,2017-08-03T13:25:07Z,2017-08-04T07:18:37Z,MERGED,True,14,14,3,https://github.com/michalvasko,libyang instance-identifier format changed,1,[],https://github.com/sysrepo/sysrepo/pull/907,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/907#issuecomment-319962744,"Description
libyang was internally using XML instance-identifier format (all nodes qualified), but now it uses standard JSON because it actually was an oversight.
Test case
Affected tests updated.","Codecov Report

Merging #907 into devel will not change coverage.
The diff coverage is n/a.

@@           Coverage Diff           @@
##            devel     #907   +/-   ##
=======================================
  Coverage   86.09%   86.09%           
=======================================
  Files          31       31           
  Lines       24731    24731           
  Branches     4413     4413           
=======================================
  Hits        21292    21292           
  Misses       3439     3439",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,908,2017-08-07T09:16:28Z,2017-08-07T10:56:18Z,2017-08-07T11:00:45Z,MERGED,True,12,8,4,https://github.com/michalvasko,NACM default state change,2,[],https://github.com/sysrepo/sysrepo/pull/908,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/908,"Description
NACM is off by default now.","Description
NACM is off by default now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,908,2017-08-07T09:16:28Z,2017-08-07T10:56:18Z,2017-08-07T11:00:45Z,MERGED,True,12,8,4,https://github.com/michalvasko,NACM default state change,2,[],https://github.com/sysrepo/sysrepo/pull/908,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/908#issuecomment-320615576,"Description
NACM is off by default now.","Codecov Report

Merging #908 into devel will decrease coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #908      +/-   ##
==========================================
- Coverage   86.09%   86.09%   -0.01%     
==========================================
  Files          31       31              
  Lines       24731    24731              
  Branches     4413     4413              
==========================================
- Hits        21292    21290       -2     
- Misses       3439     3441       +2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/910,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909","Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/910#issuecomment-320992310,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909",Problem 3. is a bit tricky because mkstemps is not defined at all in uClibc. So I have to add custom function definition if mkstemps is missing or change the code logic for sysrepo plugin.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/910#issuecomment-321539891,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909","Hi,
if you want these changes to make it into the release, please fix the problem with macros (as shown by travis compilation). Regarding mkstemps, I think it would be fine to use mktemp, then add the suffix and open the file as an implementation of mkstemps on systems that do not have it. That is quite easy to implement.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/910#issuecomment-321548107,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909","Hi Michal,
I am working on the macro issue, for the mkstemps issue I am OK with that solution because it would be rarely used (only when mkstemps is not available). An alternative would be to create a file and a socket, the file would be a check of uniqueness, and when the socket is unlinked I would delete the file.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/910#issuecomment-321607558,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909","Hi Michal,
I made the changes but the build fails and I'm not sure why.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/910#issuecomment-321758811,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909","Hi Mislav,
I submitted a review, but regarding failing tests, we will look at it and fix it, do not trouble yourself with it, it is independent of your pull request.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/codecov-io,7,https://github.com/sysrepo/sysrepo/pull/910#issuecomment-321790418,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909","Codecov Report

Merging #910 into devel will decrease coverage by <.01%.
The diff coverage is 100%.

@@           Coverage Diff            @@
##           devel    #910      +/-   ##
========================================
- Coverage   86.1%   86.1%   -<.01%     
========================================
  Files         31      31              
  Lines      24731   24733       +2     
  Branches    4413    4412       -1     
========================================
+ Hits       21294   21295       +1     
- Misses      3437    3438       +1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/michalvasko,8,https://github.com/sysrepo/sysrepo/pull/910#issuecomment-321791704,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909","Hi Mislav,
I committed what I meant by those error checks, no matter. Also, the tests passed now, it was a libyang problem.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,910,2017-08-08T15:27:58Z,2017-08-11T11:49:03Z,2020-01-15T07:49:54Z,MERGED,True,18,6,3,https://github.com/mislavn,Uclibc,4,[],https://github.com/sysrepo/sysrepo/pull/910,https://github.com/mislavn,9,https://github.com/sysrepo/sysrepo/pull/910#issuecomment-321843357,"Description
Patches to fix broken build in OpenWrt for an older uClibc toolchain. It fixes the problem under 1. and 2.
Closure
Put closes #909","Hi Michal,
thank you.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,911,2017-08-10T12:51:44Z,2017-08-10T13:03:25Z,2017-08-10T13:03:25Z,CLOSED,False,250,102,27,https://github.com/michalvasko,Doc and formatting update,2,[],https://github.com/sysrepo/sysrepo/pull/911,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/911,"Description
Documentation updated and some minor formatting improvements. Also, no warnings should be displayed when building the documentation.","Description
Documentation updated and some minor formatting improvements. Also, no warnings should be displayed when building the documentation.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,912,2017-08-11T11:14:53Z,2017-08-11T11:49:29Z,2017-08-11T11:49:35Z,MERGED,True,311,95,30,https://github.com/michalvasko,General documentation updates and fixes,1,[],https://github.com/sysrepo/sysrepo/pull/912,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/912,"Description
Documentation updated and all doxygen warnings fixed.","Description
Documentation updated and all doxygen warnings fixed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,912,2017-08-11T11:14:53Z,2017-08-11T11:49:29Z,2017-08-11T11:49:35Z,MERGED,True,311,95,30,https://github.com/michalvasko,General documentation updates and fixes,1,[],https://github.com/sysrepo/sysrepo/pull/912,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/912#issuecomment-321788379,"Description
Documentation updated and all doxygen warnings fixed.","Codecov Report

Merging #912 into devel will decrease coverage by 0.01%.
The diff coverage is 100%.

@@            Coverage Diff            @@
##           devel     #912      +/-   ##
=========================================
- Coverage   86.1%   86.09%   -0.01%     
=========================================
  Files         31       31              
  Lines      24731    24731              
  Branches    4413     4413              
=========================================
- Hits       21294    21291       -3     
- Misses      3437     3440       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,913,2017-08-11T12:01:20Z,2017-08-11T12:32:02Z,2017-08-11T12:32:07Z,MERGED,True,4,0,1,https://github.com/michalvasko,Check for and define macro HAVE_MKSTEMPS,1,[],https://github.com/sysrepo/sysrepo/pull/913,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/913,"Description
Check for function mkstemps and define a macro if found. Part of #910.","Description
Check for function mkstemps and define a macro if found. Part of #910.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,913,2017-08-11T12:01:20Z,2017-08-11T12:32:02Z,2017-08-11T12:32:07Z,MERGED,True,4,0,1,https://github.com/michalvasko,Check for and define macro HAVE_MKSTEMPS,1,[],https://github.com/sysrepo/sysrepo/pull/913,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/913#issuecomment-321797931,"Description
Check for function mkstemps and define a macro if found. Part of #910.","Codecov Report

Merging #913 into devel will decrease coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##           devel     #913      +/-   ##
=========================================
- Coverage   86.1%   86.09%   -0.01%     
=========================================
  Files         31       31              
  Lines      24734    24732       -2     
  Branches    4412     4412              
=========================================
- Hits       21297    21292       -5     
- Misses      3437     3440       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,917,2017-08-14T12:11:34Z,2017-08-14T12:54:39Z,2017-08-14T12:54:39Z,MERGED,True,3057,2323,76,https://github.com/michalvasko,Merge of devel to master,164,[],https://github.com/sysrepo/sysrepo/pull/917,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/917,"Description
Devel merge into master - new release version 0.7.","Description
Devel merge into master - new release version 0.7.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,917,2017-08-14T12:11:34Z,2017-08-14T12:54:39Z,2017-08-14T12:54:39Z,MERGED,True,3057,2323,76,https://github.com/michalvasko,Merge of devel to master,164,[],https://github.com/sysrepo/sysrepo/pull/917,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/917#issuecomment-322176975,"Description
Devel merge into master - new release version 0.7.","Codecov Report

Merging #917 into master will decrease coverage by 0.36%.
The diff coverage is 80.16%.

@@            Coverage Diff             @@
##           master     #917      +/-   ##
==========================================
- Coverage   86.47%   86.11%   -0.36%     
==========================================
  Files          31       31              
  Lines       24436    24732     +296     
  Branches     4319     4412      +93     
==========================================
+ Hits        21129    21297     +168     
- Misses       3307     3435     +128",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,918,2017-08-14T12:34:50Z,2017-08-15T12:44:44Z,2017-08-15T12:44:44Z,MERGED,True,2,2,1,https://github.com/michalvasko,Devel bump to version 0.7.0,1,[],https://github.com/sysrepo/sysrepo/pull/918,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/918,"Description
Bump devel version to match master.","Description
Bump devel version to match master.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,918,2017-08-14T12:34:50Z,2017-08-15T12:44:44Z,2017-08-15T12:44:44Z,MERGED,True,2,2,1,https://github.com/michalvasko,Devel bump to version 0.7.0,1,[],https://github.com/sysrepo/sysrepo/pull/918,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/918#issuecomment-322183660,"Description
Bump devel version to match master.","Codecov Report

Merging #918 into devel will increase coverage by 0.02%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #918      +/-   ##
==========================================
+ Coverage   86.09%   86.11%   +0.02%     
==========================================
  Files          31       31              
  Lines       24732    24731       -1     
  Branches     4412     4412              
==========================================
+ Hits        21293    21297       +4     
+ Misses       3439     3434       -5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,921,2017-08-22T14:25:44Z,2017-09-04T09:59:10Z,2017-09-14T15:03:39Z,MERGED,True,3,2,2,https://github.com/jktjkt,Merge master into devel,15,[],https://github.com/sysrepo/sysrepo/pull/921,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/921,"Without this merge, git says that this branch is not an ancestor of either the 0.6 or 0.7 tags, and therefore git describe --tags only refers to v0.5. That was misleading.
There were also two minor changes which were not part of devel by accident.","Without this merge, git says that this branch is not an ancestor of either the 0.6 or 0.7 tags, and therefore git describe --tags only refers to v0.5. That was misleading.
There were also two minor changes which were not part of devel by accident.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,921,2017-08-22T14:25:44Z,2017-09-04T09:59:10Z,2017-09-14T15:03:39Z,MERGED,True,3,2,2,https://github.com/jktjkt,Merge master into devel,15,[],https://github.com/sysrepo/sysrepo/pull/921,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/921#issuecomment-326916586,"Without this merge, git says that this branch is not an ancestor of either the 0.6 or 0.7 tags, and therefore git describe --tags only refers to v0.5. That was misleading.
There were also two minor changes which were not part of devel by accident.","Codecov Report

Merging #921 into devel will decrease coverage by 0.04%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##            devel    #921      +/-   ##
=========================================
- Coverage   86.14%   86.1%   -0.04%     
=========================================
  Files          31      31              
  Lines       24731   24731              
  Branches     4412    4412              
=========================================
- Hits        21304   21294      -10     
- Misses       3427    3437      +10",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,923,2017-08-23T18:14:51Z,2017-09-22T13:08:57Z,2017-09-22T13:08:58Z,MERGED,True,60,12,6,https://github.com/jktjkt,Support handling of pending events with a custom event loop,2,[],https://github.com/sysrepo/sysrepo/pull/923,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/923,"When sysrepo is running with its own event loop, it ensures that all pending events have been processed when the subscription manager gets destroyed. This patch adds an equivalent functionality for scenarios where the application provides its own event loop.
This functionality requires a real blocking call, so it is not enough to reuse the existing event handling that is based on asynchronous writes to a notification pipe. A new callback function was needed.
I had to add both a new global static to client_library.c and an extra member to the cl_sm_ctx_t because sr_fd_watcher_init and cl_sm_cleanup are defined in separate translation units.
Technically speaking, it's still possible to call sr_fd_watcher_init with a NULL synchronizing callback. However, doing so results in some events not being handled if, e.g., the event loop runs in a different thread and the subscription manager gets destroyed ""too soon"", prior to the event loop having handled ""everything"".
Cc: @TrinityCoder","When sysrepo is running with its own event loop, it ensures that all pending events have been processed when the subscription manager gets destroyed. This patch adds an equivalent functionality for scenarios where the application provides its own event loop.
This functionality requires a real blocking call, so it is not enough to reuse the existing event handling that is based on asynchronous writes to a notification pipe. A new callback function was needed.
I had to add both a new global static to client_library.c and an extra member to the cl_sm_ctx_t because sr_fd_watcher_init and cl_sm_cleanup are defined in separate translation units.
Technically speaking, it's still possible to call sr_fd_watcher_init with a NULL synchronizing callback. However, doing so results in some events not being handled if, e.g., the event loop runs in a different thread and the subscription manager gets destroyed ""too soon"", prior to the event loop having handled ""everything"".
Cc: @TrinityCoder",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,923,2017-08-23T18:14:51Z,2017-09-22T13:08:57Z,2017-09-22T13:08:58Z,MERGED,True,60,12,6,https://github.com/jktjkt,Support handling of pending events with a custom event loop,2,[],https://github.com/sysrepo/sysrepo/pull/923,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/923#issuecomment-326927259,"When sysrepo is running with its own event loop, it ensures that all pending events have been processed when the subscription manager gets destroyed. This patch adds an equivalent functionality for scenarios where the application provides its own event loop.
This functionality requires a real blocking call, so it is not enough to reuse the existing event handling that is based on asynchronous writes to a notification pipe. A new callback function was needed.
I had to add both a new global static to client_library.c and an extra member to the cl_sm_ctx_t because sr_fd_watcher_init and cl_sm_cleanup are defined in separate translation units.
Technically speaking, it's still possible to call sr_fd_watcher_init with a NULL synchronizing callback. However, doing so results in some events not being handled if, e.g., the event loop runs in a different thread and the subscription manager gets destroyed ""too soon"", prior to the event loop having handled ""everything"".
Cc: @TrinityCoder","Codecov Report

Merging #923 into devel will decrease coverage by 0.09%.
The diff coverage is 84.62%.

@@            Coverage Diff             @@
##            devel     #923      +/-   ##
==========================================
- Coverage   86.14%   86.05%   -0.09%     
==========================================
  Files          31       31              
  Lines       24731    24738       +7     
  Branches     4412     4411       -1     
==========================================
- Hits        21304    21287      -17     
- Misses       3427     3451      +24",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,923,2017-08-23T18:14:51Z,2017-09-22T13:08:57Z,2017-09-22T13:08:58Z,MERGED,True,60,12,6,https://github.com/jktjkt,Support handling of pending events with a custom event loop,2,[],https://github.com/sysrepo/sysrepo/pull/923,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/923#issuecomment-329443472,"When sysrepo is running with its own event loop, it ensures that all pending events have been processed when the subscription manager gets destroyed. This patch adds an equivalent functionality for scenarios where the application provides its own event loop.
This functionality requires a real blocking call, so it is not enough to reuse the existing event handling that is based on asynchronous writes to a notification pipe. A new callback function was needed.
I had to add both a new global static to client_library.c and an extra member to the cl_sm_ctx_t because sr_fd_watcher_init and cl_sm_cleanup are defined in separate translation units.
Technically speaking, it's still possible to call sr_fd_watcher_init with a NULL synchronizing callback. However, doing so results in some events not being handled if, e.g., the event loop runs in a different thread and the subscription manager gets destroyed ""too soon"", prior to the event loop having handled ""everything"".
Cc: @TrinityCoder","Hi,
firstly, sorry it took me this long to review your patch. It looks fine and will be merged, but we would like to wait around a week until we merge it. The reason is that we want to release a new sysrepo next week with only bugfixes, no API changes. Hope it is not a problem.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,923,2017-08-23T18:14:51Z,2017-09-22T13:08:57Z,2017-09-22T13:08:58Z,MERGED,True,60,12,6,https://github.com/jktjkt,Support handling of pending events with a custom event loop,2,[],https://github.com/sysrepo/sysrepo/pull/923,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/923#issuecomment-329510555,"When sysrepo is running with its own event loop, it ensures that all pending events have been processed when the subscription manager gets destroyed. This patch adds an equivalent functionality for scenarios where the application provides its own event loop.
This functionality requires a real blocking call, so it is not enough to reuse the existing event handling that is based on asynchronous writes to a notification pipe. A new callback function was needed.
I had to add both a new global static to client_library.c and an extra member to the cl_sm_ctx_t because sr_fd_watcher_init and cl_sm_cleanup are defined in separate translation units.
Technically speaking, it's still possible to call sr_fd_watcher_init with a NULL synchronizing callback. However, doing so results in some events not being handled if, e.g., the event loop runs in a different thread and the subscription manager gets destroyed ""too soon"", prior to the event loop having handled ""everything"".
Cc: @TrinityCoder","@michalvasko , no problem, and thanks for looking into this.
This actually required a follow-up fix, check the other commit I just pushed. Thanks to @TrinityCoder for the initial debugging.
I wonder if I took a reasonable approach here. What confuses me is that apparently the lifetime of the event loop is tied to the existance of any subscription, yet the FD handlers for custom watching are notified about any FD, including those for a connection, not just subscriptions. I would have expected the code to only tear down the event loop afetr the last connection gets closed, but my understanding of SR's internals is kinda small :).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,923,2017-08-23T18:14:51Z,2017-09-22T13:08:57Z,2017-09-22T13:08:58Z,MERGED,True,60,12,6,https://github.com/jktjkt,Support handling of pending events with a custom event loop,2,[],https://github.com/sysrepo/sysrepo/pull/923,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/923#issuecomment-329696069,"When sysrepo is running with its own event loop, it ensures that all pending events have been processed when the subscription manager gets destroyed. This patch adds an equivalent functionality for scenarios where the application provides its own event loop.
This functionality requires a real blocking call, so it is not enough to reuse the existing event handling that is based on asynchronous writes to a notification pipe. A new callback function was needed.
I had to add both a new global static to client_library.c and an extra member to the cl_sm_ctx_t because sr_fd_watcher_init and cl_sm_cleanup are defined in separate translation units.
Technically speaking, it's still possible to call sr_fd_watcher_init with a NULL synchronizing callback. However, doing so results in some events not being handled if, e.g., the event loop runs in a different thread and the subscription manager gets destroyed ""too soon"", prior to the event loop having handled ""everything"".
Cc: @TrinityCoder","Hi,
unfortunately I do not know much about the low-level mechanisms either, so you are on your own here for now. However, it is possible I will look into it later, before the next major sysrepo release, and I will then consider what you are saying.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,927,2017-09-12T12:36:39Z,2017-09-12T14:33:30Z,2017-09-13T07:12:19Z,MERGED,True,105,57,4,https://github.com/michalvasko,Skip initial commit validation,2,[],https://github.com/sysrepo/sysrepo/pull/927,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/927,"Description
Initial datastore validation before every commit is redundant and hence was removed.
Closure
Fixes #892","Description
Initial datastore validation before every commit is redundant and hence was removed.
Closure
Fixes #892",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,927,2017-09-12T12:36:39Z,2017-09-12T14:33:30Z,2017-09-13T07:12:19Z,MERGED,True,105,57,4,https://github.com/michalvasko,Skip initial commit validation,2,[],https://github.com/sysrepo/sysrepo/pull/927,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/927#issuecomment-328848120,"Description
Initial datastore validation before every commit is redundant and hence was removed.
Closure
Fixes #892","Codecov Report

Merging #927 into devel will decrease coverage by 0.01%.
The diff coverage is 78%.

@@            Coverage Diff             @@
##            devel     #927      +/-   ##
==========================================
- Coverage   86.06%   86.05%   -0.01%     
==========================================
  Files          31       31              
  Lines       24731    24753      +22     
  Branches     4412     4420       +8     
==========================================
+ Hits        21283    21300      +17     
- Misses       3448     3453       +5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,928,2017-09-13T11:19:41Z,2017-09-13T14:47:54Z,2017-09-14T07:09:36Z,MERGED,True,17,7,2,https://github.com/michalvasko,BUGFIX whole-module subscriptions did not match any notifications,1,[],https://github.com/sysrepo/sysrepo/pull/928,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/928,"Description
Subscriptions for whole modules use a special format, which was not recognized and subscriptions were not delivered even when they should have been.
Closure
Fixes #922","Description
Subscriptions for whole modules use a special format, which was not recognized and subscriptions were not delivered even when they should have been.
Closure
Fixes #922",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,928,2017-09-13T11:19:41Z,2017-09-13T14:47:54Z,2017-09-14T07:09:36Z,MERGED,True,17,7,2,https://github.com/michalvasko,BUGFIX whole-module subscriptions did not match any notifications,1,[],https://github.com/sysrepo/sysrepo/pull/928,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/928#issuecomment-329141857,"Description
Subscriptions for whole modules use a special format, which was not recognized and subscriptions were not delivered even when they should have been.
Closure
Fixes #922","Codecov Report

Merging #928 into devel will increase coverage by 0.02%.
The diff coverage is 83.33%.

@@            Coverage Diff             @@
##            devel     #928      +/-   ##
==========================================
+ Coverage   86.05%   86.07%   +0.02%     
==========================================
  Files          31       31              
  Lines       24753    24760       +7     
  Branches     4420     4422       +2     
==========================================
+ Hits        21301    21311      +10     
+ Misses       3452     3449       -3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,928,2017-09-13T11:19:41Z,2017-09-13T14:47:54Z,2017-09-14T07:09:36Z,MERGED,True,17,7,2,https://github.com/michalvasko,BUGFIX whole-module subscriptions did not match any notifications,1,[],https://github.com/sysrepo/sysrepo/pull/928,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/928#issuecomment-329155896,"Description
Subscriptions for whole modules use a special format, which was not recognized and subscriptions were not delivered even when they should have been.
Closure
Fixes #922","I had to change our code from subscribing to /myModule:*//. which no longer works, to use just myModule. Is that by design? If so, then I can confirm that the code works.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,928,2017-09-13T11:19:41Z,2017-09-13T14:47:54Z,2017-09-14T07:09:36Z,MERGED,True,17,7,2,https://github.com/michalvasko,BUGFIX whole-module subscriptions did not match any notifications,1,[],https://github.com/sysrepo/sysrepo/pull/928,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/928#issuecomment-329160037,"Description
Subscriptions for whole modules use a special format, which was not recognized and subscriptions were not delivered even when they should have been.
Closure
Fixes #922","Hi,
yes, the path was changed because libyang no longer supports special XPath paths like * or ., documentation was also updated.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,930,2017-09-14T09:04:57Z,2017-09-14T10:21:24Z,2017-09-14T10:27:17Z,MERGED,True,38,89,4,https://github.com/michalvasko,BUGFIX sr_get_* support for full xpath,1,[],https://github.com/sysrepo/sysrepo/pull/930,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/930,"Description
Data were retrieved correctly, but in case
of an error, teh path was checked against schema
and more detailed error was generated. However,
libyang no longer supports such evaluations and
implementing it all (xpath on schema) in sysrepo
would be a duplication of previous libyang
that got removed. So, this schema check was removed.
Specifically, SR_ERR_BAD_ELEMENT is no longer returned
by these functions, no other visible change happened.
Closure
Fixes #920
Fixes CESNET/netopeer2#172","Description
Data were retrieved correctly, but in case
of an error, teh path was checked against schema
and more detailed error was generated. However,
libyang no longer supports such evaluations and
implementing it all (xpath on schema) in sysrepo
would be a duplication of previous libyang
that got removed. So, this schema check was removed.
Specifically, SR_ERR_BAD_ELEMENT is no longer returned
by these functions, no other visible change happened.
Closure
Fixes #920
Fixes CESNET/netopeer2#172",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,930,2017-09-14T09:04:57Z,2017-09-14T10:21:24Z,2017-09-14T10:27:17Z,MERGED,True,38,89,4,https://github.com/michalvasko,BUGFIX sr_get_* support for full xpath,1,[],https://github.com/sysrepo/sysrepo/pull/930,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/930#issuecomment-329438704,"Description
Data were retrieved correctly, but in case
of an error, teh path was checked against schema
and more detailed error was generated. However,
libyang no longer supports such evaluations and
implementing it all (xpath on schema) in sysrepo
would be a duplication of previous libyang
that got removed. So, this schema check was removed.
Specifically, SR_ERR_BAD_ELEMENT is no longer returned
by these functions, no other visible change happened.
Closure
Fixes #920
Fixes CESNET/netopeer2#172","Codecov Report

Merging #930 into devel will decrease coverage by 0.01%.
The diff coverage is 72.22%.

@@            Coverage Diff             @@
##            devel     #930      +/-   ##
==========================================
- Coverage   86.06%   86.05%   -0.01%     
==========================================
  Files          31       31              
  Lines       24759    24731      -28     
  Branches     4422     4408      -14     
==========================================
- Hits        21307    21280      -27     
+ Misses       3452     3451       -1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,931,2017-09-15T11:35:14Z,2017-09-19T07:46:57Z,2017-09-19T07:47:57Z,MERGED,True,4,4,1,https://github.com/michalvasko,BUGFIX separate node test from predicate first,1,[],https://github.com/sysrepo/sysrepo/pull/931,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/931,"Description
Otherwise some characters could be found in the predicate and thought to be in the node test such as colon for a prefix in the predicate.
Closure
Fixes #926","Description
Otherwise some characters could be found in the predicate and thought to be in the node test such as colon for a prefix in the predicate.
Closure
Fixes #926",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,931,2017-09-15T11:35:14Z,2017-09-19T07:46:57Z,2017-09-19T07:47:57Z,MERGED,True,4,4,1,https://github.com/michalvasko,BUGFIX separate node test from predicate first,1,[],https://github.com/sysrepo/sysrepo/pull/931,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/931#issuecomment-329800514,"Description
Otherwise some characters could be found in the predicate and thought to be in the node test such as colon for a prefix in the predicate.
Closure
Fixes #926","Codecov Report

Merging #931 into devel will decrease coverage by 0.01%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #931      +/-   ##
==========================================
- Coverage   86.05%   86.04%   -0.01%     
==========================================
  Files          31       31              
  Lines       24731    24731              
  Branches     4408     4408              
==========================================
- Hits        21281    21278       -3     
- Misses       3450     3453       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,932,2017-09-20T10:38:43Z,2017-09-21T07:52:13Z,2017-09-21T07:53:35Z,MERGED,True,100,96,9,https://github.com/michalvasko,Copy-config running backup restore removed,3,[],https://github.com/sysrepo/sysrepo/pull/932,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/932,"Description
When performing copy-config to running, uncommitted running changes get discarded. Keeping them is quite challenging implementation-wise, but is generally useless and not desired anyway.
Closure
Fixes #890 (this replaces the previous commit 580be52)","Description
When performing copy-config to running, uncommitted running changes get discarded. Keeping them is quite challenging implementation-wise, but is generally useless and not desired anyway.
Closure
Fixes #890 (this replaces the previous commit 580be52)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,932,2017-09-20T10:38:43Z,2017-09-21T07:52:13Z,2017-09-21T07:53:35Z,MERGED,True,100,96,9,https://github.com/michalvasko,Copy-config running backup restore removed,3,[],https://github.com/sysrepo/sysrepo/pull/932,https://github.com/rkrejci,2,https://github.com/sysrepo/sysrepo/pull/932#issuecomment-331080813,"Description
When performing copy-config to running, uncommitted running changes get discarded. Keeping them is quite challenging implementation-wise, but is generally useless and not desired anyway.
Closure
Fixes #890 (this replaces the previous commit 580be52)","Note not passing tests - Travis wrongly assigned tests of #933, tests of #932 actually passes",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,933,2017-09-20T11:18:45Z,2017-09-20T11:41:07Z,2017-09-21T07:25:19Z,MERGED,True,2832,1769,72,https://github.com/michalvasko,Coverity devel check,146,[],https://github.com/sysrepo/sysrepo/pull/933,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/933,"Description
Merge all recent devel changes and check them using coverity.","Description
Merge all recent devel changes and check them using coverity.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,933,2017-09-20T11:18:45Z,2017-09-20T11:41:07Z,2017-09-21T07:25:19Z,MERGED,True,2832,1769,72,https://github.com/michalvasko,Coverity devel check,146,[],https://github.com/sysrepo/sysrepo/pull/933,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/933#issuecomment-330821844,"Description
Merge all recent devel changes and check them using coverity.","Codecov Report

Merging #933 into devel-coverity will decrease coverage by 0.09%.
The diff coverage is 79.14%.

@@                Coverage Diff                 @@
##           devel-coverity     #933      +/-   ##
==================================================
- Coverage           86.06%   85.97%   -0.09%     
==================================================
  Files                  31       31              
  Lines               24328    24731     +403     
  Branches             4288     4412     +124     
==================================================
+ Hits                20936    21261     +325     
- Misses               3392     3470      +78",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,934,2017-09-20T12:44:04Z,2017-09-21T07:21:54Z,2017-09-21T07:49:40Z,MERGED,True,11,12,3,https://github.com/michalvasko,Coverity bug fixes,1,[],https://github.com/sysrepo/sysrepo/pull/934,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/934,"Description
Small bugfixes of coverity-found bugs.","Description
Small bugfixes of coverity-found bugs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,934,2017-09-20T12:44:04Z,2017-09-21T07:21:54Z,2017-09-21T07:49:40Z,MERGED,True,11,12,3,https://github.com/michalvasko,Coverity bug fixes,1,[],https://github.com/sysrepo/sysrepo/pull/934,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/934#issuecomment-330905908,"Description
Small bugfixes of coverity-found bugs.","Codecov Report

Merging #934 into devel will increase coverage by 0.05%.
The diff coverage is 72.73%.

@@            Coverage Diff             @@
##            devel     #934      +/-   ##
==========================================
+ Coverage   86.04%   86.09%   +0.05%     
==========================================
  Files          31       31              
  Lines       24732    24731       -1     
  Branches     4408     4407       -1     
==========================================
+ Hits        21279    21290      +11     
+ Misses       3453     3441      -12",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,936,2017-09-21T11:15:52Z,2017-09-21T11:47:44Z,2017-09-21T11:47:48Z,MERGED,True,1,1,1,https://github.com/michalvasko,Bump to version 0.7.1,1,[],https://github.com/sysrepo/sysrepo/pull/936,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/936,"Description
Version bump.","Description
Version bump.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,936,2017-09-21T11:15:52Z,2017-09-21T11:47:44Z,2017-09-21T11:47:48Z,MERGED,True,1,1,1,https://github.com/michalvasko,Bump to version 0.7.1,1,[],https://github.com/sysrepo/sysrepo/pull/936,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/936#issuecomment-331129765,"Description
Version bump.","Codecov Report

Merging #936 into devel will increase coverage by 0.04%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##           devel     #936      +/-   ##
=========================================
+ Coverage   85.9%   85.93%   +0.04%     
=========================================
  Files         31       31              
  Lines      24731    24731              
  Branches    4411     4411              
=========================================
+ Hits       21243    21252       +9     
+ Misses      3488     3479       -9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,937,2017-09-21T11:18:10Z,2017-09-21T12:12:57Z,2017-09-21T12:12:57Z,MERGED,True,256,246,16,https://github.com/michalvasko,Devel merge,19,[],https://github.com/sysrepo/sysrepo/pull/937,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/937,"Description
Merge of devel into master creating 0.7.1 release. Includes only bugfixes and optimizations.","Description
Merge of devel into master creating 0.7.1 release. Includes only bugfixes and optimizations.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,937,2017-09-21T11:18:10Z,2017-09-21T12:12:57Z,2017-09-21T12:12:57Z,MERGED,True,256,246,16,https://github.com/michalvasko,Devel merge,19,[],https://github.com/sysrepo/sysrepo/pull/937,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/937#issuecomment-331131651,"Description
Merge of devel into master creating 0.7.1 release. Includes only bugfixes and optimizations.","Codecov Report

Merging #937 into master will decrease coverage by 0.21%.
The diff coverage is 80.59%.

@@            Coverage Diff             @@
##           master     #937      +/-   ##
==========================================
- Coverage   86.14%   85.93%   -0.21%     
==========================================
  Files          31       31              
  Lines       24732    24731       -1     
  Branches     4412     4411       -1     
==========================================
- Hits        21305    21252      -53     
- Misses       3427     3479      +52",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,938,2017-09-22T11:32:28Z,2017-09-22T12:13:22Z,2017-09-22T12:13:22Z,MERGED,True,42,54,14,https://github.com/rkrejci,Libyang14,2,[],https://github.com/sysrepo/sysrepo/pull/938,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/938,Reflect API changes made in libyang 0.14.x,Reflect API changes made in libyang 0.14.x,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,938,2017-09-22T11:32:28Z,2017-09-22T12:13:22Z,2017-09-22T12:13:22Z,MERGED,True,42,54,14,https://github.com/rkrejci,Libyang14,2,[],https://github.com/sysrepo/sysrepo/pull/938,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/938#issuecomment-331427700,Reflect API changes made in libyang 0.14.x,"Codecov Report

Merging #938 into devel will decrease coverage by 0.06%.
The diff coverage is 95.65%.

@@            Coverage Diff             @@
##            devel     #938      +/-   ##
==========================================
- Coverage   85.94%   85.88%   -0.06%     
==========================================
  Files          31       31              
  Lines       24731    24724       -7     
  Branches     4411     4409       -2     
==========================================
- Hits        21254    21234      -20     
- Misses       3477     3490      +13",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,939,2017-09-23T22:00:07Z,2017-09-24T00:24:26Z,2017-09-24T00:24:26Z,CLOSED,False,2,0,1,https://github.com/TrinityCoder,Releases 0.7.0 and 0.7.1 mentioned in README.md + fixed typos in SWIG C++ examples,1,[],https://github.com/sysrepo/sysrepo/pull/939,https://github.com/TrinityCoder,1,https://github.com/sysrepo/sysrepo/pull/939,"I've noted that the last two releases of sysrepo are not mentioned in the version list in README.md.
I think this could be confusing, especially for newcomers, who could think that the last release is 0.6.0,  several months old.
So I have added those two versions into the list. I don't know if you like the descriptions I have written to them, if not, feel free to change them to anything you want.
Best regards","I've noted that the last two releases of sysrepo are not mentioned in the version list in README.md.
I think this could be confusing, especially for newcomers, who could think that the last release is 0.6.0,  several months old.
So I have added those two versions into the list. I don't know if you like the descriptions I have written to them, if not, feel free to change them to anything you want.
Best regards",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,939,2017-09-23T22:00:07Z,2017-09-24T00:24:26Z,2017-09-24T00:24:26Z,CLOSED,False,2,0,1,https://github.com/TrinityCoder,Releases 0.7.0 and 0.7.1 mentioned in README.md + fixed typos in SWIG C++ examples,1,[],https://github.com/sysrepo/sysrepo/pull/939,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/939#issuecomment-331673404,"I've noted that the last two releases of sysrepo are not mentioned in the version list in README.md.
I think this could be confusing, especially for newcomers, who could think that the last release is 0.6.0,  several months old.
So I have added those two versions into the list. I don't know if you like the descriptions I have written to them, if not, feel free to change them to anything you want.
Best regards","Codecov Report

Merging #939 into master will decrease coverage by 0.04%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #939      +/-   ##
==========================================
- Coverage   85.96%   85.92%   -0.04%     
==========================================
  Files          31       31              
  Lines       24731    24731              
  Branches     4411     4411              
==========================================
- Hits        21260    21249      -11     
- Misses       3471     3482      +11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,941,2017-09-24T00:45:26Z,2017-09-25T06:55:32Z,2017-09-25T10:45:48Z,MERGED,True,13,10,9,https://github.com/TrinityCoder,Releases 0.7.0 and 0.7.1 added to README.md + fixed typos in SWIG C++ examples' doxygen comments,2,[],https://github.com/sysrepo/sysrepo/pull/941,https://github.com/TrinityCoder,1,https://github.com/sysrepo/sysrepo/pull/941,"This pull request consists of two commits.
[commit 1] Releases 0.7.0 and 0.7.1 mentioned in README.md
I've noted that the last two releases of sysrepo are not mentioned in the version list in README.md.
I think this could be confusing, especially for newcomers, who could think that the last release is 0.6.0, several months old.
So I have added those two versions into the list. I don't know if you like the descriptions I have written to them, if not, feel free to change them to anything you want.
[commit 2] DOC fixed typos in SWIG C++ examples' descriptions
I've noticed that the C++ SWIG examples (swig/cpp/examples/*.cpp), when opened, have incorrect filenames under the ""@file"" doxygen tags - the ""cpp_"" file prefix is always missing.
I have added this prefix to all the source files.
Moreover, the cpp_rpc_example.cpp file had whole filename and description wrong (obviously copy-pasted from cpp_application_changes_example.cpp file). Here, I have fixed the filename and written my own ""@brief"" description.
Best regards!","This pull request consists of two commits.
[commit 1] Releases 0.7.0 and 0.7.1 mentioned in README.md
I've noted that the last two releases of sysrepo are not mentioned in the version list in README.md.
I think this could be confusing, especially for newcomers, who could think that the last release is 0.6.0, several months old.
So I have added those two versions into the list. I don't know if you like the descriptions I have written to them, if not, feel free to change them to anything you want.
[commit 2] DOC fixed typos in SWIG C++ examples' descriptions
I've noticed that the C++ SWIG examples (swig/cpp/examples/*.cpp), when opened, have incorrect filenames under the ""@file"" doxygen tags - the ""cpp_"" file prefix is always missing.
I have added this prefix to all the source files.
Moreover, the cpp_rpc_example.cpp file had whole filename and description wrong (obviously copy-pasted from cpp_application_changes_example.cpp file). Here, I have fixed the filename and written my own ""@brief"" description.
Best regards!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,941,2017-09-24T00:45:26Z,2017-09-25T06:55:32Z,2017-09-25T10:45:48Z,MERGED,True,13,10,9,https://github.com/TrinityCoder,Releases 0.7.0 and 0.7.1 added to README.md + fixed typos in SWIG C++ examples' doxygen comments,2,[],https://github.com/sysrepo/sysrepo/pull/941,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/941#issuecomment-331679321,"This pull request consists of two commits.
[commit 1] Releases 0.7.0 and 0.7.1 mentioned in README.md
I've noted that the last two releases of sysrepo are not mentioned in the version list in README.md.
I think this could be confusing, especially for newcomers, who could think that the last release is 0.6.0, several months old.
So I have added those two versions into the list. I don't know if you like the descriptions I have written to them, if not, feel free to change them to anything you want.
[commit 2] DOC fixed typos in SWIG C++ examples' descriptions
I've noticed that the C++ SWIG examples (swig/cpp/examples/*.cpp), when opened, have incorrect filenames under the ""@file"" doxygen tags - the ""cpp_"" file prefix is always missing.
I have added this prefix to all the source files.
Moreover, the cpp_rpc_example.cpp file had whole filename and description wrong (obviously copy-pasted from cpp_application_changes_example.cpp file). Here, I have fixed the filename and written my own ""@brief"" description.
Best regards!","Codecov Report

Merging #941 into master will decrease coverage by 0.07%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #941      +/-   ##
==========================================
- Coverage   85.96%   85.89%   -0.07%     
==========================================
  Files          31       31              
  Lines       24731    24732       +1     
  Branches     4411     4411              
==========================================
- Hits        21260    21243      -17     
- Misses       3471     3489      +18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,941,2017-09-24T00:45:26Z,2017-09-25T06:55:32Z,2017-09-25T10:45:48Z,MERGED,True,13,10,9,https://github.com/TrinityCoder,Releases 0.7.0 and 0.7.1 added to README.md + fixed typos in SWIG C++ examples' doxygen comments,2,[],https://github.com/sysrepo/sysrepo/pull/941,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/941#issuecomment-331792564,"This pull request consists of two commits.
[commit 1] Releases 0.7.0 and 0.7.1 mentioned in README.md
I've noted that the last two releases of sysrepo are not mentioned in the version list in README.md.
I think this could be confusing, especially for newcomers, who could think that the last release is 0.6.0, several months old.
So I have added those two versions into the list. I don't know if you like the descriptions I have written to them, if not, feel free to change them to anything you want.
[commit 2] DOC fixed typos in SWIG C++ examples' descriptions
I've noticed that the C++ SWIG examples (swig/cpp/examples/*.cpp), when opened, have incorrect filenames under the ""@file"" doxygen tags - the ""cpp_"" file prefix is always missing.
I have added this prefix to all the source files.
Moreover, the cpp_rpc_example.cpp file had whole filename and description wrong (obviously copy-pasted from cpp_application_changes_example.cpp file). Here, I have fixed the filename and written my own ""@brief"" description.
Best regards!","Hi,
seems fine, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,945,2017-10-02T10:21:05Z,2017-10-02T11:03:32Z,2017-10-02T11:03:46Z,MERGED,True,34,7,1,https://github.com/michalvasko,BUGFIX do not replace slashes in values,1,[],https://github.com/sysrepo/sysrepo/pull/945,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/945,"Description
When setting data with value including /, sysrepo would fail with an error of Invalid expression, which was wrong.
Closure
Fixes #944","Description
When setting data with value including /, sysrepo would fail with an error of Invalid expression, which was wrong.
Closure
Fixes #944",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,945,2017-10-02T10:21:05Z,2017-10-02T11:03:32Z,2017-10-02T11:03:46Z,MERGED,True,34,7,1,https://github.com/michalvasko,BUGFIX do not replace slashes in values,1,[],https://github.com/sysrepo/sysrepo/pull/945,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/945#issuecomment-333499134,"Description
When setting data with value including /, sysrepo would fail with an error of Invalid expression, which was wrong.
Closure
Fixes #944","Codecov Report

Merging #945 into devel will decrease coverage by 0.01%.
The diff coverage is 71.43%.

@@            Coverage Diff             @@
##            devel     #945      +/-   ##
==========================================
- Coverage   85.89%   85.88%   -0.01%     
==========================================
  Files          31       31              
  Lines       24730    24746      +16     
  Branches     4412     4414       +2     
==========================================
+ Hits        21240    21251      +11     
- Misses       3490     3495       +5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,946,2017-10-03T18:15:11Z,2017-10-04T07:40:55Z,2017-10-04T12:22:01Z,MERGED,True,20,3,3,https://github.com/jktjkt,cross-building: Workaround calls to sysrepoctl/sysrepocfg,1,[],https://github.com/sysrepo/sysrepo/pull/946,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/946,"Sysrepo has always wanted to call binaries which it has just produced. That works well when building natively, but it's a no-go when doing cross-compilation.
I've added a workaround earlier in commit 00025c4. One could use two options, CALL_TARGET_BINS_DIRECTLY and INDIRECT_YANG_INSTALL_DIR to produce a shell script which could be used to initialize /etc/sysrepo later on, perhaps on the target system. However, that is still not a complete fix for scenarios which intend to, e.g., produce a self-contained disk image to be flashed to an embedded device.
I'm using Buildroot which makes it super-easy to build a package twice -- once as a native, host package, and the second time as a cross-built package targeting another system with a possibly different architecture. This patch uses that feature. One can first build a special ""throw-away"" sysrepo which will only be used for its sysrepoctl and sysrepocfg. This host-side-only sysrepo should be built with an appropriate REPOSITORY_LOC to point to the target's /etc/sysrepo.
When building the second sysrepo that is supposed to run on the target, proceed as normally, but pass two additional arguments, CALL_SYSREPOCTL_BIN and CALL_SYSREPOCFG_BIN which point to the throwaway sysrepo. That way, these tools can be used for executing host's native code which however installs modules into the target's /etc/sysrepo. These tools can be also used for other packages such as Netopeer2.","Sysrepo has always wanted to call binaries which it has just produced. That works well when building natively, but it's a no-go when doing cross-compilation.
I've added a workaround earlier in commit 00025c4. One could use two options, CALL_TARGET_BINS_DIRECTLY and INDIRECT_YANG_INSTALL_DIR to produce a shell script which could be used to initialize /etc/sysrepo later on, perhaps on the target system. However, that is still not a complete fix for scenarios which intend to, e.g., produce a self-contained disk image to be flashed to an embedded device.
I'm using Buildroot which makes it super-easy to build a package twice -- once as a native, host package, and the second time as a cross-built package targeting another system with a possibly different architecture. This patch uses that feature. One can first build a special ""throw-away"" sysrepo which will only be used for its sysrepoctl and sysrepocfg. This host-side-only sysrepo should be built with an appropriate REPOSITORY_LOC to point to the target's /etc/sysrepo.
When building the second sysrepo that is supposed to run on the target, proceed as normally, but pass two additional arguments, CALL_SYSREPOCTL_BIN and CALL_SYSREPOCFG_BIN which point to the throwaway sysrepo. That way, these tools can be used for executing host's native code which however installs modules into the target's /etc/sysrepo. These tools can be also used for other packages such as Netopeer2.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,946,2017-10-03T18:15:11Z,2017-10-04T07:40:55Z,2017-10-04T12:22:01Z,MERGED,True,20,3,3,https://github.com/jktjkt,cross-building: Workaround calls to sysrepoctl/sysrepocfg,1,[],https://github.com/sysrepo/sysrepo/pull/946,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/946#issuecomment-334067484,"Sysrepo has always wanted to call binaries which it has just produced. That works well when building natively, but it's a no-go when doing cross-compilation.
I've added a workaround earlier in commit 00025c4. One could use two options, CALL_TARGET_BINS_DIRECTLY and INDIRECT_YANG_INSTALL_DIR to produce a shell script which could be used to initialize /etc/sysrepo later on, perhaps on the target system. However, that is still not a complete fix for scenarios which intend to, e.g., produce a self-contained disk image to be flashed to an embedded device.
I'm using Buildroot which makes it super-easy to build a package twice -- once as a native, host package, and the second time as a cross-built package targeting another system with a possibly different architecture. This patch uses that feature. One can first build a special ""throw-away"" sysrepo which will only be used for its sysrepoctl and sysrepocfg. This host-side-only sysrepo should be built with an appropriate REPOSITORY_LOC to point to the target's /etc/sysrepo.
When building the second sysrepo that is supposed to run on the target, proceed as normally, but pass two additional arguments, CALL_SYSREPOCTL_BIN and CALL_SYSREPOCFG_BIN which point to the throwaway sysrepo. That way, these tools can be used for executing host's native code which however installs modules into the target's /etc/sysrepo. These tools can be also used for other packages such as Netopeer2.","Hi,
seems useful, thanks. Please address what I wrote in the review and then we can merge it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,946,2017-10-03T18:15:11Z,2017-10-04T07:40:55Z,2017-10-04T12:22:01Z,MERGED,True,20,3,3,https://github.com/jktjkt,cross-building: Workaround calls to sysrepoctl/sysrepocfg,1,[],https://github.com/sysrepo/sysrepo/pull/946,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/946#issuecomment-334071277,"Sysrepo has always wanted to call binaries which it has just produced. That works well when building natively, but it's a no-go when doing cross-compilation.
I've added a workaround earlier in commit 00025c4. One could use two options, CALL_TARGET_BINS_DIRECTLY and INDIRECT_YANG_INSTALL_DIR to produce a shell script which could be used to initialize /etc/sysrepo later on, perhaps on the target system. However, that is still not a complete fix for scenarios which intend to, e.g., produce a self-contained disk image to be flashed to an embedded device.
I'm using Buildroot which makes it super-easy to build a package twice -- once as a native, host package, and the second time as a cross-built package targeting another system with a possibly different architecture. This patch uses that feature. One can first build a special ""throw-away"" sysrepo which will only be used for its sysrepoctl and sysrepocfg. This host-side-only sysrepo should be built with an appropriate REPOSITORY_LOC to point to the target's /etc/sysrepo.
When building the second sysrepo that is supposed to run on the target, proceed as normally, but pass two additional arguments, CALL_SYSREPOCTL_BIN and CALL_SYSREPOCFG_BIN which point to the throwaway sysrepo. That way, these tools can be used for executing host's native code which however installs modules into the target's /etc/sysrepo. These tools can be also used for other packages such as Netopeer2.","Fixed both. I've actually changed these in INSTALL.md because that's where most of the instructions are used, anyway.
BTW, it seems that netopeer2's build system picks these up without any extra work, at least with Buildroot, because the host's path/to/sdk/bin is in $PATH, and therefore it gets picked by CMake's find_XXX. It then fails because the build happens as non-root and there are some modules which want to be root:root and 0600, but that's just an easy patch away :).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,946,2017-10-03T18:15:11Z,2017-10-04T07:40:55Z,2017-10-04T12:22:01Z,MERGED,True,20,3,3,https://github.com/jktjkt,cross-building: Workaround calls to sysrepoctl/sysrepocfg,1,[],https://github.com/sysrepo/sysrepo/pull/946,https://github.com/codecov-io,4,https://github.com/sysrepo/sysrepo/pull/946#issuecomment-334073898,"Sysrepo has always wanted to call binaries which it has just produced. That works well when building natively, but it's a no-go when doing cross-compilation.
I've added a workaround earlier in commit 00025c4. One could use two options, CALL_TARGET_BINS_DIRECTLY and INDIRECT_YANG_INSTALL_DIR to produce a shell script which could be used to initialize /etc/sysrepo later on, perhaps on the target system. However, that is still not a complete fix for scenarios which intend to, e.g., produce a self-contained disk image to be flashed to an embedded device.
I'm using Buildroot which makes it super-easy to build a package twice -- once as a native, host package, and the second time as a cross-built package targeting another system with a possibly different architecture. This patch uses that feature. One can first build a special ""throw-away"" sysrepo which will only be used for its sysrepoctl and sysrepocfg. This host-side-only sysrepo should be built with an appropriate REPOSITORY_LOC to point to the target's /etc/sysrepo.
When building the second sysrepo that is supposed to run on the target, proceed as normally, but pass two additional arguments, CALL_SYSREPOCTL_BIN and CALL_SYSREPOCFG_BIN which point to the throwaway sysrepo. That way, these tools can be used for executing host's native code which however installs modules into the target's /etc/sysrepo. These tools can be also used for other packages such as Netopeer2.","Codecov Report

Merging #946 into devel will increase coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #946      +/-   ##
==========================================
+ Coverage   85.86%   85.88%   +0.01%     
==========================================
  Files          31       31              
  Lines       24747    24746       -1     
  Branches     4414     4414              
==========================================
+ Hits        21249    21251       +2     
+ Misses       3498     3495       -3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,946,2017-10-03T18:15:11Z,2017-10-04T07:40:55Z,2017-10-04T12:22:01Z,MERGED,True,20,3,3,https://github.com/jktjkt,cross-building: Workaround calls to sysrepoctl/sysrepocfg,1,[],https://github.com/sysrepo/sysrepo/pull/946,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/946#issuecomment-334074312,"Sysrepo has always wanted to call binaries which it has just produced. That works well when building natively, but it's a no-go when doing cross-compilation.
I've added a workaround earlier in commit 00025c4. One could use two options, CALL_TARGET_BINS_DIRECTLY and INDIRECT_YANG_INSTALL_DIR to produce a shell script which could be used to initialize /etc/sysrepo later on, perhaps on the target system. However, that is still not a complete fix for scenarios which intend to, e.g., produce a self-contained disk image to be flashed to an embedded device.
I'm using Buildroot which makes it super-easy to build a package twice -- once as a native, host package, and the second time as a cross-built package targeting another system with a possibly different architecture. This patch uses that feature. One can first build a special ""throw-away"" sysrepo which will only be used for its sysrepoctl and sysrepocfg. This host-side-only sysrepo should be built with an appropriate REPOSITORY_LOC to point to the target's /etc/sysrepo.
When building the second sysrepo that is supposed to run on the target, proceed as normally, but pass two additional arguments, CALL_SYSREPOCTL_BIN and CALL_SYSREPOCFG_BIN which point to the throwaway sysrepo. That way, these tools can be used for executing host's native code which however installs modules into the target's /etc/sysrepo. These tools can be also used for other packages such as Netopeer2.","Alright, I think it looks good, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,948,2017-10-04T11:55:26Z,2017-10-04T12:11:44Z,2017-10-16T10:10:51Z,MERGED,True,1,1,1,https://github.com/jktjkt,Portable printing of size_t,1,[],https://github.com/sysrepo/sysrepo/pull/948,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/948,"Without this warning, GCC 6.4.1 complains when cross-building for ARM Cortex A9:
src/clientlib/client_library.c:1620:42: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 4 has type ‘size_t {aka unsigned int}’ [-Wformat=]
         snprintf(indices[i], BUF_LEN, ""%lu"", index);
                                          ^","Without this warning, GCC 6.4.1 complains when cross-building for ARM Cortex A9:
src/clientlib/client_library.c:1620:42: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 4 has type ‘size_t {aka unsigned int}’ [-Wformat=]
         snprintf(indices[i], BUF_LEN, ""%lu"", index);
                                          ^",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,948,2017-10-04T11:55:26Z,2017-10-04T12:11:44Z,2017-10-16T10:10:51Z,MERGED,True,1,1,1,https://github.com/jktjkt,Portable printing of size_t,1,[],https://github.com/sysrepo/sysrepo/pull/948,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/948#issuecomment-334135408,"Without this warning, GCC 6.4.1 complains when cross-building for ARM Cortex A9:
src/clientlib/client_library.c:1620:42: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 4 has type ‘size_t {aka unsigned int}’ [-Wformat=]
         snprintf(indices[i], BUF_LEN, ""%lu"", index);
                                          ^","Codecov Report

Merging #948 into devel will decrease coverage by 0.03%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #948      +/-   ##
==========================================
- Coverage   85.91%   85.88%   -0.03%     
==========================================
  Files          31       31              
  Lines       24746    24746              
  Branches     4414     4414              
==========================================
- Hits        21260    21252       -8     
- Misses       3486     3494       +8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,949,2017-10-04T15:00:27Z,2017-10-16T08:02:48Z,2017-10-16T10:10:33Z,MERGED,True,12,4,2,https://github.com/jktjkt,"Stop sysrepo-plugind from auto-launching the daemon, and fix systemd integration",2,[],https://github.com/sysrepo/sysrepo/pull/949,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/949,"Check commit messages for details. In a nutshell, this stops sysrepo-plugind from auto-launching the main sysrepod daemon because that's something which is better handled by the init system.","Check commit messages for details. In a nutshell, this stops sysrepo-plugind from auto-launching the main sysrepod daemon because that's something which is better handled by the init system.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,949,2017-10-04T15:00:27Z,2017-10-16T08:02:48Z,2017-10-16T10:10:33Z,MERGED,True,12,4,2,https://github.com/jktjkt,"Stop sysrepo-plugind from auto-launching the daemon, and fix systemd integration",2,[],https://github.com/sysrepo/sysrepo/pull/949,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/949#issuecomment-334196872,"Check commit messages for details. In a nutshell, this stops sysrepo-plugind from auto-launching the main sysrepod daemon because that's something which is better handled by the init system.","Codecov Report

Merging #949 into devel will decrease coverage by 0.01%.
The diff coverage is 57.14%.

@@            Coverage Diff             @@
##            devel     #949      +/-   ##
==========================================
- Coverage   85.86%   85.86%   -0.01%     
==========================================
  Files          31       31              
  Lines       24739    24741       +2     
  Branches     4411     4411              
==========================================
  Hits        21242    21242              
- Misses       3497     3499       +2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,951,2017-10-06T12:51:41Z,2017-10-13T13:03:10Z,2017-10-16T07:07:39Z,MERGED,True,11,22,1,https://github.com/michalvasko,Identref fix,4,[],https://github.com/sysrepo/sysrepo/pull/951,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/951,"Description
Fix of a problem when foreign identity is used in an identityref that is being duplicated into another context, use libyang data callback.
Closure
Fixes #950","Description
Fix of a problem when foreign identity is used in an identityref that is being duplicated into another context, use libyang data callback.
Closure
Fixes #950",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,951,2017-10-06T12:51:41Z,2017-10-13T13:03:10Z,2017-10-16T07:07:39Z,MERGED,True,11,22,1,https://github.com/michalvasko,Identref fix,4,[],https://github.com/sysrepo/sysrepo/pull/951,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/951#issuecomment-334749457,"Description
Fix of a problem when foreign identity is used in an identityref that is being duplicated into another context, use libyang data callback.
Closure
Fixes #950","Codecov Report

Merging #951 into devel will decrease coverage by 0.07%.
The diff coverage is 37.5%.

@@            Coverage Diff             @@
##            devel     #951      +/-   ##
==========================================
- Coverage   85.93%   85.86%   -0.07%     
==========================================
  Files          31       31              
  Lines       24746    24738       -8     
  Branches     4414     4411       -3     
==========================================
- Hits        21264    21241      -23     
- Misses       3482     3497      +15",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,951,2017-10-06T12:51:41Z,2017-10-13T13:03:10Z,2017-10-16T07:07:39Z,MERGED,True,11,22,1,https://github.com/michalvasko,Identref fix,4,[],https://github.com/sysrepo/sysrepo/pull/951,https://github.com/frimpler,3,https://github.com/sysrepo/sysrepo/pull/951#issuecomment-335816428,"Description
Fix of a problem when foreign identity is used in an identityref that is being duplicated into another context, use libyang data callback.
Closure
Fixes #950","Hi Michal,
to me it seems, that the callback will be used in different places in order to overcome problems with missing modules in ly_ctx instances. I'm afraid that this has to be done again and again, whenever a new, similar problem occurs. I'm mentioning it, because I'm currently working at a different error and it's again a missing module which breaks a correct augmentation of a module. (This time I could put it in moveto_resolve_model(), for example)
My question:
Isn't it better to initialize ly_ctx instances e.g. in ly_ctx_new()? Of course, one has to think of a way to make use of a callback from the library ""consumer"" like dm_module_clb() and a way to update the context, when new modules have been loaded...
I'm asking this mainly, because I want to understand, how you preferred to solve such kind of problems at best.
Kind regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,951,2017-10-06T12:51:41Z,2017-10-13T13:03:10Z,2017-10-16T07:07:39Z,MERGED,True,11,22,1,https://github.com/michalvasko,Identref fix,4,[],https://github.com/sysrepo/sysrepo/pull/951,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/951#issuecomment-336041589,"Description
Fix of a problem when foreign identity is used in an identityref that is being duplicated into another context, use libyang data callback.
Closure
Fixes #950","Hi Frank,
it depends which solution to use. For libyang, the idea generally is that when you are parsing data, there are situations when you may require modules you could not possibly know you require before parsing itself. Then the data callback gets called and gives a chance to load the missing module. As for sysrepo, it uses this mechanism whenever the situation is such that it was not possible to know beforehand.
Such a case is this identityref because there can be any module that defines identities that were derived from ietf-interfaces base interface identity, which then gets used as a value in data and sysrepo does not know beforehand (it tries to load into a context only models really needed, so, for example, loading all models that extend all identities in models already in the context is not preferred).
So, best would you create a new issue and we will see what exactly is the problem and how to solve it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,951,2017-10-06T12:51:41Z,2017-10-13T13:03:10Z,2017-10-16T07:07:39Z,MERGED,True,11,22,1,https://github.com/michalvasko,Identref fix,4,[],https://github.com/sysrepo/sysrepo/pull/951,https://github.com/frimpler,5,https://github.com/sysrepo/sysrepo/pull/951#issuecomment-336058817,"Description
Fix of a problem when foreign identity is used in an identityref that is being duplicated into another context, use libyang data callback.
Closure
Fixes #950","Hi Michal,
thanks for your answer. It reflects somehow, what I have seen/experienced already in the code. Apart from the the identityref case above, would you say that all modules, which are ""visible"" by an include/import hierarchy are expected to be loaded before parsing the tree itself? Or if not, why not. Performance? (Btw. I'm asking exactly this, because this is the problem in the issue for which I'm currently preparing a test case)
Concerning writing of issues. My employer wants me to support you, because we are still facing blocking issues which needs to be ""formulated"" as a regression test case. And as soon as a test exist I will of course first try to propose a solution by myself. I may become each time better in it..:-)
In this context:
I can imagine that I will create always a pull request with a test case which triggers a misbehaviour. But due to the fact, that a pull request has a CI pipeline attached, I'm afraid that such pull requests have trouble to be accepted. So I'm looking for a better way to deliver test cases. Any suggestions?
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,951,2017-10-06T12:51:41Z,2017-10-13T13:03:10Z,2017-10-16T07:07:39Z,MERGED,True,11,22,1,https://github.com/michalvasko,Identref fix,4,[],https://github.com/sysrepo/sysrepo/pull/951,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/951#issuecomment-336087255,"Description
Fix of a problem when foreign identity is used in an identityref that is being duplicated into another context, use libyang data callback.
Closure
Fixes #950","Hi Frank,
this issue is fairly complicated because sysrepo tried from the start to be as effective as possible and not load redundant models (so I am often encountering opposite problems, required models are not being loaded). For this reason each model has stored its dependencies (repository/data/internal/sysrepo-module-dependencies.xml) which are used to load all the required models (but this list may not be complete like I said before, sometimes you simply cannot know). To sum up, all imports/includes of a model are loaded together with additional dependencies, which are also model augmenting this model and with the last commit I added recursive loading of dependencies in case there is a data dependency on another model (which means it needs another model data for validation - foreign leafrefs/instance-identifiers and maybe some other cases which I don't remember).
As for your support, it is very welcome because we simply do not have enough capacities to provide proper support and further development of all the software even though we are doing what we can. I think you can provide test cases using pull requests as there is likely no better way. It is true, the travis tests will initially fail, but I can then create another pull request fixing the problem and after it gets merged, we can restart the travis build for your pull request, it will pass and can be merged, too. What do you think? Also, it may be better to discuss this privately, it is not a sysrepo issue and it definitely does not concern this pull request anymore.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,951,2017-10-06T12:51:41Z,2017-10-13T13:03:10Z,2017-10-16T07:07:39Z,MERGED,True,11,22,1,https://github.com/michalvasko,Identref fix,4,[],https://github.com/sysrepo/sysrepo/pull/951,https://github.com/frimpler,7,https://github.com/sysrepo/sysrepo/pull/951#issuecomment-336089452,"Description
Fix of a problem when foreign identity is used in an identityref that is being duplicated into another context, use libyang data callback.
Closure
Fixes #950",ok and thanks!,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/957,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/frimpler,2,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-337817179,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","@michalvasko
Hi Michal,
this pull request has some trouble to get verified with travis. Who can help here? The build didn't even start. As it seems, there's a problem with expired signatures.
The last line of the log says:
The command ""if [[ ""$TRAVIS_OS_NAME"" == ""linux"" ]]; then bash deploy/travis/install-libs.sh; fi"" failed and exited with 100 during .
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-337825464,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","Hi Frank,
it seems it was just some temporary problem, seems to work now. However, OSX test was executed and there is a problem with sysrepoctl_test because a part of it is uninstalling ietf-interfaces, which is no longer possible as your module has a dependency on it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/frimpler,4,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-337825733,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","yes, I have noticed it just now. Working on it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/frimpler,5,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-338951188,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","@michalvasko
Hi Michal,
test case is now ready (closed and reopened, because I was not at the office). Please have a look.
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-338952396,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","Hi Frank,
seems fine now, thanks, except for one thing, why did you turn logging off?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/frimpler,7,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-338952989,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank",oh. It seems that slipped through.. Was not my intention (needed to switch it off in order to see debugger output).,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/codecov-io,8,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-341033933,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","Codecov Report

Merging #957 into devel will decrease coverage by 0.12%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #957      +/-   ##
==========================================
- Coverage   85.96%   85.84%   -0.12%     
==========================================
  Files          31       31              
  Lines       24747    24747              
  Branches     4412     4412              
==========================================
- Hits        21273    21244      -29     
- Misses       3474     3503      +29",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/frimpler,9,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-342868764,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","@michalvasko
Hi Michal,
as it seems, this pull request has not yet been merged. Any reasons for it?
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/michalvasko,10,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-343838023,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank","Hi Frank,
it was not merged because when I look at all the changes I still see logging turned off.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,957,2017-10-18T15:58:52Z,2017-11-13T11:35:53Z,2017-11-13T11:35:53Z,CLOSED,False,187,1,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,6,[],https://github.com/sysrepo/sysrepo/pull/957,https://github.com/frimpler,11,https://github.com/sysrepo/sysrepo/pull/957#issuecomment-343893306,"Hi,
as it has been discussed in #950, this pull requests delivers the test case which verifies the solution for it (see #951)
Regards,
Frank",I'll open a new pull request: #983,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,958,2017-10-19T08:16:47Z,2017-10-19T10:28:40Z,2017-10-19T11:59:02Z,MERGED,True,2,0,1,https://github.com/michalvasko,Missing include,1,[],https://github.com/sysrepo/sysrepo/pull/958,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/958,"Description
Missing stdio include in values.h.
Closure
Fixes #956","Description
Missing stdio include in values.h.
Closure
Fixes #956",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,958,2017-10-19T08:16:47Z,2017-10-19T10:28:40Z,2017-10-19T11:59:02Z,MERGED,True,2,0,1,https://github.com/michalvasko,Missing include,1,[],https://github.com/sysrepo/sysrepo/pull/958,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/958#issuecomment-337857663,"Description
Missing stdio include in values.h.
Closure
Fixes #956","Codecov Report

Merging #958 into devel will increase coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #958      +/-   ##
==========================================
+ Coverage   85.91%   85.91%   +0.01%     
==========================================
  Files          31       31              
  Lines       24742    24742              
  Branches     4411     4411              
==========================================
+ Hits        21255    21257       +2     
+ Misses       3487     3485       -2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,959,2017-10-19T12:03:30Z,2017-10-23T09:34:08Z,2017-10-23T09:34:12Z,CLOSED,False,3,2,2,https://github.com/michalvasko,Do not consider operations in modules as data,1,[],https://github.com/sysrepo/sysrepo/pull/959,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/959,"Description
Changed the meaning of has_data flag, operations are no longer considered as such.","Description
Changed the meaning of has_data flag, operations are no longer considered as such.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,959,2017-10-19T12:03:30Z,2017-10-23T09:34:08Z,2017-10-23T09:34:12Z,CLOSED,False,3,2,2,https://github.com/michalvasko,Do not consider operations in modules as data,1,[],https://github.com/sysrepo/sysrepo/pull/959,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/959#issuecomment-338602593,"Description
Changed the meaning of has_data flag, operations are no longer considered as such.","Unfortunately, operations subscriptions are treated exactly as data subscriptions so changes would have to be more extensive than what is in this pull request. Since it fixes merely an inaccuracy or rather an inconsistency, leave it be for now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,964,2017-10-25T12:53:11Z,2017-10-30T08:12:37Z,2017-10-30T08:12:51Z,MERGED,True,11,3,1,https://github.com/michalvasko,Use schema paths where expected,1,[],https://github.com/sysrepo/sysrepo/pull/964,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/964,"Description
When retrieving state data, sysrepo have used the data path from user where schema paths were expected.
Closure
Fixes CESNET/libyang#366","Description
When retrieving state data, sysrepo have used the data path from user where schema paths were expected.
Closure
Fixes CESNET/libyang#366",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,964,2017-10-25T12:53:11Z,2017-10-30T08:12:37Z,2017-10-30T08:12:51Z,MERGED,True,11,3,1,https://github.com/michalvasko,Use schema paths where expected,1,[],https://github.com/sysrepo/sysrepo/pull/964,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/964#issuecomment-339330050,"Description
When retrieving state data, sysrepo have used the data path from user where schema paths were expected.
Closure
Fixes CESNET/libyang#366","Codecov Report

Merging #964 into devel will increase coverage by 0.03%.
The diff coverage is 66.67%.

@@            Coverage Diff             @@
##            devel     #964      +/-   ##
==========================================
+ Coverage   85.84%   85.86%   +0.03%     
==========================================
  Files          31       31              
  Lines       24742    24747       +5     
  Branches     4411     4412       +1     
==========================================
+ Hits        21238    21249      +11     
+ Misses       3504     3498       -6",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,967,2017-10-29T12:31:39Z,2017-10-31T13:33:10Z,2020-01-15T07:49:43Z,MERGED,True,5878,0,13,https://github.com/mislavn,docker: add end to end testing,1,[],https://github.com/sysrepo/sysrepo/pull/967,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/967,"This is a demonstration on how to do end to end testing on a Ubuntu 16:04 and OpenWrt docker image.
The first run of the bash scripts will be slower because the base docker images are being build and for the OpenWrt image it will take some time, also the image is 10Gb big.
After that every rerun of the script will fetch the latest changes from the master branch, discard the previous docker cache and run the tests. This can be changed so the script run's only if there are new commits in the master branch.
For the NETCONF tests go-netconf is used and simple toml configuration file which specifies: url, username, password, XML request and XML response.","This is a demonstration on how to do end to end testing on a Ubuntu 16:04 and OpenWrt docker image.
The first run of the bash scripts will be slower because the base docker images are being build and for the OpenWrt image it will take some time, also the image is 10Gb big.
After that every rerun of the script will fetch the latest changes from the master branch, discard the previous docker cache and run the tests. This can be changed so the script run's only if there are new commits in the master branch.
For the NETCONF tests go-netconf is used and simple toml configuration file which specifies: url, username, password, XML request and XML response.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,967,2017-10-29T12:31:39Z,2017-10-31T13:33:10Z,2020-01-15T07:49:43Z,MERGED,True,5878,0,13,https://github.com/mislavn,docker: add end to end testing,1,[],https://github.com/sysrepo/sysrepo/pull/967,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/967#issuecomment-340260361,"This is a demonstration on how to do end to end testing on a Ubuntu 16:04 and OpenWrt docker image.
The first run of the bash scripts will be slower because the base docker images are being build and for the OpenWrt image it will take some time, also the image is 10Gb big.
After that every rerun of the script will fetch the latest changes from the master branch, discard the previous docker cache and run the tests. This can be changed so the script run's only if there are new commits in the master branch.
For the NETCONF tests go-netconf is used and simple toml configuration file which specifies: url, username, password, XML request and XML response.","Codecov Report

Merging #967 into devel will decrease coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #967      +/-   ##
==========================================
- Coverage   85.84%   85.83%   -0.01%     
==========================================
  Files          31       31              
  Lines       24742    24742              
  Branches     4411     4411              
==========================================
- Hits        21238    21236       -2     
- Misses       3504     3506       +2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,967,2017-10-29T12:31:39Z,2017-10-31T13:33:10Z,2020-01-15T07:49:43Z,MERGED,True,5878,0,13,https://github.com/mislavn,docker: add end to end testing,1,[],https://github.com/sysrepo/sysrepo/pull/967,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/967#issuecomment-340728665,"This is a demonstration on how to do end to end testing on a Ubuntu 16:04 and OpenWrt docker image.
The first run of the bash scripts will be slower because the base docker images are being build and for the OpenWrt image it will take some time, also the image is 10Gb big.
After that every rerun of the script will fetch the latest changes from the master branch, discard the previous docker cache and run the tests. This can be changed so the script run's only if there are new commits in the master branch.
For the NETCONF tests go-netconf is used and simple toml configuration file which specifies: url, username, password, XML request and XML response.","Hi,
if someone could also test the OpenWRT image it would be great, but I guess it can be merged anyway.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,969,2017-10-30T13:25:01Z,2017-10-31T13:32:19Z,2017-10-31T13:32:28Z,MERGED,True,146,17,9,https://github.com/michalvasko,Module insert fix,4,[],https://github.com/sysrepo/sysrepo/pull/969,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/969,"Description
Fixes the case when an included submodule needs something from an main-module-imported module. Also, a few other minor fixes.
Test case
Test case added.
Closure
Fixes #962","Description
Fixes the case when an included submodule needs something from an main-module-imported module. Also, a few other minor fixes.
Test case
Test case added.
Closure
Fixes #962",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,969,2017-10-30T13:25:01Z,2017-10-31T13:32:19Z,2017-10-31T13:32:28Z,MERGED,True,146,17,9,https://github.com/michalvasko,Module insert fix,4,[],https://github.com/sysrepo/sysrepo/pull/969,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/969#issuecomment-340446600,"Description
Fixes the case when an included submodule needs something from an main-module-imported module. Also, a few other minor fixes.
Test case
Test case added.
Closure
Fixes #962","Codecov Report

Merging #969 into devel will increase coverage by 0.07%.
The diff coverage is 63.64%.

@@            Coverage Diff             @@
##            devel     #969      +/-   ##
==========================================
+ Coverage   85.88%   85.95%   +0.07%     
==========================================
  Files          31       31              
  Lines       24747    24748       +1     
  Branches     4412     4412              
==========================================
+ Hits        21253    21272      +19     
+ Misses       3494     3476      -18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,974,2017-11-02T14:14:39Z,2017-11-02T14:43:40Z,2017-11-02T14:43:42Z,MERGED,True,104,71,3,https://github.com/michalvasko,XPath utils support all valid keys and quotes,1,[],https://github.com/sysrepo/sysrepo/pull/974,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/974,"Description
Added support for XPath paths to include any valid characters in key values and double-quote supported now.
Test case
Corresponding tests updated to include new supported values.
Closure
Fixes #973","Description
Added support for XPath paths to include any valid characters in key values and double-quote supported now.
Test case
Corresponding tests updated to include new supported values.
Closure
Fixes #973",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,974,2017-11-02T14:14:39Z,2017-11-02T14:43:40Z,2017-11-02T14:43:42Z,MERGED,True,104,71,3,https://github.com/michalvasko,XPath utils support all valid keys and quotes,1,[],https://github.com/sysrepo/sysrepo/pull/974,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/974#issuecomment-341442362,"Description
Added support for XPath paths to include any valid characters in key values and double-quote supported now.
Test case
Corresponding tests updated to include new supported values.
Closure
Fixes #973","Codecov Report

Merging #974 into devel will decrease coverage by 0.05%.
The diff coverage is 97.22%.

@@            Coverage Diff             @@
##            devel     #974      +/-   ##
==========================================
- Coverage   85.96%   85.91%   -0.05%     
==========================================
  Files          31       31              
  Lines       24747    24767      +20     
  Branches     4412     4421       +9     
==========================================
+ Hits        21273    21277       +4     
- Misses       3474     3490      +16",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,975,2017-11-06T09:00:36Z,2017-11-07T14:53:59Z,2017-11-07T19:32:06Z,MERGED,True,22,10,1,https://github.com/michalvasko,sysrepoctl support for multiple search directories,1,[],https://github.com/sysrepo/sysrepo/pull/975,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/975,"Description
Added support for several search directories in sysrepoctl.
Closure
Fixes #919","Description
Added support for several search directories in sysrepoctl.
Closure
Fixes #919",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,975,2017-11-06T09:00:36Z,2017-11-07T14:53:59Z,2017-11-07T19:32:06Z,MERGED,True,22,10,1,https://github.com/michalvasko,sysrepoctl support for multiple search directories,1,[],https://github.com/sysrepo/sysrepo/pull/975,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/975#issuecomment-342088885,"Description
Added support for several search directories in sysrepoctl.
Closure
Fixes #919","Codecov Report

Merging #975 into devel will decrease coverage by 0.03%.
The diff coverage is 80.95%.

@@            Coverage Diff             @@
##            devel     #975      +/-   ##
==========================================
- Coverage   85.93%   85.89%   -0.03%     
==========================================
  Files          31       31              
  Lines       24767    24778      +11     
  Branches     4421     4422       +1     
==========================================
+ Hits        21282    21283       +1     
- Misses       3485     3495      +10",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,975,2017-11-06T09:00:36Z,2017-11-07T14:53:59Z,2017-11-07T19:32:06Z,MERGED,True,22,10,1,https://github.com/michalvasko,sysrepoctl support for multiple search directories,1,[],https://github.com/sysrepo/sysrepo/pull/975,https://github.com/jjin62,3,https://github.com/sysrepo/sysrepo/pull/975#issuecomment-342595732,"Description
Added support for several search directories in sysrepoctl.
Closure
Fixes #919",thanks Michal for quick response. I will try it.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,980,2017-11-08T12:03:55Z,2017-11-22T10:03:17Z,2017-11-23T07:51:39Z,MERGED,True,84,78,7,https://github.com/michalvasko,BUGFIX state data manipulations should not change modified flag,1,[],https://github.com/sysrepo/sysrepo/pull/980,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/980,"Description
Adding and deleting state data from a data tree no longer changes modified flag as that is reserved for configuration data changes made by user.
Test case
Affected tests updated.
Closure
Fixes #977","Description
Adding and deleting state data from a data tree no longer changes modified flag as that is reserved for configuration data changes made by user.
Test case
Affected tests updated.
Closure
Fixes #977",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,980,2017-11-08T12:03:55Z,2017-11-22T10:03:17Z,2017-11-23T07:51:39Z,MERGED,True,84,78,7,https://github.com/michalvasko,BUGFIX state data manipulations should not change modified flag,1,[],https://github.com/sysrepo/sysrepo/pull/980,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/980#issuecomment-342803700,"Description
Adding and deleting state data from a data tree no longer changes modified flag as that is reserved for configuration data changes made by user.
Test case
Affected tests updated.
Closure
Fixes #977","Codecov Report

Merging #980 into devel will increase coverage by 0.04%.
The diff coverage is 100%.

@@            Coverage Diff            @@
##           devel     #980      +/-   ##
=========================================
+ Coverage   85.9%   85.94%   +0.04%     
=========================================
  Files         31       31              
  Lines      24779    24780       +1     
  Branches    4422     4424       +2     
=========================================
+ Hits       21285    21297      +12     
+ Misses      3494     3483      -11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,981,2017-11-10T06:24:31Z,2017-11-10T12:43:54Z,2017-11-10T12:43:54Z,MERGED,True,1,1,1,https://github.com/Mandar12,cpp: Fix copy paste error in Logs::set_syslog,1,[],https://github.com/sysrepo/sysrepo/pull/981,https://github.com/Mandar12,1,https://github.com/sysrepo/sysrepo/pull/981,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,981,2017-11-10T06:24:31Z,2017-11-10T12:43:54Z,2017-11-10T12:43:54Z,MERGED,True,1,1,1,https://github.com/Mandar12,cpp: Fix copy paste error in Logs::set_syslog,1,[],https://github.com/sysrepo/sysrepo/pull/981,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/981#issuecomment-343389318,,"Codecov Report

Merging #981 into master will decrease coverage by 0.03%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##           master    #981      +/-   ##
=========================================
- Coverage   85.93%   85.9%   -0.03%     
=========================================
  Files          31      31              
  Lines       24731   24731              
  Branches     4411    4411              
=========================================
- Hits        21251   21244       -7     
- Misses       3480    3487       +7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,983,2017-11-13T11:34:55Z,2017-11-13T12:42:33Z,2017-11-13T12:42:33Z,MERGED,True,185,0,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #950,8,[],https://github.com/sysrepo/sysrepo/pull/983,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/983,"Hi,
this is a reopen of this pull request: #957
(just changed the branch)","Hi,
this is a reopen of this pull request: #957
(just changed the branch)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,985,2017-11-14T13:52:30Z,2017-11-22T10:03:30Z,2017-11-23T07:51:25Z,MERGED,True,6,1,1,https://github.com/michalvasko,Always discard changes after a successful commit,1,[],https://github.com/sysrepo/sysrepo/pull/985,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/985,"Description
Always discard changes after a successful commit.
Closure
Fixes #984","Description
Always discard changes after a successful commit.
Closure
Fixes #984",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,985,2017-11-14T13:52:30Z,2017-11-22T10:03:30Z,2017-11-23T07:51:25Z,MERGED,True,6,1,1,https://github.com/michalvasko,Always discard changes after a successful commit,1,[],https://github.com/sysrepo/sysrepo/pull/985,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/985#issuecomment-344273797,"Description
Always discard changes after a successful commit.
Closure
Fixes #984","Codecov Report

Merging #985 into devel will increase coverage by <.01%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #985      +/-   ##
==========================================
+ Coverage   85.92%   85.92%   +<.01%     
==========================================
  Files          31       31              
  Lines       24778    24780       +2     
  Branches     4422     4423       +1     
==========================================
+ Hits        21289    21291       +2     
  Misses       3489     3489",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,987,2017-11-15T12:50:11Z,2017-11-15T13:46:55Z,2017-11-16T16:43:00Z,MERGED,True,4,1,1,https://github.com/jktjkt,sysrepoctl: Fix memory leak,1,[],https://github.com/sysrepo/sysrepo/pull/987,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/987,"Commit d119b61 introduced a memory leak by forgetting to free the individual members of that array.
Discovered by ASAN; a simply make install was failing.","Commit d119b61 introduced a memory leak by forgetting to free the individual members of that array.
Discovered by ASAN; a simply make install was failing.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,987,2017-11-15T12:50:11Z,2017-11-15T13:46:55Z,2017-11-16T16:43:00Z,MERGED,True,4,1,1,https://github.com/jktjkt,sysrepoctl: Fix memory leak,1,[],https://github.com/sysrepo/sysrepo/pull/987,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/987#issuecomment-344587571,"Commit d119b61 introduced a memory leak by forgetting to free the individual members of that array.
Discovered by ASAN; a simply make install was failing.","Hi,
you are right, forgotten to free the directory itself, thanks. Please, address my request and then it can be merged.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,987,2017-11-15T12:50:11Z,2017-11-15T13:46:55Z,2017-11-16T16:43:00Z,MERGED,True,4,1,1,https://github.com/jktjkt,sysrepoctl: Fix memory leak,1,[],https://github.com/sysrepo/sysrepo/pull/987,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/987#issuecomment-344588711,"Commit d119b61 introduced a memory leak by forgetting to free the individual members of that array.
Discovered by ASAN; a simply make install was failing.","Codecov Report

Merging #987 into devel will decrease coverage by 0.01%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #987      +/-   ##
==========================================
- Coverage   85.92%   85.91%   -0.01%     
==========================================
  Files          31       31              
  Lines       24778    24781       +3     
  Branches     4422     4423       +1     
==========================================
+ Hits        21289    21290       +1     
- Misses       3489     3491       +2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,989,2017-11-16T05:42:57Z,2017-11-16T14:07:35Z,2017-11-16T14:07:35Z,CLOSED,False,0,4,4,https://github.com/Mandar12,"swig/cpp: removed ""using namespace std"" from header files",2,[],https://github.com/sysrepo/sysrepo/pull/989,https://github.com/Mandar12,1,https://github.com/sysrepo/sysrepo/pull/989,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,989,2017-11-16T05:42:57Z,2017-11-16T14:07:35Z,2017-11-16T14:07:35Z,CLOSED,False,0,4,4,https://github.com/Mandar12,"swig/cpp: removed ""using namespace std"" from header files",2,[],https://github.com/sysrepo/sysrepo/pull/989,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/989#issuecomment-344875478,,I'll need to do some work in SWIG to fix this. I'll make a new pull request today or tomorrow.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,990,2017-11-16T14:07:25Z,2017-11-21T12:45:46Z,2020-01-15T07:49:37Z,MERGED,True,342,365,20,https://github.com/mislavn,Cpp refactoring,8,[],https://github.com/sysrepo/sysrepo/pull/990,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/990,"Description
This pull request refactor's the C++ code base and it's cmake file.
It's loosely based on the libyang pull request: CESNET/libyang#389
But not all things are implemented from that pull request.
Also it make the pull request #989 redundant.
Closure
closes #982","Description
This pull request refactor's the C++ code base and it's cmake file.
It's loosely based on the libyang pull request: CESNET/libyang#389
But not all things are implemented from that pull request.
Also it make the pull request #989 redundant.
Closure
closes #982",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,990,2017-11-16T14:07:25Z,2017-11-21T12:45:46Z,2020-01-15T07:49:37Z,MERGED,True,342,365,20,https://github.com/mislavn,Cpp refactoring,8,[],https://github.com/sysrepo/sysrepo/pull/990,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/990#issuecomment-344962658,"Description
This pull request refactor's the C++ code base and it's cmake file.
It's loosely based on the libyang pull request: CESNET/libyang#389
But not all things are implemented from that pull request.
Also it make the pull request #989 redundant.
Closure
closes #982","Codecov Report

Merging #990 into devel will decrease coverage by 0.05%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel     #990      +/-   ##
==========================================
- Coverage   85.97%   85.92%   -0.05%     
==========================================
  Files          31       31              
  Lines       24780    24780              
  Branches     4423     4423              
==========================================
- Hits        21303    21290      -13     
- Misses       3477     3490      +13",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,992,2017-11-16T17:19:02Z,2017-11-20T08:05:49Z,2017-11-20T08:05:49Z,MERGED,True,6,6,1,https://github.com/jktjkt,tests: Unify and relax Unix group regex,1,[],https://github.com/sysrepo/sysrepo/pull/992,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/992,My CI was failing on this one because it was running as a user/group named turbo-hipster. This patch unifies all places where the username and gropu name are validated (except that sometimes the username is hardcoded). I'm also adding support for dashes and underscores.,My CI was failing on this one because it was running as a user/group named turbo-hipster. This patch unifies all places where the username and gropu name are validated (except that sometimes the username is hardcoded). I'm also adding support for dashes and underscores.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,992,2017-11-16T17:19:02Z,2017-11-20T08:05:49Z,2017-11-20T08:05:49Z,MERGED,True,6,6,1,https://github.com/jktjkt,tests: Unify and relax Unix group regex,1,[],https://github.com/sysrepo/sysrepo/pull/992,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/992#issuecomment-345005471,My CI was failing on this one because it was running as a user/group named turbo-hipster. This patch unifies all places where the username and gropu name are validated (except that sometimes the username is hardcoded). I'm also adding support for dashes and underscores.,"Codecov Report

Merging #992 into devel will decrease coverage by 0.07%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##            devel    #992      +/-   ##
=========================================
- Coverage   85.97%   85.9%   -0.07%     
=========================================
  Files          31      31              
  Lines       24780   24780              
  Branches     4423    4423              
=========================================
- Hits        21303   21285      -18     
- Misses       3477    3495      +18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,992,2017-11-16T17:19:02Z,2017-11-20T08:05:49Z,2017-11-20T08:05:49Z,MERGED,True,6,6,1,https://github.com/jktjkt,tests: Unify and relax Unix group regex,1,[],https://github.com/sysrepo/sysrepo/pull/992,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/992#issuecomment-345619070,My CI was failing on this one because it was running as a user/group named turbo-hipster. This patch unifies all places where the username and gropu name are validated (except that sometimes the username is hardcoded). I'm also adding support for dashes and underscores.,"Hi,
right, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,994,2017-11-21T07:57:49Z,2017-11-28T12:33:36Z,2017-11-28T12:33:39Z,MERGED,True,2,2,1,https://github.com/michalvasko,Do not use parent pointer directly in schema nodes,2,[],https://github.com/sysrepo/sysrepo/pull/994,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/994,"Description
Instead using parent pointer in schema nodes, always use lys_parent().
Closure
Fixes #993","Description
Instead using parent pointer in schema nodes, always use lys_parent().
Closure
Fixes #993",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,994,2017-11-21T07:57:49Z,2017-11-28T12:33:36Z,2017-11-28T12:33:39Z,MERGED,True,2,2,1,https://github.com/michalvasko,Do not use parent pointer directly in schema nodes,2,[],https://github.com/sysrepo/sysrepo/pull/994,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/994#issuecomment-345948683,"Description
Instead using parent pointer in schema nodes, always use lys_parent().
Closure
Fixes #993","Codecov Report

Merging #994 into devel will increase coverage by 0.02%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel     #994      +/-   ##
==========================================
+ Coverage   85.93%   85.95%   +0.02%     
==========================================
  Files          31       31              
  Lines       24781    24784       +3     
  Branches     4423     4426       +3     
==========================================
+ Hits        21295    21302       +7     
+ Misses       3486     3482       -4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,994,2017-11-21T07:57:49Z,2017-11-28T12:33:36Z,2017-11-28T12:33:39Z,MERGED,True,2,2,1,https://github.com/michalvasko,Do not use parent pointer directly in schema nodes,2,[],https://github.com/sysrepo/sysrepo/pull/994,https://github.com/ustcpxy,3,https://github.com/sysrepo/sysrepo/pull/994#issuecomment-346520034,"Description
Instead using parent pointer in schema nodes, always use lys_parent().
Closure
Fixes #993",the rule should be applied in rp_dt_no_parent_list_until as well.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,994,2017-11-21T07:57:49Z,2017-11-28T12:33:36Z,2017-11-28T12:33:39Z,MERGED,True,2,2,1,https://github.com/michalvasko,Do not use parent pointer directly in schema nodes,2,[],https://github.com/sysrepo/sysrepo/pull/994,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/994#issuecomment-346552040,"Description
Instead using parent pointer in schema nodes, always use lys_parent().
Closure
Fixes #993",Fair enough.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1001,2017-11-30T15:13:32Z,2017-12-07T07:17:14Z,2017-12-07T07:17:18Z,MERGED,True,474,12,9,https://github.com/michalvasko,sr_realloc added and corresponding values and trees functions,5,[],https://github.com/sysrepo/sysrepo/pull/1001,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1001,"Description
sr_realloc function added to enable enlarging arrays of sysrepo trees and values.
Test case
sr_realloc (also sr_realloc_trees, sr_realloc_values) tests added.
Closure
Fixes #965","Description
sr_realloc function added to enable enlarging arrays of sysrepo trees and values.
Test case
sr_realloc (also sr_realloc_trees, sr_realloc_values) tests added.
Closure
Fixes #965",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1001,2017-11-30T15:13:32Z,2017-12-07T07:17:14Z,2017-12-07T07:17:18Z,MERGED,True,474,12,9,https://github.com/michalvasko,sr_realloc added and corresponding values and trees functions,5,[],https://github.com/sysrepo/sysrepo/pull/1001,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1001#issuecomment-348221916,"Description
sr_realloc function added to enable enlarging arrays of sysrepo trees and values.
Test case
sr_realloc (also sr_realloc_trees, sr_realloc_values) tests added.
Closure
Fixes #965",Thanks for the feature.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1001,2017-11-30T15:13:32Z,2017-12-07T07:17:14Z,2017-12-07T07:17:18Z,MERGED,True,474,12,9,https://github.com/michalvasko,sr_realloc added and corresponding values and trees functions,5,[],https://github.com/sysrepo/sysrepo/pull/1001,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/1001#issuecomment-348266466,"Description
sr_realloc function added to enable enlarging arrays of sysrepo trees and values.
Test case
sr_realloc (also sr_realloc_trees, sr_realloc_values) tests added.
Closure
Fixes #965","I got a segmentation fault, am I using sr_realloc_values wrong?
cat example.c 
#include ""sysrepo.h""
#include ""sysrepo/values.h""
#include ""sysrepo/xpath.h""

int
main(int argc, char **argv)
{
    sr_val_t *v = NULL;
    int rc = SR_ERR_OK;

    rc = sr_new_values(1, &v);
    if (SR_ERR_OK != rc) {
        return rc;
    }

    sr_val_set_xpath(&v[0], ""/ietf-interfaces:interfaces-state/interface[name='eth0']/type"");
    sr_val_set_str_data(&v[0], SR_IDENTITYREF_T, ""ethernetCsmacd"");

    printf(""call sr_realloc_values\n"");
    rc = sr_realloc_values(1, 2, &v);
    if (SR_ERR_OK != rc) {
        return rc;
    }
    printf(""called sr_realloc_values\n"");

    sr_val_set_xpath(&v[1], ""/ietf-interfaces:interfaces-state/interface[name='eth0']/oper-status"");
    sr_val_set_str_data(&v[1], SR_ENUM_T, ""down"");

    printf(""success\n"");

    return 0;
}

gcc example.c -o example -lsysrepo
./example 
call sr_realloc_values
Segmentation fault (core dumped)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1001,2017-11-30T15:13:32Z,2017-12-07T07:17:14Z,2017-12-07T07:17:18Z,MERGED,True,474,12,9,https://github.com/michalvasko,sr_realloc added and corresponding values and trees functions,5,[],https://github.com/sysrepo/sysrepo/pull/1001,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1001#issuecomment-348427033,"Description
sr_realloc function added to enable enlarging arrays of sysrepo trees and values.
Test case
sr_realloc (also sr_realloc_trees, sr_realloc_values) tests added.
Closure
Fixes #965","Hi,
there were some minor issues, they should be fixed now and it should not crash any more (like I said, I am going to write some tests for values, there was the problem). However, like I said in the issue before, in your use-case the realloc performs exactly the same as malloc would because you interleave allocations (first sr_new_values, then sr_val_set_xpath, sr_val_set_str_data, and then sr_realloc_values). The xpath and string value get allocated right after the values so when you realloc, a new memory block must be taken leaving the previous one the way it was (sysrepo does not support freeing). So, if you first get to the final number of values and then start filling them, no memory should be wasted (provided that some conditions are met). I understand that may not be the most natural way of working with values, but sysrepo memory management is limited in this way.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1001,2017-11-30T15:13:32Z,2017-12-07T07:17:14Z,2017-12-07T07:17:18Z,MERGED,True,474,12,9,https://github.com/michalvasko,sr_realloc added and corresponding values and trees functions,5,[],https://github.com/sysrepo/sysrepo/pull/1001,https://github.com/codecov-io,5,https://github.com/sysrepo/sysrepo/pull/1001#issuecomment-348429707,"Description
sr_realloc function added to enable enlarging arrays of sysrepo trees and values.
Test case
sr_realloc (also sr_realloc_trees, sr_realloc_values) tests added.
Closure
Fixes #965","Codecov Report

Merging #1001 into devel will decrease coverage by 0.02%.
The diff coverage is 86.27%.

@@            Coverage Diff             @@
##            devel    #1001      +/-   ##
==========================================
- Coverage   85.94%   85.92%   -0.02%     
==========================================
  Files          31       31              
  Lines       24785    24886     +101     
  Branches     4426     4453      +27     
==========================================
+ Hits        21299    21382      +83     
- Misses       3486     3504      +18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1002,2017-11-30T15:30:27Z,2017-12-07T07:16:52Z,2020-01-15T07:49:40Z,MERGED,True,0,6,6,https://github.com/mislavn,BUGFIX remove branch devel-cli from dockerfiles,1,[],https://github.com/sysrepo/sysrepo/pull/1002,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1002,"Description
The dockerfiles for devel branch do not build any more because there is no longer a devel-cli branch in Netopeer2.
Test case
docker build -t sysrepo/sysrepo-netopeer2:devel -f deploy/docker/sysrepo-netopeer2/Dockerfile.devel .
The command will fail without the patch.","Description
The dockerfiles for devel branch do not build any more because there is no longer a devel-cli branch in Netopeer2.
Test case
docker build -t sysrepo/sysrepo-netopeer2:devel -f deploy/docker/sysrepo-netopeer2/Dockerfile.devel .
The command will fail without the patch.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1002,2017-11-30T15:30:27Z,2017-12-07T07:16:52Z,2020-01-15T07:49:40Z,MERGED,True,0,6,6,https://github.com/mislavn,BUGFIX remove branch devel-cli from dockerfiles,1,[],https://github.com/sysrepo/sysrepo/pull/1002,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1002#issuecomment-348432272,"Description
The dockerfiles for devel branch do not build any more because there is no longer a devel-cli branch in Netopeer2.
Test case
docker build -t sysrepo/sysrepo-netopeer2:devel -f deploy/docker/sysrepo-netopeer2/Dockerfile.devel .
The command will fail without the patch.","Hi,
OSX tests are currently failing because of a permission problem probably introduced by some travis update. I would try waiting some time (we will probably not release sysrepo today, so till Monday at least) and if it is still not fixed, we can modify the travis file.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1002,2017-11-30T15:30:27Z,2017-12-07T07:16:52Z,2020-01-15T07:49:40Z,MERGED,True,0,6,6,https://github.com/mislavn,BUGFIX remove branch devel-cli from dockerfiles,1,[],https://github.com/sysrepo/sysrepo/pull/1002,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/1002#issuecomment-349681523,"Description
The dockerfiles for devel branch do not build any more because there is no longer a devel-cli branch in Netopeer2.
Test case
docker build -t sysrepo/sysrepo-netopeer2:devel -f deploy/docker/sysrepo-netopeer2/Dockerfile.devel .
The command will fail without the patch.","Codecov Report

Merging #1002 into devel will increase coverage by 0.07%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1002      +/-   ##
==========================================
+ Coverage   85.94%   86.01%   +0.07%     
==========================================
  Files          31       31              
  Lines       24785    24786       +1     
  Branches     4426     4426              
==========================================
+ Hits        21299    21318      +19     
+ Misses       3486     3468      -18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1004,2017-12-04T15:23:08Z,2017-12-05T14:03:05Z,2017-12-05T14:03:08Z,MERGED,True,1,22,3,https://github.com/michalvasko,Travis OSX fixes,5,[],https://github.com/sysrepo/sysrepo/pull/1004,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1004,"Description
Travis OSX build stopped working after latest update, this pull request should fix it.","Description
Travis OSX build stopped working after latest update, this pull request should fix it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1004,2017-12-04T15:23:08Z,2017-12-05T14:03:05Z,2017-12-05T14:03:08Z,MERGED,True,1,22,3,https://github.com/michalvasko,Travis OSX fixes,5,[],https://github.com/sysrepo/sysrepo/pull/1004,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1004#issuecomment-349234660,"Description
Travis OSX build stopped working after latest update, this pull request should fix it.","Codecov Report

Merging #1004 into devel will decrease coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1004      +/-   ##
==========================================
- Coverage   85.94%   85.93%   -0.01%     
==========================================
  Files          31       31              
  Lines       24785    24784       -1     
  Branches     4426     4426              
==========================================
- Hits        21299    21296       -3     
- Misses       3486     3488       +2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1005,2017-12-06T09:03:50Z,2017-12-06T15:05:14Z,2017-12-06T15:05:19Z,MERGED,True,29,25,4,https://github.com/michalvasko,Import modules used in nacm paths,3,[],https://github.com/sysrepo/sysrepo/pull/1005,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1005,"Description
Some additional modules are needed whenever any are used in NACM identityrefs paths.
Test case
Affected tests fixed.","Description
Some additional modules are needed whenever any are used in NACM identityrefs paths.
Test case
Affected tests fixed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1005,2017-12-06T09:03:50Z,2017-12-06T15:05:14Z,2017-12-06T15:05:19Z,MERGED,True,29,25,4,https://github.com/michalvasko,Import modules used in nacm paths,3,[],https://github.com/sysrepo/sysrepo/pull/1005,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1005#issuecomment-349663990,"Description
Some additional modules are needed whenever any are used in NACM identityrefs paths.
Test case
Affected tests fixed.","Codecov Report

Merging #1005 into devel will increase coverage by 0.08%.
The diff coverage is 100%.

@@            Coverage Diff            @@
##            devel   #1005      +/-   ##
=========================================
+ Coverage   85.93%     86%   +0.08%     
=========================================
  Files          31      31              
  Lines       24784   24785       +1     
  Branches     4426    4426              
=========================================
+ Hits        21296   21316      +20     
+ Misses       3488    3469      -19",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1007,2017-12-07T07:57:55Z,2017-12-07T09:00:52Z,2017-12-07T09:00:52Z,MERGED,True,7473,719,99,https://github.com/michalvasko,devel merge,84,[],https://github.com/sysrepo/sysrepo/pull/1007,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1007,"Description
Merge of devel changes into master branch (new release).","Description
Merge of devel changes into master branch (new release).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1007,2017-12-07T07:57:55Z,2017-12-07T09:00:52Z,2017-12-07T09:00:52Z,MERGED,True,7473,719,99,https://github.com/michalvasko,devel merge,84,[],https://github.com/sysrepo/sysrepo/pull/1007,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1007#issuecomment-349895531,"Description
Merge of devel changes into master branch (new release).","Codecov Report

Merging #1007 into master will increase coverage by 0.16%.
The diff coverage is 84.31%.

@@            Coverage Diff             @@
##           master    #1007      +/-   ##
==========================================
+ Coverage   85.91%   86.07%   +0.16%     
==========================================
  Files          31       31              
  Lines       24731    24887     +156     
  Branches     4411     4453      +42     
==========================================
+ Hits        21246    21420     +174     
+ Misses       3485     3467      -18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1009,2017-12-07T09:03:34Z,2017-12-07T12:06:36Z,2017-12-07T14:23:03Z,MERGED,True,1,1,1,https://github.com/michalvasko,Bump to version 0.7.2,2,[],https://github.com/sysrepo/sysrepo/pull/1009,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1009,"Description
Version bump.","Description
Version bump.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1009,2017-12-07T09:03:34Z,2017-12-07T12:06:36Z,2017-12-07T14:23:03Z,MERGED,True,1,1,1,https://github.com/michalvasko,Bump to version 0.7.2,2,[],https://github.com/sysrepo/sysrepo/pull/1009,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1009#issuecomment-349944471,"Description
Version bump.","Codecov Report

Merging #1009 into master will decrease coverage by 0.05%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master    #1009      +/-   ##
==========================================
- Coverage   86.07%   86.02%   -0.05%     
==========================================
  Files          31       31              
  Lines       24887    24888       +1     
  Branches     4453     4453              
==========================================
- Hits        21420    21409      -11     
- Misses       3467     3479      +12",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1010,2017-12-07T09:05:02Z,2017-12-07T10:54:19Z,2017-12-07T10:54:20Z,MERGED,True,1,1,1,https://github.com/michalvasko,Bump devel to version 0.7.2,1,[],https://github.com/sysrepo/sysrepo/pull/1010,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1010,"Description
Version bump.","Description
Version bump.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1010,2017-12-07T09:05:02Z,2017-12-07T10:54:19Z,2017-12-07T10:54:20Z,MERGED,True,1,1,1,https://github.com/michalvasko,Bump devel to version 0.7.2,1,[],https://github.com/sysrepo/sysrepo/pull/1010,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1010#issuecomment-349921191,"Description
Version bump.","Codecov Report

Merging #1010 into devel will increase coverage by 0.02%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1010      +/-   ##
==========================================
+ Coverage   86.06%   86.08%   +0.02%     
==========================================
  Files          31       31              
  Lines       24887    24887              
  Branches     4453     4453              
==========================================
+ Hits        21417    21422       +5     
+ Misses       3470     3465       -5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1013,2017-12-12T07:39:44Z,2017-12-12T08:04:41Z,2017-12-12T08:07:59Z,MERGED,True,8,2,1,https://github.com/michalvasko,First child state node in augment fix,1,[],https://github.com/sysrepo/sysrepo/pull/1013,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1013,"Description
When learning state data subtrees in a schema, augment with first child operational node was not analysed properly.
Closure
Fixes #1011","Description
When learning state data subtrees in a schema, augment with first child operational node was not analysed properly.
Closure
Fixes #1011",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1013,2017-12-12T07:39:44Z,2017-12-12T08:04:41Z,2017-12-12T08:07:59Z,MERGED,True,8,2,1,https://github.com/michalvasko,First child state node in augment fix,1,[],https://github.com/sysrepo/sysrepo/pull/1013,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1013#issuecomment-350974434,"Description
When learning state data subtrees in a schema, augment with first child operational node was not analysed properly.
Closure
Fixes #1011","Codecov Report

Merging #1013 into devel will decrease coverage by 0.07%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1013      +/-   ##
==========================================
- Coverage   86.06%   85.99%   -0.07%     
==========================================
  Files          31       31              
  Lines       24887    24892       +5     
  Branches     4453     4454       +1     
==========================================
- Hits        21418    21405      -13     
- Misses       3469     3487      +18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1016,2017-12-13T12:09:11Z,2017-12-13T12:29:59Z,2017-12-13T12:30:19Z,MERGED,True,2,2,1,https://github.com/michalvasko,Travis ctest path fix,4,[],https://github.com/sysrepo/sysrepo/pull/1016,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1016,"Description
Path to ctest binary is missing in sudo path.","Description
Path to ctest binary is missing in sudo path.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1016,2017-12-13T12:09:11Z,2017-12-13T12:29:59Z,2017-12-13T12:30:19Z,MERGED,True,2,2,1,https://github.com/michalvasko,Travis ctest path fix,4,[],https://github.com/sysrepo/sysrepo/pull/1016,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1016#issuecomment-351377423,"Description
Path to ctest binary is missing in sudo path.","Codecov Report

Merging #1016 into devel will increase coverage by <.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1016      +/-   ##
==========================================
+ Coverage   86.01%   86.01%   +<.01%     
==========================================
  Files          31       31              
  Lines       24891    24892       +1     
  Branches     4454     4454              
==========================================
+ Hits        21409    21410       +1     
  Misses       3482     3482",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1021,2018-01-02T15:33:02Z,2018-01-03T07:53:03Z,2018-01-03T07:54:06Z,MERGED,True,47,21,2,https://github.com/michalvasko,Handle nested notifications and subscriptions,1,[],https://github.com/sysrepo/sysrepo/pull/1021,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1021,"Description
Added support for subscribing and sending nested notifications.
Closure
Fixes #1019","Description
Added support for subscribing and sending nested notifications.
Closure
Fixes #1019",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1023,2018-01-03T15:22:28Z,2018-01-08T12:35:05Z,2018-01-08T12:35:09Z,MERGED,True,5,2,1,https://github.com/michalvasko,Operational subtree module traversal,1,[],https://github.com/sysrepo/sysrepo/pull/1023,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1023,"Description
Uses was not properly handled when traversing a module looking for operational subtrees.
Closure
Fixes #1011","Description
Uses was not properly handled when traversing a module looking for operational subtrees.
Closure
Fixes #1011",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1025,2018-01-08T12:38:48Z,2018-01-08T13:17:19Z,2018-01-08T13:17:55Z,MERGED,True,7,2,1,https://github.com/michalvasko,Use a recursive lock for subscriptions,1,[],https://github.com/sysrepo/sysrepo/pull/1025,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1025,"Description
Use a recursive lock for subscriptions. Otherwise, when a subscription is being removed a double lock occurs.
Closure
Fixes #1024","Description
Use a recursive lock for subscriptions. Otherwise, when a subscription is being removed a double lock occurs.
Closure
Fixes #1024",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1025,2018-01-08T12:38:48Z,2018-01-08T13:17:19Z,2018-01-08T13:17:55Z,MERGED,True,7,2,1,https://github.com/michalvasko,Use a recursive lock for subscriptions,1,[],https://github.com/sysrepo/sysrepo/pull/1025,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1025#issuecomment-355961972,"Description
Use a recursive lock for subscriptions. Otherwise, when a subscription is being removed a double lock occurs.
Closure
Fixes #1024","Codecov Report

Merging #1025 into devel will increase coverage by 0.07%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1025      +/-   ##
==========================================
+ Coverage   85.97%   86.04%   +0.07%     
==========================================
  Files          31       31              
  Lines       24911    24915       +4     
  Branches     4458     4458              
==========================================
+ Hits        21416    21438      +22     
+ Misses       3495     3477      -18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1030,2018-01-12T11:17:53Z,2018-01-12T15:06:14Z,2018-01-12T15:08:44Z,MERGED,True,154,99,7,https://github.com/michalvasko,Failed copy-config on verifier callback did not rollback changes,1,[],https://github.com/sysrepo/sysrepo/pull/1030,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1030,"Description
Seems this functionality was accidentally completely removed some time ago when fixing another issue and optimizing the copy-config to running process.
Test case
Affected tests modified.
Closure
Fixes #1026","Description
Seems this functionality was accidentally completely removed some time ago when fixing another issue and optimizing the copy-config to running process.
Test case
Affected tests modified.
Closure
Fixes #1026",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1030,2018-01-12T11:17:53Z,2018-01-12T15:06:14Z,2018-01-12T15:08:44Z,MERGED,True,154,99,7,https://github.com/michalvasko,Failed copy-config on verifier callback did not rollback changes,1,[],https://github.com/sysrepo/sysrepo/pull/1030,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1030#issuecomment-357261850,"Description
Seems this functionality was accidentally completely removed some time ago when fixing another issue and optimizing the copy-config to running process.
Test case
Affected tests modified.
Closure
Fixes #1026","Codecov Report

Merging #1030 into devel will increase coverage by 0.06%.
The diff coverage is 96.05%.

@@            Coverage Diff             @@
##            devel    #1030      +/-   ##
==========================================
+ Coverage   85.98%   86.04%   +0.06%     
==========================================
  Files          31       31              
  Lines       24915    24934      +19     
  Branches     4458     4459       +1     
==========================================
+ Hits        21421    21452      +31     
+ Misses       3494     3482      -12",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1033,2018-01-17T12:47:41Z,2018-01-17T14:41:40Z,2018-01-17T14:42:48Z,MERGED,True,8,3,3,https://github.com/michalvasko,Prevent recursive dependent data load,3,[],https://github.com/sysrepo/sysrepo/pull/1033,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1033,"Description
When modules with circular dependencies on each other are validated, the data loading functions entered an infinite loop.
Closure
Fixes #1032","Description
When modules with circular dependencies on each other are validated, the data loading functions entered an infinite loop.
Closure
Fixes #1032",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1033,2018-01-17T12:47:41Z,2018-01-17T14:41:40Z,2018-01-17T14:42:48Z,MERGED,True,8,3,3,https://github.com/michalvasko,Prevent recursive dependent data load,3,[],https://github.com/sysrepo/sysrepo/pull/1033,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1033#issuecomment-358324601,"Description
When modules with circular dependencies on each other are validated, the data loading functions entered an infinite loop.
Closure
Fixes #1032","Codecov Report

Merging #1033 into devel will increase coverage by 1.19%.
The diff coverage is 100%.


@@            Coverage Diff            @@
##           devel    #1033      +/-   ##
=========================================
+ Coverage     86%   87.19%   +1.19%     
=========================================
  Files         31       65      +34     
  Lines      24933    48122   +23189     
  Branches    4459     5279     +820     
=========================================
+ Hits       21443    41960   +20517     
- Misses      3490     3870     +380     
- Partials       0     2292    +2292



Impacted Files
Coverage Δ





src/data_manager.c
79.76% <100%> (-6.99%)
⬇️


src/clientlib/cl_trees.c
54.54% <0%> (-22.73%)
⬇️


src/module_dependencies.c
71.29% <0%> (-13.45%)
⬇️


src/connection_manager.c
66.79% <0%> (-12.33%)
⬇️


src/executables/sysrepocfg.c
62.95% <0%> (-11.86%)
⬇️


src/clientlib/cl_common.c
66.11% <0%> (-11.85%)
⬇️


src/cm_session_manager.c
70.38% <0%> (-11.5%)
⬇️


src/common/sr_logger.c
87.67% <0%> (-10.96%)
⬇️


src/utils/xpath.c
80% <0%> (-10.48%)
⬇️


src/nacm.c
78.98% <0%> (-10.24%)
⬇️


... and 56 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 84bb982...5f9efc1. Read the comment docs.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1035,2018-01-18T11:55:16Z,2018-01-31T12:16:04Z,2020-01-15T07:49:41Z,MERGED,True,12,5336,3,https://github.com/mislavn,docker: update openwrt build,1,[],https://github.com/sysrepo/sysrepo/pull/1035,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1035,"After the LEDE/OpenWrt merge the script build_and_run_on_openwrt.sh in end-to-end tests fails, this patch fixes it and changes the configuration so it holds only the diff.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","After the LEDE/OpenWrt merge the script build_and_run_on_openwrt.sh in end-to-end tests fails, this patch fixes it and changes the configuration so it holds only the diff.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1035,2018-01-18T11:55:16Z,2018-01-31T12:16:04Z,2020-01-15T07:49:41Z,MERGED,True,12,5336,3,https://github.com/mislavn,docker: update openwrt build,1,[],https://github.com/sysrepo/sysrepo/pull/1035,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1035#issuecomment-358806091,"After the LEDE/OpenWrt merge the script build_and_run_on_openwrt.sh in end-to-end tests fails, this patch fixes it and changes the configuration so it holds only the diff.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr","Codecov Report

Merging #1035 into devel will increase coverage by 0.03%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##            devel   #1035      +/-   ##
=========================================
+ Coverage   85.97%     86%   +0.03%     
=========================================
  Files          31      31              
  Lines       24936   24936              
  Branches     4460    4460              
=========================================
+ Hits        21438   21446       +8     
+ Misses       3498    3490       -8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1035,2018-01-18T11:55:16Z,2018-01-31T12:16:04Z,2020-01-15T07:49:41Z,MERGED,True,12,5336,3,https://github.com/mislavn,docker: update openwrt build,1,[],https://github.com/sysrepo/sysrepo/pull/1035,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/1035#issuecomment-361914312,"After the LEDE/OpenWrt merge the script build_and_run_on_openwrt.sh in end-to-end tests fails, this patch fixes it and changes the configuration so it holds only the diff.
Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr",yes it works :),True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1036,2018-01-18T12:32:49Z,2018-01-19T07:42:07Z,2018-01-19T07:42:09Z,MERGED,True,481,375,5,https://github.com/michalvasko,Sysrepocfg can now uninstall more modules in one call,2,[],https://github.com/sysrepo/sysrepo/pull/1036,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1036,"Description
Sysrepocfg can now uninstall more modules simultaneously in one uninstall command so that modules with dependencies on each other can be removed.
Closure
Fixes #1032","Description
Sysrepocfg can now uninstall more modules simultaneously in one uninstall command so that modules with dependencies on each other can be removed.
Closure
Fixes #1032",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1036,2018-01-18T12:32:49Z,2018-01-19T07:42:07Z,2018-01-19T07:42:09Z,MERGED,True,481,375,5,https://github.com/michalvasko,Sysrepocfg can now uninstall more modules in one call,2,[],https://github.com/sysrepo/sysrepo/pull/1036,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1036#issuecomment-358813317,"Description
Sysrepocfg can now uninstall more modules simultaneously in one uninstall command so that modules with dependencies on each other can be removed.
Closure
Fixes #1032","Codecov Report

Merging #1036 into devel will decrease coverage by 0.1%.
The diff coverage is 79.1%.

@@            Coverage Diff            @@
##            devel    #1036     +/-   ##
=========================================
- Coverage   85.97%   85.87%   -0.1%     
=========================================
  Files          31       31             
  Lines       24936    24999     +63     
  Branches     4460     4486     +26     
=========================================
+ Hits        21438    21467     +29     
- Misses       3498     3532     +34",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1038,2018-01-23T13:24:39Z,2018-01-23T13:41:11Z,2018-01-23T13:41:15Z,MERGED,True,718,28,11,https://github.com/michalvasko,Oven plugin example,2,[],https://github.com/sysrepo/sysrepo/pull/1038,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1038,"Description
An oven plugin example was added with detailed documentation in Developer Guide/Getting Started.","Description
An oven plugin example was added with detailed documentation in Developer Guide/Getting Started.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1039,2018-01-24T12:48:14Z,2018-01-26T07:51:50Z,2018-01-26T07:51:50Z,MERGED,True,141,0,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #1032,6,[],https://github.com/sysrepo/sysrepo/pull/1039,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/1039,"Hi,
as discussed in the mentioned issue, here's the test case to verify the solution. For the description of the test, please refer to #1032
Btw.:
In order to get rid of the installed modules afterwards, I had to add an ugly workaround. I hope, you can live with it, as long as no solution for the uninstallation of interlocked modules is in sight.
Kind Regards,
Frank Rimpler","Hi,
as discussed in the mentioned issue, here's the test case to verify the solution. For the description of the test, please refer to #1032
Btw.:
In order to get rid of the installed modules afterwards, I had to add an ugly workaround. I hope, you can live with it, as long as no solution for the uninstallation of interlocked modules is in sight.
Kind Regards,
Frank Rimpler",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1039,2018-01-24T12:48:14Z,2018-01-26T07:51:50Z,2018-01-26T07:51:50Z,MERGED,True,141,0,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #1032,6,[],https://github.com/sysrepo/sysrepo/pull/1039,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1039#issuecomment-360128847,"Hi,
as discussed in the mentioned issue, here's the test case to verify the solution. For the description of the test, please refer to #1032
Btw.:
In order to get rid of the installed modules afterwards, I had to add an ugly workaround. I hope, you can live with it, as long as no solution for the uninstallation of interlocked modules is in sight.
Kind Regards,
Frank Rimpler","Hi Frank,
actually, it is already possible to uninstall several modules at once using sysrepocfg. I have referenced the commit in #1032 but not mentioned it explicitly, sorry about that.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1039,2018-01-24T12:48:14Z,2018-01-26T07:51:50Z,2018-01-26T07:51:50Z,MERGED,True,141,0,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #1032,6,[],https://github.com/sysrepo/sysrepo/pull/1039,https://github.com/frimpler,3,https://github.com/sysrepo/sysrepo/pull/1039#issuecomment-360132836,"Hi,
as discussed in the mentioned issue, here's the test case to verify the solution. For the description of the test, please refer to #1032
Btw.:
In order to get rid of the installed modules afterwards, I had to add an ugly workaround. I hope, you can live with it, as long as no solution for the uninstallation of interlocked modules is in sight.
Kind Regards,
Frank Rimpler","Hi Michal,
yes, I have already noticed it and tried to apply it, before I created the pull request, but it didn't work (in either un-installation order). Anyway, because my expectation was, that interlocked modules cannot be easily un-installed, I didn't undertake more investigations. Do you suggest any change in the test?
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1039,2018-01-24T12:48:14Z,2018-01-26T07:51:50Z,2018-01-26T07:51:50Z,MERGED,True,141,0,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #1032,6,[],https://github.com/sysrepo/sysrepo/pull/1039,https://github.com/codecov-io,4,https://github.com/sysrepo/sysrepo/pull/1039#issuecomment-360304367,"Hi,
as discussed in the mentioned issue, here's the test case to verify the solution. For the description of the test, please refer to #1032
Btw.:
In order to get rid of the installed modules afterwards, I had to add an ugly workaround. I hope, you can live with it, as long as no solution for the uninstallation of interlocked modules is in sight.
Kind Regards,
Frank Rimpler","Codecov Report

Merging #1039 into devel will increase coverage by 0.13%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1039      +/-   ##
==========================================
+ Coverage   85.84%   85.96%   +0.13%     
==========================================
  Files          31       31              
  Lines       25007    25008       +1     
  Branches     4489     4489              
==========================================
+ Hits        21465    21498      +33     
+ Misses       3542     3510      -32",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1039,2018-01-24T12:48:14Z,2018-01-26T07:51:50Z,2018-01-26T07:51:50Z,MERGED,True,141,0,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #1032,6,[],https://github.com/sysrepo/sysrepo/pull/1039,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1039#issuecomment-360401255,"Hi,
as discussed in the mentioned issue, here's the test case to verify the solution. For the description of the test, please refer to #1032
Btw.:
In order to get rid of the installed modules afterwards, I had to add an ugly workaround. I hope, you can live with it, as long as no solution for the uninstallation of interlocked modules is in sight.
Kind Regards,
Frank Rimpler","Hi Frank,
just uninstall the modules with this command
exec_shell_command(""../src/sysrepoctl --uninstall --module mutual-leafref-base,mutual-leafref-augment"", "".*"", true, 0);
It worked fine for me. However, I have tried uninstalling first mutual-leafref-augment and that was not handled properly so I have created a pull request which should make the order arbitrary.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1039,2018-01-24T12:48:14Z,2018-01-26T07:51:50Z,2018-01-26T07:51:50Z,MERGED,True,141,0,3,https://github.com/frimpler,test case to verify solution of sysrepo issue #1032,6,[],https://github.com/sysrepo/sysrepo/pull/1039,https://github.com/frimpler,6,https://github.com/sysrepo/sysrepo/pull/1039#issuecomment-360539017,"Hi,
as discussed in the mentioned issue, here's the test case to verify the solution. For the description of the test, please refer to #1032
Btw.:
In order to get rid of the installed modules afterwards, I had to add an ugly workaround. I hope, you can live with it, as long as no solution for the uninstallation of interlocked modules is in sight.
Kind Regards,
Frank Rimpler","Hi Michal,
I'm lucky that un-installation works now. So please pull it in :-)
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1040,2018-01-25T08:51:43Z,2018-01-25T09:10:04Z,2018-01-25T09:10:07Z,MERGED,True,20,5,1,https://github.com/michalvasko,Removing dependent module first with dependency,1,[],https://github.com/sysrepo/sysrepo/pull/1040,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1040,"Description
When removing the dependent module causes implicit removal of the dependency, the dependency would then fail to be removed (because it was already removed).
Closure
Refs #1039","Description
When removing the dependent module causes implicit removal of the dependency, the dependency would then fail to be removed (because it was already removed).
Closure
Refs #1039",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1043,2018-01-31T11:23:55Z,2018-01-31T12:40:08Z,2018-01-31T13:38:50Z,MERGED,True,112,9,5,https://github.com/frimpler,test case + possible solution for feature enabling issue,1,[],https://github.com/sysrepo/sysrepo/pull/1043,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/1043,"Hi,
the pull request addresses an issue with feature enabling. Here's the description of the test case, which reflects the problem:

In the YANG modules ""feature-dependencies1/2/3"" several features are defined.
The feature ""abc"" defined in ""feature-dependencies2"" depends on feature ""xyz""
defined in ""feature-dependency3"". Both features can be enabled without problems.
But if afterwards one tries to enable other features without dependencies
e.g. ""issue1"" in ""feature-dependencies1"" or ""issue2"" in ""feature-dependencies2""
an error occurs: Feature ""abc"" is disabled by its 1. if-feature condition.
The reason is the order in which the persistent data are loaded. The persistent
data of imported modules should always be loaded before the data of the importer.

We have additionally to the test case made an attempt to fix it in datamanager.c. Please have a look at it.
Btw.: as it seems, there's a little inconsistency with libyang and sysrepo's devel branch. I had to adapt lys_print_mem()'s parameters just to get it compiled. Please check this also for correctness.
Regards,
Frank","Hi,
the pull request addresses an issue with feature enabling. Here's the description of the test case, which reflects the problem:

In the YANG modules ""feature-dependencies1/2/3"" several features are defined.
The feature ""abc"" defined in ""feature-dependencies2"" depends on feature ""xyz""
defined in ""feature-dependency3"". Both features can be enabled without problems.
But if afterwards one tries to enable other features without dependencies
e.g. ""issue1"" in ""feature-dependencies1"" or ""issue2"" in ""feature-dependencies2""
an error occurs: Feature ""abc"" is disabled by its 1. if-feature condition.
The reason is the order in which the persistent data are loaded. The persistent
data of imported modules should always be loaded before the data of the importer.

We have additionally to the test case made an attempt to fix it in datamanager.c. Please have a look at it.
Btw.: as it seems, there's a little inconsistency with libyang and sysrepo's devel branch. I had to adapt lys_print_mem()'s parameters just to get it compiled. Please check this also for correctness.
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1043,2018-01-31T11:23:55Z,2018-01-31T12:40:08Z,2018-01-31T13:38:50Z,MERGED,True,112,9,5,https://github.com/frimpler,test case + possible solution for feature enabling issue,1,[],https://github.com/sysrepo/sysrepo/pull/1043,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1043#issuecomment-361907234,"Hi,
the pull request addresses an issue with feature enabling. Here's the description of the test case, which reflects the problem:

In the YANG modules ""feature-dependencies1/2/3"" several features are defined.
The feature ""abc"" defined in ""feature-dependencies2"" depends on feature ""xyz""
defined in ""feature-dependency3"". Both features can be enabled without problems.
But if afterwards one tries to enable other features without dependencies
e.g. ""issue1"" in ""feature-dependencies1"" or ""issue2"" in ""feature-dependencies2""
an error occurs: Feature ""abc"" is disabled by its 1. if-feature condition.
The reason is the order in which the persistent data are loaded. The persistent
data of imported modules should always be loaded before the data of the importer.

We have additionally to the test case made an attempt to fix it in datamanager.c. Please have a look at it.
Btw.: as it seems, there's a little inconsistency with libyang and sysrepo's devel branch. I had to adapt lys_print_mem()'s parameters just to get it compiled. Please check this also for correctness.
Regards,
Frank","Codecov Report

Merging #1043 into devel will decrease coverage by 0.02%.
The diff coverage is 100%.

@@            Coverage Diff            @@
##           devel    #1043      +/-   ##
=========================================
- Coverage     86%   85.98%   -0.02%     
=========================================
  Files         31       31              
  Lines      25008    25007       -1     
  Branches    4489     4489              
=========================================
- Hits       21506    21501       -5     
- Misses      3502     3506       +4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1043,2018-01-31T11:23:55Z,2018-01-31T12:40:08Z,2018-01-31T13:38:50Z,MERGED,True,112,9,5,https://github.com/frimpler,test case + possible solution for feature enabling issue,1,[],https://github.com/sysrepo/sysrepo/pull/1043,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1043#issuecomment-361920307,"Hi,
the pull request addresses an issue with feature enabling. Here's the description of the test case, which reflects the problem:

In the YANG modules ""feature-dependencies1/2/3"" several features are defined.
The feature ""abc"" defined in ""feature-dependencies2"" depends on feature ""xyz""
defined in ""feature-dependency3"". Both features can be enabled without problems.
But if afterwards one tries to enable other features without dependencies
e.g. ""issue1"" in ""feature-dependencies1"" or ""issue2"" in ""feature-dependencies2""
an error occurs: Feature ""abc"" is disabled by its 1. if-feature condition.
The reason is the order in which the persistent data are loaded. The persistent
data of imported modules should always be loaded before the data of the importer.

We have additionally to the test case made an attempt to fix it in datamanager.c. Please have a look at it.
Btw.: as it seems, there's a little inconsistency with libyang and sysrepo's devel branch. I had to adapt lys_print_mem()'s parameters just to get it compiled. Please check this also for correctness.
Regards,
Frank","Hi Frank,
thanks, seems good! Sorry about the missing parameters, I have forgotten to update sysrepo, so thanks again.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1044,2018-02-06T10:26:31Z,2018-02-06T15:22:52Z,2018-02-06T15:22:52Z,MERGED,True,4,4,2,https://github.com/ustcpxy,"bugfix: support ""config false"" node into choice node",1,[],https://github.com/sysrepo/sysrepo/pull/1044,https://github.com/ustcpxy,1,https://github.com/sysrepo/sysrepo/pull/1044,"the pull request can slove two issues:
case 1: if there is a choice node with config false leaf node, the leaf node can not be installed into op-data-subtrees in sysrepo-module-dependencies.xml .
case 2: if the state data is nested in choice/case node, the depth should not be increased.","the pull request can slove two issues:
case 1: if there is a choice node with config false leaf node, the leaf node can not be installed into op-data-subtrees in sysrepo-module-dependencies.xml .
case 2: if the state data is nested in choice/case node, the depth should not be increased.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1044,2018-02-06T10:26:31Z,2018-02-06T15:22:52Z,2018-02-06T15:22:52Z,MERGED,True,4,4,2,https://github.com/ustcpxy,"bugfix: support ""config false"" node into choice node",1,[],https://github.com/sysrepo/sysrepo/pull/1044,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1044#issuecomment-363383311,"the pull request can slove two issues:
case 1: if there is a choice node with config false leaf node, the leaf node can not be installed into op-data-subtrees in sysrepo-module-dependencies.xml .
case 2: if the state data is nested in choice/case node, the depth should not be increased.","Codecov Report

Merging #1044 into devel will increase coverage by 0.02%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1044      +/-   ##
==========================================
+ Coverage   85.94%   85.96%   +0.02%     
==========================================
  Files          31       31              
  Lines       25007    25007              
  Branches     4489     4489              
==========================================
+ Hits        21492    21496       +4     
+ Misses       3515     3511       -4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1044,2018-02-06T10:26:31Z,2018-02-06T15:22:52Z,2018-02-06T15:22:52Z,MERGED,True,4,4,2,https://github.com/ustcpxy,"bugfix: support ""config false"" node into choice node",1,[],https://github.com/sysrepo/sysrepo/pull/1044,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1044#issuecomment-363455598,"the pull request can slove two issues:
case 1: if there is a choice node with config false leaf node, the leaf node can not be installed into op-data-subtrees in sysrepo-module-dependencies.xml .
case 2: if the state data is nested in choice/case node, the depth should not be increased.","Hi,
seems fine, these nodes were not handled. Thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1045,2018-02-06T15:25:52Z,2018-02-06T15:26:20Z,2018-02-06T15:26:20Z,MERGED,True,1,1,1,https://github.com/michalvasko,Operatioanl data subscriptions actually accept data paths,1,[],https://github.com/sysrepo/sysrepo/pull/1045,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1045,"Description
Just a documentation fix for the format of path accepted by operational data subscriptions.","Description
Just a documentation fix for the format of path accepted by operational data subscriptions.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1047,2018-02-09T08:13:35Z,2018-02-09T08:33:03Z,2018-02-09T08:34:32Z,MERGED,True,4,2,1,https://github.com/michalvasko,Handle submodules in schema predicate checks,1,[],https://github.com/sysrepo/sysrepo/pull/1047,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1047,"Description
Submodules were not handled in schema predicate checks.
Closure
Fixes #1046","Description
Submodules were not handled in schema predicate checks.
Closure
Fixes #1046",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1047,2018-02-09T08:13:35Z,2018-02-09T08:33:03Z,2018-02-09T08:34:32Z,MERGED,True,4,2,1,https://github.com/michalvasko,Handle submodules in schema predicate checks,1,[],https://github.com/sysrepo/sysrepo/pull/1047,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1047#issuecomment-364368147,"Description
Submodules were not handled in schema predicate checks.
Closure
Fixes #1046","Codecov Report

Merging #1047 into devel will increase coverage by 0.01%.
The diff coverage is 66.67%.

@@            Coverage Diff             @@
##            devel    #1047      +/-   ##
==========================================
+ Coverage   85.96%   85.97%   +0.01%     
==========================================
  Files          31       31              
  Lines       25007    25008       +1     
  Branches     4489     4489              
==========================================
+ Hits        21497    21500       +3     
+ Misses       3510     3508       -2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1048,2018-02-09T09:33:20Z,2018-02-09T10:27:03Z,2018-02-09T10:35:02Z,MERGED,True,2,2,1,https://github.com/frimpler,replace cp by install,1,[],https://github.com/sysrepo/sysrepo/pull/1048,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/1048,"Hi,
I made a little change in sysrepoctl:
When installing modules with sysrepoctl the schema file will be copied to /etc/sysrepo/yang/ by ""cp"". ""cp"" copies also the permissions and if the source file has write protection, then a ""reinstallation"" will fail. Such a ""reinstallation"" happens for example, if one first installs ietf-interfaces and afterwards a module my-interfaces which imports ietf-interfaces.
I replaced ""cp"" by ""install"" with ""user read+write permission"" and all other with ""read permission"".
I hope it's ok in that way.
Regards,
Frank
Btw.:
Do you plan to merge devel into master branch for sysrepo soon? It's already 2 month ahead  and I'd really like to see our recent changes at the master branch :-).","Hi,
I made a little change in sysrepoctl:
When installing modules with sysrepoctl the schema file will be copied to /etc/sysrepo/yang/ by ""cp"". ""cp"" copies also the permissions and if the source file has write protection, then a ""reinstallation"" will fail. Such a ""reinstallation"" happens for example, if one first installs ietf-interfaces and afterwards a module my-interfaces which imports ietf-interfaces.
I replaced ""cp"" by ""install"" with ""user read+write permission"" and all other with ""read permission"".
I hope it's ok in that way.
Regards,
Frank
Btw.:
Do you plan to merge devel into master branch for sysrepo soon? It's already 2 month ahead  and I'd really like to see our recent changes at the master branch :-).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1048,2018-02-09T09:33:20Z,2018-02-09T10:27:03Z,2018-02-09T10:35:02Z,MERGED,True,2,2,1,https://github.com/frimpler,replace cp by install,1,[],https://github.com/sysrepo/sysrepo/pull/1048,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1048#issuecomment-364386296,"Hi,
I made a little change in sysrepoctl:
When installing modules with sysrepoctl the schema file will be copied to /etc/sysrepo/yang/ by ""cp"". ""cp"" copies also the permissions and if the source file has write protection, then a ""reinstallation"" will fail. Such a ""reinstallation"" happens for example, if one first installs ietf-interfaces and afterwards a module my-interfaces which imports ietf-interfaces.
I replaced ""cp"" by ""install"" with ""user read+write permission"" and all other with ""read permission"".
I hope it's ok in that way.
Regards,
Frank
Btw.:
Do you plan to merge devel into master branch for sysrepo soon? It's already 2 month ahead  and I'd really like to see our recent changes at the master branch :-).","Codecov Report

Merging #1048 into devel will decrease coverage by 0.01%.
The diff coverage is 50%.

@@            Coverage Diff             @@
##            devel    #1048      +/-   ##
==========================================
- Coverage   85.96%   85.95%   -0.01%     
==========================================
  Files          31       31              
  Lines       25008    25008              
  Branches     4489     4489              
==========================================
- Hits        21497    21494       -3     
- Misses       3511     3514       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1048,2018-02-09T09:33:20Z,2018-02-09T10:27:03Z,2018-02-09T10:35:02Z,MERGED,True,2,2,1,https://github.com/frimpler,replace cp by install,1,[],https://github.com/sysrepo/sysrepo/pull/1048,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1048#issuecomment-364395633,"Hi,
I made a little change in sysrepoctl:
When installing modules with sysrepoctl the schema file will be copied to /etc/sysrepo/yang/ by ""cp"". ""cp"" copies also the permissions and if the source file has write protection, then a ""reinstallation"" will fail. Such a ""reinstallation"" happens for example, if one first installs ietf-interfaces and afterwards a module my-interfaces which imports ietf-interfaces.
I replaced ""cp"" by ""install"" with ""user read+write permission"" and all other with ""read permission"".
I hope it's ok in that way.
Regards,
Frank
Btw.:
Do you plan to merge devel into master branch for sysrepo soon? It's already 2 month ahead  and I'd really like to see our recent changes at the master branch :-).","Hi Frank,
makes sense and will be fine.
Regarding the merge, we are planning to talk about it on the next meeting (Wednesday) and my stance actually was that there are no critical changes and so the merge can wait. But if you want it merged I have no problem with it and will mention it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1048,2018-02-09T09:33:20Z,2018-02-09T10:27:03Z,2018-02-09T10:35:02Z,MERGED,True,2,2,1,https://github.com/frimpler,replace cp by install,1,[],https://github.com/sysrepo/sysrepo/pull/1048,https://github.com/frimpler,4,https://github.com/sysrepo/sysrepo/pull/1048#issuecomment-364397647,"Hi,
I made a little change in sysrepoctl:
When installing modules with sysrepoctl the schema file will be copied to /etc/sysrepo/yang/ by ""cp"". ""cp"" copies also the permissions and if the source file has write protection, then a ""reinstallation"" will fail. Such a ""reinstallation"" happens for example, if one first installs ietf-interfaces and afterwards a module my-interfaces which imports ietf-interfaces.
I replaced ""cp"" by ""install"" with ""user read+write permission"" and all other with ""read permission"".
I hope it's ok in that way.
Regards,
Frank
Btw.:
Do you plan to merge devel into master branch for sysrepo soon? It's already 2 month ahead  and I'd really like to see our recent changes at the master branch :-).","Yes, I'd really appreciate the merge as soon as possible and next week would be good.
Btw.: From my point of view there are corrections for critical issues, e.g.:  the infinite recursion mentioned in issue 1032 causes really trouble.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1050,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1050#issuecomment-365261201,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","Hi Mislav,
I have tried your pull request but I am still getting SEGFAULT when running rpc_example.py for python2.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/1050#issuecomment-365261484,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","Codecov Report

Merging #1050 into devel will increase coverage by 0.05%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##            devel   #1050      +/-   ##
=========================================
+ Coverage   85.95%     86%   +0.05%     
=========================================
  Files          31      31              
  Lines       25008   25008              
  Branches     4489    4489              
=========================================
+ Hits        21495   21507      +12     
+ Misses       3513    3501      -12",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/1050#issuecomment-365265516,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","I have tried your pull request but I am still getting SEGFAULT when running rpc_example.py for python2.

Did you do make install?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1050#issuecomment-365266586,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","I did, based on the message libsysrepoPython2.py was overwritten.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/mislavn,6,https://github.com/sysrepo/sysrepo/pull/1050#issuecomment-365273534,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","Found the issue, I used an older devel branch. When I updated it to the latest version I got the same behavior.
But now I'm getting a compile error:
/opt/fork/sysrepo/src/data_manager.c:3093:11: error: too many arguments to function 'lys_print_mem'
     ret = lys_print_mem(schema, module, yang_format ? LYS_OUT_YANG : LYS_OUT_YIN, NULL, 0, 0);
           ^
In file included from /usr/local/include/libyang/libyang.h:29:0,
                 from /opt/fork/sysrepo/src/data_manager.c:30:
/usr/local/include/libyang/tree_schema.h:2325:5: note: declared here
 int lys_print_mem(char **strp, const struct lys_module *module, LYS_OUTFORMAT format, const char *target_node);
     ^

I had to remove "", 0, 0);"" from the lys_print_mem function call in order to compile. Are you getting the same issue?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/1050#issuecomment-365274352,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","Try updating your libyang, you must use the most recent devel for it to compile.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/mislavn,8,https://github.com/sysrepo/sysrepo/pull/1050#issuecomment-365275561,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","Sorry, I forgot to use the devel docker container.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1050,2018-02-13T12:42:43Z,2018-02-14T08:12:58Z,2020-01-15T07:49:52Z,MERGED,True,66,11,1,https://github.com/mislavn,Python: bugfix for default PyObject,1,[],https://github.com/sysrepo/sysrepo/pull/1050,https://github.com/mislavn,9,https://github.com/sysrepo/sysrepo/pull/1050#issuecomment-365344551,"Signed-off-by: Mislav Novakovic mislav.novakovic@sartura.hr
Description
Fixes the issue #1049
Apparently SWIG has some issues with properly handling nullptr in the swigfiles, so I reverted nullptr to NULL in the lua and python swigfile.
Closure
Put closes #1049","I'm not sure why it worked on an older devel branch, but now I simply manually create a Python None object if the user did not pass anything. It should work now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1051,2018-02-14T09:22:23Z,2018-02-14T09:22:46Z,2018-02-14T09:22:46Z,MERGED,True,1,1,1,https://github.com/michalvasko,Bump to version 0.7.3,1,[],https://github.com/sysrepo/sysrepo/pull/1051,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1051,"Description
Just a version bump to keep up with master.","Description
Just a version bump to keep up with master.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1052,2018-02-14T09:25:12Z,2018-02-14T10:05:17Z,2018-02-14T10:05:17Z,MERGED,True,1783,5895,39,https://github.com/michalvasko,Devel merge,53,[],https://github.com/sysrepo/sysrepo/pull/1052,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1052,"Description
Merge non-API-breaking changes from devel into master. Changes include mostly bugfixes.","Description
Merge non-API-breaking changes from devel into master. Changes include mostly bugfixes.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1052,2018-02-14T09:25:12Z,2018-02-14T10:05:17Z,2018-02-14T10:05:17Z,MERGED,True,1783,5895,39,https://github.com/michalvasko,Devel merge,53,[],https://github.com/sysrepo/sysrepo/pull/1052,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1052#issuecomment-365553415,"Description
Merge non-API-breaking changes from devel into master. Changes include mostly bugfixes.","Codecov Report

Merging #1052 into master will decrease coverage by 0.07%.
The diff coverage is 86.19%.

@@            Coverage Diff             @@
##           master    #1052      +/-   ##
==========================================
- Coverage   86.02%   85.95%   -0.07%     
==========================================
  Files          31       31              
  Lines       24887    25009     +122     
  Branches     4453     4489      +36     
==========================================
+ Hits        21407    21495      +88     
- Misses       3480     3514      +34",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1053,2018-02-14T10:59:42Z,2018-02-14T12:00:00Z,2018-02-14T12:00:00Z,MERGED,True,1,1,1,https://github.com/michalvasko,travis: release branches must use master libyang,2,[],https://github.com/sysrepo/sysrepo/pull/1053,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1053,"Description
Regex for master libyang branch should include release branches.","Description
Regex for master libyang branch should include release branches.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1053,2018-02-14T10:59:42Z,2018-02-14T12:00:00Z,2018-02-14T12:00:00Z,MERGED,True,1,1,1,https://github.com/michalvasko,travis: release branches must use master libyang,2,[],https://github.com/sysrepo/sysrepo/pull/1053,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1053#issuecomment-365572584,"Description
Regex for master libyang branch should include release branches.","Codecov Report

Merging #1053 into master will decrease coverage by 0.02%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master    #1053      +/-   ##
==========================================
- Coverage   85.98%   85.97%   -0.02%     
==========================================
  Files          31       31              
  Lines       25008    25009       +1     
  Branches     4489     4489              
==========================================
- Hits        21503    21499       -4     
- Misses       3505     3510       +5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1054,2018-02-14T15:20:09Z,2018-02-15T07:17:14Z,2018-02-15T07:17:17Z,MERGED,True,98,76,10,https://github.com/michalvasko,Libyang API updated,1,[],https://github.com/sysrepo/sysrepo/pull/1054,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1054,"Description
Libyang error API was updated and so sysrepo needs to be updated as well.","Description
Libyang error API was updated and so sysrepo needs to be updated as well.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1054,2018-02-14T15:20:09Z,2018-02-15T07:17:14Z,2018-02-15T07:17:17Z,MERGED,True,98,76,10,https://github.com/michalvasko,Libyang API updated,1,[],https://github.com/sysrepo/sysrepo/pull/1054,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1054#issuecomment-365647243,"Description
Libyang error API was updated and so sysrepo needs to be updated as well.","Codecov Report

Merging #1054 into devel will decrease coverage by 0.08%.
The diff coverage is 32.89%.

@@            Coverage Diff             @@
##            devel    #1054      +/-   ##
==========================================
- Coverage   86.04%   85.95%   -0.08%     
==========================================
  Files          31       31              
  Lines       25008    25024      +16     
  Branches     4489     4491       +2     
==========================================
- Hits        21516    21509       -7     
- Misses       3492     3515      +23",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1055,2018-02-14T15:34:37Z,2018-06-06T11:40:37Z,2018-06-06T11:40:37Z,MERGED,True,2233,806,87,https://github.com/michalvasko,Devel merge,126,[],https://github.com/sysrepo/sysrepo/pull/1055,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1055,"Description
Merge devel into master for a new release.","Description
Merge devel into master for a new release.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1055,2018-02-14T15:34:37Z,2018-06-06T11:40:37Z,2018-06-06T11:40:37Z,MERGED,True,2233,806,87,https://github.com/michalvasko,Devel merge,126,[],https://github.com/sysrepo/sysrepo/pull/1055,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1055#issuecomment-365649205,"Description
Merge devel into master for a new release.","Codecov Report

Merging #1055 into master will increase coverage by 0.03%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##           master   #1055      +/-   ##
=========================================
+ Coverage   85.97%     86%   +0.03%     
=========================================
  Files          31      31              
  Lines       25012   25012              
  Branches     4491    4491              
=========================================
+ Hits        21502   21510       +8     
+ Misses       3510    3502       -8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1055,2018-02-14T15:34:37Z,2018-06-06T11:40:37Z,2018-06-06T11:40:37Z,MERGED,True,2233,806,87,https://github.com/michalvasko,Devel merge,126,[],https://github.com/sysrepo/sysrepo/pull/1055,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/1055#issuecomment-395021842,"Description
Merge devel into master for a new release.","Codecov Report

Merging #1055 into master will increase coverage by 0.03%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##           master   #1055      +/-   ##
=========================================
+ Coverage   85.97%     86%   +0.03%     
=========================================
  Files          31      31              
  Lines       25012   25012              
  Branches     4491    4491              
=========================================
+ Hits        21502   21510       +8     
+ Misses       3510    3502       -8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1056,2018-02-15T10:53:02Z,2018-02-15T11:09:24Z,2018-02-15T11:12:29Z,MERGED,True,5,5,1,https://github.com/michalvasko,Report more errors to client on basic operations,1,[],https://github.com/sysrepo/sysrepo/pull/1056,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1056,"Description
Some errors were only displayed by sysrepo but not sent to the client, this was improved.","Description
Some errors were only displayed by sysrepo but not sent to the client, this was improved.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1056,2018-02-15T10:53:02Z,2018-02-15T11:09:24Z,2018-02-15T11:12:29Z,MERGED,True,5,5,1,https://github.com/michalvasko,Report more errors to client on basic operations,1,[],https://github.com/sysrepo/sysrepo/pull/1056,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1056#issuecomment-365895691,"Description
Some errors were only displayed by sysrepo but not sent to the client, this was improved.","Codecov Report

Merging #1056 into devel will decrease coverage by 0.04%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1056      +/-   ##
==========================================
- Coverage   86.01%   85.98%   -0.04%     
==========================================
  Files          31       31              
  Lines       25024    25024              
  Branches     4491     4491              
==========================================
- Hits        21524    21515       -9     
- Misses       3500     3509       +9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1058,2018-02-21T12:37:53Z,2018-02-21T15:05:11Z,2020-01-15T07:49:37Z,MERGED,True,24,7,3,https://github.com/mislavn,Cpp event notif,3,[],https://github.com/sysrepo/sysrepo/pull/1058,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1058,"Description
Implemented the function sr_event_notif_send and sr_event_notif_send_tree in the language bindings. Also mada small bug fixes.
Closure
closes  #1057","Description
Implemented the function sr_event_notif_send and sr_event_notif_send_tree in the language bindings. Also mada small bug fixes.
Closure
closes  #1057",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1058,2018-02-21T12:37:53Z,2018-02-21T15:05:11Z,2020-01-15T07:49:37Z,MERGED,True,24,7,3,https://github.com/mislavn,Cpp event notif,3,[],https://github.com/sysrepo/sysrepo/pull/1058,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1058#issuecomment-367313544,"Description
Implemented the function sr_event_notif_send and sr_event_notif_send_tree in the language bindings. Also mada small bug fixes.
Closure
closes  #1057","I'm not sure what should I do if the sr_event_notif_send function returns ""SR_ERR_NOT_FOUND"", at the moment an exception is thrown.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1058,2018-02-21T12:37:53Z,2018-02-21T15:05:11Z,2020-01-15T07:49:37Z,MERGED,True,24,7,3,https://github.com/mislavn,Cpp event notif,3,[],https://github.com/sysrepo/sysrepo/pull/1058,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1058#issuecomment-367316782,"Description
Implemented the function sr_event_notif_send and sr_event_notif_send_tree in the language bindings. Also mada small bug fixes.
Closure
closes  #1057","Why not? That is how errors are communicated in C++ and I do not think it is a valid situation, it is an error.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1058,2018-02-21T12:37:53Z,2018-02-21T15:05:11Z,2020-01-15T07:49:37Z,MERGED,True,24,7,3,https://github.com/mislavn,Cpp event notif,3,[],https://github.com/sysrepo/sysrepo/pull/1058,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/1058#issuecomment-367319464,"Description
Implemented the function sr_event_notif_send and sr_event_notif_send_tree in the language bindings. Also mada small bug fixes.
Closure
closes  #1057",ok.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1058,2018-02-21T12:37:53Z,2018-02-21T15:05:11Z,2020-01-15T07:49:37Z,MERGED,True,24,7,3,https://github.com/mislavn,Cpp event notif,3,[],https://github.com/sysrepo/sysrepo/pull/1058,https://github.com/codecov-io,5,https://github.com/sysrepo/sysrepo/pull/1058#issuecomment-367349149,"Description
Implemented the function sr_event_notif_send and sr_event_notif_send_tree in the language bindings. Also mada small bug fixes.
Closure
closes  #1057","Codecov Report

Merging #1058 into devel will increase coverage by 0.05%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1058      +/-   ##
==========================================
+ Coverage   85.96%   86.01%   +0.05%     
==========================================
  Files          31       31              
  Lines       25026    25026              
  Branches     4492     4492              
==========================================
+ Hits        21512    21525      +13     
+ Misses       3514     3501      -13",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1058,2018-02-21T12:37:53Z,2018-02-21T15:05:11Z,2020-01-15T07:49:37Z,MERGED,True,24,7,3,https://github.com/mislavn,Cpp event notif,3,[],https://github.com/sysrepo/sysrepo/pull/1058,https://github.com/jktjkt,6,https://github.com/sysrepo/sysrepo/pull/1058#issuecomment-371833642,"Description
Implemented the function sr_event_notif_send and sr_event_notif_send_tree in the language bindings. Also mada small bug fixes.
Closure
closes  #1057","FYI, this looks like duplicating 9e31589. I'm not really attached to the API names I used, so feel free to clean this up by removing any of these :).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1058,2018-02-21T12:37:53Z,2018-02-21T15:05:11Z,2020-01-15T07:49:37Z,MERGED,True,24,7,3,https://github.com/mislavn,Cpp event notif,3,[],https://github.com/sysrepo/sysrepo/pull/1058,https://github.com/mislavn,7,https://github.com/sysrepo/sysrepo/pull/1058#issuecomment-371837435,"Description
Implemented the function sr_event_notif_send and sr_event_notif_send_tree in the language bindings. Also mada small bug fixes.
Closure
closes  #1057","Sorry, I haven't noticed them before.
I'll make a new pull request and remove send_event API to make it more consistent, thanks for the reminder.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1059,2018-02-21T13:43:57Z,2018-02-21T14:01:44Z,2018-02-21T14:03:48Z,MERGED,True,7,4,1,https://github.com/michalvasko,lyd_find_instance calling with NULL parameters,1,[],https://github.com/sysrepo/sysrepo/pull/1059,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1059,"Description
An invalid error was displayed when lyd_find_instance() was called with NULL arguments.","Description
An invalid error was displayed when lyd_find_instance() was called with NULL arguments.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1059,2018-02-21T13:43:57Z,2018-02-21T14:01:44Z,2018-02-21T14:03:48Z,MERGED,True,7,4,1,https://github.com/michalvasko,lyd_find_instance calling with NULL parameters,1,[],https://github.com/sysrepo/sysrepo/pull/1059,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1059#issuecomment-367335570,"Description
An invalid error was displayed when lyd_find_instance() was called with NULL arguments.","Codecov Report

Merging #1059 into devel will increase coverage by 0.06%.
The diff coverage is 80%.

@@            Coverage Diff             @@
##            devel    #1059      +/-   ##
==========================================
+ Coverage   85.95%   86.01%   +0.06%     
==========================================
  Files          31       31              
  Lines       25024    25026       +2     
  Branches     4491     4492       +1     
==========================================
+ Hits        21509    21525      +16     
+ Misses       3515     3501      -14",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1060,2018-02-23T08:40:59Z,2018-02-23T12:24:06Z,2018-02-23T12:25:14Z,MERGED,True,9,2,1,https://github.com/qmm161,fix bug: support list key define in use statement for action/rpc,1,[],https://github.com/sysrepo/sysrepo/pull/1060,https://github.com/qmm161,1,https://github.com/sysrepo/sysrepo/pull/1060,"Description
sr_is_key_node does not work well if list key defined in use statement.
yang module for demo:
module Demo {
namespace ""http://example.net/demo"";
prefix DM;
yang-version ""1.1"";
grouping KeyGroup {
	leaf id{
		type uint32;
	}
    
	leaf f1{
		type uint32;
	}        
}

container Root {
    action setdata {
        input {
            list data {
                key id;
	    uses KeyGroup;
            }
        }
    }
}

}","Description
sr_is_key_node does not work well if list key defined in use statement.
yang module for demo:
module Demo {
namespace ""http://example.net/demo"";
prefix DM;
yang-version ""1.1"";
grouping KeyGroup {
	leaf id{
		type uint32;
	}
    
	leaf f1{
		type uint32;
	}        
}

container Root {
    action setdata {
        input {
            list data {
                key id;
	    uses KeyGroup;
            }
        }
    }
}

}",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1060,2018-02-23T08:40:59Z,2018-02-23T12:24:06Z,2018-02-23T12:25:14Z,MERGED,True,9,2,1,https://github.com/qmm161,fix bug: support list key define in use statement for action/rpc,1,[],https://github.com/sysrepo/sysrepo/pull/1060,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1060#issuecomment-367995744,"Description
sr_is_key_node does not work well if list key defined in use statement.
yang module for demo:
module Demo {
namespace ""http://example.net/demo"";
prefix DM;
yang-version ""1.1"";
grouping KeyGroup {
	leaf id{
		type uint32;
	}
    
	leaf f1{
		type uint32;
	}        
}

container Root {
    action setdata {
        input {
            list data {
                key id;
	    uses KeyGroup;
            }
        }
    }
}

}","Hi,
the fix is correct, merged.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1062,2018-02-23T13:41:49Z,2018-02-23T13:57:57Z,2018-02-23T13:57:57Z,MERGED,True,9,2,1,https://github.com/michalvasko,Support list key define in uses statement,1,[],https://github.com/sysrepo/sysrepo/pull/1062,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1062,"Description
Merge bugfix from master to devel also.","Description
Merge bugfix from master to devel also.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1062,2018-02-23T13:41:49Z,2018-02-23T13:57:57Z,2018-02-23T13:57:57Z,MERGED,True,9,2,1,https://github.com/michalvasko,Support list key define in uses statement,1,[],https://github.com/sysrepo/sysrepo/pull/1062,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1062#issuecomment-368015598,"Description
Merge bugfix from master to devel also.","Codecov Report

Merging #1062 into devel will increase coverage by 0.08%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1062      +/-   ##
==========================================
+ Coverage   85.94%   86.02%   +0.08%     
==========================================
  Files          31       31              
  Lines       25025    25030       +5     
  Branches     4492     4494       +2     
==========================================
+ Hits        21506    21531      +25     
+ Misses       3519     3499      -20",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1064,2018-02-26T09:31:44Z,2018-02-26T10:03:18Z,2018-02-26T10:03:18Z,MERGED,True,84,42,4,https://github.com/frimpler,Feature dependency 1 solution,2,[],https://github.com/sysrepo/sysrepo/pull/1064,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/1064,"Hi,
This pull request is related to issue #1061 and contains now the proposed solution + TC.
Regards,
Frank","Hi,
This pull request is related to issue #1061 and contains now the proposed solution + TC.
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1064,2018-02-26T09:31:44Z,2018-02-26T10:03:18Z,2018-02-26T10:03:18Z,MERGED,True,84,42,4,https://github.com/frimpler,Feature dependency 1 solution,2,[],https://github.com/sysrepo/sysrepo/pull/1064,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1064#issuecomment-368444904,"Hi,
This pull request is related to issue #1061 and contains now the proposed solution + TC.
Regards,
Frank","Codecov Report

Merging #1064 into devel will increase coverage by 0.02%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1064      +/-   ##
==========================================
+ Coverage   85.95%   85.97%   +0.02%     
==========================================
  Files          31       31              
  Lines       25029    25046      +17     
  Branches     4494     4496       +2     
==========================================
+ Hits        21513    21533      +20     
+ Misses       3516     3513       -3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1064,2018-02-26T09:31:44Z,2018-02-26T10:03:18Z,2018-02-26T10:03:18Z,MERGED,True,84,42,4,https://github.com/frimpler,Feature dependency 1 solution,2,[],https://github.com/sysrepo/sysrepo/pull/1064,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1064#issuecomment-368449277,"Hi,
This pull request is related to issue #1061 and contains now the proposed solution + TC.
Regards,
Frank","Hi Frank,
seems to be in order, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1071,2018-03-07T15:30:12Z,2018-03-07T16:07:25Z,2018-03-07T16:07:25Z,MERGED,True,317,222,9,https://github.com/michalvasko,Validation of operations with state data dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/1071,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1071,"Description
State data are now available to validation of notifications, RPCs, and actions with external dependencies.
Closure
Fixes #1068","Description
State data are now available to validation of notifications, RPCs, and actions with external dependencies.
Closure
Fixes #1068",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1071,2018-03-07T15:30:12Z,2018-03-07T16:07:25Z,2018-03-07T16:07:25Z,MERGED,True,317,222,9,https://github.com/michalvasko,Validation of operations with state data dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/1071,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1071#issuecomment-371181438,"Description
State data are now available to validation of notifications, RPCs, and actions with external dependencies.
Closure
Fixes #1068","Codecov Report

Merging #1071 into devel will decrease coverage by 0.09%.
The diff coverage is 74.39%.

@@            Coverage Diff             @@
##            devel    #1071      +/-   ##
==========================================
- Coverage   85.96%   85.87%   -0.09%     
==========================================
  Files          31       31              
  Lines       25045    25101      +56     
  Branches     4496     4512      +16     
==========================================
+ Hits        21528    21554      +26     
- Misses       3517     3547      +30",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1073,2018-03-08T12:56:33Z,2018-03-08T13:12:17Z,2018-03-08T13:16:13Z,MERGED,True,19,10,3,https://github.com/michalvasko,Notification storing in different anydata type,2,[],https://github.com/sysrepo/sysrepo/pull/1073,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1073,"Description
They are now stored as XML string, which saves duplicating a data tree.
Closure
Fixes #1069","Description
They are now stored as XML string, which saves duplicating a data tree.
Closure
Fixes #1069",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1073,2018-03-08T12:56:33Z,2018-03-08T13:12:17Z,2018-03-08T13:16:13Z,MERGED,True,19,10,3,https://github.com/michalvasko,Notification storing in different anydata type,2,[],https://github.com/sysrepo/sysrepo/pull/1073,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1073#issuecomment-371482476,"Description
They are now stored as XML string, which saves duplicating a data tree.
Closure
Fixes #1069","Codecov Report

Merging #1073 into devel will decrease coverage by 0.04%.
The diff coverage is 60%.

@@            Coverage Diff             @@
##            devel    #1073      +/-   ##
==========================================
- Coverage   85.88%   85.84%   -0.04%     
==========================================
  Files          31       31              
  Lines       25099    25109      +10     
  Branches     4512     4515       +3     
==========================================
- Hits        21554    21553       -1     
- Misses       3545     3556      +11",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1075,2018-03-09T09:07:50Z,2018-03-09T09:34:17Z,2018-03-09T09:34:17Z,MERGED,True,1,1,1,https://github.com/michalvasko,Nicely formatted stored notifications,1,[],https://github.com/sysrepo/sysrepo/pull/1075,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1075,"Description
Do not encode notifications when storing them for replay.
Closure
Fixes #1069","Description
Do not encode notifications when storing them for replay.
Closure
Fixes #1069",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1075,2018-03-09T09:07:50Z,2018-03-09T09:34:17Z,2018-03-09T09:34:17Z,MERGED,True,1,1,1,https://github.com/michalvasko,Nicely formatted stored notifications,1,[],https://github.com/sysrepo/sysrepo/pull/1075,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1075#issuecomment-371758899,"Description
Do not encode notifications when storing them for replay.
Closure
Fixes #1069","Codecov Report

Merging #1075 into devel will decrease coverage by 0.01%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1075      +/-   ##
==========================================
- Coverage   85.84%   85.83%   -0.01%     
==========================================
  Files          31       31              
  Lines       25108    25109       +1     
  Branches     4515     4515              
==========================================
- Hits        21552    21550       -2     
- Misses       3556     3559       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1076,2018-03-09T10:02:28Z,2018-03-09T11:26:16Z,2018-03-09T11:26:16Z,MERGED,True,23,15,1,https://github.com/michalvasko,Differentiate between config and state data dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/1076,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1076,"Description
Do not retrieve state data if they are not needed.
Closure
Fixes #1074","Description
Do not retrieve state data if they are not needed.
Closure
Fixes #1074",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1076,2018-03-09T10:02:28Z,2018-03-09T11:26:16Z,2018-03-09T11:26:16Z,MERGED,True,23,15,1,https://github.com/michalvasko,Differentiate between config and state data dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/1076,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1076#issuecomment-371772262,"Description
Do not retrieve state data if they are not needed.
Closure
Fixes #1074","Codecov Report

Merging #1076 into devel will decrease coverage by 0.05%.
The diff coverage is 52.63%.

@@            Coverage Diff             @@
##            devel    #1076      +/-   ##
==========================================
- Coverage   85.88%   85.83%   -0.05%     
==========================================
  Files          31       31              
  Lines       25109    25114       +5     
  Branches     4515     4519       +4     
==========================================
- Hits        21563    21555       -8     
- Misses       3546     3559      +13",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1077,2018-03-09T15:18:55Z,2018-03-12T10:40:45Z,2018-03-12T10:40:55Z,MERGED,True,0,16,2,https://github.com/mislavn,C++: remove send_event function,1,[],https://github.com/sysrepo/sysrepo/pull/1077,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1077,"Description
Remove redundant function send_event() made by the pull request #1058.","Description
Remove redundant function send_event() made by the pull request #1058.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1077,2018-03-09T15:18:55Z,2018-03-12T10:40:45Z,2018-03-12T10:40:55Z,MERGED,True,0,16,2,https://github.com/mislavn,C++: remove send_event function,1,[],https://github.com/sysrepo/sysrepo/pull/1077,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1077#issuecomment-371846519,"Description
Remove redundant function send_event() made by the pull request #1058.","Codecov Report

Merging #1077 into devel will decrease coverage by 0.03%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1077      +/-   ##
==========================================
- Coverage   85.82%   85.79%   -0.03%     
==========================================
  Files          31       31              
  Lines       25114    25114              
  Branches     4519     4519              
==========================================
- Hits        21552    21545       -7     
- Misses       3562     3569       +7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1078,2018-03-12T08:22:59Z,2018-03-12T08:46:55Z,2018-03-12T08:46:55Z,MERGED,True,13,29,6,https://github.com/michalvasko,Pass the commit error code to client,1,[],https://github.com/sysrepo/sysrepo/pull/1078,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1078,"Description
The most relevant commit error code should be passed to client instead of just generic SR_ERR_OP_FAILED.","Description
The most relevant commit error code should be passed to client instead of just generic SR_ERR_OP_FAILED.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1078,2018-03-12T08:22:59Z,2018-03-12T08:46:55Z,2018-03-12T08:46:55Z,MERGED,True,13,29,6,https://github.com/michalvasko,Pass the commit error code to client,1,[],https://github.com/sysrepo/sysrepo/pull/1078,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1078#issuecomment-372230933,"Description
The most relevant commit error code should be passed to client instead of just generic SR_ERR_OP_FAILED.","Codecov Report

Merging #1078 into devel will increase coverage by 0.03%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1078      +/-   ##
==========================================
+ Coverage   85.82%   85.85%   +0.03%     
==========================================
  Files          31       31              
  Lines       25114    25105       -9     
  Branches     4519     4515       -4     
==========================================
  Hits        21552    21552              
+ Misses       3562     3553       -9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1080,2018-03-15T08:40:01Z,2018-03-15T09:03:54Z,2018-03-15T09:07:41Z,MERGED,True,4,0,1,https://github.com/michalvasko,Properly handle empty buffer to flush,1,[],https://github.com/sysrepo/sysrepo/pull/1080,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1080,"Description
Handles situation when writing 0 bytes would fail and cause a cascading failure.
Closure
Fixes #1079","Description
Handles situation when writing 0 bytes would fail and cause a cascading failure.
Closure
Fixes #1079",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1080,2018-03-15T08:40:01Z,2018-03-15T09:03:54Z,2018-03-15T09:07:41Z,MERGED,True,4,0,1,https://github.com/michalvasko,Properly handle empty buffer to flush,1,[],https://github.com/sysrepo/sysrepo/pull/1080,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1080#issuecomment-373306649,"Description
Handles situation when writing 0 bytes would fail and cause a cascading failure.
Closure
Fixes #1079","Codecov Report

Merging #1080 into devel will decrease coverage by 0.01%.
The diff coverage is 50%.

@@            Coverage Diff            @@
##           devel    #1080      +/-   ##
=========================================
- Coverage   85.8%   85.79%   -0.01%     
=========================================
  Files         31       31              
  Lines      25105    25108       +3     
  Branches    4515     4516       +1     
=========================================
  Hits       21540    21540              
- Misses      3565     3568       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1081,2018-03-15T12:14:32Z,2018-03-15T12:38:17Z,2018-03-15T12:38:17Z,MERGED,True,4,0,1,https://github.com/michalvasko,Fixup: properly handle empty buffer to flush,1,[],https://github.com/sysrepo/sysrepo/pull/1081,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1081,"Description
Fixup of #1080","Description
Fixup of #1080",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1081,2018-03-15T12:14:32Z,2018-03-15T12:38:17Z,2018-03-15T12:38:17Z,MERGED,True,4,0,1,https://github.com/michalvasko,Fixup: properly handle empty buffer to flush,1,[],https://github.com/sysrepo/sysrepo/pull/1081,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1081#issuecomment-373359681,"Description
Fixup of #1080","Codecov Report

Merging #1081 into devel will increase coverage by 0.05%.
The diff coverage is 50%.

@@            Coverage Diff             @@
##            devel    #1081      +/-   ##
==========================================
+ Coverage   85.79%   85.84%   +0.05%     
==========================================
  Files          31       31              
  Lines       25108    25109       +1     
  Branches     4516     4517       +1     
==========================================
+ Hits        21541    21554      +13     
+ Misses       3567     3555      -12",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1082,2018-03-16T14:13:47Z,2018-03-16T14:28:19Z,2018-03-16T14:28:23Z,MERGED,True,12,6,1,https://github.com/michalvasko,Sysrepoctl list variable module name column size,1,[],https://github.com/sysrepo/sysrepo/pull/1082,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1082,"Description
Adjust sysrepoctl module name column size.","Description
Adjust sysrepoctl module name column size.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1082,2018-03-16T14:13:47Z,2018-03-16T14:28:19Z,2018-03-16T14:28:23Z,MERGED,True,12,6,1,https://github.com/michalvasko,Sysrepoctl list variable module name column size,1,[],https://github.com/sysrepo/sysrepo/pull/1082,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1082#issuecomment-373730101,"Description
Adjust sysrepoctl module name column size.","Codecov Report

Merging #1082 into devel will increase coverage by 0.02%.
The diff coverage is 100%.

@@            Coverage Diff             @@
##            devel    #1082      +/-   ##
==========================================
+ Coverage   85.79%   85.82%   +0.02%     
==========================================
  Files          31       31              
  Lines       25109    25112       +3     
  Branches     4517     4519       +2     
==========================================
+ Hits        21542    21550       +8     
+ Misses       3567     3562       -5",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1083,2018-03-17T20:31:04Z,2018-03-19T09:29:03Z,2018-03-19T09:29:03Z,MERGED,True,47,27,2,https://github.com/andrei-pavel,added libSysrepo-cpp.pc.in for pkg-config,1,[],https://github.com/sysrepo/sysrepo/pull/1083,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1083,"Description
There is no .pc file to help include header files and link with the libSysrepo.so library.
I suggest git diff --color-words for an easy review.
Test case



Closure","Description
There is no .pc file to help include header files and link with the libSysrepo.so library.
I suggest git diff --color-words for an easy review.
Test case



Closure",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1083,2018-03-17T20:31:04Z,2018-03-19T09:29:03Z,2018-03-19T09:29:03Z,MERGED,True,47,27,2,https://github.com/andrei-pavel,added libSysrepo-cpp.pc.in for pkg-config,1,[],https://github.com/sysrepo/sysrepo/pull/1083,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1083#issuecomment-373951941,"Description
There is no .pc file to help include header files and link with the libSysrepo.so library.
I suggest git diff --color-words for an easy review.
Test case



Closure","Codecov Report

Merging #1083 into master will decrease coverage by 0.06%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master    #1083      +/-   ##
==========================================
- Coverage   86.01%   85.95%   -0.06%     
==========================================
  Files          31       31              
  Lines       25013    25012       -1     
  Branches     4491     4491              
==========================================
- Hits        21513    21497      -16     
- Misses       3500     3515      +15",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1083,2018-03-17T20:31:04Z,2018-03-19T09:29:03Z,2018-03-19T09:29:03Z,MERGED,True,47,27,2,https://github.com/andrei-pavel,added libSysrepo-cpp.pc.in for pkg-config,1,[],https://github.com/sysrepo/sysrepo/pull/1083,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1083#issuecomment-374150014,"Description
There is no .pc file to help include header files and link with the libSysrepo.so library.
I suggest git diff --color-words for an easy review.
Test case



Closure","Hi,
seems fine, why not.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1084,2018-03-19T09:31:28Z,2018-03-19T09:48:31Z,2018-03-19T09:48:31Z,MERGED,True,47,27,2,https://github.com/michalvasko,Added libSysrepo-cpp.pc.in for pkg-config,1,[],https://github.com/sysrepo/sysrepo/pull/1084,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1084,"Description
Cherry-pick merge from master to devel.","Description
Cherry-pick merge from master to devel.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1088,2018-03-21T13:05:49Z,2018-03-21T13:23:56Z,2018-03-21T13:25:52Z,MERGED,True,1,0,1,https://github.com/michalvasko,Clear error on disabled node,1,[],https://github.com/sysrepo/sysrepo/pull/1088,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1088,"Description
When a state node is disabled, ignore not-schema-found error but also clear the error return value.
Closure
Fixes #1086","Description
When a state node is disabled, ignore not-schema-found error but also clear the error return value.
Closure
Fixes #1086",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1088,2018-03-21T13:05:49Z,2018-03-21T13:23:56Z,2018-03-21T13:25:52Z,MERGED,True,1,0,1,https://github.com/michalvasko,Clear error on disabled node,1,[],https://github.com/sysrepo/sysrepo/pull/1088,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1088#issuecomment-374933918,"Description
When a state node is disabled, ignore not-schema-found error but also clear the error return value.
Closure
Fixes #1086","Codecov Report

Merging #1088 into devel will decrease coverage by 0.06%.
The diff coverage is 0%.

@@            Coverage Diff             @@
##            devel    #1088      +/-   ##
==========================================
- Coverage   85.85%   85.79%   -0.06%     
==========================================
  Files          31       31              
  Lines       25112    25113       +1     
  Branches     4519     4519              
==========================================
- Hits        21558    21545      -13     
- Misses       3554     3568      +14",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1089,2018-03-23T12:42:06Z,2018-03-23T14:11:59Z,2018-03-23T14:11:59Z,MERGED,True,18,1,1,https://github.com/michalvasko,Travis update gcc,2,[],https://github.com/sysrepo/sysrepo/pull/1089,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1089,"Description
Travis GCC need to be updated for latest libyang to compile.","Description
Travis GCC need to be updated for latest libyang to compile.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1091,2018-03-27T12:48:40Z,2018-03-27T13:47:07Z,2018-03-27T13:47:07Z,MERGED,True,2,2,1,https://github.com/michalvasko,Libyang API changes,1,[],https://github.com/sysrepo/sysrepo/pull/1091,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1091,"Description
libyang devel API changed so make sure sysrepo can be compiled.","Description
libyang devel API changed so make sure sysrepo can be compiled.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1092,2018-03-28T07:56:53Z,2018-03-28T14:20:09Z,2018-03-28T14:20:09Z,MERGED,True,241,17,5,https://github.com/frimpler,Feature dependencies (3) solution,2,[],https://github.com/sysrepo/sysrepo/pull/1092,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/1092,"Hi,
this pull request is related to issue #1085 and contains the TC and the proposed solution.
Regards,
Peter","Hi,
this pull request is related to issue #1085 and contains the TC and the proposed solution.
Regards,
Peter",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1092,2018-03-28T07:56:53Z,2018-03-28T14:20:09Z,2018-03-28T14:20:09Z,MERGED,True,241,17,5,https://github.com/frimpler,Feature dependencies (3) solution,2,[],https://github.com/sysrepo/sysrepo/pull/1092,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1092#issuecomment-376904031,"Hi,
this pull request is related to issue #1085 and contains the TC and the proposed solution.
Regards,
Peter","Hi Peter,
you changed it like I asked you to, so it can be merged now. However, I do not particularly like the usleep() in the test. Still, similar practices are already in the tests so it's okay, I guess.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1093,2018-03-29T08:53:52Z,2018-03-29T10:25:40Z,2018-03-29T10:25:40Z,MERGED,True,6,1,1,https://github.com/michalvasko,Proper leafref type detection,2,[],https://github.com/sysrepo/sysrepo/pull/1093,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1093,"Description
libyang always detects and stores actual type of union values. sysrepo must always use this information to learn a value type, schema node types cannot be used because of unions.","Description
libyang always detects and stores actual type of union values. sysrepo must always use this information to learn a value type, schema node types cannot be used because of unions.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1097,2018-04-16T14:08:02Z,2018-04-16T15:27:19Z,2018-04-16T15:27:19Z,MERGED,True,39,0,5,https://github.com/frimpler,make header files includable by c++ implementations,1,[],https://github.com/sysrepo/sysrepo/pull/1097,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/1097,"Hi,
this simple modification ensures that the affected header files can be used in c++ implementations.
Regards,
Frank","Hi,
this simple modification ensures that the affected header files can be used in c++ implementations.
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1099,2018-04-17T13:48:04Z,2018-04-24T07:54:02Z,2018-04-24T07:54:02Z,MERGED,True,38,18,3,https://github.com/frimpler,make sysrepo connection timeout switchable,3,[],https://github.com/sysrepo/sysrepo/pull/1099,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/1099,"Hi,
please consider this little modification which makes it possible to disable the connection timeout in the sysrepo client library by compiler switch.
Background:
In low performance environments, sysrepo clients might be too busy to answer in time, if the connection then times out it starts that things get worse. For this reason we want to be able to switch it off (and deal with the consequences, if necessary)
Regards,
Frank","Hi,
please consider this little modification which makes it possible to disable the connection timeout in the sysrepo client library by compiler switch.
Background:
In low performance environments, sysrepo clients might be too busy to answer in time, if the connection then times out it starts that things get worse. For this reason we want to be able to switch it off (and deal with the consequences, if necessary)
Regards,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1099,2018-04-17T13:48:04Z,2018-04-24T07:54:02Z,2018-04-24T07:54:02Z,MERGED,True,38,18,3,https://github.com/frimpler,make sysrepo connection timeout switchable,3,[],https://github.com/sysrepo/sysrepo/pull/1099,https://github.com/rkrejci,2,https://github.com/sysrepo/sysrepo/pull/1099#issuecomment-382646946,"Hi,
please consider this little modification which makes it possible to disable the connection timeout in the sysrepo client library by compiler switch.
Background:
In low performance environments, sysrepo clients might be too busy to answer in time, if the connection then times out it starts that things get worse. For this reason we want to be able to switch it off (and deal with the consequences, if necessary)
Regards,
Frank","I'm fine with the idea, but could you integrate setting the variable into cmake processing? Ideally, I would connect it it somehow with REQUEST_TIMEOUT using some special value (zero or negative value).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1099,2018-04-17T13:48:04Z,2018-04-24T07:54:02Z,2018-04-24T07:54:02Z,MERGED,True,38,18,3,https://github.com/frimpler,make sysrepo connection timeout switchable,3,[],https://github.com/sysrepo/sysrepo/pull/1099,https://github.com/frimpler,3,https://github.com/sysrepo/sysrepo/pull/1099#issuecomment-383009368,"Hi,
please consider this little modification which makes it possible to disable the connection timeout in the sysrepo client library by compiler switch.
Background:
In low performance environments, sysrepo clients might be too busy to answer in time, if the connection then times out it starts that things get worse. For this reason we want to be able to switch it off (and deal with the consequences, if necessary)
Regards,
Frank","Please check the update.
Thanks,
Frank",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1100,2018-04-23T14:32:53Z,2018-05-30T08:30:41Z,2020-01-15T07:49:44Z,MERGED,True,46,37,4,https://github.com/mislavn,go: fix issues with new Go version,2,[],https://github.com/sysrepo/sysrepo/pull/1100,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1100,"The golang examples no longer work on new Go versions, CGO is more strict now so the PR addresses the compiler errors. Also go-fmt changed the syntax.","The golang examples no longer work on new Go versions, CGO is more strict now so the PR addresses the compiler errors. Also go-fmt changed the syntax.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1101,2018-04-24T08:40:45Z,2018-05-15T09:24:56Z,2018-05-15T09:24:56Z,MERGED,True,31,59,4,https://github.com/michalvasko,Removed separate long request timeout,4,[],https://github.com/sysrepo/sysrepo/pull/1101,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1101,"Description
Little use to have 2 separate timeouts so one is used now for all requests.","Description
Little use to have 2 separate timeouts so one is used now for all requests.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1101,2018-04-24T08:40:45Z,2018-05-15T09:24:56Z,2018-05-15T09:24:56Z,MERGED,True,31,59,4,https://github.com/michalvasko,Removed separate long request timeout,4,[],https://github.com/sysrepo/sysrepo/pull/1101,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1101#issuecomment-383852014,"Description
Little use to have 2 separate timeouts so one is used now for all requests.",@frimpler Are you fine with this change?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1101,2018-04-24T08:40:45Z,2018-05-15T09:24:56Z,2018-05-15T09:24:56Z,MERGED,True,31,59,4,https://github.com/michalvasko,Removed separate long request timeout,4,[],https://github.com/sysrepo/sysrepo/pull/1101,https://github.com/frimpler,3,https://github.com/sysrepo/sysrepo/pull/1101#issuecomment-383901272,"Description
Little use to have 2 separate timeouts so one is used now for all requests.","yeah, I definetely prefer simplifications. I assume, you know/remember the reasons for the two timeout values :-). In fact, we have in this way always 15 seconds instead of 4 as default.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1101,2018-04-24T08:40:45Z,2018-05-15T09:24:56Z,2018-05-15T09:24:56Z,MERGED,True,31,59,4,https://github.com/michalvasko,Removed separate long request timeout,4,[],https://github.com/sysrepo/sysrepo/pull/1101,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1101#issuecomment-383905612,"Description
Little use to have 2 separate timeouts so one is used now for all requests.",Was there any reason 2 timeouts were used? The worst thing that can now happen is that some operations could timeout after 15 seconds instead of 4 (by default) and they should timeout only if there is something seriously wrong.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1101,2018-04-24T08:40:45Z,2018-05-15T09:24:56Z,2018-05-15T09:24:56Z,MERGED,True,31,59,4,https://github.com/michalvasko,Removed separate long request timeout,4,[],https://github.com/sysrepo/sysrepo/pull/1101,https://github.com/frimpler,5,https://github.com/sysrepo/sysrepo/pull/1101#issuecomment-383920178,"Description
Little use to have 2 separate timeouts so one is used now for all requests.",We didn't introduce the timeouts (only kept them as they were). Or request was just to introduce the means to disable them (by compiler switch).,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1101,2018-04-24T08:40:45Z,2018-05-15T09:24:56Z,2018-05-15T09:24:56Z,MERGED,True,31,59,4,https://github.com/michalvasko,Removed separate long request timeout,4,[],https://github.com/sysrepo/sysrepo/pull/1101,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/1101#issuecomment-389086631,"Description
Little use to have 2 separate timeouts so one is used now for all requests.","By mistake this pull request now also includes fix for issue #1107, namespace duplication check was added to sysrepoctl install command.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1112,2018-05-04T17:49:35Z,2018-05-15T12:07:54Z,2018-05-15T12:07:55Z,CLOSED,False,73,10,8,https://github.com/alangefe,Add idrefs as ext deps even when the src mod is not implemented yet,1,[],https://github.com/sysrepo/sysrepo/pull/1112,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1112,"Description
See #1111 for a detailed description of the problem and the proposed solution.
Test case
New unit test set_item_id_ref() in rp_dt_edit_test demonstrates the problem and tests the solution.
A minor change to md_test was also made to reflect the new expected behavior.","Description
See #1111 for a detailed description of the problem and the proposed solution.
Test case
New unit test set_item_id_ref() in rp_dt_edit_test demonstrates the problem and tests the solution.
A minor change to md_test was also made to reflect the new expected behavior.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1112,2018-05-04T17:49:35Z,2018-05-15T12:07:54Z,2018-05-15T12:07:55Z,CLOSED,False,73,10,8,https://github.com/alangefe,Add idrefs as ext deps even when the src mod is not implemented yet,1,[],https://github.com/sysrepo/sysrepo/pull/1112,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1112#issuecomment-389143363,"Description
See #1111 for a detailed description of the problem and the proposed solution.
Test case
New unit test set_item_id_ref() in rp_dt_edit_test demonstrates the problem and tests the solution.
A minor change to md_test was also made to reflect the new expected behavior.",Solution is unsuitable as explained in #1111.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1114,2018-05-04T20:07:49Z,2018-05-16T08:03:24Z,2018-07-27T21:32:26Z,MERGED,True,31,15,1,https://github.com/alangefe,Save the commit context before sending notifications,1,[],https://github.com/sysrepo/sysrepo/pull/1114,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1114,"This pull request corresponds to #1113 , which describes the problem and proposed solution. In summary, this request moves saving the commit context to before sending out commit notifications. This eliminates the window of time during which notified subscribers can query for the changes corresponding to the notification and get an error because the changes have not yet been saved.","This pull request corresponds to #1113 , which describes the problem and proposed solution. In summary, this request moves saving the commit context to before sending out commit notifications. This eliminates the window of time during which notified subscribers can query for the changes corresponding to the notification and get an error because the changes have not yet been saved.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1114,2018-05-04T20:07:49Z,2018-05-16T08:03:24Z,2018-07-27T21:32:26Z,MERGED,True,31,15,1,https://github.com/alangefe,Save the commit context before sending notifications,1,[],https://github.com/sysrepo/sysrepo/pull/1114,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1114#issuecomment-389431360,"This pull request corresponds to #1113 , which describes the problem and proposed solution. In summary, this request moves saving the commit context to before sending out commit notifications. This eliminates the window of time during which notified subscribers can query for the changes corresponding to the notification and get an error because the changes have not yet been saved.","Hi Andrew,
it seems fine to me, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1114,2018-05-04T20:07:49Z,2018-05-16T08:03:24Z,2018-07-27T21:32:26Z,MERGED,True,31,15,1,https://github.com/alangefe,Save the commit context before sending notifications,1,[],https://github.com/sysrepo/sysrepo/pull/1114,https://github.com/rosy8,3,https://github.com/sysrepo/sysrepo/pull/1114#issuecomment-390604321,"This pull request corresponds to #1113 , which describes the problem and proposed solution. In summary, this request moves saving the commit context to before sending out commit notifications. This eliminates the window of time during which notified subscribers can query for the changes corresponding to the notification and get an error because the changes have not yet been saved.","Hi,
In one of the scenario I got error like
No NP commit context for commit ID ..
Is it related to this scenario ??
Regard's
Rosy",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1114,2018-05-04T20:07:49Z,2018-05-16T08:03:24Z,2018-07-27T21:32:26Z,MERGED,True,31,15,1,https://github.com/alangefe,Save the commit context before sending notifications,1,[],https://github.com/sysrepo/sysrepo/pull/1114,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1114#issuecomment-390625117,"This pull request corresponds to #1113 , which describes the problem and proposed solution. In summary, this request moves saving the commit context to before sending out commit notifications. This eliminates the window of time during which notified subscribers can query for the changes corresponding to the notification and get an error because the changes have not yet been saved.","Hi Rosy,
I think this scenario could have happened to you (the error message is the same) but it also could have been caused by some other bug. If it continues to happen to you, please start another issue.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1114,2018-05-04T20:07:49Z,2018-05-16T08:03:24Z,2018-07-27T21:32:26Z,MERGED,True,31,15,1,https://github.com/alangefe,Save the commit context before sending notifications,1,[],https://github.com/sysrepo/sysrepo/pull/1114,https://github.com/rosy8,5,https://github.com/sysrepo/sysrepo/pull/1114#issuecomment-390934085,"This pull request corresponds to #1113 , which describes the problem and proposed solution. In summary, this request moves saving the commit context to before sending out commit notifications. This eliminates the window of time during which notified subscribers can query for the changes corresponding to the notification and get an error because the changes have not yet been saved.","Hi Michal,
Ok.
I will start a new thread for this issue.
Regard's
Rosy",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1118,2018-05-09T16:05:49Z,2018-05-16T10:27:51Z,2018-05-16T10:27:51Z,CLOSED,False,203,38,6,https://github.com/aweast,Resolve module installation error when submodule contains a leafref,1,[],https://github.com/sysrepo/sysrepo/pull/1118,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1118,"Description
When installing a module using sysrepoctl, certain functions, such as md_traverse_schema_tree and md_collect_data_dependencies expect any modules that are referenced to appear in the being_parsed list of modules while building the module dependency graph. In some cases, this may not be the case. The included test case (and issue #1116) demonstrate a case where this is not true.To fix this issue, a new list, expected_modules, is used to keep track of module names (and revisions) that we expect to see but have not yet been added to being_parsed. This allows us to continue to build up module dependencies. When a new module is added to the being_parsed list, this fix first checks the list of expected_modules to see if the new module was previously expected. If the dependency graph is complete, but there are still items in the expected_modules list, we assume an error has occurred.
Test case
The included test case attempts to install a valid model that would previously fail without this fix. This yang model is the same one attached to issue #1116
Closure
closes #1116","Description
When installing a module using sysrepoctl, certain functions, such as md_traverse_schema_tree and md_collect_data_dependencies expect any modules that are referenced to appear in the being_parsed list of modules while building the module dependency graph. In some cases, this may not be the case. The included test case (and issue #1116) demonstrate a case where this is not true.To fix this issue, a new list, expected_modules, is used to keep track of module names (and revisions) that we expect to see but have not yet been added to being_parsed. This allows us to continue to build up module dependencies. When a new module is added to the being_parsed list, this fix first checks the list of expected_modules to see if the new module was previously expected. If the dependency graph is complete, but there are still items in the expected_modules list, we assume an error has occurred.
Test case
The included test case attempts to install a valid model that would previously fail without this fix. This yang model is the same one attached to issue #1116
Closure
closes #1116",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1118,2018-05-09T16:05:49Z,2018-05-16T10:27:51Z,2018-05-16T10:27:51Z,CLOSED,False,203,38,6,https://github.com/aweast,Resolve module installation error when submodule contains a leafref,1,[],https://github.com/sysrepo/sysrepo/pull/1118,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1118#issuecomment-389471788,"Description
When installing a module using sysrepoctl, certain functions, such as md_traverse_schema_tree and md_collect_data_dependencies expect any modules that are referenced to appear in the being_parsed list of modules while building the module dependency graph. In some cases, this may not be the case. The included test case (and issue #1116) demonstrate a case where this is not true.To fix this issue, a new list, expected_modules, is used to keep track of module names (and revisions) that we expect to see but have not yet been added to being_parsed. This allows us to continue to build up module dependencies. When a new module is added to the being_parsed list, this fix first checks the list of expected_modules to see if the new module was previously expected. If the dependency graph is complete, but there are still items in the expected_modules list, we assume an error has occurred.
Test case
The included test case attempts to install a valid model that would previously fail without this fix. This yang model is the same one attached to issue #1116
Closure
closes #1116","Hi,
I do not think any new mechanisms are required, could you please create this pull request only with the new tests? They should pass now, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1119,2018-05-10T14:55:22Z,2018-05-15T08:52:29Z,2018-05-15T08:52:29Z,MERGED,True,62,5,3,https://github.com/aweast,Resolve module installation assertion error when augmenting into empty container,2,[],https://github.com/sysrepo/sysrepo/pull/1119,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1119,"Description
Installing a YANG module with sysrepoctl results in a failure due to an assertion if an otherwise empty container has children added by augmentation.  While backtracking augment nodes, existing code assumes that node->parent is NULL and uses the parent returned from lys_parent(node).  This is the wrong parent in the test case when node->parent is not NULL.  This code modification establishes preference for a non-NULL node->parent.
Test case
The test case, md_insert_module_4, found in md_test.c and accompanying yang model, augm_empty_container_m1, demonstrate the failure.
Closure
closes #1106","Description
Installing a YANG module with sysrepoctl results in a failure due to an assertion if an otherwise empty container has children added by augmentation.  While backtracking augment nodes, existing code assumes that node->parent is NULL and uses the parent returned from lys_parent(node).  This is the wrong parent in the test case when node->parent is not NULL.  This code modification establishes preference for a non-NULL node->parent.
Test case
The test case, md_insert_module_4, found in md_test.c and accompanying yang model, augm_empty_container_m1, demonstrate the failure.
Closure
closes #1106",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1120,2018-05-11T20:47:01Z,2018-05-15T08:00:52Z,2018-05-15T08:00:52Z,MERGED,True,65,3,3,https://github.com/alangefe,Fix segfault due to NULL child if module contains augment whose children are contingent on a feature,1,[],https://github.com/sysrepo/sysrepo/pull/1120,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1120,"Description
Installing a YANG module with sysrepoctl results in a segmentation fault if the module contains an augment whose children are contingent upon a feature. The same segmentation fault occurs if the module contains an augment with a uses clause where the corresponding grouping’s children are contingent on a feature. Issue #1105 documents this issue. The included test case demonstrates the failure. To address this, md_traverse_schema_tree() has been modified to tolerate the return of a null child from the call to the function lys_getnext().
Test case
The included test case attempts to install a valid model that would previously fail without this fix. The required yang model file is included.
Closure
closes #1105","Description
Installing a YANG module with sysrepoctl results in a segmentation fault if the module contains an augment whose children are contingent upon a feature. The same segmentation fault occurs if the module contains an augment with a uses clause where the corresponding grouping’s children are contingent on a feature. Issue #1105 documents this issue. The included test case demonstrates the failure. To address this, md_traverse_schema_tree() has been modified to tolerate the return of a null child from the call to the function lys_getnext().
Test case
The included test case attempts to install a valid model that would previously fail without this fix. The required yang model file is included.
Closure
closes #1105",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1120,2018-05-11T20:47:01Z,2018-05-15T08:00:52Z,2018-05-15T08:00:52Z,MERGED,True,65,3,3,https://github.com/alangefe,Fix segfault due to NULL child if module contains augment whose children are contingent on a feature,1,[],https://github.com/sysrepo/sysrepo/pull/1120,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1120#issuecomment-389071989,"Description
Installing a YANG module with sysrepoctl results in a segmentation fault if the module contains an augment whose children are contingent upon a feature. The same segmentation fault occurs if the module contains an augment with a uses clause where the corresponding grouping’s children are contingent on a feature. Issue #1105 documents this issue. The included test case demonstrates the failure. To address this, md_traverse_schema_tree() has been modified to tolerate the return of a null child from the call to the function lys_getnext().
Test case
The included test case attempts to install a valid model that would previously fail without this fix. The required yang model file is included.
Closure
closes #1105","Hi,
the fix seems fine, sorry for not replying sooner, I was away. Once the tests pass, I will merge it, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1121,2018-05-15T11:52:52Z,2018-05-15T12:08:45Z,2018-05-15T12:08:45Z,MERGED,True,25,24,1,https://github.com/michalvasko,Always apply augments of new models,1,[],https://github.com/sysrepo/sysrepo/pull/1121,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1121,"Description
Even when a module is not immediately loaded after being installed run-time, it should be added to libyang context of other models that now depend on it.
Closure
Fixes #1109","Description
Even when a module is not immediately loaded after being installed run-time, it should be added to libyang context of other models that now depend on it.
Closure
Fixes #1109",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1122,2018-05-15T12:38:48Z,2018-05-29T15:57:33Z,2020-01-15T07:49:42Z,MERGED,True,50,73,11,https://github.com/ratkaj,Docker update 2,4,[],https://github.com/sysrepo/sysrepo/pull/1122,https://github.com/ratkaj,1,https://github.com/sysrepo/sysrepo/pull/1122,"Description
Fixed non compileing docker files and added Ubuntu 18.04. support","Description
Fixed non compileing docker files and added Ubuntu 18.04. support",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1123,2018-05-15T20:34:40Z,2018-05-16T07:58:14Z,2018-05-16T07:58:14Z,MERGED,True,70,0,6,https://github.com/alangefe,Unit test to verify issue #1111,1,[],https://github.com/sysrepo/sysrepo/pull/1123,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1123,"Hello Michal,
Per your comment in issue #1111, here is a pull request which contains only the unit test changes necessary to validate the issue.
The tests in this pull request will fail, of course, until a suitable solution is found for issue #1111.
(This does not include our #1112 modifications to md_test, which assumed the #1112 changes to md_collect_identity_dependencies()'s behavior.)
Regards,
Andrew","Hello Michal,
Per your comment in issue #1111, here is a pull request which contains only the unit test changes necessary to validate the issue.
The tests in this pull request will fail, of course, until a suitable solution is found for issue #1111.
(This does not include our #1112 modifications to md_test, which assumed the #1112 changes to md_collect_identity_dependencies()'s behavior.)
Regards,
Andrew",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1123,2018-05-15T20:34:40Z,2018-05-16T07:58:14Z,2018-05-16T07:58:14Z,MERGED,True,70,0,6,https://github.com/alangefe,Unit test to verify issue #1111,1,[],https://github.com/sysrepo/sysrepo/pull/1123,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1123#issuecomment-389429834,"Hello Michal,
Per your comment in issue #1111, here is a pull request which contains only the unit test changes necessary to validate the issue.
The tests in this pull request will fail, of course, until a suitable solution is found for issue #1111.
(This does not include our #1112 modifications to md_test, which assumed the #1112 changes to md_collect_identity_dependencies()'s behavior.)
Regards,
Andrew","Hi Andrew,
thanks, tests pass now.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1124,2018-05-16T07:06:21Z,2018-05-16T07:25:16Z,2018-05-16T07:25:16Z,MERGED,True,9,2,1,https://github.com/michalvasko,Traverse augments of newly implemented models,1,[],https://github.com/sysrepo/sysrepo/pull/1124,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1124,"Description
Implemented models need their augments also traversed for data nodes that could require an extension from different models.
Closure
Fixes #1111","Description
Implemented models need their augments also traversed for data nodes that could require an extension from different models.
Closure
Fixes #1111",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1125,2018-05-16T10:10:49Z,2018-05-16T10:28:00Z,2018-05-16T10:28:00Z,MERGED,True,18,20,1,https://github.com/michalvasko,Augment nodes schema traversal fix,3,[],https://github.com/sysrepo/sysrepo/pull/1125,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1125,"Description
Nodes only from the currently processed augment should be traversed, ignore the rest.
Closure
Fixes #1116","Description
Nodes only from the currently processed augment should be traversed, ignore the rest.
Closure
Fixes #1116",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1126,2018-05-16T16:02:08Z,2018-05-17T06:17:01Z,2018-05-17T06:17:01Z,MERGED,True,91,0,5,https://github.com/aweast,Tests and models to verify successful installation when submodule contains a leafref,1,[],https://github.com/sysrepo/sysrepo/pull/1126,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1126,"Description
This is a follow-on pull request as requested by @michalvasko that contains only the test case and models which should now pass due to #1125 .  This PR is associated with issue #1116
Test case
The included test case attempts to install a valid model that would previously fail without @michalvasko
fix in #1125 . This yang model is the same one attached to issue #1116
Closure
Tests support PR #1125
Closes issue #1116","Description
This is a follow-on pull request as requested by @michalvasko that contains only the test case and models which should now pass due to #1125 .  This PR is associated with issue #1116
Test case
The included test case attempts to install a valid model that would previously fail without @michalvasko
fix in #1125 . This yang model is the same one attached to issue #1116
Closure
Tests support PR #1125
Closes issue #1116",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1126,2018-05-16T16:02:08Z,2018-05-17T06:17:01Z,2018-05-17T06:17:01Z,MERGED,True,91,0,5,https://github.com/aweast,Tests and models to verify successful installation when submodule contains a leafref,1,[],https://github.com/sysrepo/sysrepo/pull/1126,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1126#issuecomment-389756947,"Description
This is a follow-on pull request as requested by @michalvasko that contains only the test case and models which should now pass due to #1125 .  This PR is associated with issue #1116
Test case
The included test case attempts to install a valid model that would previously fail without @michalvasko
fix in #1125 . This yang model is the same one attached to issue #1116
Closure
Tests support PR #1125
Closes issue #1116","Hi,
thanks, it works now.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1129,2018-05-17T17:48:54Z,2018-05-18T09:38:51Z,2018-05-18T09:38:52Z,MERGED,True,74,2,4,https://github.com/aweast,Resolve module installation assertion when empty container in augment and double augments,1,[],https://github.com/sysrepo/sysrepo/pull/1129,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1129,"Description
Installing a YANG module with sysrepoctl results in a failure due to an assertion when the module contains an augment containing an empty container.  This was very similar to #1106, but with the second augmentation layer in a different model.
Test case
The test case, md_test_insert_module_double_aug, found in md_test.c and accompanying yang model, mwa-aug2, demonstrate the failure.
Closure
closes #1128","Description
Installing a YANG module with sysrepoctl results in a failure due to an assertion when the module contains an augment containing an empty container.  This was very similar to #1106, but with the second augmentation layer in a different model.
Test case
The test case, md_test_insert_module_double_aug, found in md_test.c and accompanying yang model, mwa-aug2, demonstrate the failure.
Closure
closes #1128",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1129,2018-05-17T17:48:54Z,2018-05-18T09:38:51Z,2018-05-18T09:38:52Z,MERGED,True,74,2,4,https://github.com/aweast,Resolve module installation assertion when empty container in augment and double augments,1,[],https://github.com/sysrepo/sysrepo/pull/1129,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1129#issuecomment-390153449,"Description
Installing a YANG module with sysrepoctl results in a failure due to an assertion when the module contains an augment containing an empty container.  This was very similar to #1106, but with the second augmentation layer in a different model.
Test case
The test case, md_test_insert_module_double_aug, found in md_test.c and accompanying yang model, mwa-aug2, demonstrate the failure.
Closure
closes #1128","Hi,
seems fine, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1131,2018-05-22T00:37:39Z,2018-05-22T14:57:55Z,2018-05-22T15:56:59Z,MERGED,True,339,6,11,https://github.com/alangefe,Fix for the data feature interdependency scenario in sysrepo#1130,1,[],https://github.com/sysrepo/sysrepo/pull/1131,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1131,"Description
This pull request contains a proposed solution to issue #1130 and test cases to demonstrate the issue. The issue involves a data feature interdependency scenario. A more detailed description can be found in the issue notes.
A short summary of the changes:

Enable features of imported modules from the module callback.
Mark imported modules as implemented if they're considered implemented in the dependency graph.
Fix reporting of other error codes when validating changes
Test cases to cover the changes.

Closure
closes #1130","Description
This pull request contains a proposed solution to issue #1130 and test cases to demonstrate the issue. The issue involves a data feature interdependency scenario. A more detailed description can be found in the issue notes.
A short summary of the changes:

Enable features of imported modules from the module callback.
Mark imported modules as implemented if they're considered implemented in the dependency graph.
Fix reporting of other error codes when validating changes
Test cases to cover the changes.

Closure
closes #1130",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1131,2018-05-22T00:37:39Z,2018-05-22T14:57:55Z,2018-05-22T15:56:59Z,MERGED,True,339,6,11,https://github.com/alangefe,Fix for the data feature interdependency scenario in sysrepo#1130,1,[],https://github.com/sysrepo/sysrepo/pull/1131,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1131#issuecomment-391022418,"Description
This pull request contains a proposed solution to issue #1130 and test cases to demonstrate the issue. The issue involves a data feature interdependency scenario. A more detailed description can be found in the issue notes.
A short summary of the changes:

Enable features of imported modules from the module callback.
Mark imported modules as implemented if they're considered implemented in the dependency graph.
Fix reporting of other error codes when validating changes
Test cases to cover the changes.

Closure
closes #1130","Hi Andrew,
thanks for a nice contribution, seems fine to me.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1132,2018-05-22T09:48:15Z,2018-05-22T13:35:24Z,2018-05-22T13:35:24Z,MERGED,True,13,10,3,https://github.com/michalvasko,Bugfixes,2,[],https://github.com/sysrepo/sysrepo/pull/1132,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1132,"Description
Never access child pointer of anyxml or anydata nodes and always use module name as prefix for identityref values in predicates.
Closure
Refs CESNET/libyang#506","Description
Never access child pointer of anyxml or anydata nodes and always use module name as prefix for identityref values in predicates.
Closure
Refs CESNET/libyang#506",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1134,2018-05-23T12:53:05Z,2018-05-23T13:35:45Z,2018-05-23T13:35:45Z,MERGED,True,28,25,3,https://github.com/michalvasko,Compile-time variables to change one getter message item count,1,[],https://github.com/sysrepo/sysrepo/pull/1134,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1134,"Description
It is possible to adjust 2 new variables GET_ITEMS_FETCH_LIMIT and GET_SUBTREE_CHUNK_CHILD_LIMIT to somewhat improve efficiency of corresponding API function calls if working with large datastores at the cost of higher memory usage peaks.","Description
It is possible to adjust 2 new variables GET_ITEMS_FETCH_LIMIT and GET_SUBTREE_CHUNK_CHILD_LIMIT to somewhat improve efficiency of corresponding API function calls if working with large datastores at the cost of higher memory usage peaks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1135,2018-05-23T13:39:39Z,2018-05-23T14:26:22Z,2018-05-23T14:26:22Z,MERGED,True,5673,1836,149,https://github.com/michalvasko,Devel coverity merge,227,[],https://github.com/sysrepo/sysrepo/pull/1135,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1135,"Description
Scan the current devel with coverity.","Description
Scan the current devel with coverity.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1136,2018-05-23T23:38:04Z,2018-05-24T06:45:31Z,2018-05-24T06:45:31Z,MERGED,True,52,15,3,https://github.com/alangefe,Reduce scope of test module installs from #1131,1,[],https://github.com/sysrepo/sysrepo/pull/1136,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1136,"This is a small adjustment to the tests we submitted in #1131. I moved the module installation and feature enabling calls out of tests/CMakeLists.txt, where they would apply to all test cases, and instead added them to a setup function so that they only happen before the two rp_dt_edit_test test cases that actually need those modules. (This is similar to how the cl_test tests work.)","This is a small adjustment to the tests we submitted in #1131. I moved the module installation and feature enabling calls out of tests/CMakeLists.txt, where they would apply to all test cases, and instead added them to a setup function so that they only happen before the two rp_dt_edit_test test cases that actually need those modules. (This is similar to how the cl_test tests work.)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1136,2018-05-23T23:38:04Z,2018-05-24T06:45:31Z,2018-05-24T06:45:31Z,MERGED,True,52,15,3,https://github.com/alangefe,Reduce scope of test module installs from #1131,1,[],https://github.com/sysrepo/sysrepo/pull/1136,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1136#issuecomment-391607003,"This is a small adjustment to the tests we submitted in #1131. I moved the module installation and feature enabling calls out of tests/CMakeLists.txt, where they would apply to all test cases, and instead added them to a setup function so that they only happen before the two rp_dt_edit_test test cases that actually need those modules. (This is similar to how the cl_test tests work.)","Hi Andrew,
it is much cleaner now, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1137,2018-05-24T07:12:10Z,2018-05-24T07:32:06Z,2018-05-24T09:05:52Z,MERGED,True,73,46,17,https://github.com/michalvasko,Devel coverity merge,30,[],https://github.com/sysrepo/sysrepo/pull/1137,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1137,"Description
Merge current devel into coverity. Also some travis fixes so that coverity will work now, hopefully.","Description
Merge current devel into coverity. Also some travis fixes so that coverity will work now, hopefully.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1138,2018-05-24T08:42:06Z,2018-05-24T09:17:18Z,2018-05-24T09:17:18Z,CLOSED,False,17,4,1,https://github.com/michalvasko,travis updated,2,[],https://github.com/sysrepo/sysrepo/pull/1138,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1138,"Description
Keep one travis file for all the branches.","Description
Keep one travis file for all the branches.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1139,2018-05-24T10:29:38Z,2018-05-24T11:05:50Z,2018-05-24T11:05:58Z,MERGED,True,18,5,2,https://github.com/michalvasko,Devel coverity merge,3,[],https://github.com/sysrepo/sysrepo/pull/1139,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1139,"Description
Merge current devel into coverity.","Description
Merge current devel into coverity.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1140,2018-05-24T12:23:04Z,2018-05-24T13:17:03Z,2018-05-24T13:17:03Z,MERGED,True,22,16,7,https://github.com/michalvasko,Coverity fixes,7,[],https://github.com/sysrepo/sysrepo/pull/1140,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1140,"Description
Minor bugs revealed by coverity.","Description
Minor bugs revealed by coverity.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1140,2018-05-24T12:23:04Z,2018-05-24T13:17:03Z,2018-05-24T13:17:03Z,MERGED,True,22,16,7,https://github.com/michalvasko,Coverity fixes,7,[],https://github.com/sysrepo/sysrepo/pull/1140,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1140#issuecomment-391699464,"Description
Minor bugs revealed by coverity.","Codecov Report

❗ No coverage uploaded for pull request base (devel@37e0a30). Click here to learn what that means.
The diff coverage is 20%.

@@           Coverage Diff            @@
##             devel    #1140   +/-   ##
========================================
  Coverage         ?   85.45%           
========================================
  Files            ?       31           
  Lines            ?    26433           
  Branches         ?     4546           
========================================
  Hits             ?    22587           
  Misses           ?     3846           
  Partials         ?        0",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1141,2018-05-24T13:18:34Z,2018-05-24T13:39:29Z,2018-05-24T13:39:29Z,MERGED,True,19,12,7,https://github.com/michalvasko,Devel coverity,7,[],https://github.com/sysrepo/sysrepo/pull/1141,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1141,"Description
Merge last devel changes into coverity.","Description
Merge last devel changes into coverity.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1142,2018-05-24T13:39:14Z,2018-05-24T13:39:39Z,2018-05-24T13:39:39Z,MERGED,True,1,1,1,https://github.com/michalvasko,Wrong function prototype,1,[],https://github.com/sysrepo/sysrepo/pull/1142,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1142,"Description
Function prototype missing const.","Description
Function prototype missing const.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1147,2018-05-28T09:35:20Z,2018-05-28T09:54:01Z,2018-05-28T09:54:02Z,MERGED,True,187,121,15,https://github.com/michalvasko,CHANGE option for changing file format,1,[],https://github.com/sysrepo/sysrepo/pull/1147,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1147,"Description
It is now also possible to use JSON as the main format for datastores, notifications, and everything else. XML is the default for now, but will likely be changed because of significantly more efficient libyang JSON parser than XML parser.
New cmake option is FILE_FORMAT_EXT and accepts values xml or json.","Description
It is now also possible to use JSON as the main format for datastores, notifications, and everything else. XML is the default for now, but will likely be changed because of significantly more efficient libyang JSON parser than XML parser.
New cmake option is FILE_FORMAT_EXT and accepts values xml or json.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1149,2018-05-29T16:36:24Z,2018-06-14T06:59:14Z,2018-06-14T06:59:23Z,MERGED,True,423,250,6,https://github.com/jktjkt,Fix tests with non-default repo location,3,[],https://github.com/sysrepo/sysrepo/pull/1149,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1149,"fix tests with testing repository location being different from the ""main build"" one
enable testing of this scenario via Travis

fixes #1148","fix tests with testing repository location being different from the ""main build"" one
enable testing of this scenario via Travis

fixes #1148",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1149,2018-05-29T16:36:24Z,2018-06-14T06:59:14Z,2018-06-14T06:59:23Z,MERGED,True,423,250,6,https://github.com/jktjkt,Fix tests with non-default repo location,3,[],https://github.com/sysrepo/sysrepo/pull/1149,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1149#issuecomment-393069137,"fix tests with testing repository location being different from the ""main build"" one
enable testing of this scenario via Travis

fixes #1148","Hi,
it seems you are adding a rednudnant / somewhere, tests fail with
[ERR] [67340672] (np_get_notif_store_filename:488) Unable to create the directory '/tmp/sysrepo-repository/data/notifications//': No such file or directory

Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1149,2018-05-29T16:36:24Z,2018-06-14T06:59:14Z,2018-06-14T06:59:23Z,MERGED,True,423,250,6,https://github.com/jktjkt,Fix tests with non-default repo location,3,[],https://github.com/sysrepo/sysrepo/pull/1149,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1149#issuecomment-393195153,"fix tests with testing repository location being different from the ""main build"" one
enable testing of this scenario via Travis

fixes #1148","The test fails because the repository does not exist at the time the test is executed. You can reproduce this yourself:

start from scratch
configure sysrepo with, e.g., -DREPOSITORY_LOC=/tmp/sysrepo-repository
make all
do not run make install
run ctest -R np_test -E valgrind --output-on-failure

In my testing, our internal CI scripts have always run make install before executing the testsuite, and therefore I've never hit this before. This doesn't happen without the REPOSITORY_LOC parameter because if it is not specified, then the TEST_SCHEMA_SEARCH_DIR is underneath the REPOSITORY_LOC and it gets created while building the tests.
I've adapted the Travis CI launcher to always run make install prior to running the test suite. See the commit description; I think it's the least bad option.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1149,2018-05-29T16:36:24Z,2018-06-14T06:59:14Z,2018-06-14T06:59:23Z,MERGED,True,423,250,6,https://github.com/jktjkt,Fix tests with non-default repo location,3,[],https://github.com/sysrepo/sysrepo/pull/1149,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/1149#issuecomment-393223677,"fix tests with testing repository location being different from the ""main build"" one
enable testing of this scenario via Travis

fixes #1148","Well, it seems that I cannot fix this on my own. I'll appreciate it if @michalvasko can jump in and clarify the expected permissions in #1150 for the final system and for the test suite as well.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1149,2018-05-29T16:36:24Z,2018-06-14T06:59:14Z,2018-06-14T06:59:23Z,MERGED,True,423,250,6,https://github.com/jktjkt,Fix tests with non-default repo location,3,[],https://github.com/sysrepo/sysrepo/pull/1149,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1149#issuecomment-393466599,"fix tests with testing repository location being different from the ""main build"" one
enable testing of this scenario via Travis

fixes #1148","Hi,
I have examined the problem you encountered and I definitely do not think you should need to run make install for the tests to pass, so I am against this change. The solution I would go for is to simply condition np_test on the existence of ${DATA_SEARCH_DIR} (just like some tests are conditioned on test repository equalling to global repository in sysrepo/tests/CMakeLists.txt:94). What do you think?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1149,2018-05-29T16:36:24Z,2018-06-14T06:59:14Z,2018-06-14T06:59:23Z,MERGED,True,423,250,6,https://github.com/jktjkt,Fix tests with non-default repo location,3,[],https://github.com/sysrepo/sysrepo/pull/1149,https://github.com/jktjkt,6,https://github.com/sysrepo/sysrepo/pull/1149#issuecomment-397037601,"fix tests with testing repository location being different from the ""main build"" one
enable testing of this scenario via Travis

fixes #1148","Hi, thanks for investigating this. I agree; in fact I think that the simplest check is to condition that one test from the np_test, the np_notif_store_test, on just the repository being inside-the-build-tree. Pushed into this pull request,.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1149,2018-05-29T16:36:24Z,2018-06-14T06:59:14Z,2018-06-14T06:59:23Z,MERGED,True,423,250,6,https://github.com/jktjkt,Fix tests with non-default repo location,3,[],https://github.com/sysrepo/sysrepo/pull/1149,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/1149#issuecomment-397192330,"fix tests with testing repository location being different from the ""main build"" one
enable testing of this scenario via Travis

fixes #1148","Alright, merged.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1152,2018-05-30T21:57:40Z,2018-05-31T09:16:05Z,2018-05-31T09:16:06Z,MERGED,True,62,1,4,https://github.com/aweast,Fix issue where edit-config changes are not reflected in datastore when top-level node within submodule has external dependency,1,[],https://github.com/sysrepo/sysrepo/pull/1152,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1152,"Description
When attempting to commit changes to a top-level node defined within a submodule where a child node has some kind of dependency on an external module, the changes will not be applied to the datastore.
Test case
The test case, set_and_get_items_from_top_level_in_submodule, found in rp_dt_edit_test.c and accompanying yang models, data-submodule-main.yang and data-submodule-sub.yang demonstrate the failure.
Closure
closes #1151","Description
When attempting to commit changes to a top-level node defined within a submodule where a child node has some kind of dependency on an external module, the changes will not be applied to the datastore.
Test case
The test case, set_and_get_items_from_top_level_in_submodule, found in rp_dt_edit_test.c and accompanying yang models, data-submodule-main.yang and data-submodule-sub.yang demonstrate the failure.
Closure
closes #1151",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1152,2018-05-30T21:57:40Z,2018-05-31T09:16:05Z,2018-05-31T09:16:06Z,MERGED,True,62,1,4,https://github.com/aweast,Fix issue where edit-config changes are not reflected in datastore when top-level node within submodule has external dependency,1,[],https://github.com/sysrepo/sysrepo/pull/1152,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1152#issuecomment-393468439,"Description
When attempting to commit changes to a top-level node defined within a submodule where a child node has some kind of dependency on an external module, the changes will not be applied to the datastore.
Test case
The test case, set_and_get_items_from_top_level_in_submodule, found in rp_dt_edit_test.c and accompanying yang models, data-submodule-main.yang and data-submodule-sub.yang demonstrate the failure.
Closure
closes #1151","Hi,
you are right and thanks for a simple fix and a test.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1154,2018-06-04T12:15:02Z,2018-06-04T12:35:57Z,2018-06-04T12:35:57Z,MERGED,True,4,0,1,https://github.com/michalvasko,Not existing notification directory is not an error,1,[],https://github.com/sysrepo/sysrepo/pull/1154,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1154,"Description
Do not treat non-existing notification directory as an error (change message severity to INF).","Description
Do not treat non-existing notification directory as an error (change message severity to INF).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1157,2018-06-05T22:10:20Z,2018-06-06T07:44:18Z,2018-06-06T07:44:18Z,MERGED,True,105,7,5,https://github.com/aweast,Fix for features not loading when defined within submodules that augments external module element,1,[],https://github.com/sysrepo/sysrepo/pull/1157,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1157,"Description
Sysrepo does not load features that are defined within a submodule that augments an element of an external module.
Test case
The test case, set_and_get_items_from_feature_of_submodule, found in rp_dt_edit_test.c and accompanying yang models, feature-submodule-main.yang, feature-submodule-mod.yang, and feature-submodule-sub.yang demonstrate the failure.
Closure
closes #1156","Description
Sysrepo does not load features that are defined within a submodule that augments an element of an external module.
Test case
The test case, set_and_get_items_from_feature_of_submodule, found in rp_dt_edit_test.c and accompanying yang models, feature-submodule-main.yang, feature-submodule-mod.yang, and feature-submodule-sub.yang demonstrate the failure.
Closure
closes #1156",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1157,2018-06-05T22:10:20Z,2018-06-06T07:44:18Z,2018-06-06T07:44:18Z,MERGED,True,105,7,5,https://github.com/aweast,Fix for features not loading when defined within submodules that augments external module element,1,[],https://github.com/sysrepo/sysrepo/pull/1157,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1157#issuecomment-394973307,"Description
Sysrepo does not load features that are defined within a submodule that augments an element of an external module.
Test case
The test case, set_and_get_items_from_feature_of_submodule, found in rp_dt_edit_test.c and accompanying yang models, feature-submodule-main.yang, feature-submodule-mod.yang, and feature-submodule-sub.yang demonstrate the failure.
Closure
closes #1156","Hi,
thanks a lot for another clean patch.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1158,2018-06-06T08:11:01Z,2018-06-06T08:27:09Z,2018-06-06T08:27:09Z,MERGED,True,2,2,2,https://github.com/michalvasko,Build type warnings,1,[],https://github.com/sysrepo/sysrepo/pull/1158,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1158,"Description
Fix a few build type warnings, functionality does not change.","Description
Fix a few build type warnings, functionality does not change.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1161,2018-06-06T10:09:13Z,2018-06-06T12:17:23Z,2018-06-06T12:17:28Z,MERGED,True,64,115,11,https://github.com/mislavn,Language cache,3,[],https://github.com/sysrepo/sysrepo/pull/1161,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1161,"Description
Fixes caching for language bindings, it possible to change language bindings with just cmake -DGEN_PYTHON_VERSION=2 ...
Closure
closes #1155 .","Description
Fixes caching for language bindings, it possible to change language bindings with just cmake -DGEN_PYTHON_VERSION=2 ...
Closure
closes #1155 .",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1161,2018-06-06T10:09:13Z,2018-06-06T12:17:23Z,2018-06-06T12:17:28Z,MERGED,True,64,115,11,https://github.com/mislavn,Language cache,3,[],https://github.com/sysrepo/sysrepo/pull/1161,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1161#issuecomment-395018527,"Description
Fixes caching for language bindings, it possible to change language bindings with just cmake -DGEN_PYTHON_VERSION=2 ...
Closure
closes #1155 .","Hi Michal,
I have one issue, after I switched the langue version and tried to make install I get an error at:
-- Exec: /opt/fork/sysrepo/build/src/sysrepoctl --install --yang=/opt/fork/sysrepo/examples/yang/turing-machine.yang --permissions=666; /opt/fork/sysrepo/build/src/sysrepocfg --import=/opt/fork/sysrepo/examples/yang/turing-machine.data.xml --datastore=startup --format=xml --level=0 turing-machine
-- Exec: /opt/fork/sysrepo/build/src/sysrepoctl --install --yang=/opt/fork/sysrepo/examples/yang/iana-if-type.yang --permissions=666
-- Exec: /opt/fork/sysrepo/build/src/sysrepoctl --install --yang=/opt/fork/sysrepo/examples/yang/ietf-ip@2014-06-16.yang --permissions=666
-- Exec: /opt/fork/sysrepo/build/src/sysrepoctl --install --yang=/opt/fork/sysrepo/examples/yang/ietf-interfaces@2014-05-08.yang --permissions=666; /opt/fork/sysrepo/build/src/sysrepocfg --import=/opt/fork/sysrepo/examples/yang/ietf-interfaces.data.xml --datastore=startup --format=xml --level=0 ietf-interfaces
CMake Error at examples/cmake_install.cmake:68 (message):
  Error: 1
Call Stack (most recent call first):
  cmake_install.cmake:167 (include)


The full logs:
root@7b89b971570d:/opt/fork/sysrepo/build# sysrepocfg -i /opt/fork/sysrepo/examples/yang/ietf-interfaces.data.xml -d startup -f xml ietf-interfaces
[ERR] (pm_load_data_tree:264) Parsing persist data from file '/opt/fork/sysrepo/build/repository/data/ietf-interfaces.persist' failed: Duplicated instance of ""subscription"" list.
[ERR] (pm_get_module_info:1001) Unable to load persist data tree for module 'ietf-interfaces'.
[ERR] (dm_apply_persist_data_for_model_imports:947) Failed to apply features from persist data for module ietf-interfaces
[ERR] (dm_load_module:1088) Failed to apply persist data for imports of module ietf-interfaces
[ERR] (dm_get_data_info_internal:2783) Get module 'ietf-interfaces' failed
[ERR] (rp_dt_prepare_data:1206) Getting data tree failed (4) for xpath '/ietf-interfaces:*//.'
[ERR] (rp_dt_get_values_wrapper_with_opts:1358) rp_dt_prepare_data failed
[ERR] (rp_get_items_req_process:830) Get items failed for '/ietf-interfaces:*//.', session id=2029398481.
[ERR] (cl_request_process:543) Error by processing of the get-items request (session id=2029398481): Sysrepo-internal error.
[ERR] (sr_get_items_iter:1028) Sending get_items request failed '/ietf-interfaces:*//.'
[ERR] (srcfg_get_module_data:248) Error by sr_get_items_iter: Sysrepo-internal error

If I delete the repository directory it works, not sure what the issue could be.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1161,2018-06-06T10:09:13Z,2018-06-06T12:17:23Z,2018-06-06T12:17:28Z,MERGED,True,64,115,11,https://github.com/mislavn,Language cache,3,[],https://github.com/sysrepo/sysrepo/pull/1161,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1161#issuecomment-395020685,"Description
Fixes caching for language bindings, it possible to change language bindings with just cmake -DGEN_PYTHON_VERSION=2 ...
Closure
closes #1155 .","Hi,
I believe it is caused by a libyang bug that I have fixed quite some time ago. So, do you have a recent libyang?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1161,2018-06-06T10:09:13Z,2018-06-06T12:17:23Z,2018-06-06T12:17:28Z,MERGED,True,64,115,11,https://github.com/mislavn,Language cache,3,[],https://github.com/sysrepo/sysrepo/pull/1161,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/1161#issuecomment-395023755,"Description
Fixes caching for language bindings, it possible to change language bindings with just cmake -DGEN_PYTHON_VERSION=2 ...
Closure
closes #1155 .","Hi,
aha, I was probably using an older build. Let me try with the newest version.
UPDATE: you're right, everything works now.
Regards,
Mislav",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1162,2018-06-06T10:17:18Z,2018-06-06T11:37:06Z,2018-06-06T11:37:06Z,MERGED,True,17,14,13,https://github.com/michalvasko,Devel update,28,[],https://github.com/sysrepo/sysrepo/pull/1162,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1162,"Description
Update devel so that it is up-to-date with master.","Description
Update devel so that it is up-to-date with master.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1167,2018-06-11T19:25:09Z,2018-06-13T06:21:55Z,2018-06-13T06:21:56Z,MERGED,True,26,8,2,https://github.com/aweast,Test modification to demonstrate problem when an identities base is in an unimplemented model,4,[],https://github.com/sysrepo/sysrepo/pull/1167,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1167,"Description
To demonstrate the issue in #1166 , we removed id-def-base and id-ref-base from the list of automatically installed yang models. There is only one test that currently uses these models, so this change should be valid.
We also extended the test to attempt to get the value. With an unmodified CMakeList.txt file, we were seeing the rp_dt_get_value_wrapper fail with rc = SR_ERR_NOT_FOUND. Any fix that fixes the set-item operation should also ensure the get-item operation succeeds.
Test case
Modified set_item_id_ref to be set_and_get_item_id_ref and removed installation of models from CMakeList.txt.
Closure
Demonstrates issue filed in #1166","Description
To demonstrate the issue in #1166 , we removed id-def-base and id-ref-base from the list of automatically installed yang models. There is only one test that currently uses these models, so this change should be valid.
We also extended the test to attempt to get the value. With an unmodified CMakeList.txt file, we were seeing the rp_dt_get_value_wrapper fail with rc = SR_ERR_NOT_FOUND. Any fix that fixes the set-item operation should also ensure the get-item operation succeeds.
Test case
Modified set_item_id_ref to be set_and_get_item_id_ref and removed installation of models from CMakeList.txt.
Closure
Demonstrates issue filed in #1166",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1167,2018-06-11T19:25:09Z,2018-06-13T06:21:55Z,2018-06-13T06:21:56Z,MERGED,True,26,8,2,https://github.com/aweast,Test modification to demonstrate problem when an identities base is in an unimplemented model,4,[],https://github.com/sysrepo/sysrepo/pull/1167,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1167#issuecomment-396558263,"Description
To demonstrate the issue in #1166 , we removed id-def-base and id-ref-base from the list of automatically installed yang models. There is only one test that currently uses these models, so this change should be valid.
We also extended the test to attempt to get the value. With an unmodified CMakeList.txt file, we were seeing the rp_dt_get_value_wrapper fail with rc = SR_ERR_NOT_FOUND. Any fix that fixes the set-item operation should also ensure the get-item operation succeeds.
Test case
Modified set_item_id_ref to be set_and_get_item_id_ref and removed installation of models from CMakeList.txt.
Closure
Demonstrates issue filed in #1166","Hi,
if you properly clean-up after the test, it should pass and I can merge it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1167,2018-06-11T19:25:09Z,2018-06-13T06:21:55Z,2018-06-13T06:21:56Z,MERGED,True,26,8,2,https://github.com/aweast,Test modification to demonstrate problem when an identities base is in an unimplemented model,4,[],https://github.com/sysrepo/sysrepo/pull/1167,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1167#issuecomment-396826906,"Description
To demonstrate the issue in #1166 , we removed id-def-base and id-ref-base from the list of automatically installed yang models. There is only one test that currently uses these models, so this change should be valid.
We also extended the test to attempt to get the value. With an unmodified CMakeList.txt file, we were seeing the rp_dt_get_value_wrapper fail with rc = SR_ERR_NOT_FOUND. Any fix that fixes the set-item operation should also ensure the get-item operation succeeds.
Test case
Modified set_item_id_ref to be set_and_get_item_id_ref and removed installation of models from CMakeList.txt.
Closure
Demonstrates issue filed in #1166","Okay, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1168,2018-06-12T10:24:12Z,2018-06-12T11:19:12Z,2018-06-12T11:19:12Z,MERGED,True,142,117,4,https://github.com/michalvasko,Load modules with derived identities of a used identity,1,[],https://github.com/sysrepo/sysrepo/pull/1168,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1168,"Description
Handle situations when an implemented model imports a model with base identity used in some of the original model identityref and there are other implemented models with derived identities that should be possible to use as that identityref's values.
Closure
Fixes #1166","Description
Handle situations when an implemented model imports a model with base identity used in some of the original model identityref and there are other implemented models with derived identities that should be possible to use as that identityref's values.
Closure
Fixes #1166",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1171,2018-06-13T09:26:01Z,2018-06-13T09:48:13Z,2018-06-13T09:48:13Z,MERGED,True,42,7,3,https://github.com/michalvasko,Handle circular dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/1171,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1171,"Description
In case or circular dependencies the resolver function got stuck in an infinite loop.
Closure
Fixes #1169","Description
In case or circular dependencies the resolver function got stuck in an infinite loop.
Closure
Fixes #1169",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1174,2018-06-13T22:32:37Z,2018-06-14T07:30:14Z,2018-06-14T07:30:14Z,MERGED,True,41,17,1,https://github.com/aweast,Handle circular references in module imports,1,[],https://github.com/sysrepo/sysrepo/pull/1174,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1174,"Description
During some feature enables, we found some infinite recursion loops.  The pull request at #1171 fixed part of our issues.  This pull request fixes the remaining recursion loops we are seeing.
Let us know if we need to provide specific examples of the yang models we were seeing this on.","Description
During some feature enables, we found some infinite recursion loops.  The pull request at #1171 fixed part of our issues.  This pull request fixes the remaining recursion loops we are seeing.
Let us know if we need to provide specific examples of the yang models we were seeing this on.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1174,2018-06-13T22:32:37Z,2018-06-14T07:30:14Z,2018-06-14T07:30:14Z,MERGED,True,41,17,1,https://github.com/aweast,Handle circular references in module imports,1,[],https://github.com/sysrepo/sysrepo/pull/1174,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1174#issuecomment-397199433,"Description
During some feature enables, we found some infinite recursion loops.  The pull request at #1171 fixed part of our issues.  This pull request fixes the remaining recursion loops we are seeing.
Let us know if we need to provide specific examples of the yang models we were seeing this on.","Of course, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1176,2018-06-14T08:40:35Z,2018-06-14T09:43:30Z,2018-06-14T09:43:30Z,MERGED,True,62,0,6,https://github.com/pfeige,Resolve identityref failed when evaluating notification,3,[],https://github.com/sysrepo/sysrepo/pull/1176,https://github.com/pfeige,1,https://github.com/sysrepo/sysrepo/pull/1176,"Hi Michal,
here is the pull request for the fix of issue #1175.
It cannot automatically merge. I hope this is no problem.
Regards,
Peter","Hi Michal,
here is the pull request for the fix of issue #1175.
It cannot automatically merge. I hope this is no problem.
Regards,
Peter",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1176,2018-06-14T08:40:35Z,2018-06-14T09:43:30Z,2018-06-14T09:43:30Z,MERGED,True,62,0,6,https://github.com/pfeige,Resolve identityref failed when evaluating notification,3,[],https://github.com/sysrepo/sysrepo/pull/1176,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1176#issuecomment-397231608,"Hi Michal,
here is the pull request for the fix of issue #1175.
It cannot automatically merge. I hope this is no problem.
Regards,
Peter","Hi,
we will see whether the tests will pass after the merge but I think they should.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1177,2018-06-14T11:05:00Z,2018-06-15T09:51:43Z,2018-06-15T13:34:59Z,MERGED,True,7,25,3,https://github.com/michalvasko,Default sysrepo repository location,4,[],https://github.com/sysrepo/sysrepo/pull/1177,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1177,"Description
Use default repository location so that all tests are executed.
Also, always use prefixes for idetityref values.","Description
Use default repository location so that all tests are executed.
Also, always use prefixes for idetityref values.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1177,2018-06-14T11:05:00Z,2018-06-15T09:51:43Z,2018-06-15T13:34:59Z,MERGED,True,7,25,3,https://github.com/michalvasko,Default sysrepo repository location,4,[],https://github.com/sysrepo/sysrepo/pull/1177,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1177#issuecomment-397257132,"Description
Use default repository location so that all tests are executed.
Also, always use prefixes for idetityref values.","@jktjkt In your previous pull request you have defined a custom repository location in one travis build and then it differed from the test repository so some tests were not executed.  I have removed all of it and now it works correctly. Can I merge this or there was some purpose to your changes?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1177,2018-06-14T11:05:00Z,2018-06-15T09:51:43Z,2018-06-15T13:34:59Z,MERGED,True,7,25,3,https://github.com/michalvasko,Default sysrepo repository location,4,[],https://github.com/sysrepo/sysrepo/pull/1177,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1177#issuecomment-397610034,"Description
Use default repository location so that all tests are executed.
Also, always use prefixes for idetityref values.","@michalvasko
I believe that the CI should also test a build which is close to what the end users are going to deploy -- and that means an out-of-tree repository location. That's why we're actually building sysrepo twice in our internal CI; once with all tests and an in-tree repo, and once again with a persistent repository location.
However, we were seeing hard-to-trace breakages when we were updating sysrepo because Travis was not testing that configuration. That's why I wanted to add a new configuration to the Travis build matrix to ensure that these failures won't hit me when I update. At the same time I wanted to keep the number of tested configurations low enough, so I only repurposed one of the existing jobs.
Any of these is fine with me:

add one more job which explicitly tests an out-of-tree repo location
revert this commit, i.e. have one of the existing jobs repurposed to also test an out-of-tree repo location in addition to no custom memory management",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1177,2018-06-14T11:05:00Z,2018-06-15T09:51:43Z,2018-06-15T13:34:59Z,MERGED,True,7,25,3,https://github.com/michalvasko,Default sysrepo repository location,4,[],https://github.com/sysrepo/sysrepo/pull/1177,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1177#issuecomment-397621838,"Description
Use default repository location so that all tests are executed.
Also, always use prefixes for idetityref values.","@jktjkt I see, so it was intentional, I was confused. Okay, I will add another clang build.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1181,2018-06-15T13:55:58Z,2018-06-15T14:13:29Z,2018-06-15T14:13:29Z,MERGED,True,7,1,1,https://github.com/michalvasko,New travis build with out-of-build repository location,1,[],https://github.com/sysrepo/sysrepo/pull/1181,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1181,"Description
New out-of-build repository travis build added.","Description
New out-of-build repository travis build added.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1182,2018-06-18T08:13:30Z,2018-06-18T09:27:20Z,2018-06-18T09:27:20Z,MERGED,True,4,0,1,https://github.com/pfeige,Possible segfault in dm_module_clb,1,[],https://github.com/sysrepo/sysrepo/pull/1182,https://github.com/pfeige,1,https://github.com/sysrepo/sysrepo/pull/1182,"Hi,
this commit frimpler@bc0d6a3 contains a fix for a possible segfault in the callback function dm_module_clb() of data_manager.c.
BR,
Peter","Hi,
this commit frimpler@bc0d6a3 contains a fix for a possible segfault in the callback function dm_module_clb() of data_manager.c.
BR,
Peter",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1182,2018-06-18T08:13:30Z,2018-06-18T09:27:20Z,2018-06-18T09:27:20Z,MERGED,True,4,0,1,https://github.com/pfeige,Possible segfault in dm_module_clb,1,[],https://github.com/sysrepo/sysrepo/pull/1182,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1182#issuecomment-397995258,"Hi,
this commit frimpler@bc0d6a3 contains a fix for a possible segfault in the callback function dm_module_clb() of data_manager.c.
BR,
Peter","Hi,
alright, why not even though this error should never occur.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1186,2018-06-19T12:03:12Z,2018-06-19T12:26:06Z,2018-06-19T12:26:06Z,MERGED,True,62,38,2,https://github.com/michalvasko,Sysrepocfg requires format argument,1,[],https://github.com/sysrepo/sysrepo/pull/1186,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1186,"Description
Make sysrepocfg format parameter mandatory as sysrepo now supports json in addition to xml.","Description
Make sysrepocfg format parameter mandatory as sysrepo now supports json in addition to xml.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1187,2018-06-19T21:42:00Z,2018-06-29T12:24:56Z,2018-06-29T12:25:02Z,MERGED,True,90,6,5,https://github.com/aweast,Fixing 'leafref points to non-existent leaf' error,5,[],https://github.com/sysrepo/sysrepo/pull/1187,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1187,"Description
cross_module_data_dependency was not getting set when MP_DEP_EXTENSION was the first dependency type in the ll_node
Test case
The test case, set_item_leafref_augment, found in rp_dt_edit_test.c and accompanying yang model augm_leafref_m1 demonstrates the failure.
Closure
closes #1183","Description
cross_module_data_dependency was not getting set when MP_DEP_EXTENSION was the first dependency type in the ll_node
Test case
The test case, set_item_leafref_augment, found in rp_dt_edit_test.c and accompanying yang model augm_leafref_m1 demonstrates the failure.
Closure
closes #1183",True,{'THUMBS_UP': ['https://github.com/jmhossler']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1187,2018-06-19T21:42:00Z,2018-06-29T12:24:56Z,2018-06-29T12:25:02Z,MERGED,True,90,6,5,https://github.com/aweast,Fixing 'leafref points to non-existent leaf' error,5,[],https://github.com/sysrepo/sysrepo/pull/1187,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1187#issuecomment-398697769,"Description
cross_module_data_dependency was not getting set when MP_DEP_EXTENSION was the first dependency type in the ll_node
Test case
The test case, set_item_leafref_augment, found in rp_dt_edit_test.c and accompanying yang model augm_leafref_m1 demonstrates the failure.
Closure
closes #1183","Hi,
it seems you are right and the fix is correct. If you now just update dm_test (which was obviously affected by this bug) and change dm_test.c:104 to
assert_int_equal(SR_ERR_NOT_FOUND, dm_get_datatree(ctx, ses_ctx ,""small-module"", &data_tree));
it should pass. Thanks!
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1187,2018-06-19T21:42:00Z,2018-06-29T12:24:56Z,2018-06-29T12:25:02Z,MERGED,True,90,6,5,https://github.com/aweast,Fixing 'leafref points to non-existent leaf' error,5,[],https://github.com/sysrepo/sysrepo/pull/1187,https://github.com/aweast,3,https://github.com/sysrepo/sysrepo/pull/1187#issuecomment-398766347,"Description
cross_module_data_dependency was not getting set when MP_DEP_EXTENSION was the first dependency type in the ll_node
Test case
The test case, set_item_leafref_augment, found in rp_dt_edit_test.c and accompanying yang model augm_leafref_m1 demonstrates the failure.
Closure
closes #1183",We see the issue in the rp_datatree_test that also interacts with small-module. We should have it fixed shortly.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1187,2018-06-19T21:42:00Z,2018-06-29T12:24:56Z,2018-06-29T12:25:02Z,MERGED,True,90,6,5,https://github.com/aweast,Fixing 'leafref points to non-existent leaf' error,5,[],https://github.com/sysrepo/sysrepo/pull/1187,https://github.com/aweast,4,https://github.com/sysrepo/sysrepo/pull/1187#issuecomment-401225666,"Description
cross_module_data_dependency was not getting set when MP_DEP_EXTENSION was the first dependency type in the ll_node
Test case
The test case, set_item_leafref_augment, found in rp_dt_edit_test.c and accompanying yang model augm_leafref_m1 demonstrates the failure.
Closure
closes #1183",@michalvasko are there any other changes that need to be made to this pull request?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1187,2018-06-19T21:42:00Z,2018-06-29T12:24:56Z,2018-06-29T12:25:02Z,MERGED,True,90,6,5,https://github.com/aweast,Fixing 'leafref points to non-existent leaf' error,5,[],https://github.com/sysrepo/sysrepo/pull/1187,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1187#issuecomment-401274366,"Description
cross_module_data_dependency was not getting set when MP_DEP_EXTENSION was the first dependency type in the ll_node
Test case
The test case, set_item_leafref_augment, found in rp_dt_edit_test.c and accompanying yang model augm_leafref_m1 demonstrates the failure.
Closure
closes #1183","Hi,
it seems I have somehow forgotten about this pull request, sorry and it is good that you let me know. Just a minor complaint and it should be good to go.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1187,2018-06-19T21:42:00Z,2018-06-29T12:24:56Z,2018-06-29T12:25:02Z,MERGED,True,90,6,5,https://github.com/aweast,Fixing 'leafref points to non-existent leaf' error,5,[],https://github.com/sysrepo/sysrepo/pull/1187,https://github.com/aweast,6,https://github.com/sysrepo/sysrepo/pull/1187#issuecomment-401336773,"Description
cross_module_data_dependency was not getting set when MP_DEP_EXTENSION was the first dependency type in the ll_node
Test case
The test case, set_item_leafref_augment, found in rp_dt_edit_test.c and accompanying yang model augm_leafref_m1 demonstrates the failure.
Closure
closes #1183","I removed a few other stray whitespace issues that I think we introduced to the end of lines as well. Thanks, Michal!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1187,2018-06-19T21:42:00Z,2018-06-29T12:24:56Z,2018-06-29T12:25:02Z,MERGED,True,90,6,5,https://github.com/aweast,Fixing 'leafref points to non-existent leaf' error,5,[],https://github.com/sysrepo/sysrepo/pull/1187,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/1187#issuecomment-401338657,"Description
cross_module_data_dependency was not getting set when MP_DEP_EXTENSION was the first dependency type in the ll_node
Test case
The test case, set_item_leafref_augment, found in rp_dt_edit_test.c and accompanying yang model augm_leafref_m1 demonstrates the failure.
Closure
closes #1183","Okay now, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1191,2018-06-22T11:35:14Z,2018-06-22T11:52:09Z,2018-06-22T11:52:09Z,MERGED,True,16,19,5,https://github.com/michalvasko,State data subtree retrieval fix,3,[],https://github.com/sysrepo/sysrepo/pull/1191,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1191,"Description
Some minor fixes and mainly proper traversal of state data subtrees.","Description
Some minor fixes and mainly proper traversal of state data subtrees.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1192,2018-06-25T18:26:34Z,2018-06-25T18:48:10Z,2018-06-25T18:48:10Z,MERGED,True,74,33,1,https://github.com/michalvasko,Apply persist data for all dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/1192,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1192,"Description
Apply persistent data on all the dependencies of a particular model.
Closure
Fixes #1190","Description
Apply persistent data on all the dependencies of a particular model.
Closure
Fixes #1190",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1193,2018-06-27T22:08:51Z,2018-06-28T09:11:47Z,2018-06-28T09:11:47Z,MERGED,True,234,0,7,https://github.com/alangefe,Fix for variant of #1190,1,[],https://github.com/sysrepo/sysrepo/pull/1193,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1193,"Description
This is a proposed fix to issue #1190. Pull request #1192 fixed the example yang models that were provided in the issue, but we found another, slightly more complicated variant that still showed the same issue. We are proposing this fix as an alternative or addition to #1192.
While running dm_apply_persist_data_for_model_imports, we want to make sure that persist data is applied for any models that augment the current model.
Test case
A cmocka test for the original, fixed scenario and a test for the new, modified scenario are provided.
Closure
closes #1190","Description
This is a proposed fix to issue #1190. Pull request #1192 fixed the example yang models that were provided in the issue, but we found another, slightly more complicated variant that still showed the same issue. We are proposing this fix as an alternative or addition to #1192.
While running dm_apply_persist_data_for_model_imports, we want to make sure that persist data is applied for any models that augment the current model.
Test case
A cmocka test for the original, fixed scenario and a test for the new, modified scenario are provided.
Closure
closes #1190",True,{'HOORAY': ['https://github.com/jmhossler']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1193,2018-06-27T22:08:51Z,2018-06-28T09:11:47Z,2018-06-28T09:11:47Z,MERGED,True,234,0,7,https://github.com/alangefe,Fix for variant of #1190,1,[],https://github.com/sysrepo/sysrepo/pull/1193,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1193#issuecomment-400967955,"Description
This is a proposed fix to issue #1190. Pull request #1192 fixed the example yang models that were provided in the issue, but we found another, slightly more complicated variant that still showed the same issue. We are proposing this fix as an alternative or addition to #1192.
While running dm_apply_persist_data_for_model_imports, we want to make sure that persist data is applied for any models that augment the current model.
Test case
A cmocka test for the original, fixed scenario and a test for the new, modified scenario are provided.
Closure
closes #1190","Hi,
no problem, it seems that these dependencies are also needed. Thanks for a clean fix and new test cases.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1194,2018-06-28T06:21:37Z,2018-06-28T07:59:56Z,2018-06-28T07:59:56Z,MERGED,True,147,117,5,https://github.com/michalvasko,ietf-netconf-acm module updated,4,[],https://github.com/sysrepo/sysrepo/pull/1194,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1194,"Description
New model includes no functional changes (for sysrepo), only some updated descriptions.
Closure
Fixes CESNET/libyang#533","Description
New model includes no functional changes (for sysrepo), only some updated descriptions.
Closure
Fixes CESNET/libyang#533",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1197,2018-06-29T08:52:54Z,2018-06-29T09:09:06Z,2018-06-29T09:09:06Z,MERGED,True,1,13,2,https://github.com/michalvasko,Remove useless lock for a boolean value,1,[],https://github.com/sysrepo/sysrepo/pull/1197,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1197,"Description
There is no need to lock access to a boolean value.
Closure
Fixes #1195","Description
There is no need to lock access to a boolean value.
Closure
Fixes #1195",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1198,2018-06-29T09:48:45Z,2018-06-29T10:13:03Z,2018-06-29T10:13:03Z,MERGED,True,6,1,1,https://github.com/michalvasko,"Handle xpaths starting with ""//""",1,[],https://github.com/sysrepo/sysrepo/pull/1198,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1198,"Description
Namespace was not properly extracted from XPaths starting with //.
Closure
Fixes CESNET/netopeer2#291","Description
Namespace was not properly extracted from XPaths starting with //.
Closure
Fixes CESNET/netopeer2#291",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1201,2018-07-02T21:34:41Z,2018-07-03T12:55:18Z,2018-07-03T12:55:18Z,MERGED,True,101,59,3,https://github.com/bhart3,Improve search times for interconnected yang models.,1,[],https://github.com/sysrepo/sysrepo/pull/1201,https://github.com/bhart3,1,https://github.com/sysrepo/sysrepo/pull/1201,"Description
When running the sysrepo with a large number of interconnected yang models, we have recently noticed a substantial slowdown during the dm_load_module process. We would like to propose the following changes:
Change the use of sr_list_t to sr_btree_t
With a large number of installed models and dependencies, the loaded_deps list must be traversed a large number of times. We replaced the use of sr_list_t with sr_btree_t for improved search times.
For the btree comparison function, we compared the pointer values instead of the module names. Are there any forseeable issues with this approach?
Move the module-in-context check
Previously, dm_apply_persist_data_for_model would check to see if a model was in the target context before attempting to load the persist data. However, before dm_apply_persist_data_for_model is called, dm_apply_persist_data_for_model_imports already tried to process all of the model's imports. We moved the check into dm_apply_persist_data_for_model_imports so the imported models are only processed if the current model is in the target context.
Add a completed_deps list
The dm_apply_persist_data_for_model_imports function has one recursive call that is not blocked by a check on the loaded_deps list. We believe that this is the correct behavior. However, this introduces a way for a single model to be processed by this function many times. To fix this, we added a completed_deps list. When the persist data of a model and all of its imported models are completely loaded, the model is added to the completed_deps list. If dm_apply_persist_data_for_model_imports is called on a model that is already in completed_deps, we can safely assume that all of the required persist data has already been loaded and exit the function immediately.
Test case
All current tests pass. No new functionality added.","Description
When running the sysrepo with a large number of interconnected yang models, we have recently noticed a substantial slowdown during the dm_load_module process. We would like to propose the following changes:
Change the use of sr_list_t to sr_btree_t
With a large number of installed models and dependencies, the loaded_deps list must be traversed a large number of times. We replaced the use of sr_list_t with sr_btree_t for improved search times.
For the btree comparison function, we compared the pointer values instead of the module names. Are there any forseeable issues with this approach?
Move the module-in-context check
Previously, dm_apply_persist_data_for_model would check to see if a model was in the target context before attempting to load the persist data. However, before dm_apply_persist_data_for_model is called, dm_apply_persist_data_for_model_imports already tried to process all of the model's imports. We moved the check into dm_apply_persist_data_for_model_imports so the imported models are only processed if the current model is in the target context.
Add a completed_deps list
The dm_apply_persist_data_for_model_imports function has one recursive call that is not blocked by a check on the loaded_deps list. We believe that this is the correct behavior. However, this introduces a way for a single model to be processed by this function many times. To fix this, we added a completed_deps list. When the persist data of a model and all of its imported models are completely loaded, the model is added to the completed_deps list. If dm_apply_persist_data_for_model_imports is called on a model that is already in completed_deps, we can safely assume that all of the required persist data has already been loaded and exit the function immediately.
Test case
All current tests pass. No new functionality added.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1201,2018-07-02T21:34:41Z,2018-07-03T12:55:18Z,2018-07-03T12:55:18Z,MERGED,True,101,59,3,https://github.com/bhart3,Improve search times for interconnected yang models.,1,[],https://github.com/sysrepo/sysrepo/pull/1201,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1201#issuecomment-402146744,"Description
When running the sysrepo with a large number of interconnected yang models, we have recently noticed a substantial slowdown during the dm_load_module process. We would like to propose the following changes:
Change the use of sr_list_t to sr_btree_t
With a large number of installed models and dependencies, the loaded_deps list must be traversed a large number of times. We replaced the use of sr_list_t with sr_btree_t for improved search times.
For the btree comparison function, we compared the pointer values instead of the module names. Are there any forseeable issues with this approach?
Move the module-in-context check
Previously, dm_apply_persist_data_for_model would check to see if a model was in the target context before attempting to load the persist data. However, before dm_apply_persist_data_for_model is called, dm_apply_persist_data_for_model_imports already tried to process all of the model's imports. We moved the check into dm_apply_persist_data_for_model_imports so the imported models are only processed if the current model is in the target context.
Add a completed_deps list
The dm_apply_persist_data_for_model_imports function has one recursive call that is not blocked by a check on the loaded_deps list. We believe that this is the correct behavior. However, this introduces a way for a single model to be processed by this function many times. To fix this, we added a completed_deps list. When the persist data of a model and all of its imported models are completely loaded, the model is added to the completed_deps list. If dm_apply_persist_data_for_model_imports is called on a model that is already in completed_deps, we can safely assume that all of the required persist data has already been loaded and exit the function immediately.
Test case
All current tests pass. No new functionality added.","Hi,
it seems you are right and the patch is clean enough, so no problem, merging. Thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1203,2018-07-03T09:36:01Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,10,0,1,https://github.com/rjarry,[RFC] access-control: disable identity change when nacm is enabled (DO NOT MERGE),1,[],https://github.com/sysrepo/sysrepo/pull/1203,https://github.com/rjarry,1,https://github.com/sysrepo/sysrepo/pull/1203,"DISCLAIMER: THIS IS NOT A PROPER FIX BUT MORE OF A WORKAROUND.
I propose this patch as a starting point to base the discussion on.
Sysrepo has two different mechanisms to manage what user may access which data:

""access control"": based on UNIX file system permissions. The user which is identified by sysrepo must have read (and/or write) permissions to the files in /etc/sysrepo/data. This is suitable for local access via the sysrepocfg tool but not quite for remote NETCONF access (where there might not even be a corresponding UNIX user).
""nacm"": based on RFC 8341, it is implemented by sysrepo and uses the ietf-netconf-acm YANG module as configuration data. It allows more fine grained control over what parts of the configuration a user has access to (read/write/execute).

NACM is disabled by default and must be enabled at compile time. Surprisingly, enabling NACM does not disable the file system permissions based ""access control"".
When relying on NACM for access control and sysrepo is a backend for Netopeer2, if the NETCONF user does not have UNIX permissions to modify the files under /etc/sysrepo/data, he/she cannot modify parts of the configuration (even though the NACM rules says he/she can). Here is an example:
root@localhost:/home/admin# id -a admin
uid=10002(admin) gid=10002(admin) groups=10002(admin)
root@localhost:/home/admin# ls -l /etc/sysrepo/data/ietf-netconf-acm*
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.persist
-rw-r--r-- 1 root root 438 Jul  3 10:51 /etc/sysrepo/data/ietf-netconf-acm.running
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.running.lock
-rw-r--r-- 1 root root 438 Jul  3 10:50 /etc/sysrepo/data/ietf-netconf-acm.startup
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.startup.lock
root@localhost:~# sysrepocfg -x - -f xml ietf-netconf-acm
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
</nacm>
root@localhost:~# cat > /tmp/test.xml
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>janitor</user-name>
    </group>
  </groups>
</nacm>
^D
root@localhost:~# cd /home/admin
root@localhost:/home/admin# sudo -u admin netopeer2-cli 
> connect --ssh 
Interactive SSH Authentication
Type your password:
Password: 
nc ERROR: Session 2: unexpected data in reply to a yang-library <get> RPC.
ly ERROR: Module ""ietf-netconf-acm"" parsing failed.
ly ERROR: Module ""ietf-netconf-acm@2018-02-14"" in another revision ""2012-02-22"" already implemented.
ly ERROR: Invalid arguments (lys_features_change()).
> get 
DATA
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
  <denied-operations>0</denied-operations>
  <denied-data-writes>0</denied-data-writes>
  <denied-notifications>0</denied-notifications>
</nacm>
....
> edit-config --defop merge --config=/tmp/test.xml --target running
ERROR
        type:     protocol
        tag:      access-denied
        severity: error
        path:     /ietf-netconf-acm:nacm/groups/group[name='admin']
        message:  Access to the requested protocol operation or data model is denied because authorization failed.

        type:     application
        tag:      operation-failed
        severity: error
        message:  Operation not authorized
>  ^D
root@localhost:/home/admin# journalctl | tail
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Access control check failed for xpath '/ietf-netconf-acm:nacm/groups/group[name='admin']'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Set item failed for '/ietf-netconf-acm:nacm/groups/group[name='admin']', session id=1930371751.
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Insufficient permissions to lock the file '/etc/sysrepo/data/ietf-netconf-acm.running.lock'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Module ietf-netconf-acm can not be locked
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Loading of modified models failed

Giving filesystem write access to every user that need to modify part of the configuration is redundant with adding access rules in ietf-netconf-acm. Also, it allows a coarser grained access control and it may not be desirable for security reasons.
Disable identity switch for file system checks so that they always succeed when NACM is enabled at compile time.
A proper way to do it would be to disable the identity switch only when the user is connected via NETCONF and that NACM is enabled (and enforced). However, this involves changing the API of multiple functions in access_control.h and I don't know the code well enough to do that without breaking everything.","DISCLAIMER: THIS IS NOT A PROPER FIX BUT MORE OF A WORKAROUND.
I propose this patch as a starting point to base the discussion on.
Sysrepo has two different mechanisms to manage what user may access which data:

""access control"": based on UNIX file system permissions. The user which is identified by sysrepo must have read (and/or write) permissions to the files in /etc/sysrepo/data. This is suitable for local access via the sysrepocfg tool but not quite for remote NETCONF access (where there might not even be a corresponding UNIX user).
""nacm"": based on RFC 8341, it is implemented by sysrepo and uses the ietf-netconf-acm YANG module as configuration data. It allows more fine grained control over what parts of the configuration a user has access to (read/write/execute).

NACM is disabled by default and must be enabled at compile time. Surprisingly, enabling NACM does not disable the file system permissions based ""access control"".
When relying on NACM for access control and sysrepo is a backend for Netopeer2, if the NETCONF user does not have UNIX permissions to modify the files under /etc/sysrepo/data, he/she cannot modify parts of the configuration (even though the NACM rules says he/she can). Here is an example:
root@localhost:/home/admin# id -a admin
uid=10002(admin) gid=10002(admin) groups=10002(admin)
root@localhost:/home/admin# ls -l /etc/sysrepo/data/ietf-netconf-acm*
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.persist
-rw-r--r-- 1 root root 438 Jul  3 10:51 /etc/sysrepo/data/ietf-netconf-acm.running
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.running.lock
-rw-r--r-- 1 root root 438 Jul  3 10:50 /etc/sysrepo/data/ietf-netconf-acm.startup
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.startup.lock
root@localhost:~# sysrepocfg -x - -f xml ietf-netconf-acm
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
</nacm>
root@localhost:~# cat > /tmp/test.xml
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>janitor</user-name>
    </group>
  </groups>
</nacm>
^D
root@localhost:~# cd /home/admin
root@localhost:/home/admin# sudo -u admin netopeer2-cli 
> connect --ssh 
Interactive SSH Authentication
Type your password:
Password: 
nc ERROR: Session 2: unexpected data in reply to a yang-library <get> RPC.
ly ERROR: Module ""ietf-netconf-acm"" parsing failed.
ly ERROR: Module ""ietf-netconf-acm@2018-02-14"" in another revision ""2012-02-22"" already implemented.
ly ERROR: Invalid arguments (lys_features_change()).
> get 
DATA
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
  <denied-operations>0</denied-operations>
  <denied-data-writes>0</denied-data-writes>
  <denied-notifications>0</denied-notifications>
</nacm>
....
> edit-config --defop merge --config=/tmp/test.xml --target running
ERROR
        type:     protocol
        tag:      access-denied
        severity: error
        path:     /ietf-netconf-acm:nacm/groups/group[name='admin']
        message:  Access to the requested protocol operation or data model is denied because authorization failed.

        type:     application
        tag:      operation-failed
        severity: error
        message:  Operation not authorized
>  ^D
root@localhost:/home/admin# journalctl | tail
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Access control check failed for xpath '/ietf-netconf-acm:nacm/groups/group[name='admin']'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Set item failed for '/ietf-netconf-acm:nacm/groups/group[name='admin']', session id=1930371751.
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Insufficient permissions to lock the file '/etc/sysrepo/data/ietf-netconf-acm.running.lock'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Module ietf-netconf-acm can not be locked
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Loading of modified models failed

Giving filesystem write access to every user that need to modify part of the configuration is redundant with adding access rules in ietf-netconf-acm. Also, it allows a coarser grained access control and it may not be desirable for security reasons.
Disable identity switch for file system checks so that they always succeed when NACM is enabled at compile time.
A proper way to do it would be to disable the identity switch only when the user is connected via NETCONF and that NACM is enabled (and enforced). However, this involves changing the API of multiple functions in access_control.h and I don't know the code well enough to do that without breaking everything.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1203,2018-07-03T09:36:01Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,10,0,1,https://github.com/rjarry,[RFC] access-control: disable identity change when nacm is enabled (DO NOT MERGE),1,[],https://github.com/sysrepo/sysrepo/pull/1203,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1203#issuecomment-402374973,"DISCLAIMER: THIS IS NOT A PROPER FIX BUT MORE OF A WORKAROUND.
I propose this patch as a starting point to base the discussion on.
Sysrepo has two different mechanisms to manage what user may access which data:

""access control"": based on UNIX file system permissions. The user which is identified by sysrepo must have read (and/or write) permissions to the files in /etc/sysrepo/data. This is suitable for local access via the sysrepocfg tool but not quite for remote NETCONF access (where there might not even be a corresponding UNIX user).
""nacm"": based on RFC 8341, it is implemented by sysrepo and uses the ietf-netconf-acm YANG module as configuration data. It allows more fine grained control over what parts of the configuration a user has access to (read/write/execute).

NACM is disabled by default and must be enabled at compile time. Surprisingly, enabling NACM does not disable the file system permissions based ""access control"".
When relying on NACM for access control and sysrepo is a backend for Netopeer2, if the NETCONF user does not have UNIX permissions to modify the files under /etc/sysrepo/data, he/she cannot modify parts of the configuration (even though the NACM rules says he/she can). Here is an example:
root@localhost:/home/admin# id -a admin
uid=10002(admin) gid=10002(admin) groups=10002(admin)
root@localhost:/home/admin# ls -l /etc/sysrepo/data/ietf-netconf-acm*
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.persist
-rw-r--r-- 1 root root 438 Jul  3 10:51 /etc/sysrepo/data/ietf-netconf-acm.running
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.running.lock
-rw-r--r-- 1 root root 438 Jul  3 10:50 /etc/sysrepo/data/ietf-netconf-acm.startup
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.startup.lock
root@localhost:~# sysrepocfg -x - -f xml ietf-netconf-acm
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
</nacm>
root@localhost:~# cat > /tmp/test.xml
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>janitor</user-name>
    </group>
  </groups>
</nacm>
^D
root@localhost:~# cd /home/admin
root@localhost:/home/admin# sudo -u admin netopeer2-cli 
> connect --ssh 
Interactive SSH Authentication
Type your password:
Password: 
nc ERROR: Session 2: unexpected data in reply to a yang-library <get> RPC.
ly ERROR: Module ""ietf-netconf-acm"" parsing failed.
ly ERROR: Module ""ietf-netconf-acm@2018-02-14"" in another revision ""2012-02-22"" already implemented.
ly ERROR: Invalid arguments (lys_features_change()).
> get 
DATA
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
  <denied-operations>0</denied-operations>
  <denied-data-writes>0</denied-data-writes>
  <denied-notifications>0</denied-notifications>
</nacm>
....
> edit-config --defop merge --config=/tmp/test.xml --target running
ERROR
        type:     protocol
        tag:      access-denied
        severity: error
        path:     /ietf-netconf-acm:nacm/groups/group[name='admin']
        message:  Access to the requested protocol operation or data model is denied because authorization failed.

        type:     application
        tag:      operation-failed
        severity: error
        message:  Operation not authorized
>  ^D
root@localhost:/home/admin# journalctl | tail
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Access control check failed for xpath '/ietf-netconf-acm:nacm/groups/group[name='admin']'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Set item failed for '/ietf-netconf-acm:nacm/groups/group[name='admin']', session id=1930371751.
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Insufficient permissions to lock the file '/etc/sysrepo/data/ietf-netconf-acm.running.lock'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Module ietf-netconf-acm can not be locked
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Loading of modified models failed

Giving filesystem write access to every user that need to modify part of the configuration is redundant with adding access rules in ietf-netconf-acm. Also, it allows a coarser grained access control and it may not be desirable for security reasons.
Disable identity switch for file system checks so that they always succeed when NACM is enabled at compile time.
A proper way to do it would be to disable the identity switch only when the user is connected via NETCONF and that NACM is enabled (and enforced). However, this involves changing the API of multiple functions in access_control.h and I don't know the code well enough to do that without breaking everything.","Hi,
you are right, this is how it works. However, properly fixing this would require more changes. The main problem is that NACM is only an optional feature. Yes, when you are communicating using NETCONF and netopeer2, then it is enforced and is always checked when it should be. But if communicating directly with sysrepo, you are not required to use NACM for your session even if sysrepo is compiled with it. That means you could easily avoid any access control checks.
So, I suggest to leave it as it is for now. If there will be an opportunity to change this in future, we will think about a better solution.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1203,2018-07-03T09:36:01Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,10,0,1,https://github.com/rjarry,[RFC] access-control: disable identity change when nacm is enabled (DO NOT MERGE),1,[],https://github.com/sysrepo/sysrepo/pull/1203,https://github.com/rjarry,3,https://github.com/sysrepo/sysrepo/pull/1203#issuecomment-402415642,"DISCLAIMER: THIS IS NOT A PROPER FIX BUT MORE OF A WORKAROUND.
I propose this patch as a starting point to base the discussion on.
Sysrepo has two different mechanisms to manage what user may access which data:

""access control"": based on UNIX file system permissions. The user which is identified by sysrepo must have read (and/or write) permissions to the files in /etc/sysrepo/data. This is suitable for local access via the sysrepocfg tool but not quite for remote NETCONF access (where there might not even be a corresponding UNIX user).
""nacm"": based on RFC 8341, it is implemented by sysrepo and uses the ietf-netconf-acm YANG module as configuration data. It allows more fine grained control over what parts of the configuration a user has access to (read/write/execute).

NACM is disabled by default and must be enabled at compile time. Surprisingly, enabling NACM does not disable the file system permissions based ""access control"".
When relying on NACM for access control and sysrepo is a backend for Netopeer2, if the NETCONF user does not have UNIX permissions to modify the files under /etc/sysrepo/data, he/she cannot modify parts of the configuration (even though the NACM rules says he/she can). Here is an example:
root@localhost:/home/admin# id -a admin
uid=10002(admin) gid=10002(admin) groups=10002(admin)
root@localhost:/home/admin# ls -l /etc/sysrepo/data/ietf-netconf-acm*
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.persist
-rw-r--r-- 1 root root 438 Jul  3 10:51 /etc/sysrepo/data/ietf-netconf-acm.running
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.running.lock
-rw-r--r-- 1 root root 438 Jul  3 10:50 /etc/sysrepo/data/ietf-netconf-acm.startup
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.startup.lock
root@localhost:~# sysrepocfg -x - -f xml ietf-netconf-acm
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
</nacm>
root@localhost:~# cat > /tmp/test.xml
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>janitor</user-name>
    </group>
  </groups>
</nacm>
^D
root@localhost:~# cd /home/admin
root@localhost:/home/admin# sudo -u admin netopeer2-cli 
> connect --ssh 
Interactive SSH Authentication
Type your password:
Password: 
nc ERROR: Session 2: unexpected data in reply to a yang-library <get> RPC.
ly ERROR: Module ""ietf-netconf-acm"" parsing failed.
ly ERROR: Module ""ietf-netconf-acm@2018-02-14"" in another revision ""2012-02-22"" already implemented.
ly ERROR: Invalid arguments (lys_features_change()).
> get 
DATA
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
  <denied-operations>0</denied-operations>
  <denied-data-writes>0</denied-data-writes>
  <denied-notifications>0</denied-notifications>
</nacm>
....
> edit-config --defop merge --config=/tmp/test.xml --target running
ERROR
        type:     protocol
        tag:      access-denied
        severity: error
        path:     /ietf-netconf-acm:nacm/groups/group[name='admin']
        message:  Access to the requested protocol operation or data model is denied because authorization failed.

        type:     application
        tag:      operation-failed
        severity: error
        message:  Operation not authorized
>  ^D
root@localhost:/home/admin# journalctl | tail
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Access control check failed for xpath '/ietf-netconf-acm:nacm/groups/group[name='admin']'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Set item failed for '/ietf-netconf-acm:nacm/groups/group[name='admin']', session id=1930371751.
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Insufficient permissions to lock the file '/etc/sysrepo/data/ietf-netconf-acm.running.lock'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Module ietf-netconf-acm can not be locked
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Loading of modified models failed

Giving filesystem write access to every user that need to modify part of the configuration is redundant with adding access rules in ietf-netconf-acm. Also, it allows a coarser grained access control and it may not be desirable for security reasons.
Disable identity switch for file system checks so that they always succeed when NACM is enabled at compile time.
A proper way to do it would be to disable the identity switch only when the user is connected via NETCONF and that NACM is enabled (and enforced). However, this involves changing the API of multiple functions in access_control.h and I don't know the code well enough to do that without breaking everything.","Hi @michalvasko
Yes I am aware that this patch opens a big security hole when accessing sysrepo directly via sysrepocfg. I only made it to make sure the culprit was indeed here.
As for coding a proper solution, I tried to disable the identity changes when the request came from a NETCONF session with NACM enabled but the required context is not available in the functions that actually change identity.
Can you confirm that the api in data_manager.h needs to be modified to include more information?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1203,2018-07-03T09:36:01Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,10,0,1,https://github.com/rjarry,[RFC] access-control: disable identity change when nacm is enabled (DO NOT MERGE),1,[],https://github.com/sysrepo/sysrepo/pull/1203,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1203#issuecomment-402419242,"DISCLAIMER: THIS IS NOT A PROPER FIX BUT MORE OF A WORKAROUND.
I propose this patch as a starting point to base the discussion on.
Sysrepo has two different mechanisms to manage what user may access which data:

""access control"": based on UNIX file system permissions. The user which is identified by sysrepo must have read (and/or write) permissions to the files in /etc/sysrepo/data. This is suitable for local access via the sysrepocfg tool but not quite for remote NETCONF access (where there might not even be a corresponding UNIX user).
""nacm"": based on RFC 8341, it is implemented by sysrepo and uses the ietf-netconf-acm YANG module as configuration data. It allows more fine grained control over what parts of the configuration a user has access to (read/write/execute).

NACM is disabled by default and must be enabled at compile time. Surprisingly, enabling NACM does not disable the file system permissions based ""access control"".
When relying on NACM for access control and sysrepo is a backend for Netopeer2, if the NETCONF user does not have UNIX permissions to modify the files under /etc/sysrepo/data, he/she cannot modify parts of the configuration (even though the NACM rules says he/she can). Here is an example:
root@localhost:/home/admin# id -a admin
uid=10002(admin) gid=10002(admin) groups=10002(admin)
root@localhost:/home/admin# ls -l /etc/sysrepo/data/ietf-netconf-acm*
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.persist
-rw-r--r-- 1 root root 438 Jul  3 10:51 /etc/sysrepo/data/ietf-netconf-acm.running
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.running.lock
-rw-r--r-- 1 root root 438 Jul  3 10:50 /etc/sysrepo/data/ietf-netconf-acm.startup
-rw-r--r-- 1 root root   0 Jul  3 10:48 /etc/sysrepo/data/ietf-netconf-acm.startup.lock
root@localhost:~# sysrepocfg -x - -f xml ietf-netconf-acm
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
</nacm>
root@localhost:~# cat > /tmp/test.xml
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>janitor</user-name>
    </group>
  </groups>
</nacm>
^D
root@localhost:~# cd /home/admin
root@localhost:/home/admin# sudo -u admin netopeer2-cli 
> connect --ssh 
Interactive SSH Authentication
Type your password:
Password: 
nc ERROR: Session 2: unexpected data in reply to a yang-library <get> RPC.
ly ERROR: Module ""ietf-netconf-acm"" parsing failed.
ly ERROR: Module ""ietf-netconf-acm@2018-02-14"" in another revision ""2012-02-22"" already implemented.
ly ERROR: Invalid arguments (lys_features_change()).
> get 
DATA
<nacm xmlns=""urn:ietf:params:xml:ns:yang:ietf-netconf-acm"">
  <groups>
    <group>
      <name>admin</name>
      <user-name>admin</user-name>
    </group>
  </groups>
  <rule-list>
    <name>admin</name>
    <group>admin</group>
    <rule>
      <name>allow-all</name>
      <module-name>*</module-name>
      <access-operations>*</access-operations>
      <path>/</path>
      <action>permit</action>
    </rule>
  </rule-list>
  <denied-operations>0</denied-operations>
  <denied-data-writes>0</denied-data-writes>
  <denied-notifications>0</denied-notifications>
</nacm>
....
> edit-config --defop merge --config=/tmp/test.xml --target running
ERROR
        type:     protocol
        tag:      access-denied
        severity: error
        path:     /ietf-netconf-acm:nacm/groups/group[name='admin']
        message:  Access to the requested protocol operation or data model is denied because authorization failed.

        type:     application
        tag:      operation-failed
        severity: error
        message:  Operation not authorized
>  ^D
root@localhost:/home/admin# journalctl | tail
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Access control check failed for xpath '/ietf-netconf-acm:nacm/groups/group[name='admin']'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Set item failed for '/ietf-netconf-acm:nacm/groups/group[name='admin']', session id=1930371751.
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Insufficient permissions to lock the file '/etc/sysrepo/data/ietf-netconf-acm.running.lock'
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Module ietf-netconf-acm can not be locked
Jul 03 11:27:53 localhost sysrepod[13464]: [ERR] Loading of modified models failed

Giving filesystem write access to every user that need to modify part of the configuration is redundant with adding access rules in ietf-netconf-acm. Also, it allows a coarser grained access control and it may not be desirable for security reasons.
Disable identity switch for file system checks so that they always succeed when NACM is enabled at compile time.
A proper way to do it would be to disable the identity switch only when the user is connected via NETCONF and that NACM is enabled (and enforced). However, this involves changing the API of multiple functions in access_control.h and I don't know the code well enough to do that without breaking everything.","Hi,
in that case yes, you would need to somehow learn at proper places whether to use NACM or file access control and as the information is stored in rp_session_t options, you currently cannot.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1209,2018-07-05T09:08:26Z,2018-07-09T08:11:11Z,2018-07-09T08:12:16Z,MERGED,True,4,1,1,https://github.com/rjarry,persistence_manager: only write <enable-running /> for supported subscriptions,1,[],https://github.com/sysrepo/sysrepo/pull/1209,https://github.com/rjarry,1,https://github.com/sysrepo/sysrepo/pull/1209,"When accessing the sysrepo protobuf API without using the client library, it is possible to send a RPC_SUBS message with ->enable_running = true. Sysrepo accepts the subscription and adds it in the persistant-data with a <enable-running /> tag.
This leads to an error when sysrepo tries to read the file again and parse it with libyang:
[ERR] libyang error: When condition ""../type = 'module-change' or ../type = 'subtree-change' or ../type = 'dp-get-items'"" not satisfied.
[ERR] Parsing persist data from file '/etc/sysrepo/data/example.persist' failed: When condition ""../type = 'module-change' or ../type = 'subtree-change' or ../type = 'dp-get-items'"" not satisfied.

Make sure to respect the condition in the yang module.
This fixes the second part of #1208 but the problem with RPCs in yang modules that have no data nodes still remains. I did not find a way to fix it.","When accessing the sysrepo protobuf API without using the client library, it is possible to send a RPC_SUBS message with ->enable_running = true. Sysrepo accepts the subscription and adds it in the persistant-data with a <enable-running /> tag.
This leads to an error when sysrepo tries to read the file again and parse it with libyang:
[ERR] libyang error: When condition ""../type = 'module-change' or ../type = 'subtree-change' or ../type = 'dp-get-items'"" not satisfied.
[ERR] Parsing persist data from file '/etc/sysrepo/data/example.persist' failed: When condition ""../type = 'module-change' or ../type = 'subtree-change' or ../type = 'dp-get-items'"" not satisfied.

Make sure to respect the condition in the yang module.
This fixes the second part of #1208 but the problem with RPCs in yang modules that have no data nodes still remains. I did not find a way to fix it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1209,2018-07-05T09:08:26Z,2018-07-09T08:11:11Z,2018-07-09T08:12:16Z,MERGED,True,4,1,1,https://github.com/rjarry,persistence_manager: only write <enable-running /> for supported subscriptions,1,[],https://github.com/sysrepo/sysrepo/pull/1209,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1209#issuecomment-403396376,"When accessing the sysrepo protobuf API without using the client library, it is possible to send a RPC_SUBS message with ->enable_running = true. Sysrepo accepts the subscription and adds it in the persistant-data with a <enable-running /> tag.
This leads to an error when sysrepo tries to read the file again and parse it with libyang:
[ERR] libyang error: When condition ""../type = 'module-change' or ../type = 'subtree-change' or ../type = 'dp-get-items'"" not satisfied.
[ERR] Parsing persist data from file '/etc/sysrepo/data/example.persist' failed: When condition ""../type = 'module-change' or ../type = 'subtree-change' or ../type = 'dp-get-items'"" not satisfied.

Make sure to respect the condition in the yang module.
This fixes the second part of #1208 but the problem with RPCs in yang modules that have no data nodes still remains. I did not find a way to fix it.","Hi,
you are not supposed to access sysrepo protobuf API directly but always use the client library. Anyway, the patch seems fine, so I can merge it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1209,2018-07-05T09:08:26Z,2018-07-09T08:11:11Z,2018-07-09T08:12:16Z,MERGED,True,4,1,1,https://github.com/rjarry,persistence_manager: only write <enable-running /> for supported subscriptions,1,[],https://github.com/sysrepo/sysrepo/pull/1209,https://github.com/rjarry,3,https://github.com/sysrepo/sysrepo/pull/1209#issuecomment-403396735,"When accessing the sysrepo protobuf API without using the client library, it is possible to send a RPC_SUBS message with ->enable_running = true. Sysrepo accepts the subscription and adds it in the persistant-data with a <enable-running /> tag.
This leads to an error when sysrepo tries to read the file again and parse it with libyang:
[ERR] libyang error: When condition ""../type = 'module-change' or ../type = 'subtree-change' or ../type = 'dp-get-items'"" not satisfied.
[ERR] Parsing persist data from file '/etc/sysrepo/data/example.persist' failed: When condition ""../type = 'module-change' or ../type = 'subtree-change' or ../type = 'dp-get-items'"" not satisfied.

Make sure to respect the condition in the yang module.
This fixes the second part of #1208 but the problem with RPCs in yang modules that have no data nodes still remains. I did not find a way to fix it.",Thanks !,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1210,2018-07-05T20:55:18Z,2018-07-09T11:19:19Z,2018-07-09T11:19:19Z,MERGED,True,128,0,6,https://github.com/aweast,Tests to demonstrate failure when identityref references identity defined in imported model,1,[],https://github.com/sysrepo/sysrepo/pull/1210,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1210,"Description
Similar to #1167.  I believe this is an edge case that we didn't catch in the previous tests.
Test case
Test cases ident_ref_in_installed_module and extended_ident_ref_in_installed_module demonstrate the problem using models, id-ref-main.yang, id-ref-extended-main.yang, id-ref-imported.yang, id-ref-installed.yang.
Closure
Demonstrates an edge case for #1166 that was not caught in #1167","Description
Similar to #1167.  I believe this is an edge case that we didn't catch in the previous tests.
Test case
Test cases ident_ref_in_installed_module and extended_ident_ref_in_installed_module demonstrate the problem using models, id-ref-main.yang, id-ref-extended-main.yang, id-ref-imported.yang, id-ref-installed.yang.
Closure
Demonstrates an edge case for #1166 that was not caught in #1167",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1210,2018-07-05T20:55:18Z,2018-07-09T11:19:19Z,2018-07-09T11:19:19Z,MERGED,True,128,0,6,https://github.com/aweast,Tests to demonstrate failure when identityref references identity defined in imported model,1,[],https://github.com/sysrepo/sysrepo/pull/1210,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1210#issuecomment-403445395,"Description
Similar to #1167.  I believe this is an edge case that we didn't catch in the previous tests.
Test case
Test cases ident_ref_in_installed_module and extended_ident_ref_in_installed_module demonstrate the problem using models, id-ref-main.yang, id-ref-extended-main.yang, id-ref-imported.yang, id-ref-installed.yang.
Closure
Demonstrates an edge case for #1166 that was not caught in #1167","Hi,
it is passing now, thanks for the test.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1211,2018-07-05T21:57:14Z,2018-07-24T06:26:46Z,2018-07-24T06:26:46Z,MERGED,True,96,1,6,https://github.com/aweast,Fixing segfault when adding and deleting list row to running config with NACM enabled,5,[],https://github.com/sysrepo/sysrepo/pull/1211,https://github.com/aweast,1,https://github.com/sysrepo/sysrepo/pull/1211,"Description
When NACM is enabled, creating a row, committing, and deleting a row from a list is causing a segfault.
Test case
add_delete_list_row_with_nacm_test demonstrates the issue which is fixed by the changes in data_manager.c","Description
When NACM is enabled, creating a row, committing, and deleting a row from a list is causing a segfault.
Test case
add_delete_list_row_with_nacm_test demonstrates the issue which is fixed by the changes in data_manager.c",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1211,2018-07-05T21:57:14Z,2018-07-24T06:26:46Z,2018-07-24T06:26:46Z,MERGED,True,96,1,6,https://github.com/aweast,Fixing segfault when adding and deleting list row to running config with NACM enabled,5,[],https://github.com/sysrepo/sysrepo/pull/1211,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1211#issuecomment-403465983,"Description
When NACM is enabled, creating a row, committing, and deleting a row from a list is causing a segfault.
Test case
add_delete_list_row_with_nacm_test demonstrates the issue which is fixed by the changes in data_manager.c","Hi,
right, so did your minor change fix the problem or is the crash still occurring? I experienced no crash so I think it is the former but tests are not passing for some reason (they did pass on my machine).
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1211,2018-07-05T21:57:14Z,2018-07-24T06:26:46Z,2018-07-24T06:26:46Z,MERGED,True,96,1,6,https://github.com/aweast,Fixing segfault when adding and deleting list row to running config with NACM enabled,5,[],https://github.com/sysrepo/sysrepo/pull/1211,https://github.com/aweast,3,https://github.com/sysrepo/sysrepo/pull/1211#issuecomment-405292442,"Description
When NACM is enabled, creating a row, committing, and deleting a row from a list is causing a segfault.
Test case
add_delete_list_row_with_nacm_test demonstrates the issue which is fixed by the changes in data_manager.c","@michalvasko, sorry for not getting back on this as I have been away for a few weeks.  I believe the minor change fixes the problem and it also passes on my machine.  I did see this in the travis CI log:
[DBG] [67340672] (nacm_report_edit_access_denied:1945) User 'travis' was blocked from creating the node '/commit-nacm-segfault:test-list[test-key='test-key']' by NACM.

It looks like the travis user does not have the correct permissions for the test ?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1211,2018-07-05T21:57:14Z,2018-07-24T06:26:46Z,2018-07-24T06:26:46Z,MERGED,True,96,1,6,https://github.com/aweast,Fixing segfault when adding and deleting list row to running config with NACM enabled,5,[],https://github.com/sysrepo/sysrepo/pull/1211,https://github.com/aweast,4,https://github.com/sysrepo/sysrepo/pull/1211#issuecomment-405437444,"Description
When NACM is enabled, creating a row, committing, and deleting a row from a list is causing a segfault.
Test case
add_delete_list_row_with_nacm_test demonstrates the issue which is fixed by the changes in data_manager.c","@michalvasko, with the latest commit, it is much closer.  4/5 Travis CI jobs pass; however, one still fails with a unique error which I have not seen before:
[ERR] [139826197333824] (srctl_ly_log_cb:506) libyang: Unable to use search directory ""/tmp/sysrepo-repository/yang/"" (No such file or directory)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1211,2018-07-05T21:57:14Z,2018-07-24T06:26:46Z,2018-07-24T06:26:46Z,MERGED,True,96,1,6,https://github.com/aweast,Fixing segfault when adding and deleting list row to running config with NACM enabled,5,[],https://github.com/sysrepo/sysrepo/pull/1211,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1211#issuecomment-406971523,"Description
When NACM is enabled, creating a row, committing, and deleting a row from a list is causing a segfault.
Test case
add_delete_list_row_with_nacm_test demonstrates the issue which is fixed by the changes in data_manager.c","Hi,
based on the other tests I would say you should not call neither setup nor teardown, they are global setup and cleanup functions called before and after all the tests. So, I would first try removing setup() call from setup_running_from_candidate() and do not call teardown() after your test.
Regards,
Michal",True,{'THUMBS_UP': ['https://github.com/aweast']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1211,2018-07-05T21:57:14Z,2018-07-24T06:26:46Z,2018-07-24T06:26:46Z,MERGED,True,96,1,6,https://github.com/aweast,Fixing segfault when adding and deleting list row to running config with NACM enabled,5,[],https://github.com/sysrepo/sysrepo/pull/1211,https://github.com/aweast,6,https://github.com/sysrepo/sysrepo/pull/1211#issuecomment-407107160,"Description
When NACM is enabled, creating a row, committing, and deleting a row from a list is causing a segfault.
Test case
add_delete_list_row_with_nacm_test demonstrates the issue which is fixed by the changes in data_manager.c","@michalvasko, thank you for the suggestion.  I believe that did it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1211,2018-07-05T21:57:14Z,2018-07-24T06:26:46Z,2018-07-24T06:26:46Z,MERGED,True,96,1,6,https://github.com/aweast,Fixing segfault when adding and deleting list row to running config with NACM enabled,5,[],https://github.com/sysrepo/sysrepo/pull/1211,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/1211#issuecomment-407295470,"Description
When NACM is enabled, creating a row, committing, and deleting a row from a list is causing a segfault.
Test case
add_delete_list_row_with_nacm_test demonstrates the issue which is fixed by the changes in data_manager.c","Hi,
seems fine now, thank you!
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1213,2018-07-06T15:03:03Z,2018-08-22T11:09:03Z,2020-01-15T07:49:37Z,MERGED,True,1,36,1,https://github.com/mislavn,C++: bugfix in exceptions,1,[],https://github.com/sysrepo/sysrepo/pull/1213,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1213,"Description
Bugfix for not thrown C++ exception.
Closure
Fixes #1206","Description
Bugfix for not thrown C++ exception.
Closure
Fixes #1206",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1213,2018-07-06T15:03:03Z,2018-08-22T11:09:03Z,2020-01-15T07:49:37Z,MERGED,True,1,36,1,https://github.com/mislavn,C++: bugfix in exceptions,1,[],https://github.com/sysrepo/sysrepo/pull/1213,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1213#issuecomment-403403365,"Description
Bugfix for not thrown C++ exception.
Closure
Fixes #1206","OK,
I'll keep that on mind from now on.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1216,2018-07-09T10:01:53Z,2018-07-09T10:30:09Z,2018-07-09T10:30:09Z,MERGED,True,53,30,3,https://github.com/michalvasko,Load also identref deps of the inital model,2,[],https://github.com/sysrepo/sysrepo/pull/1216,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1216,"Description
Identityref dependency models were not loaded for the initial model, only for its dependencies.
Closure
Fixes #1166","Description
Identityref dependency models were not loaded for the initial model, only for its dependencies.
Closure
Fixes #1166",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1217,2018-07-09T12:17:16Z,2018-07-09T12:34:40Z,2018-07-09T12:34:40Z,MERGED,True,22,10,1,https://github.com/michalvasko,Proper namespace extraction from identityrefs,1,[],https://github.com/sysrepo/sysrepo/pull/1217,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1217,"Description
Handle identityref predicates with :.
Closure
Refs #1214","Description
Handle identityref predicates with :.
Closure
Refs #1214",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1219,2018-07-09T17:52:38Z,2018-09-21T20:18:25Z,2018-09-21T20:18:25Z,CLOSED,False,0,0,0,https://github.com/kpbarrett,Add Session::set_error(),0,[],https://github.com/sysrepo/sysrepo/pull/1219,https://github.com/kpbarrett,1,https://github.com/sysrepo/sysrepo/pull/1219,"Description
Solves issue #1218","Description
Solves issue #1218",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1223,2018-07-10T08:52:59Z,2018-07-10T08:53:06Z,2018-07-10T08:53:06Z,MERGED,True,6,5,1,https://github.com/michalvasko,Thread note updated,1,[],https://github.com/sysrepo/sysrepo/pull/1223,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1223,"Description
Minor documentation update.","Description
Minor documentation update.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1226,2018-07-11T09:03:14Z,2018-07-11T15:04:16Z,2020-01-15T07:49:52Z,MERGED,True,123,3142,46,https://github.com/mislavn,Swig refactor,3,[],https://github.com/sysrepo/sysrepo/pull/1226,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1226,"Description
Refactored the Python bindings and simplified them, now there is no need for two separate sets of examples and unit tests for Python2 and Python3.
The libsysrepoPython2 and libsysrepoPython3 python modules are renamed to sysrepo.
Test case
Updated the Python unit tests.","Description
Refactored the Python bindings and simplified them, now there is no need for two separate sets of examples and unit tests for Python2 and Python3.
The libsysrepoPython2 and libsysrepoPython3 python modules are renamed to sysrepo.
Test case
Updated the Python unit tests.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1226,2018-07-11T09:03:14Z,2018-07-11T15:04:16Z,2020-01-15T07:49:52Z,MERGED,True,123,3142,46,https://github.com/mislavn,Swig refactor,3,[],https://github.com/sysrepo/sysrepo/pull/1226,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1226#issuecomment-404099276,"Description
Refactored the Python bindings and simplified them, now there is no need for two separate sets of examples and unit tests for Python2 and Python3.
The libsysrepoPython2 and libsysrepoPython3 python modules are renamed to sysrepo.
Test case
Updated the Python unit tests.","@michalvasko I renamed the Python bindings to sysrepo but if you want it can be easily changed to anything at this stage, now is the best time to do that.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1226,2018-07-11T09:03:14Z,2018-07-11T15:04:16Z,2020-01-15T07:49:52Z,MERGED,True,123,3142,46,https://github.com/mislavn,Swig refactor,3,[],https://github.com/sysrepo/sysrepo/pull/1226,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1226#issuecomment-404101088,"Description
Refactored the Python bindings and simplified them, now there is no need for two separate sets of examples and unit tests for Python2 and Python3.
The libsysrepoPython2 and libsysrepoPython3 python modules are renamed to sysrepo.
Test case
Updated the Python unit tests.","Hi Mislav,
sure, it is fine.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1227,2018-07-12T19:01:31Z,2018-07-23T07:41:33Z,2018-07-23T07:41:33Z,MERGED,True,112,32,14,https://github.com/samuel-gauthier,Add request id in data provide items callback,2,[],https://github.com/sysrepo/sysrepo/pull/1227,https://github.com/samuel-gauthier,1,https://github.com/sysrepo/sysrepo/pull/1227,"Description
When a data request is made, sysrepo will ask to a subscriber for each level under the subscription, calling the subscriber's callback once per layer.
There are cases when this is a problem, because we can not be sure if the data is consistent, as it was asked for in several separate requests.
This patch series adds the request_id from the originating get_item request to the sr_dp_get_items_cb prototype. Then, the subscriber can know if his callback is called for one state data request or several by checking the given request id. The subscriber can take the necessary mesure to ensure the data is consistent.
It also changes the way data request message id are calculated. It is now increasing with the global number of messages sent, and is not per session.
Note that those patches breaks the API, as the sr_dp_get_items_cb prototype has a new request id argument.
Test case
A new test has been added, named cl_request_id, part of cl_state_data_test. This test checks that several callbacks called for one request have the same request id, and that another request has another request id.
The sysrepo unit tests are 100% after this patch series, including the new test. I have not made other tests.","Description
When a data request is made, sysrepo will ask to a subscriber for each level under the subscription, calling the subscriber's callback once per layer.
There are cases when this is a problem, because we can not be sure if the data is consistent, as it was asked for in several separate requests.
This patch series adds the request_id from the originating get_item request to the sr_dp_get_items_cb prototype. Then, the subscriber can know if his callback is called for one state data request or several by checking the given request id. The subscriber can take the necessary mesure to ensure the data is consistent.
It also changes the way data request message id are calculated. It is now increasing with the global number of messages sent, and is not per session.
Note that those patches breaks the API, as the sr_dp_get_items_cb prototype has a new request id argument.
Test case
A new test has been added, named cl_request_id, part of cl_state_data_test. This test checks that several callbacks called for one request have the same request id, and that another request has another request id.
The sysrepo unit tests are 100% after this patch series, including the new test. I have not made other tests.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1227,2018-07-12T19:01:31Z,2018-07-23T07:41:33Z,2018-07-23T07:41:33Z,MERGED,True,112,32,14,https://github.com/samuel-gauthier,Add request id in data provide items callback,2,[],https://github.com/sysrepo/sysrepo/pull/1227,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1227#issuecomment-404765150,"Description
When a data request is made, sysrepo will ask to a subscriber for each level under the subscription, calling the subscriber's callback once per layer.
There are cases when this is a problem, because we can not be sure if the data is consistent, as it was asked for in several separate requests.
This patch series adds the request_id from the originating get_item request to the sr_dp_get_items_cb prototype. Then, the subscriber can know if his callback is called for one state data request or several by checking the given request id. The subscriber can take the necessary mesure to ensure the data is consistent.
It also changes the way data request message id are calculated. It is now increasing with the global number of messages sent, and is not per session.
Note that those patches breaks the API, as the sr_dp_get_items_cb prototype has a new request id argument.
Test case
A new test has been added, named cl_request_id, part of cl_state_data_test. This test checks that several callbacks called for one request have the same request id, and that another request has another request id.
The sysrepo unit tests are 100% after this patch series, including the new test. I have not made other tests.","Hi,
seems fine, but you forgot to update `tests/measure_performance.c"" state data callback, that is why the tests failed to compile. Please, fix that and they will hopefully compile and pass, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1227,2018-07-12T19:01:31Z,2018-07-23T07:41:33Z,2018-07-23T07:41:33Z,MERGED,True,112,32,14,https://github.com/samuel-gauthier,Add request id in data provide items callback,2,[],https://github.com/sysrepo/sysrepo/pull/1227,https://github.com/samuel-gauthier,3,https://github.com/sysrepo/sysrepo/pull/1227#issuecomment-405166720,"Description
When a data request is made, sysrepo will ask to a subscriber for each level under the subscription, calling the subscriber's callback once per layer.
There are cases when this is a problem, because we can not be sure if the data is consistent, as it was asked for in several separate requests.
This patch series adds the request_id from the originating get_item request to the sr_dp_get_items_cb prototype. Then, the subscriber can know if his callback is called for one state data request or several by checking the given request id. The subscriber can take the necessary mesure to ensure the data is consistent.
It also changes the way data request message id are calculated. It is now increasing with the global number of messages sent, and is not per session.
Note that those patches breaks the API, as the sr_dp_get_items_cb prototype has a new request id argument.
Test case
A new test has been added, named cl_request_id, part of cl_state_data_test. This test checks that several callbacks called for one request have the same request id, and that another request has another request id.
The sysrepo unit tests are 100% after this patch series, including the new test. I have not made other tests.","Sorry about that, I pushed a fix.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1227,2018-07-12T19:01:31Z,2018-07-23T07:41:33Z,2018-07-23T07:41:33Z,MERGED,True,112,32,14,https://github.com/samuel-gauthier,Add request id in data provide items callback,2,[],https://github.com/sysrepo/sysrepo/pull/1227,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1227#issuecomment-406968609,"Description
When a data request is made, sysrepo will ask to a subscriber for each level under the subscription, calling the subscriber's callback once per layer.
There are cases when this is a problem, because we can not be sure if the data is consistent, as it was asked for in several separate requests.
This patch series adds the request_id from the originating get_item request to the sr_dp_get_items_cb prototype. Then, the subscriber can know if his callback is called for one state data request or several by checking the given request id. The subscriber can take the necessary mesure to ensure the data is consistent.
It also changes the way data request message id are calculated. It is now increasing with the global number of messages sent, and is not per session.
Note that those patches breaks the API, as the sr_dp_get_items_cb prototype has a new request id argument.
Test case
A new test has been added, named cl_request_id, part of cl_state_data_test. This test checks that several callbacks called for one request have the same request id, and that another request has another request id.
The sysrepo unit tests are 100% after this patch series, including the new test. I have not made other tests.","Hi Samuel,
thanks a lot, seems fine now.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1229,2018-07-16T03:08:53Z,2019-12-13T13:44:49Z,2019-12-13T13:44:49Z,CLOSED,False,11,11,1,https://github.com/zjbdamo,unwanted notify to server make server crash!,4065,[],https://github.com/sysrepo/sysrepo/pull/1229,https://github.com/zjbdamo,1,https://github.com/sysrepo/sysrepo/pull/1229,"Description
modify for line 538;  an unused VAR compile warning/err.
modify for line 602~~611; ref to CESNET/netopeer2#294.
when uninstall a mod,server crash!
if mod-b import mod-a and only install mod-b,the mod-a will automatically installed and marked IMPORT by server. when uninstall mod-b. the mod-a is also uninstalled by server.but sysrepo will notify mod-a is uninstalled. so server crash.
Test case
install mod-b.
uninstall mod-b
Closure","Description
modify for line 538;  an unused VAR compile warning/err.
modify for line 602~~611; ref to CESNET/netopeer2#294.
when uninstall a mod,server crash!
if mod-b import mod-a and only install mod-b,the mod-a will automatically installed and marked IMPORT by server. when uninstall mod-b. the mod-a is also uninstalled by server.but sysrepo will notify mod-a is uninstalled. so server crash.
Test case
install mod-b.
uninstall mod-b
Closure",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1236,2018-07-20T11:49:24Z,2018-07-23T08:20:29Z,2018-07-23T08:21:14Z,MERGED,True,6,0,1,https://github.com/rjarry,rpc: forward error details to requestor if any,1,[],https://github.com/sysrepo/sysrepo/pull/1236,https://github.com/rjarry,1,https://github.com/sysrepo/sysrepo/pull/1236,"If there is an error in the RPC response from the provider, register it in the data manager context so that it is written in the response sent to the requestor.","If there is an error in the RPC response from the provider, register it in the data manager context so that it is written in the response sent to the requestor.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1236,2018-07-20T11:49:24Z,2018-07-23T08:20:29Z,2018-07-23T08:21:14Z,MERGED,True,6,0,1,https://github.com/rjarry,rpc: forward error details to requestor if any,1,[],https://github.com/sysrepo/sysrepo/pull/1236,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1236#issuecomment-406978307,"If there is an error in the RPC response from the provider, register it in the data manager context so that it is written in the response sent to the requestor.","Hi,
seems reasonable, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1236,2018-07-20T11:49:24Z,2018-07-23T08:20:29Z,2018-07-23T08:21:14Z,MERGED,True,6,0,1,https://github.com/rjarry,rpc: forward error details to requestor if any,1,[],https://github.com/sysrepo/sysrepo/pull/1236,https://github.com/rjarry,3,https://github.com/sysrepo/sysrepo/pull/1236#issuecomment-406978513,"If there is an error in the RPC response from the provider, register it in the data manager context so that it is written in the response sent to the requestor.",Thanks @michalvasko !,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1238,2018-07-23T08:26:09Z,2018-07-23T08:26:28Z,2018-07-23T08:26:28Z,MERGED,True,15,15,1,https://github.com/michalvasko,Update NACM info in docs,1,[],https://github.com/sysrepo/sysrepo/pull/1238,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1238,"Description
Update obsolete comment about NACM not being implemented.
Closure
Fixes #1237","Description
Update obsolete comment about NACM not being implemented.
Closure
Fixes #1237",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1246,2018-07-26T11:27:01Z,2018-08-02T12:36:01Z,2020-01-15T07:49:34Z,MERGED,True,2,2,1,https://github.com/mislavn,Fix for #1243,1,[],https://github.com/sysrepo/sysrepo/pull/1246,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1246,"Closure
closes #1243","Closure
closes #1243",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1253,2018-08-02T13:36:13Z,2018-08-02T14:07:12Z,2018-08-02T14:07:12Z,MERGED,True,11,11,5,https://github.com/michalvasko,Test XPath fixes,3,[],https://github.com/sysrepo/sysrepo/pull/1253,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1253,"Description
Test XPaths fixed so that they work with empty data trees. Also, strict flag added for loading trusted data.
Closure
Fixes #1251","Description
Test XPaths fixed so that they work with empty data trees. Also, strict flag added for loading trusted data.
Closure
Fixes #1251",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1254,2018-08-02T14:14:05Z,2018-08-03T06:33:21Z,2018-08-03T06:33:21Z,MERGED,True,8,4,1,https://github.com/michalvasko,Accessing NULL pointer,1,[],https://github.com/sysrepo/sysrepo/pull/1254,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1254,"Description
Check for NULL value of sysrepo response.
Closure
Refs #1245","Description
Check for NULL value of sysrepo response.
Closure
Refs #1245",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1258,2018-08-09T07:28:12Z,2018-08-09T08:00:22Z,2018-08-09T08:00:22Z,MERGED,True,6,0,1,https://github.com/michalvasko,Properly ignore default values in sysrepocfg,1,[],https://github.com/sysrepo/sysrepo/pull/1258,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1258,"Description
Certain default values were treated as explicit.
Closure
Fixes CESNET/libyang#567","Description
Certain default values were treated as explicit.
Closure
Fixes CESNET/libyang#567",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1262,2018-08-10T21:31:28Z,2018-08-14T07:35:12Z,2018-08-29T02:00:35Z,MERGED,True,10,3,3,https://github.com/alangefe,Support notifications tied to data nodes,1,[],https://github.com/sysrepo/sysrepo/pull/1262,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1262,"Description
These changes fix a few cases where sysrepo was not processing notifications connected to a data node. (Support for this was added beginning in RFC 7950.)
Summary of changes:


LYS_NOTIF cases were added to sr_copy_node_to_tree_internal() and rp_dt_get_value_from_node(). Previously, these functions were treating this node type as unsupported and returning with an error.


rp_dt_get_values_from_nodes() was modified so that it does not produce a values array with blank entries for skipped nodes (like notifications). Prior to this fix, it was correctly reporting the number of non-blank values in the array via value_cnt, but the array itself would actually be larger due to the blank (skipped) entries.


Test cases
We've written integration tests that demonstrate these types of notifications. This commit, together with CESNET/libnetconf2#70, will allow those failing test cases to pass. (See CI results, lines 7282-7284, or test source code.) These test cases cover several different variations of notifications tied to data nodes.
Closure
Fixes #1261","Description
These changes fix a few cases where sysrepo was not processing notifications connected to a data node. (Support for this was added beginning in RFC 7950.)
Summary of changes:


LYS_NOTIF cases were added to sr_copy_node_to_tree_internal() and rp_dt_get_value_from_node(). Previously, these functions were treating this node type as unsupported and returning with an error.


rp_dt_get_values_from_nodes() was modified so that it does not produce a values array with blank entries for skipped nodes (like notifications). Prior to this fix, it was correctly reporting the number of non-blank values in the array via value_cnt, but the array itself would actually be larger due to the blank (skipped) entries.


Test cases
We've written integration tests that demonstrate these types of notifications. This commit, together with CESNET/libnetconf2#70, will allow those failing test cases to pass. (See CI results, lines 7282-7284, or test source code.) These test cases cover several different variations of notifications tied to data nodes.
Closure
Fixes #1261",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1262,2018-08-10T21:31:28Z,2018-08-14T07:35:12Z,2018-08-29T02:00:35Z,MERGED,True,10,3,3,https://github.com/alangefe,Support notifications tied to data nodes,1,[],https://github.com/sysrepo/sysrepo/pull/1262,https://github.com/alangefe,2,https://github.com/sysrepo/sysrepo/pull/1262#issuecomment-412558962,"Description
These changes fix a few cases where sysrepo was not processing notifications connected to a data node. (Support for this was added beginning in RFC 7950.)
Summary of changes:


LYS_NOTIF cases were added to sr_copy_node_to_tree_internal() and rp_dt_get_value_from_node(). Previously, these functions were treating this node type as unsupported and returning with an error.


rp_dt_get_values_from_nodes() was modified so that it does not produce a values array with blank entries for skipped nodes (like notifications). Prior to this fix, it was correctly reporting the number of non-blank values in the array via value_cnt, but the array itself would actually be larger due to the blank (skipped) entries.


Test cases
We've written integration tests that demonstrate these types of notifications. This commit, together with CESNET/libnetconf2#70, will allow those failing test cases to pass. (See CI results, lines 7282-7284, or test source code.) These test cases cover several different variations of notifications tied to data nodes.
Closure
Fixes #1261","The Travis CI failure doesn't look like it's related to these changes; it is an apt-get failure during the initial setup. If someone with write permissions could restart it, I expect it would pass.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1262,2018-08-10T21:31:28Z,2018-08-14T07:35:12Z,2018-08-29T02:00:35Z,MERGED,True,10,3,3,https://github.com/alangefe,Support notifications tied to data nodes,1,[],https://github.com/sysrepo/sysrepo/pull/1262,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1262#issuecomment-412777732,"Description
These changes fix a few cases where sysrepo was not processing notifications connected to a data node. (Support for this was added beginning in RFC 7950.)
Summary of changes:


LYS_NOTIF cases were added to sr_copy_node_to_tree_internal() and rp_dt_get_value_from_node(). Previously, these functions were treating this node type as unsupported and returning with an error.


rp_dt_get_values_from_nodes() was modified so that it does not produce a values array with blank entries for skipped nodes (like notifications). Prior to this fix, it was correctly reporting the number of non-blank values in the array via value_cnt, but the array itself would actually be larger due to the blank (skipped) entries.


Test cases
We've written integration tests that demonstrate these types of notifications. This commit, together with CESNET/libnetconf2#70, will allow those failing test cases to pass. (See CI results, lines 7282-7284, or test source code.) These test cases cover several different variations of notifications tied to data nodes.
Closure
Fixes #1261","Hi Andrew,
yeah, it seems this was not supported correctly. Thanks, will be merged.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1264,2018-08-15T09:55:28Z,2018-08-15T10:27:33Z,2018-08-15T10:27:37Z,MERGED,True,32,16,7,https://github.com/michalvasko,LYB file format,9,[],https://github.com/sysrepo/sysrepo/pull/1264,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1264,"Description
Sysrepo will now use libyang LYB format to store its data by default. Results in massive performance boost for most operations.","Description
Sysrepo will now use libyang LYB format to store its data by default. Results in massive performance boost for most operations.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1265,2018-08-15T13:41:41Z,2018-08-15T14:00:03Z,2018-08-15T14:00:03Z,MERGED,True,12,5,2,https://github.com/michalvasko,Do not rewrite already enabled module data,2,[],https://github.com/sysrepo/sysrepo/pull/1265,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1265,"Description
Module running data were always rewritten by startup data, now it happens only when the module is enabled.
Closure
Fixes #1259","Description
Module running data were always rewritten by startup data, now it happens only when the module is enabled.
Closure
Fixes #1259",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1266,2018-08-16T22:36:03Z,2018-08-17T06:28:50Z,2018-08-29T02:01:28Z,MERGED,True,113,13,2,https://github.com/alangefe,Validate inverse data dependencies on commit,1,[],https://github.com/sysrepo/sysrepo/pull/1266,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1266,"Description
Whenever a module is changed, any other modules that have data dependencies on that module should also be checked to ensure their data references are still valid.
There is a bit of a performance penalty for doing this, and ideally one would only check the inverse deps if the specific nodes being referenced were changed. That is an optimization that could be done in the future.
Test case
These changes will cause the failing test case test_create_resolved_data_and_removing_referenced_data_is_error in https://github.com/ADTRAN/netopeer2-integration-tests to pass.
Closure
Fixes #1242","Description
Whenever a module is changed, any other modules that have data dependencies on that module should also be checked to ensure their data references are still valid.
There is a bit of a performance penalty for doing this, and ideally one would only check the inverse deps if the specific nodes being referenced were changed. That is an optimization that could be done in the future.
Test case
These changes will cause the failing test case test_create_resolved_data_and_removing_referenced_data_is_error in https://github.com/ADTRAN/netopeer2-integration-tests to pass.
Closure
Fixes #1242",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1266,2018-08-16T22:36:03Z,2018-08-17T06:28:50Z,2018-08-29T02:01:28Z,MERGED,True,113,13,2,https://github.com/alangefe,Validate inverse data dependencies on commit,1,[],https://github.com/sysrepo/sysrepo/pull/1266,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1266#issuecomment-413770763,"Description
Whenever a module is changed, any other modules that have data dependencies on that module should also be checked to ensure their data references are still valid.
There is a bit of a performance penalty for doing this, and ideally one would only check the inverse deps if the specific nodes being referenced were changed. That is an optimization that could be done in the future.
Test case
These changes will cause the failing test case test_create_resolved_data_and_removing_referenced_data_is_error in https://github.com/ADTRAN/netopeer2-integration-tests to pass.
Closure
Fixes #1242","Hi Andrew,
that is how I started my implementation, using the inverted dependencies but quickly run into several problems so I decided to leave it for now. Thank you very much, you have saved me a considerable amount of time!
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1268,2018-08-17T07:43:13Z,2018-08-17T08:13:58Z,2018-08-17T08:13:58Z,MERGED,True,2945,2705,6,https://github.com/michalvasko,Maintenance changes,2,[],https://github.com/sysrepo/sysrepo/pull/1268,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1268,"Description
Some minor warnings fixed an cl_test split into 2 tests.","Description
Some minor warnings fixed an cl_test split into 2 tests.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1269,2018-08-17T09:02:38Z,2018-08-17T09:02:44Z,2018-08-17T09:02:44Z,MERGED,True,1,0,1,https://github.com/michalvasko,Increase stack size output for valgrind,1,[],https://github.com/sysrepo/sysrepo/pull/1269,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1269,"Description
Increase stack size in output of valgrind.","Description
Increase stack size in output of valgrind.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1270,2018-08-20T14:19:03Z,2018-08-21T08:30:47Z,2018-08-21T08:30:47Z,CLOSED,False,1,1,1,https://github.com/rkrejci,CHANGE Getting data according to XPath,1,[],https://github.com/sysrepo/sysrepo/pull/1270,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/1270,"When the given data path cannot be transformed to the schema path,
better return SR_ERR_NOT_FOUND instead of SR_ERR_INVAL_ARG. The data
path string can be invalid, but in most cases it just refers to some
data that are not present, so SR_ERR_NOT_FOUND is expected for such a
situations.
Netopeer server uses XPaths for filterring get operations. RFC is not
explicit about filters selecting non existing schema nodes, but I
believe it should rather ignore the particular filter and just simply do
not provide output data for such a filter. Ignoring SR_ERR_INVAL_ARG
seems like ignoring any possible internal error (e.g. passing invalid
function arguments), so I would prefer to have SR_ERR_NOT_FOUND for
this.
Maybe the patch actually does not cover all the possible cases corresponding to my description. Please let me know about other suitable cases to change or change my patch.","When the given data path cannot be transformed to the schema path,
better return SR_ERR_NOT_FOUND instead of SR_ERR_INVAL_ARG. The data
path string can be invalid, but in most cases it just refers to some
data that are not present, so SR_ERR_NOT_FOUND is expected for such a
situations.
Netopeer server uses XPaths for filterring get operations. RFC is not
explicit about filters selecting non existing schema nodes, but I
believe it should rather ignore the particular filter and just simply do
not provide output data for such a filter. Ignoring SR_ERR_INVAL_ARG
seems like ignoring any possible internal error (e.g. passing invalid
function arguments), so I would prefer to have SR_ERR_NOT_FOUND for
this.
Maybe the patch actually does not cover all the possible cases corresponding to my description. Please let me know about other suitable cases to change or change my patch.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1273,2018-08-21T08:52:38Z,2018-08-21T09:25:27Z,2018-08-21T09:25:27Z,MERGED,True,2,2,2,https://github.com/michalvasko,Use different return value for non-existing schema node,1,[],https://github.com/sysrepo/sysrepo/pull/1273,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1273,"Description
This differentiation is required for netopeer2-server.","Description
This differentiation is required for netopeer2-server.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1276,2018-08-21T17:31:42Z,2018-08-23T07:11:06Z,2018-09-06T09:34:13Z,MERGED,True,18,7,2,https://github.com/jktjkt,Store relative paths in sysrepo-module-dependencies,2,[],https://github.com/sysrepo/sysrepo/pull/1276,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1276,"Cross-compiles typically build sysrepo twice -- once for the host system (the machien doing the build), and once for the target (the machine which will run sysrepod in the end). The host build often runs with the repository location set to something like ${TARGET}/etc/sysrepo where ${TARGET} is a directory which will become the target's root filesystem.
Sysrepo creates one private data file which contains absolute paths to YANG schemas of all known modules. If we therefore use host's binaries to manage the target's upcoming repository, sysrepo stores host's paths in there. This makes sysrepod explode on target later on.
Previously, with the XML backend, I used to simply sed away the host's paths at image creation time. That way I could always use host's tools prior to finishing the image, and then execute a simple fixup just prior to deploying the image on the target. This no longer works when using the LYB serialization which is a new default.
This patch ensures that the paths stored in the repository are relative to the schema search dir. They are still being converted to an absolute path right after reading so that the rest of the code doesn't have to change.
The actual code cannot use asprintf because the existing code doesn't define neither _BSD_SOURCE nor _GNU_SOURCE and I'm too afraid to add that.
Fixes: #1274","Cross-compiles typically build sysrepo twice -- once for the host system (the machien doing the build), and once for the target (the machine which will run sysrepod in the end). The host build often runs with the repository location set to something like ${TARGET}/etc/sysrepo where ${TARGET} is a directory which will become the target's root filesystem.
Sysrepo creates one private data file which contains absolute paths to YANG schemas of all known modules. If we therefore use host's binaries to manage the target's upcoming repository, sysrepo stores host's paths in there. This makes sysrepod explode on target later on.
Previously, with the XML backend, I used to simply sed away the host's paths at image creation time. That way I could always use host's tools prior to finishing the image, and then execute a simple fixup just prior to deploying the image on the target. This no longer works when using the LYB serialization which is a new default.
This patch ensures that the paths stored in the repository are relative to the schema search dir. They are still being converted to an absolute path right after reading so that the rest of the code doesn't have to change.
The actual code cannot use asprintf because the existing code doesn't define neither _BSD_SOURCE nor _GNU_SOURCE and I'm too afraid to add that.
Fixes: #1274",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1276,2018-08-21T17:31:42Z,2018-08-23T07:11:06Z,2018-09-06T09:34:13Z,MERGED,True,18,7,2,https://github.com/jktjkt,Store relative paths in sysrepo-module-dependencies,2,[],https://github.com/sysrepo/sysrepo/pull/1276,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1276#issuecomment-414998978,"Cross-compiles typically build sysrepo twice -- once for the host system (the machien doing the build), and once for the target (the machine which will run sysrepod in the end). The host build often runs with the repository location set to something like ${TARGET}/etc/sysrepo where ${TARGET} is a directory which will become the target's root filesystem.
Sysrepo creates one private data file which contains absolute paths to YANG schemas of all known modules. If we therefore use host's binaries to manage the target's upcoming repository, sysrepo stores host's paths in there. This makes sysrepod explode on target later on.
Previously, with the XML backend, I used to simply sed away the host's paths at image creation time. That way I could always use host's tools prior to finishing the image, and then execute a simple fixup just prior to deploying the image on the target. This no longer works when using the LYB serialization which is a new default.
This patch ensures that the paths stored in the repository are relative to the schema search dir. They are still being converted to an absolute path right after reading so that the rest of the code doesn't have to change.
The actual code cannot use asprintf because the existing code doesn't define neither _BSD_SOURCE nor _GNU_SOURCE and I'm too afraid to add that.
Fixes: #1274","Hi,
I see your point and have nothing against this change. You can even use asprintf as sysrepo is compiled with --std=gnu11 so adding _GNU_SOURCE should cause no problems. However, it seems there is a problem when using non-default repository path, can you fix it or I should take a look?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1276,2018-08-21T17:31:42Z,2018-08-23T07:11:06Z,2018-09-06T09:34:13Z,MERGED,True,18,7,2,https://github.com/jktjkt,Store relative paths in sysrepo-module-dependencies,2,[],https://github.com/sysrepo/sysrepo/pull/1276,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1276#issuecomment-415018872,"Cross-compiles typically build sysrepo twice -- once for the host system (the machien doing the build), and once for the target (the machine which will run sysrepod in the end). The host build often runs with the repository location set to something like ${TARGET}/etc/sysrepo where ${TARGET} is a directory which will become the target's root filesystem.
Sysrepo creates one private data file which contains absolute paths to YANG schemas of all known modules. If we therefore use host's binaries to manage the target's upcoming repository, sysrepo stores host's paths in there. This makes sysrepod explode on target later on.
Previously, with the XML backend, I used to simply sed away the host's paths at image creation time. That way I could always use host's tools prior to finishing the image, and then execute a simple fixup just prior to deploying the image on the target. This no longer works when using the LYB serialization which is a new default.
This patch ensures that the paths stored in the repository are relative to the schema search dir. They are still being converted to an absolute path right after reading so that the rest of the code doesn't have to change.
The actual code cannot use asprintf because the existing code doesn't define neither _BSD_SOURCE nor _GNU_SOURCE and I'm too afraid to add that.
Fixes: #1274","I would appreciate if you take a look at it. Re asprintf, I know that the build complained about an implicit declaration of this function even though I included a correct header. I think that there are some implications and maybe even behavior changes when one adds a _GNU_SOURCE, so that's something that I do not want to do. I am not sure whether it affects portability to other C standard libraries.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1276,2018-08-21T17:31:42Z,2018-08-23T07:11:06Z,2018-09-06T09:34:13Z,MERGED,True,18,7,2,https://github.com/jktjkt,Store relative paths in sysrepo-module-dependencies,2,[],https://github.com/sysrepo/sysrepo/pull/1276,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1276#issuecomment-415315146,"Cross-compiles typically build sysrepo twice -- once for the host system (the machien doing the build), and once for the target (the machine which will run sysrepod in the end). The host build often runs with the repository location set to something like ${TARGET}/etc/sysrepo where ${TARGET} is a directory which will become the target's root filesystem.
Sysrepo creates one private data file which contains absolute paths to YANG schemas of all known modules. If we therefore use host's binaries to manage the target's upcoming repository, sysrepo stores host's paths in there. This makes sysrepod explode on target later on.
Previously, with the XML backend, I used to simply sed away the host's paths at image creation time. That way I could always use host's tools prior to finishing the image, and then execute a simple fixup just prior to deploying the image on the target. This no longer works when using the LYB serialization which is a new default.
This patch ensures that the paths stored in the repository are relative to the schema search dir. They are still being converted to an absolute path right after reading so that the rest of the code doesn't have to change.
The actual code cannot use asprintf because the existing code doesn't define neither _BSD_SOURCE nor _GNU_SOURCE and I'm too afraid to add that.
Fixes: #1274","Hi,
seems to work now, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1277,2018-08-21T21:16:02Z,2018-08-22T11:12:07Z,2018-08-29T02:00:14Z,MERGED,True,72,1,2,https://github.com/alangefe,Include deviations as extension dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/1277,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1277,"Fixes #1275
A deviation can be thought of essentially as a fancy augment for most purposes. So this patch makes the behavior of deviations consistent with augments for the purposes of dependency resolution.
(Patch and test by @jwwilcox.)","Fixes #1275
A deviation can be thought of essentially as a fancy augment for most purposes. So this patch makes the behavior of deviations consistent with augments for the purposes of dependency resolution.
(Patch and test by @jwwilcox.)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1277,2018-08-21T21:16:02Z,2018-08-22T11:12:07Z,2018-08-29T02:00:14Z,MERGED,True,72,1,2,https://github.com/alangefe,Include deviations as extension dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/1277,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1277#issuecomment-414996952,"Fixes #1275
A deviation can be thought of essentially as a fancy augment for most purposes. So this patch makes the behavior of deviations consistent with augments for the purposes of dependency resolution.
(Patch and test by @jwwilcox.)","Hi,
seems fine to me, thanks for the patch!
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1279,2018-08-23T03:08:25Z,2018-08-24T06:14:58Z,2018-08-29T02:00:59Z,MERGED,True,68,1,5,https://github.com/alangefe,Modify rp_dt_reload_nacm() to wait for request to be processed,2,[],https://github.com/sysrepo/sysrepo/pull/1279,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1279,"Fixes #1278
This commit modifies rp_dt_reload_nacm() to wait until the NACM request has been fully processed before returning.
(Patch by @bhart3.)","Fixes #1278
This commit modifies rp_dt_reload_nacm() to wait until the NACM request has been fully processed before returning.
(Patch by @bhart3.)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1279,2018-08-23T03:08:25Z,2018-08-24T06:14:58Z,2018-08-29T02:00:59Z,MERGED,True,68,1,5,https://github.com/alangefe,Modify rp_dt_reload_nacm() to wait for request to be processed,2,[],https://github.com/sysrepo/sysrepo/pull/1279,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1279#issuecomment-415336295,"Fixes #1278
This commit modifies rp_dt_reload_nacm() to wait until the NACM request has been fully processed before returning.
(Patch by @bhart3.)","Hi,
it seems usleep() cannot be used, so can you please replace it  with nanosleep()? Other than that it seems fine and can be merged, thanks!
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1279,2018-08-23T03:08:25Z,2018-08-24T06:14:58Z,2018-08-29T02:00:59Z,MERGED,True,68,1,5,https://github.com/alangefe,Modify rp_dt_reload_nacm() to wait for request to be processed,2,[],https://github.com/sysrepo/sysrepo/pull/1279,https://github.com/alangefe,3,https://github.com/sysrepo/sysrepo/pull/1279#issuecomment-415459577,"Fixes #1278
This commit modifies rp_dt_reload_nacm() to wait until the NACM request has been fully processed before returning.
(Patch by @bhart3.)","Thanks, Michal. I've replaced usleep() with nanosleep().",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1279,2018-08-23T03:08:25Z,2018-08-24T06:14:58Z,2018-08-29T02:00:59Z,MERGED,True,68,1,5,https://github.com/alangefe,Modify rp_dt_reload_nacm() to wait for request to be processed,2,[],https://github.com/sysrepo/sysrepo/pull/1279,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1279#issuecomment-415662096,"Fixes #1278
This commit modifies rp_dt_reload_nacm() to wait until the NACM request has been fully processed before returning.
(Patch by @bhart3.)","Alright, seems fine to me now and can be merged.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1282,2018-08-30T00:15:50Z,2018-08-30T06:25:01Z,2018-08-31T16:30:42Z,MERGED,True,16,6,1,https://github.com/alangefe,Unlock only if the lock was successful,1,[],https://github.com/sysrepo/sysrepo/pull/1282,https://github.com/alangefe,1,https://github.com/sysrepo/sysrepo/pull/1282,"Fixes #1281
This is the first solution I described in #1281. It modifies np_dst_info_insert() so that it only makes unlock calls if the corresponding lock call actually succeeded. This prevents us from unlocking the lock too many times or from unlocking the lock early.
(There are many other lock / unlock calls in sysrepo that I did not modify to check for a return code. These changes target only the specific scenario in #1281.)","Fixes #1281
This is the first solution I described in #1281. It modifies np_dst_info_insert() so that it only makes unlock calls if the corresponding lock call actually succeeded. This prevents us from unlocking the lock too many times or from unlocking the lock early.
(There are many other lock / unlock calls in sysrepo that I did not modify to check for a return code. These changes target only the specific scenario in #1281.)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1282,2018-08-30T00:15:50Z,2018-08-30T06:25:01Z,2018-08-31T16:30:42Z,MERGED,True,16,6,1,https://github.com/alangefe,Unlock only if the lock was successful,1,[],https://github.com/sysrepo/sysrepo/pull/1282,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1282#issuecomment-417203856,"Fixes #1281
This is the first solution I described in #1281. It modifies np_dst_info_insert() so that it only makes unlock calls if the corresponding lock call actually succeeded. This prevents us from unlocking the lock too many times or from unlocking the lock early.
(There are many other lock / unlock calls in sysrepo that I did not modify to check for a return code. These changes target only the specific scenario in #1281.)","Hi Andrew,
seems fine to me, thanks for the patch.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1285,2018-08-31T15:27:05Z,2018-10-11T13:53:31Z,2018-10-11T13:53:32Z,CLOSED,False,16,16,16,https://github.com/fxdupont,Moved Sysrepo.h to Sysrepo.hpp to avoid conflict with sysrepo.h,1,[],https://github.com/sysrepo/sysrepo/pull/1285,https://github.com/fxdupont,1,https://github.com/sysrepo/sysrepo/pull/1285,"Description
C++ bindings uses a header which does not differ from another (C) file on macOS case insensitive file systems. Cf Issue #1284
Test case
In fact I suggest to use another naming scheme for C++ headers, i.e. to move to the upper case first character to .hpp. Now I did it on the only conflict to keep the change minimal.
Closure
Closes #1284","Description
C++ bindings uses a header which does not differ from another (C) file on macOS case insensitive file systems. Cf Issue #1284
Test case
In fact I suggest to use another naming scheme for C++ headers, i.e. to move to the upper case first character to .hpp. Now I did it on the only conflict to keep the change minimal.
Closure
Closes #1284",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1285,2018-08-31T15:27:05Z,2018-10-11T13:53:31Z,2018-10-11T13:53:32Z,CLOSED,False,16,16,16,https://github.com/fxdupont,Moved Sysrepo.h to Sysrepo.hpp to avoid conflict with sysrepo.h,1,[],https://github.com/sysrepo/sysrepo/pull/1285,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1285#issuecomment-417712515,"Description
C++ bindings uses a header which does not differ from another (C) file on macOS case insensitive file systems. Cf Issue #1284
Test case
In fact I suggest to use another naming scheme for C++ headers, i.e. to move to the upper case first character to .hpp. Now I did it on the only conflict to keep the change minimal.
Closure
Closes #1284","I intended to rename the headers like they are in libyang, I can make a pull request next week which will rename all C++ headers.
Also you need to use the devel branch as base.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1285,2018-08-31T15:27:05Z,2018-10-11T13:53:31Z,2018-10-11T13:53:32Z,CLOSED,False,16,16,16,https://github.com/fxdupont,Moved Sysrepo.h to Sysrepo.hpp to avoid conflict with sysrepo.h,1,[],https://github.com/sysrepo/sysrepo/pull/1285,https://github.com/fxdupont,3,https://github.com/sysrepo/sysrepo/pull/1285#issuecomment-417762347,"Description
C++ bindings uses a header which does not differ from another (C) file on macOS case insensitive file systems. Cf Issue #1284
Test case
In fact I suggest to use another naming scheme for C++ headers, i.e. to move to the upper case first character to .hpp. Now I did it on the only conflict to keep the change minimal.
Closure
Closes #1284","I intended to rename the headers like they are in libyang, I can make a pull request next week which will rename all C++ headers.

=> perfect. Please stall my PR.

Also you need to use the devel branch as base.

=> I tried but it didn't reach the swig stuff. I am attaching cmake and make logs in the case someone knows an easy fix like upgrading my libyang (something I'll try anyway).
logc.txt
log.txt",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1285,2018-08-31T15:27:05Z,2018-10-11T13:53:31Z,2018-10-11T13:53:32Z,CLOSED,False,16,16,16,https://github.com/fxdupont,Moved Sysrepo.h to Sysrepo.hpp to avoid conflict with sysrepo.h,1,[],https://github.com/sysrepo/sysrepo/pull/1285,https://github.com/fxdupont,4,https://github.com/sysrepo/sysrepo/pull/1285#issuecomment-417775128,"Description
C++ bindings uses a header which does not differ from another (C) file on macOS case insensitive file systems. Cf Issue #1284
Test case
In fact I suggest to use another naming scheme for C++ headers, i.e. to move to the upper case first character to .hpp. Now I did it on the only conflict to keep the change minimal.
Closure
Closes #1284",With devel libyang I managed to build devel sysrepo at the exception of lua bindings so if needed I can provide new PRs based on the devel branch (for #1285 and #1287).,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1285,2018-08-31T15:27:05Z,2018-10-11T13:53:31Z,2018-10-11T13:53:32Z,CLOSED,False,16,16,16,https://github.com/fxdupont,Moved Sysrepo.h to Sysrepo.hpp to avoid conflict with sysrepo.h,1,[],https://github.com/sysrepo/sysrepo/pull/1285,https://github.com/fxdupont,5,https://github.com/sysrepo/sysrepo/pull/1285#issuecomment-428964062,"Description
C++ bindings uses a header which does not differ from another (C) file on macOS case insensitive file systems. Cf Issue #1284
Test case
In fact I suggest to use another naming scheme for C++ headers, i.e. to move to the upper case first character to .hpp. Now I did it on the only conflict to keep the change minimal.
Closure
Closes #1284",Addressed in devel branch. Closing.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1287,2018-08-31T15:54:49Z,2018-08-31T20:07:29Z,2018-08-31T20:07:29Z,CLOSED,False,23,31,16,https://github.com/fxdupont,Cpp errors,2,[],https://github.com/sysrepo/sysrepo/pull/1287,https://github.com/fxdupont,1,https://github.com/sysrepo/sysrepo/pull/1287,"Description
Fixed the bugs detailed in #1286
Unfortunately to check it I needed to include the previous (#1285) PR in it.
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires a view.
Closure
Closes #1286","Description
Fixed the bugs detailed in #1286
Unfortunately to check it I needed to include the previous (#1285) PR in it.
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires a view.
Closure
Closes #1286",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1287,2018-08-31T15:54:49Z,2018-08-31T20:07:29Z,2018-08-31T20:07:29Z,CLOSED,False,23,31,16,https://github.com/fxdupont,Cpp errors,2,[],https://github.com/sysrepo/sysrepo/pull/1287,https://github.com/fxdupont,2,https://github.com/sysrepo/sysrepo/pull/1287#issuecomment-417775918,"Description
Fixed the bugs detailed in #1286
Unfortunately to check it I needed to include the previous (#1285) PR in it.
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires a view.
Closure
Closes #1286",Replaced by #1288,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1288,2018-08-31T20:06:43Z,2018-09-12T11:43:32Z,2018-09-12T11:43:32Z,CLOSED,False,5301,6761,133,https://github.com/fxdupont,Cpp errors devel,143,[],https://github.com/sysrepo/sysrepo/pull/1288,https://github.com/fxdupont,1,https://github.com/sysrepo/sysrepo/pull/1288,"Description
Fixes the bugs detailed in #1286 (replace #1287)
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires reading.
Closure
Closes #1286","Description
Fixes the bugs detailed in #1286 (replace #1287)
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires reading.
Closure
Closes #1286",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1288,2018-08-31T20:06:43Z,2018-09-12T11:43:32Z,2018-09-12T11:43:32Z,CLOSED,False,5301,6761,133,https://github.com/fxdupont,Cpp errors devel,143,[],https://github.com/sysrepo/sysrepo/pull/1288,https://github.com/tomaszmrugalski,2,https://github.com/sysrepo/sysrepo/pull/1288#issuecomment-419962520,"Description
Fixes the bugs detailed in #1286 (replace #1287)
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires reading.
Closure
Closes #1286","@fxdupont, are you sure this is PR is created properly? There's a commit with your fix, but also 134 other unrelated commits. Perhaps this commit should be against a different branch?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1288,2018-08-31T20:06:43Z,2018-09-12T11:43:32Z,2018-09-12T11:43:32Z,CLOSED,False,5301,6761,133,https://github.com/fxdupont,Cpp errors devel,143,[],https://github.com/sysrepo/sysrepo/pull/1288,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1288#issuecomment-420161507,"Description
Fixes the bugs detailed in #1286 (replace #1287)
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires reading.
Closure
Closes #1286","Hi,
I think @tomaszmrugalski is right but it applies generally, please do not create pull request to master branch if you do not have to, devel is the right branch.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1288,2018-08-31T20:06:43Z,2018-09-12T11:43:32Z,2018-09-12T11:43:32Z,CLOSED,False,5301,6761,133,https://github.com/fxdupont,Cpp errors devel,143,[],https://github.com/sysrepo/sysrepo/pull/1288,https://github.com/fxdupont,4,https://github.com/sysrepo/sysrepo/pull/1288#issuecomment-420618030,"Description
Fixes the bugs detailed in #1286 (replace #1287)
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires reading.
Closure
Closes #1286",Replaced by #1302,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1290,2018-09-03T13:56:04Z,2018-09-06T12:38:39Z,2018-09-06T12:38:40Z,CLOSED,False,18,10,6,https://github.com/9606,add java package support,1,[],https://github.com/sysrepo/sysrepo/pull/1290,https://github.com/9606,1,https://github.com/sysrepo/sysrepo/pull/1290,"Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
The example and test cases are running correctly.","Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
The example and test cases are running correctly.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1290,2018-09-03T13:56:04Z,2018-09-06T12:38:39Z,2018-09-06T12:38:40Z,CLOSED,False,18,10,6,https://github.com/9606,add java package support,1,[],https://github.com/sysrepo/sysrepo/pull/1290,https://github.com/9606,2,https://github.com/sysrepo/sysrepo/pull/1290#issuecomment-418224321,"Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
The example and test cases are running correctly.","I did not change the C and c++ code, and I saw that the wrong test cases were the original test cases of C language, and I had no problem on my computer.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1293,2018-09-06T01:53:27Z,2018-09-06T12:38:39Z,2018-09-06T14:12:13Z,CLOSED,False,18,10,6,https://github.com/9606,Java package,2,[],https://github.com/sysrepo/sysrepo/pull/1293,https://github.com/9606,1,https://github.com/sysrepo/sysrepo/pull/1293,"Description
Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
Test case
Continue to use the original test cases.","Description
Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
Test case
Continue to use the original test cases.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1293,2018-09-06T01:53:27Z,2018-09-06T12:38:39Z,2018-09-06T14:12:13Z,CLOSED,False,18,10,6,https://github.com/9606,Java package,2,[],https://github.com/sysrepo/sysrepo/pull/1293,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1293#issuecomment-418980708,"Description
Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
Test case
Continue to use the original test cases.","Hi,
seems fine to me.
@mislavn Do you have any problems with this change?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1293,2018-09-06T01:53:27Z,2018-09-06T12:38:39Z,2018-09-06T14:12:13Z,CLOSED,False,18,10,6,https://github.com/9606,Java package,2,[],https://github.com/sysrepo/sysrepo/pull/1293,https://github.com/9606,3,https://github.com/sysrepo/sysrepo/pull/1293#issuecomment-419011767,"Description
Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
Test case
Continue to use the original test cases.","@michalvasko Hello, I have a question why there are so many methods to be ignored in the java_base.i file. What if I just want to use the methods I ignore?
In fact, I need to use this method in the process of using sysrepo:
Val::set(char const *, uint32_t, sr_type_t);
Then I commented out all the %ignores in the java_base.i file, then recompiled and used them, and there was no problem during use.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1293,2018-09-06T01:53:27Z,2018-09-06T12:38:39Z,2018-09-06T14:12:13Z,CLOSED,False,18,10,6,https://github.com/9606,Java package,2,[],https://github.com/sysrepo/sysrepo/pull/1293,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/1293#issuecomment-419077786,"Description
Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
Test case
Continue to use the original test cases.","So the issue is that Java does not support some types like uint16_t and the function constructors get overridden so in Java only Val::set(const char *xpath, int64_t int64_val, sr_type_t type) is available. We still haven't solved the issue of uint64_t in Java, probably will need to use BigInteger or something like that.
void Val::set(const char *xpath, int64_t int64_val, sr_type_t type) {
    if (_val == nullptr) throw_exception(SR_ERR_OPERATION_FAILED);

    int ret = sr_val_set_xpath(_val, xpath);
    if (ret != SR_ERR_OK) throw_exception(ret);

    if (type == SR_UINT64_T) {
        _val->data.uint64_val = (uint64_t) int64_val;
    } else if (type == SR_UINT32_T) {
        _val->data.uint32_val = (uint32_t) int64_val;
    } else if (type == SR_UINT16_T) {
        _val->data.uint16_val = (uint16_t) int64_val;
    } else if (type == SR_UINT8_T) {
        _val->data.uint8_val = (uint8_t) int64_val;
    } else if (type == SR_INT64_T) {
        _val->data.int64_val = (int64_t) int64_val;
    } else if (type == SR_INT32_T) {
        _val->data.int32_val = (int32_t) int64_val;
    } else if (type == SR_INT16_T) {
        _val->data.int16_val = (int16_t) int64_val;
    } else if (type == SR_INT8_T) {
        _val->data.int8_val = (int8_t) int64_val;
    } else {
        throw_exception(SR_ERR_INVAL_ARG);
    }

    _val->type = type;
}",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1293,2018-09-06T01:53:27Z,2018-09-06T12:38:39Z,2018-09-06T14:12:13Z,CLOSED,False,18,10,6,https://github.com/9606,Java package,2,[],https://github.com/sysrepo/sysrepo/pull/1293,https://github.com/9606,5,https://github.com/sysrepo/sysrepo/pull/1293#issuecomment-419107972,"Description
Because most Java applications have packages, it is necessary to add packages to the swig extension of Java.
Test case
Continue to use the original test cases.","@michalvasko uint64_t will be converted to BigInteger  in swig 3.0(http://www.swig.org/Doc3.0/SWIGDocumentation.html):



C/C++ type
Java type
JNI type




unsigned long long const unsigned long long &
java.math.BigInteger
jobject



I will test to see if there is a problem recently.If there is no problem, I will commit again.
The previous two pull requests are a bit confusing, I have closed, the new pull request is at #1294",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/9606,1,https://github.com/sysrepo/sysrepo/pull/1294,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.","Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-419113764,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.","Please can you wait with your pull request, I'm currently making some changes to the C++ bindings, where a ""sysrepo"" namespace will be introduced.
Something similar to CESNET/libyang#586.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/9606,3,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-419156973,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.",OK.Do I need to close this pull request first and then submit it together with uint64_t?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/mislavn,4,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-419364673,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.",You can rebase once my pull request is merged into master.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-419485351,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.",Please wait for the pull request #1295.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/9606,6,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-429696619,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.","@mislavn
Hello, I tested uint64 and uint64 is converted to BigInteger in Java. I add a test case in Oprations.java, it is no problem.
In addition, I fixed a new bug:
When I replay notification, for example, the command is as follows:
<create-subscription xmlns=""urn:ietf:params:xml:ns:netconf:notification:1.0""><startTime>2018-10-14T20:01:42+08:00</startTime></create-subscription>
There is a probability that no real-time message is received after the subscription succeeds. I found netopeer2-server logged :""Skipping the real-time notification since replay has not finished yet.""
The causes of this problem are as follows:
The function cl_sm_event_notif_process modified replaying flag before the function sr_event_notif_replay. However, in theory, cl_sm_event_notif_process should modify the flag after sr_event_notif_replay.Therefore, I added a wait time for function cl_sm_event_notif_process.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/9606,7,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-432527305,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.","@mislavn hello, is there any problem in this pull request?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/mislavn,8,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-432610951,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.","@9606 please can you make sure the Java unit tests are executed with ctest.
To generate unit tests you need to have libcmocka installed and to run Java unit tests use ctest -R java -V.
Please let me know if you encounter any issues, the Java bindings were not maintained for some time.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/9606,9,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-432627245,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.","@9606 please can you make sure the Java unit tests are executed with ctest.
To generate unit tests you need to have libcmocka installed and to run Java unit tests use ctest -R java -V.
Please let me know if you encounter any issues, the Java bindings were not maintained for some time.

@mislavn I am so sorry, ctest has no problem now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/mislavn,10,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-432666357,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.","I have some issues with ctest and SWIG overload warning for uint8_t but I can fix it later.
@michalvasko do you approve the patch 0a540bc.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1294,2018-09-06T13:05:38Z,2018-10-24T14:08:00Z,2018-10-24T14:08:00Z,MERGED,True,57,65,9,https://github.com/9606,add java package support,6,[],https://github.com/sysrepo/sysrepo/pull/1294,https://github.com/michalvasko,11,https://github.com/sysrepo/sysrepo/pull/1294#issuecomment-432669428,"Description
Since most Java applications have packages, it is necessary to add packages to swig java extensions.
Test case
Use the original test cases.","@mislavn The situation it is supposed to fix has not happened to me but I can imagine it could. It is not the best solution but I am fine with it.
Regards,
Michla",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1295,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".","Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-419484809,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".",This PR covers #1285.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,3,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-419492541,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".","@michalvasko I had to update travis to install SWIG 3.0.12, is it ok if I used the swig deb files from libyang in the install script?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-419800120,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".","Hi Mislav,
I do not think that is a good solution. It would be better if you put the DEB packages directly into sysrepo repository so that it is not dependent on libyang.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,5,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-420222560,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".",@michalvasko I moved the DEB packages into sysrepo.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,6,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-420324914,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".","You are right, that's strange. I'll take a closer look in the next day or two.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,7,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-421340174,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".","I add a new example with C++ callbacks based on rpc_example.c and all callbacks work there.
Also when I edited oper_data_example.c to use ""dummy-amp:amplifier"" the callback's didn't get called.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,8,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-421375941,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".","@jktjkt I just tested ""dummy-amp:amplifier"" on the latest devel branch with the oper_data_example.c example and the callback is called there, so the issue is not connected to C++.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,9,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-423981440,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".","@jktjkt  I fixed the issue with ce141bb , please can you verify it.
The issue was that default values were not properly handled with the namespace change, also they made them obsolete, so I removed them.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,10,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-424271462,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".",Python had issues so I still could not use Sysrepo enums but custom ones with 177ce27.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/mislavn,11,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-424656493,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".",@jktjkt please can you verify the PR?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1295,2018-09-07T15:56:30Z,2018-09-26T14:10:47Z,2020-01-15T07:49:47Z,MERGED,True,757,472,36,https://github.com/mislavn,Namespace refactor,7,[],https://github.com/sysrepo/sysrepo/pull/1295,https://github.com/jktjkt,12,https://github.com/sysrepo/sysrepo/pull/1295#issuecomment-424663751,"Description
Add sysrepo namespace to C++, this includes some code in Python and Java bindings,
also the headers are renamed from "".h"" to "".hpp"".","Python had issues so I still could not use Sysrepo enums but custom ones with 177ce27.

Wow, good job and an ugly root cause, thanks for tracking it down! I'll give it a test.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1296,2018-09-07T17:46:14Z,2018-09-12T08:20:23Z,2018-09-12T08:20:23Z,MERGED,True,81,96,8,https://github.com/jktjkt,C++: fix segfaults on std::string(nullptr) and an associated cleanup,3,[],https://github.com/sysrepo/sysrepo/pull/1296,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1296,"The C++ bindings were returning a std::string instance from nullptr which results in a crash. While fixing this I got rid of the S_String typedef which is not needed, and it actively confusing because it suggests that it's a shared pointer. It is not. While at it :), I also removed some extra returns which followed the exception-throwing wrapper, and cleaned some warnings.
Reported-by: @syyyr","The C++ bindings were returning a std::string instance from nullptr which results in a crash. While fixing this I got rid of the S_String typedef which is not needed, and it actively confusing because it suggests that it's a shared pointer. It is not. While at it :), I also removed some extra returns which followed the exception-throwing wrapper, and cleaned some warnings.
Reported-by: @syyyr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1296,2018-09-07T17:46:14Z,2018-09-12T08:20:23Z,2018-09-12T08:20:23Z,MERGED,True,81,96,8,https://github.com/jktjkt,C++: fix segfaults on std::string(nullptr) and an associated cleanup,3,[],https://github.com/sysrepo/sysrepo/pull/1296,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/1296#issuecomment-419842255,"The C++ bindings were returning a std::string instance from nullptr which results in a crash. While fixing this I got rid of the S_String typedef which is not needed, and it actively confusing because it suggests that it's a shared pointer. It is not. While at it :), I also removed some extra returns which followed the exception-throwing wrapper, and cleaned some warnings.
Reported-by: @syyyr","(Trying to kick the CI.) My last push was just a rebase/squash of history, and the CI failure looks like an error to me.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1296,2018-09-07T17:46:14Z,2018-09-12T08:20:23Z,2018-09-12T08:20:23Z,MERGED,True,81,96,8,https://github.com/jktjkt,C++: fix segfaults on std::string(nullptr) and an associated cleanup,3,[],https://github.com/sysrepo/sysrepo/pull/1296,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1296#issuecomment-419859275,"The C++ bindings were returning a std::string instance from nullptr which results in a crash. While fixing this I got rid of the S_String typedef which is not needed, and it actively confusing because it suggests that it's a shared pointer. It is not. While at it :), I also removed some extra returns which followed the exception-throwing wrapper, and cleaned some warnings.
Reported-by: @syyyr","The CI failures look like transient problem in Travis to me, so I'll re-close/re-open this a few more times until the CI run succeeds...",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1296,2018-09-07T17:46:14Z,2018-09-12T08:20:23Z,2018-09-12T08:20:23Z,MERGED,True,81,96,8,https://github.com/jktjkt,C++: fix segfaults on std::string(nullptr) and an associated cleanup,3,[],https://github.com/sysrepo/sysrepo/pull/1296,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/1296#issuecomment-419876885,"The C++ bindings were returning a std::string instance from nullptr which results in a crash. While fixing this I got rid of the S_String typedef which is not needed, and it actively confusing because it suggests that it's a shared pointer. It is not. While at it :), I also removed some extra returns which followed the exception-throwing wrapper, and cleaned some warnings.
Reported-by: @syyyr","The CI now fails on Mac OS X. I suspect that this is probably due to an image update:
Worker information
-hostname: 44321872-21e0-4f63-8b0f-62fd8145b064@5704.wjb-1
-version: v4.1.0 https://github.com/travis-ci/worker/tree/79044bf1de26da3fa88c671bdf04690025ba6107
-instance: be4248ca-3a7c-4b93-bdba-11ca83402b9b travis-ci-macos-10.13-xcode9.4.1-1529955246 (via amqp)
-startup: 1m8.078001224s
+hostname: 0b0909a1-f930-43f9-a059-a9a41e44f4b0@16732.wjb-2
+version: v4.0.1 https://github.com/travis-ci/worker/tree/ca93e0d83dad3533f1048a5e9eb65b37cf92fa59
+instance: b7bbc81c-a2bd-4c49-b21d-b6652a808e83 travis-ci-macos-10.13-xcode9.4.1-1529955246 (via amqp)
+startup: 1m6.970363738s
It's a permission error:
Install the project...
-- Install configuration: """"
CMake Error at cmake_install.cmake:44 (file):
  file cannot create directory: /pkgconfig.  Maybe need administrative
  privileges.
make: *** [install] Error 1
The command ""if [[ ""$TRAVIS_OS_NAME"" == ""osx"" ]]; then sh deploy/travis/install-libs-osx.sh; fi"" failed and exited with 2 during .",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1296,2018-09-07T17:46:14Z,2018-09-12T08:20:23Z,2018-09-12T08:20:23Z,MERGED,True,81,96,8,https://github.com/jktjkt,C++: fix segfaults on std::string(nullptr) and an associated cleanup,3,[],https://github.com/sysrepo/sysrepo/pull/1296,https://github.com/jktjkt,5,https://github.com/sysrepo/sysrepo/pull/1296#issuecomment-420196710,"The C++ bindings were returning a std::string instance from nullptr which results in a crash. While fixing this I got rid of the S_String typedef which is not needed, and it actively confusing because it suggests that it's a shared pointer. It is not. While at it :), I also removed some extra returns which followed the exception-throwing wrapper, and cleaned some warnings.
Reported-by: @syyyr",Kicking the CI now that cmocka is stable again.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1296,2018-09-07T17:46:14Z,2018-09-12T08:20:23Z,2018-09-12T08:20:23Z,MERGED,True,81,96,8,https://github.com/jktjkt,C++: fix segfaults on std::string(nullptr) and an associated cleanup,3,[],https://github.com/sysrepo/sysrepo/pull/1296,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/1296#issuecomment-420530567,"The C++ bindings were returning a std::string instance from nullptr which results in a crash. While fixing this I got rid of the S_String typedef which is not needed, and it actively confusing because it suggests that it's a shared pointer. It is not. While at it :), I also removed some extra returns which followed the exception-throwing wrapper, and cleaned some warnings.
Reported-by: @syyyr","Hi,
tests passed now, so is it ready to be merged?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1296,2018-09-07T17:46:14Z,2018-09-12T08:20:23Z,2018-09-12T08:20:23Z,MERGED,True,81,96,8,https://github.com/jktjkt,C++: fix segfaults on std::string(nullptr) and an associated cleanup,3,[],https://github.com/sysrepo/sysrepo/pull/1296,https://github.com/jktjkt,7,https://github.com/sysrepo/sysrepo/pull/1296#issuecomment-420556656,"The C++ bindings were returning a std::string instance from nullptr which results in a crash. While fixing this I got rid of the S_String typedef which is not needed, and it actively confusing because it suggests that it's a shared pointer. It is not. While at it :), I also removed some extra returns which followed the exception-throwing wrapper, and cleaned some warnings.
Reported-by: @syyyr","Yes please, it's ready.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1298,2018-09-10T20:38:47Z,2018-09-12T06:42:15Z,2018-09-12T06:42:15Z,MERGED,True,4,0,1,https://github.com/jktjkt,sysrepocfg: Fix memleak when editing lists,1,[],https://github.com/sysrepo/sysrepo/pull/1298,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1298,"Here's the trace from ASAN without this patch:
  ERROR: LeakSanitizer: detected memory leaks

  Direct leak of 64 byte(s) in 8 object(s) allocated from:
    #0 0x7fa3c7b01a20 in __interceptor_strdup /var/tmp/portage/sys-devel/gcc-8.1.0-r1/work/gcc-8.1.0/libsanitizer/asan/asan_interceptors.cc:405
    #1 0x7fa3c6dd52a8 in sr_mem_edit_string /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_mem_mgmt.c:526
    #2 0x7fa3c6d4d0dd in sr_libyang_val_str_to_sr_val /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_utils.c:1048
    #3 0x7fa3c6d50227 in sr_libyang_leaf_copy_value /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_utils.c:1198
    #4 0x55c6071e5e0b in srcfg_convert_lydiff_created /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:627
    #5 0x55c6071eaec0 in srcfg_import_datastore /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:892
    #6 0x55c6071eefd8 in srcfg_import_operation /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:1187
    #7 0x55c6071f68bf in main /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:2030
    #8 0x7fa3c35f3c4d in __libc_start_main ../csu/libc-start.c:295","Here's the trace from ASAN without this patch:
  ERROR: LeakSanitizer: detected memory leaks

  Direct leak of 64 byte(s) in 8 object(s) allocated from:
    #0 0x7fa3c7b01a20 in __interceptor_strdup /var/tmp/portage/sys-devel/gcc-8.1.0-r1/work/gcc-8.1.0/libsanitizer/asan/asan_interceptors.cc:405
    #1 0x7fa3c6dd52a8 in sr_mem_edit_string /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_mem_mgmt.c:526
    #2 0x7fa3c6d4d0dd in sr_libyang_val_str_to_sr_val /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_utils.c:1048
    #3 0x7fa3c6d50227 in sr_libyang_leaf_copy_value /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_utils.c:1198
    #4 0x55c6071e5e0b in srcfg_convert_lydiff_created /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:627
    #5 0x55c6071eaec0 in srcfg_import_datastore /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:892
    #6 0x55c6071eefd8 in srcfg_import_operation /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:1187
    #7 0x55c6071f68bf in main /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:2030
    #8 0x7fa3c35f3c4d in __libc_start_main ../csu/libc-start.c:295",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1298,2018-09-10T20:38:47Z,2018-09-12T06:42:15Z,2018-09-12T06:42:15Z,MERGED,True,4,0,1,https://github.com/jktjkt,sysrepocfg: Fix memleak when editing lists,1,[],https://github.com/sysrepo/sysrepo/pull/1298,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/1298#issuecomment-420196597,"Here's the trace from ASAN without this patch:
  ERROR: LeakSanitizer: detected memory leaks

  Direct leak of 64 byte(s) in 8 object(s) allocated from:
    #0 0x7fa3c7b01a20 in __interceptor_strdup /var/tmp/portage/sys-devel/gcc-8.1.0-r1/work/gcc-8.1.0/libsanitizer/asan/asan_interceptors.cc:405
    #1 0x7fa3c6dd52a8 in sr_mem_edit_string /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_mem_mgmt.c:526
    #2 0x7fa3c6d4d0dd in sr_libyang_val_str_to_sr_val /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_utils.c:1048
    #3 0x7fa3c6d50227 in sr_libyang_leaf_copy_value /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/common/sr_utils.c:1198
    #4 0x55c6071e5e0b in srcfg_convert_lydiff_created /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:627
    #5 0x55c6071eaec0 in srcfg_import_datastore /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:892
    #6 0x55c6071eefd8 in srcfg_import_operation /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:1187
    #7 0x55c6071f68bf in main /home/jkt/work/cesnet/gerrit/CzechLight/cla-sysrepo/submodules/sysrepo/src/executables/sysrepocfg.c:2030
    #8 0x7fa3c35f3c4d in __libc_start_main ../csu/libc-start.c:295",Kicking the CI now that cmocka is stable again.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1299,2018-09-10T23:51:40Z,2018-09-11T08:45:30Z,2018-09-11T08:45:30Z,CLOSED,False,14,4,3,https://github.com/jktjkt,DO NOT MERGE: Travis: see if my patch to cmocka fixes the CI failures,2,[],https://github.com/sysrepo/sysrepo/pull/1299,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1299,"A real fix would be to depends on a cmocka release of course, but this is handy to have stuff CI-checked. Sorry for noise.","A real fix would be to depends on a cmocka release of course, but this is handy to have stuff CI-checked. Sorry for noise.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1299,2018-09-10T23:51:40Z,2018-09-11T08:45:30Z,2018-09-11T08:45:30Z,CLOSED,False,14,4,3,https://github.com/jktjkt,DO NOT MERGE: Travis: see if my patch to cmocka fixes the CI failures,2,[],https://github.com/sysrepo/sysrepo/pull/1299,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1299#issuecomment-420162511,"A real fix would be to depends on a cmocka release of course, but this is handy to have stuff CI-checked. Sorry for noise.","Hi,
the tests passed and thank you for looking into it. The patch seems OK to me, but are also the changes in travis install scripts necessary?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1299,2018-09-10T23:51:40Z,2018-09-11T08:45:30Z,2018-09-11T08:45:30Z,CLOSED,False,14,4,3,https://github.com/jktjkt,DO NOT MERGE: Travis: see if my patch to cmocka fixes the CI failures,2,[],https://github.com/sysrepo/sysrepo/pull/1299,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1299#issuecomment-420196460,"A real fix would be to depends on a cmocka release of course, but this is handy to have stuff CI-checked. Sorry for noise.","This was meant just as a test for upstream that this patch fixes the root caus in CMocka. It's been merged into their master.
We might want to switch to a release branch to prevent these annoyances in future.
I'll kick the other pull requests now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1301,2018-09-12T07:37:37Z,2018-09-12T13:22:28Z,2018-09-12T13:22:28Z,CLOSED,False,1,1,1,https://github.com/michalvasko,Use cmocka new library name,1,[],https://github.com/sysrepo/sysrepo/pull/1301,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1301,"Description
Recent cmocka changed it shared library name.","Description
Recent cmocka changed it shared library name.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1302,2018-09-12T11:42:48Z,2018-09-12T13:54:01Z,2018-09-12T13:54:01Z,MERGED,True,7,13,2,https://github.com/fxdupont,Cpp errors devel,3,[],https://github.com/sysrepo/sysrepo/pull/1302,https://github.com/fxdupont,1,https://github.com/sysrepo/sysrepo/pull/1302,"Description
Fixes the bugs detailed in #1286 (replace #1288 after rebasing on last sysrepo/devel branch).
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires reading.
Closure
Closes #1286","Description
Fixes the bugs detailed in #1286 (replace #1288 after rebasing on last sysrepo/devel branch).
Test case
Used in Github kea-yang. Note the first fix in Struct.h only requires reading.
Closure
Closes #1286",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1303,2018-09-12T13:25:31Z,2018-09-12T13:53:51Z,2018-09-12T13:53:51Z,MERGED,True,3,2,1,https://github.com/michalvasko,Use stable cmocka version,2,[],https://github.com/sysrepo/sysrepo/pull/1303,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1303,"Description
Master cmocka was compiled as cmocka_shared.so and could not be find by tests.","Description
Master cmocka was compiled as cmocka_shared.so and could not be find by tests.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1309,2018-09-19T11:05:16Z,2018-09-19T11:05:31Z,2018-09-19T11:05:31Z,MERGED,True,16,13,2,https://github.com/michalvasko,Version bump,2,[],https://github.com/sysrepo/sysrepo/pull/1309,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1309,"Description
Sysrepo version bumped to 0.7.5. Also, a minor fix included.","Description
Sysrepo version bumped to 0.7.5. Also, a minor fix included.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1310,2018-09-19T11:06:39Z,2018-09-19T11:47:35Z,2018-09-19T11:47:35Z,MERGED,True,5320,6776,134,https://github.com/michalvasko,Devel merge for a new release,151,[],https://github.com/sysrepo/sysrepo/pull/1310,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1310,"Description
Devel branch merged into master for sysrepo release 0.7.5.","Description
Devel branch merged into master for sysrepo release 0.7.5.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1311,2018-09-24T15:34:50Z,2018-11-19T07:35:11Z,2018-12-17T19:43:05Z,MERGED,True,10,0,2,https://github.com/kpbarrett,Add Session::set_error(),1,[],https://github.com/sysrepo/sysrepo/pull/1311,https://github.com/kpbarrett,1,https://github.com/sysrepo/sysrepo/pull/1311,"Description
Adds set_error() to Session class for returning validation error details
Test case
It works with Netopeer2. Constructing a test required exposing clientlib internals which involved more hacks than I was comfortable with, so I gave up. I can offer help (on a limited basis) to build out the test infrastructure to enable this, but would need more info about philosophy, etc., plus more experience in general...
Closure
Closes #1218","Description
Adds set_error() to Session class for returning validation error details
Test case
It works with Netopeer2. Constructing a test required exposing clientlib internals which involved more hacks than I was comfortable with, so I gave up. I can offer help (on a limited basis) to build out the test infrastructure to enable this, but would need more info about philosophy, etc., plus more experience in general...
Closure
Closes #1218",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1311,2018-09-24T15:34:50Z,2018-11-19T07:35:11Z,2018-12-17T19:43:05Z,MERGED,True,10,0,2,https://github.com/kpbarrett,Add Session::set_error(),1,[],https://github.com/sysrepo/sysrepo/pull/1311,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1311#issuecomment-424220552,"Description
Adds set_error() to Session class for returning validation error details
Test case
It works with Netopeer2. Constructing a test required exposing clientlib internals which involved more hacks than I was comfortable with, so I gave up. I can offer help (on a limited basis) to build out the test infrastructure to enable this, but would need more info about philosophy, etc., plus more experience in general...
Closure
Closes #1218","Hi,
could you please change the target branch to devel? Thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1311,2018-09-24T15:34:50Z,2018-11-19T07:35:11Z,2018-12-17T19:43:05Z,MERGED,True,10,0,2,https://github.com/kpbarrett,Add Session::set_error(),1,[],https://github.com/sysrepo/sysrepo/pull/1311,https://github.com/kpbarrett,3,https://github.com/sysrepo/sysrepo/pull/1311#issuecomment-439506285,"Description
Adds set_error() to Session class for returning validation error details
Test case
It works with Netopeer2. Constructing a test required exposing clientlib internals which involved more hacks than I was comfortable with, so I gave up. I can offer help (on a limited basis) to build out the test infrastructure to enable this, but would need more info about philosophy, etc., plus more experience in general...
Closure
Closes #1218",I have updated this change and rebased against devel.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1311,2018-09-24T15:34:50Z,2018-11-19T07:35:11Z,2018-12-17T19:43:05Z,MERGED,True,10,0,2,https://github.com/kpbarrett,Add Session::set_error(),1,[],https://github.com/sysrepo/sysrepo/pull/1311,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1311#issuecomment-439797371,"Description
Adds set_error() to Session class for returning validation error details
Test case
It works with Netopeer2. Constructing a test required exposing clientlib internals which involved more hacks than I was comfortable with, so I gave up. I can offer help (on a limited basis) to build out the test infrastructure to enable this, but would need more info about philosophy, etc., plus more experience in general...
Closure
Closes #1218","Hi,
seems fine, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1312,2018-09-26T10:28:44Z,2018-09-26T11:18:10Z,2018-09-26T11:18:10Z,MERGED,True,0,0,0,https://github.com/jktjkt,Merge master into devel,5,[],https://github.com/sysrepo/sysrepo/pull/1312,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1312,"This is a simple merge to un-confuse git so that it knows that the current devel branch is based on tag v0.7.5. Previously, a simple git show --tags origin/devel showed that it was a v0.7.3-283-gb3e5e341.
Alternatively, feel free to perform the merge yourself, @michalvasko .","This is a simple merge to un-confuse git so that it knows that the current devel branch is based on tag v0.7.5. Previously, a simple git show --tags origin/devel showed that it was a v0.7.3-283-gb3e5e341.
Alternatively, feel free to perform the merge yourself, @michalvasko .",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1312,2018-09-26T10:28:44Z,2018-09-26T11:18:10Z,2018-09-26T11:18:10Z,MERGED,True,0,0,0,https://github.com/jktjkt,Merge master into devel,5,[],https://github.com/sysrepo/sysrepo/pull/1312,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1312#issuecomment-424678544,"This is a simple merge to un-confuse git so that it knows that the current devel branch is based on tag v0.7.5. Previously, a simple git show --tags origin/devel showed that it was a v0.7.3-283-gb3e5e341.
Alternatively, feel free to perform the merge yourself, @michalvasko .","Fine, no problem.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1313,2018-09-26T14:43:47Z,2018-09-27T07:50:47Z,2020-01-15T07:49:42Z,MERGED,True,419,27,8,https://github.com/mislavn,add C++/Python documentation,1,[],https://github.com/sysrepo/sysrepo/pull/1313,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1313,"Add doxygen documentation for C++ API.
The pull request is based on CESNET/libyang#565.","Add doxygen documentation for C++ API.
The pull request is based on CESNET/libyang#565.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1320,2018-10-11T13:52:43Z,2018-10-12T08:42:37Z,2018-10-12T08:42:37Z,MERGED,True,9,2,1,https://github.com/fxdupont,Fixed moved operation display,1,[],https://github.com/sysrepo/sysrepo/pull/1320,https://github.com/fxdupont,1,https://github.com/sysrepo/sysrepo/pull/1320,"Description
The cpp_application_changes_example.cpp crashes on a moved operation to the first place of the list by using the old value which is null in this case.
Fix is trivial. I took the occasion to reformat the moved case code in the style of other cases. Note if the term ""first"" is not good enough please replace it by a better one.
Test case
Create a list with int id and string name leaves. Use id as the key and set the by user (vs system) ordering. Create 2 entries: id=1 name=""foo"" and id=2 name=""bar"". Launch cpp_application_changes_example and with sysrepocfg changes the id of the first entry from 1 to 10.
The system will produce some changes: delete the first entry, create a new one with id=10 name=""foo"" and what will cause the crash move the new entry to the first place in the list.
Closure
None.","Description
The cpp_application_changes_example.cpp crashes on a moved operation to the first place of the list by using the old value which is null in this case.
Fix is trivial. I took the occasion to reformat the moved case code in the style of other cases. Note if the term ""first"" is not good enough please replace it by a better one.
Test case
Create a list with int id and string name leaves. Use id as the key and set the by user (vs system) ordering. Create 2 entries: id=1 name=""foo"" and id=2 name=""bar"". Launch cpp_application_changes_example and with sysrepocfg changes the id of the first entry from 1 to 10.
The system will produce some changes: delete the first entry, create a new one with id=10 name=""foo"" and what will cause the crash move the new entry to the first place in the list.
Closure
None.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1320,2018-10-11T13:52:43Z,2018-10-12T08:42:37Z,2018-10-12T08:42:37Z,MERGED,True,9,2,1,https://github.com/fxdupont,Fixed moved operation display,1,[],https://github.com/sysrepo/sysrepo/pull/1320,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1320#issuecomment-429251325,"Description
The cpp_application_changes_example.cpp crashes on a moved operation to the first place of the list by using the old value which is null in this case.
Fix is trivial. I took the occasion to reformat the moved case code in the style of other cases. Note if the term ""first"" is not good enough please replace it by a better one.
Test case
Create a list with int id and string name leaves. Use id as the key and set the by user (vs system) ordering. Create 2 entries: id=1 name=""foo"" and id=2 name=""bar"". Launch cpp_application_changes_example and with sysrepocfg changes the id of the first entry from 1 to 10.
The system will produce some changes: delete the first entry, create a new one with id=10 name=""foo"" and what will cause the crash move the new entry to the first place in the list.
Closure
None.","Hi,
it is just an example, so your fix is fine, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1321,2018-10-12T07:30:11Z,2018-10-12T08:37:28Z,2018-10-12T08:37:28Z,MERGED,True,6,6,3,https://github.com/michalvasko,libyang when handling/flag changed,1,[],https://github.com/sysrepo/sysrepo/pull/1321,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1321,"Description
Changes default when behaviour and when an error is generated on unsatisfied conditions.","Description
Changes default when behaviour and when an error is generated on unsatisfied conditions.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1322,2018-10-17T09:47:00Z,2018-10-17T10:04:41Z,2018-10-17T10:04:41Z,MERGED,True,85,11,7,https://github.com/michalvasko,Convert files if they do not match the expected format,1,[],https://github.com/sysrepo/sysrepo/pull/1322,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1322,"Description
Should make sysrepo update much simpler.","Description
Should make sysrepo update much simpler.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1325,2018-10-17T11:43:24Z,2018-10-17T11:43:33Z,2018-10-17T11:43:33Z,MERGED,True,1,1,1,https://github.com/michalvasko,Write schema lock required even for printing,1,[],https://github.com/sysrepo/sysrepo/pull/1325,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1325,"Description
If there were any deviations, they are un-applied before printing which is an thread-unsafe modification.
Closure
Fixes #1323","Description
If there were any deviations, they are un-applied before printing which is an thread-unsafe modification.
Closure
Fixes #1323",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1326,2018-10-17T11:59:55Z,2018-10-17T12:00:52Z,2018-10-17T12:00:52Z,MERGED,True,1,1,1,https://github.com/michalvasko,Version bump,1,[],https://github.com/sysrepo/sysrepo/pull/1326,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1326,"Description
Bump to master version 0.7.6.","Description
Bump to master version 0.7.6.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1327,2018-10-17T12:00:46Z,2018-10-17T12:18:35Z,2018-10-17T12:18:35Z,MERGED,True,1275,517,45,https://github.com/michalvasko,Devel merge,22,[],https://github.com/sysrepo/sysrepo/pull/1327,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1327,"Description
Merge devel branch changes into master for a new release.","Description
Merge devel branch changes into master for a new release.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1334,2018-10-30T02:42:25Z,2018-10-31T11:10:06Z,2018-10-31T11:10:06Z,MERGED,True,1,1,1,https://github.com/charach,Add newLine at printf,2,[],https://github.com/sysrepo/sysrepo/pull/1334,https://github.com/charach,1,https://github.com/sysrepo/sysrepo/pull/1334,Add '\n' at printf,Add '\n' at printf,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1334,2018-10-30T02:42:25Z,2018-10-31T11:10:06Z,2018-10-31T11:10:06Z,MERGED,True,1,1,1,https://github.com/charach,Add newLine at printf,2,[],https://github.com/sysrepo/sysrepo/pull/1334,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1334#issuecomment-434647668,Add '\n' at printf,"Hi,
I have changed the destination branch to devel and please keep that in mind for any next pull requests. Other than that, it is fine.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1347,2018-11-09T07:30:49Z,2018-11-09T07:43:13Z,2018-11-09T07:43:13Z,CLOSED,False,1,16,2,https://github.com/michalvasko,sysrepocfg get bugfix,2,[],https://github.com/sysrepo/sysrepo/pull/1347,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1347,"Description
Fixes a get command bug in sysrepocfg. Also, gcc7 requirement removed from travis.
Closure
Fixes #1345","Description
Fixes a get command bug in sysrepocfg. Also, gcc7 requirement removed from travis.
Closure
Fixes #1345",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1354,2018-11-14T13:13:39Z,2018-11-15T07:30:05Z,2018-11-15T07:30:05Z,MERGED,True,72,32,14,https://github.com/samuel-gauthier,add originating xpath to sr_dp_get_items_cb,1,[],https://github.com/sysrepo/sysrepo/pull/1354,https://github.com/samuel-gauthier,1,https://github.com/sysrepo/sysrepo/pull/1354,"When a data request is made, sysrepo will ask to a subscriber for each level under the subscription, calling the subscriber's callback once per layer. When a lot of state nodes are present, it can trigger performance problems in the subscriber.
This patch adds the xpath from the originating get_item request to the sr_dp_get_items_cb prototype. Then, the subscriber can know what it has to answer, and can filter beforehand what it should return to sysrepo, lowering the load needed to get the informations, and the number of requests between sysrepo and the subscriber.
Note that those patches breaks the API, as the sr_dp_get_items_cb prototype has a new original_xpath argument.","When a data request is made, sysrepo will ask to a subscriber for each level under the subscription, calling the subscriber's callback once per layer. When a lot of state nodes are present, it can trigger performance problems in the subscriber.
This patch adds the xpath from the originating get_item request to the sr_dp_get_items_cb prototype. Then, the subscriber can know what it has to answer, and can filter beforehand what it should return to sysrepo, lowering the load needed to get the informations, and the number of requests between sysrepo and the subscriber.
Note that those patches breaks the API, as the sr_dp_get_items_cb prototype has a new original_xpath argument.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1354,2018-11-14T13:13:39Z,2018-11-15T07:30:05Z,2018-11-15T07:30:05Z,MERGED,True,72,32,14,https://github.com/samuel-gauthier,add originating xpath to sr_dp_get_items_cb,1,[],https://github.com/sysrepo/sysrepo/pull/1354,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1354#issuecomment-438944184,"When a data request is made, sysrepo will ask to a subscriber for each level under the subscription, calling the subscriber's callback once per layer. When a lot of state nodes are present, it can trigger performance problems in the subscriber.
This patch adds the xpath from the originating get_item request to the sr_dp_get_items_cb prototype. Then, the subscriber can know what it has to answer, and can filter beforehand what it should return to sysrepo, lowering the load needed to get the informations, and the number of requests between sysrepo and the subscriber.
Note that those patches breaks the API, as the sr_dp_get_items_cb prototype has a new original_xpath argument.","Hi,
seems fine, thanks!
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1361,2018-11-20T10:21:19Z,2018-11-20T11:06:28Z,2018-11-20T11:06:28Z,MERGED,True,32,0,2,https://github.com/michalvasko,New uninstall targets,1,[],https://github.com/sysrepo/sysrepo/pull/1361,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1361,"Description
New make targets uninstall and uninstall_with_repo added.
Closure
Fixes #1358","Description
New make targets uninstall and uninstall_with_repo added.
Closure
Fixes #1358",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1367,2018-11-21T12:31:04Z,2018-11-21T12:47:51Z,2018-11-21T12:47:51Z,MERGED,True,1,1,1,https://github.com/michalvasko,Version bump,1,[],https://github.com/sysrepo/sysrepo/pull/1367,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1367,"Description
Bump version for new sysrepo release.","Description
Bump version for new sysrepo release.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1368,2018-11-21T12:32:38Z,2018-11-21T12:51:03Z,2018-11-21T12:51:03Z,MERGED,True,173,99,25,https://github.com/michalvasko,Devel merge,17,[],https://github.com/sysrepo/sysrepo/pull/1368,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1368,"Description
Merge devel changes into master for a new release.","Description
Merge devel changes into master for a new release.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1373,2018-11-30T13:14:20Z,2018-11-30T14:28:25Z,2018-11-30T14:28:25Z,MERGED,True,10,7,2,https://github.com/michalvasko,Remove foreign data before NACM check,2,[],https://github.com/sysrepo/sysrepo/pull/1373,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1373,"Description
If some foreign data (default values) are added during validation, they should be removed before NACM check.
Closure
Fixes #1372","Description
If some foreign data (default values) are added during validation, they should be removed before NACM check.
Closure
Fixes #1372",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1376,2018-12-10T14:37:43Z,2018-12-12T07:31:03Z,2018-12-12T09:05:42Z,MERGED,True,63,17,9,https://github.com/palohan,added compiler attribute __format__ to chekc variadic arguments of pr…,7,[],https://github.com/sysrepo/sysrepo/pull/1376,https://github.com/palohan,1,https://github.com/sysrepo/sysrepo/pull/1376,"…intf-like functions
Signed-off-by: Pavol Hanzel pavol.hanzel@pantheon.tech
Description
Compiler will now check the type of variadic arguments to public printf-like functions.
Making the change as agreed with Michal Vasko.
Test case
No new functionality; This just needs to build properly.","…intf-like functions
Signed-off-by: Pavol Hanzel pavol.hanzel@pantheon.tech
Description
Compiler will now check the type of variadic arguments to public printf-like functions.
Making the change as agreed with Michal Vasko.
Test case
No new functionality; This just needs to build properly.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1376,2018-12-10T14:37:43Z,2018-12-12T07:31:03Z,2018-12-12T09:05:42Z,MERGED,True,63,17,9,https://github.com/palohan,added compiler attribute __format__ to chekc variadic arguments of pr…,7,[],https://github.com/sysrepo/sysrepo/pull/1376,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1376#issuecomment-446111326,"…intf-like functions
Signed-off-by: Pavol Hanzel pavol.hanzel@pantheon.tech
Description
Compiler will now check the type of variadic arguments to public printf-like functions.
Making the change as agreed with Michal Vasko.
Test case
No new functionality; This just needs to build properly.","Hi,
seems fine, just please address the comment and it should be ready for merging, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1376,2018-12-10T14:37:43Z,2018-12-12T07:31:03Z,2018-12-12T09:05:42Z,MERGED,True,63,17,9,https://github.com/palohan,added compiler attribute __format__ to chekc variadic arguments of pr…,7,[],https://github.com/sysrepo/sysrepo/pull/1376,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1376#issuecomment-446489602,"…intf-like functions
Signed-off-by: Pavol Hanzel pavol.hanzel@pantheon.tech
Description
Compiler will now check the type of variadic arguments to public printf-like functions.
Making the change as agreed with Michal Vasko.
Test case
No new functionality; This just needs to build properly.","Alright, now seems OK.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1382,2018-12-13T13:59:57Z,2018-12-14T08:56:47Z,2018-12-14T08:56:47Z,CLOSED,False,6,5,1,https://github.com/frimpler,install common.h i.o. to make them visible for libsysrepo users,1,[],https://github.com/sysrepo/sysrepo/pull/1382,https://github.com/frimpler,1,https://github.com/sysrepo/sysrepo/pull/1382,"Most probably since commit 0034425 (introduction of ""format checking"") it is not possible to build netopeer2-server.
Reason:
The newly introduced and generated file common.h has not been installed and libsysrepo users, like netopeer2-server, fail to include (the correct) common.h. In fact, a ""common.h"" was apparently found, because gcc didn't complain about it, but it didn't contain the definition for ""FORMAT"".
Sysrepo compilation itself is not affected, because common.h has been generated into sysrepo's build directory, too.
Consideration:
I have cared for, that it would be installed in the same manner as other header files for sysrepo. And netopeer2-server compilation is working, again, but the (default) install location ""/usr/include"" and the file name ""common.h"" might quickly become ambiguous. Maybe @palohan, the author, has an opinion about it.","Most probably since commit 0034425 (introduction of ""format checking"") it is not possible to build netopeer2-server.
Reason:
The newly introduced and generated file common.h has not been installed and libsysrepo users, like netopeer2-server, fail to include (the correct) common.h. In fact, a ""common.h"" was apparently found, because gcc didn't complain about it, but it didn't contain the definition for ""FORMAT"".
Sysrepo compilation itself is not affected, because common.h has been generated into sysrepo's build directory, too.
Consideration:
I have cared for, that it would be installed in the same manner as other header files for sysrepo. And netopeer2-server compilation is working, again, but the (default) install location ""/usr/include"" and the file name ""common.h"" might quickly become ambiguous. Maybe @palohan, the author, has an opinion about it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1382,2018-12-13T13:59:57Z,2018-12-14T08:56:47Z,2018-12-14T08:56:47Z,CLOSED,False,6,5,1,https://github.com/frimpler,install common.h i.o. to make them visible for libsysrepo users,1,[],https://github.com/sysrepo/sysrepo/pull/1382,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1382#issuecomment-447000225,"Most probably since commit 0034425 (introduction of ""format checking"") it is not possible to build netopeer2-server.
Reason:
The newly introduced and generated file common.h has not been installed and libsysrepo users, like netopeer2-server, fail to include (the correct) common.h. In fact, a ""common.h"" was apparently found, because gcc didn't complain about it, but it didn't contain the definition for ""FORMAT"".
Sysrepo compilation itself is not affected, because common.h has been generated into sysrepo's build directory, too.
Consideration:
I have cared for, that it would be installed in the same manner as other header files for sysrepo. And netopeer2-server compilation is working, again, but the (default) install location ""/usr/include"" and the file name ""common.h"" might quickly become ambiguous. Maybe @palohan, the author, has an opinion about it.","Hi,
it seems I have not thought through having a public common.h. I would fix it by moving the @ variable directly to sysrepo.h and generate it from sysrepo.h.in so that no additional file is needed. I will implement it tomorrow if none will be against it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1382,2018-12-13T13:59:57Z,2018-12-14T08:56:47Z,2018-12-14T08:56:47Z,CLOSED,False,6,5,1,https://github.com/frimpler,install common.h i.o. to make them visible for libsysrepo users,1,[],https://github.com/sysrepo/sysrepo/pull/1382,https://github.com/frimpler,3,https://github.com/sysrepo/sysrepo/pull/1382#issuecomment-447005394,"Most probably since commit 0034425 (introduction of ""format checking"") it is not possible to build netopeer2-server.
Reason:
The newly introduced and generated file common.h has not been installed and libsysrepo users, like netopeer2-server, fail to include (the correct) common.h. In fact, a ""common.h"" was apparently found, because gcc didn't complain about it, but it didn't contain the definition for ""FORMAT"".
Sysrepo compilation itself is not affected, because common.h has been generated into sysrepo's build directory, too.
Consideration:
I have cared for, that it would be installed in the same manner as other header files for sysrepo. And netopeer2-server compilation is working, again, but the (default) install location ""/usr/include"" and the file name ""common.h"" might quickly become ambiguous. Maybe @palohan, the author, has an opinion about it.","I don't really care, as long as we can compile netopeer2-server w/o issues :-)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1382,2018-12-13T13:59:57Z,2018-12-14T08:56:47Z,2018-12-14T08:56:47Z,CLOSED,False,6,5,1,https://github.com/frimpler,install common.h i.o. to make them visible for libsysrepo users,1,[],https://github.com/sysrepo/sysrepo/pull/1382,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1382#issuecomment-447259302,"Most probably since commit 0034425 (introduction of ""format checking"") it is not possible to build netopeer2-server.
Reason:
The newly introduced and generated file common.h has not been installed and libsysrepo users, like netopeer2-server, fail to include (the correct) common.h. In fact, a ""common.h"" was apparently found, because gcc didn't complain about it, but it didn't contain the definition for ""FORMAT"".
Sysrepo compilation itself is not affected, because common.h has been generated into sysrepo's build directory, too.
Consideration:
I have cared for, that it would be installed in the same manner as other header files for sysrepo. And netopeer2-server compilation is working, again, but the (default) install location ""/usr/include"" and the file name ""common.h"" might quickly become ambiguous. Maybe @palohan, the author, has an opinion about it.","Hi,
it should work fine now.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1384,2018-12-14T08:22:39Z,2018-12-14T08:38:06Z,2018-12-14T08:38:06Z,MERGED,True,25,41,8,https://github.com/michalvasko,Remove public common.h header,1,[],https://github.com/sysrepo/sysrepo/pull/1384,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1384,"Description
It was redundant and could cause some name collisions.
Closure
Fixes #1382","Description
It was redundant and could cause some name collisions.
Closure
Fixes #1382",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1387,2018-12-17T18:23:14Z,2018-12-18T07:40:16Z,2018-12-18T07:40:16Z,MERGED,True,51,0,2,https://github.com/kpbarrett,Copy all ns fix,2,[],https://github.com/sysrepo/sysrepo/pull/1387,https://github.com/kpbarrett,1,https://github.com/sysrepo/sysrepo/pull/1387,"Description
Fix an error in sr_copy_all_ns(), which fails when a list is augmented in another module, and the list key contains a slash character. This causes Netopeer2 to fail to deliver the netconf-config-change notification to clients.
Test case
The PR contains a commit with the failing case followed by the proposed fix. See new test case ""sr_copy_all_ns_test"" in tests/common_test.c.","Description
Fix an error in sr_copy_all_ns(), which fails when a list is augmented in another module, and the list key contains a slash character. This causes Netopeer2 to fail to deliver the netconf-config-change notification to clients.
Test case
The PR contains a commit with the failing case followed by the proposed fix. See new test case ""sr_copy_all_ns_test"" in tests/common_test.c.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1387,2018-12-17T18:23:14Z,2018-12-18T07:40:16Z,2018-12-18T07:40:16Z,MERGED,True,51,0,2,https://github.com/kpbarrett,Copy all ns fix,2,[],https://github.com/sysrepo/sysrepo/pull/1387,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1387#issuecomment-448125486,"Description
Fix an error in sr_copy_all_ns(), which fails when a list is augmented in another module, and the list key contains a slash character. This causes Netopeer2 to fail to deliver the netconf-config-change notification to clients.
Test case
The PR contains a commit with the failing case followed by the proposed fix. See new test case ""sr_copy_all_ns_test"" in tests/common_test.c.","Hi,
seems good, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1388,2018-12-17T19:38:59Z,2018-12-17T20:38:14Z,2018-12-17T20:38:14Z,MERGED,True,1,1,1,https://github.com/kpbarrett,C++: Data::get_uint8() return type fix,1,[],https://github.com/sysrepo/sysrepo/pull/1388,https://github.com/kpbarrett,1,https://github.com/sysrepo/sysrepo/pull/1388,Minor fix: get_uint8() is not accessing the correct field.,Minor fix: get_uint8() is not accessing the correct field.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1389,2018-12-18T10:11:04Z,2018-12-19T07:28:06Z,2020-01-15T07:49:55Z,MERGED,True,299,256,10,https://github.com/mislavn,lua: update bindings,1,[],https://github.com/sysrepo/sysrepo/pull/1389,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1389,"Updated the Lua bindings with the latest changes in the C++ bindings.
Closure
Put closes #1383","Updated the Lua bindings with the latest changes in the C++ bindings.
Closure
Put closes #1383",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1393,2019-01-02T08:30:13Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,135,70,21,https://github.com/wmakuch,Application receive information from which netconf client (session-id) specific rpc has been sent.,1,[],https://github.com/sysrepo/sysrepo/pull/1393,https://github.com/wmakuch,1,https://github.com/sysrepo/sysrepo/pull/1393,"Description
Extended rpc_cb with parameter netconf_id. This value is set in Netopeer2-server. In the case of unknown netconf id, this parameter should be 0.
Test case
Manual tests.
Closure
Netopeer2 #363","Description
Extended rpc_cb with parameter netconf_id. This value is set in Netopeer2-server. In the case of unknown netconf id, this parameter should be 0.
Test case
Manual tests.
Closure
Netopeer2 #363",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1393,2019-01-02T08:30:13Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,135,70,21,https://github.com/wmakuch,Application receive information from which netconf client (session-id) specific rpc has been sent.,1,[],https://github.com/sysrepo/sysrepo/pull/1393,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1393#issuecomment-450893171,"Description
Extended rpc_cb with parameter netconf_id. This value is set in Netopeer2-server. In the case of unknown netconf id, this parameter should be 0.
Test case
Manual tests.
Closure
Netopeer2 #363","Hi,
I did not realize before that you wanted to change the API, is it really necessary? One possible solution would be to store the NETCONF SID in the sysrepo session that is always passed to every callback and add a function to the API for retrieving it. What do you think?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1393,2019-01-02T08:30:13Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,135,70,21,https://github.com/wmakuch,Application receive information from which netconf client (session-id) specific rpc has been sent.,1,[],https://github.com/sysrepo/sysrepo/pull/1393,https://github.com/wmakuch,3,https://github.com/sysrepo/sysrepo/pull/1393#issuecomment-451147326,"Description
Extended rpc_cb with parameter netconf_id. This value is set in Netopeer2-server. In the case of unknown netconf id, this parameter should be 0.
Test case
Manual tests.
Closure
Netopeer2 #363","Hi,
You right. Extending API is not necessary. I prepared new patch with suggested change.
Soon I will open new pull request.
Best Regard,
Wojciech Makuch",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1393,2019-01-02T08:30:13Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,135,70,21,https://github.com/wmakuch,Application receive information from which netconf client (session-id) specific rpc has been sent.,1,[],https://github.com/sysrepo/sysrepo/pull/1393,https://github.com/wmakuch,4,https://github.com/sysrepo/sysrepo/pull/1393#issuecomment-455502289,"Description
Extended rpc_cb with parameter netconf_id. This value is set in Netopeer2-server. In the case of unknown netconf id, this parameter should be 0.
Test case
Manual tests.
Closure
Netopeer2 #363","Hi,
I updated pull request.
After further testing I realised that API must be extended in order to make this feature useful.
Your suggestion was pass sr_session_ctx_t* by private_ctx, but this parameter is set during sr_rpc_subscribe (not during sr_rpc_send), so Netopeer2-server has nothing to do with it. I decided to pass sr_session_ctx_t* directly.
Kindly please take a look at my changes and share your opinion, comments.
PR to Netopper2 repository: CESNET/netopeer2#376
Best Regards,
Wojciech Makuch",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1393,2019-01-02T08:30:13Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,135,70,21,https://github.com/wmakuch,Application receive information from which netconf client (session-id) specific rpc has been sent.,1,[],https://github.com/sysrepo/sysrepo/pull/1393,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1393#issuecomment-455547443,"Description
Extended rpc_cb with parameter netconf_id. This value is set in Netopeer2-server. In the case of unknown netconf id, this parameter should be 0.
Test case
Manual tests.
Closure
Netopeer2 #363","Hi Wojciech,
you are right, this is basically what I had in mind, I just thought a session is passed to all the callbacks. So it generally seems fine except the tests failed for some reason. I am sorry, but it is mostly up to you to fix it, I have no time to spare working on the old sysrepo as I am developing the new one.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1393,2019-01-02T08:30:13Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,135,70,21,https://github.com/wmakuch,Application receive information from which netconf client (session-id) specific rpc has been sent.,1,[],https://github.com/sysrepo/sysrepo/pull/1393,https://github.com/wmakuch,6,https://github.com/sysrepo/sysrepo/pull/1393#issuecomment-458488754,"Description
Extended rpc_cb with parameter netconf_id. This value is set in Netopeer2-server. In the case of unknown netconf id, this parameter should be 0.
Test case
Manual tests.
Closure
Netopeer2 #363","Hi Michal!
I updated pull request. Now CI passed.
Best Regards,
Wojciech Makuch",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1393,2019-01-02T08:30:13Z,2019-07-10T13:09:24Z,2019-07-10T13:09:24Z,CLOSED,False,135,70,21,https://github.com/wmakuch,Application receive information from which netconf client (session-id) specific rpc has been sent.,1,[],https://github.com/sysrepo/sysrepo/pull/1393,https://github.com/wmakuch,7,https://github.com/sysrepo/sysrepo/pull/1393#issuecomment-458913431,"Description
Extended rpc_cb with parameter netconf_id. This value is set in Netopeer2-server. In the case of unknown netconf id, this parameter should be 0.
Test case
Manual tests.
Closure
Netopeer2 #363","Hi,
Thanks for good tips!
Review updated.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1394,2019-01-02T14:30:47Z,2019-01-04T14:59:46Z,2019-01-04T14:59:46Z,MERGED,True,18,4,5,https://github.com/michalvasko,Use atomic variable for thread-shared counter,1,[],https://github.com/sysrepo/sysrepo/pull/1394,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1394,"Description
To prevent read-increase-write integer data races use an atomic variable.
Closure
Fixes #1392","Description
To prevent read-increase-write integer data races use an atomic variable.
Closure
Fixes #1392",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1394,2019-01-02T14:30:47Z,2019-01-04T14:59:46Z,2019-01-04T14:59:46Z,MERGED,True,18,4,5,https://github.com/michalvasko,Use atomic variable for thread-shared counter,1,[],https://github.com/sysrepo/sysrepo/pull/1394,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1394#issuecomment-451072135,"Description
To prevent read-increase-write integer data races use an atomic variable.
Closure
Fixes #1392","Hi,
in case the header is not available it is not reverted back to the old behavior but compiler macros are used instead of C11-standardized atomic variables. They should provide the same functionality but are probably a bit slower and perhaps not available on all compilers? I don't know, if there is someone with such a compiler, we will fix it. But in that case they will certainly get a compile-time error.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1400,2019-01-11T15:24:12Z,2019-01-14T14:27:37Z,2019-01-14T14:27:37Z,MERGED,True,37,3,3,https://github.com/kpbarrett,Add support for Vals/Vals_Holder reallocation using sr_realloc_values,1,[],https://github.com/sysrepo/sysrepo/pull/1400,https://github.com/kpbarrett,1,https://github.com/sysrepo/sysrepo/pull/1400,"Description
Enhancement to C++ API. Original author: gunter@vcinity.io
Test case
Please see example: cpp_turing_rpc_example.cpp","Description
Enhancement to C++ API. Original author: gunter@vcinity.io
Test case
Please see example: cpp_turing_rpc_example.cpp",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1400,2019-01-11T15:24:12Z,2019-01-14T14:27:37Z,2019-01-14T14:27:37Z,MERGED,True,37,3,3,https://github.com/kpbarrett,Add support for Vals/Vals_Holder reallocation using sr_realloc_values,1,[],https://github.com/sysrepo/sysrepo/pull/1400,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1400#issuecomment-453570788,"Description
Enhancement to C++ API. Original author: gunter@vcinity.io
Test case
Please see example: cpp_turing_rpc_example.cpp","It looks correct, I'll test it next Monday.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1401,2019-01-14T13:23:55Z,2019-01-23T10:11:44Z,2020-01-15T07:49:54Z,MERGED,True,10,2,2,https://github.com/mislavn,Update docker,2,[],https://github.com/sysrepo/sysrepo/pull/1401,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1401,Update arch linux dockerfiles,Update arch linux dockerfiles,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1401,2019-01-14T13:23:55Z,2019-01-23T10:11:44Z,2020-01-15T07:49:54Z,MERGED,True,10,2,2,https://github.com/mislavn,Update docker,2,[],https://github.com/sysrepo/sysrepo/pull/1401,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1401#issuecomment-456737734,Update arch linux dockerfiles,@michalvasko please could you approve the PR?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1401,2019-01-14T13:23:55Z,2019-01-23T10:11:44Z,2020-01-15T07:49:54Z,MERGED,True,10,2,2,https://github.com/mislavn,Update docker,2,[],https://github.com/sysrepo/sysrepo/pull/1401,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1401#issuecomment-456742715,Update arch linux dockerfiles,"Hi,
you do not need my review to merge and since I do not know much about docker, I intentionally did not make a review. Although I can, if you really want.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1402,2019-01-14T13:38:45Z,2019-01-14T13:54:56Z,2019-01-14T13:54:57Z,MERGED,True,1,1,1,https://github.com/michalvasko,Handle operations with augments,1,[],https://github.com/sysrepo/sysrepo/pull/1402,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1402,"Description
In case there are augments in a schema tree, lys_parent() must be used instead of the pointer node->parent directly.
Closure
Fixes #1399","Description
In case there are augments in a schema tree, lys_parent() must be used instead of the pointer node->parent directly.
Closure
Fixes #1399",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1403,2019-01-16T10:22:38Z,2019-01-17T12:53:20Z,2019-01-17T12:53:20Z,CLOSED,False,25,1,4,https://github.com/przemekr,Use LINUX_OFD_LOCK file locks when available.,1,[],https://github.com/sysrepo/sysrepo/pull/1403,https://github.com/przemekr,1,https://github.com/sysrepo/sysrepo/pull/1403,"fix issue #1396.
F_OFD_SETLK works as F_SETLK, only it is associated with file descriptor
rather then the process id, so concurrent access from two different threads
can be prevented (see fcntl man pages).
Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Closure
#1396","fix issue #1396.
F_OFD_SETLK works as F_SETLK, only it is associated with file descriptor
rather then the process id, so concurrent access from two different threads
can be prevented (see fcntl man pages).
Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Closure
#1396",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1403,2019-01-16T10:22:38Z,2019-01-17T12:53:20Z,2019-01-17T12:53:20Z,CLOSED,False,25,1,4,https://github.com/przemekr,Use LINUX_OFD_LOCK file locks when available.,1,[],https://github.com/sysrepo/sysrepo/pull/1403,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1403#issuecomment-455155069,"fix issue #1396.
F_OFD_SETLK works as F_SETLK, only it is associated with file descriptor
rather then the process id, so concurrent access from two different threads
can be prevented (see fcntl man pages).
Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Closure
#1396","Okay, now it seems fine and the tests have also passed. However, please switch the target branch to devel, we are merging into master only on a new release. Sorry for not telling you before, I have not noticed it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1404,2019-01-16T22:43:20Z,2019-01-23T02:45:15Z,2019-01-23T02:45:15Z,CLOSED,False,436,332,13,https://github.com/gunterw,Improvements/Cleanup of C++ Wrapper classes,4,[],https://github.com/sysrepo/sysrepo/pull/1404,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1404,"Description
The current C++ wrappers are ambiguous for certain data types and can't be used without explicit casting. The modifications remove the ambiguity and allow using the C++ wrappers based only on type of parameter passed to the functions.
Test case
I have updated existing test cases to remove explicit casts and type fields when they are no longer necessary.
I was not able to perform a make test for LUA bindings (did not work on my machine for some reason)
All other tests passed.
Closure
There is not an open ticket for this change","Description
The current C++ wrappers are ambiguous for certain data types and can't be used without explicit casting. The modifications remove the ambiguity and allow using the C++ wrappers based only on type of parameter passed to the functions.
Test case
I have updated existing test cases to remove explicit casts and type fields when they are no longer necessary.
I was not able to perform a make test for LUA bindings (did not work on my machine for some reason)
All other tests passed.
Closure
There is not an open ticket for this change",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1404,2019-01-16T22:43:20Z,2019-01-23T02:45:15Z,2019-01-23T02:45:15Z,CLOSED,False,436,332,13,https://github.com/gunterw,Improvements/Cleanup of C++ Wrapper classes,4,[],https://github.com/sysrepo/sysrepo/pull/1404,https://github.com/gunterw,2,https://github.com/sysrepo/sysrepo/pull/1404#issuecomment-456408102,"Description
The current C++ wrappers are ambiguous for certain data types and can't be used without explicit casting. The modifications remove the ambiguity and allow using the C++ wrappers based only on type of parameter passed to the functions.
Test case
I have updated existing test cases to remove explicit casts and type fields when they are no longer necessary.
I was not able to perform a make test for LUA bindings (did not work on my machine for some reason)
All other tests passed.
Closure
There is not an open ticket for this change","FYI - after some issues are discussed/resolved on this pull request, I will close it and created a few separate pull requests",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1405,2019-01-17T13:02:56Z,2019-01-17T14:01:35Z,2019-01-17T14:01:35Z,MERGED,True,24,1,4,https://github.com/przemekr,Use LINUX_OFD_LOCK file locks when available.,2,[],https://github.com/sysrepo/sysrepo/pull/1405,https://github.com/przemekr,1,https://github.com/sysrepo/sysrepo/pull/1405,"Description
F_OFD_SETLK works as F_SETLK, only it is associated with file descriptor
rather then the process id, so concurrent access from two different threads
can be prevented.
Closure
fix issue #1396.","Description
F_OFD_SETLK works as F_SETLK, only it is associated with file descriptor
rather then the process id, so concurrent access from two different threads
can be prevented.
Closure
fix issue #1396.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1405,2019-01-17T13:02:56Z,2019-01-17T14:01:35Z,2019-01-17T14:01:35Z,MERGED,True,24,1,4,https://github.com/przemekr,Use LINUX_OFD_LOCK file locks when available.,2,[],https://github.com/sysrepo/sysrepo/pull/1405,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1405#issuecomment-455181815,"Description
F_OFD_SETLK works as F_SETLK, only it is associated with file descriptor
rather then the process id, so concurrent access from two different threads
can be prevented.
Closure
fix issue #1396.","Alright, now everything should be fine, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1406,2019-01-18T14:52:02Z,2019-01-21T18:32:24Z,2019-01-21T18:36:07Z,CLOSED,False,471,296,30,https://github.com/gunterw,Rpc nullptr crash fix,28,[],https://github.com/sysrepo/sysrepo/pull/1406,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1406,"Description
Data Manager nullptr crash
Test case
Performing an rpc with '/ietf-system:set-current-datetime/current-datetime = 2019-01-11T11:43:00Z'
would cause a nullptr crash in the data manager.
Closure","Description
Data Manager nullptr crash
Test case
Performing an rpc with '/ietf-system:set-current-datetime/current-datetime = 2019-01-11T11:43:00Z'
would cause a nullptr crash in the data manager.
Closure",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1406,2019-01-18T14:52:02Z,2019-01-21T18:32:24Z,2019-01-21T18:36:07Z,CLOSED,False,471,296,30,https://github.com/gunterw,Rpc nullptr crash fix,28,[],https://github.com/sysrepo/sysrepo/pull/1406,https://github.com/mislavn,2,https://github.com/sysrepo/sysrepo/pull/1406#issuecomment-456165293,"Description
Data Manager nullptr crash
Test case
Performing an rpc with '/ietf-system:set-current-datetime/current-datetime = 2019-01-11T11:43:00Z'
would cause a nullptr crash in the data manager.
Closure","Hi @gunterw ,
please use the devel branch for the pull request.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1407,2019-01-18T15:28:12Z,2019-01-21T12:10:47Z,2019-02-06T21:55:51Z,CLOSED,False,474,297,30,https://github.com/gunterw,Cpp reallocation,31,[],https://github.com/sysrepo/sysrepo/pull/1407,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1407,"Description
Improve cpp reallocation ease of use, instead of throwing an exception on realloc if
alloc hasn't already occurred, just to the alloc","Description
Improve cpp reallocation ease of use, instead of throwing an exception on realloc if
alloc hasn't already occurred, just to the alloc",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1407,2019-01-18T15:28:12Z,2019-01-21T12:10:47Z,2019-02-06T21:55:51Z,CLOSED,False,474,297,30,https://github.com/gunterw,Cpp reallocation,31,[],https://github.com/sysrepo/sysrepo/pull/1407,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1407#issuecomment-455977141,"Description
Improve cpp reallocation ease of use, instead of throwing an exception on realloc if
alloc hasn't already occurred, just to the alloc","Hi,
please do not create pull requests into the master branch but rather into devel, thank you.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1407,2019-01-18T15:28:12Z,2019-01-21T12:10:47Z,2019-02-06T21:55:51Z,CLOSED,False,474,297,30,https://github.com/gunterw,Cpp reallocation,31,[],https://github.com/sysrepo/sysrepo/pull/1407,https://github.com/gunterw,3,https://github.com/sysrepo/sysrepo/pull/1407#issuecomment-456052356,"Description
Improve cpp reallocation ease of use, instead of throwing an exception on realloc if
alloc hasn't already occurred, just to the alloc","Hello,
Sorry about that. I did create the branch on devel, but then clicked the ""update branch"" button
which I thought would rebase on devel, but instead merged in master.
Do you want me to close this pull request and create a new one?
Thanks,
Gunter

This correspondence, and any attachments or files transmitted with this correspondence, contains information which may be confidential and privileged and is intended solely for the use of the addressee. Unless you are the addressee or are authorized to receive messages for the addressee, you may not use, copy, disseminate, or disclose this correspondence or any information contained in this correspondence to any third party. If you have received this correspondence in error, please notify the sender immediately and delete this correspondence and any attachments or files transmitted with this correspondence from your system, and destroy any and all copies thereof, electronic or otherwise. Your cooperation and understanding are greatly appreciated.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1407,2019-01-18T15:28:12Z,2019-01-21T12:10:47Z,2019-02-06T21:55:51Z,CLOSED,False,474,297,30,https://github.com/gunterw,Cpp reallocation,31,[],https://github.com/sysrepo/sysrepo/pull/1407,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1407#issuecomment-456052943,"Description
Improve cpp reallocation ease of use, instead of throwing an exception on realloc if
alloc hasn't already occurred, just to the alloc","Well, yeah, if you want it merged.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1410,2019-01-21T13:19:29Z,2019-02-06T21:54:35Z,2019-02-06T21:56:09Z,CLOSED,False,14,4,3,https://github.com/gunterw,Cpp reallocation2,4,[],https://github.com/sysrepo/sysrepo/pull/1410,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1410,"Description
Improvements for cpp allocation/reallocation
Test case


Calling Vals_Holder::reallocate before Vals_Holder::allocate causes an exception to be thrown.


Calling Vals_Holder::allocate(0) followed by Vals_Holder::allocate(n) where n>0 causes an exception to  be thrown.


This change performs an allocation instead of throwing an exception for both of these cases.","Description
Improvements for cpp allocation/reallocation
Test case


Calling Vals_Holder::reallocate before Vals_Holder::allocate causes an exception to be thrown.


Calling Vals_Holder::allocate(0) followed by Vals_Holder::allocate(n) where n>0 causes an exception to  be thrown.


This change performs an allocation instead of throwing an exception for both of these cases.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1410,2019-01-21T13:19:29Z,2019-02-06T21:54:35Z,2019-02-06T21:56:09Z,CLOSED,False,14,4,3,https://github.com/gunterw,Cpp reallocation2,4,[],https://github.com/sysrepo/sysrepo/pull/1410,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/1410#issuecomment-456076426,"Description
Improvements for cpp allocation/reallocation
Test case


Calling Vals_Holder::reallocate before Vals_Holder::allocate causes an exception to be thrown.


Calling Vals_Holder::allocate(0) followed by Vals_Holder::allocate(n) where n>0 causes an exception to  be thrown.


This change performs an allocation instead of throwing an exception for both of these cases.",This pull request looks like it's targetting a wrong branch. It should likely go against devel. Note that you can preview the list of commits via GitHub's web interface before you publish your pull request.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1410,2019-01-21T13:19:29Z,2019-02-06T21:54:35Z,2019-02-06T21:56:09Z,CLOSED,False,14,4,3,https://github.com/gunterw,Cpp reallocation2,4,[],https://github.com/sysrepo/sysrepo/pull/1410,https://github.com/gunterw,3,https://github.com/sysrepo/sysrepo/pull/1410#issuecomment-456080423,"Description
Improvements for cpp allocation/reallocation
Test case


Calling Vals_Holder::reallocate before Vals_Holder::allocate causes an exception to be thrown.


Calling Vals_Holder::allocate(0) followed by Vals_Holder::allocate(n) where n>0 causes an exception to  be thrown.


This change performs an allocation instead of throwing an exception for both of these cases.","Sorry again... not sure what is going on..
I just started using SmartGit to push to github and it is obviously not doing what I expect.
I will switch to good old command line...",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1410,2019-01-21T13:19:29Z,2019-02-06T21:54:35Z,2019-02-06T21:56:09Z,CLOSED,False,14,4,3,https://github.com/gunterw,Cpp reallocation2,4,[],https://github.com/sysrepo/sysrepo/pull/1410,https://github.com/gunterw,4,https://github.com/sysrepo/sysrepo/pull/1410#issuecomment-456461499,"Description
Improvements for cpp allocation/reallocation
Test case


Calling Vals_Holder::reallocate before Vals_Holder::allocate causes an exception to be thrown.


Calling Vals_Holder::allocate(0) followed by Vals_Holder::allocate(n) where n>0 causes an exception to  be thrown.


This change performs an allocation instead of throwing an exception for both of these cases.","FYI - I'm seeing some asserts using the new cpp reallocation method in my local testing
sr_mem_mgmt.c:337
 /* it must have been found, otherwise the input was invalid */ assert(node_ll && i < MAX_BLOCKS_AVAIL_FOR_ALLOC-1);
When/If I get this figured out I will create a new pull request.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1410,2019-01-21T13:19:29Z,2019-02-06T21:54:35Z,2019-02-06T21:56:09Z,CLOSED,False,14,4,3,https://github.com/gunterw,Cpp reallocation2,4,[],https://github.com/sysrepo/sysrepo/pull/1410,https://github.com/gunterw,5,https://github.com/sysrepo/sysrepo/pull/1410#issuecomment-456948372,"Description
Improvements for cpp allocation/reallocation
Test case


Calling Vals_Holder::reallocate before Vals_Holder::allocate causes an exception to be thrown.


Calling Vals_Holder::allocate(0) followed by Vals_Holder::allocate(n) where n>0 causes an exception to  be thrown.


This change performs an allocation instead of throwing an exception for both of these cases.",No longer seeing the assert problem with #1413 fix so I re-opened this pull request. I also added a new commit to handle Deleter objects properly,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1411,2019-01-21T18:49:58Z,2019-01-22T13:12:15Z,2019-01-22T13:12:15Z,MERGED,True,1,1,1,https://github.com/gunterw,Fix null ptr crash that occurred when validating,1,[],https://github.com/sysrepo/sysrepo/pull/1411,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1411,"Description
Fix null ptr crash that occurred when validating
rpc '/ietf-system:set-current-datetime/current-datetime = 2019-01-11T11:43:00Z'","Description
Fix null ptr crash that occurred when validating
rpc '/ietf-system:set-current-datetime/current-datetime = 2019-01-11T11:43:00Z'",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1411,2019-01-21T18:49:58Z,2019-01-22T13:12:15Z,2019-01-22T13:12:15Z,MERGED,True,1,1,1,https://github.com/gunterw,Fix null ptr crash that occurred when validating,1,[],https://github.com/sysrepo/sysrepo/pull/1411,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1411#issuecomment-456394059,"Description
Fix null ptr crash that occurred when validating
rpc '/ietf-system:set-current-datetime/current-datetime = 2019-01-11T11:43:00Z'","Hi,
I was just about to verify this but @jktjkt was faster so fine, thanks for the fix.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1412,2019-01-23T02:55:26Z,2019-01-23T15:13:21Z,2019-01-23T15:13:21Z,MERGED,True,14,0,1,https://github.com/gunterw,Added a test case for the Vals class which shows,1,[],https://github.com/sysrepo/sysrepo/pull/1412,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1412,"Description
Added a test case for the Vals class which shows an error in sr_realloc
Test case
The test case improperly fails with this assert

sr_realloc: Assertion `node_ll && i < MAX_BLOCKS_AVAIL_FOR_ALLOC-1' failed.","Description
Added a test case for the Vals class which shows an error in sr_realloc
Test case
The test case improperly fails with this assert

sr_realloc: Assertion `node_ll && i < MAX_BLOCKS_AVAIL_FOR_ALLOC-1' failed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1412,2019-01-23T02:55:26Z,2019-01-23T15:13:21Z,2019-01-23T15:13:21Z,MERGED,True,14,0,1,https://github.com/gunterw,Added a test case for the Vals class which shows,1,[],https://github.com/sysrepo/sysrepo/pull/1412,https://github.com/gunterw,2,https://github.com/sysrepo/sysrepo/pull/1412#issuecomment-456766257,"Description
Added a test case for the Vals class which shows an error in sr_realloc
Test case
The test case improperly fails with this assert

sr_realloc: Assertion `node_ll && i < MAX_BLOCKS_AVAIL_FOR_ALLOC-1' failed.",Create an issue for this #1413,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1412,2019-01-23T02:55:26Z,2019-01-23T15:13:21Z,2019-01-23T15:13:21Z,MERGED,True,14,0,1,https://github.com/gunterw,Added a test case for the Vals class which shows,1,[],https://github.com/sysrepo/sysrepo/pull/1412,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1412#issuecomment-456838686,"Description
Added a test case for the Vals class which shows an error in sr_realloc
Test case
The test case improperly fails with this assert

sr_realloc: Assertion `node_ll && i < MAX_BLOCKS_AVAIL_FOR_ALLOC-1' failed.","Hi,
issue is fixed and so I can merge this, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1414,2019-01-23T14:10:12Z,2019-01-23T14:30:25Z,2019-01-23T14:30:25Z,MERGED,True,2,2,1,https://github.com/michalvasko,BUGFIX shortened iterator,1,[],https://github.com/sysrepo/sysrepo/pull/1414,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1414,"Description
The first memory block was never searched because of the wrong loop condition.
Closure
Fixes #1413","Description
The first memory block was never searched because of the wrong loop condition.
Closure
Fixes #1413",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1415,2019-01-23T17:40:54Z,2019-01-23T21:21:45Z,2019-01-23T21:21:45Z,CLOSED,False,188,324,11,https://github.com/gunterw,C++ Wrapper improvements,3,[],https://github.com/sysrepo/sysrepo/pull/1415,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1415,"Description
The current C++ wrappers are ambiguous for certain data types and can't be used without explicit casting. The modifications remove the ambiguity and allow using the C++ wrappers based only on type of parameter passed to the functions. It also removes any type args that are no longer needed.
Test case
I have updated existing test cases to remove explicit casts and type fields when they are no longer necessary.","Description
The current C++ wrappers are ambiguous for certain data types and can't be used without explicit casting. The modifications remove the ambiguity and allow using the C++ wrappers based only on type of parameter passed to the functions. It also removes any type args that are no longer needed.
Test case
I have updated existing test cases to remove explicit casts and type fields when they are no longer necessary.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1416,2019-01-23T21:50:21Z,2019-02-01T09:11:46Z,2019-02-01T09:11:47Z,MERGED,True,284,470,11,https://github.com/gunterw,C++wrapper improvements,2,[],https://github.com/sysrepo/sysrepo/pull/1416,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1416,"Description
The current C++ wrappers are ambiguous for certain data types and can't be used without explicit casting. The modifications remove the ambiguity and allow using the C++ wrappers based only on type of parameter passed to the functions. It also removes any type args that are no longer needed.
Test case
I have updated existing test cases to remove explicit casts and type fields when they are no longer necessary.","Description
The current C++ wrappers are ambiguous for certain data types and can't be used without explicit casting. The modifications remove the ambiguity and allow using the C++ wrappers based only on type of parameter passed to the functions. It also removes any type args that are no longer needed.
Test case
I have updated existing test cases to remove explicit casts and type fields when they are no longer necessary.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1420,2019-01-30T12:59:17Z,2019-01-31T07:30:15Z,2019-01-31T07:30:15Z,MERGED,True,3,1,1,https://github.com/TonyMcKnight22,Fixed the issue of getting NULL values content when invoking sr_get_i…,2,[],https://github.com/sysrepo/sysrepo/pull/1420,https://github.com/TonyMcKnight22,1,https://github.com/sysrepo/sysrepo/pull/1420,"Description
To fix the issue of getting NULL values content when invoking sr_get_items.
Test case
The value of ""*values"" in ""sr_get_items"" is an address, and it is not assigned at all in old code.
So the copied content of gpb values can not be got after invoking sr_get_items.
Referred Test Cases:
cl_test, cl_test2, cl_state_data_test
Test Result:
Start 35: cl_test
35/62 Test #35: cl_test .............................   Passed    2.01 sec
Start 36: cl_test_valgrind
36/62 Test #36: cl_test_valgrind ....................   Passed   44.90 sec
Start 37: cl_test2
37/62 Test #37: cl_test2 ............................   Passed    2.58 sec
Start 38: cl_test2_valgrind
38/62 Test #38: cl_test2_valgrind ...................   Passed   37.62 sec
Start 41: cl_state_data_test
41/62 Test #41: cl_state_data_test ..................   Passed    1.14 sec
Start 42: cl_state_data_test_valgrind
42/62 Test #42: cl_state_data_test_valgrind .........   Passed   24.86 sec
100% tests passed, 0 tests failed out of 62
Closure
#1419","Description
To fix the issue of getting NULL values content when invoking sr_get_items.
Test case
The value of ""*values"" in ""sr_get_items"" is an address, and it is not assigned at all in old code.
So the copied content of gpb values can not be got after invoking sr_get_items.
Referred Test Cases:
cl_test, cl_test2, cl_state_data_test
Test Result:
Start 35: cl_test
35/62 Test #35: cl_test .............................   Passed    2.01 sec
Start 36: cl_test_valgrind
36/62 Test #36: cl_test_valgrind ....................   Passed   44.90 sec
Start 37: cl_test2
37/62 Test #37: cl_test2 ............................   Passed    2.58 sec
Start 38: cl_test2_valgrind
38/62 Test #38: cl_test2_valgrind ...................   Passed   37.62 sec
Start 41: cl_state_data_test
41/62 Test #41: cl_state_data_test ..................   Passed    1.14 sec
Start 42: cl_state_data_test_valgrind
42/62 Test #42: cl_state_data_test_valgrind .........   Passed   24.86 sec
100% tests passed, 0 tests failed out of 62
Closure
#1419",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1420,2019-01-30T12:59:17Z,2019-01-31T07:30:15Z,2019-01-31T07:30:15Z,MERGED,True,3,1,1,https://github.com/TonyMcKnight22,Fixed the issue of getting NULL values content when invoking sr_get_i…,2,[],https://github.com/sysrepo/sysrepo/pull/1420,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1420#issuecomment-459244216,"Description
To fix the issue of getting NULL values content when invoking sr_get_items.
Test case
The value of ""*values"" in ""sr_get_items"" is an address, and it is not assigned at all in old code.
So the copied content of gpb values can not be got after invoking sr_get_items.
Referred Test Cases:
cl_test, cl_test2, cl_state_data_test
Test Result:
Start 35: cl_test
35/62 Test #35: cl_test .............................   Passed    2.01 sec
Start 36: cl_test_valgrind
36/62 Test #36: cl_test_valgrind ....................   Passed   44.90 sec
Start 37: cl_test2
37/62 Test #37: cl_test2 ............................   Passed    2.58 sec
Start 38: cl_test2_valgrind
38/62 Test #38: cl_test2_valgrind ...................   Passed   37.62 sec
Start 41: cl_state_data_test
41/62 Test #41: cl_state_data_test ..................   Passed    1.14 sec
Start 42: cl_state_data_test_valgrind
42/62 Test #42: cl_state_data_test_valgrind .........   Passed   24.86 sec
100% tests passed, 0 tests failed out of 62
Closure
#1419","Hi,
okay, seems fine except that I will merge it into devel, not master.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1423,2019-02-05T17:33:35Z,2019-02-06T14:46:42Z,2019-02-06T14:46:43Z,MERGED,True,12,0,3,https://github.com/jktjkt,Fix heap-use-after-free when reallocating Vals,1,[],https://github.com/sysrepo/sysrepo/pull/1423,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1423,"Commit 51c90eb added support for reallocating the storage within the Vals class, but the Deleter was not getting updated. Here's how it ended up when built with ASAN:
  1/1 Test #31: cpp_operations ...................***Failed   22.77 sec
  =================================================================
  ==28545==ERROR: AddressSanitizer: heap-use-after-free on address 0x60e000002ce0 at pc 0x7f78eda5b713 bp 0x7ffea869df90 sp 0x7ffea869df80
  READ of size 8 at 0x60e000002ce0 thread T0
      #0 0x7f78eda5b712 in sr_free_values sysrepo/src/common/sr_common.c:87
      #1 0x7f78ee90a3b9 in sysrepo::Deleter::~Deleter() sysrepo/swig/cpp/src/Internal.cpp:78
      #2 0x7f78ee8f0e42 in std::_Sp_counted_ptr<sysrepo::Deleter*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:383
      #3 0x5614a5fb7805 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:161
      #4 0x5614a5fb6b4c in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:712
      #5 0x5614a5fb470c in std::__shared_ptr<sysrepo::Deleter, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:1151
      #6 0x5614a5fb48a1 in std::shared_ptr<sysrepo::Deleter>::~shared_ptr() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr.h:103
      #7 0x7f78ee8f9158 in sysrepo::Vals::~Vals() sysrepo/swig/cpp/src/Struct.cpp:414
      #8 0x5614a5fbde52 in std::_Sp_counted_ptr<sysrepo::Vals*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:383
      #9 0x5614a5fb7805 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:161
      #10 0x5614a5fb6b4c in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:712
      #11 0x5614a5fb542c in std::__shared_ptr<sysrepo::Vals, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:1151
      #12 0x5614a5fb54b9 in std::shared_ptr<sysrepo::Vals>::~shared_ptr() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr.h:103
      #13 0x5614a5fb2f5f in test_vals() sysrepo/swig/cpp/tests/operations.cpp:90
      #14 0x5614a5fb3b4b in main sysrepo/swig/cpp/tests/operations.cpp:116
      #15 0x7f78e99b6c4d in __libc_start_main ../csu/libc-start.c:295
      #16 0x5614a5faf3b9 in _start (_build/sysrepo/GCC_8_1_NETCONF-Debug/swig/cpp/tests/cpp_operations+0x203b9)

  0x60e000002ce0 is located 0 bytes inside of 160-byte region [0x60e000002ce0,0x60e000002d80)
  freed by thread T0 here:
      #0 0x7f78eecd65d0 in __interceptor_realloc /var/tmp/portage/sys-devel/gcc-8.1.0-r1/work/gcc-8.1.0/libsanitizer/asan/asan_malloc_linux.cc:105
      #1 0x7f78edaee988 in sr_realloc sysrepo/src/common/sr_mem_mgmt.c:294
      #2 0x7f78edafd99f in sr_realloc_values sysrepo/src/utils/values.c:192
      #3 0x7f78ee8f9be1 in sysrepo::Vals::reallocate(unsigned long) sysrepo/swig/cpp/src/Struct.cpp:435
      #4 0x5614a5fb2f41 in test_vals() sysrepo/swig/cpp/tests/operations.cpp:98
      #5 0x5614a5fb3b4b in main sysrepo/swig/cpp/tests/operations.cpp:116
      #6 0x7f78e99b6c4d in __libc_start_main ../csu/libc-start.c:295

  previously allocated by thread T0 here:
      #0 0x7f78eecd63a8 in __interceptor_calloc /var/tmp/portage/sys-devel/gcc-8.1.0-r1/work/gcc-8.1.0/libsanitizer/asan/asan_malloc_linux.cc:95
      #1 0x7f78edaefbf2 in sr_calloc sysrepo/src/common/sr_mem_mgmt.c:373
      #2 0x7f78edafd044 in sr_new_values_ctx sysrepo/src/utils/values.c:141
      #3 0x7f78edafd334 in sr_new_values sysrepo/src/utils/values.c:166
      #4 0x7f78ee8f8c41 in sysrepo::Vals::Vals(unsigned long) sysrepo/swig/cpp/src/Struct.cpp:405
      #5 0x5614a5fb24aa in test_vals() sysrepo/swig/cpp/tests/operations.cpp:90
      #6 0x5614a5fb3b4b in main sysrepo/swig/cpp/tests/operations.cpp:116
      #7 0x7f78e99b6c4d in __libc_start_main ../csu/libc-start.c:295

  SUMMARY: AddressSanitizer: heap-use-after-free sysrepo/src/common/sr_common.c:87 in sr_free_values

Fix this by adding a helper method to the Deleter which is used for updating its idea of the backing storage.
Cc: @kpbarrett","Commit 51c90eb added support for reallocating the storage within the Vals class, but the Deleter was not getting updated. Here's how it ended up when built with ASAN:
  1/1 Test #31: cpp_operations ...................***Failed   22.77 sec
  =================================================================
  ==28545==ERROR: AddressSanitizer: heap-use-after-free on address 0x60e000002ce0 at pc 0x7f78eda5b713 bp 0x7ffea869df90 sp 0x7ffea869df80
  READ of size 8 at 0x60e000002ce0 thread T0
      #0 0x7f78eda5b712 in sr_free_values sysrepo/src/common/sr_common.c:87
      #1 0x7f78ee90a3b9 in sysrepo::Deleter::~Deleter() sysrepo/swig/cpp/src/Internal.cpp:78
      #2 0x7f78ee8f0e42 in std::_Sp_counted_ptr<sysrepo::Deleter*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:383
      #3 0x5614a5fb7805 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:161
      #4 0x5614a5fb6b4c in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:712
      #5 0x5614a5fb470c in std::__shared_ptr<sysrepo::Deleter, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:1151
      #6 0x5614a5fb48a1 in std::shared_ptr<sysrepo::Deleter>::~shared_ptr() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr.h:103
      #7 0x7f78ee8f9158 in sysrepo::Vals::~Vals() sysrepo/swig/cpp/src/Struct.cpp:414
      #8 0x5614a5fbde52 in std::_Sp_counted_ptr<sysrepo::Vals*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:383
      #9 0x5614a5fb7805 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:161
      #10 0x5614a5fb6b4c in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:712
      #11 0x5614a5fb542c in std::__shared_ptr<sysrepo::Vals, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr_base.h:1151
      #12 0x5614a5fb54b9 in std::shared_ptr<sysrepo::Vals>::~shared_ptr() /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/g++-v8/bits/shared_ptr.h:103
      #13 0x5614a5fb2f5f in test_vals() sysrepo/swig/cpp/tests/operations.cpp:90
      #14 0x5614a5fb3b4b in main sysrepo/swig/cpp/tests/operations.cpp:116
      #15 0x7f78e99b6c4d in __libc_start_main ../csu/libc-start.c:295
      #16 0x5614a5faf3b9 in _start (_build/sysrepo/GCC_8_1_NETCONF-Debug/swig/cpp/tests/cpp_operations+0x203b9)

  0x60e000002ce0 is located 0 bytes inside of 160-byte region [0x60e000002ce0,0x60e000002d80)
  freed by thread T0 here:
      #0 0x7f78eecd65d0 in __interceptor_realloc /var/tmp/portage/sys-devel/gcc-8.1.0-r1/work/gcc-8.1.0/libsanitizer/asan/asan_malloc_linux.cc:105
      #1 0x7f78edaee988 in sr_realloc sysrepo/src/common/sr_mem_mgmt.c:294
      #2 0x7f78edafd99f in sr_realloc_values sysrepo/src/utils/values.c:192
      #3 0x7f78ee8f9be1 in sysrepo::Vals::reallocate(unsigned long) sysrepo/swig/cpp/src/Struct.cpp:435
      #4 0x5614a5fb2f41 in test_vals() sysrepo/swig/cpp/tests/operations.cpp:98
      #5 0x5614a5fb3b4b in main sysrepo/swig/cpp/tests/operations.cpp:116
      #6 0x7f78e99b6c4d in __libc_start_main ../csu/libc-start.c:295

  previously allocated by thread T0 here:
      #0 0x7f78eecd63a8 in __interceptor_calloc /var/tmp/portage/sys-devel/gcc-8.1.0-r1/work/gcc-8.1.0/libsanitizer/asan/asan_malloc_linux.cc:95
      #1 0x7f78edaefbf2 in sr_calloc sysrepo/src/common/sr_mem_mgmt.c:373
      #2 0x7f78edafd044 in sr_new_values_ctx sysrepo/src/utils/values.c:141
      #3 0x7f78edafd334 in sr_new_values sysrepo/src/utils/values.c:166
      #4 0x7f78ee8f8c41 in sysrepo::Vals::Vals(unsigned long) sysrepo/swig/cpp/src/Struct.cpp:405
      #5 0x5614a5fb24aa in test_vals() sysrepo/swig/cpp/tests/operations.cpp:90
      #6 0x5614a5fb3b4b in main sysrepo/swig/cpp/tests/operations.cpp:116
      #7 0x7f78e99b6c4d in __libc_start_main ../csu/libc-start.c:295

  SUMMARY: AddressSanitizer: heap-use-after-free sysrepo/src/common/sr_common.c:87 in sr_free_values

Fix this by adding a helper method to the Deleter which is used for updating its idea of the backing storage.
Cc: @kpbarrett",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1424,2019-02-07T11:54:27Z,2019-02-07T12:13:55Z,2019-02-11T08:41:56Z,MERGED,True,6,4,1,https://github.com/gunterw,Cpp reallocation,2,[],https://github.com/sysrepo/sysrepo/pull/1424,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1424,"Description
Need to add a null ptr check to recent reallocate changes, Vals objects can
be created with a nullptr deleter object (see Session.cpp:473 rpc_cb)
Also change the order of member initialization so Vals_Holder object is unmodified on reallocate failure.","Description
Need to add a null ptr check to recent reallocate changes, Vals objects can
be created with a nullptr deleter object (see Session.cpp:473 rpc_cb)
Also change the order of member initialization so Vals_Holder object is unmodified on reallocate failure.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1424,2019-02-07T11:54:27Z,2019-02-07T12:13:55Z,2019-02-11T08:41:56Z,MERGED,True,6,4,1,https://github.com/gunterw,Cpp reallocation,2,[],https://github.com/sysrepo/sysrepo/pull/1424,https://github.com/gunterw,2,https://github.com/sysrepo/sysrepo/pull/1424#issuecomment-461484708,"Description
Need to add a null ptr check to recent reallocate changes, Vals objects can
be created with a nullptr deleter object (see Session.cpp:473 rpc_cb)
Also change the order of member initialization so Vals_Holder object is unmodified on reallocate failure.","The Vals::Vals constructor defaults the delete pointer to null, there are many places where the Vals deleter will be null (maybe you are confusing the Vals delete ptr with the Val delete ptr??)
Here's an example of creating a Vals object with a nullptr, you can also look in Session.cpp for all the callbacks and a nullptr is passed for the deleter object.
    if (_allocate == false)
        throw_exception(SR_ERR_DATA_EXISTS);

    if (n == 0)
        return nullptr;

    int ret = sr_new_values(n, p_vals);
    if (ret != SR_ERR_OK)
        throw_exception(ret);

    *p_cnt = n;
    _allocate = false;

    p_Vals = S_Vals(new Vals(p_vals, p_cnt, nullptr));
    return p_Vals;
}",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1424,2019-02-07T11:54:27Z,2019-02-07T12:13:55Z,2019-02-11T08:41:56Z,MERGED,True,6,4,1,https://github.com/gunterw,Cpp reallocation,2,[],https://github.com/sysrepo/sysrepo/pull/1424,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1424#issuecomment-462251776,"Description
Need to add a null ptr check to recent reallocate changes, Vals objects can
be created with a nullptr deleter object (see Session.cpp:473 rpc_cb)
Also change the order of member initialization so Vals_Holder object is unmodified on reallocate failure.","Ah, right, so this is for a use case where the user constructs Vals on their own. I've only tested with values obtained from within sysrepo in various callbacks where that nullptr default never happened in my testing. Thanks!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1426,2019-02-09T19:52:15Z,2019-02-11T10:38:33Z,2019-02-11T10:38:33Z,MERGED,True,38,5,2,https://github.com/gunterw,Add more nullptr checks to Vals* classes,1,[],https://github.com/sysrepo/sysrepo/pull/1426,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/1426,Also add an bool Val::empty() method to allow detecting an empty Vals object without throwing an exception,Also add an bool Val::empty() method to allow detecting an empty Vals object without throwing an exception,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1429,2019-02-18T12:57:32Z,2019-02-18T14:17:45Z,2020-01-15T07:49:49Z,MERGED,True,1,4553,27,https://github.com/mislavn,lua: remove bindings,1,[],https://github.com/sysrepo/sysrepo/pull/1429,https://github.com/mislavn,1,https://github.com/sysrepo/sysrepo/pull/1429,"Description
Depraced the Sysrepo Lua bindings.
With the current changes to the Sysrepo C++ bindings we had to use
simple wrapper class (ptr class) for the objects returned and sent to
the Lua bindings which makes them a bit awkward to use now, the
example below:


       change = sess:get_change_next(it)





       change = sr.ptr(sess:get_change_next(it))



We used Lua bindings for scripting on OpenWrt alongside with Python
but now Python is better suited for that. Besides us, we aren't aware
of any one using the Lua bindings and they are making the C++/Python
bindings harder to maintain.","Description
Depraced the Sysrepo Lua bindings.
With the current changes to the Sysrepo C++ bindings we had to use
simple wrapper class (ptr class) for the objects returned and sent to
the Lua bindings which makes them a bit awkward to use now, the
example below:


       change = sess:get_change_next(it)





       change = sr.ptr(sess:get_change_next(it))



We used Lua bindings for scripting on OpenWrt alongside with Python
but now Python is better suited for that. Besides us, we aren't aware
of any one using the Lua bindings and they are making the C++/Python
bindings harder to maintain.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1433,2019-02-21T13:58:43Z,2019-02-21T14:15:09Z,2019-02-21T14:15:09Z,MERGED,True,2,1,1,https://github.com/michalvasko,Updated information about passive subscriptions and enabled event,1,[],https://github.com/sysrepo/sysrepo/pull/1433,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1433,"Description
Enabled event is delivered to subscriptions only at the moment of subscribing, which means that passive subscriptions will never get this event.
Closure
Refs #1431","Description
Enabled event is delivered to subscriptions only at the moment of subscribing, which means that passive subscriptions will never get this event.
Closure
Refs #1431",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1443,2019-03-12T20:04:37Z,2019-03-13T10:07:53Z,2019-03-13T10:07:53Z,MERGED,True,34,255,35,https://github.com/jktjkt,Move test timeouts to CMake's native features,2,[],https://github.com/sysrepo/sysrepo/pull/1443,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1443,"tests: Use CMake's native timeout
The test suite used two non-standard mechanisms for setting a timeout for each test:

if the timeout binary was available, all tests were wrapped within that and with a timeout of six minutes,
a custom watchdog thread was running, killing the process after a configurable timeout which was five minutes for all tests except nacm_cl_test where it was a bit more than eight hours

Given that CMake has a native feature for this, let's use that one and remove both custom methods.
The timeout for nacm_cl_test was set to 30'000 seconds (that's about a working day). That looks like a nonsensical value, so let's set it to 10 minutes and hope for the best.
tests: Allow perf_test a bit longer
When running within -fsanitize=thread, it typically takes 288 secs
within my CI environment when it succeeds. It also occasionally fails,
and when it fails, it is due to that five-minute timeout.","tests: Use CMake's native timeout
The test suite used two non-standard mechanisms for setting a timeout for each test:

if the timeout binary was available, all tests were wrapped within that and with a timeout of six minutes,
a custom watchdog thread was running, killing the process after a configurable timeout which was five minutes for all tests except nacm_cl_test where it was a bit more than eight hours

Given that CMake has a native feature for this, let's use that one and remove both custom methods.
The timeout for nacm_cl_test was set to 30'000 seconds (that's about a working day). That looks like a nonsensical value, so let's set it to 10 minutes and hope for the best.
tests: Allow perf_test a bit longer
When running within -fsanitize=thread, it typically takes 288 secs
within my CI environment when it succeeds. It also occasionally fails,
and when it fails, it is due to that five-minute timeout.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1443,2019-03-12T20:04:37Z,2019-03-13T10:07:53Z,2019-03-13T10:07:53Z,MERGED,True,34,255,35,https://github.com/jktjkt,Move test timeouts to CMake's native features,2,[],https://github.com/sysrepo/sysrepo/pull/1443,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/1443#issuecomment-472170624,"tests: Use CMake's native timeout
The test suite used two non-standard mechanisms for setting a timeout for each test:

if the timeout binary was available, all tests were wrapped within that and with a timeout of six minutes,
a custom watchdog thread was running, killing the process after a configurable timeout which was five minutes for all tests except nacm_cl_test where it was a bit more than eight hours

Given that CMake has a native feature for this, let's use that one and remove both custom methods.
The timeout for nacm_cl_test was set to 30'000 seconds (that's about a working day). That looks like a nonsensical value, so let's set it to 10 minutes and hope for the best.
tests: Allow perf_test a bit longer
When running within -fsanitize=thread, it typically takes 288 secs
within my CI environment when it succeeds. It also occasionally fails,
and when it fails, it is due to that five-minute timeout.",The test failure within Travis is due to CESNET/libyang#730,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1443,2019-03-12T20:04:37Z,2019-03-13T10:07:53Z,2019-03-13T10:07:53Z,MERGED,True,34,255,35,https://github.com/jktjkt,Move test timeouts to CMake's native features,2,[],https://github.com/sysrepo/sysrepo/pull/1443,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1443#issuecomment-472358524,"tests: Use CMake's native timeout
The test suite used two non-standard mechanisms for setting a timeout for each test:

if the timeout binary was available, all tests were wrapped within that and with a timeout of six minutes,
a custom watchdog thread was running, killing the process after a configurable timeout which was five minutes for all tests except nacm_cl_test where it was a bit more than eight hours

Given that CMake has a native feature for this, let's use that one and remove both custom methods.
The timeout for nacm_cl_test was set to 30'000 seconds (that's about a working day). That looks like a nonsensical value, so let's set it to 10 minutes and hope for the best.
tests: Allow perf_test a bit longer
When running within -fsanitize=thread, it typically takes 288 secs
within my CI environment when it succeeds. It also occasionally fails,
and when it fails, it is due to that five-minute timeout.","Yes, the changes themselves look fairly simple and make the tests simpler as well, thanks!
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1444,2019-03-13T11:17:36Z,2019-03-13T11:57:51Z,2019-03-13T11:57:51Z,MERGED,True,15,0,1,https://github.com/michalvasko,sysrepocfg BUGFIX properly validate datastore on merge operation,1,[],https://github.com/sysrepo/sysrepo/pull/1444,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1444,"Description
When merging a configuration, we need to validate the datastore with the new configuration being merged into the current one.
Closure
Refs #1442","Description
When merging a configuration, we need to validate the datastore with the new configuration being merged into the current one.
Closure
Refs #1442",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1446,2019-03-18T12:58:33Z,2019-03-18T15:32:20Z,2019-03-18T15:32:20Z,MERGED,True,3,6,1,https://github.com/jktjkt,Install the pkg-config file unconditionally,1,[],https://github.com/sysrepo/sysrepo/pull/1446,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1446,"The C++ bindings install their own .pc without checking whether the pkg-config helper is available on the build system. That's not necessarily a wrong thing to do; the libsysrepo.pc is a tiny file whose presence definitely doesn't hurt.
I came here because a colleague ended up with an installation that contained just libSysrepo-cpp.pc which referred to libsysrepo.pc that was not present.
Cc: @obonovai","The C++ bindings install their own .pc without checking whether the pkg-config helper is available on the build system. That's not necessarily a wrong thing to do; the libsysrepo.pc is a tiny file whose presence definitely doesn't hurt.
I came here because a colleague ended up with an installation that contained just libSysrepo-cpp.pc which referred to libsysrepo.pc that was not present.
Cc: @obonovai",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1446,2019-03-18T12:58:33Z,2019-03-18T15:32:20Z,2019-03-18T15:32:20Z,MERGED,True,3,6,1,https://github.com/jktjkt,Install the pkg-config file unconditionally,1,[],https://github.com/sysrepo/sysrepo/pull/1446,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1446#issuecomment-473903185,"The C++ bindings install their own .pc without checking whether the pkg-config helper is available on the build system. That's not necessarily a wrong thing to do; the libsysrepo.pc is a tiny file whose presence definitely doesn't hurt.
I came here because a colleague ended up with an installation that contained just libSysrepo-cpp.pc which referred to libsysrepo.pc that was not present.
Cc: @obonovai","Hi,
why not do it the other way around and condition installing C++ pkg-config file?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1446,2019-03-18T12:58:33Z,2019-03-18T15:32:20Z,2019-03-18T15:32:20Z,MERGED,True,3,6,1,https://github.com/jktjkt,Install the pkg-config file unconditionally,1,[],https://github.com/sysrepo/sysrepo/pull/1446,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1446#issuecomment-473957520,"The C++ bindings install their own .pc without checking whether the pkg-config helper is available on the build system. That's not necessarily a wrong thing to do; the libsysrepo.pc is a tiny file whose presence definitely doesn't hurt.
I came here because a colleague ended up with an installation that contained just libSysrepo-cpp.pc which referred to libsysrepo.pc that was not present.
Cc: @obonovai","Because I think that there's no value in skipping that installation if pkg-config is not available. If it is not available and if the user tries to use some SW which requires pkg-config later on, it's easy to install it. The current form requires reconfiguring sysrepo (and libyang). I just walked a student through this process, it only wasted five minutes of our time, but it's a bit annoying.
Anyway, I don't really care :). Please feel free to reject this patch if you think that not installing that tiny file is a better solution for some reason.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1446,2019-03-18T12:58:33Z,2019-03-18T15:32:20Z,2019-03-18T15:32:20Z,MERGED,True,3,6,1,https://github.com/jktjkt,Install the pkg-config file unconditionally,1,[],https://github.com/sysrepo/sysrepo/pull/1446,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1446#issuecomment-473962071,"The C++ bindings install their own .pc without checking whether the pkg-config helper is available on the build system. That's not necessarily a wrong thing to do; the libsysrepo.pc is a tiny file whose presence definitely doesn't hurt.
I came here because a colleague ended up with an installation that contained just libSysrepo-cpp.pc which referred to libsysrepo.pc that was not present.
Cc: @obonovai","Hi,
fair enough, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1451,2019-03-26T08:24:05Z,2019-03-26T09:01:24Z,2019-03-26T09:01:24Z,MERGED,True,35,35,12,https://github.com/michalvasko,Use atomic for message ref counter,1,[],https://github.com/sysrepo/sysrepo/pull/1451,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1451,"Description
Atomic variable should be used for message reference counter to avoid data races.
Closure
Refs #1450","Description
Atomic variable should be used for message reference counter to avoid data races.
Closure
Refs #1450",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1451,2019-03-26T08:24:05Z,2019-03-26T09:01:24Z,2019-03-26T09:01:24Z,MERGED,True,35,35,12,https://github.com/michalvasko,Use atomic for message ref counter,1,[],https://github.com/sysrepo/sysrepo/pull/1451,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/1451#issuecomment-476527395,"Description
Atomic variable should be used for message reference counter to avoid data races.
Closure
Refs #1450","I'll give this a try, but it might not be today. Thanks for looking into this!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1452,2019-03-26T08:34:15Z,2019-03-26T10:38:11Z,2020-01-15T07:49:50Z,MERGED,True,228,3,3,https://github.com/mamidzic,C++: extend unit tests,2,[],https://github.com/sysrepo/sysrepo/pull/1452,https://github.com/mamidzic,1,https://github.com/sysrepo/sysrepo/pull/1452,"Description
Extend c++ unit test.
Fix throwing an exception upon reaching the end of the list with items iterator.","Description
Extend c++ unit test.
Fix throwing an exception upon reaching the end of the list with items iterator.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1452,2019-03-26T08:34:15Z,2019-03-26T10:38:11Z,2020-01-15T07:49:50Z,MERGED,True,228,3,3,https://github.com/mamidzic,C++: extend unit tests,2,[],https://github.com/sysrepo/sysrepo/pull/1452,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1452#issuecomment-476533652,"Description
Extend c++ unit test.
Fix throwing an exception upon reaching the end of the list with items iterator.","Hi,
tests seems fine but please merge them into devel for now (a conflict needs to be resolved).
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1452,2019-03-26T08:34:15Z,2019-03-26T10:38:11Z,2020-01-15T07:49:50Z,MERGED,True,228,3,3,https://github.com/mamidzic,C++: extend unit tests,2,[],https://github.com/sysrepo/sysrepo/pull/1452,https://github.com/mamidzic,3,https://github.com/sysrepo/sysrepo/pull/1452#issuecomment-476560868,"Description
Extend c++ unit test.
Fix throwing an exception upon reaching the end of the list with items iterator.",I have rebased on the devel branch and resolved the conflicts.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1457,2019-04-03T10:28:47Z,2019-04-03T10:55:43Z,2019-04-03T10:55:43Z,MERGED,True,17,17,5,https://github.com/michalvasko,State data retireval fix,2,[],https://github.com/sysrepo/sysrepo/pull/1457,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1457,"Description
Nested lists were not handled correctly.
Closure
Fixes #1455","Description
Nested lists were not handled correctly.
Closure
Fixes #1455",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1458,2019-04-04T07:19:25Z,2019-04-04T07:35:16Z,2019-04-04T07:35:16Z,MERGED,True,3,3,1,https://github.com/michalvasko,sysrepoctl - handle paths with spaces,1,[],https://github.com/sysrepo/sysrepo/pull/1458,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1458,"Description
sysrepoctl was not able to install modules from directories with spaces because install interpreted the space as the end of the argument.
Closure
Fixes #1456","Description
sysrepoctl was not able to install modules from directories with spaces because install interpreted the space as the end of the argument.
Closure
Fixes #1456",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1461,2019-04-09T07:07:50Z,2019-04-09T07:24:07Z,2019-04-09T07:24:07Z,MERGED,True,1,1,1,https://github.com/michalvasko,Swig is not required for C++ bindings,1,[],https://github.com/sysrepo/sysrepo/pull/1461,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1461,"Description
Swig should not be required to build C++ bindings.
Closure
Fixes #1460","Description
Swig should not be required to build C++ bindings.
Closure
Fixes #1460",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1463,2019-04-10T07:21:25Z,2019-04-10T07:43:37Z,2019-04-10T07:43:37Z,MERGED,True,2,2,1,https://github.com/michalvasko,Correct test expected file format,1,[],https://github.com/sysrepo/sysrepo/pull/1463,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1463,"Description
Default file format was changed from XML to LYB  a long time ago.
Closure
Fixes #1462","Description
Default file format was changed from XML to LYB  a long time ago.
Closure
Fixes #1462",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1472,2019-04-18T14:24:12Z,2019-04-18T14:40:22Z,2019-04-18T14:40:23Z,MERGED,True,23,3,1,https://github.com/michalvasko,Validate only relevant modules,1,[],https://github.com/sysrepo/sysrepo/pull/1472,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1472,"Description
Validate only relevant modules that were changed and use dependent data from startup if the module is disabled and we are validating running.
Closure
Fixes #1466","Description
Validate only relevant modules that were changed and use dependent data from startup if the module is disabled and we are validating running.
Closure
Fixes #1466",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1476,2019-04-23T07:52:20Z,2019-04-23T08:14:25Z,2019-04-23T08:14:25Z,MERGED,True,3,2,1,https://github.com/michalvasko,Top-level uses with state data was not handled properly,1,[],https://github.com/sysrepo/sysrepo/pull/1476,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1476,"Description
Top-level uses with state data was not traversed properly and hence not stored as a state data subtree.
Closure
Fixes #1471","Description
Top-level uses with state data was not traversed properly and hence not stored as a state data subtree.
Closure
Fixes #1471",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1477,2019-04-23T09:58:30Z,2019-04-23T10:13:58Z,2019-04-23T10:13:58Z,MERGED,True,59525,14315,393,https://github.com/michalvasko,Coverity check merge,1774,[],https://github.com/sysrepo/sysrepo/pull/1477,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1477,"Description
Coverity merge.","Description
Coverity merge.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1479,2019-04-26T08:24:21Z,2019-04-26T08:48:21Z,2019-04-26T08:48:21Z,MERGED,True,1,0,1,https://github.com/michalvasko,OFD lock support detection,1,[],https://github.com/sysrepo/sysrepo/pull/1479,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1479,"Description
Support for OFD locks in CMake was missing a definition.
Closure
Refs #1475","Description
Support for OFD locks in CMake was missing a definition.
Closure
Refs #1475",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1501,2019-05-24T07:52:53Z,2019-05-24T08:51:12Z,2019-05-24T08:51:13Z,MERGED,True,10,6,1,https://github.com/michalvasko,Do not validate candidate datastore,1,[],https://github.com/sysrepo/sysrepo/pull/1501,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1501,"Description
Candidate datastore should not be validated as stated here.
Closure
Fixes CESNET/netopeer2#431","Description
Candidate datastore should not be validated as stated here.
Closure
Fixes CESNET/netopeer2#431",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1502,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-496098274,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","Hi,
thank you for looking into it.
@jktjkt Can you please look at this?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-496296929,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","I would be all for getting rid of the custom deleters, but I do not think that it is possible.

Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Note that the C++ sysrepo bindings use shared_ptr with a custom deleter. This is not your usual smart pointer where the destructor gets invoked once the last reference goes out of scope. The destructor does not really free to underlying C-level data directly. It checks what needs to be freed, implementing a dynamic dispatch from something ""generic"" such as, say, sysrepo::Value, which might call any number of specific destructors depending not only on what is enclosed in this instance, but also where did it come from.
The way I understand it, this pattern is necessary because of how sysrepo (as in the C API) manages memory. Values obtained from a change_iter, for example, cannot be used once the change itself is freed, so there's a strict ownership hierarchy. Destroying the Change means that the Value instances are no longer usable.
So, Value::~Value() might call sr_free_val if the C sr_val was allocated in Value::Value(), or it might not do anything at all if the sr_val came from a change iterator, for example.
It's getting late, so can you please confirm that's how the C API works, @michalvasko ?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,4,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-496450283,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","Only one test is failing now. It seems like a test for Python bindings. I don't know how to run it locally to debug. For some reason, after I build it, even if I build it exactly like in the travis CI yaml, it only runs 30 tests instead of 66. Do you know what I might be doing wrong?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,5,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-496470010,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","Sorry for the long post. I will be disagreeing, but please don't hold it against me. I only want to be constructive, but I may have limited abilities in being diplomatic. I really think that this is the right design and that it was previously flawed. And I am confident that it will work, even if we might have to do a few amendments. Give it a shot.

It checks what needs to be freed, implementing a dynamic dispatch from something ""generic"" such as, say, sysrepo::Value, which might call any number of specific destructors depending not only on what is enclosed in this instance, but also where did it come from.
I can't agree that this behaviour is implemented at all in the deleters.

There are three possible sides to what this dynamic dispatch might mean and I have to get into nitty-gritty details to explain:


The deleters retain the type of the underlying data so they know how to free the data. You could call this dynamic dispatch although it is a bit static because the type doesn't change throughout the lifetime of the deleter and because there is a known-at-compile-time one-to-one correspondence between the type that is given at the time of construction of the deleter and the free function to call in the deleter's destructor. Can we agree that this dispatch is completely handled by the simpler constructor-destructor mechanism?


Deleter::update_vals_with_count() is a method which updates the deleter's data with the encapsulating class' data. This is the only thing that changes a deleter throughout it's lifetime which is what could make the dispatch mentioned at point 1 dynamic. I respect that. But can we agree that this is a necessity only because the encapsulating class' resources have been separated into the deleter and thus that if we remove the deleters, the problem goes away?
Sidenote: I've never seen a shared_ptr deleter that frees on it's destructor, but I do understand that it is necessary exactly because data in it has to be updated via Deleter::update_vals_with_count().


The dynamic dispatch is done at a C level? If this is the case, then I don't see a problem. Abstracting it away with deleters should work the same as abstracting it away with destructors.



The way I understand it, this pattern is necessary because of how sysrepo (as in the C API) manages memory. Values obtained from a change_iter, for example, cannot be used once the change itself is freed, so there's a strict ownership hierarchy. Destroying the Change means that the Value instances are no longer usable.
So, Value::~Value() might call sr_free_val if the C sr_val was allocated in Value::Value(), or it might not do anything at all if the sr_val came from a change iterator, for example.

Accessing a Change after change_iter has been freed is indeed exactly my use case and with the changes in this pull request, I am able to do it whilst before I wasn't able to. This shows that it is possible at a C level as well. You can run the demo that I made in order to see it: #1478 (comment)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/jktjkt,6,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-496740420,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","I'm referring specifically to code like this:
S_Val Vals::val(size_t n) {
   // some exception handling omitted here for brevity
   S_Val val(new Val(&_vals[n], _deleter));
   return val;
}
Here the newly created Val instance (returned within a shared_ptr<>) shares the same Deleter instance as the original Vals class. You can see the same pattern used at other places, essentially anywhere where an instance's own _deleter member is copied to another constructor (I found it in Schemas, Tree, Trees).
I don't have time to write example code and verify this with a debugger, but my reading is that the existing code calls sr_free_values() once the Vals and all Val instances obtained from it via Vals::val go out of scope. I.e, everything is freed at once, and only when no references to that piece of memory where they originally came from are remaining. What your code does instead is calling sr_free_val on each obtained Val once these Val instances go out of scope, and one call to sr_free_values in total for the enclosing structure once that thing goes out of scope. That's a behavior change, and I do not think that it is correct.
Regarding your example given in #1478, I think that the root cause is indeed that inconsistent behavior of Change::~Change() as you correctly pointed out. Here's what happens:

Constructor Change::Change() creates a pair of deleters for two enclosed values. These deleters are essentially invalid because they were created referring to a nullptr sr_val_t, and are never updated. They are harmless no-ops.
 Session::get_change_next updates these sr_val_t * members, but it does not update their corresponding deleters. So now we have something within the sr_val_t *new, but a no-op deleter in _deleter_new, for example.
Change::new_val and Change::old_val returns Val instances with this ""empty"" _deleter.
Destructor Change::~Change then calls sr_val_free directly, destroying the memory which holds data that your Val instances refer to.

And indeed, if your Val outlives Change, you'll see a use-after-free.
This bug can be fixed by ensuring that:

whenever Change::_new gets updated, then Change::_deleter_new gets updated as well,
the same for _old and _deleter_old
removing explicit frees from Change::~Change() because that's now a job of their deleters

Stuff is more complicated because sysrepo by default uses custom allocators with memory pools. My suggestion, especially when debugging allocation issues, is to build with -DUSE_SR_MEM_MGMT=OFF, and use ASAN via adding -fsanitize=address into yourCFLAGS and CXXFLAGS and LDFLAGS.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,7,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-498319932,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","It is possible if the design follows these rules that I've also written in the latest commit:

There should be a class that directly owns the C type.
If another class wants to use the C type, it should use the owning class instead.
If the owning class inside that other class is to be shared outside via an API or via internal use, the other class should use the shared_ptr version of the owning class instead so that there is a single shared_ptr per C type memory address everywhere. Just to be safe, one could use shared_ptr every time.

Do keep this pull request alive. I'm working on it. Python bindings are failing to build currently as they are strongly coupled to the C++ bindings.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,8,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-500867449,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","I can't get my Sysrepo copy to build with 66 tests like in Travis, I only get 30. I'm building with all the flags in one of the Travis CI job logs and a few more. I get no warning besides missing libavl, but I have libredblack. What am I missing?
cmake .. -DCMAKE_INSTALL_PREFIX=/opt/sysrepo -DGEN_CPP_BINDINGS=ON -DGEN_LANGUAGE_BINDINGS=ON -DGEN_LUA_BINDINGS=OFF -DGEN_PYTHON_BINDINGS=OFF -DLIBNETCONF2_INCLUDE_DIR=/opt/libnetconf2/include -DLIBNETCONF2_LIBRARY=/opt/libnetconf2/lib/libnetconf2.so -DREDBLACK_INCLUDE_DIR=/opt/libredblack/include -DREDBLACK_LIBRARY=/opt/libredblack/lib/libredblack.a -DREPOSITORY_LOC=/opt/sysrepo-repository -DYANG_INCLUDE_DIR=/opt/libyang/include -DYANG_LIBRARY=/opt/libyang/lib/libyang.so -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS=-coverage -DLOG_THREAD_ID=ON -DLONG_REQUEST_TIMEOUT=30 -DUSE_SR_MEM_MGMT=ON -DENABLE_NACM=ON",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/rkrejci,9,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-501143795,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","6 of them are python tests, so I quess -DGEN_PYTHON_BINDINGS=ON and 30 of them are running under valgrind, which is automatically detected and if not found the valgrind tests are not run.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,10,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-505316918,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","This is as far as I can get this without any further help, I've tried building natively or deploying a travis CI image, tried building with various flags including -DGEN_PYTHON_BINDINGS=ON, the same tests get generated for me which do not include the one that fails. The takeaway is that this is a proven idiomatic memory management method that fixes my segfault and it might fix other segfaults. Take it or leave it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/michalvasko,11,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-505501207,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","Hi,
could you provide output of a fresh cmake run please?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,12,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-505771240,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","$ mkdir -p ./build
$ pushd ./build
$ cmake .. -DCMAKE_INSTALL_PREFIX=/opt/sysrepo -DGEN_CPP_BINDINGS=ON -DGEN_LANGUAGE_BINDINGS=ON -DGEN_LUA_BINDINGS=OFF -DGEN_PYTHON_BINDINGS=ON -DLIBNETCONF2_INCLUDE_DIR=/opt/libnetconf2/include -DLIBNETCONF2_LIBRARY=/opt/libnetconf2/lib/libnetconf2.so -DREDBLACK_INCLUDE_DIR=/opt/libredblack/include -DREDBLACK_LIBRARY=/opt/libredblack/lib/libredblack.a -DREPOSITORY_LOC=/opt/sysrepo-repository -DYANG_INCLUDE_DIR=/opt/libyang/include -DYANG_LIBRARY=/opt/libyang/lib/libyang.so
$ popd
-- The C compiler identification is GNU 8.3.0
-- The CXX compiler identification is GNU 8.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Preparing developer's build of sysrepo v. 0.7.7
-- sysrepo repository location: /opt/sysrepo-repository
-- Found ev: /usr/lib/x86_64-linux-gnu/libev.so  
-- Found yang: /opt/libyang/lib/libyang.so  
-- Found protobuf-c: /usr/lib/x86_64-linux-gnu/libprotobuf-c.so  
-- Found avl: /usr/lib/libavl.so  
-- Found redblack: /opt/libredblack/lib/libredblack.a  
-- libavl will be used for binary tree manipulations.
-- Looking for pthread_rwlockattr_setkind_np
-- Looking for pthread_rwlockattr_setkind_np - found
-- Looking for getpeereid
-- Looking for getpeereid - not found
-- Looking for getpeerucred
-- Looking for getpeerucred - not found
CMake Warning (dev) at /usr/share/cmake-3.13/Modules/CheckIncludeFiles.cmake:110 (message):
  Policy CMP0075 is not set: Include file check macros honor
  CMAKE_REQUIRED_LIBRARIES.  Run ""cmake --help-policy CMP0075"" for policy
  details.  Use the cmake_policy command to set the policy and suppress this
  warning.

  CMAKE_REQUIRED_LIBRARIES is set to:

    pthread

  For compatibility with CMake 3.11 and below this check is ignoring it.
Call Stack (most recent call first):
  CMakeLists.txt:146 (CHECK_INCLUDE_FILES)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Looking for include file ucred.h
-- Looking for include file ucred.h - not found
-- Looking for pthread_mutex_timedlock
-- Looking for pthread_mutex_timedlock - found
-- Looking for setfsuid
-- Looking for setfsuid - found
-- Looking for fsetxattr
-- Looking for fsetxattr - found
-- Looking for mkstemps
-- Looking for mkstemps - found
-- Performing Test HAVE_STAT_ST_MTIM
-- Performing Test HAVE_STAT_ST_MTIM - Success
-- Example code and YANG models will be built and installed.
-- CMocka found, tests are enabled.
-- Looking for include file regex.h
-- Looking for include file regex.h - found
-- Test repostory location differs to system repository location, some tests will be disabled.
-- Found Doxygen: /usr/bin/doxygen (found version ""1.8.13"") found components:  doxygen dot 
-- Found SWIG: /usr/bin/swig3.0 (found suitable version ""3.0.12"", minimum required is ""3.0.12"") 
-- Python version 2 was selected
-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython2.7.so (found suitable version ""2.7.16"", minimum required is ""2"") 
-- Found PythonInterp: /usr/bin/python2.7 (found version ""2.7.16"") 
-- Found SWIG: /usr/bin/swig3.0 (found suitable version ""3.0.12"", minimum required is ""3.0.5"") 
CMake Warning (dev) at /usr/share/cmake-3.13/Modules/UseSWIG.cmake:564 (message):
  Policy CMP0078 is not set.  Run ""cmake --help-policy CMP0078"" for policy
  details.  Use the cmake_policy command to set the policy and suppress this
  warning.
Call Stack (most recent call first):
  swig/python/CMakeLists.txt:20 (swig_add_library)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Configuring done
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    LIBNETCONF2_INCLUDE_DIR
    LIBNETCONF2_LIBRARY


-- Build files have been written to: /home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/build
[  0%] Running C protocol buffer compiler on /home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/sysrepo.proto
Scanning dependencies of target COMMON
[  1%] Building C object src/CMakeFiles/COMMON.dir/common/sysrepo.pb-c.c.o
[  2%] Building C object src/CMakeFiles/COMMON.dir/common/sr_common.c.o
[  2%] Building C object src/CMakeFiles/COMMON.dir/common/sr_utils.c.o
[  3%] Building C object src/CMakeFiles/COMMON.dir/common/sr_data_structs.c.o
[  4%] Building C object src/CMakeFiles/COMMON.dir/common/sr_logger.c.o
[  4%] Building C object src/CMakeFiles/COMMON.dir/common/sr_protobuf.c.o
[  5%] Building C object src/CMakeFiles/COMMON.dir/common/sr_mem_mgmt.c.o
[  6%] Building C object src/CMakeFiles/COMMON.dir/utils/plugins.c.o
[  6%] Building C object src/CMakeFiles/COMMON.dir/utils/trees.c.o
[  7%] Building C object src/CMakeFiles/COMMON.dir/utils/values.c.o
[  8%] Building C object src/CMakeFiles/COMMON.dir/utils/xpath.c.o
[  8%] Built target COMMON
Scanning dependencies of target SR_ENGINE
[  9%] Building C object src/CMakeFiles/SR_ENGINE.dir/access_control.c.o
[ 10%] Building C object src/CMakeFiles/SR_ENGINE.dir/connection_manager.c.o
[ 11%] Building C object src/CMakeFiles/SR_ENGINE.dir/cm_session_manager.c.o
[ 11%] Building C object src/CMakeFiles/SR_ENGINE.dir/request_processor.c.o
[ 12%] Building C object src/CMakeFiles/SR_ENGINE.dir/rp_dt_xpath.c.o
[ 13%] Building C object src/CMakeFiles/SR_ENGINE.dir/rp_dt_lookup.c.o
[ 13%] Building C object src/CMakeFiles/SR_ENGINE.dir/rp_dt_get.c.o
[ 14%] Building C object src/CMakeFiles/SR_ENGINE.dir/rp_dt_edit.c.o
[ 15%] Building C object src/CMakeFiles/SR_ENGINE.dir/rp_dt_filter.c.o
[ 15%] Building C object src/CMakeFiles/SR_ENGINE.dir/data_manager.c.o
[ 16%] Building C object src/CMakeFiles/SR_ENGINE.dir/notification_processor.c.o
/home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/notification_processor.c: In function 'np_get_all_notification_files':
/home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/notification_processor.c:617:9: warning: 'readdir_r' is deprecated [-Wdeprecated-declarations]
         ret = readdir_r(dir, &entry, &result);
         ^~~
In file included from /home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/notification_processor.c:29:
/usr/include/dirent.h:183:12: note: declared here
 extern int readdir_r (DIR *__restrict __dirp,
            ^~~~~~~~~
/home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/notification_processor.c: At top level:
cc1: warning: unrecognized command line option '-Wno-language-extension-token'
[ 17%] Building C object src/CMakeFiles/SR_ENGINE.dir/persistence_manager.c.o
[ 17%] Building C object src/CMakeFiles/SR_ENGINE.dir/module_dependencies.c.o
[ 18%] Building C object src/CMakeFiles/SR_ENGINE.dir/nacm.c.o
[ 18%] Built target SR_ENGINE
Scanning dependencies of target SR_SRC
[ 19%] Building C object src/CMakeFiles/SR_SRC.dir/clientlib/client_library.c.o
[ 19%] Building C object src/CMakeFiles/SR_SRC.dir/clientlib/cl_subscription_manager.c.o
[ 20%] Building C object src/CMakeFiles/SR_SRC.dir/clientlib/cl_common.c.o
[ 21%] Building C object src/CMakeFiles/SR_SRC.dir/clientlib/cl_trees.c.o
[ 21%] Built target SR_SRC
Scanning dependencies of target sysrepo
[ 22%] Linking C shared library libsysrepo.so
[ 22%] Built target sysrepo
Scanning dependencies of target sysrepo_a
[ 22%] Linking C static library libsysrepo.a
[ 22%] Built target sysrepo_a
Scanning dependencies of target sysrepoctl
[ 23%] Building C object src/CMakeFiles/sysrepoctl.dir/executables/sysrepoctl.c.o
[ 24%] Linking C executable sysrepoctl
[ 24%] Built target sysrepoctl
Scanning dependencies of target sysrepod
[ 24%] Building C object src/CMakeFiles/sysrepod.dir/executables/sysrepod.c.o
[ 25%] Linking C executable sysrepod
[ 25%] Built target sysrepod
Scanning dependencies of target sysrepo-plugind
[ 26%] Building C object src/CMakeFiles/sysrepo-plugind.dir/executables/sysrepo-plugind.c.o
/home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/executables/sysrepo-plugind.c: In function 'sr_pd_load_plugins':
/home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/executables/sysrepo-plugind.c:225:9: warning: 'readdir_r' is deprecated [-Wdeprecated-declarations]
         ret = readdir_r(dir, &entry, &result);
         ^~~
In file included from /home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/executables/sysrepo-plugind.c:30:
/usr/include/dirent.h:183:12: note: declared here
 extern int readdir_r (DIR *__restrict __dirp,
            ^~~~~~~~~
/home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/src/executables/sysrepo-plugind.c: At top level:
cc1: warning: unrecognized command line option '-Wno-language-extension-token'
[ 27%] Linking C executable sysrepo-plugind
[ 27%] Built target sysrepo-plugind
Scanning dependencies of target sysrepocfg
[ 28%] Building C object src/CMakeFiles/sysrepocfg.dir/executables/sysrepocfg.c.o
[ 28%] Linking C executable sysrepocfg
[ 28%] Built target sysrepocfg
Scanning dependencies of target application_changes_example
[ 29%] Building C object examples/CMakeFiles/application_changes_example.dir/application_changes_example.c.o
[ 29%] Linking C executable application_changes_example
[ 29%] Built target application_changes_example
Scanning dependencies of target application_example
[ 30%] Building C object examples/CMakeFiles/application_example.dir/application_example.c.o
[ 31%] Linking C executable application_example
[ 31%] Built target application_example
Scanning dependencies of target sr_get_subtrees_example
[ 31%] Building C object examples/CMakeFiles/sr_get_subtrees_example.dir/sr_get_subtrees_example.c.o
[ 32%] Linking C executable sr_get_subtrees_example
[ 32%] Built target sr_get_subtrees_example
Scanning dependencies of target sr_get_item_example
[ 33%] Building C object examples/CMakeFiles/sr_get_item_example.dir/sr_get_item_example.c.o
[ 33%] Linking C executable sr_get_item_example
[ 33%] Built target sr_get_item_example
Scanning dependencies of target sr_get_items_example
[ 34%] Building C object examples/CMakeFiles/sr_get_items_example.dir/sr_get_items_example.c.o
[ 35%] Linking C executable sr_get_items_example
[ 35%] Built target sr_get_items_example
Scanning dependencies of target sr_get_items_iter_example
[ 35%] Building C object examples/CMakeFiles/sr_get_items_iter_example.dir/sr_get_items_iter_example.c.o
[ 36%] Linking C executable sr_get_items_iter_example
[ 36%] Built target sr_get_items_iter_example
Scanning dependencies of target sr_get_changes_iter_example
[ 36%] Building C object examples/CMakeFiles/sr_get_changes_iter_example.dir/sr_get_changes_iter_example.c.o
[ 37%] Linking C executable sr_get_changes_iter_example
[ 37%] Built target sr_get_changes_iter_example
Scanning dependencies of target event_notif_sub_example
[ 38%] Building C object examples/CMakeFiles/event_notif_sub_example.dir/event_notif_sub_example.c.o
[ 38%] Linking C executable event_notif_sub_example
[ 38%] Built target event_notif_sub_example
Scanning dependencies of target sr_delete_item_example
[ 39%] Building C object examples/CMakeFiles/sr_delete_item_example.dir/sr_delete_item_example.c.o
[ 40%] Linking C executable sr_delete_item_example
[ 40%] Built target sr_delete_item_example
Scanning dependencies of target oper_data_example
[ 41%] Building C object examples/CMakeFiles/oper_data_example.dir/oper_data_example.c.o
[ 41%] Linking C executable oper_data_example
[ 41%] Built target oper_data_example
Scanning dependencies of target rpc_example
[ 42%] Building C object examples/CMakeFiles/rpc_example.dir/rpc_example.c.o
[ 43%] Linking C executable rpc_example
[ 43%] Built target rpc_example
Scanning dependencies of target sr_get_subtree_iter_example
[ 44%] Building C object examples/CMakeFiles/sr_get_subtree_iter_example.dir/sr_get_subtree_iter_example.c.o
[ 45%] Linking C executable sr_get_subtree_iter_example
[ 45%] Built target sr_get_subtree_iter_example
Scanning dependencies of target sr_get_subtree_example
[ 46%] Building C object examples/CMakeFiles/sr_get_subtree_example.dir/sr_get_subtree_example.c.o
[ 46%] Linking C executable sr_get_subtree_example
[ 46%] Built target sr_get_subtree_example
Scanning dependencies of target sr_set_item_example
[ 47%] Building C object examples/CMakeFiles/sr_set_item_example.dir/sr_set_item_example.c.o
[ 47%] Linking C executable sr_set_item_example
[ 47%] Built target sr_set_item_example
Scanning dependencies of target event_notif_sub_tree_example
[ 48%] Building C object examples/CMakeFiles/event_notif_sub_tree_example.dir/event_notif_sub_tree_example.c.o
[ 49%] Linking C executable event_notif_sub_tree_example
[ 49%] Built target event_notif_sub_tree_example
Scanning dependencies of target application_fd_watcher_example
[ 49%] Building C object examples/CMakeFiles/application_fd_watcher_example.dir/application_fd_watcher_example.c.o
[ 50%] Linking C executable application_fd_watcher_example
[ 50%] Built target application_fd_watcher_example
Scanning dependencies of target rpc_tree_example
[ 50%] Building C object examples/CMakeFiles/rpc_tree_example.dir/rpc_tree_example.c.o
[ 51%] Linking C executable rpc_tree_example
[ 51%] Built target rpc_tree_example
Scanning dependencies of target oven
[ 52%] Building C object examples/plugins/CMakeFiles/oven.dir/oven.c.o
[ 53%] Linking C shared library liboven.so
[ 53%] Built target oven
Scanning dependencies of target turing-machine
[ 54%] Building C object examples/plugins/CMakeFiles/turing-machine.dir/turing-machine.c.o
[ 55%] Linking C shared library libturing-machine.so
[ 55%] Built target turing-machine
Scanning dependencies of target HELPERS
[ 55%] Building C object tests/CMakeFiles/HELPERS.dir/helpers/rp_dt_context_helper.c.o
[ 56%] Building C object tests/CMakeFiles/HELPERS.dir/helpers/test_module_helper.c.o
[ 57%] Building C object tests/CMakeFiles/HELPERS.dir/helpers/system_helper.c.o
[ 57%] Building C object tests/CMakeFiles/HELPERS.dir/helpers/nacm_module_helper.c.o
[ 57%] Built target HELPERS
Scanning dependencies of target pm_test
[ 57%] Building C object tests/CMakeFiles/pm_test.dir/pm_test.c.o
[ 58%] Linking C executable pm_test
[ 58%] Built target pm_test
Scanning dependencies of target dm_test
[ 59%] Building C object tests/CMakeFiles/dm_test.dir/dm_test.c.o
[ 60%] Linking C executable dm_test
[ 60%] Built target dm_test
Scanning dependencies of target values_test
[ 60%] Building C object tests/CMakeFiles/values_test.dir/values_test.c.o
[ 61%] Linking C executable values_test
[ 61%] Built target values_test
Scanning dependencies of target rp_dt_running_test
[ 61%] Building C object tests/CMakeFiles/rp_dt_running_test.dir/rp_dt_running_test.c.o
[ 62%] Linking C executable rp_dt_running_test
[ 62%] Built target rp_dt_running_test
Scanning dependencies of target cm_sm_test
[ 63%] Building C object tests/CMakeFiles/cm_sm_test.dir/cm_sm_test.c.o
[ 63%] Linking C executable cm_sm_test
[ 63%] Built target cm_sm_test
Scanning dependencies of target mem_mgmt_test
[ 64%] Building C object tests/CMakeFiles/mem_mgmt_test.dir/mem_mgmt_test.c.o
[ 64%] Linking C executable mem_mgmt_test
[ 64%] Built target mem_mgmt_test
Scanning dependencies of target create_internals
[ 64%] Built target create_internals
Scanning dependencies of target common_test
[ 65%] Building C object tests/CMakeFiles/common_test.dir/common_test.c.o
[ 66%] Linking C executable common_test
[ 66%] Built target common_test
Scanning dependencies of target dummy-plugin-1
[ 67%] Building C object tests/CMakeFiles/dummy-plugin-1.dir/helpers/dummy_plugin.c.o
[ 68%] Linking C shared library libdummy-plugin-1.so
[ 68%] Built target dummy-plugin-1
Scanning dependencies of target ac_test
[ 68%] Building C object tests/CMakeFiles/ac_test.dir/ac_test.c.o
[ 69%] Linking C executable ac_test
[ 69%] Built target ac_test
Scanning dependencies of target rp_datatree_test
[ 70%] Building C object tests/CMakeFiles/rp_datatree_test.dir/rp_datatree_test.c.o
[ 70%] Linking C executable rp_datatree_test
[ 70%] Built target rp_datatree_test
Scanning dependencies of target trees_test
[ 71%] Building C object tests/CMakeFiles/trees_test.dir/trees_test.c.o
[ 71%] Linking C executable trees_test
[ 71%] Built target trees_test
Scanning dependencies of target xpath_utils_test
[ 72%] Building C object tests/CMakeFiles/xpath_utils_test.dir/xpath_utils_test.c.o
[ 73%] Linking C executable xpath_utils_test
[ 73%] Built target xpath_utils_test
Scanning dependencies of target rp_dt_xpath_test
[ 74%] Building C object tests/CMakeFiles/rp_dt_xpath_test.dir/rp_dt_xpath_test.c.o
[ 74%] Linking C executable rp_dt_xpath_test
[ 74%] Built target rp_dt_xpath_test
Scanning dependencies of target rp_dt_edit_test
[ 75%] Building C object tests/CMakeFiles/rp_dt_edit_test.dir/rp_dt_edit_test.c.o
[ 76%] Linking C executable rp_dt_edit_test
[ 76%] Built target rp_dt_edit_test
Scanning dependencies of target dummy-plugin-2
[ 76%] Building C object tests/CMakeFiles/dummy-plugin-2.dir/helpers/dummy_plugin.c.o
[ 77%] Linking C shared library libdummy-plugin-2.so
[ 77%] Built target dummy-plugin-2
Scanning dependencies of target np_test
[ 78%] Building C object tests/CMakeFiles/np_test.dir/np_test.c.o
[ 79%] Linking C executable np_test
[ 79%] Built target np_test
Scanning dependencies of target md_test
[ 79%] Building C object tests/CMakeFiles/md_test.dir/md_test.c.o
[ 80%] Linking C executable md_test
[ 80%] Built target md_test
Scanning dependencies of target Sysrepo-cpp
[ 80%] Building CXX object swig/CMakeFiles/Sysrepo-cpp.dir/cpp/src/Sysrepo.cpp.o
[ 81%] Building CXX object swig/CMakeFiles/Sysrepo-cpp.dir/cpp/src/Connection.cpp.o
[ 82%] Building CXX object swig/CMakeFiles/Sysrepo-cpp.dir/cpp/src/Session.cpp.o
[ 83%] Building CXX object swig/CMakeFiles/Sysrepo-cpp.dir/cpp/src/Struct.cpp.o
[ 83%] Building CXX object swig/CMakeFiles/Sysrepo-cpp.dir/cpp/src/Xpath.cpp.o
[ 84%] Building CXX object swig/CMakeFiles/Sysrepo-cpp.dir/cpp/src/Tree.cpp.o
[ 85%] Building CXX object swig/CMakeFiles/Sysrepo-cpp.dir/cpp/src/Internal.cpp.o
[ 85%] Linking CXX shared library libSysrepo-cpp.so
[ 85%] Built target Sysrepo-cpp
Scanning dependencies of target cpp_delete_item_example
[ 85%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_delete_item_example.dir/cpp_delete_item_example.cpp.o
[ 86%] Linking CXX executable cpp_delete_item_example
[ 86%] Built target cpp_delete_item_example
Scanning dependencies of target cpp_application_changes_example
[ 87%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_application_changes_example.dir/cpp_application_changes_example.cpp.o
[ 87%] Linking CXX executable cpp_application_changes_example
[ 87%] Built target cpp_application_changes_example
Scanning dependencies of target cpp_get_items_example
[ 88%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_get_items_example.dir/cpp_get_items_example.cpp.o
[ 89%] Linking CXX executable cpp_get_items_example
[ 89%] Built target cpp_get_items_example
Scanning dependencies of target cpp_application_example
[ 90%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_application_example.dir/cpp_application_example.cpp.o
[ 91%] Linking CXX executable cpp_application_example
[ 91%] Built target cpp_application_example
Scanning dependencies of target cpp_get_item_example
[ 92%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_get_item_example.dir/cpp_get_item_example.cpp.o
[ 92%] Linking CXX executable cpp_get_item_example
[ 92%] Built target cpp_get_item_example
Scanning dependencies of target cpp_rpc_example
[ 93%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_rpc_example.dir/cpp_rpc_example.cpp.o
[ 93%] Linking CXX executable cpp_rpc_example
[ 93%] Built target cpp_rpc_example
Scanning dependencies of target cpp_get_items_iter_example
[ 93%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_get_items_iter_example.dir/cpp_get_items_iter_example.cpp.o
[ 94%] Linking CXX executable cpp_get_items_iter_example
[ 94%] Built target cpp_get_items_iter_example
Scanning dependencies of target cpp_turing_rpc_example
[ 95%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_turing_rpc_example.dir/cpp_turing_rpc_example.cpp.o
[ 95%] Linking CXX executable cpp_turing_rpc_example
[ 95%] Built target cpp_turing_rpc_example
Scanning dependencies of target cpp_set_item_example
[ 96%] Building CXX object swig/cpp/examples/CMakeFiles/cpp_set_item_example.dir/cpp_set_item_example.cpp.o
[ 97%] Linking CXX executable cpp_set_item_example
[ 97%] Built target cpp_set_item_example
Scanning dependencies of target sysrepo_swig_compilation
[ 98%] Swig compile sysrepo.i for python
[ 98%] Built target sysrepo_swig_compilation
Scanning dependencies of target _sysrepo
[ 99%] Building CXX object swig/python/CMakeFiles/_sysrepo.dir/sysrepoPYTHON_wrap.cxx.o
[100%] Linking CXX shared module _sysrepo.so
[100%] Built target _sysrepo
$ pushd ./build
$ ctest
$ popd
Test project /home/andrei.pavel@ad.qualitance.com/work/qualitance/terastream/dt-sysrepo/build
      Start  1: common_test
 1/30 Test  #1: common_test ......................   Passed    0.04 sec
      Start  2: common_test_valgrind
 2/30 Test  #2: common_test_valgrind .............   Passed    5.85 sec
      Start  3: xpath_utils_test
 3/30 Test  #3: xpath_utils_test .................   Passed    0.00 sec
      Start  4: xpath_utils_test_valgrind
 4/30 Test  #4: xpath_utils_test_valgrind ........   Passed    4.03 sec
      Start  5: ac_test
 5/30 Test  #5: ac_test ..........................   Passed    0.02 sec
      Start  6: ac_test_valgrind
 6/30 Test  #6: ac_test_valgrind .................   Passed    5.36 sec
      Start  7: mem_mgmt_test
 7/30 Test  #7: mem_mgmt_test ....................   Passed    0.00 sec
      Start  8: mem_mgmt_test_valgrind
 8/30 Test  #8: mem_mgmt_test_valgrind ...........   Passed    4.13 sec
      Start  9: values_test
 9/30 Test  #9: values_test ......................   Passed    0.00 sec
      Start 10: values_test_valgrind
10/30 Test #10: values_test_valgrind .............   Passed    4.05 sec
      Start 11: trees_test
11/30 Test #11: trees_test .......................   Passed    0.01 sec
      Start 12: trees_test_valgrind
12/30 Test #12: trees_test_valgrind ..............   Passed    4.05 sec
      Start 13: cm_sm_test
13/30 Test #13: cm_sm_test .......................   Passed    0.01 sec
      Start 14: cm_sm_test_valgrind
14/30 Test #14: cm_sm_test_valgrind ..............   Passed    4.35 sec
      Start 15: np_test
15/30 Test #15: np_test ..........................   Passed    0.36 sec
      Start 16: np_test_valgrind
16/30 Test #16: np_test_valgrind .................   Passed    7.13 sec
      Start 17: pm_test
17/30 Test #17: pm_test ..........................   Passed    0.16 sec
      Start 18: pm_test_valgrind
18/30 Test #18: pm_test_valgrind .................   Passed    5.61 sec
      Start 19: dm_test
19/30 Test #19: dm_test ..........................   Passed    0.22 sec
      Start 20: dm_test_valgrind
20/30 Test #20: dm_test_valgrind .................   Passed   10.09 sec
      Start 21: rp_dt_xpath_test
21/30 Test #21: rp_dt_xpath_test .................   Passed    0.03 sec
      Start 22: rp_dt_xpath_test_valgrind
22/30 Test #22: rp_dt_xpath_test_valgrind ........   Passed    4.99 sec
      Start 23: rp_datatree_test
23/30 Test #23: rp_datatree_test .................   Passed    0.11 sec
      Start 24: rp_datatree_test_valgrind
24/30 Test #24: rp_datatree_test_valgrind ........   Passed    6.78 sec
      Start 25: rp_dt_edit_test
25/30 Test #25: rp_dt_edit_test ..................   Passed    0.30 sec
      Start 26: rp_dt_edit_test_valgrind
26/30 Test #26: rp_dt_edit_test_valgrind .........   Passed    8.72 sec
      Start 27: rp_dt_running_test
27/30 Test #27: rp_dt_running_test ...............   Passed    0.08 sec
      Start 28: rp_dt_running_test_valgrind
28/30 Test #28: rp_dt_running_test_valgrind ......   Passed    6.18 sec
      Start 29: md_test
29/30 Test #29: md_test ..........................   Passed    0.14 sec
      Start 30: md_test_valgrind
30/30 Test #30: md_test_valgrind .................   Passed    8.58 sec

100% tests passed, 0 tests failed out of 30

Total Test time (real) =  91.40 sec",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/michalvasko,13,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-505779050,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","Hi,
this is the key line in the cmake output
-- Test repostory location differs to system repository location, some tests will be disabled.

The simplest solution is not to define specific REPOSITORY_LOC and simply use the default one. What may also work is to define TEST_REPOSITORY_LOC to match the REPOSITORY_LOC.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,14,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-510113084,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.",Is this of any interest? I would have liked to finish it. Will you look into it if I open another pull request?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/michalvasko,15,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-510343337,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","Hi,
sorry for closing it, I am not sure how that happened. Anyway, after you reach an agreement with @jktjkt about usefulness of your changes, I will be happy to merge them.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/jktjkt,16,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-510436921,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","I'll be happy to review this change once:

the history gets fixed (i.e., no ""fix up commits"", no ""make Python stuff work again"", etc)
my comments given above are addressed

It's summer time, meaning that I'll be able to review this in August. Just FYI.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1502,2019-05-24T14:24:56Z,2019-10-08T20:30:46Z,2019-10-08T20:30:46Z,CLOSED,False,277,551,20,https://github.com/andrei-pavel,[👌 IMPROVE] removed deleters in swig/cpp,23,[],https://github.com/sysrepo/sysrepo/pull/1502,https://github.com/andrei-pavel,17,https://github.com/sysrepo/sysrepo/pull/1502#issuecomment-539690902,"Closes #1478.
I'm sorry, I've tried to fix this in as little changes as possible and I thought that three removed lines as specified in #1478 would have solved it, but here we are now. To achieve memory safety for my use case, I had to move Val's deleter in Val's destructor.
What I ended up doing is move all the code in the deleters to each specific destructor and remove the Deleter class altogether. This is better because:

It allows Obj to be used safely as it is now it's responsibility to free memory, not just S_Obj.
When destructing, it does not iterate through all the types to find out what to free.
Constructing the objects is easier and more foolproof.

I don't see any downside to this so if I'm missing something, do point it out.
I'm no expert on interfacing C code with C++, I've done it only once I think, but I think there are two effective methods:

Either using the encapsulation method where you enclose C types in C++ classes and free the resources via the destructor
Or using smart pointers each having the C type pointer as the underlying pointer and a custom deleter

Deleter classes were a combination of both, but did not do either accordingly. I was going for number 1 in this PR.
There is one case where this might not work as expected and I could use your help to figure that out. Yang_Schemas and Yang_Schema as well as Yang_Trees and Yang_Tree both free their resources. If there's any point in time where they share elements, a double free might happen. There is a null check in the destructor, so it won't SIGSEGV at the second free, but rather if the second one tries to read after the first one has freed. So do they ever share C-type elements?
You'll see constructors that only copy their members modified to use initialization lists. This is for consistency with other parts of the code.
You'll see empty constructors and destructors turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions.","My current thought is that this could be done through duplication of the shared pointers in some places and through having a is_deletion_enabled bool value in each class and a enableDeletion() method that is called on certain events.
Thank you for taking the time to go through this with me. I would love to take this to the end, but it's a rather branchy and lengthy issue so I can't promise anything. Closing it for now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1504,2019-05-27T19:50:54Z,2019-05-29T12:17:47Z,2019-05-29T12:17:48Z,MERGED,True,5,3,3,https://github.com/jktjkt,Ensure that feature test macros work correctly,2,[],https://github.com/sysrepo/sysrepo/pull/1504,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/1504,"These feature test macros are required to be defined prior to including any standard headers. This is a transitive requirement because headers are, in general, free to include other headers. The sysrepo's code violated this because it included <stdatomic.h>.
This fixes a build failure when using clang on Fedora 29. Apparently, the order of #include is different from using GCC. By the time sr_utils.c defined _GNU_SOURCE, the <features.h> was already processed, and therefore _GNU_SOURCE was not turned into __USE_GNU (which is what <bits/fcntl-linux.h> uses as a guard for the F_OFD_GETLK etc.","These feature test macros are required to be defined prior to including any standard headers. This is a transitive requirement because headers are, in general, free to include other headers. The sysrepo's code violated this because it included <stdatomic.h>.
This fixes a build failure when using clang on Fedora 29. Apparently, the order of #include is different from using GCC. By the time sr_utils.c defined _GNU_SOURCE, the <features.h> was already processed, and therefore _GNU_SOURCE was not turned into __USE_GNU (which is what <bits/fcntl-linux.h> uses as a guard for the F_OFD_GETLK etc.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1504,2019-05-27T19:50:54Z,2019-05-29T12:17:47Z,2019-05-29T12:17:48Z,MERGED,True,5,3,3,https://github.com/jktjkt,Ensure that feature test macros work correctly,2,[],https://github.com/sysrepo/sysrepo/pull/1504,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/1504#issuecomment-496740590,"These feature test macros are required to be defined prior to including any standard headers. This is a transitive requirement because headers are, in general, free to include other headers. The sysrepo's code violated this because it included <stdatomic.h>.
This fixes a build failure when using clang on Fedora 29. Apparently, the order of #include is different from using GCC. By the time sr_utils.c defined _GNU_SOURCE, the <features.h> was already processed, and therefore _GNU_SOURCE was not turned into __USE_GNU (which is what <bits/fcntl-linux.h> uses as a guard for the F_OFD_GETLK etc.","Can I get this merged, please? It's currently blocking our upgrades past 89cfe68 internally.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1517,2019-06-17T01:45:00Z,2019-12-13T13:44:48Z,2019-12-13T13:44:48Z,CLOSED,False,34,7,7,https://github.com/mbennett2212,Don't send notifications back to the session that changes database,4258,[],https://github.com/sysrepo/sysrepo/pull/1517,https://github.com/mbennett2212,1,https://github.com/sysrepo/sysrepo/pull/1517,"If a single threaded process is subscribed to validate the database and
then commits to the database it will deadlock/timeout as the validate
callback can never be run. In this case it could be assumed that the
process has already validated this data before committing it to the
database so it would be useful if it was possible for this functionality
to work without deadlocking. To achieve this we now store the session id
that subscribed to validate the database and if this session id matches
the id of the session that has committed to the database then we skip
the subscription notification - avoiding the deadlock.
Relates to #1042","If a single threaded process is subscribed to validate the database and
then commits to the database it will deadlock/timeout as the validate
callback can never be run. In this case it could be assumed that the
process has already validated this data before committing it to the
database so it would be useful if it was possible for this functionality
to work without deadlocking. To achieve this we now store the session id
that subscribed to validate the database and if this session id matches
the id of the session that has committed to the database then we skip
the subscription notification - avoiding the deadlock.
Relates to #1042",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1517,2019-06-17T01:45:00Z,2019-12-13T13:44:48Z,2019-12-13T13:44:48Z,CLOSED,False,34,7,7,https://github.com/mbennett2212,Don't send notifications back to the session that changes database,4258,[],https://github.com/sysrepo/sysrepo/pull/1517,https://github.com/mbennett2212,2,https://github.com/sysrepo/sysrepo/pull/1517#issuecomment-502507216,"If a single threaded process is subscribed to validate the database and
then commits to the database it will deadlock/timeout as the validate
callback can never be run. In this case it could be assumed that the
process has already validated this data before committing it to the
database so it would be useful if it was possible for this functionality
to work without deadlocking. To achieve this we now store the session id
that subscribed to validate the database and if this session id matches
the id of the session that has committed to the database then we skip
the subscription notification - avoiding the deadlock.
Relates to #1042","This is useful for my use case and I notice it may also be related to #1042 . Please let me know if this is useful for upstream and if so how best to get it accepted (perhaps this should be configurable as part of the subscribe, or a new function for committing is required).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1517,2019-06-17T01:45:00Z,2019-12-13T13:44:48Z,2019-12-13T13:44:48Z,CLOSED,False,34,7,7,https://github.com/mbennett2212,Don't send notifications back to the session that changes database,4258,[],https://github.com/sysrepo/sysrepo/pull/1517,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1517#issuecomment-503970557,"If a single threaded process is subscribed to validate the database and
then commits to the database it will deadlock/timeout as the validate
callback can never be run. In this case it could be assumed that the
process has already validated this data before committing it to the
database so it would be useful if it was possible for this functionality
to work without deadlocking. To achieve this we now store the session id
that subscribed to validate the database and if this session id matches
the id of the session that has committed to the database then we skip
the subscription notification - avoiding the deadlock.
Relates to #1042","Hi,
what exactly are you doing in the validation callback? Generally, it should not block unless you are calling some sysrepo functions.
So, I do not think this is, in general, such a good idea, it seems too specific. Why should the value not be validated just because it was written using the same session as was used for the subscription?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1517,2019-06-17T01:45:00Z,2019-12-13T13:44:48Z,2019-12-13T13:44:48Z,CLOSED,False,34,7,7,https://github.com/mbennett2212,Don't send notifications back to the session that changes database,4258,[],https://github.com/sysrepo/sysrepo/pull/1517,https://github.com/mbennett2212,4,https://github.com/sysrepo/sysrepo/pull/1517#issuecomment-504225043,"If a single threaded process is subscribed to validate the database and
then commits to the database it will deadlock/timeout as the validate
callback can never be run. In this case it could be assumed that the
process has already validated this data before committing it to the
database so it would be useful if it was possible for this functionality
to work without deadlocking. To achieve this we now store the session id
that subscribed to validate the database and if this session id matches
the id of the session that has committed to the database then we skip
the subscription notification - avoiding the deadlock.
Relates to #1042","Hi Michal,
The process writing to the paths in the database is also subscribed to validate those paths. The process receives the sysrepo callbacks in the same thread as the thread that writes to the database (I followed the example in application_fd_watcher_example.c). The write to the database blocks until it can be validated but since the validation can never run (since it has to run in the same thread) the request times out.
In my system this process is subscribed to validate these paths for requests that come through netconf, gnmi or other processes writing to sysrepo. However it may receive changes 'out of band' (that do not come through sysrepo) so it needs to update sysrepo with these changes as they occur. It is not possible for us to change these 'out of band' changes to instead go through sysrepo, and writing these changes to sysrepo from a separate thread in our process introduces race/timing problems when other changes are also going to sysrepo from netconf/gnmi/other-processes.
I don't think this should be the normal sysrepo behaviour (don't validate if the subscriber is doing the write), but we definately has a use case for this behaviour so it seems like it would be nice for it to be optional behaviour that can be used.
Thanks,
Matt",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1517,2019-06-17T01:45:00Z,2019-12-13T13:44:48Z,2019-12-13T13:44:48Z,CLOSED,False,34,7,7,https://github.com/mbennett2212,Don't send notifications back to the session that changes database,4258,[],https://github.com/sysrepo/sysrepo/pull/1517,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1517#issuecomment-504335511,"If a single threaded process is subscribed to validate the database and
then commits to the database it will deadlock/timeout as the validate
callback can never be run. In this case it could be assumed that the
process has already validated this data before committing it to the
database so it would be useful if it was possible for this functionality
to work without deadlocking. To achieve this we now store the session id
that subscribed to validate the database and if this session id matches
the id of the session that has committed to the database then we skip
the subscription notification - avoiding the deadlock.
Relates to #1042","Hi Matt,
okay, I understand, but this pull request does not make this behavior optional and the condition of the same session sending the changes and subscribing to them seems a bit arbitrary to me.
The whole problem is having the configuration in 2 places, it is not supported by sysrepo. However, we do have some (vague) plans to add this support with a custom datastore feature although not in the near future.
Best that you could do is to somehow use only the sysrepo datastore but that would involve a lot of work, I imagine. Other than that, you can create the separate thread and solve the data races that could occur.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1525,2019-06-20T10:05:05Z,2019-06-20T10:25:05Z,2019-06-20T10:25:05Z,MERGED,True,6,0,1,https://github.com/michalvasko,add bash dependency,1,[],https://github.com/sysrepo/sysrepo/pull/1525,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1525,"Description
Add bash dependency to CMakeLists.txt.
Closure
Fixes #1515","Description
Add bash dependency to CMakeLists.txt.
Closure
Fixes #1515",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1526,2019-06-21T11:55:08Z,2019-06-21T12:12:08Z,2019-06-21T12:12:09Z,MERGED,True,5,15,1,https://github.com/michalvasko,State data collecting in augment with nested augment,1,[],https://github.com/sysrepo/sysrepo/pull/1526,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1526,"Description
When there was an augment within another augment, the schema traversal was prematurely stopped.
Closure
Fixes #1512","Description
When there was an augment within another augment, the schema traversal was prematurely stopped.
Closure
Fixes #1512",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1527,2019-06-22T12:11:55Z,2019-09-05T06:02:11Z,2019-09-05T06:02:11Z,MERGED,True,6,0,1,https://github.com/brchiu,Fix the error occurrs after get-config with filter-xpath for 2nd time,4,[],https://github.com/sysrepo/sysrepo/pull/1527,https://github.com/brchiu,1,https://github.com/sysrepo/sysrepo/pull/1527,"Description
This pull request intends to solve an issue that with the following command
get-config --source running --filter-xpath //ietf-netconf-server:listen[1]

on netopeer2-cli will successfully execute for the first time after connect to
server but fail afterwards with the following message :
ERROR
	type:     application
	tag:      operation-failed
	severity: error
	message:  np2srv_sr_get_items_iter failed (sysrepo: Sysrepo-internal error).

sysrepod report the following log :
[DBG] (rp_worker_thread_execute:3822) Thread id=140555455993600 signaled.
[DBG] (sr_cbuff_dequeue:532) Circular buffer dequeue, new buffer head=1, count=0.
[DBG] (rp_get_items_req_process:792) Processing get_items request.
[INF] (rp_dt_get_values_wrapper_with_opts:1348) Get items request running datastore, xpath: //ietf-netconf-server:listen[1]//., offset: 0, limit: 100
[ERR] (ac_check_module_node_permissions:273) Cannot insert new entry into binary tree for module access control info.
[ERR] (rp_dt_prepare_data:1203) Access control check failed for xpath '//ietf-netconf-server:listen[1]//.'
[ERR] (rp_dt_get_values_wrapper_with_opts:1361) rp_dt_prepare_data failed
[ERR] (rp_get_items_req_process:830) Get items failed for '//ietf-netconf-server:listen[1]//.', session id=1841680137.
[DBG] (sr_cbuff_enqueue:516) Circular buffer enqueue to position=78, current count=1.
[DBG] (rp_worker_thread_execute:3810) Thread id=140555455993600 will wait.
[DBG] (cm_msg_enqueue_cb:1791) New message enqueued into CM message queue.
[DBG] (sr_cbuff_dequeue:532) Circular buffer dequeue, new buffer head=79, count=0.
[DBG] (cm_conn_out_buff_flush:508) Sending 30 bytes of data.
[DBG] (cm_conn_out_buff_flush:514) 30 bytes of data sent.

After debug with gdb, it shows that the module_info does not record input xpath.","Description
This pull request intends to solve an issue that with the following command
get-config --source running --filter-xpath //ietf-netconf-server:listen[1]

on netopeer2-cli will successfully execute for the first time after connect to
server but fail afterwards with the following message :
ERROR
	type:     application
	tag:      operation-failed
	severity: error
	message:  np2srv_sr_get_items_iter failed (sysrepo: Sysrepo-internal error).

sysrepod report the following log :
[DBG] (rp_worker_thread_execute:3822) Thread id=140555455993600 signaled.
[DBG] (sr_cbuff_dequeue:532) Circular buffer dequeue, new buffer head=1, count=0.
[DBG] (rp_get_items_req_process:792) Processing get_items request.
[INF] (rp_dt_get_values_wrapper_with_opts:1348) Get items request running datastore, xpath: //ietf-netconf-server:listen[1]//., offset: 0, limit: 100
[ERR] (ac_check_module_node_permissions:273) Cannot insert new entry into binary tree for module access control info.
[ERR] (rp_dt_prepare_data:1203) Access control check failed for xpath '//ietf-netconf-server:listen[1]//.'
[ERR] (rp_dt_get_values_wrapper_with_opts:1361) rp_dt_prepare_data failed
[ERR] (rp_get_items_req_process:830) Get items failed for '//ietf-netconf-server:listen[1]//.', session id=1841680137.
[DBG] (sr_cbuff_enqueue:516) Circular buffer enqueue to position=78, current count=1.
[DBG] (rp_worker_thread_execute:3810) Thread id=140555455993600 will wait.
[DBG] (cm_msg_enqueue_cb:1791) New message enqueued into CM message queue.
[DBG] (sr_cbuff_dequeue:532) Circular buffer dequeue, new buffer head=79, count=0.
[DBG] (cm_conn_out_buff_flush:508) Sending 30 bytes of data.
[DBG] (cm_conn_out_buff_flush:514) 30 bytes of data sent.

After debug with gdb, it shows that the module_info does not record input xpath.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1527,2019-06-22T12:11:55Z,2019-09-05T06:02:11Z,2019-09-05T06:02:11Z,MERGED,True,6,0,1,https://github.com/brchiu,Fix the error occurrs after get-config with filter-xpath for 2nd time,4,[],https://github.com/sysrepo/sysrepo/pull/1527,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1527#issuecomment-505121257,"Description
This pull request intends to solve an issue that with the following command
get-config --source running --filter-xpath //ietf-netconf-server:listen[1]

on netopeer2-cli will successfully execute for the first time after connect to
server but fail afterwards with the following message :
ERROR
	type:     application
	tag:      operation-failed
	severity: error
	message:  np2srv_sr_get_items_iter failed (sysrepo: Sysrepo-internal error).

sysrepod report the following log :
[DBG] (rp_worker_thread_execute:3822) Thread id=140555455993600 signaled.
[DBG] (sr_cbuff_dequeue:532) Circular buffer dequeue, new buffer head=1, count=0.
[DBG] (rp_get_items_req_process:792) Processing get_items request.
[INF] (rp_dt_get_values_wrapper_with_opts:1348) Get items request running datastore, xpath: //ietf-netconf-server:listen[1]//., offset: 0, limit: 100
[ERR] (ac_check_module_node_permissions:273) Cannot insert new entry into binary tree for module access control info.
[ERR] (rp_dt_prepare_data:1203) Access control check failed for xpath '//ietf-netconf-server:listen[1]//.'
[ERR] (rp_dt_get_values_wrapper_with_opts:1361) rp_dt_prepare_data failed
[ERR] (rp_get_items_req_process:830) Get items failed for '//ietf-netconf-server:listen[1]//.', session id=1841680137.
[DBG] (sr_cbuff_enqueue:516) Circular buffer enqueue to position=78, current count=1.
[DBG] (rp_worker_thread_execute:3810) Thread id=140555455993600 will wait.
[DBG] (cm_msg_enqueue_cb:1791) New message enqueued into CM message queue.
[DBG] (sr_cbuff_dequeue:532) Circular buffer dequeue, new buffer head=79, count=0.
[DBG] (cm_conn_out_buff_flush:508) Sending 30 bytes of data.
[DBG] (cm_conn_out_buff_flush:514) 30 bytes of data sent.

After debug with gdb, it shows that the module_info does not record input xpath.","Hi,
thanks for the pull request but CI showed you have used some undefined variables. You can simply remove the freeing and it should be fine.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1527,2019-06-22T12:11:55Z,2019-09-05T06:02:11Z,2019-09-05T06:02:11Z,MERGED,True,6,0,1,https://github.com/brchiu,Fix the error occurrs after get-config with filter-xpath for 2nd time,4,[],https://github.com/sysrepo/sysrepo/pull/1527,https://github.com/brchiu,3,https://github.com/sysrepo/sysrepo/pull/1527#issuecomment-527762722,"Description
This pull request intends to solve an issue that with the following command
get-config --source running --filter-xpath //ietf-netconf-server:listen[1]

on netopeer2-cli will successfully execute for the first time after connect to
server but fail afterwards with the following message :
ERROR
	type:     application
	tag:      operation-failed
	severity: error
	message:  np2srv_sr_get_items_iter failed (sysrepo: Sysrepo-internal error).

sysrepod report the following log :
[DBG] (rp_worker_thread_execute:3822) Thread id=140555455993600 signaled.
[DBG] (sr_cbuff_dequeue:532) Circular buffer dequeue, new buffer head=1, count=0.
[DBG] (rp_get_items_req_process:792) Processing get_items request.
[INF] (rp_dt_get_values_wrapper_with_opts:1348) Get items request running datastore, xpath: //ietf-netconf-server:listen[1]//., offset: 0, limit: 100
[ERR] (ac_check_module_node_permissions:273) Cannot insert new entry into binary tree for module access control info.
[ERR] (rp_dt_prepare_data:1203) Access control check failed for xpath '//ietf-netconf-server:listen[1]//.'
[ERR] (rp_dt_get_values_wrapper_with_opts:1361) rp_dt_prepare_data failed
[ERR] (rp_get_items_req_process:830) Get items failed for '//ietf-netconf-server:listen[1]//.', session id=1841680137.
[DBG] (sr_cbuff_enqueue:516) Circular buffer enqueue to position=78, current count=1.
[DBG] (rp_worker_thread_execute:3810) Thread id=140555455993600 will wait.
[DBG] (cm_msg_enqueue_cb:1791) New message enqueued into CM message queue.
[DBG] (sr_cbuff_dequeue:532) Circular buffer dequeue, new buffer head=79, count=0.
[DBG] (cm_conn_out_buff_flush:508) Sending 30 bytes of data.
[DBG] (cm_conn_out_buff_flush:514) 30 bytes of data sent.

After debug with gdb, it shows that the module_info does not record input xpath.","@michalvasko, I have fixed the undefined variables and freeing issue, please advice what is next step. thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1533,2019-07-01T06:27:18Z,2019-07-01T06:53:43Z,2019-07-01T06:53:43Z,MERGED,True,4,2,1,https://github.com/michalvasko,support for shortening values array,1,[],https://github.com/sysrepo/sysrepo/pull/1533,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1533,"Description
Adds support for sr_realloc() shortening values array.
Closure
Fixes #1532","Description
Adds support for sr_realloc() shortening values array.
Closure
Fixes #1532",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1537,2019-07-10T08:10:58Z,2019-07-10T08:30:31Z,2019-07-10T08:30:31Z,MERGED,True,45,12,3,https://github.com/michalvasko,Python bindings bugfixes,3,[],https://github.com/sysrepo/sysrepo/pull/1537,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1537,"Description
Python binding fixes of 32b variable compatibility and thread support.
Closure
Fixes #1493
Fixes #1506","Description
Python binding fixes of 32b variable compatibility and thread support.
Closure
Fixes #1493
Fixes #1506",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1538,2019-07-10T11:42:33Z,2019-07-10T11:42:40Z,2019-07-10T13:07:08Z,MERGED,True,1,1,1,https://github.com/michalvasko,Version bump to 0.7.8,2,[],https://github.com/sysrepo/sysrepo/pull/1538,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1538,"Description
Version bump.","Description
Version bump.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1539,2019-07-10T11:44:26Z,2019-07-10T12:23:19Z,2019-07-10T12:23:19Z,CLOSED,False,974,5367,112,https://github.com/michalvasko,Devel merge,99,[],https://github.com/sysrepo/sysrepo/pull/1539,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1539,"Description
Merge devel branch into master for new release.","Description
Merge devel branch into master for new release.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1540,2019-07-10T12:24:07Z,2019-07-10T12:48:32Z,2019-07-10T13:09:25Z,MERGED,True,974,5367,112,https://github.com/michalvasko,Devel merge,100,[],https://github.com/sysrepo/sysrepo/pull/1540,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1540,"Description
Merge devel branch into master for a new release.","Description
Merge devel branch into master for a new release.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1550,2019-07-22T07:40:53Z,2019-07-22T08:08:13Z,2019-07-22T08:08:13Z,MERGED,True,1,1,1,https://github.com/michalvasko,Get subtree iter invalid assert,2,[],https://github.com/sysrepo/sysrepo/pull/1550,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1550,"Description
Assert that was not true removed.
Closure
Refs #1548","Description
Assert that was not true removed.
Closure
Refs #1548",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1551,2019-07-23T07:12:21Z,2019-07-23T07:36:19Z,2019-07-23T07:36:20Z,MERGED,True,44,17,1,https://github.com/michalvasko,sysrepocfg add support for loading data from foreign models,2,[],https://github.com/sysrepo/sysrepo/pull/1551,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1551,"Description
sysrepocfg is now able to load data from models that were not loaded explicitly but are present in sysrepo module context.
Closure
Fixes #1535","Description
sysrepocfg is now able to load data from models that were not loaded explicitly but are present in sysrepo module context.
Closure
Fixes #1535",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1558,2019-07-31T11:17:23Z,2019-08-02T13:31:43Z,2019-08-02T13:45:55Z,CLOSED,False,0,0,0,https://github.com/andrei-pavel,[🐛 FIX] `unused parameter` warnings when including Session.hpp,0,[],https://github.com/sysrepo/sysrepo/pull/1558,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1558,"I get a boatload of unused parameter warnings when compiling something that includes Session.hpp. Would you be willing to comment the parameter names?
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::module_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:41: warning: unused parameter 'session' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                               ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:62: warning: unused parameter 'module_name' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                  ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:92: warning: unused parameter 'event' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                           ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:105: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                   ~~~~~~^~~~~~~~~~~
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::subtree_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:42: warning: unused parameter 'session' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:63: warning: unused parameter 'xpath' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:87: warning: unused parameter 'event' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                      ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:100: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                              ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::module_install(const char*, const char*, sr_module_state_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:70: warning: unused parameter 'revision' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:98: warning: unused parameter 'state' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                ~~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:111: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::feature_enable(const char*, const char*, bool, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:70: warning: unused parameter 'feature_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:89: warning: unused parameter 'enabled' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                    ~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:104: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:33: warning: unused parameter 'xpath' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                     ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:53: warning: unused parameter 'input' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                        ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:74: warning: unused parameter 'output' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                            ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:88: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:36: warning: unused parameter 'xpath' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:56: warning: unused parameter 'input' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                           ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:77: warning: unused parameter 'output' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                               ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:91: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:38: warning: unused parameter 'xpath' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                          ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:59: warning: unused parameter 'input' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                             ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:81: warning: unused parameter 'output' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                  ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:95: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:41: warning: unused parameter 'xpath' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                             ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:62: warning: unused parameter 'input' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:84: warning: unused parameter 'output' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:98: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::dp_get_items(const char*, sysrepo::S_Vals_Holder, uint64_t, const char*, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:42: warning: unused parameter 'xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                              ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:63: warning: unused parameter 'vals' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                 ~~~~~~~~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:78: warning: unused parameter 'request_id' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:102: warning: unused parameter 'original_xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                          ~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:124: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                                      ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif(sr_ev_notif_type_t, const char*, sysrepo::S_Vals, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:55: warning: unused parameter 'notif_type' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:79: warning: unused parameter 'xpath' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:93: warning: unused parameter 'vals' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                      ~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:106: warning: unused parameter 'timestamp' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                   ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:123: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif_tree(sr_ev_notif_type_t, const char*, sysrepo::S_Trees, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:60: warning: unused parameter 'notif_type' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:84: warning: unused parameter 'xpath' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:99: warning: unused parameter 'trees' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                           ~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:113: warning: unused parameter 'timestamp' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                          ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:130: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'void sysrepo::Subscribe::additional_cleanup(void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:237:35: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  237 |     void additional_cleanup(void *private_ctx) {return;};","I get a boatload of unused parameter warnings when compiling something that includes Session.hpp. Would you be willing to comment the parameter names?
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::module_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:41: warning: unused parameter 'session' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                               ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:62: warning: unused parameter 'module_name' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                  ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:92: warning: unused parameter 'event' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                           ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:105: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                   ~~~~~~^~~~~~~~~~~
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::subtree_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:42: warning: unused parameter 'session' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:63: warning: unused parameter 'xpath' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:87: warning: unused parameter 'event' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                      ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:100: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                              ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::module_install(const char*, const char*, sr_module_state_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:70: warning: unused parameter 'revision' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:98: warning: unused parameter 'state' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                ~~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:111: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::feature_enable(const char*, const char*, bool, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:70: warning: unused parameter 'feature_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:89: warning: unused parameter 'enabled' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                    ~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:104: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:33: warning: unused parameter 'xpath' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                     ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:53: warning: unused parameter 'input' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                        ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:74: warning: unused parameter 'output' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                            ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:88: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:36: warning: unused parameter 'xpath' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:56: warning: unused parameter 'input' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                           ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:77: warning: unused parameter 'output' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                               ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:91: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:38: warning: unused parameter 'xpath' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                          ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:59: warning: unused parameter 'input' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                             ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:81: warning: unused parameter 'output' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                  ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:95: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:41: warning: unused parameter 'xpath' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                             ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:62: warning: unused parameter 'input' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:84: warning: unused parameter 'output' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:98: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::dp_get_items(const char*, sysrepo::S_Vals_Holder, uint64_t, const char*, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:42: warning: unused parameter 'xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                              ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:63: warning: unused parameter 'vals' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                 ~~~~~~~~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:78: warning: unused parameter 'request_id' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:102: warning: unused parameter 'original_xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                          ~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:124: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                                      ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif(sr_ev_notif_type_t, const char*, sysrepo::S_Vals, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:55: warning: unused parameter 'notif_type' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:79: warning: unused parameter 'xpath' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:93: warning: unused parameter 'vals' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                      ~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:106: warning: unused parameter 'timestamp' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                   ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:123: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif_tree(sr_ev_notif_type_t, const char*, sysrepo::S_Trees, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:60: warning: unused parameter 'notif_type' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:84: warning: unused parameter 'xpath' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:99: warning: unused parameter 'trees' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                           ~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:113: warning: unused parameter 'timestamp' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                          ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:130: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'void sysrepo::Subscribe::additional_cleanup(void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:237:35: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  237 |     void additional_cleanup(void *private_ctx) {return;};",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1558,2019-07-31T11:17:23Z,2019-08-02T13:31:43Z,2019-08-02T13:45:55Z,CLOSED,False,0,0,0,https://github.com/andrei-pavel,[🐛 FIX] `unused parameter` warnings when including Session.hpp,0,[],https://github.com/sysrepo/sysrepo/pull/1558,https://github.com/andrei-pavel,2,https://github.com/sysrepo/sysrepo/pull/1558#issuecomment-517336403,"I get a boatload of unused parameter warnings when compiling something that includes Session.hpp. Would you be willing to comment the parameter names?
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::module_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:41: warning: unused parameter 'session' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                               ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:62: warning: unused parameter 'module_name' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                  ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:92: warning: unused parameter 'event' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                           ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:105: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                   ~~~~~~^~~~~~~~~~~
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::subtree_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:42: warning: unused parameter 'session' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:63: warning: unused parameter 'xpath' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:87: warning: unused parameter 'event' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                      ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:100: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                              ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::module_install(const char*, const char*, sr_module_state_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:70: warning: unused parameter 'revision' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:98: warning: unused parameter 'state' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                ~~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:111: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::feature_enable(const char*, const char*, bool, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:70: warning: unused parameter 'feature_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:89: warning: unused parameter 'enabled' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                    ~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:104: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:33: warning: unused parameter 'xpath' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                     ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:53: warning: unused parameter 'input' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                        ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:74: warning: unused parameter 'output' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                            ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:88: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:36: warning: unused parameter 'xpath' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:56: warning: unused parameter 'input' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                           ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:77: warning: unused parameter 'output' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                               ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:91: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:38: warning: unused parameter 'xpath' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                          ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:59: warning: unused parameter 'input' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                             ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:81: warning: unused parameter 'output' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                  ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:95: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:41: warning: unused parameter 'xpath' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                             ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:62: warning: unused parameter 'input' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:84: warning: unused parameter 'output' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:98: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::dp_get_items(const char*, sysrepo::S_Vals_Holder, uint64_t, const char*, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:42: warning: unused parameter 'xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                              ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:63: warning: unused parameter 'vals' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                 ~~~~~~~~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:78: warning: unused parameter 'request_id' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:102: warning: unused parameter 'original_xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                          ~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:124: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                                      ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif(sr_ev_notif_type_t, const char*, sysrepo::S_Vals, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:55: warning: unused parameter 'notif_type' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:79: warning: unused parameter 'xpath' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:93: warning: unused parameter 'vals' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                      ~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:106: warning: unused parameter 'timestamp' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                   ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:123: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif_tree(sr_ev_notif_type_t, const char*, sysrepo::S_Trees, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:60: warning: unused parameter 'notif_type' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:84: warning: unused parameter 'xpath' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:99: warning: unused parameter 'trees' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                           ~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:113: warning: unused parameter 'timestamp' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                          ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:130: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'void sysrepo::Subscribe::additional_cleanup(void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:237:35: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  237 |     void additional_cleanup(void *private_ctx) {return;};","I like ping-pong, it creates value.
Move sysrepo::Callback method definitions to swig/cpp/src/Session.cpp then? Where they actually belong if we are to separate interface from implementation? And leave only method declarations in swig/cpp/src/Session.hpp? Even though they consist of simple returns? It trumps maybe_unused and void casts in my view.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1558,2019-07-31T11:17:23Z,2019-08-02T13:31:43Z,2019-08-02T13:45:55Z,CLOSED,False,0,0,0,https://github.com/andrei-pavel,[🐛 FIX] `unused parameter` warnings when including Session.hpp,0,[],https://github.com/sysrepo/sysrepo/pull/1558,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/1558#issuecomment-517376918,"I get a boatload of unused parameter warnings when compiling something that includes Session.hpp. Would you be willing to comment the parameter names?
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::module_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:41: warning: unused parameter 'session' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                               ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:62: warning: unused parameter 'module_name' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                  ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:92: warning: unused parameter 'event' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                           ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:105: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                   ~~~~~~^~~~~~~~~~~
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::subtree_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:42: warning: unused parameter 'session' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:63: warning: unused parameter 'xpath' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:87: warning: unused parameter 'event' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                      ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:100: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                              ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::module_install(const char*, const char*, sr_module_state_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:70: warning: unused parameter 'revision' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:98: warning: unused parameter 'state' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                ~~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:111: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::feature_enable(const char*, const char*, bool, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:70: warning: unused parameter 'feature_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:89: warning: unused parameter 'enabled' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                    ~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:104: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:33: warning: unused parameter 'xpath' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                     ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:53: warning: unused parameter 'input' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                        ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:74: warning: unused parameter 'output' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                            ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:88: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:36: warning: unused parameter 'xpath' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:56: warning: unused parameter 'input' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                           ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:77: warning: unused parameter 'output' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                               ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:91: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:38: warning: unused parameter 'xpath' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                          ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:59: warning: unused parameter 'input' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                             ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:81: warning: unused parameter 'output' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                  ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:95: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:41: warning: unused parameter 'xpath' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                             ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:62: warning: unused parameter 'input' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:84: warning: unused parameter 'output' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:98: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::dp_get_items(const char*, sysrepo::S_Vals_Holder, uint64_t, const char*, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:42: warning: unused parameter 'xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                              ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:63: warning: unused parameter 'vals' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                 ~~~~~~~~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:78: warning: unused parameter 'request_id' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:102: warning: unused parameter 'original_xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                          ~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:124: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                                      ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif(sr_ev_notif_type_t, const char*, sysrepo::S_Vals, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:55: warning: unused parameter 'notif_type' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:79: warning: unused parameter 'xpath' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:93: warning: unused parameter 'vals' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                      ~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:106: warning: unused parameter 'timestamp' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                   ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:123: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif_tree(sr_ev_notif_type_t, const char*, sysrepo::S_Trees, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:60: warning: unused parameter 'notif_type' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:84: warning: unused parameter 'xpath' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:99: warning: unused parameter 'trees' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                           ~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:113: warning: unused parameter 'timestamp' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                          ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:130: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'void sysrepo::Subscribe::additional_cleanup(void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:237:35: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  237 |     void additional_cleanup(void *private_ctx) {return;};","Yes, a de-inlined version would do the trick as well. I think it's likely that the reason for them being inline was just convenience of the implementation's author.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1558,2019-07-31T11:17:23Z,2019-08-02T13:31:43Z,2019-08-02T13:45:55Z,CLOSED,False,0,0,0,https://github.com/andrei-pavel,[🐛 FIX] `unused parameter` warnings when including Session.hpp,0,[],https://github.com/sysrepo/sysrepo/pull/1558,https://github.com/andrei-pavel,4,https://github.com/sysrepo/sysrepo/pull/1558#issuecomment-517706621,"I get a boatload of unused parameter warnings when compiling something that includes Session.hpp. Would you be willing to comment the parameter names?
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::module_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:41: warning: unused parameter 'session' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                               ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:62: warning: unused parameter 'module_name' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                  ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:92: warning: unused parameter 'event' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                           ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:165:105: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  165 |     virtual int module_change(S_Session session, const char *module_name, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                   ~~~~~~^~~~~~~~~~~
In file included from ../../../src/bin/netconf/netconf.h:24,
                 from netconf.cc:16:
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::subtree_change(sysrepo::S_Session, const char*, sr_notif_event_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:42: warning: unused parameter 'session' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                ~~~~~~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:63: warning: unused parameter 'xpath' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:87: warning: unused parameter 'event' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                      ~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:167:100: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  167 |     virtual int subtree_change(S_Session session, const char *xpath, sr_notif_event_t event, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                              ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::module_install(const char*, const char*, sr_module_state_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:70: warning: unused parameter 'revision' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:98: warning: unused parameter 'state' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                ~~~~~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:169:111: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  169 |     virtual void module_install(const char *module_name, const char *revision, sr_module_state_t state, void *private_ctx) {return;};
      |                                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::feature_enable(const char*, const char*, bool, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:45: warning: unused parameter 'module_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:70: warning: unused parameter 'feature_name' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                          ~~~~~~~~~~~~^~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:89: warning: unused parameter 'enabled' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                    ~~~~~^~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:171:104: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  171 |     virtual void feature_enable(const char *module_name, const char *feature_name, bool enabled, void *private_ctx) {return;};
      |                                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:33: warning: unused parameter 'xpath' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                     ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:53: warning: unused parameter 'input' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                        ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:74: warning: unused parameter 'output' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                            ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:173:88: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  173 |     virtual int rpc(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                  ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action(const char*, sysrepo::S_Vals, sysrepo::S_Vals_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:36: warning: unused parameter 'xpath' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:56: warning: unused parameter 'input' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                           ~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:77: warning: unused parameter 'output' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                               ~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:175:91: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  175 |     virtual int action(const char *xpath, const S_Vals input, S_Vals_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::rpc_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:38: warning: unused parameter 'xpath' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                          ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:59: warning: unused parameter 'input' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                             ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:81: warning: unused parameter 'output' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                  ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:177:95: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  177 |     virtual int rpc_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                         ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::action_tree(const char*, sysrepo::S_Trees, sysrepo::S_Trees_Holder, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:41: warning: unused parameter 'xpath' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                             ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:62: warning: unused parameter 'input' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                ~~~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:84: warning: unused parameter 'output' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~~~~~~~^~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:179:98: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  179 |     virtual int action_tree(const char *xpath, const S_Trees input, S_Trees_Holder output, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual int sysrepo::Callback::dp_get_items(const char*, sysrepo::S_Vals_Holder, uint64_t, const char*, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:42: warning: unused parameter 'xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                              ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:63: warning: unused parameter 'vals' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                 ~~~~~~~~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:78: warning: unused parameter 'request_id' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                     ~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:102: warning: unused parameter 'original_xpath' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                          ~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:181:124: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  181 |     virtual int dp_get_items(const char *xpath, S_Vals_Holder vals, uint64_t request_id, const char *original_xpath, void *private_ctx) {return SR_ERR_OK;};
      |                                                                                                                      ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif(sr_ev_notif_type_t, const char*, sysrepo::S_Vals, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:55: warning: unused parameter 'notif_type' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:79: warning: unused parameter 'xpath' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                   ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:93: warning: unused parameter 'vals' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                      ~~~~~~~^~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:106: warning: unused parameter 'timestamp' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                   ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:183:123: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  183 |     virtual void event_notif(const sr_ev_notif_type_t notif_type, const char *xpath, S_Vals vals, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                     ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'virtual void sysrepo::Callback::event_notif_tree(sr_ev_notif_type_t, const char*, sysrepo::S_Trees, time_t, void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:60: warning: unused parameter 'notif_type' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:84: warning: unused parameter 'xpath' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                        ~~~~~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:99: warning: unused parameter 'trees' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                           ~~~~~~~~^~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:113: warning: unused parameter 'timestamp' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                          ~~~~~~~^~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:185:130: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  185 |     virtual void event_notif_tree(const sr_ev_notif_type_t notif_type, const char *xpath, S_Trees trees, time_t timestamp, void *private_ctx) {return;};
      |                                                                                                                            ~~~~~~^~~~~~~~~~~
/opt/sysrepo/include/sysrepo-cpp/Session.hpp: In member function 'void sysrepo::Subscribe::additional_cleanup(void*)':
/opt/sysrepo/include/sysrepo-cpp/Session.hpp:237:35: warning: unused parameter 'private_ctx' [-Wunused-parameter]
  237 |     void additional_cleanup(void *private_ctx) {return;};","Apparently, force-pushing in order to clean up branches closes the pull request. Continued at #1560",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1560,2019-08-02T13:45:19Z,2019-09-03T10:06:09Z,2019-09-03T10:06:10Z,MERGED,True,81,16,2,https://github.com/andrei-pavel,[🐛 FIX] `unused parameter` warnings when including Session.hpp,2,[],https://github.com/sysrepo/sysrepo/pull/1560,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1560,"Continued #1558
@jktjkt
You'll also see the empty destructor turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions. The only design disadvantage is that you should define all structors in the header if you want consistency when they're not trivial, because when they are = default is only possible for the declaration of the structor.
What's better than this is actually omitting the structor when you don't need it which I did for the constructor.
Ping-pong 🏓 away","Continued #1558
@jktjkt
You'll also see the empty destructor turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions. The only design disadvantage is that you should define all structors in the header if you want consistency when they're not trivial, because when they are = default is only possible for the declaration of the structor.
What's better than this is actually omitting the structor when you don't need it which I did for the constructor.
Ping-pong 🏓 away",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1560,2019-08-02T13:45:19Z,2019-09-03T10:06:09Z,2019-09-03T10:06:10Z,MERGED,True,81,16,2,https://github.com/andrei-pavel,[🐛 FIX] `unused parameter` warnings when including Session.hpp,2,[],https://github.com/sysrepo/sysrepo/pull/1560,https://github.com/andrei-pavel,2,https://github.com/sysrepo/sysrepo/pull/1560#issuecomment-517708363,"Continued #1558
@jktjkt
You'll also see the empty destructor turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions. The only design disadvantage is that you should define all structors in the header if you want consistency when they're not trivial, because when they are = default is only possible for the declaration of the structor.
What's better than this is actually omitting the structor when you don't need it which I did for the constructor.
Ping-pong 🏓 away","Also took out redundant ; at the end of the lines.
Also formatted with clang-format.
No change is too small or too less important. That's my mantra.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1560,2019-08-02T13:45:19Z,2019-09-03T10:06:09Z,2019-09-03T10:06:10Z,MERGED,True,81,16,2,https://github.com/andrei-pavel,[🐛 FIX] `unused parameter` warnings when including Session.hpp,2,[],https://github.com/sysrepo/sysrepo/pull/1560,https://github.com/andrei-pavel,3,https://github.com/sysrepo/sysrepo/pull/1560#issuecomment-527058179,"Continued #1558
@jktjkt
You'll also see the empty destructor turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions. The only design disadvantage is that you should define all structors in the header if you want consistency when they're not trivial, because when they are = default is only possible for the declaration of the structor.
What's better than this is actually omitting the structor when you don't need it which I did for the constructor.
Ping-pong 🏓 away","Kind monthly reminder that this PR is done and works for me. Take it, leave it or change it. 😛",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1560,2019-08-02T13:45:19Z,2019-09-03T10:06:09Z,2019-09-03T10:06:10Z,MERGED,True,81,16,2,https://github.com/andrei-pavel,[🐛 FIX] `unused parameter` warnings when including Session.hpp,2,[],https://github.com/sysrepo/sysrepo/pull/1560,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1560#issuecomment-527393812,"Continued #1558
@jktjkt
You'll also see the empty destructor turned into default constructors and destructors. This is a slight performance improvement. As you can see at https://godbolt.org/z/4SUN6l, defining them empty does result in a few extra instructions. The only design disadvantage is that you should define all structors in the header if you want consistency when they're not trivial, because when they are = default is only possible for the declaration of the structor.
What's better than this is actually omitting the structor when you don't need it which I did for the constructor.
Ping-pong 🏓 away","Hi,
@jktjkt seems to be busy but looking at the changes I believe they can be safely merged, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1584,2019-08-27T01:59:52Z,2019-09-02T09:54:58Z,2019-09-02T09:54:58Z,MERGED,True,2,2,1,https://github.com/shubengang,rp_dt_get_subtrees_wrapper return value,1,[],https://github.com/sysrepo/sysrepo/pull/1584,https://github.com/shubengang,1,https://github.com/sysrepo/sysrepo/pull/1584,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
when i used func ""get_subtrees"" to get list,if the list is null,log will printf a err msg.
Test case
when the func  ‘rp_dt_get_subtrees’ return a value(rc == SR_ERR_NOT_FOUND),we should use it, and not go into the last ‘else if’,so than will not pintf err log.
Closure
Put closes #1581 in your comment to auto-close the issue that pull request fixes.","Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
when i used func ""get_subtrees"" to get list,if the list is null,log will printf a err msg.
Test case
when the func  ‘rp_dt_get_subtrees’ return a value(rc == SR_ERR_NOT_FOUND),we should use it, and not go into the last ‘else if’,so than will not pintf err log.
Closure
Put closes #1581 in your comment to auto-close the issue that pull request fixes.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1584,2019-08-27T01:59:52Z,2019-09-02T09:54:58Z,2019-09-02T09:54:58Z,MERGED,True,2,2,1,https://github.com/shubengang,rp_dt_get_subtrees_wrapper return value,1,[],https://github.com/sysrepo/sysrepo/pull/1584,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1584#issuecomment-527084979,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
when i used func ""get_subtrees"" to get list,if the list is null,log will printf a err msg.
Test case
when the func  ‘rp_dt_get_subtrees’ return a value(rc == SR_ERR_NOT_FOUND),we should use it, and not go into the last ‘else if’,so than will not pintf err log.
Closure
Put closes #1581 in your comment to auto-close the issue that pull request fixes.","Hi,
okay, no problem, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1612,2019-09-21T13:25:23Z,2019-09-23T06:20:11Z,2019-09-23T06:20:11Z,MERGED,True,32,0,2,https://github.com/brchiu,Add uninstall and uninstall_with_repo capability,1,[],https://github.com/sysrepo/sysrepo/pull/1612,https://github.com/brchiu,1,https://github.com/sysrepo/sysrepo/pull/1612,Add make uninstall and make uninstall_with_repo capabilities as master branch does.,Add make uninstall and make uninstall_with_repo capabilities as master branch does.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1612,2019-09-21T13:25:23Z,2019-09-23T06:20:11Z,2019-09-23T06:20:11Z,MERGED,True,32,0,2,https://github.com/brchiu,Add uninstall and uninstall_with_repo capability,1,[],https://github.com/sysrepo/sysrepo/pull/1612,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1612#issuecomment-533972290,Add make uninstall and make uninstall_with_repo capabilities as master branch does.,"Hi,
okay, why not, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1619,2019-09-26T08:24:00Z,2019-09-26T08:45:15Z,2019-09-26T08:45:15Z,MERGED,True,13,19,1,https://github.com/michalvasko,Schema node traversal fix,4,[],https://github.com/sysrepo/sysrepo/pull/1619,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1619,"Description
Fixes schema node traversal.
Closure
Fixes #1608","Description
Fixes schema node traversal.
Closure
Fixes #1608",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1620,2019-09-26T10:19:23Z,2019-09-26T10:59:23Z,2019-09-26T10:59:23Z,MERGED,True,20,10,1,https://github.com/michalvasko,Data to schema patch transformation,1,[],https://github.com/sysrepo/sysrepo/pull/1620,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1620,"Description
Transform data to schema path before checking it when subscribing.
Closure
Fixes #1616","Description
Transform data to schema path before checking it when subscribing.
Closure
Fixes #1616",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1627,2019-10-02T13:33:21Z,2019-10-04T11:50:55Z,2019-10-04T11:50:55Z,MERGED,True,1,1,1,https://github.com/mwalle,INSTALL.md: correct libavl,3,[],https://github.com/sysrepo/sysrepo/pull/1627,https://github.com/mwalle,1,https://github.com/sysrepo/sysrepo/pull/1627,"The installation manual mentions the GNU avl library. This is wrong,
sysrepo depends on libavl by Wessel Dankers. The only source seems to be
the debian repository.","The installation manual mentions the GNU avl library. This is wrong,
sysrepo depends on libavl by Wessel Dankers. The only source seems to be
the debian repository.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1627,2019-10-02T13:33:21Z,2019-10-04T11:50:55Z,2019-10-04T11:50:55Z,MERGED,True,1,1,1,https://github.com/mwalle,INSTALL.md: correct libavl,3,[],https://github.com/sysrepo/sysrepo/pull/1627,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1627#issuecomment-538365252,"The installation manual mentions the GNU avl library. This is wrong,
sysrepo depends on libavl by Wessel Dankers. The only source seems to be
the debian repository.","Hi,
okay, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1628,2019-10-03T10:32:52Z,2019-10-03T11:15:20Z,2019-10-03T11:15:20Z,MERGED,True,12,11,1,https://github.com/michalvasko,Fix module enabled checking,1,[],https://github.com/sysrepo/sysrepo/pull/1628,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1628,"Description
Skip top-level schema-only nodes when checking that a module is enabled.
Closure
Fixes #1608","Description
Skip top-level schema-only nodes when checking that a module is enabled.
Closure
Fixes #1608",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1629,2019-10-04T01:50:12Z,2019-10-04T11:05:58Z,2019-10-04T15:47:44Z,MERGED,True,2,1,1,https://github.com/neheb,cl_subscription_manager: Remove usleep,1,[],https://github.com/sysrepo/sysrepo/pull/1629,https://github.com/neheb,1,https://github.com/sysrepo/sysrepo/pull/1629,"usleep was removed from POSIX 2008 and is optionally unavailable with
uClibc-ng.","usleep was removed from POSIX 2008 and is optionally unavailable with
uClibc-ng.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1629,2019-10-04T01:50:12Z,2019-10-04T11:05:58Z,2019-10-04T15:47:44Z,MERGED,True,2,1,1,https://github.com/neheb,cl_subscription_manager: Remove usleep,1,[],https://github.com/sysrepo/sysrepo/pull/1629,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1629#issuecomment-538353207,"usleep was removed from POSIX 2008 and is optionally unavailable with
uClibc-ng.","Hi,
okay, no problem, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1630,2019-10-08T20:09:09Z,2019-10-09T15:42:29Z,2019-10-09T15:42:29Z,MERGED,True,3,0,1,https://github.com/andrei-pavel,[🐛 FIX] prevent warning `Policy CMP0078 is not set`,5,[],https://github.com/sysrepo/sysrepo/pull/1630,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1630,"https://cmake.org/cmake/help/git-stage/policy/CMP0078.html
This policy was introduced in CMake version 3.13. CMake version 3.16.20191008-g6d132da warns when the policy is not set and uses OLD behavior. Use the cmake_policy() command to set it to OLD or NEW explicitly.

Explicitly sets OLD value which is implicitly set otherwise.
OLD is however deprecated.","https://cmake.org/cmake/help/git-stage/policy/CMP0078.html
This policy was introduced in CMake version 3.13. CMake version 3.16.20191008-g6d132da warns when the policy is not set and uses OLD behavior. Use the cmake_policy() command to set it to OLD or NEW explicitly.

Explicitly sets OLD value which is implicitly set otherwise.
OLD is however deprecated.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1630,2019-10-08T20:09:09Z,2019-10-09T15:42:29Z,2019-10-09T15:42:29Z,MERGED,True,3,0,1,https://github.com/andrei-pavel,[🐛 FIX] prevent warning `Policy CMP0078 is not set`,5,[],https://github.com/sysrepo/sysrepo/pull/1630,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1630#issuecomment-539875835,"https://cmake.org/cmake/help/git-stage/policy/CMP0078.html
This policy was introduced in CMake version 3.13. CMake version 3.16.20191008-g6d132da warns when the policy is not set and uses OLD behavior. Use the cmake_policy() command to set it to OLD or NEW explicitly.

Explicitly sets OLD value which is implicitly set otherwise.
OLD is however deprecated.","Hi,
in order for CMake version older than 3.13 not to get unknown policy warning, please change it in similar fashion as it is in libnetconf2. Thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1630,2019-10-08T20:09:09Z,2019-10-09T15:42:29Z,2019-10-09T15:42:29Z,MERGED,True,3,0,1,https://github.com/andrei-pavel,[🐛 FIX] prevent warning `Policy CMP0078 is not set`,5,[],https://github.com/sysrepo/sysrepo/pull/1630,https://github.com/andrei-pavel,3,https://github.com/sysrepo/sysrepo/pull/1630#issuecomment-540018884,"https://cmake.org/cmake/help/git-stage/policy/CMP0078.html
This policy was introduced in CMake version 3.13. CMake version 3.16.20191008-g6d132da warns when the policy is not set and uses OLD behavior. Use the cmake_policy() command to set it to OLD or NEW explicitly.

Explicitly sets OLD value which is implicitly set otherwise.
OLD is however deprecated.",Done & it compiles with cmake 3.13.4.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1631,2019-10-08T20:09:15Z,2019-10-09T07:18:20Z,2019-10-09T07:18:20Z,MERGED,True,3,1,1,https://github.com/andrei-pavel,[🐛 FIX] allow setting TEST_REPOSITORY_LOC,3,[],https://github.com/sysrepo/sysrepo/pull/1631,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1631,"Before, changes caused by -DTEST_REPOSITORY_LOC would just be overwritten by the set(). This allows the person building sysrepo to specify a different TEST_REPOSITORY_LOC.
Could also be the case for the other variables like TEST_SCHEMA_SEARCH_DIR, haven't tested for them. I don't know if you want any of these to be editable. I needed TEST_REPOSITORY_LOC to point to REPOSITORY_LOC which was someplace different than default TEST_REPOSITORY_LOC, but I guess it's not that important.","Before, changes caused by -DTEST_REPOSITORY_LOC would just be overwritten by the set(). This allows the person building sysrepo to specify a different TEST_REPOSITORY_LOC.
Could also be the case for the other variables like TEST_SCHEMA_SEARCH_DIR, haven't tested for them. I don't know if you want any of these to be editable. I needed TEST_REPOSITORY_LOC to point to REPOSITORY_LOC which was someplace different than default TEST_REPOSITORY_LOC, but I guess it's not that important.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1631,2019-10-08T20:09:15Z,2019-10-09T07:18:20Z,2019-10-09T07:18:20Z,MERGED,True,3,1,1,https://github.com/andrei-pavel,[🐛 FIX] allow setting TEST_REPOSITORY_LOC,3,[],https://github.com/sysrepo/sysrepo/pull/1631,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1631#issuecomment-539872629,"Before, changes caused by -DTEST_REPOSITORY_LOC would just be overwritten by the set(). This allows the person building sysrepo to specify a different TEST_REPOSITORY_LOC.
Could also be the case for the other variables like TEST_SCHEMA_SEARCH_DIR, haven't tested for them. I don't know if you want any of these to be editable. I needed TEST_REPOSITORY_LOC to point to REPOSITORY_LOC which was someplace different than default TEST_REPOSITORY_LOC, but I guess it's not that important.","Hi,
okay, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1632,2019-10-08T20:09:19Z,2019-10-09T06:44:23Z,2019-10-09T06:44:23Z,MERGED,True,2,0,1,https://github.com/andrei-pavel,"[🐛 FIX] prevent warning `""__USE_XOPEN"" redefined`",2,[],https://github.com/sysrepo/sysrepo/pull/1632,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1632,Just a pesky warning solved with no side effects. Define symbol only if it is not defined.,Just a pesky warning solved with no side effects. Define symbol only if it is not defined.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1632,2019-10-08T20:09:19Z,2019-10-09T06:44:23Z,2019-10-09T06:44:23Z,MERGED,True,2,0,1,https://github.com/andrei-pavel,"[🐛 FIX] prevent warning `""__USE_XOPEN"" redefined`",2,[],https://github.com/sysrepo/sysrepo/pull/1632,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1632#issuecomment-539861335,Just a pesky warning solved with no side effects. Define symbol only if it is not defined.,"Hi,
no problem.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1634,2019-10-10T06:41:29Z,2019-10-10T07:01:03Z,2019-10-10T07:01:04Z,MERGED,True,10,0,1,https://github.com/andrei-pavel,"[🐛 FIX] cmake policy warnings: CMP0075, CMP0086",1,[],https://github.com/sysrepo/sysrepo/pull/1634,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1634,"Hello,
Similar to #1630. While this doesn't solve the deprecation, it's important to me to have clean build output so that I can solve future warnings which might cause actual problems. What do you think?
Regards,
Andrei","Hello,
Similar to #1630. While this doesn't solve the deprecation, it's important to me to have clean build output so that I can solve future warnings which might cause actual problems. What do you think?
Regards,
Andrei",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1634,2019-10-10T06:41:29Z,2019-10-10T07:01:03Z,2019-10-10T07:01:04Z,MERGED,True,10,0,1,https://github.com/andrei-pavel,"[🐛 FIX] cmake policy warnings: CMP0075, CMP0086",1,[],https://github.com/sysrepo/sysrepo/pull/1634,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1634#issuecomment-540419694,"Hello,
Similar to #1630. While this doesn't solve the deprecation, it's important to me to have clean build output so that I can solve future warnings which might cause actual problems. What do you think?
Regards,
Andrei","Hi,
sure, if those warnings bother you.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1636,2019-10-10T08:49:48Z,2019-10-10T13:06:08Z,2019-10-10T13:06:08Z,CLOSED,False,18,18,2,https://github.com/andrei-pavel,[👌 IMPROVE] replace deprecated readdir_r() with readdir(),1,[],https://github.com/sysrepo/sysrepo/pull/1636,https://github.com/andrei-pavel,1,https://github.com/sysrepo/sysrepo/pull/1636,"Tested on Linux with glibc 2.30 with a custom sysrepo subscriber while editing configuration in sysrepocfg.
Reasons for why readdir_r() is deprecated: http://man7.org/linux/man-pages/man3/readdir_r.3.html#DESCRIPTION","Tested on Linux with glibc 2.30 with a custom sysrepo subscriber while editing configuration in sysrepocfg.
Reasons for why readdir_r() is deprecated: http://man7.org/linux/man-pages/man3/readdir_r.3.html#DESCRIPTION",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1636,2019-10-10T08:49:48Z,2019-10-10T13:06:08Z,2019-10-10T13:06:08Z,CLOSED,False,18,18,2,https://github.com/andrei-pavel,[👌 IMPROVE] replace deprecated readdir_r() with readdir(),1,[],https://github.com/sysrepo/sysrepo/pull/1636,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1636#issuecomment-540484502,"Tested on Linux with glibc 2.30 with a custom sysrepo subscriber while editing configuration in sysrepocfg.
Reasons for why readdir_r() is deprecated: http://man7.org/linux/man-pages/man3/readdir_r.3.html#DESCRIPTION","Hi,
if it happens that one directory is being read by 2 threads, I believe it is preferable to use readdir_r despite the issues it has (which do not seem that critical to me) and you cannot guarantee it won't happen.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1636,2019-10-10T08:49:48Z,2019-10-10T13:06:08Z,2019-10-10T13:06:08Z,CLOSED,False,18,18,2,https://github.com/andrei-pavel,[👌 IMPROVE] replace deprecated readdir_r() with readdir(),1,[],https://github.com/sysrepo/sysrepo/pull/1636,https://github.com/andrei-pavel,3,https://github.com/sysrepo/sysrepo/pull/1636#issuecomment-540521952,"Tested on Linux with glibc 2.30 with a custom sysrepo subscriber while editing configuration in sysrepocfg.
Reasons for why readdir_r() is deprecated: http://man7.org/linux/man-pages/man3/readdir_r.3.html#DESCRIPTION",👍 I agree. You can close this.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1638,2019-10-10T13:07:28Z,2019-10-10T13:26:16Z,2019-10-10T13:26:17Z,MERGED,True,5,1,1,https://github.com/mwalle,fix systemd service installation routine,2,[],https://github.com/sysrepo/sysrepo/pull/1638,https://github.com/mwalle,1,https://github.com/sysrepo/sysrepo/pull/1638,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1643,2019-10-18T06:44:32Z,2019-10-18T07:01:34Z,2019-10-18T07:01:34Z,MERGED,True,3,1,1,https://github.com/michalvasko,Update enabled event description,1,[],https://github.com/sysrepo/sysrepo/pull/1643,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1643,"Description
Clarify SR_EV_ENABLED event behaviour.
Closure
Fixes #1641","Description
Clarify SR_EV_ENABLED event behaviour.
Closure
Fixes #1641",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1648,2019-10-22T08:38:47Z,2019-10-22T08:45:45Z,2019-10-22T14:32:08Z,MERGED,True,9,4,1,https://github.com/pieterlexis,Split the sr_error_info_t struct,1,[],https://github.com/sysrepo/sysrepo/pull/1648,https://github.com/pieterlexis,1,https://github.com/sysrepo/sysrepo/pull/1648,"Description
While working on a Golang wrapper for sysrepo, I noticed that the github.com/xlab/c-for-go tool does not handle struct definitions inside struct definitions. Although a deficiency in that tool, this change does not affect sysrepo usage.","Description
While working on a Golang wrapper for sysrepo, I noticed that the github.com/xlab/c-for-go tool does not handle struct definitions inside struct definitions. Although a deficiency in that tool, this change does not affect sysrepo usage.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1648,2019-10-22T08:38:47Z,2019-10-22T08:45:45Z,2019-10-22T14:32:08Z,MERGED,True,9,4,1,https://github.com/pieterlexis,Split the sr_error_info_t struct,1,[],https://github.com/sysrepo/sysrepo/pull/1648,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1648#issuecomment-544863615,"Description
While working on a Golang wrapper for sysrepo, I noticed that the github.com/xlab/c-for-go tool does not handle struct definitions inside struct definitions. Although a deficiency in that tool, this change does not affect sysrepo usage.","Hi,
no problem, merging. And thanks for working on the wrapper!
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1660,2019-11-04T11:25:25Z,2019-11-04T12:24:40Z,2019-11-04T12:24:40Z,MERGED,True,2,2,2,https://github.com/michalvasko,Valid characters for turing-machine RPC example,1,[],https://github.com/sysrepo/sysrepo/pull/1660,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1660,"Description
Use valid characters for turing-machine RPC example.
Closure
Fixes #1659","Description
Use valid characters for turing-machine RPC example.
Closure
Fixes #1659",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1664,2019-11-05T11:48:39Z,2019-11-05T13:20:56Z,2019-11-05T13:21:04Z,MERGED,True,39,39,1,https://github.com/maggie450,Fix Memory leak in python SWIG callback (dp_get_items etc) (#1657),1,[],https://github.com/sysrepo/sysrepo/pull/1664,https://github.com/maggie450,1,https://github.com/sysrepo/sysrepo/pull/1664,"Description
Fix Memory leak in python SWIG callback (dp_get_items etc) (#1657)
Confusion arose from last argument in SWIG_NewPointerObj which referenced a pointer-conversion #define
(#define SWIG_POINTER_DISOWN 0x1)
but was being interpreted as a new pointer object #define
(#define SWIG_POINTER_OWN 0x1)
This means it is necessary to decrement the reference after finish using the new object.
Added the DECREF and tidied the logic a little
Test case
Memory use of python process that subscribed callback does not increase as get_item requests are made.
Closure
Closes #1657","Description
Fix Memory leak in python SWIG callback (dp_get_items etc) (#1657)
Confusion arose from last argument in SWIG_NewPointerObj which referenced a pointer-conversion #define
(#define SWIG_POINTER_DISOWN 0x1)
but was being interpreted as a new pointer object #define
(#define SWIG_POINTER_OWN 0x1)
This means it is necessary to decrement the reference after finish using the new object.
Added the DECREF and tidied the logic a little
Test case
Memory use of python process that subscribed callback does not increase as get_item requests are made.
Closure
Closes #1657",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1664,2019-11-05T11:48:39Z,2019-11-05T13:20:56Z,2019-11-05T13:21:04Z,MERGED,True,39,39,1,https://github.com/maggie450,Fix Memory leak in python SWIG callback (dp_get_items etc) (#1657),1,[],https://github.com/sysrepo/sysrepo/pull/1664,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1664#issuecomment-549819847,"Description
Fix Memory leak in python SWIG callback (dp_get_items etc) (#1657)
Confusion arose from last argument in SWIG_NewPointerObj which referenced a pointer-conversion #define
(#define SWIG_POINTER_DISOWN 0x1)
but was being interpreted as a new pointer object #define
(#define SWIG_POINTER_OWN 0x1)
This means it is necessary to decrement the reference after finish using the new object.
Added the DECREF and tidied the logic a little
Test case
Memory use of python process that subscribed callback does not increase as get_item requests are made.
Closure
Closes #1657","Hi,
thanks, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1672,2019-11-11T20:09:54Z,2019-11-12T07:33:14Z,2019-11-12T07:33:14Z,MERGED,True,1,1,1,https://github.com/barbarost,sub shm CHANGE check errno after select only when ret = -1,1,[],https://github.com/sysrepo/sysrepo/pull/1672,https://github.com/barbarost,1,https://github.com/sysrepo/sysrepo/pull/1672,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1672,2019-11-11T20:09:54Z,2019-11-12T07:33:14Z,2019-11-12T07:33:14Z,MERGED,True,1,1,1,https://github.com/barbarost,sub shm CHANGE check errno after select only when ret = -1,1,[],https://github.com/sysrepo/sysrepo/pull/1672,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1672#issuecomment-552770988,,"Hi,
you are right, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1682,2019-11-15T13:25:59Z,2019-11-15T13:49:51Z,2019-11-15T13:49:51Z,MERGED,True,1,1,1,https://github.com/michalvasko,Require only needed permissions when reading data,1,[],https://github.com/sysrepo/sysrepo/pull/1682,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1682,"Description
Do not open data files with RDWR capabilities if they are not required.
Closure
Fixes #1669","Description
Do not open data files with RDWR capabilities if they are not required.
Closure
Fixes #1669",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1687,2019-11-27T09:30:54Z,2019-12-04T11:01:42Z,2019-12-04T11:01:42Z,MERGED,True,4056,1,28,https://github.com/lpaulic,Sysrepo SWIG Python 3 bindings,66,[],https://github.com/sysrepo/sysrepo/pull/1687,https://github.com/lpaulic,1,https://github.com/sysrepo/sysrepo/pull/1687,"Description
Add SWIG Python 3 binding including updated tests.","Description
Add SWIG Python 3 binding including updated tests.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1692,2019-12-02T15:46:29Z,2019-12-03T14:48:14Z,2019-12-03T14:48:14Z,MERGED,True,18,5,2,https://github.com/michalvasko,BUGFIX action nacm check fixed,2,[],https://github.com/sysrepo/sysrepo/pull/1692,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1692,"Description
Actions were not checked correctly in NACM.
Closure
Fixes #1688","Description
Actions were not checked correctly in NACM.
Closure
Fixes #1688",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1696,2019-12-05T20:03:08Z,2019-12-05T20:10:46Z,2019-12-05T20:10:46Z,CLOSED,False,3,1,1,https://github.com/msardara,Check if BUILD_CPP_EXAMPLES is set before including examples folder.,1,[],https://github.com/sysrepo/sysrepo/pull/1696,https://github.com/msardara,1,https://github.com/sysrepo/sysrepo/pull/1696,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
Check for building examples in CMakeLists.txt missing.","Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
Check for building examples in CMakeLists.txt missing.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1698,2019-12-06T12:26:04Z,2019-12-09T08:39:10Z,2019-12-09T08:39:10Z,MERGED,True,4,1,1,https://github.com/msardara,Enable/disable build of examples.,2,[],https://github.com/sysrepo/sysrepo/pull/1698,https://github.com/msardara,1,https://github.com/sysrepo/sysrepo/pull/1698,"Description
This PR allows to conditionally enable/disable the building of examples.
Closure
This closes #1697","Description
This PR allows to conditionally enable/disable the building of examples.
Closure
This closes #1697",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1698,2019-12-06T12:26:04Z,2019-12-09T08:39:10Z,2019-12-09T08:39:10Z,MERGED,True,4,1,1,https://github.com/msardara,Enable/disable build of examples.,2,[],https://github.com/sysrepo/sysrepo/pull/1698,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1698#issuecomment-563124608,"Description
This PR allows to conditionally enable/disable the building of examples.
Closure
This closes #1697","Hi,
okay, merging after a small change.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/borna-blazevic,1,https://github.com/sysrepo/sysrepo/pull/1700,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-563940306,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi,
could you please continue with the CMake structure that I have created? There may be some changes required but I still think the only CMakeLists.txt that needs to be modified is the Python-specific one in sysrepo/bindings/python/.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/lpaulic,3,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564090232,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.",While working on the test we found out that the Subscription::additional_cleanup function does not work as intended. SWIG can not override functions that C++ uses internally. Because of this the unsubscribe was extended in SWIG in that way that it does the same thing as in C++ but the additional_cleanup functions is embedded in  the SWIG extended function.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/borna-blazevic,4,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564090272,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi,

Sorry, I did not see the comment, It's done now.

Regards,
Borna
…
On Tue, Dec 10, 2019 at 10:16 AM Michal Vasko ***@***.***> wrote:
 Hi,
 could you please continue with the CMake structure that I have created?
 There may be some changes required but I still think the only
 CMakeLists.txt that needs to be modified is the Python-specific one in
 sysrepo/bindings/python/.

 Regards,
 Michal

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1700?email_source=notifications&email_token=AM4HHEYZEYNFK3FAL3XKCBLQX5M6RA5CNFSM4JYKGCJKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGOQXUQ#issuecomment-563940306>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AM4HHEYQHJRN2DDIR3JB7ITQX5M6RANCNFSM4JYKGCJA>
 .",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/lpaulic,5,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564591852,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","All test except NotificationTest.py and SubscriptionTest.py are working. These two fail because of the libyang error that occurs while installing ietf-interfaces, ietf-ip, iana-if-type.
These two test are commented for now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/lpaulic,6,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564876898,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.",The issue with the NotificationTest.py and SubscriptionTest.py are fixed. All tests should be working now.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564916870,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi,
I have fixed the test macro (please merge current devel) and when I tried running all the tests with this pull request changes, 2 failed (log attached) but I think it should be easy to fix. Do you have different output, does it work for you?
Regards,
Michal
EDIT: Log file fixed.
test.log",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/lpaulic,8,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564931048,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi Michal,
The tests.log file is empty I don't see anything.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/michalvasko,9,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564940216,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi,
sorry about that, did not paste the content.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/lpaulic,10,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564944699,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi Michal,
I have created a docker file, cloned sysrepo (devel fork) and all sysrepo dependencies. Then I ran the Python tests manually and all of them passed.
What tests have failed in your case?
Regards,
Luka",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/michalvasko,11,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564948093,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi Luka,
the problem may be exactly that you run them manually and not using ctest so maybe the CMakeLists.txt (ADD_PYTHON_TEST macro) needs a fix. The failing tests can be seen in the log I posted previously.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/lpaulic,12,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-564957367,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi Michal,
I have tried running the test with ctest and all test pass as expected.
Here is the output of the ctests command.
ctest.log
Regards,
Luka",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/michalvasko,13,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-565003025,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi Luka,
okay, it seems we are finally getting somewhere. After a bit of testing I learned that the problem was that the tests always use the installed sysrepo python bindings. When I first installed the bindings from this pull request, all the tests passed.
So, please fix this so that the bindings form the repository are always used, it will probably be some path from [here] (that I have removed in a previous commit and I should not have), so just add is as the test property. You can easily test it by not having any sysrepo python bindings installed. I could probably do it myself, but I am still fixing some other bugs. I assume you have till tomorrow, I will not be finished sooner.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/lpaulic,14,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-565048096,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi Michal,
I have added the the path to sysrepo Python module as a test property and tested it. Everything should be working now.
Regards,
Luka",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1700,2019-12-09T14:35:27Z,2019-12-13T11:15:16Z,2019-12-13T11:15:16Z,MERGED,True,395,105,16,https://github.com/borna-blazevic,"Fix python bindings tests, make them install required modules",84,[],https://github.com/sysrepo/sysrepo/pull/1700,https://github.com/michalvasko,15,https://github.com/sysrepo/sysrepo/pull/1700#issuecomment-565403548,"Pull requests are mostly made to solve problems, add features and make other necessary adjustments.
Every pull request should be preceded by an issue which it is supposed to solve.
Issue is needed before pull request so community could discuss what actually should be done about it.
Developers have to know if applying the request would make (breaking) changes to API/ABI (versioning purposes), what kind of test it needs (QA), etc.
On making pull request, delete this paragraph (after reading it) and fill in following.
Use default coding style defined at CODINGSTYLE.md
Description
In short, why is this pull request created. What it solves and how.
Test case
Give us reason why you think it is correct solution.
For new code, make test which tests the addition.
For modifications, reference existing test.
Closure
Put closes #XXXX in your comment to auto-close the issue that pull request fixes.","Hi Luka,
sorry, I did not get to his until today. And after a minor fix that I committed into your branch it seems to work as it should, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1702,2019-12-10T07:05:43Z,2019-12-10T07:41:39Z,2019-12-10T07:49:16Z,MERGED,True,1,1,1,https://github.com/ishidawataru,c++ fix wrong order of argument in Session::set_error(),1,[],https://github.com/sysrepo/sysrepo/pull/1702,https://github.com/ishidawataru,1,https://github.com/sysrepo/sysrepo/pull/1702,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1702,2019-12-10T07:05:43Z,2019-12-10T07:41:39Z,2019-12-10T07:49:16Z,MERGED,True,1,1,1,https://github.com/ishidawataru,c++ fix wrong order of argument in Session::set_error(),1,[],https://github.com/sysrepo/sysrepo/pull/1702,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1702#issuecomment-563907552,,"Hi,
right, no way of allowing to use the variable arguments in C++.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1702,2019-12-10T07:05:43Z,2019-12-10T07:41:39Z,2019-12-10T07:49:16Z,MERGED,True,1,1,1,https://github.com/ishidawataru,c++ fix wrong order of argument in Session::set_error(),1,[],https://github.com/sysrepo/sysrepo/pull/1702,https://github.com/ishidawataru,3,https://github.com/sysrepo/sysrepo/pull/1702#issuecomment-563910051,,thanks for merging,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1708,2019-12-13T13:20:26Z,2019-12-13T13:29:56Z,2019-12-13T13:29:56Z,MERGED,True,1,1,1,https://github.com/michalvasko,Version bump to 0.7.9,1,[],https://github.com/sysrepo/sysrepo/pull/1708,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/1708,"Description
Forgotten version bump.","Description
Forgotten version bump.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1732,2020-01-02T09:03:18Z,2020-01-02T10:47:01Z,2020-01-02T10:47:01Z,MERGED,True,1,1,1,https://github.com/fredgan,plugin DOC fix the typo of oven,1,[],https://github.com/sysrepo/sysrepo/pull/1732,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/1732,I find that the oven plugin example command maybe a typo.,I find that the oven plugin example command maybe a typo.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1732,2020-01-02T09:03:18Z,2020-01-02T10:47:01Z,2020-01-02T10:47:01Z,MERGED,True,1,1,1,https://github.com/fredgan,plugin DOC fix the typo of oven,1,[],https://github.com/sysrepo/sysrepo/pull/1732,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1732#issuecomment-570173120,I find that the oven plugin example command maybe a typo.,"Hi,
yes, thanks, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1740,2020-01-07T21:31:14Z,2020-01-08T08:19:28Z,2020-01-08T08:19:29Z,MERGED,True,7,0,1,https://github.com/ffontaine,CMakelists.txt: link with atomic,2,[],https://github.com/sysrepo/sysrepo/pull/1740,https://github.com/ffontaine,1,https://github.com/sysrepo/sysrepo/pull/1740,"On some architectures, atomic binutils are provided by the libatomic
library from gcc. Linking with libatomic is therefore necessary,
otherwise the build fails with:
/home/buildroot/autobuild/instance-2/output-1/host/opt/ext-toolchain/bin/../lib/gcc/sparc-buildroot-linux-uclibc/7.4.0/../../../../sparc-buildroot-linux-uclibc/bin/ld: libsysrepo.so.0.7.8: undefined reference to `__atomic_fetch_add_4'

This is often for example the case on sparc v8 32 bits.
Fixes:

http://autobuild.buildroot.org/results/d807f3dc922a61e099a66de3bc340c018a86e150

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","On some architectures, atomic binutils are provided by the libatomic
library from gcc. Linking with libatomic is therefore necessary,
otherwise the build fails with:
/home/buildroot/autobuild/instance-2/output-1/host/opt/ext-toolchain/bin/../lib/gcc/sparc-buildroot-linux-uclibc/7.4.0/../../../../sparc-buildroot-linux-uclibc/bin/ld: libsysrepo.so.0.7.8: undefined reference to `__atomic_fetch_add_4'

This is often for example the case on sparc v8 32 bits.
Fixes:

http://autobuild.buildroot.org/results/d807f3dc922a61e099a66de3bc340c018a86e150

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1740,2020-01-07T21:31:14Z,2020-01-08T08:19:28Z,2020-01-08T08:19:29Z,MERGED,True,7,0,1,https://github.com/ffontaine,CMakelists.txt: link with atomic,2,[],https://github.com/sysrepo/sysrepo/pull/1740,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1740#issuecomment-571785601,"On some architectures, atomic binutils are provided by the libatomic
library from gcc. Linking with libatomic is therefore necessary,
otherwise the build fails with:
/home/buildroot/autobuild/instance-2/output-1/host/opt/ext-toolchain/bin/../lib/gcc/sparc-buildroot-linux-uclibc/7.4.0/../../../../sparc-buildroot-linux-uclibc/bin/ld: libsysrepo.so.0.7.8: undefined reference to `__atomic_fetch_add_4'

This is often for example the case on sparc v8 32 bits.
Fixes:

http://autobuild.buildroot.org/results/d807f3dc922a61e099a66de3bc340c018a86e150

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Codecov Report

Merging #1740 into devel will decrease coverage by 0.22%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1740      +/-   ##
==========================================
- Coverage   62.31%   62.09%   -0.22%     
==========================================
  Files          15       15              
  Lines       13273    13206      -67     
  Branches     3129     3110      -19     
==========================================
- Hits         8271     8200      -71     
- Misses       5002     5006       +4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1740,2020-01-07T21:31:14Z,2020-01-08T08:19:28Z,2020-01-08T08:19:29Z,MERGED,True,7,0,1,https://github.com/ffontaine,CMakelists.txt: link with atomic,2,[],https://github.com/sysrepo/sysrepo/pull/1740,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1740#issuecomment-571939639,"On some architectures, atomic binutils are provided by the libatomic
library from gcc. Linking with libatomic is therefore necessary,
otherwise the build fails with:
/home/buildroot/autobuild/instance-2/output-1/host/opt/ext-toolchain/bin/../lib/gcc/sparc-buildroot-linux-uclibc/7.4.0/../../../../sparc-buildroot-linux-uclibc/bin/ld: libsysrepo.so.0.7.8: undefined reference to `__atomic_fetch_add_4'

This is often for example the case on sparc v8 32 bits.
Fixes:

http://autobuild.buildroot.org/results/d807f3dc922a61e099a66de3bc340c018a86e150

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Hi,
okay, but I will merge it to devel, we are keeping master to reflect the latest release.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1755,2020-01-15T11:38:29Z,2020-01-16T15:27:25Z,2020-01-16T15:27:25Z,MERGED,True,275,0,4,https://github.com/lpaulic,depoly: add docker ubuntu 18.04 files for sysrepo-netopeer2,5,[],https://github.com/sysrepo/sysrepo/pull/1755,https://github.com/lpaulic,1,https://github.com/sysrepo/sysrepo/pull/1755,"Chagnes:

add Dockerfile and Dockerfile.devel for ubuntu 18.04
add supervisord.conf
add README.md

Add docker files to enable local build of Docker images for sysrep-netopeer2 testing. Images are prebuild and can be found on dockerhub","Chagnes:

add Dockerfile and Dockerfile.devel for ubuntu 18.04
add supervisord.conf
add README.md

Add docker files to enable local build of Docker images for sysrep-netopeer2 testing. Images are prebuild and can be found on dockerhub",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1755,2020-01-15T11:38:29Z,2020-01-16T15:27:25Z,2020-01-16T15:27:25Z,MERGED,True,275,0,4,https://github.com/lpaulic,depoly: add docker ubuntu 18.04 files for sysrepo-netopeer2,5,[],https://github.com/sysrepo/sysrepo/pull/1755,https://github.com/lpaulic,2,https://github.com/sysrepo/sysrepo/pull/1755#issuecomment-574647278,"Chagnes:

add Dockerfile and Dockerfile.devel for ubuntu 18.04
add supervisord.conf
add README.md

Add docker files to enable local build of Docker images for sysrep-netopeer2 testing. Images are prebuild and can be found on dockerhub","I will remove all the unecesery RUN commands that build from source. One question, where can I find the libyang v1.0 package to install. apt-get seems to install v0.16
Regards,
Luka",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1755,2020-01-15T11:38:29Z,2020-01-16T15:27:25Z,2020-01-16T15:27:25Z,MERGED,True,275,0,4,https://github.com/lpaulic,depoly: add docker ubuntu 18.04 files for sysrepo-netopeer2,5,[],https://github.com/sysrepo/sysrepo/pull/1755,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/1755#issuecomment-574655731,"Chagnes:

add Dockerfile and Dockerfile.devel for ubuntu 18.04
add supervisord.conf
add README.md

Add docker files to enable local build of Docker images for sysrep-netopeer2 testing. Images are prebuild and can be found on dockerhub","Codecov Report

Merging #1755 into devel will decrease coverage by 0.08%.
The diff coverage is n/a.

@@            Coverage Diff            @@
##           devel    #1755      +/-   ##
=========================================
- Coverage   63.1%   63.02%   -0.08%     
=========================================
  Files         15       15              
  Lines      13286    13300      +14     
  Branches    3140     3141       +1     
=========================================
- Hits        8384     8382       -2     
- Misses      4902     4918      +16",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1755,2020-01-15T11:38:29Z,2020-01-16T15:27:25Z,2020-01-16T15:27:25Z,MERGED,True,275,0,4,https://github.com/lpaulic,depoly: add docker ubuntu 18.04 files for sysrepo-netopeer2,5,[],https://github.com/sysrepo/sysrepo/pull/1755,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1755#issuecomment-574664415,"Chagnes:

add Dockerfile and Dockerfile.devel for ubuntu 18.04
add supervisord.conf
add README.md

Add docker files to enable local build of Docker images for sysrep-netopeer2 testing. Images are prebuild and can be found on dockerhub","Hi,
libyang packages are here, the same link as in the README.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1755,2020-01-15T11:38:29Z,2020-01-16T15:27:25Z,2020-01-16T15:27:25Z,MERGED,True,275,0,4,https://github.com/lpaulic,depoly: add docker ubuntu 18.04 files for sysrepo-netopeer2,5,[],https://github.com/sysrepo/sysrepo/pull/1755,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1755#issuecomment-575201598,"Chagnes:

add Dockerfile and Dockerfile.devel for ubuntu 18.04
add supervisord.conf
add README.md

Add docker files to enable local build of Docker images for sysrep-netopeer2 testing. Images are prebuild and can be found on dockerhub","Hi,
seems fine now, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1793,2020-01-29T11:55:52Z,2020-01-30T11:22:14Z,2020-01-30T11:22:14Z,MERGED,True,4,4,3,https://github.com/lpaulic,python3-bindings: SubscriptionTest.py increase sleep time,4,[],https://github.com/sysrepo/sysrepo/pull/1793,https://github.com/lpaulic,1,https://github.com/sysrepo/sysrepo/pull/1793,"In order to fix the issue regarding Travis CI build test failure for the ARM 64 architecture, this quick fix is presented to solve the issue.","In order to fix the issue regarding Travis CI build test failure for the ARM 64 architecture, this quick fix is presented to solve the issue.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1793,2020-01-29T11:55:52Z,2020-01-30T11:22:14Z,2020-01-30T11:22:14Z,MERGED,True,4,4,3,https://github.com/lpaulic,python3-bindings: SubscriptionTest.py increase sleep time,4,[],https://github.com/sysrepo/sysrepo/pull/1793,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1793#issuecomment-580158497,"In order to fix the issue regarding Travis CI build test failure for the ARM 64 architecture, this quick fix is presented to solve the issue.","Codecov Report

Merging #1793 into devel will increase coverage by 0.02%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1793      +/-   ##
==========================================
+ Coverage   63.64%   63.66%   +0.02%     
==========================================
  Files          15       15              
  Lines       13421    13423       +2     
  Branches     3165     3163       -2     
==========================================
+ Hits         8541     8545       +4     
+ Misses       4880     4878       -2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1793,2020-01-29T11:55:52Z,2020-01-30T11:22:14Z,2020-01-30T11:22:14Z,MERGED,True,4,4,3,https://github.com/lpaulic,python3-bindings: SubscriptionTest.py increase sleep time,4,[],https://github.com/sysrepo/sysrepo/pull/1793,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1793#issuecomment-580191583,"In order to fix the issue regarding Travis CI build test failure for the ARM 64 architecture, this quick fix is presented to solve the issue.","Hi,
okay, it seems the builds are working again, there were not yesterday. Anyway, did you test it without the byte code? What was the timeout required then?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1793,2020-01-29T11:55:52Z,2020-01-30T11:22:14Z,2020-01-30T11:22:14Z,MERGED,True,4,4,3,https://github.com/lpaulic,python3-bindings: SubscriptionTest.py increase sleep time,4,[],https://github.com/sysrepo/sysrepo/pull/1793,https://github.com/lpaulic,4,https://github.com/sysrepo/sysrepo/pull/1793#issuecomment-580195446,"In order to fix the issue regarding Travis CI build test failure for the ARM 64 architecture, this quick fix is presented to solve the issue.","Hi Michal,
I have tested it without the bytecode and then with and without the sleep timeouts the test seem to get stuck and the ctest freezes. I have removed the option PYTHONDONTWRITEBYTECODE=1 and than all python tests, with the sleep duration increases, work as expeced.
Is this suitable for now or is do you know a better way to dispose the bytcode that gets generated during the execution of the python tests?
Regards,
Luka",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1793,2020-01-29T11:55:52Z,2020-01-30T11:22:14Z,2020-01-30T11:22:14Z,MERGED,True,4,4,3,https://github.com/lpaulic,python3-bindings: SubscriptionTest.py increase sleep time,4,[],https://github.com/sysrepo/sysrepo/pull/1793,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1793#issuecomment-580198586,"In order to fix the issue regarding Travis CI build test failure for the ARM 64 architecture, this quick fix is presented to solve the issue.","Hi Luka,
as the comment says, I have added the flag just so that no files are written into the repository, which the Python tests do otherwise but it is no big deal. What I would really like is for the notification test, for example, not to take almost 10s but I guess that could happen only once all the sleeps are removed. So, just please keep the byte code flag there, just comment it out with information that it causes the Python tests to not work, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/sriramkandukuri,1,https://github.com/sysrepo/sysrepo/pull/1826,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1826#issuecomment-588050645,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","Codecov Report

Merging #1826 into devel will decrease coverage by 0.21%.
The diff coverage is 0%.

@@            Coverage Diff             @@
##            devel    #1826      +/-   ##
==========================================
- Coverage   62.88%   62.67%   -0.21%     
==========================================
  Files          15       15              
  Lines       13597    13645      +48     
  Branches     3207     3216       +9     
==========================================
+ Hits         8550     8551       +1     
- Misses       5047     5094      +47",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1826#issuecomment-590257098,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","Hi,
this seems to me is a reasonable idea and I have nothing against adding it into sysrepo with some adjustments. Firstly, please move the functions to utils/values.c and utils/values.h because that is where they belong. Additionally, please rename them to sr_tree_to_val and sr_tree_to_values and remove the session parameter, it is redundant. Thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/sriramkandukuri,4,https://github.com/sysrepo/sysrepo/pull/1826#issuecomment-590681173,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","Hi Michal,
Thanks for considering the changes.
Session is needed for returning error info. Please correct me.
Thanks & regards,
Sriram.K",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1826#issuecomment-590876459,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","Hi Sriram,
yes, but I think these functions will be just fine with returning only the error code, there are not that many error situations. The additional argument is not worth it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/sriramkandukuri,6,https://github.com/sysrepo/sysrepo/pull/1826#issuecomment-590898029,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","Hi Michal,
I have updated as per your review comments and resolved some unwanted commits.
Please review again.
Thanks & Regards,
Sriram.K",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/1826#issuecomment-590933827,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","Hi Sriram,
these are fairly minor problems that I can fix myself, if you want, it is up to you.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/sriramkandukuri,8,https://github.com/sysrepo/sysrepo/pull/1826#issuecomment-590937468,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","Hi Michal,
I will fix and update the pull request.
Thanks & Regards,
Sriram.K",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1826,2020-02-19T05:52:42Z,2020-02-26T12:26:41Z,2020-02-26T12:26:41Z,MERGED,True,112,0,2,https://github.com/sriramkandukuri,Two new APIs provided to get data from full data tree in sr_val_t.,1,[],https://github.com/sysrepo/sysrepo/pull/1826,https://github.com/michalvasko,9,https://github.com/sysrepo/sysrepo/pull/1826#issuecomment-591400215,"It is suggested to use sr_get_data to get data tree in libyang node type for better performance.
In implementations based on old sysrepo sr_val_t is used extensively.
Getting sr_val_t values from existing sr_get_item(s) is costly than getting data from sr_get_data.
To achive performance from sr_get_data and also to provide data
in sr_val_t type added new APIs sr_get_config_item(s)
Any subscriber or plugin who uses sr_get_item(s) earlier, can use these APIs with
a pre build data tree for better performance. Getting whole data tree at start of any
transaction and reusing the same with these APIs improve performance multifold.","Okay, I have no more objections, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1834,2020-02-25T14:55:48Z,2020-02-25T15:54:09Z,2020-02-25T15:54:09Z,MERGED,True,401,188,10,https://github.com/borna-blazevic,Python bindings test rework,6,[],https://github.com/sysrepo/sysrepo/pull/1834,https://github.com/borna-blazevic,1,https://github.com/sysrepo/sysrepo/pull/1834,Removed sleep and timeout from tests. Added a way to ensure environment is correct before eunning each test case.,Removed sleep and timeout from tests. Added a way to ensure environment is correct before eunning each test case.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1834,2020-02-25T14:55:48Z,2020-02-25T15:54:09Z,2020-02-25T15:54:09Z,MERGED,True,401,188,10,https://github.com/borna-blazevic,Python bindings test rework,6,[],https://github.com/sysrepo/sysrepo/pull/1834,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1834#issuecomment-590912730,Removed sleep and timeout from tests. Added a way to ensure environment is correct before eunning each test case.,"Codecov Report

Merging #1834 into devel will decrease coverage by 0.76%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1834      +/-   ##
==========================================
- Coverage   63.65%   62.89%   -0.76%     
==========================================
  Files          15       15              
  Lines       13591    13588       -3     
  Branches     3206     3204       -2     
==========================================
- Hits         8650     8545     -105     
- Misses       4941     5043     +102",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1848,2020-03-06T14:33:30Z,2020-03-07T07:45:58Z,2020-03-07T07:45:59Z,CLOSED,False,1,0,1,https://github.com/johnbeckettn2e,python binding BUGFIX global_loop should run more than once,1,[],https://github.com/sysrepo/sysrepo/pull/1848,https://github.com/johnbeckettn2e,1,https://github.com/sysrepo/sysrepo/pull/1848,"Python environments such as jupyter notebooks allow modifying the
code on the fly, injecting a ctrl-c and re-running the same piece
of code.
The global_loop function should reset exit_application so that the
loop will not exit immediately in-case another call to global_loop
is made.","Python environments such as jupyter notebooks allow modifying the
code on the fly, injecting a ctrl-c and re-running the same piece
of code.
The global_loop function should reset exit_application so that the
loop will not exit immediately in-case another call to global_loop
is made.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1848,2020-03-06T14:33:30Z,2020-03-07T07:45:58Z,2020-03-07T07:45:59Z,CLOSED,False,1,0,1,https://github.com/johnbeckettn2e,python binding BUGFIX global_loop should run more than once,1,[],https://github.com/sysrepo/sysrepo/pull/1848,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1848#issuecomment-595797570,"Python environments such as jupyter notebooks allow modifying the
code on the fly, injecting a ctrl-c and re-running the same piece
of code.
The global_loop function should reset exit_application so that the
loop will not exit immediately in-case another call to global_loop
is made.","Codecov Report

Merging #1848 into master will not change coverage.
The diff coverage is n/a.

@@           Coverage Diff           @@
##           master    #1848   +/-   ##
=======================================
  Coverage   62.91%   62.91%           
=======================================
  Files          15       15           
  Lines       13509    13509           
  Branches     3188     3188           
=======================================
  Hits         8499     8499           
  Misses       5010     5010",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1848,2020-03-06T14:33:30Z,2020-03-07T07:45:58Z,2020-03-07T07:45:59Z,CLOSED,False,1,0,1,https://github.com/johnbeckettn2e,python binding BUGFIX global_loop should run more than once,1,[],https://github.com/sysrepo/sysrepo/pull/1848,https://github.com/johnbeckettn2e,3,https://github.com/sysrepo/sysrepo/pull/1848#issuecomment-596058363,"Python environments such as jupyter notebooks allow modifying the
code on the fly, injecting a ctrl-c and re-running the same piece
of code.
The global_loop function should reset exit_application so that the
loop will not exit immediately in-case another call to global_loop
is made.",this should have been raised against devel pull request 1850 rasied,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1850,2020-03-07T07:44:29Z,2020-03-09T07:57:59Z,2020-03-09T07:57:59Z,MERGED,True,1,0,1,https://github.com/johnbeckettn2e,python binding BUGFIX global_loop should run more than once,1,[],https://github.com/sysrepo/sysrepo/pull/1850,https://github.com/johnbeckettn2e,1,https://github.com/sysrepo/sysrepo/pull/1850,"Python environments such as jupyter notebooks allow modifying the
code on the fly, injecting a ctrl-c and re-running the same piece
of code.
The global_loop function should reset exit_application so that the
loop will not exit immediately in-case another call to global_loop
is made.","Python environments such as jupyter notebooks allow modifying the
code on the fly, injecting a ctrl-c and re-running the same piece
of code.
The global_loop function should reset exit_application so that the
loop will not exit immediately in-case another call to global_loop
is made.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1850,2020-03-07T07:44:29Z,2020-03-09T07:57:59Z,2020-03-09T07:57:59Z,MERGED,True,1,0,1,https://github.com/johnbeckettn2e,python binding BUGFIX global_loop should run more than once,1,[],https://github.com/sysrepo/sysrepo/pull/1850,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1850#issuecomment-596058699,"Python environments such as jupyter notebooks allow modifying the
code on the fly, injecting a ctrl-c and re-running the same piece
of code.
The global_loop function should reset exit_application so that the
loop will not exit immediately in-case another call to global_loop
is made.","Codecov Report

Merging #1850 into devel will decrease coverage by 0.01%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #1850      +/-   ##
==========================================
- Coverage   63.87%   63.87%   -0.01%     
==========================================
  Files          15       15              
  Lines       13591    13591              
  Branches     3200     3200              
==========================================
- Hits         8681     8680       -1     
- Misses       4910     4911       +1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1850,2020-03-07T07:44:29Z,2020-03-09T07:57:59Z,2020-03-09T07:57:59Z,MERGED,True,1,0,1,https://github.com/johnbeckettn2e,python binding BUGFIX global_loop should run more than once,1,[],https://github.com/sysrepo/sysrepo/pull/1850,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1850#issuecomment-596381361,"Python environments such as jupyter notebooks allow modifying the
code on the fly, injecting a ctrl-c and re-running the same piece
of code.
The global_loop function should reset exit_application so that the
loop will not exit immediately in-case another call to global_loop
is made.","Hi,
okay, no problem.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1857,2020-03-11T19:04:48Z,2020-03-12T07:41:57Z,2020-03-12T07:41:57Z,MERGED,True,1,1,1,https://github.com/johnbeckettn2e,python3-bindings: fix rpc subscribe,1,[],https://github.com/sysrepo/sysrepo/pull/1857,https://github.com/johnbeckettn2e,1,https://github.com/sysrepo/sysrepo/pull/1857,"Potential fix for issue #1854
Looks like when renaming private_ctx to private_data part of the python binding was missed.
I've tested that using the c rpc_send_example /examples:oper that there is a callback with the following python:
import sysrepo as sr
module_name = ""examples""
rpc_path = ""/"" + module_name + "":oper""

def my_rpc_cb(cb_session, op_path, in_vals, evt, request_id, holder, private_data):
    print(in_vals)
    return sr.SR_ERR_OK

connection = sr.Connection()
session = sr.Session(connection, sr.SR_DS_RUNNING)
subscribe = sr.Subscribe(session)
subscribe.rpc_subscribe(rpc_path, my_rpc_cb)

sr.global_loop()","Potential fix for issue #1854
Looks like when renaming private_ctx to private_data part of the python binding was missed.
I've tested that using the c rpc_send_example /examples:oper that there is a callback with the following python:
import sysrepo as sr
module_name = ""examples""
rpc_path = ""/"" + module_name + "":oper""

def my_rpc_cb(cb_session, op_path, in_vals, evt, request_id, holder, private_data):
    print(in_vals)
    return sr.SR_ERR_OK

connection = sr.Connection()
session = sr.Session(connection, sr.SR_DS_RUNNING)
subscribe = sr.Subscribe(session)
subscribe.rpc_subscribe(rpc_path, my_rpc_cb)

sr.global_loop()",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1857,2020-03-11T19:04:48Z,2020-03-12T07:41:57Z,2020-03-12T07:41:57Z,MERGED,True,1,1,1,https://github.com/johnbeckettn2e,python3-bindings: fix rpc subscribe,1,[],https://github.com/sysrepo/sysrepo/pull/1857,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/1857#issuecomment-597824514,"Potential fix for issue #1854
Looks like when renaming private_ctx to private_data part of the python binding was missed.
I've tested that using the c rpc_send_example /examples:oper that there is a callback with the following python:
import sysrepo as sr
module_name = ""examples""
rpc_path = ""/"" + module_name + "":oper""

def my_rpc_cb(cb_session, op_path, in_vals, evt, request_id, holder, private_data):
    print(in_vals)
    return sr.SR_ERR_OK

connection = sr.Connection()
session = sr.Session(connection, sr.SR_DS_RUNNING)
subscribe = sr.Subscribe(session)
subscribe.rpc_subscribe(rpc_path, my_rpc_cb)

sr.global_loop()","Codecov Report

Merging #1857 into devel will not change coverage by %.
The diff coverage is n/a.

@@           Coverage Diff           @@
##            devel    #1857   +/-   ##
=======================================
  Coverage   63.89%   63.89%           
=======================================
  Files          15       15           
  Lines       13597    13597           
  Branches     3202     3202           
=======================================
  Hits         8687     8687           
  Misses       4910     4910",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1857,2020-03-11T19:04:48Z,2020-03-12T07:41:57Z,2020-03-12T07:41:57Z,MERGED,True,1,1,1,https://github.com/johnbeckettn2e,python3-bindings: fix rpc subscribe,1,[],https://github.com/sysrepo/sysrepo/pull/1857,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1857#issuecomment-598049026,"Potential fix for issue #1854
Looks like when renaming private_ctx to private_data part of the python binding was missed.
I've tested that using the c rpc_send_example /examples:oper that there is a callback with the following python:
import sysrepo as sr
module_name = ""examples""
rpc_path = ""/"" + module_name + "":oper""

def my_rpc_cb(cb_session, op_path, in_vals, evt, request_id, holder, private_data):
    print(in_vals)
    return sr.SR_ERR_OK

connection = sr.Connection()
session = sr.Session(connection, sr.SR_DS_RUNNING)
subscribe = sr.Subscribe(session)
subscribe.rpc_subscribe(rpc_path, my_rpc_cb)

sr.global_loop()","Hi,
you are right, thanks for looking into it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1871,2020-03-20T13:19:04Z,2020-04-01T10:08:05Z,2020-04-01T10:08:05Z,CLOSED,False,215,168,4,https://github.com/sriramkandukuri,New API for creating and update edit from ly_difflist.,1,[],https://github.com/sysrepo/sysrepo/pull/1871,https://github.com/sriramkandukuri,1,https://github.com/sysrepo/sysrepo/pull/1871,As per the discussion in #1867. Added new API for edit management.,As per the discussion in #1867. Added new API for edit management.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1907,2020-04-10T11:20:56Z,2020-04-15T12:17:11Z,2020-04-15T12:17:11Z,MERGED,True,120,0,1,https://github.com/fredgan,Add some testcases for lock,2,[],https://github.com/sysrepo/sysrepo/pull/1907,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/1907,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1907,2020-04-10T11:20:56Z,2020-04-15T12:17:11Z,2020-04-15T12:17:11Z,MERGED,True,120,0,1,https://github.com/fredgan,Add some testcases for lock,2,[],https://github.com/sysrepo/sysrepo/pull/1907,https://github.com/fredgan,2,https://github.com/sysrepo/sysrepo/pull/1907#issuecomment-612287022,,"I don't know why no trivis check triggered , and I also find some other like this #1612 #1692 #1698 #1670 and so on.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1907,2020-04-10T11:20:56Z,2020-04-15T12:17:11Z,2020-04-15T12:17:11Z,MERGED,True,120,0,1,https://github.com/fredgan,Add some testcases for lock,2,[],https://github.com/sysrepo/sysrepo/pull/1907,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1907#issuecomment-613291206,,"Never mind the travis problem, they are being run (and passed for your case) except they never finish because of a platform support in beta that seems to not work correctly, I will try to fix it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1907,2020-04-10T11:20:56Z,2020-04-15T12:17:11Z,2020-04-15T12:17:11Z,MERGED,True,120,0,1,https://github.com/fredgan,Add some testcases for lock,2,[],https://github.com/sysrepo/sysrepo/pull/1907,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/1907#issuecomment-614002292,,"Okay, now it looks fine, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1916,2020-04-14T20:13:25Z,2020-04-15T08:48:03Z,2020-04-17T15:11:19Z,MERGED,True,4,3,1,https://github.com/apropp-molex,build CHANGE selectively link librt,1,[],https://github.com/sysrepo/sysrepo/pull/1916,https://github.com/apropp-molex,1,https://github.com/sysrepo/sysrepo/pull/1916,"fixes #1898
Checks to see if librt exists and links as appropriate.","fixes #1898
Checks to see if librt exists and links as appropriate.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1916,2020-04-14T20:13:25Z,2020-04-15T08:48:03Z,2020-04-17T15:11:19Z,MERGED,True,4,3,1,https://github.com/apropp-molex,build CHANGE selectively link librt,1,[],https://github.com/sysrepo/sysrepo/pull/1916,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1916#issuecomment-613906435,"fixes #1898
Checks to see if librt exists and links as appropriate.","Seems fine, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1921,2020-04-16T07:51:43Z,2020-04-16T09:02:44Z,2020-04-16T09:02:44Z,MERGED,True,18,0,1,https://github.com/rjarry,Add editorconfig file,1,[],https://github.com/sysrepo/sysrepo/pull/1921,https://github.com/rjarry,1,https://github.com/sysrepo/sysrepo/pull/1921,"EditorConfig is a file format and collection of text editor plugins for maintaining consistent coding styles between different editors and IDEs.
Initialize the file following the current coding style in existing files.
In order for this file to be taken into account (unless they use an editor with built-in EditorConfig support), developers will have to install a plugin.
See the following links for more details.
https://editorconfig.org/
https://github.com/editorconfig/editorconfig-emacs
https://github.com/editorconfig/editorconfig-vim","EditorConfig is a file format and collection of text editor plugins for maintaining consistent coding styles between different editors and IDEs.
Initialize the file following the current coding style in existing files.
In order for this file to be taken into account (unless they use an editor with built-in EditorConfig support), developers will have to install a plugin.
See the following links for more details.
https://editorconfig.org/
https://github.com/editorconfig/editorconfig-emacs
https://github.com/editorconfig/editorconfig-vim",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1921,2020-04-16T07:51:43Z,2020-04-16T09:02:44Z,2020-04-16T09:02:44Z,MERGED,True,18,0,1,https://github.com/rjarry,Add editorconfig file,1,[],https://github.com/sysrepo/sysrepo/pull/1921,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1921#issuecomment-614515685,"EditorConfig is a file format and collection of text editor plugins for maintaining consistent coding styles between different editors and IDEs.
Initialize the file following the current coding style in existing files.
In order for this file to be taken into account (unless they use an editor with built-in EditorConfig support), developers will have to install a plugin.
See the following links for more details.
https://editorconfig.org/
https://github.com/editorconfig/editorconfig-emacs
https://github.com/editorconfig/editorconfig-vim","Hi,
okay I suppose, I have nothing against adding this small config file into the repo even though we are not using this tool.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1922,2020-04-16T07:53:05Z,2020-04-16T09:05:04Z,2020-04-16T09:05:05Z,MERGED,True,1,1,1,https://github.com/rjarry,Disable cwd searchdir in libyang context,1,[],https://github.com/sysrepo/sysrepo/pull/1922,https://github.com/rjarry,1,https://github.com/sysrepo/sysrepo/pull/1922,YANG models should only be searched in sysrepo YANG dir.,YANG models should only be searched in sysrepo YANG dir.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1922,2020-04-16T07:53:05Z,2020-04-16T09:05:04Z,2020-04-16T09:05:05Z,MERGED,True,1,1,1,https://github.com/rjarry,Disable cwd searchdir in libyang context,1,[],https://github.com/sysrepo/sysrepo/pull/1922,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1922#issuecomment-614517138,YANG models should only be searched in sysrepo YANG dir.,"Hi,
okay, that makes sense, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1923,2020-04-16T07:56:16Z,2021-05-26T05:59:12Z,2021-05-26T05:59:12Z,CLOSED,False,170,28,5,https://github.com/rjarry,Add force functions for modules management,1,[],https://github.com/sysrepo/sysrepo/pull/1923,https://github.com/rjarry,1,https://github.com/sysrepo/sysrepo/pull/1923,"Add new functions for YANG modules management.
sr_install_module_force
Does the same than sr_install_module but will ignore if the module is already installed (no error message will be logged). If a different version of the module is already installed, it will be updated.
sr_remove_module_force
Does the same than sr_remove_module but will ignore if the module is not installed or already scheduled for deletion (no error message will be logged).
sr_update_module_force
Does the same than sr_update_module but will ignore if the new module has the same revision than before. It will be updated anyway.
All these functions are only useful in development.
Add -f/--force option to sysrepoctl that uses these functions.
Fixes: #1917","Add new functions for YANG modules management.
sr_install_module_force
Does the same than sr_install_module but will ignore if the module is already installed (no error message will be logged). If a different version of the module is already installed, it will be updated.
sr_remove_module_force
Does the same than sr_remove_module but will ignore if the module is not installed or already scheduled for deletion (no error message will be logged).
sr_update_module_force
Does the same than sr_update_module but will ignore if the new module has the same revision than before. It will be updated anyway.
All these functions are only useful in development.
Add -f/--force option to sysrepoctl that uses these functions.
Fixes: #1917",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1929,2020-04-17T16:41:27Z,2020-04-20T07:15:04Z,2020-04-20T13:53:47Z,MERGED,True,4,0,4,https://github.com/apropp-molex,examples CHANGE add feature flag for sleep on QNX,1,[],https://github.com/sysrepo/sysrepo/pull/1929,https://github.com/apropp-molex,1,https://github.com/sysrepo/sysrepo/pull/1929,"fixes #1898
Adds feature flags for sleep() required on QNX only.","fixes #1898
Adds feature flags for sleep() required on QNX only.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/1935,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1935#issuecomment-617581400,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,"Hi Fred,
I see what you tried to do but there are a few problems. Generally, I would like to avoid calling system() but that is not really the problem. To add users, you would need to run this test as root and that should be avoided if possible. However, you only need 2 users for the test. You can use the user of the process and then just take another arbitrary one from the system. That should not be a problem using the functions for traversing all the users on a system.
That way both requiring root access and modifying the users on the system would be avoided.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/1935#issuecomment-618362409,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,"Okay, the test passed now but what about the name connection_and_session? It is quite vague and I am also not sure it covers the actual test. Do you plan to add any more, what exactly will they test?
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/fredgan,4,https://github.com/sysrepo/sysrepo/pull/1935#issuecomment-618396447,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,"Hi Michal, I find that the doc site http://www.sysrepo.org/static/doc/html/index.html presents 404 now, which include a page shows a list of all modules which include connection and session api. The testcases here are based on this module. I don't know how this site changed recently. But it used to be working.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/1935#issuecomment-618399093,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,"Hi,
please use the new one. The old link will not work anymore.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/fredgan,6,https://github.com/sysrepo/sysrepo/pull/1935#issuecomment-618400184,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,"And yes, I will add more cases.
BTW:
I just want to modify my last comment, but if failed because it seems that github has some problem now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/fredgan,7,https://github.com/sysrepo/sysrepo/pull/1935#issuecomment-620461560,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,"@michalvasko
Hi Michal,
Do you have any suggestions or tips for the form of the testcases? Which part should be key module that we should focus on. In fact, now I am not quite sure whether I am in the right direction.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/michalvasko,8,https://github.com/sysrepo/sysrepo/pull/1935#issuecomment-620496090,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,"Hi,
well, you see that even this test initially failed so I have no problem with it in general. However, what is mostly needed are use-cases of functions that allow large number of different uses, made even more if they are combined.
One such (family of) function is sr_set_item_str() because its behavior depend on any already existing changes in the session. But there are not that many cases and I think they should be fairly well covered by now. You can still take a look and I am certain you can come up with new use-cases and perhaps even some non-working ones.
The worst in this aspect are subscriptions. You can have as many of them as you want, they are combined to communicate using a single shared memory if they operate on the same module, and there are even priorities and callback failures (abort events) to worry about. This is a huge number of possibilities that can never be exhaustively tested. My approach was to test the cases I could think of and though potentially problematic while adding any new ones discovered in the issues. So, you can definitely add more of these and recently even a test_process was added that includes a basic infrastructure for testing running several sysrepo processes at once. That can be additionally used to test concurrency.
But I was only talking about change subscriptions. You can add operational ones that add another layer of complexity and are complicated even on their own because they allow nesting or overlapping.
Note that to come up with reasonable test cases for these mechanisms, you need an in-depth understanding of them. So starting with simpler tests and slowly making them more complex is probably the way to go. Also, any feedback regarding the documentation is as important as actual tests. Meaning please report any behavior you had to learn on your own and could be documented in a few sentences instead.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1935,2020-04-22T01:04:30Z,2021-05-26T05:59:38Z,2021-05-26T05:59:38Z,CLOSED,False,441,1,2,https://github.com/fredgan,add sr_set_diff_check_callback testcases for connection and session,2,[],https://github.com/sysrepo/sysrepo/pull/1935,https://github.com/fredgan,9,https://github.com/sysrepo/sysrepo/pull/1935#issuecomment-620575506,This is only a part of testcase for  issue #1931 .I will add other testcases for connection and session later.,"Hi Michal, Thanks for your tips. I will take them as consider.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1951,2020-04-28T12:25:29Z,2020-04-29T12:21:17Z,2020-04-29T12:21:17Z,MERGED,True,191,0,1,https://github.com/fredgan,add some testcases for modules,2,[],https://github.com/sysrepo/sysrepo/pull/1951,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/1951,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1983,2020-05-18T09:20:22Z,2020-05-18T09:58:06Z,2020-05-18T09:58:06Z,MERGED,True,237,0,1,https://github.com/fredgan,add some testcases for edit,1,[],https://github.com/sysrepo/sysrepo/pull/1983,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/1983,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,1983,2020-05-18T09:20:22Z,2020-05-18T09:58:06Z,2020-05-18T09:58:06Z,MERGED,True,237,0,1,https://github.com/fredgan,add some testcases for edit,1,[],https://github.com/sysrepo/sysrepo/pull/1983,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/1983#issuecomment-630077843,,"Hi,
thanks, seems good to me and the types test is well-organized so I have no objections, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2000,2020-05-27T07:37:15Z,2020-05-28T07:02:13Z,2020-05-28T07:02:13Z,MERGED,True,17,4,2,https://github.com/fredgan,Fix XPath trimming predidcates heap overflow,1,[],https://github.com/sysrepo/sysrepo/pull/2000,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/2000,"Hi Michal,
I'm implementing the test cases of rpc and xpath part. I find a heap overflow issue for the invalid xpath  as following. I tried to fix it by this PR. Please review it.","Hi Michal,
I'm implementing the test cases of rpc and xpath part. I find a heap overflow issue for the invalid xpath  as following. I tried to fix it by this PR. Please review it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2000,2020-05-27T07:37:15Z,2020-05-28T07:02:13Z,2020-05-28T07:02:13Z,MERGED,True,17,4,2,https://github.com/fredgan,Fix XPath trimming predidcates heap overflow,1,[],https://github.com/sysrepo/sysrepo/pull/2000,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2000#issuecomment-634689353,"Hi Michal,
I'm implementing the test cases of rpc and xpath part. I find a heap overflow issue for the invalid xpath  as following. I tried to fix it by this PR. Please review it.","Hi,
your fix works but I do not think it really makes sense in the logic of the function. I think it is better to switch the order of this and this statement. Your test then passed for me. Also, if this was its final placement, please put the test separately as it tests only the input parameters. The rest of the tests execute some callbacks. Thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2000,2020-05-27T07:37:15Z,2020-05-28T07:02:13Z,2020-05-28T07:02:13Z,MERGED,True,17,4,2,https://github.com/fredgan,Fix XPath trimming predidcates heap overflow,1,[],https://github.com/sysrepo/sysrepo/pull/2000,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2000#issuecomment-635148765,"Hi Michal,
I'm implementing the test cases of rpc and xpath part. I find a heap overflow issue for the invalid xpath  as following. I tried to fix it by this PR. Please review it.","Hi Fred,
seems good to me now, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2008,2020-05-30T07:44:30Z,2020-06-01T11:07:56Z,2020-06-01T11:07:56Z,MERGED,True,138,0,1,https://github.com/fredgan,add some testcases for rpc/action,1,[],https://github.com/sysrepo/sysrepo/pull/2008,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/2008,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2008,2020-05-30T07:44:30Z,2020-06-01T11:07:56Z,2020-06-01T11:07:56Z,MERGED,True,138,0,1,https://github.com/fredgan,add some testcases for rpc/action,1,[],https://github.com/sysrepo/sysrepo/pull/2008,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2008#issuecomment-636630527,,"Hi Fred,
the travis builds should work properly now but something is wrong with your test. Please fix it and update your branch.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2008,2020-05-30T07:44:30Z,2020-06-01T11:07:56Z,2020-06-01T11:07:56Z,MERGED,True,138,0,1,https://github.com/fredgan,add some testcases for rpc/action,1,[],https://github.com/sysrepo/sysrepo/pull/2008,https://github.com/fredgan,3,https://github.com/sysrepo/sysrepo/pull/2008#issuecomment-636649640,,"Hi Michal,
yes ,travis is ok,it's my fault.I have fixed it now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2008,2020-05-30T07:44:30Z,2020-06-01T11:07:56Z,2020-06-01T11:07:56Z,MERGED,True,138,0,1,https://github.com/fredgan,add some testcases for rpc/action,1,[],https://github.com/sysrepo/sysrepo/pull/2008,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2008#issuecomment-636789666,,"Hi Fred,
okay, seems fine now, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2014,2020-06-05T08:59:56Z,2020-06-05T11:58:17Z,2020-06-05T11:58:17Z,CLOSED,False,1,1,1,https://github.com/hthiery,CMakeList: change REPOSITORY_LOC to REPO_PATH,1,[],https://github.com/sysrepo/sysrepo/pull/2014,https://github.com/hthiery,1,https://github.com/sysrepo/sysrepo/pull/2014,Signed-off-by: Heiko Thiery heiko.thiery@gmail.com,Signed-off-by: Heiko Thiery heiko.thiery@gmail.com,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2014,2020-06-05T08:59:56Z,2020-06-05T11:58:17Z,2020-06-05T11:58:17Z,CLOSED,False,1,1,1,https://github.com/hthiery,CMakeList: change REPOSITORY_LOC to REPO_PATH,1,[],https://github.com/sysrepo/sysrepo/pull/2014,https://github.com/codecov-commenter,2,https://github.com/sysrepo/sysrepo/pull/2014#issuecomment-639356164,Signed-off-by: Heiko Thiery heiko.thiery@gmail.com,"Codecov Report

Merging #2014 into master will not change coverage.
The diff coverage is n/a.

@@           Coverage Diff           @@
##           master    #2014   +/-   ##
=======================================
  Coverage   65.96%   65.96%           
=======================================
  Files          16       16           
  Lines       14050    14050           
  Branches     3312     3312           
=======================================
  Hits         9268     9268           
  Misses       4782     4782",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2014,2020-06-05T08:59:56Z,2020-06-05T11:58:17Z,2020-06-05T11:58:17Z,CLOSED,False,1,1,1,https://github.com/hthiery,CMakeList: change REPOSITORY_LOC to REPO_PATH,1,[],https://github.com/sysrepo/sysrepo/pull/2014,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2014#issuecomment-639367770,Signed-off-by: Heiko Thiery heiko.thiery@gmail.com,"Right, I have missed it there. But please change the target to devel, all the changes go there before a release. Thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2015,2020-06-05T11:57:55Z,2020-06-05T12:02:38Z,2020-06-05T12:02:38Z,MERGED,True,1,1,1,https://github.com/hthiery,CMakeList: change REPOSITORY_LOC to REPO_PATH,1,[],https://github.com/sysrepo/sysrepo/pull/2015,https://github.com/hthiery,1,https://github.com/sysrepo/sysrepo/pull/2015,Signed-off-by: Heiko Thiery heiko.thiery@gmail.com,Signed-off-by: Heiko Thiery heiko.thiery@gmail.com,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2015,2020-06-05T11:57:55Z,2020-06-05T12:02:38Z,2020-06-05T12:02:38Z,MERGED,True,1,1,1,https://github.com/hthiery,CMakeList: change REPOSITORY_LOC to REPO_PATH,1,[],https://github.com/sysrepo/sysrepo/pull/2015,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2015#issuecomment-639439296,Signed-off-by: Heiko Thiery heiko.thiery@gmail.com,"Hi,
it should be possible to edit a pull request and change the target branch, but no matter, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2019,2020-06-10T09:35:36Z,2020-06-12T06:19:43Z,2020-06-12T06:19:43Z,MERGED,True,123,1,2,https://github.com/fredgan,Add testcases related to edit notif data for notification replay failed,1,[],https://github.com/sysrepo/sysrepo/pull/2019,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/2019,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2019,2020-06-10T09:35:36Z,2020-06-12T06:19:43Z,2020-06-12T06:19:43Z,MERGED,True,123,1,2,https://github.com/fredgan,Add testcases related to edit notif data for notification replay failed,1,[],https://github.com/sysrepo/sysrepo/pull/2019,https://github.com/fredgan,2,https://github.com/sysrepo/sysrepo/pull/2019#issuecomment-641886579,,"Hi Michal,
I have added some testcases to test notification replay, there are three failure testcases and the last two testcases lead to coredump.
I am not sure whether my testcases are right, meanwhile, I would wonder whether there are bugs in sysrepo and the reasons of failures, please review it, thanks!
the failure results as follows:
1.test_edit_notif_data(Internal error)

/* try to set notif data again */
ret = sr_set_item_str(st->sess, ""/ops:notif3/list2[k='k3']"", NULL, NULL, 0);
assert_int_equal(ret, SR_ERR_OK);
ret = sr_apply_changes(st->sess, 0, 0);
assert_int_equal(ret, SR_ERR_OK);

[ RUN      ] test_edit_notif_data
[INF]: There are no subscribers for changes of the module ""ops"" in running DS.
[INF]: There are no subscribers for changes of the module ""ops"" in running DS.
[ERR]: Internal error (/home/litao/sysrepo-fredgan/sysrepo/src/edit_diff.c:269).
0x7 != 0
[   LINE   ] --- /home/litao/sysrepo-fredgan/sysrepo/tests/test_notif.c:1100: error: Failure!Aborted (core dumped)


2.test_edit_notif_data_replay_1(coredump)

/* send the notification, it should be stored for replay */
ret = sr_event_notif_send_tree(st->sess, notif);
lyd_free_withsiblings(notif);
assert_int_equal(ret, SR_ERR_OK);

[ RUN      ] test_edit_notif_data_replay_1
[INF]: There are no subscribers for changes of the module ""ops"" in running DS.
[INF]: There are no subscribers for changes of the module ""ops"" in running DS.
test_notif: /home/litao/libyang/src/tree_data.c:8149: lyd_defaults_add_unres: Assertion `set && ((set->number == 0) || (set->number == 1))' failed.
Aborted (core dumped)

3.test_edit_notif_data_replay_2(coredump)

/* send the notification, it should be stored for replay */
ret = sr_event_notif_send_tree(st->sess, notif);
lyd_free_withsiblings(notif);
assert_int_equal(ret, SR_ERR_OK);

[ RUN      ] test_edit_notif_data_replay_2
[INF]: There are no subscribers for changes of the module ""ops"" in running DS.
[INF]: There are no subscribers for changes of the module ""ops"" in running DS.
test_notif: /home/litao/libyang/src/tree_data.c:8149: lyd_defaults_add_unres: Assertion `set && ((set->number == 0) || (set->number == 1))' failed.
Aborted (core dumped)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2019,2020-06-10T09:35:36Z,2020-06-12T06:19:43Z,2020-06-12T06:19:43Z,MERGED,True,123,1,2,https://github.com/fredgan,Add testcases related to edit notif data for notification replay failed,1,[],https://github.com/sysrepo/sysrepo/pull/2019,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2019#issuecomment-642031340,,"Hi Fred,
so I have explicitly forbidden to set notification (or RPC/action) data because that is not supposed to be allowed and I am not sure what exactly were you trying to achieve. Also, getting such data is not supported either but it would be difficult to explicitly forbid so you will simply not get any data.
Please merge the current devel, adjust your tests accordingly, and then we will see.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2019,2020-06-10T09:35:36Z,2020-06-12T06:19:43Z,2020-06-12T06:19:43Z,MERGED,True,123,1,2,https://github.com/fredgan,Add testcases related to edit notif data for notification replay failed,1,[],https://github.com/sysrepo/sysrepo/pull/2019,https://github.com/fredgan,4,https://github.com/sysrepo/sysrepo/pull/2019#issuecomment-642036844,,"Hi Michal,
yeah, I know the notification/action/rpc are not data node and should not set/get any data. I just want to break the repo system in some way :)  Since you have explicitly forbidden it, I will adjust the cases soon later.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2019,2020-06-10T09:35:36Z,2020-06-12T06:19:43Z,2020-06-12T06:19:43Z,MERGED,True,123,1,2,https://github.com/fredgan,Add testcases related to edit notif data for notification replay failed,1,[],https://github.com/sysrepo/sysrepo/pull/2019,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/2019#issuecomment-642038375,,"Oh, okay, then it is fine but a comment stating this (the purpose of the test) would the be helpful.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2019,2020-06-10T09:35:36Z,2020-06-12T06:19:43Z,2020-06-12T06:19:43Z,MERGED,True,123,1,2,https://github.com/fredgan,Add testcases related to edit notif data for notification replay failed,1,[],https://github.com/sysrepo/sysrepo/pull/2019,https://github.com/codecov-commenter,6,https://github.com/sysrepo/sysrepo/pull/2019#issuecomment-642581437,,"Codecov Report

Merging #2019 into devel will increase coverage by 0.14%.
The diff coverage is 100.00%.

@@            Coverage Diff             @@
##            devel    #2019      +/-   ##
==========================================
+ Coverage   65.96%   66.10%   +0.14%     
==========================================
  Files          16       16              
  Lines       14050    14054       +4     
  Branches     3312     3314       +2     
==========================================
+ Hits         9267     9289      +22     
+ Misses       4783     4765      -18",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2019,2020-06-10T09:35:36Z,2020-06-12T06:19:43Z,2020-06-12T06:19:43Z,MERGED,True,123,1,2,https://github.com/fredgan,Add testcases related to edit notif data for notification replay failed,1,[],https://github.com/sysrepo/sysrepo/pull/2019,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/2019#issuecomment-643088193,,"Hi Fred,
okay, now it seems fine.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2028,2020-06-16T07:23:44Z,2020-06-16T07:31:47Z,2020-06-16T07:31:47Z,MERGED,True,13,4,1,https://github.com/pfeige,sysrepoctl does not list imports of submodules,1,[],https://github.com/sysrepo/sysrepo/pull/2028,https://github.com/pfeige,1,https://github.com/sysrepo/sysrepo/pull/2028,See issue #2027.,See issue #2027.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2028,2020-06-16T07:23:44Z,2020-06-16T07:31:47Z,2020-06-16T07:31:47Z,MERGED,True,13,4,1,https://github.com/pfeige,sysrepoctl does not list imports of submodules,1,[],https://github.com/sysrepo/sysrepo/pull/2028,https://github.com/codecov-commenter,2,https://github.com/sysrepo/sysrepo/pull/2028#issuecomment-644586920,See issue #2027.,"Codecov Report

Merging #2028 into devel will decrease coverage by 0.02%.
The diff coverage is 0.00%.

@@            Coverage Diff             @@
##            devel    #2028      +/-   ##
==========================================
- Coverage   66.09%   66.07%   -0.02%     
==========================================
  Files          16       16              
  Lines       14056    14058       +2     
  Branches     3314     3316       +2     
==========================================
- Hits         9289     9288       -1     
- Misses       4767     4770       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2028,2020-06-16T07:23:44Z,2020-06-16T07:31:47Z,2020-06-16T07:31:47Z,MERGED,True,13,4,1,https://github.com/pfeige,sysrepoctl does not list imports of submodules,1,[],https://github.com/sysrepo/sysrepo/pull/2028,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2028#issuecomment-644587658,See issue #2027.,"Seems good, thanks.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2039,2020-06-30T08:18:15Z,2020-06-30T08:19:52Z,2020-06-30T08:20:08Z,CLOSED,False,368,240,12,https://github.com/pfeige,feature dependencies across modules cause sr_connect() to fail -- test,14,[],https://github.com/sysrepo/sysrepo/pull/2039,https://github.com/pfeige,1,https://github.com/sysrepo/sysrepo/pull/2039,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2039,2020-06-30T08:18:15Z,2020-06-30T08:19:52Z,2020-06-30T08:20:08Z,CLOSED,False,368,240,12,https://github.com/pfeige,feature dependencies across modules cause sr_connect() to fail -- test,14,[],https://github.com/sysrepo/sysrepo/pull/2039,https://github.com/pfeige,2,https://github.com/sysrepo/sysrepo/pull/2039#issuecomment-651635977,,Wrong branch,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2040,2020-06-30T08:24:15Z,2020-06-30T14:09:53Z,2020-06-30T14:09:53Z,MERGED,True,94,0,3,https://github.com/pfeige,feature dependencies across modules cause sr_connect() to fail - test,1,[],https://github.com/sysrepo/sysrepo/pull/2040,https://github.com/pfeige,1,https://github.com/sysrepo/sysrepo/pull/2040,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,1,https://github.com/sysrepo/sysrepo/pull/2041,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652360844,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Hi Robin,
I get the idea and I think it should be possible to implement but in a different way. You see, SHM files are created with shm_open(3), which will always ignore whatever prefix you want to set, it always uses the same one (and it should be /dev/shm). The only way to allow several sysrepo instances would be to add a dir after the base path so you get /dev/shm/dir/sr_main, for example. At least I think it should be possible to use a prefix in the name given to shm_open().
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,3,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652364504,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Hi Michal,
unfortunately, this is not possible. shm_open(3) (on linux) states:

The operation of shm_open() is analogous to that of open(2).  name specifies the shared memory object  to  be created or opened.  For portable use, a shared memory object should be identified by a name of the form /somename; that is, a null-terminated string of up to NAME_MAX (i.e., 255) characters consisting  of  an  initial slash, followed by one or more characters, none of which are slashes.

The POSIX man page is also conservative about that:

It is unspecified  whether the  name  appears in the file system and is visible to other functions that take pathnames as arguments. The name argument conforms to the construction rules for a pathname, except that the  interpretation  of   characters  other  than  the leading  character in name is implementation-defined, and that the length limits for the name argument are implementation-defined and need not be  the  same  as  the  pathname  limits {PATH_MAX} and {NAME_MAX}.  If name begins with the  character, then processes calling shm_open() with the same value of name refer to the same shared memory object, as long as that name has not been removed.  If name does not begin with the  character, the effect is implementation-defined.

The idea behind this patch is to use for example:
export SYSREPO_SHM_PREFIX=""group1-""
And it will create /dev/shm/group1-* files.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652367008,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","I see, okay, then what I suggested is not possible but in the pull request you have not changed names for shm_open() at all so it would not work the way you said it should. Also, all sysrepo SHM files use either sr_ or srsub_ prefix (unless I forgot something), which are currently hard-coded so the best solution would probably be to unify all these prefixes to be returned by a function that can get them from the environment.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,5,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652371432,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Unless I made a mistake, the sr_ or srsub_ prefixes are still here. SYSREPO_SHM_PREFIX (if defined) is only prepended before these.
Here is an example:
~# SYSREPO_SHM_PREFIX=""group1-"" ./application &
~# ls -l /dev/shm/group1-*
-rw-rw-rw- 1 root root 1.9K 07-01 13:42 /dev/shm/group1-sr_ext
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-datastores.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-datastores.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-netconf-notifications.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-netconf-notifications.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-netconf.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-netconf.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-netconf-with-defaults.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-netconf-with-defaults.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-origin.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-origin.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-yang-library.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_ietf-yang-library.running
-rw-rw-rw- 1 root root 6.5K 07-01 13:42 /dev/shm/group1-sr_main
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_sysrepo-monitoring.operational
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_sysrepo-monitoring.running
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_mymodule.operational
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_mymodule.running
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1-srsub_mymodule.oper.c2a945a3
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_yang.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1-sr_yang.running
Do you mean you would like to use the same sr prefix by default for all SHM files and change it if SYSREPO_SHM_PREFIX is set?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652375374,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Oh, sorry, my bad, the prefix is always used. Okay, so please put getting the prefix into separate function like I said before and use it on these 2 places. It should probably also be checked in the function that the prefix does not include any /.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,7,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652403449,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Ok I'll do that.
What do you think about completely replacing the sr prefix when SYSREPO_SHM_PREFIX is set? That would give something like this:
With SYSREPO_SHM_PREFIX=""group1"":
-rw-rw-rw- 1 root root 1.9K 07-01 13:42 /dev/shm/group1_ext
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-datastores.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-datastores.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-netconf-notifications.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-netconf-notifications.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-netconf.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-netconf.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-netconf-with-defaults.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-netconf-with-defaults.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-origin.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-origin.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-yang-library.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_ietf-yang-library.running
-rw-rw-rw- 1 root root 6.5K 07-01 13:42 /dev/shm/group1_main
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1_sysrepo-monitoring.operational
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1_sysrepo-monitoring.running
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1_mymodule.operational
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1_mymodule.running
-rw------- 1 root root    7 07-01 13:42 /dev/shm/group1_sub_mymodule.oper.c2a945a3
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_yang.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/group1_yang.running

And if SYSREPO_SHM_PREFIX is not set:
-rw-rw-rw- 1 root root 1.9K 07-01 13:42 /dev/shm/sr_ext
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-datastores.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-datastores.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-netconf-notifications.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-netconf-notifications.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-netconf.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-netconf.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-netconf-with-defaults.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-netconf-with-defaults.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-origin.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-origin.running
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-yang-library.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_ietf-yang-library.running
-rw-rw-rw- 1 root root 6.5K 07-01 13:42 /dev/shm/sr_main
-rw------- 1 root root    7 07-01 13:42 /dev/shm/sr_sysrepo-monitoring.operational
-rw------- 1 root root    7 07-01 13:42 /dev/shm/sr_sysrepo-monitoring.running
-rw------- 1 root root    7 07-01 13:42 /dev/shm/sr_mymodule.operational
-rw------- 1 root root    7 07-01 13:42 /dev/shm/sr_mymodule.running
-rw------- 1 root root    7 07-01 13:42 /dev/shm/sr_sub_mymodule.oper.c2a945a3
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_yang.operational
-rw-rw-rw- 1 root root    7 07-01 13:42 /dev/shm/sr_yang.running

Note that this would change srsub_ to sr_sub_ for subscriptions.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,8,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652404270,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.",Or I can skip the additional _ to preserve existing file names.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,9,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652408188,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","I guess it is fine to completely replace the prefix but I would prefer to keep it the way it is if the prefix is not set. You then always have sr_main and sr_ext, which are custom shared memory chunks, sr_*, which are LYB files, and srsub_*, which are subscription shared memory chunks. Changing it to sr_sub_* could cause collisions with modules starting with sub_.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,10,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652458880,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","It took me more time than I expected. I did not understand what you were saying:

which are currently hard-coded

It should be OK now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,11,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652820066,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Hi Robin,
I am sorry but I do not like the current changes. I am not even sure what exactly your use-case is when you need to have several independent sysrepo instances but the added complexity is not worth it in my opinion. To learn from the code the final path for some SHM file was difficult enough, now it is almost impossible. So, unless you can somehow simplify it (even I can attempt it once I have some time), I would prefer to keep it the way it is now without this feature.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,12,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652836427,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Hi Michal,
The main use-case is parallel testing and automated builds. The big issue here is that you cannot (per POSIX standards) control where the SHM files are created by shm_open(). If you have a build system (for example, buildroot) that needs to call sysrepoctl and/or sysrepocfg commands to install YANG modules and prepare startup configs into a staging directory (before generation of a bzImage), without my change there is no way to have multiple builds in parallel. Not to mention the issue if the build host is already running sysrepo applications.
This change allows some kind of isolation by using unique SYSREPO_SHM_PREFIX values for each separate build or test run. For example I am planning to use this feature for unit tests of the sysrepo python bindings I am working on.
I tried hard to find another solution to trick shm_open() into using a specific path but that is not possible without major LD_PRELOAD hacks. If you give me guidance on how to implement this in a simpler way, I can adapt my code.
Thanks",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,13,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-652878123,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Okay, fair enough. So these are my ideas that may make the code better.
There would be 2 prefixes, one sr_ by default, the other srsub_ by default. There would be a function to retrieve each of them. In your case you could set both prefixes to be the same but the distinction should be kept.
As for main and ext SHM, there could be again 2 functions that would generate their path and they would use the sr_ prefix. I think that may make it a bit clearer in the code what is actually happenning (sr_path_global_shm seems too vague to me).
Also, please follow the rest of the code conventions in always returning sr_error_info_t *, NULL on success and the check can be together with the function call for these short prototypes.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,14,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653036005,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Ok I can try that however, having 2 separate prefixes means we need to export two variables. It seems a bit tedious to me. Why not use a single variable and append sub for subscriptions?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,15,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653039668,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Okay, then the format can be PREFIX(sub)_NAME meaning with the default prefix sr you get sr_NAME and srsub_NAME (just like it is now). Meaning the underscore will be hard-coded and not part of the prefix.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,16,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653047110,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Hi Michal, is that ok like this?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,17,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653429098,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","@michalvasko I have no issue in enforcing coding style consistency, don't worry :)
I think I have addressed all your comments. Please tell me if I need to change something else.
Maybe we could set up some sort of automatic coding style checks (with clang-format for example), what do you think?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,18,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653432094,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Well, we have some automatic code formatting in our wishlist for quite some time now but not having a high priority, it is consistently postponed. But if you can help us with it, we would appreciate it.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,19,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653439224,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Well, we have some automatic code formatting in our wishlist for quite some time now but not having a high priority, it is consistently postponed. But if you can help us with it, we would appreciate it.

I'll see if I find some time.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/codecov-commenter,20,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653440026,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Codecov Report

Merging #2041 into devel will decrease coverage by 0.04%.
The diff coverage is 58.06%.

@@            Coverage Diff             @@
##            devel    #2041      +/-   ##
==========================================
- Coverage   65.87%   65.83%   -0.04%     
==========================================
  Files          16       16              
  Lines       14039    14093      +54     
  Branches     3304     3316      +12     
==========================================
+ Hits         9247     9277      +30     
- Misses       4792     4816      +24",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,21,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653473963,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.",The checks on ppc64le are failing because of some lock timeout. I'm not sure it is related to my changes here. However could it be related to #2033?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/michalvasko,22,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653487129,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.","Well, the timeouts are because of the unhandled locks, yes. But the problem is caused by some other, not intentional, lock problem and it is not related to your changes. Not sure if I can fix it, though, because it seems to depend on some data race as well.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2041,2020-06-30T14:55:35Z,2020-07-03T10:55:10Z,2020-07-03T11:21:31Z,MERGED,True,126,10,5,https://github.com/rjarry,shm CHANGE allow setting a custom prefix for SHM files,1,[],https://github.com/sysrepo/sysrepo/pull/2041,https://github.com/rjarry,23,https://github.com/sysrepo/sysrepo/pull/2041#issuecomment-653498247,"Allow exporting a SYSREPO_SHM_PREFIX environment variable. When that variable is set, all files created under /dev/shm will use that prefix. If unset, the files wille have their ""default"" names.
This can be useful for testing purposes, or to run multiple ""groups"" of sysrepo applications in concordance with the SYSREPO_REPOSITORY_PATH environment variable.",Thanks Michal.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2052,2020-07-12T09:19:08Z,2020-07-14T07:30:17Z,2020-07-14T07:30:17Z,MERGED,True,4,0,1,https://github.com/chaichairiko,Add get_change_tree_next to swig,2,[],https://github.com/sysrepo/sysrepo/pull/2052,https://github.com/chaichairiko,1,https://github.com/sysrepo/sysrepo/pull/2052,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2052,2020-07-12T09:19:08Z,2020-07-14T07:30:17Z,2020-07-14T07:30:17Z,MERGED,True,4,0,1,https://github.com/chaichairiko,Add get_change_tree_next to swig,2,[],https://github.com/sysrepo/sysrepo/pull/2052,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2052#issuecomment-658019573,,"Hi,
no problem, merging.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2060,2020-07-21T10:20:46Z,2020-07-21T10:52:19Z,2020-07-21T10:52:19Z,MERGED,True,771,368,22,https://github.com/rkrejci,Merge devel into master as release 1.4.70,24,[],https://github.com/sysrepo/sysrepo/pull/2060,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/2060,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2067,2020-07-27T12:44:57Z,2020-07-27T13:04:59Z,2020-07-27T13:04:59Z,MERGED,True,1,1,1,https://github.com/gunterw,Fix issue #1207,1,[],https://github.com/sysrepo/sysrepo/pull/2067,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/2067,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2067,2020-07-27T12:44:57Z,2020-07-27T13:04:59Z,2020-07-27T13:04:59Z,MERGED,True,1,1,1,https://github.com/gunterw,Fix issue #1207,1,[],https://github.com/sysrepo/sysrepo/pull/2067,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2067#issuecomment-664383009,,"Thanks for debugging it, it may help several people still using this legacy version.
Regards,
Michal",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2072,2020-07-29T14:50:14Z,2020-07-30T08:19:55Z,2020-07-30T08:40:19Z,MERGED,True,19,7,3,https://github.com/gkatsikas,Various improvements in the sysrepo examples,4,[],https://github.com/sysrepo/sysrepo/pull/2072,https://github.com/gkatsikas,1,https://github.com/sysrepo/sysrepo/pull/2072,Signed-off-by: Georgios Katsikas katsikas.gp@gmail.com,Signed-off-by: Georgios Katsikas katsikas.gp@gmail.com,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2097,2020-08-17T11:43:46Z,2020-08-18T06:50:20Z,2020-08-18T06:50:20Z,MERGED,True,30,25,2,https://github.com/lpaulic,Deploy docker sysrepo netopeer2,6,[],https://github.com/sysrepo/sysrepo/pull/2097,https://github.com/lpaulic,1,https://github.com/sysrepo/sysrepo/pull/2097,Updated deploy/docker/sysrepo-netopeer2/Dockerfile and deploy/docker/sysrepo-netopeer2/Dockerfile.devel scripts so a docker image with the latest sysrepo and netopeer2 is generated,Updated deploy/docker/sysrepo-netopeer2/Dockerfile and deploy/docker/sysrepo-netopeer2/Dockerfile.devel scripts so a docker image with the latest sysrepo and netopeer2 is generated,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2109,2020-08-26T20:22:03Z,2020-08-27T06:58:36Z,2020-08-27T06:58:36Z,MERGED,True,148,1,4,https://github.com/imiller0,Proposed bug fix for issue #2108,2,[],https://github.com/sysrepo/sysrepo/pull/2109,https://github.com/imiller0,1,https://github.com/sysrepo/sysrepo/pull/2109,"Included is a test module RunningDSTest.py which demonstrates the loss (overwrite) of data in the RUNNING datastore when the STARTUP is copied again.
The proposed fix is in shm_main.c and uses the absolute filesystem path for testing sr_file_exists.  This ensures that the existence of the running datastore (file) is correctly determined.  The path is then changed back to the relative path for use in the copy.
The NotificationTest appears to depend on the extra copy from startup to running, so I added an explicit copy to TestModule to fix that test against the new behavior.","Included is a test module RunningDSTest.py which demonstrates the loss (overwrite) of data in the RUNNING datastore when the STARTUP is copied again.
The proposed fix is in shm_main.c and uses the absolute filesystem path for testing sr_file_exists.  This ensures that the existence of the running datastore (file) is correctly determined.  The path is then changed back to the relative path for use in the copy.
The NotificationTest appears to depend on the extra copy from startup to running, so I added an explicit copy to TestModule to fix that test against the new behavior.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2109,2020-08-26T20:22:03Z,2020-08-27T06:58:36Z,2020-08-27T06:58:36Z,MERGED,True,148,1,4,https://github.com/imiller0,Proposed bug fix for issue #2108,2,[],https://github.com/sysrepo/sysrepo/pull/2109,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2109#issuecomment-681642757,"Included is a test module RunningDSTest.py which demonstrates the loss (overwrite) of data in the RUNNING datastore when the STARTUP is copied again.
The proposed fix is in shm_main.c and uses the absolute filesystem path for testing sr_file_exists.  This ensures that the existence of the running datastore (file) is correctly determined.  The path is then changed back to the relative path for use in the copy.
The NotificationTest appears to depend on the extra copy from startup to running, so I added an explicit copy to TestModule to fix that test against the new behavior.","Hi,
I believe you are right, this is a bug. The fix seems correct, thanks, merging.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2110,2020-08-27T14:29:31Z,2020-08-28T06:34:34Z,2020-09-03T06:06:42Z,MERGED,True,4,0,1,https://github.com/johnbeckettn2e,python binding BUGFIX Should be taking global lock before calling back to python code,2,[],https://github.com/sysrepo/sysrepo/pull/2110,https://github.com/johnbeckettn2e,1,https://github.com/sysrepo/sysrepo/pull/2110,"Should have python global lock before executing function ly_module_imp_clb, as this calls python code and handles python reference counts","Should have python global lock before executing function ly_module_imp_clb, as this calls python code and handles python reference counts",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2110,2020-08-27T14:29:31Z,2020-08-28T06:34:34Z,2020-09-03T06:06:42Z,MERGED,True,4,0,1,https://github.com/johnbeckettn2e,python binding BUGFIX Should be taking global lock before calling back to python code,2,[],https://github.com/sysrepo/sysrepo/pull/2110,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2110#issuecomment-682354812,"Should have python global lock before executing function ly_module_imp_clb, as this calls python code and handles python reference counts","Hi,
I do not know much about these Python bindings but what you are saying makes sense, merged.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2112,2020-08-28T12:26:36Z,2020-08-31T13:04:24Z,2020-08-31T13:06:17Z,MERGED,True,171,33,7,https://github.com/jsmolic,docker REFACTOR reorganize dockerfiles,1,[],https://github.com/sysrepo/sysrepo/pull/2112,https://github.com/jsmolic,1,https://github.com/sysrepo/sysrepo/pull/2112,"Add sysrepo Dockerfile along with sysrepo-netopeer2
Add legacy and latest image for sysrepo and sysrepo-netopeer2","Add sysrepo Dockerfile along with sysrepo-netopeer2
Add legacy and latest image for sysrepo and sysrepo-netopeer2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2116,2020-09-01T08:48:08Z,2020-09-01T12:08:46Z,2020-09-01T12:45:00Z,CLOSED,False,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,1,[],https://github.com/sysrepo/sysrepo/pull/2116,https://github.com/hthiery,1,https://github.com/sysrepo/sysrepo/pull/2116,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com","With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2116,2020-09-01T08:48:08Z,2020-09-01T12:08:46Z,2020-09-01T12:45:00Z,CLOSED,False,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,1,[],https://github.com/sysrepo/sysrepo/pull/2116,https://github.com/hthiery,2,https://github.com/sysrepo/sysrepo/pull/2116#issuecomment-684748654,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com",the provided change seems not to work on the used compiler in travis,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2116,2020-09-01T08:48:08Z,2020-09-01T12:08:46Z,2020-09-01T12:45:00Z,CLOSED,False,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,1,[],https://github.com/sysrepo/sysrepo/pull/2116,https://github.com/hthiery,3,https://github.com/sysrepo/sysrepo/pull/2116#issuecomment-684805283,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com",ups ... there seem to be no portable solution for variadic macros with zero arguments,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2116,2020-09-01T08:48:08Z,2020-09-01T12:08:46Z,2020-09-01T12:45:00Z,CLOSED,False,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,1,[],https://github.com/sysrepo/sysrepo/pull/2116,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2116#issuecomment-684824085,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com","Hi,
yep, I have already gone through the same process as you just now and have reached the same conclusion.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2116,2020-09-01T08:48:08Z,2020-09-01T12:08:46Z,2020-09-01T12:45:00Z,CLOSED,False,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,1,[],https://github.com/sysrepo/sysrepo/pull/2116,https://github.com/hthiery,5,https://github.com/sysrepo/sysrepo/pull/2116#issuecomment-684825533,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com",ok .. sorry for the noise,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2117,2020-09-01T10:31:10Z,2020-09-02T13:33:22Z,2020-09-02T13:33:22Z,MERGED,True,13,0,1,https://github.com/syyyr,sysrepo BUGFIX segfault with non-existing RPC,1,[],https://github.com/sysrepo/sysrepo/pull/2117,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2117,"Fixes part of #2115
For the test, I just copied what the other tests did, hopefully it's right","Fixes part of #2115
For the test, I just copied what the other tests did, hopefully it's right",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2117,2020-09-01T10:31:10Z,2020-09-02T13:33:22Z,2020-09-02T13:33:22Z,MERGED,True,13,0,1,https://github.com/syyyr,sysrepo BUGFIX segfault with non-existing RPC,1,[],https://github.com/sysrepo/sysrepo/pull/2117,https://github.com/codecov-commenter,2,https://github.com/sysrepo/sysrepo/pull/2117#issuecomment-684763270,"Fixes part of #2115
For the test, I just copied what the other tests did, hopefully it's right","Codecov Report

Merging #2117 into devel will increase coverage by 0.01%.
The diff coverage is 66.67%.

@@            Coverage Diff             @@
##            devel    #2117      +/-   ##
==========================================
+ Coverage   65.90%   65.91%   +0.01%     
==========================================
  Files          16       16              
  Lines       14193    14192       -1     
  Branches     3361     3362       +1     
==========================================
+ Hits         9353     9354       +1     
+ Misses       4840     4838       -2",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2117,2020-09-01T10:31:10Z,2020-09-02T13:33:22Z,2020-09-02T13:33:22Z,MERGED,True,13,0,1,https://github.com/syyyr,sysrepo BUGFIX segfault with non-existing RPC,1,[],https://github.com/sysrepo/sysrepo/pull/2117,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2117#issuecomment-685712529,"Fixes part of #2115
For the test, I just copied what the other tests did, hopefully it's right","Uh, sorry, I have fixed it before looking at this PR. So just remove the fix please, the test can be merged.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2117,2020-09-01T10:31:10Z,2020-09-02T13:33:22Z,2020-09-02T13:33:22Z,MERGED,True,13,0,1,https://github.com/syyyr,sysrepo BUGFIX segfault with non-existing RPC,1,[],https://github.com/sysrepo/sysrepo/pull/2117,https://github.com/syyyr,4,https://github.com/sysrepo/sysrepo/pull/2117#issuecomment-685723550,"Fixes part of #2115
For the test, I just copied what the other tests did, hopefully it's right",All done,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2117,2020-09-01T10:31:10Z,2020-09-02T13:33:22Z,2020-09-02T13:33:22Z,MERGED,True,13,0,1,https://github.com/syyyr,sysrepo BUGFIX segfault with non-existing RPC,1,[],https://github.com/sysrepo/sysrepo/pull/2117,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/2117#issuecomment-685739827,"Fixes part of #2115
For the test, I just copied what the other tests did, hopefully it's right","Fine, thanks.",True,{'THUMBS_UP': ['https://github.com/syyyr']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2118,2020-09-01T10:55:00Z,2020-09-01T13:07:27Z,2020-09-01T13:19:26Z,MERGED,True,2,2,1,https://github.com/jsmolic,docker BUGFIX switch to libssh 0.9.2,1,[],https://github.com/sysrepo/sysrepo/pull/2118,https://github.com/jsmolic,1,https://github.com/sysrepo/sysrepo/pull/2118,"Build libssh 0.9.2 in sysrepo-netopeer2:legacy image instead of directly
from git to resolve build issue","Build libssh 0.9.2 in sysrepo-netopeer2:legacy image instead of directly
from git to resolve build issue",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2119,2020-09-01T13:39:41Z,2020-09-07T11:09:50Z,2020-09-07T11:09:50Z,MERGED,True,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,3,[],https://github.com/sysrepo/sysrepo/pull/2119,https://github.com/hthiery,1,https://github.com/sysrepo/sysrepo/pull/2119,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com","With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2119,2020-09-01T13:39:41Z,2020-09-07T11:09:50Z,2020-09-07T11:09:50Z,MERGED,True,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,3,[],https://github.com/sysrepo/sysrepo/pull/2119,https://github.com/hthiery,2,https://github.com/sysrepo/sysrepo/pull/2119#issuecomment-684875330,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com","@michalvasko could you please take a look on that .. I was not happy with my previous conclusion.
""There must be a better way"" ;-)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2119,2020-09-01T13:39:41Z,2020-09-07T11:09:50Z,2020-09-07T11:09:50Z,MERGED,True,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,3,[],https://github.com/sysrepo/sysrepo/pull/2119,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2119#issuecomment-685707914,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com","Hi,
okay, but now you can call the macro with no arguments, right? Not sure what that would do, probably nothing good.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2119,2020-09-01T13:39:41Z,2020-09-07T11:09:50Z,2020-09-07T11:09:50Z,MERGED,True,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,3,[],https://github.com/sysrepo/sysrepo/pull/2119,https://github.com/hthiery,4,https://github.com/sysrepo/sysrepo/pull/2119#issuecomment-685950176,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com","Yes, you're right. The macro can be called without arguments. But I think then the compiler/preprocessor should throw an error when the macro is used in that case.
I tried this
#include <stdio.h>

#define PRINTF_ERR(...) fprintf(stderr, __VA_ARGS__)

int main(void)
{
	PRINTF_ERR();
	return 0;
}

and the output is:
test.c: In function ‘main’:
test.c:3:52: error: expected expression before ‘)’ token
 #define PRINTF_ERR(...) fprintf(stderr, __VA_ARGS__)
                                                    ^
test.c:7:2: note: in expansion of macro ‘PRINTF_ERR’
  PRINTF_ERR();
  ^~~~~~~~~~",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2119,2020-09-01T13:39:41Z,2020-09-07T11:09:50Z,2020-09-07T11:09:50Z,MERGED,True,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,3,[],https://github.com/sysrepo/sysrepo/pull/2119,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/2119#issuecomment-688194555,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com","Hi,
okay then, I suppose. So please create a pull request for the current devel and it can be merged.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2119,2020-09-01T13:39:41Z,2020-09-07T11:09:50Z,2020-09-07T11:09:50Z,MERGED,True,4,4,1,https://github.com/hthiery,fix log macros to allow empty variable arguments,3,[],https://github.com/sysrepo/sysrepo/pull/2119,https://github.com/hthiery,6,https://github.com/sysrepo/sysrepo/pull/2119#issuecomment-688217142,"With this the SRP_LOG_xxxMSG macros aren't needed anymore.
see: https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
Signed-off-by: Heiko Thiery heiko.thiery@gmail.com",OK. Should I close this PR  and create a nee one? Or do you accept with the merge commit?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2121,2020-09-02T08:22:08Z,2021-01-27T15:18:59Z,2021-01-27T15:18:59Z,CLOSED,False,1,1,1,https://github.com/jkmuller,Fixed rdlock issue causing SIGBUS when sr_event_notif_send_tree(),1,[],https://github.com/sysrepo/sysrepo/pull/2121,https://github.com/jkmuller,1,https://github.com/sysrepo/sysrepo/pull/2121,"We have seen SIGBUS crashes when sending notifications via sr_event_notif_send_tree() from an application while in parallel netopeer2 is performing  sr_apply_changes() / sr_changes_notify_store().
More detailed, the applied change is an ietf-interface:interfaces/interface being edited while the applications is sending a notification of ietf-alarms with an identity-ref to ietf-interfaces:
<notification xmlns=""urn:ietf:params:xml:ns:netconf:notification:1.0"">
  <eventTime>2020-08-26T19:22:58+00:00</eventTime>
  <alarm-notification xmlns=""urn:ietf:params:xml:ns:yang:ietf-alarms"">
    <resource>/ietf-interfaces:interfaces/ietf-interfaces:interface[ietf-interfaces:name='ethernet 0/10:1']</resource>
    <alarm-type-id xmlns:adtn-if-ns-al=""http://www.adtran.com/ns/yang/adtran-ietf-interfaces-ns-ietf-alarms"">adtn-if-ns-al:interface-oper-status-down-alarm</alarm-type-id>
    <alarm-type-qualifier />
    <time>2020-08-26T19:22:58+00:00</time>
    <perceived-severity>major</perceived-severity>
    <alarm-text>interface is down</alarm-text>
  </alarm-notification>
</notification>
with <resource> being an identity-ref in that case pointing to an instance of ietf-interfaces.
The crash occurred when the application was in  sr_module_file_data_append() (-> open O_RDONLY shmem path: sr_ietf-interfaces.running) and netopeer2 was in  sr_cp_file2shm() (-> open O_WRONLY shmem path sr_ietf-interfaces.running).
Thus, re-creating shmem for sr_ietf-interfaces.running while it was read from caused that BUSERR.
Normally the shmem locking in sysrepo is supposed to prevent such case.
But, in the given case,  #4646 sr_shmmod_modinfo_collect_op(&mod_info, , , 0/*'output' parameter*/, ,) only added ietf-alarms to the mod_info so that module ietf-interfaces was not being locked in #4651  sr_shmmod_modinfo_rdlock(&mod_info).
When I turned the 'output' parameter in sr_shmmod_modinfo_collect_op(&mod_info ) to 1, this seem to fix the problem as ietf-interfaces was added to mod_info and then locked in #4651.","We have seen SIGBUS crashes when sending notifications via sr_event_notif_send_tree() from an application while in parallel netopeer2 is performing  sr_apply_changes() / sr_changes_notify_store().
More detailed, the applied change is an ietf-interface:interfaces/interface being edited while the applications is sending a notification of ietf-alarms with an identity-ref to ietf-interfaces:
<notification xmlns=""urn:ietf:params:xml:ns:netconf:notification:1.0"">
  <eventTime>2020-08-26T19:22:58+00:00</eventTime>
  <alarm-notification xmlns=""urn:ietf:params:xml:ns:yang:ietf-alarms"">
    <resource>/ietf-interfaces:interfaces/ietf-interfaces:interface[ietf-interfaces:name='ethernet 0/10:1']</resource>
    <alarm-type-id xmlns:adtn-if-ns-al=""http://www.adtran.com/ns/yang/adtran-ietf-interfaces-ns-ietf-alarms"">adtn-if-ns-al:interface-oper-status-down-alarm</alarm-type-id>
    <alarm-type-qualifier />
    <time>2020-08-26T19:22:58+00:00</time>
    <perceived-severity>major</perceived-severity>
    <alarm-text>interface is down</alarm-text>
  </alarm-notification>
</notification>
with <resource> being an identity-ref in that case pointing to an instance of ietf-interfaces.
The crash occurred when the application was in  sr_module_file_data_append() (-> open O_RDONLY shmem path: sr_ietf-interfaces.running) and netopeer2 was in  sr_cp_file2shm() (-> open O_WRONLY shmem path sr_ietf-interfaces.running).
Thus, re-creating shmem for sr_ietf-interfaces.running while it was read from caused that BUSERR.
Normally the shmem locking in sysrepo is supposed to prevent such case.
But, in the given case,  #4646 sr_shmmod_modinfo_collect_op(&mod_info, , , 0/*'output' parameter*/, ,) only added ietf-alarms to the mod_info so that module ietf-interfaces was not being locked in #4651  sr_shmmod_modinfo_rdlock(&mod_info).
When I turned the 'output' parameter in sr_shmmod_modinfo_collect_op(&mod_info ) to 1, this seem to fix the problem as ietf-interfaces was added to mod_info and then locked in #4651.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2121,2020-09-02T08:22:08Z,2021-01-27T15:18:59Z,2021-01-27T15:18:59Z,CLOSED,False,1,1,1,https://github.com/jkmuller,Fixed rdlock issue causing SIGBUS when sr_event_notif_send_tree(),1,[],https://github.com/sysrepo/sysrepo/pull/2121,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2121#issuecomment-691088716,"We have seen SIGBUS crashes when sending notifications via sr_event_notif_send_tree() from an application while in parallel netopeer2 is performing  sr_apply_changes() / sr_changes_notify_store().
More detailed, the applied change is an ietf-interface:interfaces/interface being edited while the applications is sending a notification of ietf-alarms with an identity-ref to ietf-interfaces:
<notification xmlns=""urn:ietf:params:xml:ns:netconf:notification:1.0"">
  <eventTime>2020-08-26T19:22:58+00:00</eventTime>
  <alarm-notification xmlns=""urn:ietf:params:xml:ns:yang:ietf-alarms"">
    <resource>/ietf-interfaces:interfaces/ietf-interfaces:interface[ietf-interfaces:name='ethernet 0/10:1']</resource>
    <alarm-type-id xmlns:adtn-if-ns-al=""http://www.adtran.com/ns/yang/adtran-ietf-interfaces-ns-ietf-alarms"">adtn-if-ns-al:interface-oper-status-down-alarm</alarm-type-id>
    <alarm-type-qualifier />
    <time>2020-08-26T19:22:58+00:00</time>
    <perceived-severity>major</perceived-severity>
    <alarm-text>interface is down</alarm-text>
  </alarm-notification>
</notification>
with <resource> being an identity-ref in that case pointing to an instance of ietf-interfaces.
The crash occurred when the application was in  sr_module_file_data_append() (-> open O_RDONLY shmem path: sr_ietf-interfaces.running) and netopeer2 was in  sr_cp_file2shm() (-> open O_WRONLY shmem path sr_ietf-interfaces.running).
Thus, re-creating shmem for sr_ietf-interfaces.running while it was read from caused that BUSERR.
Normally the shmem locking in sysrepo is supposed to prevent such case.
But, in the given case,  #4646 sr_shmmod_modinfo_collect_op(&mod_info, , , 0/*'output' parameter*/, ,) only added ietf-alarms to the mod_info so that module ietf-interfaces was not being locked in #4651  sr_shmmod_modinfo_rdlock(&mod_info).
When I turned the 'output' parameter in sr_shmmod_modinfo_collect_op(&mod_info ) to 1, this seem to fix the problem as ietf-interfaces was added to mod_info and then locked in #4651.","Hi,
your fix worked mostly by chance. The problem itself was quite simple (modules, whose data were used, were not being locked) but to fix it all properly, I did some major refactoring so it took me some time. But it should work now, similar test to your use-case included.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2121,2020-09-02T08:22:08Z,2021-01-27T15:18:59Z,2021-01-27T15:18:59Z,CLOSED,False,1,1,1,https://github.com/jkmuller,Fixed rdlock issue causing SIGBUS when sr_event_notif_send_tree(),1,[],https://github.com/sysrepo/sysrepo/pull/2121,https://github.com/jkmuller,3,https://github.com/sysrepo/sysrepo/pull/2121#issuecomment-691094897,"We have seen SIGBUS crashes when sending notifications via sr_event_notif_send_tree() from an application while in parallel netopeer2 is performing  sr_apply_changes() / sr_changes_notify_store().
More detailed, the applied change is an ietf-interface:interfaces/interface being edited while the applications is sending a notification of ietf-alarms with an identity-ref to ietf-interfaces:
<notification xmlns=""urn:ietf:params:xml:ns:netconf:notification:1.0"">
  <eventTime>2020-08-26T19:22:58+00:00</eventTime>
  <alarm-notification xmlns=""urn:ietf:params:xml:ns:yang:ietf-alarms"">
    <resource>/ietf-interfaces:interfaces/ietf-interfaces:interface[ietf-interfaces:name='ethernet 0/10:1']</resource>
    <alarm-type-id xmlns:adtn-if-ns-al=""http://www.adtran.com/ns/yang/adtran-ietf-interfaces-ns-ietf-alarms"">adtn-if-ns-al:interface-oper-status-down-alarm</alarm-type-id>
    <alarm-type-qualifier />
    <time>2020-08-26T19:22:58+00:00</time>
    <perceived-severity>major</perceived-severity>
    <alarm-text>interface is down</alarm-text>
  </alarm-notification>
</notification>
with <resource> being an identity-ref in that case pointing to an instance of ietf-interfaces.
The crash occurred when the application was in  sr_module_file_data_append() (-> open O_RDONLY shmem path: sr_ietf-interfaces.running) and netopeer2 was in  sr_cp_file2shm() (-> open O_WRONLY shmem path sr_ietf-interfaces.running).
Thus, re-creating shmem for sr_ietf-interfaces.running while it was read from caused that BUSERR.
Normally the shmem locking in sysrepo is supposed to prevent such case.
But, in the given case,  #4646 sr_shmmod_modinfo_collect_op(&mod_info, , , 0/*'output' parameter*/, ,) only added ietf-alarms to the mod_info so that module ietf-interfaces was not being locked in #4651  sr_shmmod_modinfo_rdlock(&mod_info).
When I turned the 'output' parameter in sr_shmmod_modinfo_collect_op(&mod_info ) to 1, this seem to fix the problem as ietf-interfaces was added to mod_info and then locked in #4651.","Hi,
glad to get a fix for this. Thanks!
Jens",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2124,2020-09-02T16:43:15Z,2020-09-03T06:31:53Z,2020-09-03T06:31:53Z,MERGED,True,6,1,1,https://github.com/syyyr,Run tests in a separate repositories,1,[],https://github.com/sysrepo/sysrepo/pull/2124,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2124,"This fixes #2122 and also enables parallelization of tests (all can be run at once).
Let me know what you think, I'm not sure what shm prefix to use. For the repository, I used the build directory.
I also am, once again, not sure about the commit message. :D","This fixes #2122 and also enables parallelization of tests (all can be run at once).
Let me know what you think, I'm not sure what shm prefix to use. For the repository, I used the build directory.
I also am, once again, not sure about the commit message. :D",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2124,2020-09-02T16:43:15Z,2020-09-03T06:31:53Z,2020-09-03T06:31:53Z,MERGED,True,6,1,1,https://github.com/syyyr,Run tests in a separate repositories,1,[],https://github.com/sysrepo/sysrepo/pull/2124,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2124#issuecomment-686285123,"This fixes #2122 and also enables parallelization of tests (all can be run at once).
Let me know what you think, I'm not sure what shm prefix to use. For the repository, I used the build directory.
I also am, once again, not sure about the commit message. :D","Hi,
okay, seems to work although the hundreds of files created this way are quite redundant. Thanks.",True,{'THUMBS_UP': ['https://github.com/syyyr']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2130,2020-09-04T09:03:02Z,2020-09-07T10:04:13Z,2020-09-07T10:04:13Z,MERGED,True,21,6,1,https://github.com/syyyr,sysrepo BUGFIX fix undefined behavior with qsort,1,[],https://github.com/sysrepo/sysrepo/pull/2130,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2130,Fixes UB in CESNET/netopeer2#712,Fixes UB in CESNET/netopeer2#712,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2130,2020-09-04T09:03:02Z,2020-09-07T10:04:13Z,2020-09-07T10:04:13Z,MERGED,True,21,6,1,https://github.com/syyyr,sysrepo BUGFIX fix undefined behavior with qsort,1,[],https://github.com/sysrepo/sysrepo/pull/2130,https://github.com/syyyr,2,https://github.com/sysrepo/sysrepo/pull/2130#issuecomment-687026560,Fixes UB in CESNET/netopeer2#712,"I found out that the undefined behavior appears in all of the qsort calls in shm_mod.c so I applied the same fix to all of them. I'm not sure if you're fine with this, or if I should refactor this into some sort of a function? I'm fine with changing this to your liking.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2136,2020-09-09T09:56:35Z,2020-09-09T12:02:09Z,2020-09-09T12:20:39Z,MERGED,True,1,1,1,https://github.com/syyyr,tests BUGFIX increase timeout in test_process,2,[],https://github.com/sysrepo/sysrepo/pull/2136,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2136,"Under TSan, this test sometimes hangs on wait(), because the forked
process never finishes and spins on some sort an init and/or cleanup
procedure, that I'm not able to debug. This is reproducible consistently
on our CI (a heavily multi-threaded environment). On my work laptop, I
was able to reproduce this by setting CPU clock speed to a low value.
TSan creates a huge overhead (and slows the forking process), which
seems to be mandatory for this issue to happen. Lowering the timeout to
a very low value (like 1) also increases the chance this appears.
This is definitely not a proper fix as I'm not sure what exactly is the
reason this happens (it could be a deeper problem), but increasing the
timeout solves it for our CI (or at least most of the time, I haven't
gotten the issue since I increased the timeout).
The test now runs for two seconds longer because of this, but
that shouldn't be a problem since the patch that enables the tests to be
run in parallel.
I also am not sure about the commit message title.","Under TSan, this test sometimes hangs on wait(), because the forked
process never finishes and spins on some sort an init and/or cleanup
procedure, that I'm not able to debug. This is reproducible consistently
on our CI (a heavily multi-threaded environment). On my work laptop, I
was able to reproduce this by setting CPU clock speed to a low value.
TSan creates a huge overhead (and slows the forking process), which
seems to be mandatory for this issue to happen. Lowering the timeout to
a very low value (like 1) also increases the chance this appears.
This is definitely not a proper fix as I'm not sure what exactly is the
reason this happens (it could be a deeper problem), but increasing the
timeout solves it for our CI (or at least most of the time, I haven't
gotten the issue since I increased the timeout).
The test now runs for two seconds longer because of this, but
that shouldn't be a problem since the patch that enables the tests to be
run in parallel.
I also am not sure about the commit message title.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2136,2020-09-09T09:56:35Z,2020-09-09T12:02:09Z,2020-09-09T12:20:39Z,MERGED,True,1,1,1,https://github.com/syyyr,tests BUGFIX increase timeout in test_process,2,[],https://github.com/sysrepo/sysrepo/pull/2136,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2136#issuecomment-689517933,"Under TSan, this test sometimes hangs on wait(), because the forked
process never finishes and spins on some sort an init and/or cleanup
procedure, that I'm not able to debug. This is reproducible consistently
on our CI (a heavily multi-threaded environment). On my work laptop, I
was able to reproduce this by setting CPU clock speed to a low value.
TSan creates a huge overhead (and slows the forking process), which
seems to be mandatory for this issue to happen. Lowering the timeout to
a very low value (like 1) also increases the chance this appears.
This is definitely not a proper fix as I'm not sure what exactly is the
reason this happens (it could be a deeper problem), but increasing the
timeout solves it for our CI (or at least most of the time, I haven't
gotten the issue since I increased the timeout).
The test now runs for two seconds longer because of this, but
that shouldn't be a problem since the patch that enables the tests to be
run in parallel.
I also am not sure about the commit message title.","I have nothing against merging this and I think it makes sense. However, for this test obviously every test case runs in 2 processes and in case of parallel execution, it can happen that the scheduler will not continue execution of the other process that should handle the event and the original process will still time out. No synchronization is possible in this specific use-case either. So, maybe running all the tests in parallel is not such a good idea after all.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2136,2020-09-09T09:56:35Z,2020-09-09T12:02:09Z,2020-09-09T12:20:39Z,MERGED,True,1,1,1,https://github.com/syyyr,tests BUGFIX increase timeout in test_process,2,[],https://github.com/sysrepo/sysrepo/pull/2136,https://github.com/syyyr,3,https://github.com/sysrepo/sysrepo/pull/2136#issuecomment-689521486,"Under TSan, this test sometimes hangs on wait(), because the forked
process never finishes and spins on some sort an init and/or cleanup
procedure, that I'm not able to debug. This is reproducible consistently
on our CI (a heavily multi-threaded environment). On my work laptop, I
was able to reproduce this by setting CPU clock speed to a low value.
TSan creates a huge overhead (and slows the forking process), which
seems to be mandatory for this issue to happen. Lowering the timeout to
a very low value (like 1) also increases the chance this appears.
This is definitely not a proper fix as I'm not sure what exactly is the
reason this happens (it could be a deeper problem), but increasing the
timeout solves it for our CI (or at least most of the time, I haven't
gotten the issue since I increased the timeout).
The test now runs for two seconds longer because of this, but
that shouldn't be a problem since the patch that enables the tests to be
run in parallel.
I also am not sure about the commit message title.","Thank you for merging.

So, maybe running all the tests in parallel is not such a good idea after all.

You mean as in, ctest -j10? I could reproduce this even in my dev environment without the -j flag and no other sysrepo processes running. Although I did have to reduce the timeout to a very small number and also slow down my computer (and also enable TSan).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2136,2020-09-09T09:56:35Z,2020-09-09T12:02:09Z,2020-09-09T12:20:39Z,MERGED,True,1,1,1,https://github.com/syyyr,tests BUGFIX increase timeout in test_process,2,[],https://github.com/sysrepo/sysrepo/pull/2136,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2136#issuecomment-689525533,"Under TSan, this test sometimes hangs on wait(), because the forked
process never finishes and spins on some sort an init and/or cleanup
procedure, that I'm not able to debug. This is reproducible consistently
on our CI (a heavily multi-threaded environment). On my work laptop, I
was able to reproduce this by setting CPU clock speed to a low value.
TSan creates a huge overhead (and slows the forking process), which
seems to be mandatory for this issue to happen. Lowering the timeout to
a very low value (like 1) also increases the chance this appears.
This is definitely not a proper fix as I'm not sure what exactly is the
reason this happens (it could be a deeper problem), but increasing the
timeout solves it for our CI (or at least most of the time, I haven't
gotten the issue since I increased the timeout).
The test now runs for two seconds longer because of this, but
that shouldn't be a problem since the patch that enables the tests to be
run in parallel.
I also am not sure about the commit message title.","Well, like I said, the test depends on some concurrency and since direct synchronization cannot be used, there will always be a slow enough machine (for whatever reason) that will time out.",True,{'THUMBS_UP': ['https://github.com/syyyr']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2142,2020-09-10T16:21:43Z,2020-09-11T06:32:14Z,2020-09-11T06:32:14Z,MERGED,True,2,0,1,https://github.com/syyyr,sysrepocfg BUGFIX add null byte after stdin config,1,[],https://github.com/sysrepo/sysrepo/pull/2142,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2142,"Hi, I found a bug when reading sysrepocfg config from stdin:
$ echo -ne ""lol"" | /opt/cesnet-au/sysrepo/bin/sysrepocfg -I --format=xml -m ietf-netconf-acm 
sysrepocfg error: libyang: Encountered invalid character sequence ""lol�������"".
sysrepocfg error: Data parsing failed
$ echo -ne ""lol\0"" | /opt/cesnet-au/sysrepo/bin/sysrepocfg -I --format=xml -m ietf-netconf-acm 
sysrepocfg error: libyang: Encountered invalid character sequence ""lol"".
sysrepocfg error: Data parsing failed

Pretty straightforward fix. But feel free to change it however you like.","Hi, I found a bug when reading sysrepocfg config from stdin:
$ echo -ne ""lol"" | /opt/cesnet-au/sysrepo/bin/sysrepocfg -I --format=xml -m ietf-netconf-acm 
sysrepocfg error: libyang: Encountered invalid character sequence ""lol�������"".
sysrepocfg error: Data parsing failed
$ echo -ne ""lol\0"" | /opt/cesnet-au/sysrepo/bin/sysrepocfg -I --format=xml -m ietf-netconf-acm 
sysrepocfg error: libyang: Encountered invalid character sequence ""lol"".
sysrepocfg error: Data parsing failed

Pretty straightforward fix. But feel free to change it however you like.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2142,2020-09-10T16:21:43Z,2020-09-11T06:32:14Z,2020-09-11T06:32:14Z,MERGED,True,2,0,1,https://github.com/syyyr,sysrepocfg BUGFIX add null byte after stdin config,1,[],https://github.com/sysrepo/sysrepo/pull/2142,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2142#issuecomment-690904774,"Hi, I found a bug when reading sysrepocfg config from stdin:
$ echo -ne ""lol"" | /opt/cesnet-au/sysrepo/bin/sysrepocfg -I --format=xml -m ietf-netconf-acm 
sysrepocfg error: libyang: Encountered invalid character sequence ""lol�������"".
sysrepocfg error: Data parsing failed
$ echo -ne ""lol\0"" | /opt/cesnet-au/sysrepo/bin/sysrepocfg -I --format=xml -m ietf-netconf-acm 
sysrepocfg error: libyang: Encountered invalid character sequence ""lol"".
sysrepocfg error: Data parsing failed

Pretty straightforward fix. But feel free to change it however you like.","Right, have not used this feature much, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2165,2020-10-01T06:28:24Z,2020-10-01T08:59:28Z,2020-10-01T08:59:28Z,CLOSED,False,16,17,2,https://github.com/hthiery,Replace SRP_LOGxxxMSG in example,1,[],https://github.com/sysrepo/sysrepo/pull/2165,https://github.com/hthiery,1,https://github.com/sysrepo/sysrepo/pull/2165,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2165,2020-10-01T06:28:24Z,2020-10-01T08:59:28Z,2020-10-01T08:59:28Z,CLOSED,False,16,17,2,https://github.com/hthiery,Replace SRP_LOGxxxMSG in example,1,[],https://github.com/sysrepo/sysrepo/pull/2165,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2165#issuecomment-701934256,,"I plan to remove the *MSG macros altogether but since it will be a non-backwards compatible change, I wanted to wait until there are more such changes. I do not think it is critical. So, I would probably prefer to leave it the way it is for now but if you feel strongly about this, I do not have a problem with merging it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2165,2020-10-01T06:28:24Z,2020-10-01T08:59:28Z,2020-10-01T08:59:28Z,CLOSED,False,16,17,2,https://github.com/hthiery,Replace SRP_LOGxxxMSG in example,1,[],https://github.com/sysrepo/sysrepo/pull/2165,https://github.com/hthiery,3,https://github.com/sysrepo/sysrepo/pull/2165#issuecomment-701986216,,"I do not have a problem with that ... but thought it is good to change the example to show the ""new"" way of using the log mechanism. That the ""old"" fashion is still there is ok for me.
What about wrapping the old macros with deprecation warnings?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2165,2020-10-01T06:28:24Z,2020-10-01T08:59:28Z,2020-10-01T08:59:28Z,CLOSED,False,16,17,2,https://github.com/hthiery,Replace SRP_LOGxxxMSG in example,1,[],https://github.com/sysrepo/sysrepo/pull/2165,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2165#issuecomment-701989855,,"Well, I am hoping to remove them fairly soon (month or so) so I was hoping it could stay the way it is",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2165,2020-10-01T06:28:24Z,2020-10-01T08:59:28Z,2020-10-01T08:59:28Z,CLOSED,False,16,17,2,https://github.com/hthiery,Replace SRP_LOGxxxMSG in example,1,[],https://github.com/sysrepo/sysrepo/pull/2165,https://github.com/hthiery,5,https://github.com/sysrepo/sysrepo/pull/2165#issuecomment-701991503,,no problem for me,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2165,2020-10-01T06:28:24Z,2020-10-01T08:59:28Z,2020-10-01T08:59:28Z,CLOSED,False,16,17,2,https://github.com/hthiery,Replace SRP_LOGxxxMSG in example,1,[],https://github.com/sysrepo/sysrepo/pull/2165,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/2165#issuecomment-701994668,,Fine.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2166,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/syyyr,2,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-702202202,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt",I'll also probably write some tests for this: I'm not sure if this implementation is correct. I posted this here mainly for discussion,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-702759362,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Hi,
firstly, let me start by saying that the C++ bindings are open for (major) modifications because with the migration to libyang2, there will be new libyang C++ bindings, which then must be used in the sysrepo C++ bindings. So, with that there will certainly be at least some refactoring done. However, these C++ bindings are not a priority so I am not sure when it will all take place, probably some time next year. But in the meantime the current C++ bindings can be improved, the changes will not be lost because they will be used as the basis for the new bindings.
Having said that, I have nothing against changing how the current subscriptions work and having only a single class for them, seems like the cleaner solution since backwards compatibility is not that much of an issue.
A final note, while it is true that you cannot create an empty subscription structure in C, you can get one if you then call only sr_disconnect() and not sr_unsubscribe(). You then have a valid subscription structure (which can be used as the subscription context for later subscriptions) that does not listen for any events.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/syyyr,4,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-704211041,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","I changed my mind, for a test I would have to write the infrastructure for testing c++ and also write a custom event loop, which seems like it would take some time. However, I'm testing this in our app which uses this (and it has already found a bug in #2171).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-704214362,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Okay, I suppose, but I would still like it there not to be redundant classes and this one seems that way. If it is to be merged, please keep all the required functionality in a single subscription class.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/syyyr,6,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-709628760,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Hi, I merged my ""DelegatedSubscription"" into the Subcribe class. I reworked the entire API to a more C++11 style. I have yet to try it in my app, but I posted it here for discussion. Let me know what you think.
I'm not sure if this somehow interferes with Python bindings.
I also included some cleanup commits.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-709873525,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","In general it looks good to me but I am wondering, was it really necessary to make all the structures shared pointers? Even the local variables in the examples?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/syyyr,8,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-709878343,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Are you referring to the ""get rid of new"" commit? That commit doesn't change variables into shared pointers, all of them already were shared pointers, it's just that it's a good practice to create them with make_shared instead of new.
By the way, I think the API can be improved a little bit more, I'll be discussing that with @jktjkt today, and then I will post the results.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/michalvasko,9,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-709882444,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","I did not look at separate commits but the whole PR. But you are right, the current API requires them to be pointers so never mind.
And good, l am sure there are more improvements that can be done.",True,{'THUMBS_UP': ['https://github.com/syyyr']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/codecov-io,10,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-712778035,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Codecov Report

Merging #2166 into devel will decrease coverage by 0.02%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #2166      +/-   ##
==========================================
- Coverage   66.16%   66.14%   -0.02%     
==========================================
  Files          16       16              
  Lines       14290    14292       +2     
  Branches     3386     3386              
==========================================
- Hits         9454     9453       -1     
- Misses       4836     4839       +3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/syyyr,11,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-712782095,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Okay, so the tests were failing because I removed the unsubscribe method from the bindings. Now I have also removed it from the tests, unsubscription should still happen from the destructor. Funnily enough, there are actually TWO subscribe.unsubscribe calls in the tests, but the other one doesn't seem to make any problems (so I've preserved it).
What do you think about this? If I understand correctly, what the python bindings do is extend Subscribe with new overloads for subscription methods that take python callbacks is arguments. That means that the sub API rework didn't really affect Python (apart from the unsub method). The main reason of the rework was to get rid of sysrepo::Callback in favor of the more flexible std::function. In Python, you can directly use functions, which is fine (by me).
The internal implemention could be reworked though, the current state is that there are two implementations of all the subcribe methods (I'm not sure how much this can be improved). Also private_date is available even though you can use captures in Python (the same as in C++, where I've gotten rid of private_data).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/michalvasko,12,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-712814072,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","You do not have to concern yourself with these C++ based SWIG Python bindings, they should be deprecated fairly soon. It is enough if the current functionality of them is preserved.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/jktjkt,13,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-712822076,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Just a suggestion on the Python bindings -- we had quite a nice experience with pybind11 (docs). For example, here are Python bindings for our C++ NETCONF-talking wrapper, and here's an example on how to use them from the Python code. It's a part of a basic smoke test of the bindings themselves, so it's not terribly idiomatic Python.
Anyway, just sharing my favorite SW tools. That reminds me that we should contribute our C++ bindings for libnetconf2 upstream; yup, we'll do that once they get cleaned up, which depends on some libssh improvements, etc.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2166,2020-10-01T09:30:30Z,2020-10-20T13:14:43Z,2020-10-20T13:14:43Z,MERGED,True,508,493,17,https://github.com/syyyr,C++: Rework subcriptions,4,[],https://github.com/sysrepo/sysrepo/pull/2166,https://github.com/michalvasko,14,https://github.com/sysrepo/sysrepo/pull/2166#issuecomment-712839766,"Detailed info is in the commit message. Naming (especially DelegatedSubscriptions) can/should be changed.
In case you like the new std::function callbacks, I could also change the current sysrepo::Subscribe to use that (instead of overriding sysrepo::Callback).
cc @jktjkt","Just a suggestion on the Python bindings

Thanks, but we are simply not able to maintain all these bindings so we have taken up the offer of @rjarry and his Python bindings implementation using CFFI. They can already be used and are available at https://github.com/sysrepo/sysrepo-python. They will be the main Python bindings after the current ones are deprecated.

That reminds me that we should contribute our C++ bindings for libnetconf2 upstream

Sounds great, like I said, we just do not have the people for all this.
So, these C++ improvements are appreciated and can be merged it seems, thanks!",True,{'THUMBS_UP': ['https://github.com/syyyr']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2171,2020-10-06T11:26:53Z,2020-10-06T12:31:40Z,2020-10-06T12:41:17Z,MERGED,True,1,2,1,https://github.com/syyyr,c++ BUGFIX oper_data output,1,[],https://github.com/sysrepo/sysrepo/pull/2171,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2171,"If subscribing to a list type top-level node, all siblings need to be
duplicated.
Also, I deleted a line which was (probably) supposed to create a nullptr
shared_ptr, but instead created a valid libyang::Data_Node with an
invalid lyd_node inside. That broke the duping algorithm if the parent/tree
variable wasn't reassigned inside the callback.
Sorry, I don't have a test, but I found out about this when porting to new sysrepo.","If subscribing to a list type top-level node, all siblings need to be
duplicated.
Also, I deleted a line which was (probably) supposed to create a nullptr
shared_ptr, but instead created a valid libyang::Data_Node with an
invalid lyd_node inside. That broke the duping algorithm if the parent/tree
variable wasn't reassigned inside the callback.
Sorry, I don't have a test, but I found out about this when porting to new sysrepo.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2171,2020-10-06T11:26:53Z,2020-10-06T12:31:40Z,2020-10-06T12:41:17Z,MERGED,True,1,2,1,https://github.com/syyyr,c++ BUGFIX oper_data output,1,[],https://github.com/sysrepo/sysrepo/pull/2171,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2171#issuecomment-704212351,"If subscribing to a list type top-level node, all siblings need to be
duplicated.
Also, I deleted a line which was (probably) supposed to create a nullptr
shared_ptr, but instead created a valid libyang::Data_Node with an
invalid lyd_node inside. That broke the duping algorithm if the parent/tree
variable wasn't reassigned inside the callback.
Sorry, I don't have a test, but I found out about this when porting to new sysrepo.","Okay, I may be hitting my C++ knowledge limits here. When you remove the tree assignment, what exactly is left in it? Is it a proper shared pointer, just without value? Because even though it is passed by reference to the callback, it must be valid because reset() method is supposed to be called on it. As for the duplication, you are always supposed to provide subtrees and that is true for top-level subscriptions as well so the fix should be redundant.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2171,2020-10-06T11:26:53Z,2020-10-06T12:31:40Z,2020-10-06T12:41:17Z,MERGED,True,1,2,1,https://github.com/syyyr,c++ BUGFIX oper_data output,1,[],https://github.com/sysrepo/sysrepo/pull/2171,https://github.com/syyyr,3,https://github.com/sysrepo/sysrepo/pull/2171#issuecomment-704220992,"If subscribing to a list type top-level node, all siblings need to be
duplicated.
Also, I deleted a line which was (probably) supposed to create a nullptr
shared_ptr, but instead created a valid libyang::Data_Node with an
invalid lyd_node inside. That broke the duping algorithm if the parent/tree
variable wasn't reassigned inside the callback.
Sorry, I don't have a test, but I found out about this when porting to new sysrepo.","In the C api, the callback argument is lyd_node**. In the C++ bindings, this translates to the reference, which is the outer indirection and the shared_ptr, which is the inner indirection (lyd_node*). If I understand the callbacks correctly, the inner indirection can be NULL, when working with top-level nodes. That translates to C++ as a nullptr of type libyang::Data_Node. That means that the shared_ptr has to be initialized with nullptr (or default constructed, it's the same behavior). The reference itself will always point to a valid shared_ptr object (reference can't be NULL). So, it is still valid to call reset() on it, if you want to (or reassign it or do whatever you want to and it will propagate back to the C api).
What the previous code did was not initialize a shared_ptr with a null, but construct a libyang::Data_Node with a nullptr lyd_node* inside it. make_shared constructs objects (as opposed to assigning pointer values).
About the duplication: what if I'm subscribed to a top-level list? If I return more instances, all of them the same list, but different instances, then there won't be any subtrees (this is something that we do in our app).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2171,2020-10-06T11:26:53Z,2020-10-06T12:31:40Z,2020-10-06T12:41:17Z,MERGED,True,1,2,1,https://github.com/syyyr,c++ BUGFIX oper_data output,1,[],https://github.com/sysrepo/sysrepo/pull/2171,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2171#issuecomment-704236096,"If subscribing to a list type top-level node, all siblings need to be
duplicated.
Also, I deleted a line which was (probably) supposed to create a nullptr
shared_ptr, but instead created a valid libyang::Data_Node with an
invalid lyd_node inside. That broke the duping algorithm if the parent/tree
variable wasn't reassigned inside the callback.
Sorry, I don't have a test, but I found out about this when porting to new sysrepo.","The reference itself will always point to a valid shared_ptr object (reference can't be NULL).

Of course, but if I applied the C initialization rules, tree would not be nullptr but some garbage instead and if you called reset() on it, it would most likely crash. That is obviously not true for C++, which I thought so but wanted to make sure.

what if I'm subscribed to a top-level list?

Ideally, you should not need to do this because it is not a good practice. Moreover, libyang is not able to use hashes for such lists (or leaf-lists) so in case there were many such instances expect severely degraded performance. However, it is a valid use-case and seems to be supported in C code, so okay. I have mentioned this use-case in sysrepo.h as well.
So okay, this can be merged, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2171,2020-10-06T11:26:53Z,2020-10-06T12:31:40Z,2020-10-06T12:41:17Z,MERGED,True,1,2,1,https://github.com/syyyr,c++ BUGFIX oper_data output,1,[],https://github.com/sysrepo/sysrepo/pull/2171,https://github.com/syyyr,5,https://github.com/sysrepo/sysrepo/pull/2171#issuecomment-704240869,"If subscribing to a list type top-level node, all siblings need to be
duplicated.
Also, I deleted a line which was (probably) supposed to create a nullptr
shared_ptr, but instead created a valid libyang::Data_Node with an
invalid lyd_node inside. That broke the duping algorithm if the parent/tree
variable wasn't reassigned inside the callback.
Sorry, I don't have a test, but I found out about this when porting to new sysrepo.","That is obviously not true for C++, which I thought so but wanted to make sure.

I think there is some value in initializing with nullptr, for clarity, but the problem was using std::make_shared vs shared_ptr's constructor. I removed that line not because it was redundant, but because it resulted in a bug. Just wanted to point that out (I wasn't sure if it was clear).
Thanks for merging!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2177,2020-10-10T06:26:05Z,2020-10-12T06:17:10Z,2020-10-12T06:17:11Z,MERGED,True,0,2,1,https://github.com/ezekieltsui,"Duplicate package of ""apt-get install"" in Dockerfile",4,[],https://github.com/sysrepo/sysrepo/pull/2177,https://github.com/ezekieltsui,1,https://github.com/sysrepo/sysrepo/pull/2177,Delete duplicate package of 'apt-get install'. ( vim and build-essential ),Delete duplicate package of 'apt-get install'. ( vim and build-essential ),True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2177,2020-10-10T06:26:05Z,2020-10-12T06:17:10Z,2020-10-12T06:17:11Z,MERGED,True,0,2,1,https://github.com/ezekieltsui,"Duplicate package of ""apt-get install"" in Dockerfile",4,[],https://github.com/sysrepo/sysrepo/pull/2177,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2177#issuecomment-706882026,Delete duplicate package of 'apt-get install'. ( vim and build-essential ),"Right, thanks. But I will merge ti to devel only for now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2177,2020-10-10T06:26:05Z,2020-10-12T06:17:10Z,2020-10-12T06:17:11Z,MERGED,True,0,2,1,https://github.com/ezekieltsui,"Duplicate package of ""apt-get install"" in Dockerfile",4,[],https://github.com/sysrepo/sysrepo/pull/2177,https://github.com/codecov-io,3,https://github.com/sysrepo/sysrepo/pull/2177#issuecomment-706890192,Delete duplicate package of 'apt-get install'. ( vim and build-essential ),"Codecov Report

Merging #2177 into devel will increase coverage by 0.05%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##            devel    #2177      +/-   ##
==========================================
+ Coverage   66.12%   66.17%   +0.05%     
==========================================
  Files          16       16              
  Lines       14268    14270       +2     
  Branches     3379     3379              
==========================================
+ Hits         9434     9443       +9     
+ Misses       4834     4827       -7",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2184,2020-10-15T12:42:30Z,2020-10-20T13:25:09Z,2020-10-20T13:25:09Z,MERGED,True,615,0,2,https://github.com/jvijtiuk,sysrepo DOC add plugin development documentation,2,[],https://github.com/sysrepo/sysrepo/pull/2184,https://github.com/jvijtiuk,1,https://github.com/sysrepo/sysrepo/pull/2184,"This adds an initial version of plugin development documentation in plugin_dev_doc.md.
The goal of the document is to provide an introduction to sysrepo plugin development, with an overview of the required background knowledge, like YANG and NETCONF so that someone unfamiliar with the process can start developing plugins.
If there are any comments or changes that should be made, please let me know.
Thanks,
Juraj","This adds an initial version of plugin development documentation in plugin_dev_doc.md.
The goal of the document is to provide an introduction to sysrepo plugin development, with an overview of the required background knowledge, like YANG and NETCONF so that someone unfamiliar with the process can start developing plugins.
If there are any comments or changes that should be made, please let me know.
Thanks,
Juraj",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2184,2020-10-15T12:42:30Z,2020-10-20T13:25:09Z,2020-10-20T13:25:09Z,MERGED,True,615,0,2,https://github.com/jvijtiuk,sysrepo DOC add plugin development documentation,2,[],https://github.com/sysrepo/sysrepo/pull/2184,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2184#issuecomment-709302607,"This adds an initial version of plugin development documentation in plugin_dev_doc.md.
The goal of the document is to provide an introduction to sysrepo plugin development, with an overview of the required background knowledge, like YANG and NETCONF so that someone unfamiliar with the process can start developing plugins.
If there are any comments or changes that should be made, please let me know.
Thanks,
Juraj",It seems fine to me but at the beginning there is quite specific information about versions and the current state of development. This may easily lead to outdated information so we must be careful about that.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2184,2020-10-15T12:42:30Z,2020-10-20T13:25:09Z,2020-10-20T13:25:09Z,MERGED,True,615,0,2,https://github.com/jvijtiuk,sysrepo DOC add plugin development documentation,2,[],https://github.com/sysrepo/sysrepo/pull/2184,https://github.com/jvijtiuk,3,https://github.com/sysrepo/sysrepo/pull/2184#issuecomment-712775245,"This adds an initial version of plugin development documentation in plugin_dev_doc.md.
The goal of the document is to provide an introduction to sysrepo plugin development, with an overview of the required background knowledge, like YANG and NETCONF so that someone unfamiliar with the process can start developing plugins.
If there are any comments or changes that should be made, please let me know.
Thanks,
Juraj","I agree, we could remove references to current versions. However it might be useful to have it all available in one place, so that someone who is just getting started with plugin development can find all the relevant information in one place. Do you have any suggestions on what we should do?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2184,2020-10-15T12:42:30Z,2020-10-20T13:25:09Z,2020-10-20T13:25:09Z,MERGED,True,615,0,2,https://github.com/jvijtiuk,sysrepo DOC add plugin development documentation,2,[],https://github.com/sysrepo/sysrepo/pull/2184,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2184#issuecomment-712809672,"This adds an initial version of plugin development documentation in plugin_dev_doc.md.
The goal of the document is to provide an introduction to sysrepo plugin development, with an overview of the required background knowledge, like YANG and NETCONF so that someone unfamiliar with the process can start developing plugins.
If there are any comments or changes that should be made, please let me know.
Thanks,
Juraj","Well, I am not that sure about the usefulness of that section at all. The current versions are always available here on GitHub so it should be easy enough for anyone interested to learn what they want. Still, information that will not age (such as the legacy versions) can remain.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2184,2020-10-15T12:42:30Z,2020-10-20T13:25:09Z,2020-10-20T13:25:09Z,MERGED,True,615,0,2,https://github.com/jvijtiuk,sysrepo DOC add plugin development documentation,2,[],https://github.com/sysrepo/sysrepo/pull/2184,https://github.com/jvijtiuk,5,https://github.com/sysrepo/sysrepo/pull/2184#issuecomment-712821749,"This adds an initial version of plugin development documentation in plugin_dev_doc.md.
The goal of the document is to provide an introduction to sysrepo plugin development, with an overview of the required background knowledge, like YANG and NETCONF so that someone unfamiliar with the process can start developing plugins.
If there are any comments or changes that should be made, please let me know.
Thanks,
Juraj","The current versions are always available here on GitHub so it should be easy enough for anyone interested to learn what they want. Still, information that will not age (such as the legacy versions) can remain.

I've pushed a commit that removes the unnecessary information, and refers to the projects on GitHub, so I think this should be fine now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2184,2020-10-15T12:42:30Z,2020-10-20T13:25:09Z,2020-10-20T13:25:09Z,MERGED,True,615,0,2,https://github.com/jvijtiuk,sysrepo DOC add plugin development documentation,2,[],https://github.com/sysrepo/sysrepo/pull/2184,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/2184#issuecomment-712847758,"This adds an initial version of plugin development documentation in plugin_dev_doc.md.
The goal of the document is to provide an introduction to sysrepo plugin development, with an overview of the required background knowledge, like YANG and NETCONF so that someone unfamiliar with the process can start developing plugins.
If there are any comments or changes that should be made, please let me know.
Thanks,
Juraj","Okay, seems good now, merging.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2195,2020-10-26T17:51:35Z,2020-10-27T08:42:37Z,2020-10-27T08:43:12Z,MERGED,True,2,2,1,https://github.com/jsmolic,docker FEATURE use libssh stable-0.9 branch in sysrepo-netopeer2 latest Dockerfile,1,[],https://github.com/sysrepo/sysrepo/pull/2195,https://github.com/jsmolic,1,https://github.com/sysrepo/sysrepo/pull/2195,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2195,2020-10-26T17:51:35Z,2020-10-27T08:42:37Z,2020-10-27T08:43:12Z,MERGED,True,2,2,1,https://github.com/jsmolic,docker FEATURE use libssh stable-0.9 branch in sysrepo-netopeer2 latest Dockerfile,1,[],https://github.com/sysrepo/sysrepo/pull/2195,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2195#issuecomment-717052531,,"Okay, checking-out a specific version is a reasonable approach but then I would opt for the latest 0.9.5, no reason not to anymore (since it has finally fixed all the damn regression bugs).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2195,2020-10-26T17:51:35Z,2020-10-27T08:42:37Z,2020-10-27T08:43:12Z,MERGED,True,2,2,1,https://github.com/jsmolic,docker FEATURE use libssh stable-0.9 branch in sysrepo-netopeer2 latest Dockerfile,1,[],https://github.com/sysrepo/sysrepo/pull/2195,https://github.com/jsmolic,3,https://github.com/sysrepo/sysrepo/pull/2195#issuecomment-717056122,,"@michalvasko Sure, that makes sense. I have added the appropriate changes",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2195,2020-10-26T17:51:35Z,2020-10-27T08:42:37Z,2020-10-27T08:43:12Z,MERGED,True,2,2,1,https://github.com/jsmolic,docker FEATURE use libssh stable-0.9 branch in sysrepo-netopeer2 latest Dockerfile,1,[],https://github.com/sysrepo/sysrepo/pull/2195,https://github.com/jsmolic,4,https://github.com/sysrepo/sysrepo/pull/2195#issuecomment-717063315,,Let's actually use stable-0.9 branch,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2195,2020-10-26T17:51:35Z,2020-10-27T08:42:37Z,2020-10-27T08:43:12Z,MERGED,True,2,2,1,https://github.com/jsmolic,docker FEATURE use libssh stable-0.9 branch in sysrepo-netopeer2 latest Dockerfile,1,[],https://github.com/sysrepo/sysrepo/pull/2195,https://github.com/jsmolic,5,https://github.com/sysrepo/sysrepo/pull/2195#issuecomment-717082181,,Thanks,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2196,2020-10-26T21:19:26Z,2020-10-29T08:15:29Z,2020-10-29T20:45:03Z,MERGED,True,63,70,9,https://github.com/imiller0,First step to supporting access to sysrepo across multiple containers,2,[],https://github.com/sysrepo/sysrepo/pull/2196,https://github.com/imiller0,1,https://github.com/sysrepo/sysrepo/pull/2196,"Convert all shm_open and shm_unlink calls to open() and unlink().  This allows the sysrepo shared-memory directory to be a shared-memory filesystem mounted from ""host"" to container.  This is the first step towards allowing full cooperative access to sysrepo by multiple containers.
By using open() and unlink(), all handles to the shared memory objects (main/ext files, subscriptions, etc) can all use absolute path references.
A quick look at the glibc implementations of shm_open and shm_unlink show a couple notable differences, all of which I believe don't impact sysrepo:

shm_open adds the O_NOFOLLOw flag to the open() call.  This flag causes a failure if the opened ""file"" is a symbolic link.  None of the sysrepo files in shared memory are (as far as I can tell) symbolic links.
shm_open adds the O_CLOEXEC flag to the open() call.  This flag closes the file descriptor across execve system calls (forked child process).  Running ""nm"" on the libsysrepo and libyang libraries does not reveal any exec* calls.
shm_open searches the filesystem for a shared memory mount point.  The search starts at /dev/shm then moves on to mounts in /proc/mounts or /etc/fstab. For sysrepo the mount point is specified in common.h.in, so the search in this case is not beneficial.
shm_open verifies the filesystem is a shared memory filesystem by checking the superblock ""magic"" number (for SHMFS or TMPFS).  This validation will be lost by this change-set, but the #define in common.h.in is set to /dev/shm which should always be a shared memory filesystem.
shm_unlink() performs the same filesystem search as shm_open to locate the path, but is otherwise just a passthrough to unlink().

Please let me know if you have any questions or if anything needs to be re-worked.  Other changes for allowing access across container boundaries will be pushed ""soon"".
Thanks!","Convert all shm_open and shm_unlink calls to open() and unlink().  This allows the sysrepo shared-memory directory to be a shared-memory filesystem mounted from ""host"" to container.  This is the first step towards allowing full cooperative access to sysrepo by multiple containers.
By using open() and unlink(), all handles to the shared memory objects (main/ext files, subscriptions, etc) can all use absolute path references.
A quick look at the glibc implementations of shm_open and shm_unlink show a couple notable differences, all of which I believe don't impact sysrepo:

shm_open adds the O_NOFOLLOw flag to the open() call.  This flag causes a failure if the opened ""file"" is a symbolic link.  None of the sysrepo files in shared memory are (as far as I can tell) symbolic links.
shm_open adds the O_CLOEXEC flag to the open() call.  This flag closes the file descriptor across execve system calls (forked child process).  Running ""nm"" on the libsysrepo and libyang libraries does not reveal any exec* calls.
shm_open searches the filesystem for a shared memory mount point.  The search starts at /dev/shm then moves on to mounts in /proc/mounts or /etc/fstab. For sysrepo the mount point is specified in common.h.in, so the search in this case is not beneficial.
shm_open verifies the filesystem is a shared memory filesystem by checking the superblock ""magic"" number (for SHMFS or TMPFS).  This validation will be lost by this change-set, but the #define in common.h.in is set to /dev/shm which should always be a shared memory filesystem.
shm_unlink() performs the same filesystem search as shm_open to locate the path, but is otherwise just a passthrough to unlink().

Please let me know if you have any questions or if anything needs to be re-worked.  Other changes for allowing access across container boundaries will be pushed ""soon"".
Thanks!",True,{'THUMBS_UP': ['https://github.com/kempstonjoystick']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2196,2020-10-26T21:19:26Z,2020-10-29T08:15:29Z,2020-10-29T20:45:03Z,MERGED,True,63,70,9,https://github.com/imiller0,First step to supporting access to sysrepo across multiple containers,2,[],https://github.com/sysrepo/sysrepo/pull/2196,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/2196#issuecomment-716858642,"Convert all shm_open and shm_unlink calls to open() and unlink().  This allows the sysrepo shared-memory directory to be a shared-memory filesystem mounted from ""host"" to container.  This is the first step towards allowing full cooperative access to sysrepo by multiple containers.
By using open() and unlink(), all handles to the shared memory objects (main/ext files, subscriptions, etc) can all use absolute path references.
A quick look at the glibc implementations of shm_open and shm_unlink show a couple notable differences, all of which I believe don't impact sysrepo:

shm_open adds the O_NOFOLLOw flag to the open() call.  This flag causes a failure if the opened ""file"" is a symbolic link.  None of the sysrepo files in shared memory are (as far as I can tell) symbolic links.
shm_open adds the O_CLOEXEC flag to the open() call.  This flag closes the file descriptor across execve system calls (forked child process).  Running ""nm"" on the libsysrepo and libyang libraries does not reveal any exec* calls.
shm_open searches the filesystem for a shared memory mount point.  The search starts at /dev/shm then moves on to mounts in /proc/mounts or /etc/fstab. For sysrepo the mount point is specified in common.h.in, so the search in this case is not beneficial.
shm_open verifies the filesystem is a shared memory filesystem by checking the superblock ""magic"" number (for SHMFS or TMPFS).  This validation will be lost by this change-set, but the #define in common.h.in is set to /dev/shm which should always be a shared memory filesystem.
shm_unlink() performs the same filesystem search as shm_open to locate the path, but is otherwise just a passthrough to unlink().

Please let me know if you have any questions or if anything needs to be re-worked.  Other changes for allowing access across container boundaries will be pushed ""soon"".
Thanks!","Codecov Report

Merging #2196 into devel will decrease coverage by 0.07%.
The diff coverage is 93.62%.

@@            Coverage Diff             @@
##            devel    #2196      +/-   ##
==========================================
- Coverage   66.16%   66.08%   -0.07%     
==========================================
  Files          16       16              
  Lines       14290    14285       -5     
  Branches     3386     3383       -3     
==========================================
- Hits         9454     9440      -14     
- Misses       4836     4845       +9",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2196,2020-10-26T21:19:26Z,2020-10-29T08:15:29Z,2020-10-29T20:45:03Z,MERGED,True,63,70,9,https://github.com/imiller0,First step to supporting access to sysrepo across multiple containers,2,[],https://github.com/sysrepo/sysrepo/pull/2196,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2196#issuecomment-717075447,"Convert all shm_open and shm_unlink calls to open() and unlink().  This allows the sysrepo shared-memory directory to be a shared-memory filesystem mounted from ""host"" to container.  This is the first step towards allowing full cooperative access to sysrepo by multiple containers.
By using open() and unlink(), all handles to the shared memory objects (main/ext files, subscriptions, etc) can all use absolute path references.
A quick look at the glibc implementations of shm_open and shm_unlink show a couple notable differences, all of which I believe don't impact sysrepo:

shm_open adds the O_NOFOLLOw flag to the open() call.  This flag causes a failure if the opened ""file"" is a symbolic link.  None of the sysrepo files in shared memory are (as far as I can tell) symbolic links.
shm_open adds the O_CLOEXEC flag to the open() call.  This flag closes the file descriptor across execve system calls (forked child process).  Running ""nm"" on the libsysrepo and libyang libraries does not reveal any exec* calls.
shm_open searches the filesystem for a shared memory mount point.  The search starts at /dev/shm then moves on to mounts in /proc/mounts or /etc/fstab. For sysrepo the mount point is specified in common.h.in, so the search in this case is not beneficial.
shm_open verifies the filesystem is a shared memory filesystem by checking the superblock ""magic"" number (for SHMFS or TMPFS).  This validation will be lost by this change-set, but the #define in common.h.in is set to /dev/shm which should always be a shared memory filesystem.
shm_unlink() performs the same filesystem search as shm_open to locate the path, but is otherwise just a passthrough to unlink().

Please let me know if you have any questions or if anything needs to be re-worked.  Other changes for allowing access across container boundaries will be pushed ""soon"".
Thanks!","Hi,
thanks for splitting the changes into separate commits and PRs, it will be easier to review it this way. Also, it seems you dug deep into glibc, which is great.

shm_open adds the O_NOFOLLOw flag to the open() call. This flag causes a failure if the opened ""file"" is a symbolic link. None of the sysrepo files in shared memory are (as far as I can tell) symbolic links.

They are not and they should not be. So actually always using this flag seems like a reasonable security measure to me. And it can probably be used for all the calls, even when opening startup or YANG files as all of those should be managed exclusively by sysrepo.

shm_open adds the O_CLOEXEC flag to the open() call. This flag closes the file descriptor across execve system calls (forked child process). Running ""nm"" on the libsysrepo and libyang libraries does not reveal any exec* calls.

Did not think about this flag but now that you mention it, it should also be used for all the calls. Or at least for opening the main SHM when a new connection is created because forking then causes a fatal problem (and it is mentioned in the docs). This way sysrepo would simply stop working, which is the most that can be done.
So, ideally there could be a new macro defined with these 2 flags and used in all the open() calls.

shm_open searches the filesystem for a shared memory mount point. The search starts at /dev/shm then moves on to mounts in /proc/mounts or /etc/fstab. For sysrepo the mount point is specified in common.h.in, so the search in this case is not beneficial.

I did not know this and a static path is used because the SHM files are inspected also using access() and I did not know how else to implement it, about any portable way of learning the SHM directory. But there were no issues with this it seems and I am not sure how would you go about the functionality in this PR if it worked any other way, anyway. But if you have some ideas, let me know.

shm_open verifies the filesystem is a shared memory filesystem by checking the superblock ""magic"" number (for SHMFS or TMPFS). This validation will be lost by this change-set, but the #define in common.h.in is set to /dev/shm which should always be a shared memory filesystem.

Well, shared memory is actually used mostly for performance reasons and the feature of it not being persistent is just an additional useful perk. So, this should not be a problem, I think. With connection to the previous bullet, it may be agood idea to make the SHM directory a cmake variable for some specific cases of SHM being mounted in some other path or even perhaps not being supported on some platforms.

shm_unlink() performs the same filesystem search as shm_open to locate the path, but is otherwise just a passthrough to unlink().

Right, if everything needed was performed when creating the file, it should be fine to remove it without all the checks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2196,2020-10-26T21:19:26Z,2020-10-29T08:15:29Z,2020-10-29T20:45:03Z,MERGED,True,63,70,9,https://github.com/imiller0,First step to supporting access to sysrepo across multiple containers,2,[],https://github.com/sysrepo/sysrepo/pull/2196,https://github.com/imiller0,4,https://github.com/sysrepo/sysrepo/pull/2196#issuecomment-717286143,"Convert all shm_open and shm_unlink calls to open() and unlink().  This allows the sysrepo shared-memory directory to be a shared-memory filesystem mounted from ""host"" to container.  This is the first step towards allowing full cooperative access to sysrepo by multiple containers.
By using open() and unlink(), all handles to the shared memory objects (main/ext files, subscriptions, etc) can all use absolute path references.
A quick look at the glibc implementations of shm_open and shm_unlink show a couple notable differences, all of which I believe don't impact sysrepo:

shm_open adds the O_NOFOLLOw flag to the open() call.  This flag causes a failure if the opened ""file"" is a symbolic link.  None of the sysrepo files in shared memory are (as far as I can tell) symbolic links.
shm_open adds the O_CLOEXEC flag to the open() call.  This flag closes the file descriptor across execve system calls (forked child process).  Running ""nm"" on the libsysrepo and libyang libraries does not reveal any exec* calls.
shm_open searches the filesystem for a shared memory mount point.  The search starts at /dev/shm then moves on to mounts in /proc/mounts or /etc/fstab. For sysrepo the mount point is specified in common.h.in, so the search in this case is not beneficial.
shm_open verifies the filesystem is a shared memory filesystem by checking the superblock ""magic"" number (for SHMFS or TMPFS).  This validation will be lost by this change-set, but the #define in common.h.in is set to /dev/shm which should always be a shared memory filesystem.
shm_unlink() performs the same filesystem search as shm_open to locate the path, but is otherwise just a passthrough to unlink().

Please let me know if you have any questions or if anything needs to be re-worked.  Other changes for allowing access across container boundaries will be pushed ""soon"".
Thanks!","So, ideally there could be a new macro defined with these 2 flags and used in all the open() calls.

Done.  I've added a macro SR_SHM_OPEN which is now used where the previous shm_open() calls were made.  This can be extended to other open() calls if/as needed.


shm_open searches the filesystem for a shared memory mount point. The search starts at /dev/shm then moves on to mounts in /proc/mounts or /etc/fstab. For sysrepo the mount point is specified in common.h.in, so the search in this case is not beneficial.

I did not know this and a static path is used because the SHM files are inspected also using access() and I did not know how else to implement it, about any portable way of learning the SHM directory. But there were no issues with this it seems and I am not sure how would you go about the functionality in this PR if it worked any other way, anyway. But if you have some ideas, let me know.

shm_open verifies the filesystem is a shared memory filesystem by checking the superblock ""magic"" number (for SHMFS or TMPFS). This validation will be lost by this change-set, but the #define in common.h.in is set to /dev/shm which should always be a shared memory filesystem.

Well, shared memory is actually used mostly for performance reasons and the feature of it not being persistent is just an additional useful perk. So, this should not be a problem, I think. With connection to the previous bullet, it may be agood idea to make the SHM directory a cmake variable for some specific cases of SHM being mounted in some other path or even perhaps not being supported on some platforms.

In  a subsequent change (which I will include in a separate pull request unless you prefer it in this one) I have added an environment variable which allows runtime control over the shm path.  This allows different paths to be used by different containers and/or the host.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2196,2020-10-26T21:19:26Z,2020-10-29T08:15:29Z,2020-10-29T20:45:03Z,MERGED,True,63,70,9,https://github.com/imiller0,First step to supporting access to sysrepo across multiple containers,2,[],https://github.com/sysrepo/sysrepo/pull/2196,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/2196#issuecomment-717293390,"Convert all shm_open and shm_unlink calls to open() and unlink().  This allows the sysrepo shared-memory directory to be a shared-memory filesystem mounted from ""host"" to container.  This is the first step towards allowing full cooperative access to sysrepo by multiple containers.
By using open() and unlink(), all handles to the shared memory objects (main/ext files, subscriptions, etc) can all use absolute path references.
A quick look at the glibc implementations of shm_open and shm_unlink show a couple notable differences, all of which I believe don't impact sysrepo:

shm_open adds the O_NOFOLLOw flag to the open() call.  This flag causes a failure if the opened ""file"" is a symbolic link.  None of the sysrepo files in shared memory are (as far as I can tell) symbolic links.
shm_open adds the O_CLOEXEC flag to the open() call.  This flag closes the file descriptor across execve system calls (forked child process).  Running ""nm"" on the libsysrepo and libyang libraries does not reveal any exec* calls.
shm_open searches the filesystem for a shared memory mount point.  The search starts at /dev/shm then moves on to mounts in /proc/mounts or /etc/fstab. For sysrepo the mount point is specified in common.h.in, so the search in this case is not beneficial.
shm_open verifies the filesystem is a shared memory filesystem by checking the superblock ""magic"" number (for SHMFS or TMPFS).  This validation will be lost by this change-set, but the #define in common.h.in is set to /dev/shm which should always be a shared memory filesystem.
shm_unlink() performs the same filesystem search as shm_open to locate the path, but is otherwise just a passthrough to unlink().

Please let me know if you have any questions or if anything needs to be re-worked.  Other changes for allowing access across container boundaries will be pushed ""soon"".
Thanks!","Done. I've added a macro SR_SHM_OPEN which is now used where the previous shm_open() calls were made. This can be extended to other open() calls if/as needed.

Right, I was too vague, I guess. My idea was to simply define something like #define SR_OPEN_FLAGS O_NOFOLLOW | O_CLOEXEC and use it in every open() call, but what you wrote is shorter. So yes, please finish the change completely and use it for all the open() calls, no reason not to.

In a subsequent change set I have a change which makes the shm path configurable via an environment variable. This allows different paths to be used by different containers and/or the host.

Alright, that is what I suggested.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2199,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/codecov-io,2,https://github.com/sysrepo/sysrepo/pull/2199#issuecomment-718333996,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","Codecov Report

Merging #2199 into devel will increase coverage by 0.02%.
The diff coverage is 100.00%.

@@            Coverage Diff             @@
##            devel    #2199      +/-   ##
==========================================
+ Coverage   66.15%   66.17%   +0.02%     
==========================================
  Files          16       16              
  Lines       14292    14290       -2     
  Branches     3386     3386              
==========================================
+ Hits         9454     9455       +1     
+ Misses       4838     4835       -3",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2199#issuecomment-718511641,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","Actually, the way it is now is intentional. You are right that the SR_EV_ENABLED even is skipped but the following SR_EV_DONE with the same data is not. You are just not able to distinguish between the initial and later DONE events. It is implemented this way so that you have 2 events following each other just like in the other cases but maybe it would be better to use just one, I am not sure.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/2199#issuecomment-718770565,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","I think that the use cases behind SR_EV_ENABLED and behind SR_EV_CHANGE are different from each other. The SR_EV_CHANGE is useful for two-phase commit where you want to have some application logic for checking if the proposed changes are actually OK, and possibly rejecting them even after the usual YANG validation has succeeded. In my scenario, I have no use for that (yet) because our YANG models express all the requires constraints via must, etc. So, we listen for the SR_EV_DONE and propagate that configuration state to the HW. We do not subscribe to SR_EV_CHANGE. We could have subscribed and (silently) ignore that event, sure.
On the other hand, we'd like to use the SR_EV_ENABLED to signal ""yes, we're now up and running"" to systemd. Without sysrepo, we can initialize the HW to some initial, factory-default state, but we need to fully propagate the content of the startup DS to the device's operational state to be able to report back to the user ""yes, now it's done, and we're ready for operation"". If this propagation fails for whatever reason, it means that there's been some fatal error, and the device is not up and running. We might want to roll back to the previous FW release, etc (and we're already doing that).
Some of our models cannot be empty, and for these we could just wait for the first callback to hit our code, but then there are other models where an empty state is OK.
I think that you're saying that your intention is to have this mode of operation:



subscription flags
event(s) send on the initial copy (startup -> running)
events on subsequent modifications of running




SR_SUBSCR_DEFAULT
just SR_EV_DONE
SR_EV_CHANGE and SR_EV_DONE


SR_SUBSCR_DONE_ONLY
just SR_EV_DONE
just SR_EV_DONE


SR_SUBSCR_ENABLED
SR_EV_ENABLED and SR_EV_DONE
SR_EV_CHANGE and SR_EV_DONE


SR_SUBSCR_ENABLED | SR_SUBSCR_DONE_ONLY
just SR_EV_DONE
only SR_EV_DONE



From the current documentation it is unclear to me that this is the expected behavior.
That is not sufficient for our use case I'm afraid, and it has a bug -- because the user's callbacks have no way of somehow tying that SR_EV_DONE (third row above, middle column) to the previous SR_EV_ENABLED (same table cell), the code will quite happily call sr_get_change_iter, which will fail if there are no changes in there.
So we need an event which always fires upon the initial copy, even if the diff is empty, and to be able to call sr_get_change_iter from within that event. How do I do that with sysrepo?
1: SR_EV_ENABLED instead of SR_EV_DONE for the first change event
A behavior like this would be perfectly fine for us, and the benefit is that you can keep that error checking for an empty diff for all other event types than SR_EV_ENABLED in place. The drawback is that this API might be surprising for some people -- suddenly you need to handle both SR_EV_DONE and SR_EV_ENABLED, but that's a one-liner change to make.



subscription flags
event(s) send on the initial copy (startup -> running)
events on subsequent modifications of running




SR_SUBSCR_ENABLED
just SR_EV_ENABLED
SR_EV_CHANGE and then SR_EV_DONE


SR_SUBSCR_ENABLED | SR_SUBSCR_DONE_ONLY
just SR_EV_ENABLED
only SR_EV_DONE



You cannot have SR_EV_CHANGE for the initial copy because calling sr_get_change_iter would fail.
2: relax error checking of sr_get_change_iter
This needs two changes:

don't error out if there's no diff within SR_EV_CHANGE and SR_EV_DONE,
always generate the initial event even when there's no diff.

I've checked the code and I'm not sure if the second change needs to be done -- is there any active filtering which prevents the SR_EV_DONE on a first ""copy"" even if the datastore is empty? I think all my models actually have some default values, so it's hard for me to check at the moment.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/2199#issuecomment-718802061,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","This is currently the expected behaviour



subscription flags
event(s) send on the initial copy (startup -> running)
events on subsequent modifications of running




SR_SUBSCR_DEFAULT
none
SR_EV_CHANGE and SR_EV_DONE


SR_SUBSCR_DONE_ONLY
none
just SR_EV_DONE


SR_SUBSCR_ENABLED
SR_EV_ENABLED and SR_EV_DONE
SR_EV_CHANGE and SR_EV_DONE


SR_SUBSCR_ENABLED | SR_SUBSCR_DONE_ONLY
just SR_EV_DONE
only SR_EV_DONE



Also, if an event(s) should be generated for the initial copy (this is not completely accurate but it should not matter now), they should be even if there are no changes (current data are empty). The idea was to make the initial events similar to the standard events (so they can be handled the same way) but at the same time be able to distinguish the initial events if needed (special SR_EV_ENABLED).
Based on your feedback I realized that it does not work as intended with flags SR_SUBSCR_ENABLED | SR_SUBSCR_DONE_ONLY because you 1) cannot distinguish between the events as you always get only SR_EV_DONE and 2) because of that you may call sr_get_changes_iter on no changes that will fail.
You suggested to change the behavior to



subscription flags
event(s) send on the initial copy (startup -> running)
events on subsequent modifications of running




SR_SUBSCR_DEFAULT
none
SR_EV_CHANGE and SR_EV_DONE


SR_SUBSCR_DONE_ONLY
none
just SR_EV_DONE


SR_SUBSCR_ENABLED
SR_EV_ENABLED
SR_EV_CHANGE and SR_EV_DONE


SR_SUBSCR_ENABLED | SR_SUBSCR_DONE_ONLY
SR_EV_ENABLED
only SR_EV_DONE



which should provide the versatility I had originally intended and was actually my initial idea, too.
Do you think anything I wrote is not correct meaning the behavior currently differs? Does the solution really work for you?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/jktjkt,6,https://github.com/sysrepo/sysrepo/pull/2199#issuecomment-718822962,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","Thanks for your summary. My patch is broken, and having that table helped me realize that I ""fixed"" it in a wrong way.
So, which way do we go?


A quck-n-dirty way is just relaxing that check in sr_get_changes_iter. The downside is that the SR_EV_ENABLED event type feels a bit useless because it's going to be followed up by SR_EV_DONE. The user's code therefore loses that magic flag on the final commit event. On the other hand, it's a compatible change.


Another way is inventing a better name for these two events. If we could disregard the backward compatibility concerns, my proposal would be to use something like SR_EV_ENABLED_CHECK followed by SR_EV_ENABLED_COMMIT for the initial copy, and SR_EV_CHECK followed by SR_EV_COMMIT for regular changes. That way, the SR_SUBSCR_DONE_ONLY can just filter out SR_EV_ENABLED_CHECK and SR_EV_CHECK (i.e., disable that two-phase commit), and the lack of SR_SUBSCR_ENABLED filters out SR_EV_ENABLED_CHECK and SR_EV_ENABLED_COMMIT (i.e., ignore the initial notifications about copy-config).


Or perhaps it can be made even more consistent. By default, assume that the users' code starts from some empty, possibly invalid state, and that the user doesn't really care why these modifications are being made. Have a flag which turns on that distinction between ""initial copy"" and ""subsequent changes"", and another flag which activates a two-phase commit for either of these two situations. This will require removing the error check in sr_get_changes_iter unconditionally:



subscription flags
event(s) send on the initial copy (startup -> running)
events on subsequent modifications of running




SR_SUBSCR_DEFAULT
SR_EV_COMMIT
SR_EV_COMMIT


SR_SUBSCR_TWO_PHASE_COMMIT
SR_EV_CHECK + SR_EV_COMMIT
SR_EV_CHECK + SR_EV_COMMIT


SR_SUBSCR_TWO_PHASE_COMMIT | SR_SUBSCR_ENABLED
SR_EV_ENABLED_CHECK + SR_EV_ENABLED_COMMIT
SR_EV_CHECK + SR_EV_COMMIT


SR_SUBSCR_ENABLED
SR_EV_ENABLED_COMMIT
SR_EV_COMMIT",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/2199#issuecomment-718841625,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","Firstly, I would really avoid renaming the events (again) because I intentionally chose vague terms to not hint the users what to do on each event and leave it up to them (in contrast with legacy sysrepo).
Then, I think I should clarify what exactly the enabled event represents because I believe your second solution is way too complicated, the reason may be these details missing. So, actual copy from startup to running happens when the first connection is created after system start (when there are no SHM files). All the SR_SUBSCR_ENABLED flag does is generate a fake event (meaning running datastore is the same before and after the event) that simply publishes the current running data of the specific subscription for the callback as being created. Because that is what is essentially happening for a starting plugin, it needs to configure the device (or whatever) to be consistent with the running data in sysrepo.
That is also why I suggested the previous solution of using only a single event SR_EV_ENABLED to not overcomplicate things since they are even simpler than one would expect in this case. So again, can you implement the functionality you need with the change (solution) I mentioned in my previous reply?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/jktjkt,8,https://github.com/sysrepo/sysrepo/pull/2199#issuecomment-719942895,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","It turns out that this works: _sr_get_changes_iter does not fail. It seems that we both misinterpreted the if-clause. The error condition fires only if:

it is something else than SR_EV_APPLY (true)
it is something else than SR_EV_DONE (false in my case, so the whole if expression is false)
the diff is nullptr (true)

I'll see if I can improve the documentation so that the different types of events are clearly documented. This is what one gets for, your words, ""vague terms"".",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2199,2020-10-29T02:32:29Z,2020-10-31T14:40:34Z,2020-11-02T08:02:28Z,CLOSED,False,2,2,2,https://github.com/jktjkt,Do not let SR_SUBSCR_DONE_ONLY mask out SR_EV_ENABLED events,1,[],https://github.com/sysrepo/sysrepo/pull/2199,https://github.com/michalvasko,9,https://github.com/sysrepo/sysrepo/pull/2199#issuecomment-720307238,"The SR_SUBSCR_DONE_ONLY event is documented to control whether SR_EV_CHANGE/SR_EV_ABORT are sent. Since the rewrite, it used to also skip generating the initial SR_EV_ENABLED as well. That's surely a mistake because that one is supposed to be gated by the SR_EV_ENABLED flag.
Fixes: f36f312 (""sysrepo CHANGE add special enabled event"")","I see. I did not check what you said because it made sense to me, I guess I should have.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2212,2020-11-09T11:14:12Z,2020-11-10T07:59:55Z,2020-11-10T08:00:02Z,MERGED,True,14,3,1,https://github.com/jvijtiuk,travis FEATURE add sanitizer test job,1,[],https://github.com/sysrepo/sysrepo/pull/2212,https://github.com/jvijtiuk,1,https://github.com/sysrepo/sysrepo/pull/2212,"Hello,
this adds a Travis CI job to run unit tests with address and undefined behaviour sanitizers enabled.
It is based on the sanitizer job patch that was added to libyang. Valgrind tests are disabled when sysrepo is built with sanitizers. As the jobs are defined via the job matrix, and a single script is used, I've had to enable sanitizer tests with an ENV variable. If there is a better way to do that please let me know, and I will change the patch.
Thanks,
Juraj","Hello,
this adds a Travis CI job to run unit tests with address and undefined behaviour sanitizers enabled.
It is based on the sanitizer job patch that was added to libyang. Valgrind tests are disabled when sysrepo is built with sanitizers. As the jobs are defined via the job matrix, and a single script is used, I've had to enable sanitizer tests with an ENV variable. If there is a better way to do that please let me know, and I will change the patch.
Thanks,
Juraj",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2212,2020-11-09T11:14:12Z,2020-11-10T07:59:55Z,2020-11-10T08:00:02Z,MERGED,True,14,3,1,https://github.com/jvijtiuk,travis FEATURE add sanitizer test job,1,[],https://github.com/sysrepo/sysrepo/pull/2212,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2212#issuecomment-723972289,"Hello,
this adds a Travis CI job to run unit tests with address and undefined behaviour sanitizers enabled.
It is based on the sanitizer job patch that was added to libyang. Valgrind tests are disabled when sysrepo is built with sanitizers. As the jobs are defined via the job matrix, and a single script is used, I've had to enable sanitizer tests with an ENV variable. If there is a better way to do that please let me know, and I will change the patch.
Thanks,
Juraj","Hi,
I do not think there is a better way. But I would prefer to keep the structure of the script the way it is now meaning no if .. else. Also, please rename the variable to SANITIZE, for example, just something more specific than CHECK and best to set it in every build to TRUE/FALSE or something, to make the logic obvious.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2212,2020-11-09T11:14:12Z,2020-11-10T07:59:55Z,2020-11-10T08:00:02Z,MERGED,True,14,3,1,https://github.com/jvijtiuk,travis FEATURE add sanitizer test job,1,[],https://github.com/sysrepo/sysrepo/pull/2212,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2212#issuecomment-724532143,"Hello,
this adds a Travis CI job to run unit tests with address and undefined behaviour sanitizers enabled.
It is based on the sanitizer job patch that was added to libyang. Valgrind tests are disabled when sysrepo is built with sanitizers. As the jobs are defined via the job matrix, and a single script is used, I've had to enable sanitizer tests with an ENV variable. If there is a better way to do that please let me know, and I will change the patch.
Thanks,
Juraj","Okay, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/imiller0,1,https://github.com/sysrepo/sysrepo/pull/2218,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.","This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2218#issuecomment-726757023,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.","Okay, I went through the changes and in general, I think this can be merged. Ignoring some minor problems with formatting, using // comments, or similar, I have a few questions.
Firstly, why is SR_CONN_ID_BASE set to 17? I suppose having a single invalid value (0) is a good idea but I am not sure about the purpose of the first valid value not being 1.
Then, I believe conn pointer and pid were used because both were needed to uniquely identify a connection, plus pid was used for aliveness check. You solved both problems with a single ID so I do not think conn pointer as metadata has any purpose now (I would need to verify this properly but maybe you already know more since you had to delve into this) and can be removed.
Next, as for the pid metadata name, I think you can update it. Problem would only occur if someone updates sysrepo and has some push operational data stored. In general, these problems can occur if one is using devel, to avoid them, there is master.
Finally, thanks for checking the performance and it seems reasonable. Moreover, creating a connection is the most expensive task that should take place only once, when an application is starting, so I do not bother with its performance too much. It is difficult enough to make it correct and optimizations seem to me are a waste of time.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/imiller0,3,https://github.com/sysrepo/sysrepo/pull/2218#issuecomment-726993176,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.","Okay, I went through the changes and in general, I think this can be merged. Ignoring some minor problems with formatting, using // comments, or similar, I have a few questions.

Apologies for the comments, those are fixed now :)

Firstly, why is SR_CONN_ID_BASE set to 17? I suppose having a single invalid value (0) is a good idea but I am not sure about the purpose of the first valid value not being 1.

In initial development I used 17 as a means to uncover issues faster.  There really is no longer a need and I have changed it to 1 (still reserving 0 for ""unused/invalid"").

Then, I believe conn pointer and pid were used because both were needed to uniquely identify a connection, plus pid was used for aliveness check. You solved both problems with a single ID so I do not think conn pointer as metadata has any purpose now (I would need to verify this properly but maybe you already know more since you had to delve into this) and can be removed.

I also believe this to be true but was not confident enough about the implications to make the change.  One case where the cid could be misinterpreted is if/when a program crashes or otherwise terminates without calling sr_disconnect. A subsequent connection by that program or any other would be allocated the same cid, potentially mis-attributing prior data to the new connection. Is this a similar case which led to use of the connection pointer in conjunction with pid? Ideally it seems that tracking by cid would be cleaner.

Next, as for the pid metadata name, I think you can update it. Problem would only occur if someone updates sysrepo and has some push operational data stored. In general, these problems can occur if one is using devel, to avoid them, there is master.

OK.  This has been updated as well.

Finally, thanks for checking the performance and it seems reasonable. Moreover, creating a connection is the most expensive task that should take place only once, when an application is starting, so I do not bother with its performance too much. It is difficult enough to make it correct and optimizations seem to me are a waste of time.

Thanks!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2218#issuecomment-729545197,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.","One case where the cid could be misinterpreted is if/when a program crashes or otherwise terminates without calling sr_disconnect. A subsequent connection by that program or any other would be allocated the same cid, potentially mis-attributing prior data to the new connection.

This is not acceptable, I did not really realize it worked this way. Why not just adopt the mechanism for new session IDs? The only problem with that is that once the values overflow, you could get duplicates but I think the value space is large enough.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/imiller0,5,https://github.com/sysrepo/sysrepo/pull/2218#issuecomment-729912648,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.","One case where the cid could be misinterpreted is if/when a program crashes or otherwise terminates without calling sr_disconnect. A subsequent connection by that program or any other would be allocated the same cid, potentially mis-attributing prior data to the new connection.

This is not acceptable, I did not really realize it worked this way. Why not just adopt the mechanism for new session IDs? The only problem with that is that once the values overflow, you could get duplicates but I think the value space is large enough.

Agreed.  I originally chose to reuse Connection ID values to avoid any chance of overflow but that is extremely unlikely with a uint32_t value space.  I have modified the CID allocation to work similarly to the session ID.  This modifies the SHM layout (adding new_sr_cid) so I also incremented the SHM_VER.
Thanks!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/2218#issuecomment-730279814,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.","Okay, so I would say the last major change is removing the conn_ptr attribute, right? Also, are you then willing to fix all the formatting problems? I am quite strict about it... Or I can fix it all myself, once the code is finished.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/imiller0,7,https://github.com/sysrepo/sysrepo/pull/2218#issuecomment-730421769,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.","I checked in an update to remove tracking of the connection pointer in shared memory and the sysrepo module.  The majority of the changes were in the edit_diff code. The change was pretty straightforward, but please let me know if anything seems incorrect there.
I also took a pass through the code to clean up some of the comments/documentation and variable declarations.  If there are other areas you'd like cleaned up please let me know, I'm glad to take a pass through them.
Thanks!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/imiller0,8,https://github.com/sysrepo/sysrepo/pull/2218#issuecomment-733097663,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.",Thank you!,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2218,2020-11-12T19:48:08Z,2020-11-24T14:14:35Z,2020-11-24T17:14:08Z,MERGED,True,1138,546,17,https://github.com/imiller0,Track connections by globally unique connection ID rather than PID.,14,[],https://github.com/sysrepo/sysrepo/pull/2218,https://github.com/michalvasko,9,https://github.com/sysrepo/sysrepo/pull/2218#issuecomment-733118270,"This pull request implements connection IDs based on a unique integer rather than process ID. Using a sysrepo managed ID instead of PID allows Sysrepo to be accessed by multiple containers with shared filesystem access to the datastore. Across container boundaries PIDs are not unique and process status (aliveness) cannot be determined.
The implementation makes use of lockfiles, one per connection, in a subdirectory of the shared memory location.  Each connection has a corresponding lockfile on which a file lock (POSIX advisory record lock) is held by the process.  When sr_disconnect is called, or the process terminates for any reason, the lock is released indicating the connection is no longer alive.  A clean disconnect results in deletion of the lockfile.
Connection IDs are reused once released to avoid possible exhaustion of the ID space. As a limit on the possible search-space for an available connection ID a maximum limit of ~64K connections is supported.
In order to avoid otherwise unnecessary changes to the internal YANG model, the ""pid"" attribute on the sysrepo module was left as ""pid"" but now contains the uint32 connection ID.  Throughout the codebase this is now referenced as ""cid"" unless directly dealing with the sysrepo operational datastore. If this can be changed without affecting persistent datastores (specifically any system upgrade scenarios) I am happy to do that.
A new API was added to return the connection ID for a connection. This is only needed/intended for debug and unit testing.
The significant functional changes are in:

shm_main.c -- management of the connection ID and lockfiles
common.c -- checking aliveness
edit_diff.c -- Pulling the connection ID for the merged tree from the oper connection.
sysrepo.c -- Skip dead connections in connection count. Add sr_connection_cid API.

Most other changes are to convert ""pid"" to ""cid"" for clarity.
The significant functionality changes are limited to the connect/disconnect phase of working with a datastore where the additional overhead of managing lockfiles should be reasonably well tolerated.  As a check on performance I ran a test program which creates N connections to the datastore and then disconnects all of them such that all N connections are open simultaneously.  For 100 tests of 20, 100, and 500 simultaneous connections the average increase in connect+disconnect time was a maximum of 7%.
Thoughts/comments/questions?  I'm happy to update as needed.","No problem, I just hope it will work well and not cause too many problems in the future (but I am not saying the previous solution was any better).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2235,2020-12-01T13:47:32Z,2020-12-01T14:59:19Z,2020-12-01T15:11:19Z,MERGED,True,50,30,3,https://github.com/imiller0,Qualify lock directory with repository prefix,1,[],https://github.com/sysrepo/sysrepo/pull/2235,https://github.com/imiller0,1,https://github.com/sysrepo/sysrepo/pull/2235,"Bug Fix: Qualify connection lock directory with prefix for unique locks per sysrepo instance.
The environment variable SYSREPO_SHM_PREFIX can be used to create unique instances of the sysrepo repository. The lock directory (and thus lockfiles) should be qualified by this prefix.
The calculation of lock file path is moved to common.c so that it is co-located with other file/path calculations.","Bug Fix: Qualify connection lock directory with prefix for unique locks per sysrepo instance.
The environment variable SYSREPO_SHM_PREFIX can be used to create unique instances of the sysrepo repository. The lock directory (and thus lockfiles) should be qualified by this prefix.
The calculation of lock file path is moved to common.c so that it is co-located with other file/path calculations.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2235,2020-12-01T13:47:32Z,2020-12-01T14:59:19Z,2020-12-01T15:11:19Z,MERGED,True,50,30,3,https://github.com/imiller0,Qualify lock directory with repository prefix,1,[],https://github.com/sysrepo/sysrepo/pull/2235,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2235#issuecomment-736606243,"Bug Fix: Qualify connection lock directory with prefix for unique locks per sysrepo instance.
The environment variable SYSREPO_SHM_PREFIX can be used to create unique instances of the sysrepo repository. The lock directory (and thus lockfiles) should be qualified by this prefix.
The calculation of lock file path is moved to common.c so that it is co-located with other file/path calculations.","Okay, it seems fine, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2235,2020-12-01T13:47:32Z,2020-12-01T14:59:19Z,2020-12-01T15:11:19Z,MERGED,True,50,30,3,https://github.com/imiller0,Qualify lock directory with repository prefix,1,[],https://github.com/sysrepo/sysrepo/pull/2235,https://github.com/imiller0,3,https://github.com/sysrepo/sysrepo/pull/2235#issuecomment-736613334,"Bug Fix: Qualify connection lock directory with prefix for unique locks per sysrepo instance.
The environment variable SYSREPO_SHM_PREFIX can be used to create unique instances of the sysrepo repository. The lock directory (and thus lockfiles) should be qualified by this prefix.
The calculation of lock file path is moved to common.c so that it is co-located with other file/path calculations.",Thank you!,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2254,2020-12-10T15:07:40Z,2020-12-15T11:29:06Z,2020-12-15T11:29:06Z,MERGED,True,186,2,6,https://github.com/lePici,sysrepo-plugind added plugin sorting feature,14,[],https://github.com/sysrepo/sysrepo/pull/2254,https://github.com/lePici,1,https://github.com/sysrepo/sysrepo/pull/2254,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2255,2020-12-11T02:22:09Z,2020-12-11T08:11:13Z,2020-12-11T08:11:13Z,MERGED,True,2,2,1,https://github.com/fredgan,CMakeLists.txt: fix coverage tools for lcov and genhtml not checked,1,[],https://github.com/sysrepo/sysrepo/pull/2255,https://github.com/fredgan,1,https://github.com/sysrepo/sysrepo/pull/2255,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2255,2020-12-11T02:22:09Z,2020-12-11T08:11:13Z,2020-12-11T08:11:13Z,MERGED,True,2,2,1,https://github.com/fredgan,CMakeLists.txt: fix coverage tools for lcov and genhtml not checked,1,[],https://github.com/sysrepo/sysrepo/pull/2255,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2255#issuecomment-743042916,,"Right, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2261,2020-12-15T15:54:44Z,2020-12-16T10:07:30Z,2020-12-16T10:07:30Z,MERGED,True,3792,620,41,https://github.com/lePici,uncrustify changes based on uncrustify.cfg from libyang2 repository,4,[],https://github.com/sysrepo/sysrepo/pull/2261,https://github.com/lePici,1,https://github.com/sysrepo/sysrepo/pull/2261,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2306,2021-02-02T12:32:44Z,2021-02-04T13:47:07Z,2021-02-04T13:47:34Z,CLOSED,False,10,4,1,https://github.com/jktjkt,Do not use memcmp on sr_sid_t,2,[],https://github.com/sysrepo/sysrepo/pull/2306,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2306,"As shown in #2304 by @pfeige , the username can well be NULL. In that case, it would be an error to compare these sr_sid_t instances via memcmp.","As shown in #2304 by @pfeige , the username can well be NULL. In that case, it would be an error to compare these sr_sid_t instances via memcmp.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2306,2021-02-02T12:32:44Z,2021-02-04T13:47:07Z,2021-02-04T13:47:34Z,CLOSED,False,10,4,1,https://github.com/jktjkt,Do not use memcmp on sr_sid_t,2,[],https://github.com/sysrepo/sysrepo/pull/2306,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/2306#issuecomment-771654806,"As shown in #2304 by @pfeige , the username can well be NULL. In that case, it would be an error to compare these sr_sid_t instances via memcmp.",The CI failure appears to be a regression introduced by fb04659 which has left one test commented out.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2306,2021-02-02T12:32:44Z,2021-02-04T13:47:07Z,2021-02-04T13:47:34Z,CLOSED,False,10,4,1,https://github.com/jktjkt,Do not use memcmp on sr_sid_t,2,[],https://github.com/sysrepo/sysrepo/pull/2306,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/2306#issuecomment-771711796,"As shown in #2304 by @pfeige , the username can well be NULL. In that case, it would be an error to compare these sr_sid_t instances via memcmp.","With this patch in place, I'm getting occasional failures in later stages of our integration tests, such as:

an internal error in src/shm_mod.c:744
in libyang's src/parse_lyb.c:1175, Invalid first magic number byte ""0x00""
in libyang's src/parser_lyb.c:974, Failed to find matching hash for a top-level node from ...

At this time I think these are merely uncovered by this patch, not really introduced by it, but I could be wrong.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2306,2021-02-02T12:32:44Z,2021-02-04T13:47:07Z,2021-02-04T13:47:34Z,CLOSED,False,10,4,1,https://github.com/jktjkt,Do not use memcmp on sr_sid_t,2,[],https://github.com/sysrepo/sysrepo/pull/2306,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2306#issuecomment-773313870,"As shown in #2304 by @pfeige , the username can well be NULL. In that case, it would be an error to compare these sr_sid_t instances via memcmp.","This is mostly a workaround like I mentioned in #2304 so I would like to look at it and fix it myself. As for the other errors, please wait for a merged fix and then we can go further.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2314,2021-02-05T13:28:35Z,2021-02-05T13:35:27Z,2021-02-05T13:35:37Z,CLOSED,False,1100,568,23,https://github.com/biranchi1186,Devel,26,[],https://github.com/sysrepo/sysrepo/pull/2314,https://github.com/biranchi1186,1,https://github.com/sysrepo/sysrepo/pull/2314,Need for  sr_shmext_print: Assertion,Need for  sr_shmext_print: Assertion,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2314,2021-02-05T13:28:35Z,2021-02-05T13:35:27Z,2021-02-05T13:35:37Z,CLOSED,False,1100,568,23,https://github.com/biranchi1186,Devel,26,[],https://github.com/sysrepo/sysrepo/pull/2314,https://github.com/biranchi1186,2,https://github.com/sysrepo/sysrepo/pull/2314#issuecomment-774036612,Need for  sr_shmext_print: Assertion,Not required,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2319,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-778033462,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","You mean I do not have to keep fixing bugs and the kernel will fix them for me? Neat.
On a more serious note, I am not sure this really is okay even though I cannot really say why not. What exactly is required for the file to take effect, machine reboot or restarting systemd (or something else) is enough? Also, please put the file somewhere else (only package-exclusive files are in packages) although I am not sure where. Maybe the root is fine or even better a separate directory (sysctl_conf maybe?).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-778142684,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","I agree that this is not an optimal change, we're doing this to override the system policy, after all. In this case, however, I think the system policy is just silly, and the stated goals do not match the implementation. At the same time, reverting this upstream will, realistically, take years at best, so the best option we can do (IMHO) is to try to minimize the damage and reduce the support load. Unfortunately, we cannot even issue a warning at build time because one cannot even read that sysctl knob as a non-root. Also, I suspect that any complaint about this behavior will trigger a ""you're doing it wrong"" response, and I do not think that you would feel happy with abandoning the SHM approach either, so, well, meh, this is where we are.
You'll have to reboot or restart the systemd-sysctl.service for this change to take effect. This file location only really works with systemd (see sysctl.d(5)). The alternative would be pushing stuff directly to /etc/sysctl.d/, but then you would still hit some crazy setups that only have /etc/sysctl.conf, and /etc is usually not for packages to put their stuff in directly, so this is probably the sanest thing one can do.
Whom does this affect -- I would argue that developers do not care at all because they are unlikely to pass explicit --user or --group flags to sysrepoctl. So the only affected people (IMHO) are those who install sysrepo as a systemwide thingy. Presumably, those people are building something around sysrepo, so it makes sense for them to tweak their settings in a way which makes it possible to let sysrepo work. That is, by the way, the reason I put that file to packages/.
The alternative would be abandoning the UNIX permission model altogether. The current SHM code looks like something which trusts the in-memory data that are in the SHM files. As such, an attacker that is able to modify these SHM files directly, without using the sysrepo APIs -- which is anyone in the default config because /dev/shm is world-writable -- can probably cause any other sysrepo user to crash or possibly execute arbitrary code. Perhaps it would make sense to recognize this general vulnerability and move these files from /dev/shm to something ""safe"" like /run/sysrepo, have that one owned by sysrepo:sysrepo, permissions 0770, and mandate all sysrepo-calling processes to use the same sysrepo EUID. Yes, that would be super-inconvenient for other bits, such as netopeer2 access to SSH authorized_keys, or for any daemon which is designed to run under a particular UID of its own, but hey, that's what you get with using shared memory I guess.
I've now moved the file to the top level directory based on your request.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-778203105,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","Presumably, those people are building something around sysrepo, so it makes sense for them to tweak their settings in a way which makes it possible to let sysrepo work. That is, by the way, the reason I put that file to packages/.

Okay, but I still would not make this file package-exclusive. What I think would be the safest solution is only optional installing of this file, off by default. As for packages, they can be tuned so that the affected distributions include it, others do not. For manual build, the user would need to enable it himself. While we may then still get issues complaining about the permission denied error, it makes the user responsible for installing the file, not us. Of course, this problem and the solution should be mentioned in the README, at the beginning somewhere to cover the users that look there, at least (you can add that if you want, or I will).

The current SHM code looks like something which trusts the in-memory data that are in the SHM files. As such, an attacker that is able to modify these SHM files directly, without using the sysrepo APIs -- which is anyone in the default config because /dev/shm is world-writable -- can probably cause any other sysrepo user to crash or possibly execute arbitrary code. Perhaps it would make sense to recognize this general vulnerability and move these files from /dev/shm to something ""safe"" like /run/sysrepo

The SHM data files are not implicitly trusted, this vulnerability is know and hence there is proper file permissions management so that you can easily set the correct permissions for the files and avoid any security problems. /dev/shm is used because of the efficiency, to avoid using persistent files when they are not needed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/jktjkt,5,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-778234529,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","Okay, but I still would not make this file package-exclusive. What I think would be the safest solution is only optional installing of this file, off by default.

Feel free to take this one from here and handle as you deem appropriate, then. If this is hidden behind an extra flag I will just add this one-liner via our build scripts.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/michalvasko,6,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-778238877,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","Yes, that is the idea, another cmake variable. Okay, I will finish it and merge it (soon).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/oerdnj,7,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-779091851,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","I think it's wrong to change system-wide settings for security settings. This change won't even give the user any warning at all.
I would suggest that by default the directory would be set only with setgid and group writable only. Then anybody who needs access to the repository would have to be added to the group.  Using world-writable directories with sticky bit is not very good security model anyway.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/michalvasko,8,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-779098642,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","I think it's wrong to change system-wide settings for security settings. This change won't even give the user any warning at all.

So what exactly do you propose? We would like to find a way for sysrepo to work out-of-the-box on distributions that have this bit set, which makes sysrepo not function properly.

I would suggest that by default the directory would be set only with setgid and group writable only.

Which directory do you mean? The persistent repository (/etc/sysrepo for release)?

Then anybody who needs access to the repository would have to be added to the group. Using world-writable directories with sticky bit is not very good security model anyway.

What else can we do if we want to use SHM files instead of regular ones? I do not think they can be placed anywhere else than /dev/shm.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/jktjkt,9,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-779397270,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","I think that depends on what you can reasonably demand form the system. One option is documenting that packages should provide a tmpfs at something like /run/sysrepo, and using that. A developer build can continue with /dev/shm as before because it's unlikely that they will use multiple UIDs to access sysrepo anyway.
However, even if we have this /run/sysrepo owned by root:sysrepo with that group-write bit on, that would only help with fs.protected_regular = 1. With fs.protected_regular = 2, the kernel won't allow O_CREAT by another user than the one which owns the target file.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/michalvasko,10,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-782184849,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","Okay, it should be merged but disabled by default so it should do no harm. It can be further improved later.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/nickbroon,11,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-909508933,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","Debian/Ubuntu by default ship a /usr/lib/sysctl.d/protect-links.conf with fs.protected_regular = 2
Installing a /usr/lib/sysctl.d/66-sysrepo-disable-fs-protected_regular.conf with fs.protected_regular = 0
is not going to be applied by systemd-sysctl.service as files are sorted in lexicographic order (sysctl.d(5)), and protected-links.conf will be sorted after 66-sysrepo-disable-fs-protected_regular.conf",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/michalvasko,12,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-909927558,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1","Seems Debian is not using number prefixes but other distributions are. Not sure what to do about this, it obviously cannot fit all the use-cases.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2319,2021-02-11T20:49:33Z,2021-05-26T05:58:01Z,2021-09-01T07:38:58Z,CLOSED,False,6,0,2,https://github.com/jktjkt,Work around a paranoid kernel protection for sticky-bit directories,1,[],https://github.com/sysrepo/sysrepo/pull/2319,https://github.com/nickbroon,13,https://github.com/sysrepo/sysrepo/pull/2319#issuecomment-910023060,"Since the Linux kernel 4.19+ and systemd v241, there's a new sysctl knob which prevents users from overwriting ""someone else's files"" that are located in world-writable directories with the sticky bit set. That goes directly against sysrepo's permission model (which might become irrelevant anyway because it sits in parallel to the NACM).
When this change was made upstream, they cited a list of CVEs which are supposed to be preventable via that change. I believe that it turns out that all of them are actually other, serious bugs, but I acknowledge that it's true that fs.protected_regular = 1 can indeed help against something stupid like exec /tmp/install.sh:

CVE-2000-1134: Insecure file creation under /tmp.
CVE-2007-3852: Insecure file creation of /tmp/sysstat.run.
CVE-2008-0525: Symlinks below /tmp.
CVE-2009-0416: Symlinks below /var/tmp.
CVE-2011-4834: Symlink attack, and then content spoofing via a FIFO.
CVE-2015-1838: Download & execute /tmp/install.sh.
CVE-2015-7442: Insecure file creation in /tmp.
CVE-2016-7489: Insecure file creation in /tmp.

Looking at that list, I still think that the upstream decision is nonsense, but hey, I've been postponing that mail to linux-fsdevel for four months already, so let's solve this within sysrepo. Just provide a drop-in file for systemd to undo this nonsensical (IMHO, anyway) policy change.
Bug: #2080
Cc: @syyyr @peckato1",I've submitted #2558 which should help on distributions like debian/ubuntu.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2322,2021-02-12T14:28:23Z,2021-02-16T07:36:48Z,2021-02-16T09:18:31Z,MERGED,True,282,277,5,https://github.com/jktjkt,[WIP] tests: apply_changes: use proper atomics instead of `volatile`,2,[],https://github.com/sysrepo/sysrepo/pull/2322,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2322,"At this time I would appreciate your input if you are OK with this approach. If so, I can mass-change the other tests as well. Some of these patterns are still inherently racy (there's essentially a double-load everywhere that variable is used in the switch block a second time), but this is rather tedious work, so I took this shortcut.","At this time I would appreciate your input if you are OK with this approach. If so, I can mass-change the other tests as well. Some of these patterns are still inherently racy (there's essentially a double-load everywhere that variable is used in the switch block a second time), but this is rather tedious work, so I took this shortcut.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2322,2021-02-12T14:28:23Z,2021-02-16T07:36:48Z,2021-02-16T09:18:31Z,MERGED,True,282,277,5,https://github.com/jktjkt,[WIP] tests: apply_changes: use proper atomics instead of `volatile`,2,[],https://github.com/sysrepo/sysrepo/pull/2322,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2322#issuecomment-778246526,"At this time I would appreciate your input if you are OK with this approach. If so, I can mass-change the other tests as well. Some of these patterns are still inherently racy (there's essentially a double-load everywhere that variable is used in the switch block a second time), but this is rather tedious work, so I took this shortcut.","It was written the most simple way that I knew it will work because using atomics here seems rather excessive. The value is always incremented in a single thread while another one is simultaneously reading it, so the only problem that can occur as far as I can tell is reading the value while it is being written and hence reading some junk. Whether that is actually possible to happen (whether using volatile, atomics, or even a standard variable) I doubt. But I am not sure how else to silence TSAN, maybe just write a suppression file? Easier than rewriting all of the tests",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2322,2021-02-12T14:28:23Z,2021-02-16T07:36:48Z,2021-02-16T09:18:31Z,MERGED,True,282,277,5,https://github.com/jktjkt,[WIP] tests: apply_changes: use proper atomics instead of `volatile`,2,[],https://github.com/sysrepo/sysrepo/pull/2322,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/2322#issuecomment-778251139,"At this time I would appreciate your input if you are OK with this approach. If so, I can mass-change the other tests as well. Some of these patterns are still inherently racy (there's essentially a double-load everywhere that variable is used in the switch block a second time), but this is rather tedious work, so I took this shortcut.","I understand that ""this is just a test"". The problem is that TSAN's suppression system is based on pattern matching some strings against the symbol names (and file names, and...) on stack. One could exclude, say, ""the whole test file"", but that's too big of a hammer because there will always be that particular file at the top of each stack. I'm afraid I don't know how to exclude just this particular memory location from data race reporting.
I'm not a C guy, if this was C++, it would be just a matter of changing the variable type to std::atomic<int> at the place it's declared, but that's of course not feasible here.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2322,2021-02-12T14:28:23Z,2021-02-16T07:36:48Z,2021-02-16T09:18:31Z,MERGED,True,282,277,5,https://github.com/jktjkt,[WIP] tests: apply_changes: use proper atomics instead of `volatile`,2,[],https://github.com/sysrepo/sysrepo/pull/2322,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2322#issuecomment-779043346,"At this time I would appreciate your input if you are OK with this approach. If so, I can mass-change the other tests as well. Some of these patterns are still inherently racy (there's essentially a double-load everywhere that variable is used in the switch block a second time), but this is rather tedious work, so I took this shortcut.","I have looked at the suppressions available for TSAN and you are right, it would probably not even be possible to ignore it this way as you can only ignore whole functions (valgrind is better in this). So, I do not have any better idea than just using atomics everywhere. One could write some small API special for tests that would implement these counters but there is likely no advantage compared to your solution. So please, rewrite all the tests this way and I will merge it, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2322,2021-02-12T14:28:23Z,2021-02-16T07:36:48Z,2021-02-16T09:18:31Z,MERGED,True,282,277,5,https://github.com/jktjkt,[WIP] tests: apply_changes: use proper atomics instead of `volatile`,2,[],https://github.com/sysrepo/sysrepo/pull/2322,https://github.com/jktjkt,5,https://github.com/sysrepo/sysrepo/pull/2322#issuecomment-779368866,"At this time I would appreciate your input if you are OK with this approach. If so, I can mass-change the other tests as well. Some of these patterns are still inherently racy (there's essentially a double-load everywhere that variable is used in the switch block a second time), but this is rather tedious work, so I took this shortcut.","So please, rewrite all the tests this way and I will merge it, thanks.

Done (it was just a bunch of seds, and it works). I've listed some of the real issues that I'm getting in #2323.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2330,2021-02-18T11:02:55Z,2021-02-18T14:15:57Z,2021-02-18T14:16:19Z,MERGED,True,6,0,1,https://github.com/syyyr,Update doc on subscriptions,1,[],https://github.com/sysrepo/sysrepo/pull/2330,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2330,"Hi, I did a small research on creating subscriptions and found out that it is possible to subscribe to different types of datastores with just one session and context. So, this patch updates the doc to explain how it works.
Also, feel free to update my patch, if you don't like the wording or if it's wrong. Thanks.
These are the tests I made:
#include <fmt/core.h>
#include <iostream>
#include <sysrepo-cpp/Session.hpp>
#include <unistd.h>

auto dsToString = [] (auto ds) {
    switch (ds) {
        case SR_DS_STARTUP: return ""startup"";
        case SR_DS_RUNNING: return ""running"";
        case SR_DS_CANDIDATE: return ""candidate"";
        case SR_DS_OPERATIONAL: return ""operational"";
    }
};

auto createExpectedCallback = [] (auto expected) {

    return [expected] (sysrepo::S_Session sess, const char *, const char *,
            sr_event_t, uint32_t) {

        fmt::print(""  expected {} got {}\n"", expected, dsToString(sess->session_get_ds()));

        return SR_ERR_OK;
    };

};

auto reset_value()
{
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn);
    sess->delete_item(""/example-schema:leafInt32"");
    sess->apply_changes(1000, 1);
    sess->session_switch_ds(SR_DS_STARTUP);
    sess->delete_item(""/example-schema:leafInt32"");
    sess->apply_changes(1000, 1);
}

auto set_value_running()
{
    std::cout << ""setting running\n"";
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn);
    sess->set_item_str(""/example-schema:leafInt32"", ""1"");
    sess->apply_changes(1000, 1);
}

auto set_value_startup()
{
    std::cout << ""setting startup\n"";
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn, SR_DS_STARTUP);
    sess->set_item_str(""/example-schema:leafInt32"", ""1"");
    sess->apply_changes(1000, 1);
}


int main(void)
{
    // TEST 1:
    // 1) create a sysrepo::Subscribe when DS is running
    // 2) switch datastore to startup
    // 3) create a sysrepo::Subscribe when DS is startup
    // 4) sub with the first Subscribe
    // 5) sub with the second Subscribe
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sess->session_switch_ds(SR_DS_STARTUP);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Doesn't work, because sysrepo::Subscribe is empty upon creation and only holds a `session` variable. If you
    // change the datastore, both `sub` and `subStartup` change. So, both these callbacks subbed to the startup
    // datastore.

    // TEST 2:
    // 1) create a sysrepo::Subscribe when DS is running
    // 4) sub with the first Subscribe
    // 2) switch datastore to startup
    // 3) create a sysrepo::Subscribe when DS is startup
    // 5) sub with the second Subscribe
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as one would think (more like `could`, it's not documented). The first sub is to the running DS and the
    // second one is to the startup DS.

    // TEST 3:
    // 1) create two sysrepo::Subscribe at the same time when DS is running
    // 2) sub with the first one
    // 3) switch datastore to startup
    // 4) sub with the second one
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as ""expected"". This pretty much makes sense. This isn't too different from TEST 2. The creation of
    // sysrepo::Subscribe doesn't matter because it doesn't do anything by itself.

    // TEST 4:
    // 1) create a sysrepo::Subscribe when DS is running
    // 2) sub with it
    // 3) change datastore to startup
    // 4) sub again with the same sysrepo::Subscribe
    //
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as expected.

    // TEST 5:
    // 1) do the same as TEST 4
    // 2) switch datastore back to running
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_RUNNING);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works the same as TEST 4.
    //
    //
    // CONCLUSIONS:
    // 1) The point where you create the sysrepo::Subscribe doesn't matter because it is empty by default. Only the
    // calls to the subscribe methods matter. So, creating multiple sysrepo::Subscribe objects isn't necessary.
    //
    // 2) Changing the datastore DOESN'T affect previous subscriptions and it DOES affect new subscriptions.
    //
    // 3) The subscriptions do remember current datastore at the time of subscribing.
    //
    // 4) It is possible to use the same Session and Subscribe even if subscribing to different datastores.
    return 0;
}","Hi, I did a small research on creating subscriptions and found out that it is possible to subscribe to different types of datastores with just one session and context. So, this patch updates the doc to explain how it works.
Also, feel free to update my patch, if you don't like the wording or if it's wrong. Thanks.
These are the tests I made:
#include <fmt/core.h>
#include <iostream>
#include <sysrepo-cpp/Session.hpp>
#include <unistd.h>

auto dsToString = [] (auto ds) {
    switch (ds) {
        case SR_DS_STARTUP: return ""startup"";
        case SR_DS_RUNNING: return ""running"";
        case SR_DS_CANDIDATE: return ""candidate"";
        case SR_DS_OPERATIONAL: return ""operational"";
    }
};

auto createExpectedCallback = [] (auto expected) {

    return [expected] (sysrepo::S_Session sess, const char *, const char *,
            sr_event_t, uint32_t) {

        fmt::print(""  expected {} got {}\n"", expected, dsToString(sess->session_get_ds()));

        return SR_ERR_OK;
    };

};

auto reset_value()
{
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn);
    sess->delete_item(""/example-schema:leafInt32"");
    sess->apply_changes(1000, 1);
    sess->session_switch_ds(SR_DS_STARTUP);
    sess->delete_item(""/example-schema:leafInt32"");
    sess->apply_changes(1000, 1);
}

auto set_value_running()
{
    std::cout << ""setting running\n"";
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn);
    sess->set_item_str(""/example-schema:leafInt32"", ""1"");
    sess->apply_changes(1000, 1);
}

auto set_value_startup()
{
    std::cout << ""setting startup\n"";
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn, SR_DS_STARTUP);
    sess->set_item_str(""/example-schema:leafInt32"", ""1"");
    sess->apply_changes(1000, 1);
}


int main(void)
{
    // TEST 1:
    // 1) create a sysrepo::Subscribe when DS is running
    // 2) switch datastore to startup
    // 3) create a sysrepo::Subscribe when DS is startup
    // 4) sub with the first Subscribe
    // 5) sub with the second Subscribe
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sess->session_switch_ds(SR_DS_STARTUP);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Doesn't work, because sysrepo::Subscribe is empty upon creation and only holds a `session` variable. If you
    // change the datastore, both `sub` and `subStartup` change. So, both these callbacks subbed to the startup
    // datastore.

    // TEST 2:
    // 1) create a sysrepo::Subscribe when DS is running
    // 4) sub with the first Subscribe
    // 2) switch datastore to startup
    // 3) create a sysrepo::Subscribe when DS is startup
    // 5) sub with the second Subscribe
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as one would think (more like `could`, it's not documented). The first sub is to the running DS and the
    // second one is to the startup DS.

    // TEST 3:
    // 1) create two sysrepo::Subscribe at the same time when DS is running
    // 2) sub with the first one
    // 3) switch datastore to startup
    // 4) sub with the second one
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as ""expected"". This pretty much makes sense. This isn't too different from TEST 2. The creation of
    // sysrepo::Subscribe doesn't matter because it doesn't do anything by itself.

    // TEST 4:
    // 1) create a sysrepo::Subscribe when DS is running
    // 2) sub with it
    // 3) change datastore to startup
    // 4) sub again with the same sysrepo::Subscribe
    //
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as expected.

    // TEST 5:
    // 1) do the same as TEST 4
    // 2) switch datastore back to running
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_RUNNING);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works the same as TEST 4.
    //
    //
    // CONCLUSIONS:
    // 1) The point where you create the sysrepo::Subscribe doesn't matter because it is empty by default. Only the
    // calls to the subscribe methods matter. So, creating multiple sysrepo::Subscribe objects isn't necessary.
    //
    // 2) Changing the datastore DOESN'T affect previous subscriptions and it DOES affect new subscriptions.
    //
    // 3) The subscriptions do remember current datastore at the time of subscribing.
    //
    // 4) It is possible to use the same Session and Subscribe even if subscribing to different datastores.
    return 0;
}",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2330,2021-02-18T11:02:55Z,2021-02-18T14:15:57Z,2021-02-18T14:16:19Z,MERGED,True,6,0,1,https://github.com/syyyr,Update doc on subscriptions,1,[],https://github.com/sysrepo/sysrepo/pull/2330,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2330#issuecomment-781372519,"Hi, I did a small research on creating subscriptions and found out that it is possible to subscribe to different types of datastores with just one session and context. So, this patch updates the doc to explain how it works.
Also, feel free to update my patch, if you don't like the wording or if it's wrong. Thanks.
These are the tests I made:
#include <fmt/core.h>
#include <iostream>
#include <sysrepo-cpp/Session.hpp>
#include <unistd.h>

auto dsToString = [] (auto ds) {
    switch (ds) {
        case SR_DS_STARTUP: return ""startup"";
        case SR_DS_RUNNING: return ""running"";
        case SR_DS_CANDIDATE: return ""candidate"";
        case SR_DS_OPERATIONAL: return ""operational"";
    }
};

auto createExpectedCallback = [] (auto expected) {

    return [expected] (sysrepo::S_Session sess, const char *, const char *,
            sr_event_t, uint32_t) {

        fmt::print(""  expected {} got {}\n"", expected, dsToString(sess->session_get_ds()));

        return SR_ERR_OK;
    };

};

auto reset_value()
{
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn);
    sess->delete_item(""/example-schema:leafInt32"");
    sess->apply_changes(1000, 1);
    sess->session_switch_ds(SR_DS_STARTUP);
    sess->delete_item(""/example-schema:leafInt32"");
    sess->apply_changes(1000, 1);
}

auto set_value_running()
{
    std::cout << ""setting running\n"";
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn);
    sess->set_item_str(""/example-schema:leafInt32"", ""1"");
    sess->apply_changes(1000, 1);
}

auto set_value_startup()
{
    std::cout << ""setting startup\n"";
    auto conn = std::make_shared<sysrepo::Connection>();
    auto sess = std::make_shared<sysrepo::Session>(conn, SR_DS_STARTUP);
    sess->set_item_str(""/example-schema:leafInt32"", ""1"");
    sess->apply_changes(1000, 1);
}


int main(void)
{
    // TEST 1:
    // 1) create a sysrepo::Subscribe when DS is running
    // 2) switch datastore to startup
    // 3) create a sysrepo::Subscribe when DS is startup
    // 4) sub with the first Subscribe
    // 5) sub with the second Subscribe
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sess->session_switch_ds(SR_DS_STARTUP);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Doesn't work, because sysrepo::Subscribe is empty upon creation and only holds a `session` variable. If you
    // change the datastore, both `sub` and `subStartup` change. So, both these callbacks subbed to the startup
    // datastore.

    // TEST 2:
    // 1) create a sysrepo::Subscribe when DS is running
    // 4) sub with the first Subscribe
    // 2) switch datastore to startup
    // 3) create a sysrepo::Subscribe when DS is startup
    // 5) sub with the second Subscribe
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as one would think (more like `could`, it's not documented). The first sub is to the running DS and the
    // second one is to the startup DS.

    // TEST 3:
    // 1) create two sysrepo::Subscribe at the same time when DS is running
    // 2) sub with the first one
    // 3) switch datastore to startup
    // 4) sub with the second one
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        auto subStartup = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        subStartup->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as ""expected"". This pretty much makes sense. This isn't too different from TEST 2. The creation of
    // sysrepo::Subscribe doesn't matter because it doesn't do anything by itself.

    // TEST 4:
    // 1) create a sysrepo::Subscribe when DS is running
    // 2) sub with it
    // 3) change datastore to startup
    // 4) sub again with the same sysrepo::Subscribe
    //
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works as expected.

    // TEST 5:
    // 1) do the same as TEST 4
    // 2) switch datastore back to running
    {
        reset_value();

        auto conn = std::make_shared<sysrepo::Connection>();
        auto sess = std::make_shared<sysrepo::Session>(conn);
        auto sub = std::make_shared<sysrepo::Subscribe>(sess);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""running""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_STARTUP);
        sub->module_change_subscribe(""example-schema"", createExpectedCallback(""startup""), ""/example-schema:leafInt32"", 0, SR_SUBSCR_DONE_ONLY);
        sess->session_switch_ds(SR_DS_RUNNING);

        set_value_running();
        set_value_startup();
    }
    // RESULT:
    // Works the same as TEST 4.
    //
    //
    // CONCLUSIONS:
    // 1) The point where you create the sysrepo::Subscribe doesn't matter because it is empty by default. Only the
    // calls to the subscribe methods matter. So, creating multiple sysrepo::Subscribe objects isn't necessary.
    //
    // 2) Changing the datastore DOESN'T affect previous subscriptions and it DOES affect new subscriptions.
    //
    // 3) The subscriptions do remember current datastore at the time of subscribing.
    //
    // 4) It is possible to use the same Session and Subscribe even if subscribing to different datastores.
    return 0;
}","The general rule is that if something is not forbidden, it is allowed and should work (unless it does not when it either needs to be fixed or forbidden). But sure, I have no problem with mentioning this use-case explicitly.
Just note that Session not DS-specific and Session DS-specific simply marks whether the function behavior depends in some way on the session datastore or not. It certainly does not mean that you cannot change the datastore after the function, you always can.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2340,2021-02-25T07:32:20Z,2021-02-25T10:22:30Z,2021-02-25T10:22:31Z,MERGED,True,57,10,1,https://github.com/lePici,lyd mods CHANGE more efficient data storage,1,[],https://github.com/sysrepo/sysrepo/pull/2340,https://github.com/lePici,1,https://github.com/sysrepo/sysrepo/pull/2340,Unchanged data is not rewritten during context change.,Unchanged data is not rewritten during context change.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2361,2021-03-11T06:33:46Z,2021-03-11T06:34:53Z,2021-03-11T06:34:53Z,CLOSED,False,9834,10640,51,https://github.com/lePici,Test update data deviation,16,[],https://github.com/sysrepo/sysrepo/pull/2361,https://github.com/lePici,1,https://github.com/sysrepo/sysrepo/pull/2361,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2362,2021-03-11T06:37:21Z,2021-03-11T15:09:34Z,2021-03-11T15:09:34Z,MERGED,True,95,3,4,https://github.com/lePici,test NEW update data deviation test,1,[],https://github.com/sysrepo/sysrepo/pull/2362,https://github.com/lePici,1,https://github.com/sysrepo/sysrepo/pull/2362,"Attempts to install and uninstall modules containing a deviation
statement, triggering changes in context.","Attempts to install and uninstall modules containing a deviation
statement, triggering changes in context.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2362,2021-03-11T06:37:21Z,2021-03-11T15:09:34Z,2021-03-11T15:09:34Z,MERGED,True,95,3,4,https://github.com/lePici,test NEW update data deviation test,1,[],https://github.com/sysrepo/sysrepo/pull/2362,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2362#issuecomment-796519624,"Attempts to install and uninstall modules containing a deviation
statement, triggering changes in context.","Also, ignore travis, it is not compiling with libyang2 so it will always fail.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2383,2021-03-30T12:16:38Z,2021-04-07T06:03:26Z,2021-04-07T06:03:26Z,MERGED,True,420,154,10,https://github.com/lePici,sysrepo BUGFIX overwrite data when changing ctx,3,[],https://github.com/sysrepo/sysrepo/pull/2383,https://github.com/lePici,1,https://github.com/sysrepo/sysrepo/pull/2383,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2395,2021-04-09T19:42:49Z,2021-04-12T08:28:02Z,2021-04-12T08:28:02Z,MERGED,True,10,3,1,https://github.com/kpbarrett,Fix operational-data behavior on choice/uses,1,[],https://github.com/sysrepo/sysrepo/pull/2395,https://github.com/kpbarrett,1,https://github.com/sysrepo/sysrepo/pull/2395,"This PR fixes undefined behavior when an operational data callback returns data for a module containing a ""choice"" with nodes pulled in via ""uses"".
The attached test module has two containers with the same structure of operational data, one modeled with choice/case and one without, using groupings. The callback in the attached source file returns data for each case in sequence.
When running the test code against oper-data-direct (oper_data_example oper-group-test /oper-group-test:oper-data-direct), the following output is given:
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 1 values</results-description>
  <g1container>
    <g1leaf1>value2</g1leaf1>
  </g1container>
</oper-data-direct>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 2 values</results-description>
  <g2container>
    <g2leaf1>value3</g2leaf1>
  </g2container>
</oper-data-direct>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Non-grouping values</results-description>
  <nongroup>value4</nongroup>
</oper-data-direct>
$ 

When running against oper-data-choice (oper_data_example oper-group-test /oper-group-test:oper-data-choice):
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 1 values</results-description>
  <g2container/>
</oper-data-choice>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 2 values</results-description>
  <g2container/>
</oper-data-choice>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Non-grouping values</results-description>
  <g2container/>
</oper-data-choice>
$

The desired operation is for the results of oper-data-choice to be like oper-data-direct.
Credit to wdabbs@vcinity.io
oper_group_test.zip","This PR fixes undefined behavior when an operational data callback returns data for a module containing a ""choice"" with nodes pulled in via ""uses"".
The attached test module has two containers with the same structure of operational data, one modeled with choice/case and one without, using groupings. The callback in the attached source file returns data for each case in sequence.
When running the test code against oper-data-direct (oper_data_example oper-group-test /oper-group-test:oper-data-direct), the following output is given:
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 1 values</results-description>
  <g1container>
    <g1leaf1>value2</g1leaf1>
  </g1container>
</oper-data-direct>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 2 values</results-description>
  <g2container>
    <g2leaf1>value3</g2leaf1>
  </g2container>
</oper-data-direct>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Non-grouping values</results-description>
  <nongroup>value4</nongroup>
</oper-data-direct>
$ 

When running against oper-data-choice (oper_data_example oper-group-test /oper-group-test:oper-data-choice):
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 1 values</results-description>
  <g2container/>
</oper-data-choice>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 2 values</results-description>
  <g2container/>
</oper-data-choice>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Non-grouping values</results-description>
  <g2container/>
</oper-data-choice>
$

The desired operation is for the results of oper-data-choice to be like oper-data-direct.
Credit to wdabbs@vcinity.io
oper_group_test.zip",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2395,2021-04-09T19:42:49Z,2021-04-12T08:28:02Z,2021-04-12T08:28:02Z,MERGED,True,10,3,1,https://github.com/kpbarrett,Fix operational-data behavior on choice/uses,1,[],https://github.com/sysrepo/sysrepo/pull/2395,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2395#issuecomment-817602708,"This PR fixes undefined behavior when an operational data callback returns data for a module containing a ""choice"" with nodes pulled in via ""uses"".
The attached test module has two containers with the same structure of operational data, one modeled with choice/case and one without, using groupings. The callback in the attached source file returns data for each case in sequence.
When running the test code against oper-data-direct (oper_data_example oper-group-test /oper-group-test:oper-data-direct), the following output is given:
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 1 values</results-description>
  <g1container>
    <g1leaf1>value2</g1leaf1>
  </g1container>
</oper-data-direct>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 2 values</results-description>
  <g2container>
    <g2leaf1>value3</g2leaf1>
  </g2container>
</oper-data-direct>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-direct
<oper-data-direct xmlns=""http://example.org/oper-group-test"">
  <results-description>Non-grouping values</results-description>
  <nongroup>value4</nongroup>
</oper-data-direct>
$ 

When running against oper-data-choice (oper_data_example oper-group-test /oper-group-test:oper-data-choice):
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 1 values</results-description>
  <g2container/>
</oper-data-choice>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Grouping 2 values</results-description>
  <g2container/>
</oper-data-choice>
$ sysrepocfg -fxml  --export -doperational -x /oper-group-test:oper-data-choice
<oper-data-choice xmlns=""http://example.org/oper-group-test"">
  <results-description>Non-grouping values</results-description>
  <g2container/>
</oper-data-choice>
$

The desired operation is for the results of oper-data-choice to be like oper-data-direct.
Credit to wdabbs@vcinity.io
oper_group_test.zip","Right, I have no problem with the bugifx. Note that similar problems should no longer be present once sysrepo is migrated to libyang version 2, should not take more than a few weeks. Actually, it is already almost finished but was not officially released.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2417,2021-05-16T16:04:42Z,2021-05-17T09:15:31Z,2021-05-17T09:20:35Z,CLOSED,False,4,4,2,https://github.com/jktjkt,"Do no routinely emit ""info"" messages",1,[],https://github.com/sysrepo/sysrepo/pull/2417,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2417,"Our devices push operational data into sysrepo periodically, often several times a second. Here's how a log usually looks like on a production box:
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 891 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 892 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 893 priority 0 for 1 subscribers.
May 16 15:56:08 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:09 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 894 priority 0 for 1 subscribers.
May 16 15:56:09 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 895 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 896 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 897 priority 0 for 1 subscribers.

These are produced via the sysrepo library and stored via our application code because of the info message severity.
Reduce the log verbosity a bit down to debug for those debugging messages.","Our devices push operational data into sysrepo periodically, often several times a second. Here's how a log usually looks like on a production box:
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 891 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 892 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 893 priority 0 for 1 subscribers.
May 16 15:56:08 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:09 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 894 priority 0 for 1 subscribers.
May 16 15:56:09 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 895 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 896 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 897 priority 0 for 1 subscribers.

These are produced via the sysrepo library and stored via our application code because of the info message severity.
Reduce the log verbosity a bit down to debug for those debugging messages.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2417,2021-05-16T16:04:42Z,2021-05-17T09:15:31Z,2021-05-17T09:20:35Z,CLOSED,False,4,4,2,https://github.com/jktjkt,"Do no routinely emit ""info"" messages",1,[],https://github.com/sysrepo/sysrepo/pull/2417,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2417#issuecomment-842135960,"Our devices push operational data into sysrepo periodically, often several times a second. Here's how a log usually looks like on a production box:
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 891 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 892 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 893 priority 0 for 1 subscribers.
May 16 15:56:08 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:09 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 894 priority 0 for 1 subscribers.
May 16 15:56:09 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 895 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 896 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 897 priority 0 for 1 subscribers.

These are produced via the sysrepo library and stored via our application code because of the info message severity.
Reduce the log verbosity a bit down to debug for those debugging messages.","Generally, you would solve similar problems by decreasing the verbosity. Why did you not simply do that?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2417,2021-05-16T16:04:42Z,2021-05-17T09:15:31Z,2021-05-17T09:20:35Z,CLOSED,False,4,4,2,https://github.com/jktjkt,"Do no routinely emit ""info"" messages",1,[],https://github.com/sysrepo/sysrepo/pull/2417,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/2417#issuecomment-842162965,"Our devices push operational data into sysrepo periodically, often several times a second. Here's how a log usually looks like on a production box:
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 891 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 892 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 893 priority 0 for 1 subscribers.
May 16 15:56:08 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:09 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 894 priority 0 for 1 subscribers.
May 16 15:56:09 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 895 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 896 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 897 priority 0 for 1 subscribers.

These are produced via the sysrepo library and stored via our application code because of the info message severity.
Reduce the log verbosity a bit down to debug for those debugging messages.","This is probably a bikeshedding discussion :), but in the past we've seen cases where info messages contained information that were very useful for debugging an actual failure. I don't know how is the situation today, and based on a quick grep, it looks like these info-level messages are in fact a debug ones. So we will probably just map sysrepo's debug to our internal trace, and sysrepo's info to our internal debug.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2417,2021-05-16T16:04:42Z,2021-05-17T09:15:31Z,2021-05-17T09:20:35Z,CLOSED,False,4,4,2,https://github.com/jktjkt,"Do no routinely emit ""info"" messages",1,[],https://github.com/sysrepo/sysrepo/pull/2417,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2417#issuecomment-842166500,"Our devices push operational data into sysrepo periodically, often several times a second. Here's how a log usually looks like on a production box:
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 891 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 892 priority 0 for 1 subscribers.
May 16 15:56:07 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 893 priority 0 for 1 subscribers.
May 16 15:56:08 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:09 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 894 priority 0 for 1 subscribers.
May 16 15:56:09 line-qr79 sysrepo[459]: No datastore changes to apply.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 895 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 896 priority 0 for 1 subscribers.
May 16 15:56:10 line-qr79 sysrepo[459]: Published event ""done"" ""czechlight-roadm-device"" with ID 897 priority 0 for 1 subscribers.

These are produced via the sysrepo library and stored via our application code because of the info message severity.
Reduce the log verbosity a bit down to debug for those debugging messages.","I am not saying you do not have a point, I was just wondering why did you decide to do a PR instead of a simple change in your code :) I am often not sure what level to assign for a message and, more importantly, the messages were changing a lot. So I may take an explicit look at the log levels later but the change you did is probably the right one.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2432,2021-05-24T20:56:27Z,2021-05-25T05:25:50Z,2021-05-25T05:25:53Z,MERGED,True,23,16,2,https://github.com/rkrejci,build CHANGE separated build type for building docs without dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/2432,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/2432,"Let the user build doxygen documentation without need of other compile
dependencies.
Moves the docs build into a separated cmake functions in CMakeModules.","Let the user build doxygen documentation without need of other compile
dependencies.
Moves the docs build into a separated cmake functions in CMakeModules.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2433,2021-05-24T21:13:08Z,2021-05-25T05:27:21Z,2021-05-25T05:27:23Z,MERGED,True,38,29,2,https://github.com/rkrejci,build CHANGE separated build type for building docs without dependencies,1,[],https://github.com/sysrepo/sysrepo/pull/2433,https://github.com/rkrejci,1,https://github.com/sysrepo/sysrepo/pull/2433,"Let the user build doxygen documentation without need of other compile
dependencies.
Moves the docs build into a separated cmake functions in CMakeModules.
Same as #2432 but for a different target branch.","Let the user build doxygen documentation without need of other compile
dependencies.
Moves the docs build into a separated cmake functions in CMakeModules.
Same as #2432 but for a different target branch.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2440,2021-05-27T22:27:02Z,2021-05-28T05:02:43Z,2021-05-28T07:28:45Z,MERGED,True,1,1,1,https://github.com/jsmolic,cmake BUGFIX don't install ${LIB_HEADERS} in /usr/include,1,[],https://github.com/sysrepo/sysrepo/pull/2440,https://github.com/jsmolic,1,https://github.com/sysrepo/sysrepo/pull/2440,"This shouldn't be installed there as values.h causes file collision with
glibc, and we are already installing sysrepo.h and sysrepo_types.h
in /usr/include anyway, so let's just remove it from the install
command

Signed-off-by: Jakov Smolic jakov.smolic@sartura.hr","This shouldn't be installed there as values.h causes file collision with
glibc, and we are already installing sysrepo.h and sysrepo_types.h
in /usr/include anyway, so let's just remove it from the install
command

Signed-off-by: Jakov Smolic jakov.smolic@sartura.hr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2440,2021-05-27T22:27:02Z,2021-05-28T05:02:43Z,2021-05-28T07:28:45Z,MERGED,True,1,1,1,https://github.com/jsmolic,cmake BUGFIX don't install ${LIB_HEADERS} in /usr/include,1,[],https://github.com/sysrepo/sysrepo/pull/2440,https://github.com/codecov-commenter,2,https://github.com/sysrepo/sysrepo/pull/2440#issuecomment-849982873,"This shouldn't be installed there as values.h causes file collision with
glibc, and we are already installing sysrepo.h and sysrepo_types.h
in /usr/include anyway, so let's just remove it from the install
command

Signed-off-by: Jakov Smolic jakov.smolic@sartura.hr","Codecov Report

Merging #2440 (6814ad9) into master (a41fc20) will decrease coverage by 0.03%.
The diff coverage is n/a.


❗ Current head 6814ad9 differs from pull request most recent head 8bfe466. Consider uploading reports for the commit 8bfe466 to get more accurate results

@@            Coverage Diff             @@
##           master    #2440      +/-   ##
==========================================
- Coverage   61.43%   61.40%   -0.03%     
==========================================
  Files          17       17              
  Lines       13886    13886              
==========================================
- Hits         8530     8526       -4     
- Misses       5356     5360       +4",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2440,2021-05-27T22:27:02Z,2021-05-28T05:02:43Z,2021-05-28T07:28:45Z,MERGED,True,1,1,1,https://github.com/jsmolic,cmake BUGFIX don't install ${LIB_HEADERS} in /usr/include,1,[],https://github.com/sysrepo/sysrepo/pull/2440,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2440#issuecomment-850132098,"This shouldn't be installed there as values.h causes file collision with
glibc, and we are already installing sysrepo.h and sysrepo_types.h
in /usr/include anyway, so let's just remove it from the install
command

Signed-off-by: Jakov Smolic jakov.smolic@sartura.hr","Oh, right, merging. Just make the target branch devel, always, even though in this case it should probably go into master right away.",True,{'THUMBS_UP': ['https://github.com/jsmolic']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2446,2021-05-31T11:14:49Z,2021-05-31T11:52:24Z,2021-06-11T16:07:56Z,MERGED,True,5,5,2,https://github.com/snar,BUGFIX: Correct permissions check when mode_t is uint16_t.,1,[],https://github.com/sysrepo/sysrepo/pull/2446,https://github.com/snar,1,https://github.com/sysrepo/sysrepo/pull/2446,"Currently permissions (of type mode_t) are initialized with (mode_t)-1 and then
(int)perms checked against -1. Unfortunately, when mode_t is defined as uint16_t
(FreeBSD 11), perms became 65535, and (int)65535 never equals -1.","Currently permissions (of type mode_t) are initialized with (mode_t)-1 and then
(int)perms checked against -1. Unfortunately, when mode_t is defined as uint16_t
(FreeBSD 11), perms became 65535, and (int)65535 never equals -1.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2446,2021-05-31T11:14:49Z,2021-05-31T11:52:24Z,2021-06-11T16:07:56Z,MERGED,True,5,5,2,https://github.com/snar,BUGFIX: Correct permissions check when mode_t is uint16_t.,1,[],https://github.com/sysrepo/sysrepo/pull/2446,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2446#issuecomment-851436839,"Currently permissions (of type mode_t) are initialized with (mode_t)-1 and then
(int)perms checked against -1. Unfortunately, when mode_t is defined as uint16_t
(FreeBSD 11), perms became 65535, and (int)65535 never equals -1.","No problem, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2447,2021-05-31T12:14:50Z,2021-05-31T13:00:23Z,2021-05-31T13:59:28Z,MERGED,True,0,1,1,https://github.com/snar,update _XOPEN_SOURCE to 600 in rpc_subscribe_example.c,2,[],https://github.com/sysrepo/sysrepo/pull/2447,https://github.com/snar,1,https://github.com/sysrepo/sysrepo/pull/2447,"This pull fixes following build failure on FreeBSD 11:
In file included from /home/snar/compile/sysrepo/examples/rpc_subscribe_example.c:25:
In file included from /usr/local/include/libyang/libyang.h:24:
In file included from /usr/local/include/libyang/context.h:22:
/usr/local/include/libyang/tree_data.h:644:21: error: field has incomplete type 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
                    ^
/usr/local/include/libyang/tree_data.h:644:12: note: forward declaration of 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
           ^

Root cause: _XOPEN_SOURCE of 500 leads to _POSIX_C_SOURCE 199506 (cdefs.h):
#elif _XOPEN_SOURCE - 0 >= 500
#define __XSI_VISIBLE           500
#undef _POSIX_C_SOURCE
#define _POSIX_C_SOURCE         199506

this in turn leads to
#define __POSIX_VISIBLE         198808

and this value is too low for <netinet6/in6.h> to be included (netinet/in.h):
#if __POSIX_VISIBLE >= 200112
#define __KAME_NETINET_IN_H_INCLUDED_
#include <netinet6/in6.h>
#undef __KAME_NETINET_IN_H_INCLUDED_
#endif","This pull fixes following build failure on FreeBSD 11:
In file included from /home/snar/compile/sysrepo/examples/rpc_subscribe_example.c:25:
In file included from /usr/local/include/libyang/libyang.h:24:
In file included from /usr/local/include/libyang/context.h:22:
/usr/local/include/libyang/tree_data.h:644:21: error: field has incomplete type 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
                    ^
/usr/local/include/libyang/tree_data.h:644:12: note: forward declaration of 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
           ^

Root cause: _XOPEN_SOURCE of 500 leads to _POSIX_C_SOURCE 199506 (cdefs.h):
#elif _XOPEN_SOURCE - 0 >= 500
#define __XSI_VISIBLE           500
#undef _POSIX_C_SOURCE
#define _POSIX_C_SOURCE         199506

this in turn leads to
#define __POSIX_VISIBLE         198808

and this value is too low for <netinet6/in6.h> to be included (netinet/in.h):
#if __POSIX_VISIBLE >= 200112
#define __KAME_NETINET_IN_H_INCLUDED_
#include <netinet6/in6.h>
#undef __KAME_NETINET_IN_H_INCLUDED_
#endif",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2447,2021-05-31T12:14:50Z,2021-05-31T13:00:23Z,2021-05-31T13:59:28Z,MERGED,True,0,1,1,https://github.com/snar,update _XOPEN_SOURCE to 600 in rpc_subscribe_example.c,2,[],https://github.com/sysrepo/sysrepo/pull/2447,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2447#issuecomment-851464846,"This pull fixes following build failure on FreeBSD 11:
In file included from /home/snar/compile/sysrepo/examples/rpc_subscribe_example.c:25:
In file included from /usr/local/include/libyang/libyang.h:24:
In file included from /usr/local/include/libyang/context.h:22:
/usr/local/include/libyang/tree_data.h:644:21: error: field has incomplete type 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
                    ^
/usr/local/include/libyang/tree_data.h:644:12: note: forward declaration of 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
           ^

Root cause: _XOPEN_SOURCE of 500 leads to _POSIX_C_SOURCE 199506 (cdefs.h):
#elif _XOPEN_SOURCE - 0 >= 500
#define __XSI_VISIBLE           500
#undef _POSIX_C_SOURCE
#define _POSIX_C_SOURCE         199506

this in turn leads to
#define __POSIX_VISIBLE         198808

and this value is too low for <netinet6/in6.h> to be included (netinet/in.h):
#if __POSIX_VISIBLE >= 200112
#define __KAME_NETINET_IN_H_INCLUDED_
#include <netinet6/in6.h>
#undef __KAME_NETINET_IN_H_INCLUDED_
#endif","Wouldn't just removing #define _XOPEN_SOURCE do the trick? And perhaps including sys/cdefs.h right after defining _GNU_SOURCE, that should enable everything.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2447,2021-05-31T12:14:50Z,2021-05-31T13:00:23Z,2021-05-31T13:59:28Z,MERGED,True,0,1,1,https://github.com/snar,update _XOPEN_SOURCE to 600 in rpc_subscribe_example.c,2,[],https://github.com/sysrepo/sysrepo/pull/2447,https://github.com/snar,3,https://github.com/sysrepo/sysrepo/pull/2447#issuecomment-851472102,"This pull fixes following build failure on FreeBSD 11:
In file included from /home/snar/compile/sysrepo/examples/rpc_subscribe_example.c:25:
In file included from /usr/local/include/libyang/libyang.h:24:
In file included from /usr/local/include/libyang/context.h:22:
/usr/local/include/libyang/tree_data.h:644:21: error: field has incomplete type 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
                    ^
/usr/local/include/libyang/tree_data.h:644:12: note: forward declaration of 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
           ^

Root cause: _XOPEN_SOURCE of 500 leads to _POSIX_C_SOURCE 199506 (cdefs.h):
#elif _XOPEN_SOURCE - 0 >= 500
#define __XSI_VISIBLE           500
#undef _POSIX_C_SOURCE
#define _POSIX_C_SOURCE         199506

this in turn leads to
#define __POSIX_VISIBLE         198808

and this value is too low for <netinet6/in6.h> to be included (netinet/in.h):
#if __POSIX_VISIBLE >= 200112
#define __KAME_NETINET_IN_H_INCLUDED_
#include <netinet6/in6.h>
#undef __KAME_NETINET_IN_H_INCLUDED_
#endif","Removing _XOPEN_SOURCE works as well. As for including cdefs.h - it is already included
through stdint.h (Linux: through features.h, FreeBSD: directly from stdint.h).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2447,2021-05-31T12:14:50Z,2021-05-31T13:00:23Z,2021-05-31T13:59:28Z,MERGED,True,0,1,1,https://github.com/snar,update _XOPEN_SOURCE to 600 in rpc_subscribe_example.c,2,[],https://github.com/sysrepo/sysrepo/pull/2447,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2447#issuecomment-851474897,"This pull fixes following build failure on FreeBSD 11:
In file included from /home/snar/compile/sysrepo/examples/rpc_subscribe_example.c:25:
In file included from /usr/local/include/libyang/libyang.h:24:
In file included from /usr/local/include/libyang/context.h:22:
/usr/local/include/libyang/tree_data.h:644:21: error: field has incomplete type 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
                    ^
/usr/local/include/libyang/tree_data.h:644:12: note: forward declaration of 'struct in6_addr'
    struct in6_addr addr;   /**< IPv6 address in binary */
           ^

Root cause: _XOPEN_SOURCE of 500 leads to _POSIX_C_SOURCE 199506 (cdefs.h):
#elif _XOPEN_SOURCE - 0 >= 500
#define __XSI_VISIBLE           500
#undef _POSIX_C_SOURCE
#define _POSIX_C_SOURCE         199506

this in turn leads to
#define __POSIX_VISIBLE         198808

and this value is too low for <netinet6/in6.h> to be included (netinet/in.h):
#if __POSIX_VISIBLE >= 200112
#define __KAME_NETINET_IN_H_INCLUDED_
#include <netinet6/in6.h>
#undef __KAME_NETINET_IN_H_INCLUDED_
#endif","Fine, merging.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2449,2021-06-01T06:51:54Z,2021-06-01T07:16:58Z,2021-06-01T07:17:00Z,MERGED,True,65,23,5,https://github.com/michalvasko,Oper delete,3,[],https://github.com/sysrepo/sysrepo/pull/2449,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/2449,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2475,2021-06-11T16:21:25Z,2021-06-14T05:25:08Z,2021-06-14T15:10:06Z,MERGED,True,2,2,1,https://github.com/snar,BUGFIX: two more cases where unsigned mode_t check fails.,1,[],https://github.com/sysrepo/sysrepo/pull/2475,https://github.com/snar,1,https://github.com/sysrepo/sysrepo/pull/2475,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2475,2021-06-11T16:21:25Z,2021-06-14T05:25:08Z,2021-06-14T15:10:06Z,MERGED,True,2,2,1,https://github.com/snar,BUGFIX: two more cases where unsigned mode_t check fails.,1,[],https://github.com/sysrepo/sysrepo/pull/2475,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2475#issuecomment-860373344,,"No problem, merging.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2476,2021-06-11T16:33:00Z,2021-06-14T05:26:16Z,2021-06-14T15:10:03Z,MERGED,True,0,2,1,https://github.com/snar,BUGFIX: build failure on FreeBSD,1,[],https://github.com/sysrepo/sysrepo/pull/2476,https://github.com/snar,1,https://github.com/sysrepo/sysrepo/pull/2476,"Setting  _POSIX_C_SOURCE to 199309L removes <netinet6/in6.h> from inclusion,
leading to build failure.","Setting  _POSIX_C_SOURCE to 199309L removes <netinet6/in6.h> from inclusion,
leading to build failure.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2476,2021-06-11T16:33:00Z,2021-06-14T05:26:16Z,2021-06-14T15:10:03Z,MERGED,True,0,2,1,https://github.com/snar,BUGFIX: build failure on FreeBSD,1,[],https://github.com/sysrepo/sysrepo/pull/2476,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2476#issuecomment-860374074,"Setting  _POSIX_C_SOURCE to 199309L removes <netinet6/in6.h> from inclusion,
leading to build failure.","Okay, build seems to be passing without it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2487,2021-06-21T14:51:24Z,2021-06-22T12:54:11Z,2021-06-22T14:46:05Z,MERGED,True,115,3,2,https://github.com/rshearman,shm mod BUGFIX fix lock ordering for writes,1,[],https://github.com/sysrepo/sysrepo/pull/2487,https://github.com/rshearman,1,https://github.com/sysrepo/sysrepo/pull/2487,"Change the semantics of read locks taken during module writes so they
don't co-exist with other read locks taken for module writes to avoid
(timed) deadlocks when locks are taken in opposite way.
Test included.
Fixes #2486","Change the semantics of read locks taken during module writes so they
don't co-exist with other read locks taken for module writes to avoid
(timed) deadlocks when locks are taken in opposite way.
Test included.
Fixes #2486",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2487,2021-06-21T14:51:24Z,2021-06-22T12:54:11Z,2021-06-22T14:46:05Z,MERGED,True,115,3,2,https://github.com/rshearman,shm mod BUGFIX fix lock ordering for writes,1,[],https://github.com/sysrepo/sysrepo/pull/2487,https://github.com/apps/codecov,2,https://github.com/sysrepo/sysrepo/pull/2487#issuecomment-865626249,"Change the semantics of read locks taken during module writes so they
don't co-exist with other read locks taken for module writes to avoid
(timed) deadlocks when locks are taken in opposite way.
Test included.
Fixes #2486","Codecov Report

Merging #2487 (5cd876a) into devel (a6d4703) will increase coverage by 0.00%.
The diff coverage is 100.00%.


❗ Current head 5cd876a differs from pull request most recent head d1fb410. Consider uploading reports for the commit d1fb410 to get more accurate results

@@           Coverage Diff           @@
##            devel    #2487   +/-   ##
=======================================
  Coverage   61.41%   61.41%           
=======================================
  Files          17       17           
  Lines       13885    13883    -2     
=======================================
- Hits         8527     8526    -1     
+ Misses       5358     5357    -1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2487,2021-06-21T14:51:24Z,2021-06-22T12:54:11Z,2021-06-22T14:46:05Z,MERGED,True,115,3,2,https://github.com/rshearman,shm mod BUGFIX fix lock ordering for writes,1,[],https://github.com/sysrepo/sysrepo/pull/2487,https://github.com/Reshad-Rahman,3,https://github.com/sysrepo/sysrepo/pull/2487#issuecomment-865989355,"Change the semantics of read locks taken during module writes so they
don't co-exist with other read locks taken for module writes to avoid
(timed) deadlocks when locks are taken in opposite way.
Test included.
Fixes #2486",Does/can this fix have to go in libyang1 too?,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2487,2021-06-21T14:51:24Z,2021-06-22T12:54:11Z,2021-06-22T14:46:05Z,MERGED,True,115,3,2,https://github.com/rshearman,shm mod BUGFIX fix lock ordering for writes,1,[],https://github.com/sysrepo/sysrepo/pull/2487,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2487#issuecomment-865993771,"Change the semantics of read locks taken during module writes so they
don't co-exist with other read locks taken for module writes to avoid
(timed) deadlocks when locks are taken in opposite way.
Test included.
Fixes #2486","Yes, it seems the exact same fix can be merged, so you can make another PR.",True,{'THUMBS_UP': ['https://github.com/rshearman']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2494,2021-06-22T14:44:59Z,2021-06-23T05:54:20Z,2021-06-23T05:54:20Z,MERGED,True,115,4,2,https://github.com/rshearman,[ly1] shm mod BUGFIX fix lock ordering for writes,1,[],https://github.com/sysrepo/sysrepo/pull/2494,https://github.com/rshearman,1,https://github.com/sysrepo/sysrepo/pull/2494,"Change the semantics of read locks taken during module writes so they
don't co-exist with other read locks taken for module writes to avoid
(timed) deadlocks when locks are taken in opposite way.
Test included.
Fixes #2486","Change the semantics of read locks taken during module writes so they
don't co-exist with other read locks taken for module writes to avoid
(timed) deadlocks when locks are taken in opposite way.
Test included.
Fixes #2486",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2534,2021-08-10T11:29:11Z,2021-08-20T14:15:56Z,2021-08-24T08:12:47Z,CLOSED,False,6,9,1,https://github.com/gunterw,Improve lock recovery to avoid endless while loop,1,[],https://github.com/sysrepo/sysrepo/pull/2534,https://github.com/gunterw,1,https://github.com/sysrepo/sysrepo/pull/2534,"I was getting lockups on my system where the pthread_cond_timedwait function would return success(0) and yet there where still
cids in the readers structure, this would spin in the while loop forever.
fyi - not sure how/why this happens on my system but we use the SR_SUBSCR_NO_THREAD for all of our subscriptions,
and I only have one connection per process.","I was getting lockups on my system where the pthread_cond_timedwait function would return success(0) and yet there where still
cids in the readers structure, this would spin in the while loop forever.
fyi - not sure how/why this happens on my system but we use the SR_SUBSCR_NO_THREAD for all of our subscriptions,
and I only have one connection per process.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2534,2021-08-10T11:29:11Z,2021-08-20T14:15:56Z,2021-08-24T08:12:47Z,CLOSED,False,6,9,1,https://github.com/gunterw,Improve lock recovery to avoid endless while loop,1,[],https://github.com/sysrepo/sysrepo/pull/2534,https://github.com/gunterw,2,https://github.com/sysrepo/sysrepo/pull/2534#issuecomment-895958007,"I was getting lockups on my system where the pthread_cond_timedwait function would return success(0) and yet there where still
cids in the readers structure, this would spin in the while loop forever.
fyi - not sure how/why this happens on my system but we use the SR_SUBSCR_NO_THREAD for all of our subscriptions,
and I only have one connection per process.",I added some debug logic and discovered that the lockup for me was occurring in the sr_rwrelock function,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2534,2021-08-10T11:29:11Z,2021-08-20T14:15:56Z,2021-08-24T08:12:47Z,CLOSED,False,6,9,1,https://github.com/gunterw,Improve lock recovery to avoid endless while loop,1,[],https://github.com/sysrepo/sysrepo/pull/2534,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2534#issuecomment-904423004,"I was getting lockups on my system where the pthread_cond_timedwait function would return success(0) and yet there where still
cids in the readers structure, this would spin in the while loop forever.
fyi - not sure how/why this happens on my system but we use the SR_SUBSCR_NO_THREAD for all of our subscriptions,
and I only have one connection per process.","So what happened, did you learn more? But your fixes seem to be just workarounds at best.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2555,2021-08-31T17:16:10Z,2021-09-01T06:15:27Z,2021-09-01T06:15:44Z,MERGED,True,2,1,1,https://github.com/jktjkt,Fix undefined behavior,1,[],https://github.com/sysrepo/sysrepo/pull/2555,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2555,"The test_modules was failing on UBSAN from clang 12 because the code tried to access something through a null pointer:
sysrepo/src/common.c:1655:78: runtime error: member access within null pointer of type 'struct lysp_revision'
    #0 0x7f3aa03ef3fd in sr_remove_module_file_r sysrepo/src/common.c:1655:115
    #1 0x7f3aa047887c in sr_lydmods_sched_finalize_module_remove sysrepo/src/lyd_mods.c:1546:25
    #2 0x7f3aa0469deb in sr_lydmods_sched_apply sysrepo/src/lyd_mods.c:2092:41
    #3 0x7f3aa0464900 in sr_lydmods_conn_ctx_update sysrepo/src/lyd_mods.c:2201:33
    #4 0x7f3aa03957c9 in sr_connect sysrepo/src/sysrepo.c:183:21
    #5 0x4fbc3f in setup_f sysrepo/tests/test_modules.c:46:9
    #6 0x7f3aa05c5412 in cmocka_run_one_test_or_fixture (/nix/store/cyxdjbcc9b0c9zm22l65raicv6xd62lb-cmocka-1.1.5/lib/libcmocka.so.0+0x6412)
    #7 0x7f3aa05c5f55 in _cmocka_run_group_tests (/nix/store/cyxdjbcc9b0c9zm22l65raicv6xd62lb-cmocka-1.1.5/lib/libcmocka.so.0+0x6f55)
    #8 0x4fb33d in main sysrepo/tests/test_modules.c:1669:12
    #9 0x7f3a9f4fc77f in __libc_start_main (/nix/store/9bh3986bpragfjmr32gay8p95k91q4gy-glibc-2.33-47/lib/libc.so.6+0x2777f)
    #10 0x420659 in _start /build/glibc-2.33/csu/../sysdeps/x86_64/start.S:120

SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/common.c:1655:78 in

Due to the way how UBSAN works, this was by default only printed to stderr. Unless one used something like UBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1, this was a silent failure.","The test_modules was failing on UBSAN from clang 12 because the code tried to access something through a null pointer:
sysrepo/src/common.c:1655:78: runtime error: member access within null pointer of type 'struct lysp_revision'
    #0 0x7f3aa03ef3fd in sr_remove_module_file_r sysrepo/src/common.c:1655:115
    #1 0x7f3aa047887c in sr_lydmods_sched_finalize_module_remove sysrepo/src/lyd_mods.c:1546:25
    #2 0x7f3aa0469deb in sr_lydmods_sched_apply sysrepo/src/lyd_mods.c:2092:41
    #3 0x7f3aa0464900 in sr_lydmods_conn_ctx_update sysrepo/src/lyd_mods.c:2201:33
    #4 0x7f3aa03957c9 in sr_connect sysrepo/src/sysrepo.c:183:21
    #5 0x4fbc3f in setup_f sysrepo/tests/test_modules.c:46:9
    #6 0x7f3aa05c5412 in cmocka_run_one_test_or_fixture (/nix/store/cyxdjbcc9b0c9zm22l65raicv6xd62lb-cmocka-1.1.5/lib/libcmocka.so.0+0x6412)
    #7 0x7f3aa05c5f55 in _cmocka_run_group_tests (/nix/store/cyxdjbcc9b0c9zm22l65raicv6xd62lb-cmocka-1.1.5/lib/libcmocka.so.0+0x6f55)
    #8 0x4fb33d in main sysrepo/tests/test_modules.c:1669:12
    #9 0x7f3a9f4fc77f in __libc_start_main (/nix/store/9bh3986bpragfjmr32gay8p95k91q4gy-glibc-2.33-47/lib/libc.so.6+0x2777f)
    #10 0x420659 in _start /build/glibc-2.33/csu/../sysdeps/x86_64/start.S:120

SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/common.c:1655:78 in

Due to the way how UBSAN works, this was by default only printed to stderr. Unless one used something like UBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1, this was a silent failure.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2555,2021-08-31T17:16:10Z,2021-09-01T06:15:27Z,2021-09-01T06:15:44Z,MERGED,True,2,1,1,https://github.com/jktjkt,Fix undefined behavior,1,[],https://github.com/sysrepo/sysrepo/pull/2555,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/2555#issuecomment-909470659,"The test_modules was failing on UBSAN from clang 12 because the code tried to access something through a null pointer:
sysrepo/src/common.c:1655:78: runtime error: member access within null pointer of type 'struct lysp_revision'
    #0 0x7f3aa03ef3fd in sr_remove_module_file_r sysrepo/src/common.c:1655:115
    #1 0x7f3aa047887c in sr_lydmods_sched_finalize_module_remove sysrepo/src/lyd_mods.c:1546:25
    #2 0x7f3aa0469deb in sr_lydmods_sched_apply sysrepo/src/lyd_mods.c:2092:41
    #3 0x7f3aa0464900 in sr_lydmods_conn_ctx_update sysrepo/src/lyd_mods.c:2201:33
    #4 0x7f3aa03957c9 in sr_connect sysrepo/src/sysrepo.c:183:21
    #5 0x4fbc3f in setup_f sysrepo/tests/test_modules.c:46:9
    #6 0x7f3aa05c5412 in cmocka_run_one_test_or_fixture (/nix/store/cyxdjbcc9b0c9zm22l65raicv6xd62lb-cmocka-1.1.5/lib/libcmocka.so.0+0x6412)
    #7 0x7f3aa05c5f55 in _cmocka_run_group_tests (/nix/store/cyxdjbcc9b0c9zm22l65raicv6xd62lb-cmocka-1.1.5/lib/libcmocka.so.0+0x6f55)
    #8 0x4fb33d in main sysrepo/tests/test_modules.c:1669:12
    #9 0x7f3a9f4fc77f in __libc_start_main (/nix/store/9bh3986bpragfjmr32gay8p95k91q4gy-glibc-2.33-47/lib/libc.so.6+0x2777f)
    #10 0x420659 in _start /build/glibc-2.33/csu/../sysdeps/x86_64/start.S:120

SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/common.c:1655:78 in

Due to the way how UBSAN works, this was by default only printed to stderr. Unless one used something like UBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1, this was a silent failure.","I see that this failed the syntax linter test, but the test result doesn't help me figure out how I'm supposed to configure my editor -- and it appears to point to multiple locations which are not related to this patch. Can you please adapt this change so that it fits your preferences?
(We're using clang-format which can output a patch/diff which makes it easy to see what needs changes. It might not be applicable to your project, just sharing my experience.)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2555,2021-08-31T17:16:10Z,2021-09-01T06:15:27Z,2021-09-01T06:15:44Z,MERGED,True,2,1,1,https://github.com/jktjkt,Fix undefined behavior,1,[],https://github.com/sysrepo/sysrepo/pull/2555,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2555#issuecomment-909936388,"The test_modules was failing on UBSAN from clang 12 because the code tried to access something through a null pointer:
sysrepo/src/common.c:1655:78: runtime error: member access within null pointer of type 'struct lysp_revision'
    #0 0x7f3aa03ef3fd in sr_remove_module_file_r sysrepo/src/common.c:1655:115
    #1 0x7f3aa047887c in sr_lydmods_sched_finalize_module_remove sysrepo/src/lyd_mods.c:1546:25
    #2 0x7f3aa0469deb in sr_lydmods_sched_apply sysrepo/src/lyd_mods.c:2092:41
    #3 0x7f3aa0464900 in sr_lydmods_conn_ctx_update sysrepo/src/lyd_mods.c:2201:33
    #4 0x7f3aa03957c9 in sr_connect sysrepo/src/sysrepo.c:183:21
    #5 0x4fbc3f in setup_f sysrepo/tests/test_modules.c:46:9
    #6 0x7f3aa05c5412 in cmocka_run_one_test_or_fixture (/nix/store/cyxdjbcc9b0c9zm22l65raicv6xd62lb-cmocka-1.1.5/lib/libcmocka.so.0+0x6412)
    #7 0x7f3aa05c5f55 in _cmocka_run_group_tests (/nix/store/cyxdjbcc9b0c9zm22l65raicv6xd62lb-cmocka-1.1.5/lib/libcmocka.so.0+0x6f55)
    #8 0x4fb33d in main sysrepo/tests/test_modules.c:1669:12
    #9 0x7f3a9f4fc77f in __libc_start_main (/nix/store/9bh3986bpragfjmr32gay8p95k91q4gy-glibc-2.33-47/lib/libc.so.6+0x2777f)
    #10 0x420659 in _start /build/glibc-2.33/csu/../sysdeps/x86_64/start.S:120

SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /home/jkt/work/cesnet/gerrit/github/sysrepo/sysrepo/src/common.c:1655:78 in

Due to the way how UBSAN works, this was by default only printed to stderr. Unless one used something like UBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1, this was a silent failure.","Thanks, formatted and merged manually.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2556,2021-08-31T18:20:22Z,,2021-09-03T12:08:27Z,OPEN,False,11,0,1,https://github.com/jktjkt,CI: TSAN builds,1,[],https://github.com/sysrepo/sysrepo/pull/2556,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2556,"There was an ASAN+UBSAN build job, but it was running on an old clang, and UBSAN failures were being silently ignored. Make sure that we're on the latest & greatest so as not to hit too many compiler errors, and then enforce ASAN+UBSAN. We've been doing a similar thing for the libyang-v1+sysrepo internally, so let's make this available to the wider community. And while we're at that, enable TSAN as well now that the build is clean.
The last commit currently fails due to #2555. Once a fix for that UB is merged, this should start passing. All other commits pass (there should be a green tick by all of them, hopefully).","There was an ASAN+UBSAN build job, but it was running on an old clang, and UBSAN failures were being silently ignored. Make sure that we're on the latest & greatest so as not to hit too many compiler errors, and then enforce ASAN+UBSAN. We've been doing a similar thing for the libyang-v1+sysrepo internally, so let's make this available to the wider community. And while we're at that, enable TSAN as well now that the build is clean.
The last commit currently fails due to #2555. Once a fix for that UB is merged, this should start passing. All other commits pass (there should be a green tick by all of them, hopefully).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2556,2021-08-31T18:20:22Z,,2021-09-03T12:08:27Z,OPEN,False,11,0,1,https://github.com/jktjkt,CI: TSAN builds,1,[],https://github.com/sysrepo/sysrepo/pull/2556,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2556#issuecomment-909952040,"There was an ASAN+UBSAN build job, but it was running on an old clang, and UBSAN failures were being silently ignored. Make sure that we're on the latest & greatest so as not to hit too many compiler errors, and then enforce ASAN+UBSAN. We've been doing a similar thing for the libyang-v1+sysrepo internally, so let's make this available to the wider community. And while we're at that, enable TSAN as well now that the build is clean.
The last commit currently fails due to #2555. Once a fix for that UB is merged, this should start passing. All other commits pass (there should be a green tick by all of them, hopefully).","It seems you will have to merge current devel manually first for the ASAN and UBSAN test to pass. But the TSAN test failure will be more difficult to fix because from the code it seems WRITE (shm_sub.c:2041) and READ UPGR (shm_sub.c:2429) locks are being held, which are mutually exclusive but TSAN does not recognize that (which is not really surprising).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2556,2021-08-31T18:20:22Z,,2021-09-03T12:08:27Z,OPEN,False,11,0,1,https://github.com/jktjkt,CI: TSAN builds,1,[],https://github.com/sysrepo/sysrepo/pull/2556,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/2556#issuecomment-911718996,"There was an ASAN+UBSAN build job, but it was running on an old clang, and UBSAN failures were being silently ignored. Make sure that we're on the latest & greatest so as not to hit too many compiler errors, and then enforce ASAN+UBSAN. We've been doing a similar thing for the libyang-v1+sysrepo internally, so let's make this available to the wider community. And while we're at that, enable TSAN as well now that the build is clean.
The last commit currently fails due to #2555. Once a fix for that UB is merged, this should start passing. All other commits pass (there should be a green tick by all of them, hopefully).","This is interesting, I was not able to reproduce the TSAN failure. What puzzles me however is that the problem reported by TSAN in the GitHub CI says that the first writer does not hold any mutexes:
2021-09-01T06:19:57.3801038Z WARNING: ThreadSanitizer: data race (pid=5188)
2021-09-01T06:19:57.3801735Z   Write of size 4 at 0x7f3b5ec040b8 by main thread (mutexes: write M2103):
2021-09-01T06:19:57.3802827Z     #0 sr_shmsub_multi_notify_write_event /home/runner/work/sysrepo/sysrepo/src/shm_sub.c:543:29 (libsysrepo.so.6+0x87ab1)
2021-09-01T06:19:57.3803947Z     #1 sr_shmsub_notif_notify /home/runner/work/sysrepo/sysrepo/src/shm_sub.c:2052:21 (libsysrepo.so.6+0x8e122)
2021-09-01T06:19:57.3805154Z     #2 sr_event_notif_send_tree /home/runner/work/sysrepo/sysrepo/src/sysrepo.c:5075:20 (libsysrepo.so.6+0x21b75)
2021-09-01T06:19:57.3806266Z     #3 test_notif_instid1 /home/runner/work/sysrepo/sysrepo/tests/test_process.c:455:15 (test_process+0x4b9679)
2021-09-01T06:19:57.3807289Z     #4 run_tests /home/runner/work/sysrepo/sysrepo/tests/test_process.c:95:17 (test_process+0x4ba5b8)
2021-09-01T06:19:57.3808280Z     #5 main /home/runner/work/sysrepo/sysrepo/tests/test_process.c:631:5 (test_process+0x4b804f)
2021-09-01T06:19:57.3808828Z 
2021-09-01T06:19:57.3809306Z   Previous write of size 8 at 0x7f3b5ec040b8 by thread T4:
2021-09-01T06:19:57.3809930Z     #0 mmap <null> (test_process+0x456d51)
2021-09-01T06:19:57.3816840Z     #1 sr_shm_remap /home/runner/work/sysrepo/sysrepo/src/common.c:2636:17 (libsysrepo.so.6+0x3516b)
2021-09-01T06:19:57.3817989Z     #2 sr_shmsub_data_open_remap /home/runner/work/sysrepo/sysrepo/src/shm_sub.c:183:21 (libsysrepo.so.6+0x87898)
2021-09-01T06:19:57.3819313Z     #3 sr_shmsub_change_listen_process_module_events /home/runner/work/sysrepo/sysrepo/src/shm_sub.c:2445:21 (libsysrepo.so.6+0x8e65c)
2021-09-01T06:19:57.3820568Z     #4 sr_subscription_process_events /home/runner/work/sysrepo/sysrepo/src/sysrepo.c:3122:25 (libsysrepo.so.6+0x1693a)
2021-09-01T06:19:57.3821756Z     #5 sr_process_events /home/runner/work/sysrepo/sysrepo/src/sysrepo.c:3190:10 (libsysrepo.so.6+0x17018)
2021-09-01T06:19:57.3822988Z     #6 sr_shmsub_listen_thread /home/runner/work/sysrepo/sysrepo/src/shm_sub.c:3575:15 (libsysrepo.so.6+0x95a6f)
2021-09-01T06:19:57.3823569Z 
2021-09-01T06:19:57.3824559Z   Location is global '??' at 0x7f3b5ec04000 (_tests_sr_test_processsub_ops.notif+0x0000000000b8)
2021-09-01T06:19:57.3825244Z 
2021-09-01T06:19:57.3825654Z   Mutex M2103 (0x7f3b5ec04000) created at:
2021-09-01T06:19:57.3826316Z     #0 pthread_mutex_timedlock <null> (test_process+0x428909)
2021-09-01T06:19:57.3827195Z     #1 _sr_rwlock /home/runner/work/sysrepo/sysrepo/src/common.c:3586:15 (libsysrepo.so.6+0x38061)
2021-09-01T06:19:57.3828222Z     #2 sr_rwlock /home/runner/work/sysrepo/sysrepo/src/common.c:3693:12 (libsysrepo.so.6+0x24fd0)
2021-09-01T06:19:57.3829302Z     #3 sr_shmsub_notify_new_wrlock /home/runner/work/sysrepo/sysrepo/src/shm_sub.c:244:21 (libsysrepo.so.6+0x87378)
2021-09-01T06:19:57.3830399Z     #4 sr_shmsub_notif_notify /home/runner/work/sysrepo/sysrepo/src/shm_sub.c:2041:21 (libsysrepo.so.6+0x8dfb5)
2021-09-01T06:19:57.3831622Z     #5 sr_event_notif_send_tree /home/runner/work/sysrepo/sysrepo/src/sysrepo.c:5075:20 (libsysrepo.so.6+0x21b75)
2021-09-01T06:19:57.3832687Z     #6 test_notif_instid1 /home/runner/work/sysrepo/sysrepo/tests/test_process.c:455:15 (test_process+0x4b9679)
2021-09-01T06:19:57.3833698Z     #7 run_tests /home/runner/work/sysrepo/sysrepo/tests/test_process.c:95:17 (test_process+0x4ba5b8)
2021-09-01T06:19:57.3834802Z     #8 main /home/runner/work/sysrepo/sysrepo/tests/test_process.c:631:5 (test_process+0x4b804f)
2021-09-01T06:19:57.3835336Z 
2021-09-01T06:19:57.3835792Z   Thread T4 (tid=5238, running) created by main thread at:
2021-09-01T06:19:57.3836435Z     #0 pthread_create <null> (test_process+0x426cbb)
2021-09-01T06:19:57.3837270Z     #1 sr_subscr_new /home/runner/work/sysrepo/sysrepo/src/sysrepo.c:3693:15 (libsysrepo.so.6+0x19d55)
2021-09-01T06:19:57.3838455Z     #2 sr_module_change_subscribe /home/runner/work/sysrepo/sysrepo/src/sysrepo.c:3783:25 (libsysrepo.so.6+0x18819)
2021-09-01T06:19:57.3839624Z     #3 test_notif_instid1 /home/runner/work/sysrepo/sysrepo/tests/test_process.c:438:11 (test_process+0x4b9481)
2021-09-01T06:19:57.3840779Z     #4 run_tests /home/runner/work/sysrepo/sysrepo/tests/test_process.c:95:17 (test_process+0x4ba5b8)
2021-09-01T06:19:57.3841765Z     #5 main /home/runner/work/sysrepo/sysrepo/tests/test_process.c:631:5 (test_process+0x4b804f)
2021-09-01T06:19:57.3842313Z 
2021-09-01T06:19:57.3843176Z SUMMARY: ThreadSanitizer: data race /home/runner/work/sysrepo/sysrepo/src/shm_sub.c:543:29 in sr_shmsub_multi_notify_write_event

...and indeed, SR_LOCK_READ_UPGR unlocks the mutex. How come that it's OK to unlock sr_rwlock_t.mutex just after having upgraded a read lock to a write one? Do you have some documentation which explains how sysrepo internal locking works so that I can reason about that?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2556,2021-08-31T18:20:22Z,,2021-09-03T12:08:27Z,OPEN,False,11,0,1,https://github.com/jktjkt,CI: TSAN builds,1,[],https://github.com/sysrepo/sysrepo/pull/2556,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2556#issuecomment-911731253,"There was an ASAN+UBSAN build job, but it was running on an old clang, and UBSAN failures were being silently ignored. Make sure that we're on the latest & greatest so as not to hit too many compiler errors, and then enforce ASAN+UBSAN. We've been doing a similar thing for the libyang-v1+sysrepo internally, so let's make this available to the wider community. And while we're at that, enable TSAN as well now that the build is clean.
The last commit currently fails due to #2555. Once a fix for that UB is merged, this should start passing. All other commits pass (there should be a green tick by all of them, hopefully).","We have no documentation to explain the locks, you will just have to ask me. But I am not sure what exactly you are referring to. The thread that is holding the SR_LOCK_READ_UPGR lock has no mutexes reported because this kind of lock only stores its CID in the lock upgr and readers. SR_LOCK_WRITE cannot be acquired when there are readers, that is how the lock works but I do not think it is possible for TSAN to figure this out. That may also be an argument against having TSAN test in the CI.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2556,2021-08-31T18:20:22Z,,2021-09-03T12:08:27Z,OPEN,False,11,0,1,https://github.com/jktjkt,CI: TSAN builds,1,[],https://github.com/sysrepo/sysrepo/pull/2556,https://github.com/jktjkt,5,https://github.com/sysrepo/sysrepo/pull/2556#issuecomment-912440751,"There was an ASAN+UBSAN build job, but it was running on an old clang, and UBSAN failures were being silently ignored. Make sure that we're on the latest & greatest so as not to hit too many compiler errors, and then enforce ASAN+UBSAN. We've been doing a similar thing for the libyang-v1+sysrepo internally, so let's make this available to the wider community. And while we're at that, enable TSAN as well now that the build is clean.
The last commit currently fails due to #2555. Once a fix for that UB is merged, this should start passing. All other commits pass (there should be a green tick by all of them, hopefully).","It looks that all locking goes through _sr_rwlock() or sr_rwunlock(), and that sr_rwlock_reader_add and sr_rwlock_reader_del are never called directly. Right? Then whenever the readers list is accessed, the r_mutex is acquired, but that never happens without holding the mutex as well. What's the point of r_mutex, then, since everything is already synchronized via the mutex?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2556,2021-08-31T18:20:22Z,,2021-09-03T12:08:27Z,OPEN,False,11,0,1,https://github.com/jktjkt,CI: TSAN builds,1,[],https://github.com/sysrepo/sysrepo/pull/2556,https://github.com/jktjkt,6,https://github.com/sysrepo/sysrepo/pull/2556#issuecomment-912462968,"There was an ASAN+UBSAN build job, but it was running on an old clang, and UBSAN failures were being silently ignored. Make sure that we're on the latest & greatest so as not to hit too many compiler errors, and then enforce ASAN+UBSAN. We've been doing a similar thing for the libyang-v1+sysrepo internally, so let's make this available to the wider community. And while we're at that, enable TSAN as well now that the build is clean.
The last commit currently fails due to #2555. Once a fix for that UB is merged, this should start passing. All other commits pass (there should be a green tick by all of them, hopefully).","That may also be an argument against having TSAN test in the CI.

Well, it is important for us, downstream consumers of sysrepo, to make sure that there are no false positives in the code so that we can run TSAN on our code which happens to use sysrepo. Also, TSAN has helped uncover a number of real-world issues already (especially in the past versions of sysrepo). That's why I think aiming for TSAN in the CI makes sense.
Hand-rolled locking algorithms unfortunately require extra effort to be correctly recognized by TSAN; that's done via the happens before/happens after annotations. I think it is worth the effort to add these to sysrepo, but frankly I don't see an easy way here :( -- maybe somehow teaching TSAN about the custom locking without the ""happens before""? Unfortunately I also do not seem to be able to reproduce the original alleged race locally, which makes it rather hard to fix.
I see you cannot ""just"" use pthread_rwlock_t because they do not offer the robust version because that hasn't been standardized yet, and that's why you have to implement that with a CV and a mutex.
Anyway, so that we can move forward -- I'll respin this patch series into an ASAN+UBSAN-only version, and leave the TSAN bits here so that we can solve them later on.",True,{'THUMBS_UP': ['https://github.com/andrei-pavel']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2556,2021-08-31T18:20:22Z,,2021-09-03T12:08:27Z,OPEN,False,11,0,1,https://github.com/jktjkt,CI: TSAN builds,1,[],https://github.com/sysrepo/sysrepo/pull/2556,https://github.com/michalvasko,7,https://github.com/sysrepo/sysrepo/pull/2556#issuecomment-912485274,"There was an ASAN+UBSAN build job, but it was running on an old clang, and UBSAN failures were being silently ignored. Make sure that we're on the latest & greatest so as not to hit too many compiler errors, and then enforce ASAN+UBSAN. We've been doing a similar thing for the libyang-v1+sysrepo internally, so let's make this available to the wider community. And while we're at that, enable TSAN as well now that the build is clean.
The last commit currently fails due to #2555. Once a fix for that UB is merged, this should start passing. All other commits pass (there should be a green tick by all of them, hopefully).","It looks that all locking goes through _sr_rwlock() or sr_rwunlock(), and that sr_rwlock_reader_add and sr_rwlock_reader_del are never called directly. Right? Then whenever the readers list is accessed, the r_mutex is acquired, but that never happens without holding the mutex as well. What's the point of r_mutex, then, since everything is already synchronized via the mutex?

Took me a while but I found out their purpose, they are used when collecting the state of locks. Locking the main mutex for this purpose seems excessive but when no mutex is used TSAN and helgrind would report data races even though they would perhaps be acceptable here.

Anyway, so that we can move forward -- I'll respin this patch series into an ASAN+UBSAN-only version, and leave the TSAN bits here so that we can solve them later on.

Agreed.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2558,2021-09-01T07:37:24Z,2021-09-01T12:25:25Z,2021-09-01T13:01:11Z,MERGED,True,1,1,2,https://github.com/nickbroon,Install a sysctl.d file that is more like to apply last,1,[],https://github.com/sysrepo/sysrepo/pull/2558,https://github.com/nickbroon,1,https://github.com/sysrepo/sysrepo/pull/2558,"systctl.d files are applied in lexicographical order.
Some distributions, like debian/ubuntu, don't follow convention and
prefix files with digits to give easy to understand order.
So use, zz, which is much more likely to be last, and thus override
distribution shipped files.","systctl.d files are applied in lexicographical order.
Some distributions, like debian/ubuntu, don't follow convention and
prefix files with digits to give easy to understand order.
So use, zz, which is much more likely to be last, and thus override
distribution shipped files.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2558,2021-09-01T07:37:24Z,2021-09-01T12:25:25Z,2021-09-01T13:01:11Z,MERGED,True,1,1,2,https://github.com/nickbroon,Install a sysctl.d file that is more like to apply last,1,[],https://github.com/sysrepo/sysrepo/pull/2558,https://github.com/apps/codecov,2,https://github.com/sysrepo/sysrepo/pull/2558#issuecomment-910145802,"systctl.d files are applied in lexicographical order.
Some distributions, like debian/ubuntu, don't follow convention and
prefix files with digits to give easy to understand order.
So use, zz, which is much more likely to be last, and thus override
distribution shipped files.","Codecov Report

Merging #2558 (49e0275) into devel (a6d4703) will increase coverage by 0.01%.
The diff coverage is n/a.


❗ Current head 49e0275 differs from pull request most recent head 079af8a. Consider uploading reports for the commit 079af8a to get more accurate results

@@            Coverage Diff             @@
##            devel    #2558      +/-   ##
==========================================
+ Coverage   61.41%   61.42%   +0.01%     
==========================================
  Files          17       17              
  Lines       13885    13885              
==========================================
+ Hits         8527     8528       +1     
+ Misses       5358     5357       -1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2558,2021-09-01T07:37:24Z,2021-09-01T12:25:25Z,2021-09-01T13:01:11Z,MERGED,True,1,1,2,https://github.com/nickbroon,Install a sysctl.d file that is more like to apply last,1,[],https://github.com/sysrepo/sysrepo/pull/2558,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2558#issuecomment-910233883,"systctl.d files are applied in lexicographical order.
Some distributions, like debian/ubuntu, don't follow convention and
prefix files with digits to give easy to understand order.
So use, zz, which is much more likely to be last, and thus override
distribution shipped files.","Fine, even though it is not that nice for distributions with numbered conf files.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2558,2021-09-01T07:37:24Z,2021-09-01T12:25:25Z,2021-09-01T13:01:11Z,MERGED,True,1,1,2,https://github.com/nickbroon,Install a sysctl.d file that is more like to apply last,1,[],https://github.com/sysrepo/sysrepo/pull/2558,https://github.com/nickbroon,4,https://github.com/sysrepo/sysrepo/pull/2558#issuecomment-910254907,"systctl.d files are applied in lexicographical order.
Some distributions, like debian/ubuntu, don't follow convention and
prefix files with digits to give easy to understand order.
So use, zz, which is much more likely to be last, and thus override
distribution shipped files.","Fab, thanks.
For what it's worth I've opened this with Debian: https://salsa.debian.org/debian/procps/-/merge_requests/3
Though even if that's merged, it will only go into Debian Bookworm, which is unlikely to release for a couple of years.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2558,2021-09-01T07:37:24Z,2021-09-01T12:25:25Z,2021-09-01T13:01:11Z,MERGED,True,1,1,2,https://github.com/nickbroon,Install a sysctl.d file that is more like to apply last,1,[],https://github.com/sysrepo/sysrepo/pull/2558,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/2558#issuecomment-910260888,"systctl.d files are applied in lexicographical order.
Some distributions, like debian/ubuntu, don't follow convention and
prefix files with digits to give easy to understand order.
So use, zz, which is much more likely to be last, and thus override
distribution shipped files.","Well, that is a minor issue, really. The main problem is the default parameter value it is changing, which should be 0.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2562,2021-09-03T11:20:35Z,2021-09-03T12:05:00Z,2021-09-03T12:08:35Z,MERGED,True,9,11,2,https://github.com/jktjkt,CI: ASAN+UBSAN,5,[],https://github.com/sysrepo/sysrepo/pull/2562,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2562,"A version of #2556 which only implements ASAN+UBSAN, see the other PR for context. TSAN is left due to a possible false positive related to sysrepo's hand-rolled locking.","A version of #2556 which only implements ASAN+UBSAN, see the other PR for context. TSAN is left due to a possible false positive related to sysrepo's hand-rolled locking.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2562,2021-09-03T11:20:35Z,2021-09-03T12:05:00Z,2021-09-03T12:08:35Z,MERGED,True,9,11,2,https://github.com/jktjkt,CI: ASAN+UBSAN,5,[],https://github.com/sysrepo/sysrepo/pull/2562,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2562#issuecomment-912486208,"A version of #2556 which only implements ASAN+UBSAN, see the other PR for context. TSAN is left due to a possible false positive related to sysrepo's hand-rolled locking.","Fine, no problem.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2566,2021-09-06T21:30:59Z,2021-09-07T09:31:21Z,2021-09-07T09:31:21Z,MERGED,True,15,8,1,https://github.com/syyyr,Change some typedef structs into normal structs,1,[],https://github.com/sysrepo/sysrepo/pull/2566,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2566,"Hi, while working on my C++ wrapper for sysrepo, I found out that some of the structs are defined as typedefs. This means that you can't forward declare them. I think this change should not have an effect on existing code, but I'm not sure. What do you think?
I'm creating this as a draft, because I'm not sure what structs I'll have to change.","Hi, while working on my C++ wrapper for sysrepo, I found out that some of the structs are defined as typedefs. This means that you can't forward declare them. I think this change should not have an effect on existing code, but I'm not sure. What do you think?
I'm creating this as a draft, because I'm not sure what structs I'll have to change.",True,{'THUMBS_UP': ['https://github.com/andrei-pavel']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2566,2021-09-06T21:30:59Z,2021-09-07T09:31:21Z,2021-09-07T09:31:21Z,MERGED,True,15,8,1,https://github.com/syyyr,Change some typedef structs into normal structs,1,[],https://github.com/sysrepo/sysrepo/pull/2566,https://github.com/syyyr,2,https://github.com/sysrepo/sysrepo/pull/2566#issuecomment-913895172,"Hi, while working on my C++ wrapper for sysrepo, I found out that some of the structs are defined as typedefs. This means that you can't forward declare them. I think this change should not have an effect on existing code, but I'm not sure. What do you think?
I'm creating this as a draft, because I'm not sure what structs I'll have to change.","Ideally, I would like all structs to be in the C ""struct namespace"" and then possibly in the global ""typedef"" namespace.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2566,2021-09-06T21:30:59Z,2021-09-07T09:31:21Z,2021-09-07T09:31:21Z,MERGED,True,15,8,1,https://github.com/syyyr,Change some typedef structs into normal structs,1,[],https://github.com/sysrepo/sysrepo/pull/2566,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2566#issuecomment-914028712,"Hi, while working on my C++ wrapper for sysrepo, I found out that some of the structs are defined as typedefs. This means that you can't forward declare them. I think this change should not have an effect on existing code, but I'm not sure. What do you think?
I'm creating this as a draft, because I'm not sure what structs I'll have to change.","I have no problem with the change and any like this. However, please rebase your branch to the current devel, you seem to have quite an old revision.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2566,2021-09-06T21:30:59Z,2021-09-07T09:31:21Z,2021-09-07T09:31:21Z,MERGED,True,15,8,1,https://github.com/syyyr,Change some typedef structs into normal structs,1,[],https://github.com/sysrepo/sysrepo/pull/2566,https://github.com/syyyr,4,https://github.com/sysrepo/sysrepo/pull/2566#issuecomment-914132510,"Hi, while working on my C++ wrapper for sysrepo, I found out that some of the structs are defined as typedefs. This means that you can't forward declare them. I think this change should not have an effect on existing code, but I'm not sure. What do you think?
I'm creating this as a draft, because I'm not sure what structs I'll have to change.","I have no problem with the change and any like this.

Great! I changed all (or most) of them.

However, please rebase your branch to the current devel, you seem to have quite an old revision.

The patch is now rebased to devel.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2593,2021-10-01T07:51:32Z,2021-10-01T08:20:26Z,2021-10-01T08:20:28Z,MERGED,True,6488,3654,43,https://github.com/michalvasko,Custom datastore,9,[],https://github.com/sysrepo/sysrepo/pull/2593,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/2593,Support for custom datastore in the form of datastore and notification plugins.,Support for custom datastore in the form of datastore and notification plugins.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2593,2021-10-01T07:51:32Z,2021-10-01T08:20:26Z,2021-10-01T08:20:28Z,MERGED,True,6488,3654,43,https://github.com/michalvasko,Custom datastore,9,[],https://github.com/sysrepo/sysrepo/pull/2593,https://github.com/apps/lgtm-com,2,https://github.com/sysrepo/sysrepo/pull/2593#issuecomment-932004939,Support for custom datastore in the form of datastore and notification plugins.,"This pull request introduces 2 alerts and fixes 2 when merging c22fa84 into 807c9b0 - view on LGTM.com
new alerts:

1 for Comparison result is always the same
1 for Time-of-check time-of-use filesystem race condition

fixed alerts:

2 for Time-of-check time-of-use filesystem race condition",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2593,2021-10-01T07:51:32Z,2021-10-01T08:20:26Z,2021-10-01T08:20:28Z,MERGED,True,6488,3654,43,https://github.com/michalvasko,Custom datastore,9,[],https://github.com/sysrepo/sysrepo/pull/2593,https://github.com/apps/lgtm-com,3,https://github.com/sysrepo/sysrepo/pull/2593#issuecomment-932017257,Support for custom datastore in the form of datastore and notification plugins.,"This pull request introduces 1 alert and fixes 2 when merging a854244 into 807c9b0 - view on LGTM.com
new alerts:

1 for Time-of-check time-of-use filesystem race condition

fixed alerts:

2 for Time-of-check time-of-use filesystem race condition",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2593,2021-10-01T07:51:32Z,2021-10-01T08:20:26Z,2021-10-01T08:20:28Z,MERGED,True,6488,3654,43,https://github.com/michalvasko,Custom datastore,9,[],https://github.com/sysrepo/sysrepo/pull/2593,https://github.com/apps/lgtm-com,4,https://github.com/sysrepo/sysrepo/pull/2593#issuecomment-932023722,Support for custom datastore in the form of datastore and notification plugins.,"This pull request introduces 1 alert and fixes 2 when merging 94d816d into 807c9b0 - view on LGTM.com
new alerts:

1 for Time-of-check time-of-use filesystem race condition

fixed alerts:

2 for Time-of-check time-of-use filesystem race condition",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2605,2021-10-08T11:40:19Z,2021-10-08T12:31:29Z,2021-10-08T17:45:53Z,MERGED,True,20,21,6,https://github.com/jktjkt,Build fixes,3,[],https://github.com/sysrepo/sysrepo/pull/2605,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2605,"allow overriding $CFLAGS
fix signed vs. unsinged comparison
fixes for the test suite's -Wunused-results

After this, I'm still getting three warnings. One is about a test that's been commented out since ba52614. The test does not pass if I simply re-enable it.
tests/test_apply_changes.c:5848:1: warning: unused function 'test_change_order' [-Wunused-function]

Then there's this warning about the use of atomics. The atomic_compare_exchange_strong_explicit is defined to work with non-atomic variable for the expected parameter, while sysrepo passes an atomic. I don't know what the intention is here. If there's no need to load-and-use the expected variable atomically, then one could just explicitly load it into a temporary. If, on the other hand, the code requires atomic comparison and action, then this function doesn't implement that:
src/sysrepo.c:3499:5: warning: incompatible pointer types passing 'atomic_uint_fast32_t *' (aka '_Atomic(uint_fast32_t) *') to parameter of type 'uint_fast32_t *' (aka 'unsigned long *') [-Wincompatible-pointer-types]
    ATOMIC_COMPARE_EXCHANGE_RELAXED(subscription->thread_running, exp, 2, result);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat/compat.h:98:66: note: expanded from macro 'ATOMIC_COMPARE_EXCHANGE_RELAXED'
        result = atomic_compare_exchange_strong_explicit(&(var), &(exp), des, memory_order_relaxed, memory_order_relaxed)
                                                                 ^~~~~~
src/sysrepo.c:3545:5: warning: incompatible pointer types passing 'atomic_uint_fast32_t *' (aka '_Atomic(uint_fast32_t) *') to parameter of type 'uint_fast32_t *' (aka 'unsigned long *') [-Wincompatible-pointer-types]
    ATOMIC_COMPARE_EXCHANGE_RELAXED(subscription->thread_running, exp, 1, result);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat/compat.h:98:66: note: expanded from macro 'ATOMIC_COMPARE_EXCHANGE_RELAXED'
        result = atomic_compare_exchange_strong_explicit(&(var), &(exp), des, memory_order_relaxed, memory_order_relaxed)
                                                                 ^~~~~~","allow overriding $CFLAGS
fix signed vs. unsinged comparison
fixes for the test suite's -Wunused-results

After this, I'm still getting three warnings. One is about a test that's been commented out since ba52614. The test does not pass if I simply re-enable it.
tests/test_apply_changes.c:5848:1: warning: unused function 'test_change_order' [-Wunused-function]

Then there's this warning about the use of atomics. The atomic_compare_exchange_strong_explicit is defined to work with non-atomic variable for the expected parameter, while sysrepo passes an atomic. I don't know what the intention is here. If there's no need to load-and-use the expected variable atomically, then one could just explicitly load it into a temporary. If, on the other hand, the code requires atomic comparison and action, then this function doesn't implement that:
src/sysrepo.c:3499:5: warning: incompatible pointer types passing 'atomic_uint_fast32_t *' (aka '_Atomic(uint_fast32_t) *') to parameter of type 'uint_fast32_t *' (aka 'unsigned long *') [-Wincompatible-pointer-types]
    ATOMIC_COMPARE_EXCHANGE_RELAXED(subscription->thread_running, exp, 2, result);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat/compat.h:98:66: note: expanded from macro 'ATOMIC_COMPARE_EXCHANGE_RELAXED'
        result = atomic_compare_exchange_strong_explicit(&(var), &(exp), des, memory_order_relaxed, memory_order_relaxed)
                                                                 ^~~~~~
src/sysrepo.c:3545:5: warning: incompatible pointer types passing 'atomic_uint_fast32_t *' (aka '_Atomic(uint_fast32_t) *') to parameter of type 'uint_fast32_t *' (aka 'unsigned long *') [-Wincompatible-pointer-types]
    ATOMIC_COMPARE_EXCHANGE_RELAXED(subscription->thread_running, exp, 1, result);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat/compat.h:98:66: note: expanded from macro 'ATOMIC_COMPARE_EXCHANGE_RELAXED'
        result = atomic_compare_exchange_strong_explicit(&(var), &(exp), des, memory_order_relaxed, memory_order_relaxed)
                                                                 ^~~~~~",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2605,2021-10-08T11:40:19Z,2021-10-08T12:31:29Z,2021-10-08T17:45:53Z,MERGED,True,20,21,6,https://github.com/jktjkt,Build fixes,3,[],https://github.com/sysrepo/sysrepo/pull/2605,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2605#issuecomment-938587185,"allow overriding $CFLAGS
fix signed vs. unsinged comparison
fixes for the test suite's -Wunused-results

After this, I'm still getting three warnings. One is about a test that's been commented out since ba52614. The test does not pass if I simply re-enable it.
tests/test_apply_changes.c:5848:1: warning: unused function 'test_change_order' [-Wunused-function]

Then there's this warning about the use of atomics. The atomic_compare_exchange_strong_explicit is defined to work with non-atomic variable for the expected parameter, while sysrepo passes an atomic. I don't know what the intention is here. If there's no need to load-and-use the expected variable atomically, then one could just explicitly load it into a temporary. If, on the other hand, the code requires atomic comparison and action, then this function doesn't implement that:
src/sysrepo.c:3499:5: warning: incompatible pointer types passing 'atomic_uint_fast32_t *' (aka '_Atomic(uint_fast32_t) *') to parameter of type 'uint_fast32_t *' (aka 'unsigned long *') [-Wincompatible-pointer-types]
    ATOMIC_COMPARE_EXCHANGE_RELAXED(subscription->thread_running, exp, 2, result);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat/compat.h:98:66: note: expanded from macro 'ATOMIC_COMPARE_EXCHANGE_RELAXED'
        result = atomic_compare_exchange_strong_explicit(&(var), &(exp), des, memory_order_relaxed, memory_order_relaxed)
                                                                 ^~~~~~
src/sysrepo.c:3545:5: warning: incompatible pointer types passing 'atomic_uint_fast32_t *' (aka '_Atomic(uint_fast32_t) *') to parameter of type 'uint_fast32_t *' (aka 'unsigned long *') [-Wincompatible-pointer-types]
    ATOMIC_COMPARE_EXCHANGE_RELAXED(subscription->thread_running, exp, 1, result);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat/compat.h:98:66: note: expanded from macro 'ATOMIC_COMPARE_EXCHANGE_RELAXED'
        result = atomic_compare_exchange_strong_explicit(&(var), &(exp), des, memory_order_relaxed, memory_order_relaxed)
                                                                 ^~~~~~","Fine, I have disabled the test as it is currently not supported and will not be in near future.
As for the type warning, it was not clear from the documentation what is expected there and GCC does not produce any warnings for some reason. Should be fixed now.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2605,2021-10-08T11:40:19Z,2021-10-08T12:31:29Z,2021-10-08T17:45:53Z,MERGED,True,20,21,6,https://github.com/jktjkt,Build fixes,3,[],https://github.com/sysrepo/sysrepo/pull/2605,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/2605#issuecomment-938595963,"allow overriding $CFLAGS
fix signed vs. unsinged comparison
fixes for the test suite's -Wunused-results

After this, I'm still getting three warnings. One is about a test that's been commented out since ba52614. The test does not pass if I simply re-enable it.
tests/test_apply_changes.c:5848:1: warning: unused function 'test_change_order' [-Wunused-function]

Then there's this warning about the use of atomics. The atomic_compare_exchange_strong_explicit is defined to work with non-atomic variable for the expected parameter, while sysrepo passes an atomic. I don't know what the intention is here. If there's no need to load-and-use the expected variable atomically, then one could just explicitly load it into a temporary. If, on the other hand, the code requires atomic comparison and action, then this function doesn't implement that:
src/sysrepo.c:3499:5: warning: incompatible pointer types passing 'atomic_uint_fast32_t *' (aka '_Atomic(uint_fast32_t) *') to parameter of type 'uint_fast32_t *' (aka 'unsigned long *') [-Wincompatible-pointer-types]
    ATOMIC_COMPARE_EXCHANGE_RELAXED(subscription->thread_running, exp, 2, result);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat/compat.h:98:66: note: expanded from macro 'ATOMIC_COMPARE_EXCHANGE_RELAXED'
        result = atomic_compare_exchange_strong_explicit(&(var), &(exp), des, memory_order_relaxed, memory_order_relaxed)
                                                                 ^~~~~~
src/sysrepo.c:3545:5: warning: incompatible pointer types passing 'atomic_uint_fast32_t *' (aka '_Atomic(uint_fast32_t) *') to parameter of type 'uint_fast32_t *' (aka 'unsigned long *') [-Wincompatible-pointer-types]
    ATOMIC_COMPARE_EXCHANGE_RELAXED(subscription->thread_running, exp, 1, result);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat/compat.h:98:66: note: expanded from macro 'ATOMIC_COMPARE_EXCHANGE_RELAXED'
        result = atomic_compare_exchange_strong_explicit(&(var), &(exp), des, memory_order_relaxed, memory_order_relaxed)
                                                                 ^~~~~~","As for the type warning, it was not clear from the documentation what is expected there and GCC does not produce any warnings for some reason. Should be fixed now.

Nice fix, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2606,2021-10-11T15:26:42Z,2021-10-12T06:43:34Z,2021-10-12T06:43:34Z,MERGED,True,89,2,2,https://github.com/jruzicka-nic,rpm FEATURE initial upstream RPM packaging,1,[],https://github.com/sysrepo/sysrepo/pull/2606,https://github.com/jruzicka-nic,1,https://github.com/sysrepo/sysrepo/pull/2606,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2606,2021-10-11T15:26:42Z,2021-10-12T06:43:34Z,2021-10-12T06:43:34Z,MERGED,True,89,2,2,https://github.com/jruzicka-nic,rpm FEATURE initial upstream RPM packaging,1,[],https://github.com/sysrepo/sysrepo/pull/2606,https://github.com/jruzicka-nic,2,https://github.com/sysrepo/sysrepo/pull/2606#issuecomment-940137033,,So far I've tested this on Fedora 34 and CentOS 7 VMs.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2606,2021-10-11T15:26:42Z,2021-10-12T06:43:34Z,2021-10-12T06:43:34Z,MERGED,True,89,2,2,https://github.com/jruzicka-nic,rpm FEATURE initial upstream RPM packaging,1,[],https://github.com/sysrepo/sysrepo/pull/2606,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2606#issuecomment-940712374,,"Seems fine, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2630,2021-11-11T15:04:01Z,2021-11-27T23:57:40Z,2021-11-27T23:58:53Z,CLOSED,False,90,0,3,https://github.com/jktjkt,Add a helper for NETCONF- and RESTCONF-compliant errors,1,[],https://github.com/sysrepo/sysrepo/pull/2630,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2630,"Sysrepo uses a flexible internal mechanism which client applications can use for storing arbitrary error information. So far, however, the only conventions for how these error messages are supposed to be created were defined in Netopeer2's README file. This patch builds on top of that format.
I changed serialization of the error-data construct. Previously, it would be a sequence of pairs of strings which was used for building anyxml elements and their string values, respectively. The proposed format accepts a libyang data tree and uses the LYB formatting for passing that around.
Cc: @syyyr","Sysrepo uses a flexible internal mechanism which client applications can use for storing arbitrary error information. So far, however, the only conventions for how these error messages are supposed to be created were defined in Netopeer2's README file. This patch builds on top of that format.
I changed serialization of the error-data construct. Previously, it would be a sequence of pairs of strings which was used for building anyxml elements and their string values, respectively. The proposed format accepts a libyang data tree and uses the LYB formatting for passing that around.
Cc: @syyyr",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2630,2021-11-11T15:04:01Z,2021-11-27T23:57:40Z,2021-11-27T23:58:53Z,CLOSED,False,90,0,3,https://github.com/jktjkt,Add a helper for NETCONF- and RESTCONF-compliant errors,1,[],https://github.com/sysrepo/sysrepo/pull/2630,https://github.com/apps/lgtm-com,2,https://github.com/sysrepo/sysrepo/pull/2630#issuecomment-966382398,"Sysrepo uses a flexible internal mechanism which client applications can use for storing arbitrary error information. So far, however, the only conventions for how these error messages are supposed to be created were defined in Netopeer2's README file. This patch builds on top of that format.
I changed serialization of the error-data construct. Previously, it would be a sequence of pairs of strings which was used for building anyxml elements and their string values, respectively. The proposed format accepts a libyang data tree and uses the LYB formatting for passing that around.
Cc: @syyyr","This pull request introduces 2 alerts when merging bb61d7f into 39bc5ad - view on LGTM.com
new alerts:

2 for FIXME comment",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2630,2021-11-11T15:04:01Z,2021-11-27T23:57:40Z,2021-11-27T23:58:53Z,CLOSED,False,90,0,3,https://github.com/jktjkt,Add a helper for NETCONF- and RESTCONF-compliant errors,1,[],https://github.com/sysrepo/sysrepo/pull/2630,https://github.com/jktjkt,3,https://github.com/sysrepo/sysrepo/pull/2630#issuecomment-966979883,"Sysrepo uses a flexible internal mechanism which client applications can use for storing arbitrary error information. So far, however, the only conventions for how these error messages are supposed to be created were defined in Netopeer2's README file. This patch builds on top of that format.
I changed serialization of the error-data construct. Previously, it would be a sequence of pairs of strings which was used for building anyxml elements and their string values, respectively. The proposed format accepts a libyang data tree and uses the LYB formatting for passing that around.
Cc: @syyyr","I think I would prefer to take this further. If the errors are to be defined in sysrepo, which I have agreed to, I guess, then it should be complete. That means moving the exact error description from netopeer2 README to sysrepo, somewhere. The idea would probably be to write a brief doc section on these errors and define a list of well-know error formats, which will include helper functions by sysrepo. And that is where the NETCONF error format would be specified. I am fine with writing this myself, up to you.

Please go for it :). As long as there's ""something"" with an API that's similar to the function I proposed (and no matter if there are enums or magic strings), I'm OK with whatever shape it takes.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2630,2021-11-11T15:04:01Z,2021-11-27T23:57:40Z,2021-11-27T23:58:53Z,CLOSED,False,90,0,3,https://github.com/jktjkt,Add a helper for NETCONF- and RESTCONF-compliant errors,1,[],https://github.com/sysrepo/sysrepo/pull/2630,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/2630#issuecomment-980808742,"Sysrepo uses a flexible internal mechanism which client applications can use for storing arbitrary error information. So far, however, the only conventions for how these error messages are supposed to be created were defined in Netopeer2's README file. This patch builds on top of that format.
I changed serialization of the error-data construct. Previously, it would be a sequence of pairs of strings which was used for building anyxml elements and their string values, respectively. The proposed format accepts a libyang data tree and uses the LYB formatting for passing that around.
Cc: @syyyr","Another version of this has been merged (thanks), closing this one.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2631,2021-11-11T15:28:17Z,2021-11-12T09:23:54Z,2021-11-27T23:58:53Z,MERGED,True,1,1,1,https://github.com/jktjkt,Fix -Wunused-result,1,[],https://github.com/sysrepo/sysrepo/pull/2631,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2631,"My compiler warns about not checking the fgets()'s result. Since this is really an opportunistic check, nothing else, and since this thing can fail on some system configurations, simply silence that warning. The worst thing which can happen is a less useful warning.
Also, don't repeat a magic number (buffer size), use a sizeof for this.
Fixes: 39bc5ad (plugins FEATURE error message warning kernel param value)","My compiler warns about not checking the fgets()'s result. Since this is really an opportunistic check, nothing else, and since this thing can fail on some system configurations, simply silence that warning. The worst thing which can happen is a less useful warning.
Also, don't repeat a magic number (buffer size), use a sizeof for this.
Fixes: 39bc5ad (plugins FEATURE error message warning kernel param value)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2643,2021-11-25T03:41:08Z,2021-11-25T07:43:08Z,2021-11-25T07:43:08Z,MERGED,True,3,1,1,https://github.com/syyyr,Fix UB in srpntf_find_file,1,[],https://github.com/sysrepo/sysrepo/pull/2643,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2643,"ASAN complains that the argument to closedir must non-null. Fixes this kind of error:
2021-11-25 03:10:27.636917 | w | /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:315:14: runtime error: null pointer passed as argument 1, which is declared to never be null
2021-11-25 03:10:27.636989 | w | /usr/include/dirent.h:149:35: note: nonnull attribute specified here
2021-11-25 03:10:27.713450 | w |     #0 0x7f18b4061682 in srpntf_find_file /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:315:5
2021-11-25 03:10:27.713631 | w |     #1 0x7f18b405f6b5 in srpntf_lyb_access_set /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:644:15
2021-11-25 03:10:27.719498 | w |     #2 0x7f18b3f0b000 in _sr_set_module_ds_access /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/sysrepo.c:1817:19
2021-11-25 03:10:27.719553 | w |     #3 0x7f18b3f0a932 in sr_set_module_ds_access /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/sysrepo.c:1867:25
2021-11-25 03:10:27.751217 | w |     #4 0x4fcc3a in main /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/executables/sysrepoctl.c:604:30
2021-11-25 03:10:27.925890 | w |     #5 0x7f18b2f8fb74 in __libc_start_main /usr/src/debug/glibc-2.33/csu/../csu/libc-start.c:332:16
2021-11-25 03:10:27.925959 | w |     #6 0x41c4fd in _start (/home/ci/target/bin/sysrepoctl+0x41c4fd)","ASAN complains that the argument to closedir must non-null. Fixes this kind of error:
2021-11-25 03:10:27.636917 | w | /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:315:14: runtime error: null pointer passed as argument 1, which is declared to never be null
2021-11-25 03:10:27.636989 | w | /usr/include/dirent.h:149:35: note: nonnull attribute specified here
2021-11-25 03:10:27.713450 | w |     #0 0x7f18b4061682 in srpntf_find_file /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:315:5
2021-11-25 03:10:27.713631 | w |     #1 0x7f18b405f6b5 in srpntf_lyb_access_set /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:644:15
2021-11-25 03:10:27.719498 | w |     #2 0x7f18b3f0b000 in _sr_set_module_ds_access /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/sysrepo.c:1817:19
2021-11-25 03:10:27.719553 | w |     #3 0x7f18b3f0a932 in sr_set_module_ds_access /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/sysrepo.c:1867:25
2021-11-25 03:10:27.751217 | w |     #4 0x4fcc3a in main /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/executables/sysrepoctl.c:604:30
2021-11-25 03:10:27.925890 | w |     #5 0x7f18b2f8fb74 in __libc_start_main /usr/src/debug/glibc-2.33/csu/../csu/libc-start.c:332:16
2021-11-25 03:10:27.925959 | w |     #6 0x41c4fd in _start (/home/ci/target/bin/sysrepoctl+0x41c4fd)",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2643,2021-11-25T03:41:08Z,2021-11-25T07:43:08Z,2021-11-25T07:43:08Z,MERGED,True,3,1,1,https://github.com/syyyr,Fix UB in srpntf_find_file,1,[],https://github.com/sysrepo/sysrepo/pull/2643,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2643#issuecomment-978915166,"ASAN complains that the argument to closedir must non-null. Fixes this kind of error:
2021-11-25 03:10:27.636917 | w | /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:315:14: runtime error: null pointer passed as argument 1, which is declared to never be null
2021-11-25 03:10:27.636989 | w | /usr/include/dirent.h:149:35: note: nonnull attribute specified here
2021-11-25 03:10:27.713450 | w |     #0 0x7f18b4061682 in srpntf_find_file /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:315:5
2021-11-25 03:10:27.713631 | w |     #1 0x7f18b405f6b5 in srpntf_lyb_access_set /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/plugins/ntf_lyb.c:644:15
2021-11-25 03:10:27.719498 | w |     #2 0x7f18b3f0b000 in _sr_set_module_ds_access /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/sysrepo.c:1817:19
2021-11-25 03:10:27.719553 | w |     #3 0x7f18b3f0a932 in sr_set_module_ds_access /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/sysrepo.c:1867:25
2021-11-25 03:10:27.751217 | w |     #4 0x4fcc3a in main /home/ci/src/cesnet-gerrit-public/CzechLight/dependencies/sysrepo/src/executables/sysrepoctl.c:604:30
2021-11-25 03:10:27.925890 | w |     #5 0x7f18b2f8fb74 in __libc_start_main /usr/src/debug/glibc-2.33/csu/../csu/libc-start.c:332:16
2021-11-25 03:10:27.925959 | w |     #6 0x41c4fd in _start (/home/ci/target/bin/sysrepoctl+0x41c4fd)","Right, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2644,2021-11-25T11:40:09Z,2021-11-25T12:28:04Z,2021-11-25T12:28:04Z,MERGED,True,2,0,2,https://github.com/hthiery,sysrepo BUGFIX build with musl libc fails due to unknown type name 'm…,1,[],https://github.com/sysrepo/sysrepo/pull/2644,https://github.com/hthiery,1,https://github.com/sysrepo/sysrepo/pull/2644,while updating buildroot package this failure was observed with musl libc,while updating buildroot package this failure was observed with musl libc,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2644,2021-11-25T11:40:09Z,2021-11-25T12:28:04Z,2021-11-25T12:28:04Z,MERGED,True,2,0,2,https://github.com/hthiery,sysrepo BUGFIX build with musl libc fails due to unknown type name 'm…,1,[],https://github.com/sysrepo/sysrepo/pull/2644,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2644#issuecomment-979171224,while updating buildroot package this failure was observed with musl libc,"Fine, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2647,2021-11-27T23:57:01Z,2021-11-29T09:30:56Z,2021-11-29T09:32:51Z,MERGED,True,5,3,1,https://github.com/jktjkt,Fix build when not using CMake's make generator,2,[],https://github.com/sysrepo/sysrepo/pull/2647,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2647,"CMake is a generator which can be used with other tools than just make -- ninja is a good candidate which tends to build a little faster. It's therefore a bug to try invoking make on some target directly.
Test fixtures were introduced to CMake in 3.7 (which means that the version comparison operator was too pessimistic). Since they only work on top of other tests, not targets, the tests_clean needs to become a test. However, in that case it might get happily executed in parallel to the usual testing process, which needs to be avoided via that RUN_SERIAL test property. That is not an equivalent to fixtures, but at least it's enough to serialize its execution with the rest of the test suite. As long as it is listed as the last test in this file, it should work reasonably even on older CMake.
Fixes: 08659bd tests FEATURE clean all files created by tests","CMake is a generator which can be used with other tools than just make -- ninja is a good candidate which tends to build a little faster. It's therefore a bug to try invoking make on some target directly.
Test fixtures were introduced to CMake in 3.7 (which means that the version comparison operator was too pessimistic). Since they only work on top of other tests, not targets, the tests_clean needs to become a test. However, in that case it might get happily executed in parallel to the usual testing process, which needs to be avoided via that RUN_SERIAL test property. That is not an equivalent to fixtures, but at least it's enough to serialize its execution with the rest of the test suite. As long as it is listed as the last test in this file, it should work reasonably even on older CMake.
Fixes: 08659bd tests FEATURE clean all files created by tests",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2647,2021-11-27T23:57:01Z,2021-11-29T09:30:56Z,2021-11-29T09:32:51Z,MERGED,True,5,3,1,https://github.com/jktjkt,Fix build when not using CMake's make generator,2,[],https://github.com/sysrepo/sysrepo/pull/2647,https://github.com/jktjkt,2,https://github.com/sysrepo/sysrepo/pull/2647#issuecomment-981413472,"CMake is a generator which can be used with other tools than just make -- ninja is a good candidate which tends to build a little faster. It's therefore a bug to try invoking make on some target directly.
Test fixtures were introduced to CMake in 3.7 (which means that the version comparison operator was too pessimistic). Since they only work on top of other tests, not targets, the tests_clean needs to become a test. However, in that case it might get happily executed in parallel to the usual testing process, which needs to be avoided via that RUN_SERIAL test property. That is not an equivalent to fixtures, but at least it's enough to serialize its execution with the rest of the test suite. As long as it is listed as the last test in this file, it should work reasonably even on older CMake.
Fixes: 08659bd tests FEATURE clean all files created by tests","Alright, so the problem for you is invoking make directly. However, I would prefer following the principle of as few changes as possible and so the whole change would consist of replacing the make test_clean command with the actual commands.

That would mean that these commands are present twice, which would be a Bad Thing™, but fortunately this thing supports variables.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2647,2021-11-27T23:57:01Z,2021-11-29T09:30:56Z,2021-11-29T09:32:51Z,MERGED,True,5,3,1,https://github.com/jktjkt,Fix build when not using CMake's make generator,2,[],https://github.com/sysrepo/sysrepo/pull/2647,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2647#issuecomment-981419998,"CMake is a generator which can be used with other tools than just make -- ninja is a good candidate which tends to build a little faster. It's therefore a bug to try invoking make on some target directly.
Test fixtures were introduced to CMake in 3.7 (which means that the version comparison operator was too pessimistic). Since they only work on top of other tests, not targets, the tests_clean needs to become a test. However, in that case it might get happily executed in parallel to the usual testing process, which needs to be avoided via that RUN_SERIAL test property. That is not an equivalent to fixtures, but at least it's enough to serialize its execution with the rest of the test suite. As long as it is listed as the last test in this file, it should work reasonably even on older CMake.
Fixes: 08659bd tests FEATURE clean all files created by tests","That would mean that these commands are present twice, which would be a Bad Thing

I agree I just thought it cannot be avoided but not sure why I did not think of simple variables. Almost fine now, just some minor annoyances for me, sorry.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2652,2021-11-30T12:51:19Z,2021-11-30T12:57:39Z,2021-11-30T12:57:40Z,MERGED,True,1,1,1,https://github.com/deastoe,Do not trigger pull callbacks with SR_SUBSCR_ENABLED,1,[],https://github.com/sysrepo/sysrepo/pull/2652,https://github.com/deastoe,1,https://github.com/sysrepo/sysrepo/pull/2652,"Currently if module_change_subscribe() is used to subscribe to a module
in the operational datastore, all operational data pull callbacks are
invoked for the module (even if not included by the subscription XPath)
if SR_SUBSCR_ENABLED is used.
This is not very intuitive since you cannot subscribe to changes to
pull data, only push data, and the change callbacks are unlikely to
be expecting the pull data. So this causes un-necessary system load
to collect data that is not used.
Therefore we prevent any pull callbacks from being invoked by using
SR_OPER_NO_SUBS when collecting data for the enabled callback.
Fixes #2651","Currently if module_change_subscribe() is used to subscribe to a module
in the operational datastore, all operational data pull callbacks are
invoked for the module (even if not included by the subscription XPath)
if SR_SUBSCR_ENABLED is used.
This is not very intuitive since you cannot subscribe to changes to
pull data, only push data, and the change callbacks are unlikely to
be expecting the pull data. So this causes un-necessary system load
to collect data that is not used.
Therefore we prevent any pull callbacks from being invoked by using
SR_OPER_NO_SUBS when collecting data for the enabled callback.
Fixes #2651",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2652,2021-11-30T12:51:19Z,2021-11-30T12:57:39Z,2021-11-30T12:57:40Z,MERGED,True,1,1,1,https://github.com/deastoe,Do not trigger pull callbacks with SR_SUBSCR_ENABLED,1,[],https://github.com/sysrepo/sysrepo/pull/2652,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2652#issuecomment-982611558,"Currently if module_change_subscribe() is used to subscribe to a module
in the operational datastore, all operational data pull callbacks are
invoked for the module (even if not included by the subscription XPath)
if SR_SUBSCR_ENABLED is used.
This is not very intuitive since you cannot subscribe to changes to
pull data, only push data, and the change callbacks are unlikely to
be expecting the pull data. So this causes un-necessary system load
to collect data that is not used.
Therefore we prevent any pull callbacks from being invoked by using
SR_OPER_NO_SUBS when collecting data for the enabled callback.
Fixes #2651","Right, the ideas seem correct to me, merging. Thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2658,2021-12-01T19:21:46Z,2021-12-02T09:53:11Z,2021-12-02T09:53:12Z,MERGED,True,12,1,2,https://github.com/Reshad-Rahman,"Replace malloc(...) by calloc(1, ...) in sr_get_item()",1,[],https://github.com/sysrepo/sysrepo/pull/2658,https://github.com/Reshad-Rahman,1,https://github.com/sysrepo/sysrepo/pull/2658,"This ensures that the origin field is initialized.
Fixes #2657","This ensures that the origin field is initialized.
Fixes #2657",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2662,2021-12-02T22:33:21Z,2021-12-06T09:04:04Z,2021-12-06T09:04:04Z,MERGED,True,1,1,1,https://github.com/syyyr,sysrepoctl BUGFIX init-data argument order,1,[],https://github.com/sysrepo/sysrepo/pull/2662,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2662,"It turns out, that the data_path is actually the second to last
argument, not the third to last (which is memory data).","It turns out, that the data_path is actually the second to last
argument, not the third to last (which is memory data).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2662,2021-12-02T22:33:21Z,2021-12-06T09:04:04Z,2021-12-06T09:04:04Z,MERGED,True,1,1,1,https://github.com/syyyr,sysrepoctl BUGFIX init-data argument order,1,[],https://github.com/sysrepo/sysrepo/pull/2662,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2662#issuecomment-986573111,"It turns out, that the data_path is actually the second to last
argument, not the third to last (which is memory data).","Right, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2672,2021-12-12T18:11:44Z,2021-12-13T08:08:24Z,2021-12-13T08:09:31Z,MERGED,True,1,0,1,https://github.com/jsmolic,sysrepo_types.h: Add missing sys/stat.h include for musl,1,[],https://github.com/sysrepo/sysrepo/pull/2672,https://github.com/jsmolic,1,https://github.com/sysrepo/sysrepo/pull/2672,Bug: https://bugs.gentoo.org/828916,Bug: https://bugs.gentoo.org/828916,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2673,2021-12-12T20:58:34Z,,2021-12-13T08:21:38Z,OPEN,False,537,81,19,https://github.com/oerdnj,WIP: Updated Debian packaging,1,[],https://github.com/sysrepo/sysrepo/pull/2673,https://github.com/oerdnj,1,https://github.com/sysrepo/sysrepo/pull/2673,WIP: This needs better commit message and better comment here.,WIP: This needs better commit message and better comment here.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2676,2021-12-17T06:13:20Z,2021-12-17T09:14:09Z,2021-12-17T09:14:09Z,MERGED,True,1,1,1,https://github.com/jktjkt,build: format-check: invoke `make` in a portable way,1,[],https://github.com/sysrepo/sysrepo/pull/2676,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2676,"I've added uncrustify to my build environment, and as a result the build started failing for me because it tried to invoke make format-check. I use the ninja generator for CMake, which means that there's no Makefile generated in my build directory.
Fix this by invoking the relevant target via CMake.","I've added uncrustify to my build environment, and as a result the build started failing for me because it tried to invoke make format-check. I use the ninja generator for CMake, which means that there's no Makefile generated in my build directory.
Fix this by invoking the relevant target via CMake.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2676,2021-12-17T06:13:20Z,2021-12-17T09:14:09Z,2021-12-17T09:14:09Z,MERGED,True,1,1,1,https://github.com/jktjkt,build: format-check: invoke `make` in a portable way,1,[],https://github.com/sysrepo/sysrepo/pull/2676,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2676#issuecomment-996556575,"I've added uncrustify to my build environment, and as a result the build started failing for me because it tried to invoke make format-check. I use the ninja generator for CMake, which means that there's no Makefile generated in my build directory.
Fix this by invoking the relevant target via CMake.","No problem, merging.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2677,2021-12-17T14:41:53Z,2022-01-07T19:02:07Z,2022-01-07T19:02:16Z,CLOSED,False,5,0,1,https://github.com/bbergquist0930,Doc oper subscr sr subscr oper merge,3,[],https://github.com/sysrepo/sysrepo/pull/2677,https://github.com/bbergquist0930,1,https://github.com/sysrepo/sysrepo/pull/2677,"I struggled in how to implement an operational callback that covers multiple leafs of a container in which the container also contained configuration leafs.   I wanted sysrepo to use the data in the running datastore for the configuration leafs at the same time to have the operation callback handle the state leafs.   And I wanted the operational callback to be called only once for the state leafs if the subscription was for the container and the callback provided all of the state leafs.
I turns out that sysrepo can handle this with the SR_SUBSCR_OPER_MERGE subscription option, just that it is not documented well (at all?) it the developers guide.
Here is my attempt to provide some documentation for this and hopefully help someone else to not struggle like I did.","I struggled in how to implement an operational callback that covers multiple leafs of a container in which the container also contained configuration leafs.   I wanted sysrepo to use the data in the running datastore for the configuration leafs at the same time to have the operation callback handle the state leafs.   And I wanted the operational callback to be called only once for the state leafs if the subscription was for the container and the callback provided all of the state leafs.
I turns out that sysrepo can handle this with the SR_SUBSCR_OPER_MERGE subscription option, just that it is not documented well (at all?) it the developers guide.
Here is my attempt to provide some documentation for this and hopefully help someone else to not struggle like I did.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2677,2021-12-17T14:41:53Z,2022-01-07T19:02:07Z,2022-01-07T19:02:16Z,CLOSED,False,5,0,1,https://github.com/bbergquist0930,Doc oper subscr sr subscr oper merge,3,[],https://github.com/sysrepo/sysrepo/pull/2677,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2677#issuecomment-997170014,"I struggled in how to implement an operational callback that covers multiple leafs of a container in which the container also contained configuration leafs.   I wanted sysrepo to use the data in the running datastore for the configuration leafs at the same time to have the operation callback handle the state leafs.   And I wanted the operational callback to be called only once for the state leafs if the subscription was for the container and the callback provided all of the state leafs.
I turns out that sysrepo can handle this with the SR_SUBSCR_OPER_MERGE subscription option, just that it is not documented well (at all?) it the developers guide.
Here is my attempt to provide some documentation for this and hopefully help someone else to not struggle like I did.","I am sorry you could not figure this out right away but it is a good practice to go through the whole documentation (including options) of a function. I am fine with any documentation improvements but the text you wrote focuses way too much on the fact that some nodes are configuration, some state. This does not make such a difference, you can provide configuration data, too, in your callback and can ""overwrite"" (not using the flag) configuration/state data provided by the previous callback, for example. So please adjust the text and if you are not sure how, I will do it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2677,2021-12-17T14:41:53Z,2022-01-07T19:02:07Z,2022-01-07T19:02:16Z,CLOSED,False,5,0,1,https://github.com/bbergquist0930,Doc oper subscr sr subscr oper merge,3,[],https://github.com/sysrepo/sysrepo/pull/2677,https://github.com/bbergquist0930,3,https://github.com/sysrepo/sysrepo/pull/2677#issuecomment-1006434782,"I struggled in how to implement an operational callback that covers multiple leafs of a container in which the container also contained configuration leafs.   I wanted sysrepo to use the data in the running datastore for the configuration leafs at the same time to have the operation callback handle the state leafs.   And I wanted the operational callback to be called only once for the state leafs if the subscription was for the container and the callback provided all of the state leafs.
I turns out that sysrepo can handle this with the SR_SUBSCR_OPER_MERGE subscription option, just that it is not documented well (at all?) it the developers guide.
Here is my attempt to provide some documentation for this and hopefully help someone else to not struggle like I did.","I am open for suggestions on the text Michal or the pull request can be rejected.
I do know that I had been through the documentation quite a bit and did not realize the importance of this option especially when handling YANG modules which mix configuration and state data within the same container.   Often the state data within the container will be handled by a callback that provides all of the state data for the container in one callback.  Subscribing for the state data with an operational callback at the container level causes one to have to supply the configuration data as well without this option being set and often, or at least in my case, I did not want my callback to also have to supply the configuration data.  I struggled with this use case and went down the path having separate subscriptions for the individual state data items but then ran into the performance problem of having my callbacks called repeatedly even though I supplied all of the state data.
From the current documentation that is not apparent at least to me looking at the documentation from the outside.   Don't forget you are intimately familiar with how Sysrepo works and what might seem to be apparent sometimes is not.
Don't take that as a criticism because really, the documentation and the actual product are actually quite good.  I would just like to see if I could somehow help the next person along that struggles with understanding how this option truly does help in the use case of YANG modules with mixed configuration and state data within a container.  If that can be done, I think it might  be one less question on the issues list that will come up.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2677,2021-12-17T14:41:53Z,2022-01-07T19:02:07Z,2022-01-07T19:02:16Z,CLOSED,False,5,0,1,https://github.com/bbergquist0930,Doc oper subscr sr subscr oper merge,3,[],https://github.com/sysrepo/sysrepo/pull/2677,https://github.com/michalvasko,4,https://github.com/sysrepo/sysrepo/pull/2677#issuecomment-1006480522,"I struggled in how to implement an operational callback that covers multiple leafs of a container in which the container also contained configuration leafs.   I wanted sysrepo to use the data in the running datastore for the configuration leafs at the same time to have the operation callback handle the state leafs.   And I wanted the operational callback to be called only once for the state leafs if the subscription was for the container and the callback provided all of the state leafs.
I turns out that sysrepo can handle this with the SR_SUBSCR_OPER_MERGE subscription option, just that it is not documented well (at all?) it the developers guide.
Here is my attempt to provide some documentation for this and hopefully help someone else to not struggle like I did.","I have nothing against improving the docs but the text needs to remain correct and avoid misleading the reader. Your text was too focused on your exact use-case which is why I refused to merge it, that is all. As you said, my perspective is completely different from that of an average user so it is the users that must point out the unclear parts. I have tried to improve it.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2677,2021-12-17T14:41:53Z,2022-01-07T19:02:07Z,2022-01-07T19:02:16Z,CLOSED,False,5,0,1,https://github.com/bbergquist0930,Doc oper subscr sr subscr oper merge,3,[],https://github.com/sysrepo/sysrepo/pull/2677,https://github.com/bbergquist0930,5,https://github.com/sysrepo/sysrepo/pull/2677#issuecomment-1007659492,"I struggled in how to implement an operational callback that covers multiple leafs of a container in which the container also contained configuration leafs.   I wanted sysrepo to use the data in the running datastore for the configuration leafs at the same time to have the operation callback handle the state leafs.   And I wanted the operational callback to be called only once for the state leafs if the subscription was for the container and the callback provided all of the state leafs.
I turns out that sysrepo can handle this with the SR_SUBSCR_OPER_MERGE subscription option, just that it is not documented well (at all?) it the developers guide.
Here is my attempt to provide some documentation for this and hopefully help someone else to not struggle like I did.",You document update looks good and I think will really help out!,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2679,2021-12-22T14:42:03Z,2022-01-06T08:35:50Z,2022-01-06T08:36:11Z,MERGED,True,14,12,1,https://github.com/mzagozen,Fix perf test,4,[],https://github.com/sysrepo/sysrepo/pull/2679,https://github.com/mzagozen,1,https://github.com/sysrepo/sysrepo/pull/2679,"The performance measurement test mentioned at the end of the readme does not compile with latest version of sysrepo found in the devel branch due to some API changes. I fixed it and added the test to CI. The numbers we get out of the test running on github runners probably won't be consistent, but at least we will know if the test works 🤷","The performance measurement test mentioned at the end of the readme does not compile with latest version of sysrepo found in the devel branch due to some API changes. I fixed it and added the test to CI. The numbers we get out of the test running on github runners probably won't be consistent, but at least we will know if the test works 🤷",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2679,2021-12-22T14:42:03Z,2022-01-06T08:35:50Z,2022-01-06T08:36:11Z,MERGED,True,14,12,1,https://github.com/mzagozen,Fix perf test,4,[],https://github.com/sysrepo/sysrepo/pull/2679,https://github.com/mzagozen,2,https://github.com/sysrepo/sysrepo/pull/2679#issuecomment-999631531,"The performance measurement test mentioned at the end of the readme does not compile with latest version of sysrepo found in the devel branch due to some API changes. I fixed it and added the test to CI. The numbers we get out of the test running on github runners probably won't be consistent, but at least we will know if the test works 🤷",You can see the new CI job running in my fork: https://github.com/mzagozen/sysrepo/runs/4608012574?check_suite_focus=true,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2679,2021-12-22T14:42:03Z,2022-01-06T08:35:50Z,2022-01-06T08:36:11Z,MERGED,True,14,12,1,https://github.com/mzagozen,Fix perf test,4,[],https://github.com/sysrepo/sysrepo/pull/2679,https://github.com/michalvasko,3,https://github.com/sysrepo/sysrepo/pull/2679#issuecomment-1004020193,"The performance measurement test mentioned at the end of the readme does not compile with latest version of sysrepo found in the devel branch due to some API changes. I fixed it and added the test to CI. The numbers we get out of the test running on github runners probably won't be consistent, but at least we will know if the test works 🤷","Right, we forgot to update this special test. Thanks, the code changes look fine but I do not like the rest so if you want this merged, please remove them. Otherwise I will just fix the compilation myself.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2679,2021-12-22T14:42:03Z,2022-01-06T08:35:50Z,2022-01-06T08:36:11Z,MERGED,True,14,12,1,https://github.com/mzagozen,Fix perf test,4,[],https://github.com/sysrepo/sysrepo/pull/2679,https://github.com/mzagozen,4,https://github.com/sysrepo/sysrepo/pull/2679#issuecomment-1006347529,"The performance measurement test mentioned at the end of the readme does not compile with latest version of sysrepo found in the devel branch due to some API changes. I fixed it and added the test to CI. The numbers we get out of the test running on github runners probably won't be consistent, but at least we will know if the test works 🤷","Sure, I removed all but the actual test code changes.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2679,2021-12-22T14:42:03Z,2022-01-06T08:35:50Z,2022-01-06T08:36:11Z,MERGED,True,14,12,1,https://github.com/mzagozen,Fix perf test,4,[],https://github.com/sysrepo/sysrepo/pull/2679,https://github.com/michalvasko,5,https://github.com/sysrepo/sysrepo/pull/2679#issuecomment-1006376659,"The performance measurement test mentioned at the end of the readme does not compile with latest version of sysrepo found in the devel branch due to some API changes. I fixed it and added the test to CI. The numbers we get out of the test running on github runners probably won't be consistent, but at least we will know if the test works 🤷","Alright, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2703,2022-01-25T16:47:21Z,2022-03-10T09:21:43Z,2022-03-10T09:21:43Z,CLOSED,False,2162,74,7,https://github.com/syyyr,Port NACM from Netopeer2,21,[],https://github.com/sysrepo/sysrepo/pull/2703,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2703,"Generic implementation of NACM for sysrepo
Hi, this is my PR for NACM in sysrepo.

 Import the source verbatim
 Make it buildable
 Add helper functions that use NACM automatically (e.g. sr_nacm_apply_changes)
 Figure out tests
 Make this usable in an actual sysrepo app
 Port Netopeer2 to use this","Generic implementation of NACM for sysrepo
Hi, this is my PR for NACM in sysrepo.

 Import the source verbatim
 Make it buildable
 Add helper functions that use NACM automatically (e.g. sr_nacm_apply_changes)
 Figure out tests
 Make this usable in an actual sysrepo app
 Port Netopeer2 to use this",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2703,2022-01-25T16:47:21Z,2022-03-10T09:21:43Z,2022-03-10T09:21:43Z,CLOSED,False,2162,74,7,https://github.com/syyyr,Port NACM from Netopeer2,21,[],https://github.com/sysrepo/sysrepo/pull/2703,https://github.com/apps/lgtm-com,2,https://github.com/sysrepo/sysrepo/pull/2703#issuecomment-1026488875,"Generic implementation of NACM for sysrepo
Hi, this is my PR for NACM in sysrepo.

 Import the source verbatim
 Make it buildable
 Add helper functions that use NACM automatically (e.g. sr_nacm_apply_changes)
 Figure out tests
 Make this usable in an actual sysrepo app
 Port Netopeer2 to use this","This pull request introduces 1 alert when merging 4b69655 into a0bc8c5 - view on LGTM.com
new alerts:

1 for FIXME comment",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2703,2022-01-25T16:47:21Z,2022-03-10T09:21:43Z,2022-03-10T09:21:43Z,CLOSED,False,2162,74,7,https://github.com/syyyr,Port NACM from Netopeer2,21,[],https://github.com/sysrepo/sysrepo/pull/2703,https://github.com/apps/lgtm-com,3,https://github.com/sysrepo/sysrepo/pull/2703#issuecomment-1026732649,"Generic implementation of NACM for sysrepo
Hi, this is my PR for NACM in sysrepo.

 Import the source verbatim
 Make it buildable
 Add helper functions that use NACM automatically (e.g. sr_nacm_apply_changes)
 Figure out tests
 Make this usable in an actual sysrepo app
 Port Netopeer2 to use this","This pull request introduces 1 alert when merging 2bc061d into a0bc8c5 - view on LGTM.com
new alerts:

1 for FIXME comment",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2703,2022-01-25T16:47:21Z,2022-03-10T09:21:43Z,2022-03-10T09:21:43Z,CLOSED,False,2162,74,7,https://github.com/syyyr,Port NACM from Netopeer2,21,[],https://github.com/sysrepo/sysrepo/pull/2703,https://github.com/apps/lgtm-com,4,https://github.com/sysrepo/sysrepo/pull/2703#issuecomment-1027880483,"Generic implementation of NACM for sysrepo
Hi, this is my PR for NACM in sysrepo.

 Import the source verbatim
 Make it buildable
 Add helper functions that use NACM automatically (e.g. sr_nacm_apply_changes)
 Figure out tests
 Make this usable in an actual sysrepo app
 Port Netopeer2 to use this","This pull request introduces 1 alert when merging e558902 into 96ca74f - view on LGTM.com
new alerts:

1 for FIXME comment",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2716,2022-02-03T15:16:48Z,2022-02-03T15:27:09Z,2022-02-03T15:27:09Z,CLOSED,False,122,57,16,https://github.com/irfanHaslanded,test UPDATE use common logging for all tests,2,[],https://github.com/sysrepo/sysrepo/pull/2716,https://github.com/irfanHaslanded,1,https://github.com/sysrepo/sysrepo/pull/2716,"Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures, at a job level.
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.","Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures, at a job level.
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2717,2022-02-03T15:30:27Z,2022-02-07T13:39:43Z,2022-02-07T13:41:23Z,MERGED,True,149,80,18,https://github.com/irfanHaslanded,test UPDATE use common logging for all tests,5,[],https://github.com/sysrepo/sysrepo/pull/2717,https://github.com/irfanHaslanded,1,https://github.com/sysrepo/sysrepo/pull/2717,"Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.","Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2717,2022-02-03T15:30:27Z,2022-02-07T13:39:43Z,2022-02-07T13:41:23Z,MERGED,True,149,80,18,https://github.com/irfanHaslanded,test UPDATE use common logging for all tests,5,[],https://github.com/sysrepo/sysrepo/pull/2717,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2717#issuecomment-1031480926,"Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.","Alright, merged.",True,{'THUMBS_UP': ['https://github.com/irfanHaslanded']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2727,2022-02-17T12:25:01Z,2022-02-17T12:39:33Z,2022-02-17T12:46:23Z,MERGED,True,1,1,1,https://github.com/jktjkt,install: Respect installation prefix for systemd unit file,1,[],https://github.com/sysrepo/sysrepo/pull/2727,https://github.com/jktjkt,1,https://github.com/sysrepo/sysrepo/pull/2727,"When invoking pkg-config, make sure that we substitute the target root with the intended location of the installation. Trying to install into a location where systemd itself lives does not work when:

installing into any staging dir in general (e.g., package builds)
the developer is using their own non-system prefixes
the rootfs is read-only (such as when using ostree)
on NixOS or any distro which puts each package into a spearate root

Rather than requiring everyone to override this variable, make sure it's relative to the installation target.
See-also: https://www.bassi.io/articles/2018/03/15/pkg-config-and-paths/
Bug: https://gitlab.kitware.com/cmake/cmake/-/issues/19632
Fixes: c98389a sysrepo-plugind BUGFIX generate systemd service file
Fixes: 832e142 sysrepo-plugind UPDATE proper systemd service file
Fixes: 040e396 sysrepo-plugind BUGFIX missing service file","When invoking pkg-config, make sure that we substitute the target root with the intended location of the installation. Trying to install into a location where systemd itself lives does not work when:

installing into any staging dir in general (e.g., package builds)
the developer is using their own non-system prefixes
the rootfs is read-only (such as when using ostree)
on NixOS or any distro which puts each package into a spearate root

Rather than requiring everyone to override this variable, make sure it's relative to the installation target.
See-also: https://www.bassi.io/articles/2018/03/15/pkg-config-and-paths/
Bug: https://gitlab.kitware.com/cmake/cmake/-/issues/19632
Fixes: c98389a sysrepo-plugind BUGFIX generate systemd service file
Fixes: 832e142 sysrepo-plugind UPDATE proper systemd service file
Fixes: 040e396 sysrepo-plugind BUGFIX missing service file",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2729,2022-02-18T10:47:00Z,2022-02-21T10:16:10Z,2022-02-22T12:12:02Z,MERGED,True,157,77,17,https://github.com/irfanHaslanded,test UPDATE use common logging for all tests (#2717),2,[],https://github.com/sysrepo/sysrepo/pull/2729,https://github.com/irfanHaslanded,1,https://github.com/sysrepo/sysrepo/pull/2729,"test UPDATE use common logging for all tests

Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.


incorporate review changes


Rename config.h to common.h


Rename common.h to test_common.h


Minor changes remove excess newlines


Co-authored-by: Irfan Mohammad irfan@graphiant.com","test UPDATE use common logging for all tests

Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.


incorporate review changes


Rename config.h to common.h


Rename common.h to test_common.h


Minor changes remove excess newlines


Co-authored-by: Irfan Mohammad irfan@graphiant.com",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2729,2022-02-18T10:47:00Z,2022-02-21T10:16:10Z,2022-02-22T12:12:02Z,MERGED,True,157,77,17,https://github.com/irfanHaslanded,test UPDATE use common logging for all tests (#2717),2,[],https://github.com/sysrepo/sysrepo/pull/2729,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2729#issuecomment-1046663701,"test UPDATE use common logging for all tests

Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.


incorporate review changes


Rename config.h to common.h


Rename common.h to test_common.h


Minor changes remove excess newlines


Co-authored-by: Irfan Mohammad irfan@graphiant.com","It really cannot be compiled
/home/vasko/Documents/sysrepo/tests/measure_performance.c:35:10: fatal error: tests/config.h: No such file or directory",True,{'THUMBS_UP': ['https://github.com/irfanHaslanded']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2729,2022-02-18T10:47:00Z,2022-02-21T10:16:10Z,2022-02-22T12:12:02Z,MERGED,True,157,77,17,https://github.com/irfanHaslanded,test UPDATE use common logging for all tests (#2717),2,[],https://github.com/sysrepo/sysrepo/pull/2729,https://github.com/irfanHaslanded,3,https://github.com/sysrepo/sysrepo/pull/2729#issuecomment-1046696713,"test UPDATE use common logging for all tests

Make all tests use the same callback for logging sysrepo msgs
This allows more control in grepping for errors, and debugging failures
Also provides for timestamp with sec.usec and [pid][tid]
to understand timing issues.


incorporate review changes


Rename config.h to common.h


Rename common.h to test_common.h


Minor changes remove excess newlines


Co-authored-by: Irfan Mohammad irfan@graphiant.com","It really cannot be compiled
/home/vasko/Documents/sysrepo/tests/measure_performance.c:35:10: fatal error: tests/config.h: No such file or directory


My build dir was not clean, and missed the error before. Sorry about that",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2730,2022-02-21T14:50:57Z,2022-05-31T08:22:18Z,2022-05-31T08:22:18Z,CLOSED,False,349,65,5,https://github.com/irfanHaslanded,Draft: Filter subscription notification at producer side,1,[],https://github.com/sysrepo/sysrepo/pull/2730,https://github.com/irfanHaslanded,1,https://github.com/sysrepo/sysrepo/pull/2730,"When a producer creates some changes for a certain module
sysrepo notifies all the subscriber threads, which then
filter based on the xpath, whether the change is relevant or not
By doing the filtering at the producer side, we can reduce the
overhead of notifying many threads and optimize resource use.
This should reduce the overhead of socket notification, locks
and improve commit times.
This is enabled through a new option SR_SUBSCR_PRODUCER_FILTERING
that must be used at the time of subscription.","When a producer creates some changes for a certain module
sysrepo notifies all the subscriber threads, which then
filter based on the xpath, whether the change is relevant or not
By doing the filtering at the producer side, we can reduce the
overhead of notifying many threads and optimize resource use.
This should reduce the overhead of socket notification, locks
and improve commit times.
This is enabled through a new option SR_SUBSCR_PRODUCER_FILTERING
that must be used at the time of subscription.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2730,2022-02-21T14:50:57Z,2022-05-31T08:22:18Z,2022-05-31T08:22:18Z,CLOSED,False,349,65,5,https://github.com/irfanHaslanded,Draft: Filter subscription notification at producer side,1,[],https://github.com/sysrepo/sysrepo/pull/2730,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2730#issuecomment-1047803143,"When a producer creates some changes for a certain module
sysrepo notifies all the subscriber threads, which then
filter based on the xpath, whether the change is relevant or not
By doing the filtering at the producer side, we can reduce the
overhead of notifying many threads and optimize resource use.
This should reduce the overhead of socket notification, locks
and improve commit times.
This is enabled through a new option SR_SUBSCR_PRODUCER_FILTERING
that must be used at the time of subscription.","Looking at the code, I would say you have added the filtering on the producer side but have not removed it on the subscriber side so it works as before except you do some additional redundant filtering. If you remove it, I think it will stop working and the problem I have mentioned before will occur. Not sure why you decided to start implementing some changes with me not agreeing them being possible (the way described) but that is up to you.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2743,2022-03-04T14:09:47Z,2022-03-04T14:39:55Z,2022-03-04T14:39:58Z,MERGED,True,2696,147,17,https://github.com/michalvasko,NACM support,5,[],https://github.com/sysrepo/sysrepo/pull/2743,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/2743,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2744,2022-03-04T18:45:03Z,2022-03-06T13:26:44Z,2022-03-06T13:44:17Z,CLOSED,False,66,1,3,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2744,https://github.com/jorgensigvardsson,1,https://github.com/sysrepo/sysrepo/pull/2744,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2744,2022-03-04T18:45:03Z,2022-03-06T13:26:44Z,2022-03-06T13:44:17Z,CLOSED,False,66,1,3,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2744,https://github.com/jorgensigvardsson,2,https://github.com/sysrepo/sysrepo/pull/2744#issuecomment-1059428580,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","I had worked against an older version of the master branch, hence I got conflicts. When I rebased my branch onto an updated master, I could see that similar changes had been made for systemd. Should I take systemd into account? If running systemd, you probably don't want pid files left and right? Let me know, and I'll adjust for systemd.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2744,2022-03-04T18:45:03Z,2022-03-06T13:26:44Z,2022-03-06T13:44:17Z,CLOSED,False,66,1,3,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2744,https://github.com/jorgensigvardsson,3,https://github.com/sysrepo/sysrepo/pull/2744#issuecomment-1059719238,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","Should I make the pid file a compile time option, just like the systemd integration? Either way works for me (I'm building from source).
Also, I'll rebase onto the devel branch.
By the way, do you know the state of all components involved (to get netopeer2, sysrepo and libyang) on the devel branch(s)? I tried verify my changes by building from master on each, but got some bad error messages about contexts being invalid and whatnot. It could've been me though, because it was Friday evening after a long week. 🥴  Ended up having to comment out irrelevant code paths in srpd and test just the pidfile code path.
Thanks for the review!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2744,2022-03-04T18:45:03Z,2022-03-06T13:26:44Z,2022-03-06T13:44:17Z,CLOSED,False,66,1,3,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2744,https://github.com/jktjkt,4,https://github.com/sysrepo/sysrepo/pull/2744#issuecomment-1059786094,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","Should I make the pid file a compile time option, just like the systemd integration? Either way works for me (I'm building from source).

Better wait for @michalvasko's reply, he's the maintainer.

By the way, do you know the state of all components involved (to get netopeer2, sysrepo and libyang) on the devel branch(s)? I tried verify my changes by building from master on each, but got some bad error messages about contexts being invalid and whatnot. It could've been me though, because it was Friday evening after a long week. woozy_face Ended up having to comment out irrelevant code paths in srpd and test just the pidfile code path.

Our team tends to build from devel of everything quite regularly, so I don't really care that much about master or about releases, but I think the maintainers do care :). In general, it seems to me that master is typically only updated prior to a release, so it ""should"" be stable. In the devel there's an occasional breakage, especially when more intrusive changes are merged -- and the NACM refactoring which went in this Friday looks like a good example of a possible breaking change.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2744,2022-03-04T18:45:03Z,2022-03-06T13:26:44Z,2022-03-06T13:44:17Z,CLOSED,False,66,1,3,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2744,https://github.com/jorgensigvardsson,5,https://github.com/sysrepo/sysrepo/pull/2744#issuecomment-1059965418,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","Sorry, had to reopen a new pull request: #2745",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/jorgensigvardsson,1,https://github.com/sysrepo/sysrepo/pull/2745,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/jorgensigvardsson,2,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1059965601,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","Reopened this PR #2744 as a new one. Could not change target branch of PR, and with my poor git skills, I had to redo my own branch (which dropped the old PR).",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/jorgensigvardsson,3,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1059965769,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","This PR does not always create a PID-file at a default path, instead you have to specify PID with -p on the command line.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/jorgensigvardsson,4,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1060016049,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com",Will replace the snprintf of pid to stack buffer with an asprintf to heap buffer to avoid surprises when/if PID size changes.,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/jorgensigvardsson,5,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1062933589,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","Agreeing with @jktjkt and believing you should use systemd for process synchronization, I am fine with adding this feature if properly organized since you made the effort of making a PR.

In the project I'm working on, there is unfortunately no systemd, and I have no mandate to change to using it either.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/jorgensigvardsson,6,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1062934768,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com",Please let me know if there is anything else I should change! :),True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/apps/lgtm-com,7,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1062937604,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","This pull request introduces 2 alerts when merging 1b8dd77 into 178a3a8 - view on LGTM.com
new alerts:

1 for Local variable hides global variable
1 for Short global name",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/apps/codecov,8,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1062994953,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","Codecov Report

Merging #2745 (178a3a8) into devel (d17c9b1) will increase coverage by 0.00%.
The diff coverage is 0.00%.


❗ Current head 178a3a8 differs from pull request most recent head 2f2a99a. Consider uploading reports for the commit 2f2a99a to get more accurate results

@@           Coverage Diff           @@
##            devel    #2745   +/-   ##
=======================================
  Coverage   56.65%   56.65%           
=======================================
  Files          22       22           
  Lines       16472    16471    -1     
=======================================
  Hits         9331     9331           
+ Misses       7141     7140    -1",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/michalvasko,9,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1063844101,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com",Merged manually.,True,{'HEART': ['https://github.com/jorgensigvardsson']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/jorgensigvardsson,10,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1063869555,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","Seems the formatting is still off but if you are not able to fix it, I will merge it manually and run uncrustify myself.

I tried figure out how to use uncrustify, but got lost in the details. How would you run it (for future reference)?",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/michalvasko,11,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1063872647,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","We have added special support for it so if it is found, you can run make format-check to check that everything is formatted well and make format to actually adjust the formatting of all the source files.",True,{'HEART': ['https://github.com/jorgensigvardsson']}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2745,2022-03-06T13:43:38Z,2022-03-10T09:27:34Z,2022-03-10T09:58:26Z,CLOSED,False,72,2,1,https://github.com/jorgensigvardsson,Let sysrepo-plugind write a pid file,1,[],https://github.com/sysrepo/sysrepo/pull/2745,https://github.com/jorgensigvardsson,12,https://github.com/sysrepo/sysrepo/pull/2745#issuecomment-1063873695,"In systems where daemons depend on each other, it is useful to leave pid
files under /var/run so that init (PID 1) can track dependencies between
daemons, and thus orchestrate their startup times.
The implementation is inspired by the implementation found in netopeer2.
Signed-off-by: Jörgen Sigvardsson jorgen.sigvardsson@gmail.com","Thank you, I'll keep that in mind!",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2753,2022-03-15T10:41:18Z,2022-03-15T11:08:56Z,2022-03-15T11:08:56Z,MERGED,True,17824,10020,115,https://github.com/michalvasko,Devel merge,415,[],https://github.com/sysrepo/sysrepo/pull/2753,https://github.com/michalvasko,1,https://github.com/sysrepo/sysrepo/pull/2753,,,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2753,2022-03-15T10:41:18Z,2022-03-15T11:08:56Z,2022-03-15T11:08:56Z,MERGED,True,17824,10020,115,https://github.com/michalvasko,Devel merge,415,[],https://github.com/sysrepo/sysrepo/pull/2753,https://github.com/apps/codecov,2,https://github.com/sysrepo/sysrepo/pull/2753#issuecomment-1067838977,,"Codecov Report

Merging #2753 (b5e5edd) into master (7529245) will decrease coverage by 1.23%.
The diff coverage is 59.02%.

@@            Coverage Diff             @@
##           master    #2753      +/-   ##
==========================================
- Coverage   61.42%   60.19%   -1.23%     
==========================================
  Files          16       22       +6     
  Lines       13879    16510    +2631     
==========================================
+ Hits         8524     9937    +1413     
- Misses       5355     6573    +1218",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2776,2022-04-08T11:26:59Z,2022-04-21T10:08:10Z,2022-04-21T10:08:11Z,MERGED,True,20,0,2,https://github.com/syyyr,Add sr_retrieve_changes,1,[],https://github.com/sysrepo/sysrepo/pull/2776,https://github.com/syyyr,1,https://github.com/sysrepo/sysrepo/pull/2776,Fixes: #2774,Fixes: #2774,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2780,2022-04-11T13:27:22Z,2022-04-12T06:14:40Z,2022-04-12T08:06:36Z,MERGED,True,1,1,1,https://github.com/deastoe,sysrepo: allow use of SR_SUBSCR_ENABLED with SR_SUBSCR_PASSIVE,1,[],https://github.com/sysrepo/sysrepo/pull/2780,https://github.com/deastoe,1,https://github.com/sysrepo/sysrepo/pull/2780,"This appears to be an API level restriction only, with passive
subscriptions correctly processing enabled events.","This appears to be an API level restriction only, with passive
subscriptions correctly processing enabled events.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2780,2022-04-11T13:27:22Z,2022-04-12T06:14:40Z,2022-04-12T08:06:36Z,MERGED,True,1,1,1,https://github.com/deastoe,sysrepo: allow use of SR_SUBSCR_ENABLED with SR_SUBSCR_PASSIVE,1,[],https://github.com/sysrepo/sysrepo/pull/2780,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2780#issuecomment-1096138634,"This appears to be an API level restriction only, with passive
subscriptions correctly processing enabled events.","This limitation seems to be based only on principle because passive subscriptions do not enable any data. The terminology was inherited from sysrepo v0.7.x and now there are no data being enabled, instead they are present in the operational datastore. In any case, I have nothing against allowing these options to be used together.",True,"{'THUMBS_UP': ['https://github.com/deastoe', 'https://github.com/Reshad-Rahman']}"
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2780,2022-04-11T13:27:22Z,2022-04-12T06:14:40Z,2022-04-12T08:06:36Z,MERGED,True,1,1,1,https://github.com/deastoe,sysrepo: allow use of SR_SUBSCR_ENABLED with SR_SUBSCR_PASSIVE,1,[],https://github.com/sysrepo/sysrepo/pull/2780,https://github.com/deastoe,3,https://github.com/sysrepo/sysrepo/pull/2780#issuecomment-1096314757,"This appears to be an API level restriction only, with passive
subscriptions correctly processing enabled events.",Thanks for filling in the background details @michalvasko!,True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2782,2022-04-12T13:46:31Z,2022-04-13T06:00:02Z,2022-04-13T06:00:02Z,MERGED,True,8,5,2,https://github.com/deastoe,Check sr_diff_ly2sr() return to avoid segfault,2,[],https://github.com/sysrepo/sysrepo/pull/2782,https://github.com/deastoe,1,https://github.com/sysrepo/sysrepo/pull/2782,"sr_diff_ly2sr: initially set return pointer to NULL Help protect against
memory corruption by ensuring the returned pointer value does not contain
garbage.


sr_modinfo_replace: don't link diff if there was an error Check for an
error generating a sysrepo diff from a libyang diff, before linking the
diff with the sr_mod_info_s.
In this error case the sysrepo diff pointer may not be valid, causing
memory corruption and possible segfault.


Diff generation and segfault was observed due to CESNET/libyang#1833","sr_diff_ly2sr: initially set return pointer to NULL Help protect against
memory corruption by ensuring the returned pointer value does not contain
garbage.


sr_modinfo_replace: don't link diff if there was an error Check for an
error generating a sysrepo diff from a libyang diff, before linking the
diff with the sr_mod_info_s.
In this error case the sysrepo diff pointer may not be valid, causing
memory corruption and possible segfault.


Diff generation and segfault was observed due to CESNET/libyang#1833",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2782,2022-04-12T13:46:31Z,2022-04-13T06:00:02Z,2022-04-13T06:00:02Z,MERGED,True,8,5,2,https://github.com/deastoe,Check sr_diff_ly2sr() return to avoid segfault,2,[],https://github.com/sysrepo/sysrepo/pull/2782,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2782#issuecomment-1097590816,"sr_diff_ly2sr: initially set return pointer to NULL Help protect against
memory corruption by ensuring the returned pointer value does not contain
garbage.


sr_modinfo_replace: don't link diff if there was an error Check for an
error generating a sysrepo diff from a libyang diff, before linking the
diff with the sr_mod_info_s.
In this error case the sysrepo diff pointer may not be valid, causing
memory corruption and possible segfault.


Diff generation and segfault was observed due to CESNET/libyang#1833","Thanks, merging.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2785,2022-04-13T13:07:43Z,2022-04-13T13:23:54Z,2022-04-13T13:23:54Z,MERGED,True,1,1,1,https://github.com/deastoe,sr_diff_set_getnext: add missing set bounds checking,1,[],https://github.com/sysrepo/sysrepo/pull/2785,https://github.com/deastoe,1,https://github.com/sysrepo/sysrepo/pull/2785,"Prevent a segfault observed when (skip) iterating list keys by
checking we are still within the bounds of the set.","Prevent a segfault observed when (skip) iterating list keys by
checking we are still within the bounds of the set.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2785,2022-04-13T13:07:43Z,2022-04-13T13:23:54Z,2022-04-13T13:23:54Z,MERGED,True,1,1,1,https://github.com/deastoe,sr_diff_set_getnext: add missing set bounds checking,1,[],https://github.com/sysrepo/sysrepo/pull/2785,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2785#issuecomment-1098046142,"Prevent a segfault observed when (skip) iterating list keys by
checking we are still within the bounds of the set.","Right, thanks.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2789,2022-04-20T11:51:25Z,2022-04-21T14:10:24Z,2022-04-21T14:10:54Z,MERGED,True,99,34,5,https://github.com/jruzicka-nic,rpm UPDATE packaging from Fedora,1,[],https://github.com/sysrepo/sysrepo/pull/2789,https://github.com/jruzicka-nic,1,https://github.com/sysrepo/sysrepo/pull/2789,"Fedora review:
https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=2042998
Fedora package sources:
https://src.fedoraproject.org/rpms/sysrepo","Fedora review:
https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=2042998
Fedora package sources:
https://src.fedoraproject.org/rpms/sysrepo",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2814,2022-05-12T16:03:57Z,2022-05-13T06:22:04Z,2022-05-13T06:23:12Z,MERGED,True,3,5,1,https://github.com/jruzicka-nic,distro UPDATE rpm from Fedora,1,[],https://github.com/sysrepo/sysrepo/pull/2814,https://github.com/jruzicka-nic,1,https://github.com/sysrepo/sysrepo/pull/2814,"Sync improvements suggested in the Fedora review:
https://bugzilla.redhat.com/show_bug.cgi?id=2042998#c8","Sync improvements suggested in the Fedora review:
https://bugzilla.redhat.com/show_bug.cgi?id=2042998#c8",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2823,2022-05-23T12:43:59Z,2022-05-23T13:08:52Z,2022-05-23T13:08:52Z,MERGED,True,1,0,1,https://github.com/peckato1,install: create SRPD_PLUGINS_PATH directory,1,[],https://github.com/sysrepo/sysrepo/pull/2823,https://github.com/peckato1,1,https://github.com/sysrepo/sysrepo/pull/2823,"Sysrepo should install the directories it needs, especially when they
are by default in /usr which can be read-only.
Also the directory should be owned by sysrepo packages.","Sysrepo should install the directories it needs, especially when they
are by default in /usr which can be read-only.
Also the directory should be owned by sysrepo packages.",True,{}
sysrepo/sysrepo,https://github.com/sysrepo/sysrepo,2823,2022-05-23T12:43:59Z,2022-05-23T13:08:52Z,2022-05-23T13:08:52Z,MERGED,True,1,0,1,https://github.com/peckato1,install: create SRPD_PLUGINS_PATH directory,1,[],https://github.com/sysrepo/sysrepo/pull/2823,https://github.com/michalvasko,2,https://github.com/sysrepo/sysrepo/pull/2823#issuecomment-1134657655,"Sysrepo should install the directories it needs, especially when they
are by default in /usr which can be read-only.
Also the directory should be owned by sysrepo packages.","No problem, merged.",True,{}
